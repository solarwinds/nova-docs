{"version":3,"sources":["webpack:///demo/src/components/demo/selector/selector.module.ts?dac5","webpack:///demo/src/components/demo/selector/selector.example.component.html?e9a5","webpack:///demo/src/components/demo/selector/selector.example.component.ts?27b4","webpack:///demo/src/components/demo/selector/selector.module.ts","webpack:///demo/src/components/demo/selector/selector.example.component.ts","webpack:///demo/src/components/demo/selector/selector.example.component.html","webpack:///node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?9544"],"names":["routes","path","component","SelectorModule","provide","useFactory","forChild","SelectorExampleComponent","selection","None","availableStatuses","getMenuItems","All","AllPages","checkBoxStatus","Unchecked","appendToBody","event","Checked","UnselectAll","Indeterminate","arr","resultArr","itemsSource","map","element","push","value","title","onSelectionChange","makeIndeterminate","makeAppendedToBody","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports"],"mappings":"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","file":"demo-selector-selector-module-es5.js","sourcesContent":["export default \"import { NgModule } from \\\"@angular/core\\\";\\nimport { RouterModule } from \\\"@angular/router\\\";\\nimport { DEMO_PATH_TOKEN, NuiDocsModule, NuiSelectorModule } from \\\"@nova-ui/bits\\\";\\n\\nimport { SelectorExampleComponent } from \\\"./selector.example.component\\\";\\n\\nconst routes = [{\\n    path: \\\"\\\",\\n    component: SelectorExampleComponent,\\n}];\\n\\n@NgModule({\\n    imports: [\\n        NuiSelectorModule,\\n        NuiDocsModule,\\n        RouterModule.forChild(routes),\\n    ],\\n    declarations: [\\n        SelectorExampleComponent,\\n    ],\\n    providers: [\\n        {\\n            provide: DEMO_PATH_TOKEN,\\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\\\.(ts|html|less)$/),\\n        },\\n    ],\\n    exports: [\\n        RouterModule,\\n    ],\\n})\\nexport class SelectorModule {\\n}\\n\";","export default \"<h5>selector</h5>\\n<nui-selector \\n        id=\\\"nui-demo-selector\\\"\\n        (selectionChange)=\\\"onSelectionChange($event)\\\"\\n        [checkboxStatus]=\\\"checkBoxStatus\\\"\\n        [appendToBody]=\\\"appendToBody\\\"\\n        [items]=\\\"availableStatuses\\\">\\n</nui-selector>\\n\\n<a href=\\\"javascript:;\\\" (click)=\\\"makeIndeterminate()\\\" id=\\\"nui-demo-make-indeterminate\\\" i18n>Make indeterminate</a>\\n<a href=\\\"javascript:;\\\" (click)=\\\"makeAppendedToBody()\\\" id=\\\"nui-demo-make-appended-to-body\\\" i18n>Make appended to body</a>\\n<pre>[Selection: <span id=\\\"nui-demo-selection-type\\\">{{selection}}</span>, checkbox status: <span id=\\\"nui-demo-indeterminate\\\">{{checkBoxStatus}}</span>]</pre>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\nimport { CheckboxStatus, IMenuGroup, SelectionType } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-selector-example\\\",\\n    templateUrl: \\\"./selector.example.component.html\\\",\\n})\\nexport class SelectorExampleComponent {\\n\\n    public selection: SelectionType = SelectionType.None;\\n    public availableStatuses: IMenuGroup[] = this.getMenuItems([SelectionType.All, SelectionType.AllPages, SelectionType.None]);\\n    public checkBoxStatus: CheckboxStatus = CheckboxStatus.Unchecked;\\n    public appendToBody = false;\\n\\n    public onSelectionChange(event: SelectionType): void {\\n        this.selection = event;\\n\\n        switch (this.selection) {\\n            case SelectionType.All:\\n                this.checkBoxStatus =  CheckboxStatus.Checked;\\n                this.availableStatuses = this.getMenuItems([SelectionType.AllPages, SelectionType.None]);\\n                break;\\n            case SelectionType.AllPages:\\n                this.checkBoxStatus =  CheckboxStatus.Checked;\\n                this.availableStatuses = this.getMenuItems([SelectionType.All, SelectionType.None]);\\n                break;\\n            case SelectionType.None:\\n            case SelectionType.UnselectAll:\\n                this.checkBoxStatus =  CheckboxStatus.Unchecked;\\n                this.availableStatuses = this.getMenuItems([SelectionType.All, SelectionType.AllPages]);\\n                break;\\n        }\\n    }\\n\\n    public makeIndeterminate(): void {\\n        this.checkBoxStatus = CheckboxStatus.Indeterminate;\\n        this.selection = SelectionType.None;\\n    }\\n\\n    public makeAppendedToBody(): void {\\n        this.appendToBody = true;\\n    }\\n\\n    public getMenuItems(arr: SelectionType[]): IMenuGroup[] {\\n        const resultArr: IMenuGroup[] = [{\\n            itemsSource: [],\\n        }];\\n        arr.map((element: SelectionType) => {\\n            resultArr[0].itemsSource.push({ value: element, title: element });\\n        });\\n        return resultArr;\\n    }\\n}\\n\";","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { DEMO_PATH_TOKEN, NuiDocsModule, NuiSelectorModule } from \"@nova-ui/bits\";\n\nimport { SelectorExampleComponent } from \"./selector.example.component\";\n\nconst routes = [{\n    path: \"\",\n    component: SelectorExampleComponent,\n}];\n\n@NgModule({\n    imports: [\n        NuiSelectorModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        SelectorExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class SelectorModule {\n}\n","import { Component } from \"@angular/core\";\nimport { CheckboxStatus, IMenuGroup, SelectionType } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-selector-example\",\n    templateUrl: \"./selector.example.component.html\",\n})\nexport class SelectorExampleComponent {\n\n    public selection: SelectionType = SelectionType.None;\n    public availableStatuses: IMenuGroup[] = this.getMenuItems([SelectionType.All, SelectionType.AllPages, SelectionType.None]);\n    public checkBoxStatus: CheckboxStatus = CheckboxStatus.Unchecked;\n    public appendToBody = false;\n\n    public onSelectionChange(event: SelectionType): void {\n        this.selection = event;\n\n        switch (this.selection) {\n            case SelectionType.All:\n                this.checkBoxStatus =  CheckboxStatus.Checked;\n                this.availableStatuses = this.getMenuItems([SelectionType.AllPages, SelectionType.None]);\n                break;\n            case SelectionType.AllPages:\n                this.checkBoxStatus =  CheckboxStatus.Checked;\n                this.availableStatuses = this.getMenuItems([SelectionType.All, SelectionType.None]);\n                break;\n            case SelectionType.None:\n            case SelectionType.UnselectAll:\n                this.checkBoxStatus =  CheckboxStatus.Unchecked;\n                this.availableStatuses = this.getMenuItems([SelectionType.All, SelectionType.AllPages]);\n                break;\n        }\n    }\n\n    public makeIndeterminate(): void {\n        this.checkBoxStatus = CheckboxStatus.Indeterminate;\n        this.selection = SelectionType.None;\n    }\n\n    public makeAppendedToBody(): void {\n        this.appendToBody = true;\n    }\n\n    public getMenuItems(arr: SelectionType[]): IMenuGroup[] {\n        const resultArr: IMenuGroup[] = [{\n            itemsSource: [],\n        }];\n        arr.map((element: SelectionType) => {\n            resultArr[0].itemsSource.push({ value: element, title: element });\n        });\n        return resultArr;\n    }\n}\n","<h5>selector</h5>\n<nui-selector \n        id=\"nui-demo-selector\"\n        (selectionChange)=\"onSelectionChange($event)\"\n        [checkboxStatus]=\"checkBoxStatus\"\n        [appendToBody]=\"appendToBody\"\n        [items]=\"availableStatuses\">\n</nui-selector>\n\n<a href=\"javascript:;\" (click)=\"makeIndeterminate()\" id=\"nui-demo-make-indeterminate\" i18n>Make indeterminate</a>\n<a href=\"javascript:;\" (click)=\"makeAppendedToBody()\" id=\"nui-demo-make-appended-to-body\" i18n>Make appended to body</a>\n<pre>[Selection: <span id=\"nui-demo-selection-type\">{{selection}}</span>, checkbox status: <span id=\"nui-demo-indeterminate\">{{checkBoxStatus}}</span>]</pre>\n","var map = {\n\t\"./selector.example.component.html\": \"6aWm\",\n\t\"./selector.example.component.ts\": \"J7Rg\",\n\t\"./selector.module.ts\": \"2sVD\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"jhUJ\";"]}