(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[4073],{62224:(l,t,e)=>{var r={"./index.ts":63008,"./spinner-basic/spinner-basic.example.component.html":92321,"./spinner-basic/spinner-basic.example.component.ts":15973,"./spinner-determinate/spinner-determinate.example.component.html":83131,"./spinner-determinate/spinner-determinate.example.component.ts":63309,"./spinner-docs/spinner-docs.example.component.html":50015,"./spinner-docs/spinner-docs.example.component.ts":14995,"./spinner-sizes/spinner-sizes.example.component.html":40085,"./spinner-sizes/spinner-sizes.example.component.ts":58359,"./spinner-test/spinner-test.html":90981,"./spinner-test/spinner-test.ts":7904,"./spinner-visual-test/spinner-visual-test.component.html":44206,"./spinner-visual-test/spinner-visual-test.component.ts":91307,"./spinner-with-cancel/spinner-with-cancel.example.component.html":76892,"./spinner-with-cancel/spinner-with-cancel.example.component.ts":67088,"./spinner-with-delay-toggle/spinner-with-delay-toggle.example.component.html":37461,"./spinner-with-delay-toggle/spinner-with-delay-toggle.example.component.ts":28493,"./spinner-with-text/spinner-with-text.example.component.html":61468,"./spinner-with-text/spinner-with-text.example.component.ts":89764,"./spinner.module.ts":58532,"components/demo/spinner/index.ts":63008,"components/demo/spinner/spinner-basic/spinner-basic.example.component.html":92321,"components/demo/spinner/spinner-basic/spinner-basic.example.component.ts":15973,"components/demo/spinner/spinner-determinate/spinner-determinate.example.component.html":83131,"components/demo/spinner/spinner-determinate/spinner-determinate.example.component.ts":63309,"components/demo/spinner/spinner-docs/spinner-docs.example.component.html":50015,"components/demo/spinner/spinner-docs/spinner-docs.example.component.ts":14995,"components/demo/spinner/spinner-sizes/spinner-sizes.example.component.html":40085,"components/demo/spinner/spinner-sizes/spinner-sizes.example.component.ts":58359,"components/demo/spinner/spinner-test/spinner-test.html":90981,"components/demo/spinner/spinner-test/spinner-test.ts":7904,"components/demo/spinner/spinner-visual-test/spinner-visual-test.component.html":44206,"components/demo/spinner/spinner-visual-test/spinner-visual-test.component.ts":91307,"components/demo/spinner/spinner-with-cancel/spinner-with-cancel.example.component.html":76892,"components/demo/spinner/spinner-with-cancel/spinner-with-cancel.example.component.ts":67088,"components/demo/spinner/spinner-with-delay-toggle/spinner-with-delay-toggle.example.component.html":37461,"components/demo/spinner/spinner-with-delay-toggle/spinner-with-delay-toggle.example.component.ts":28493,"components/demo/spinner/spinner-with-text/spinner-with-text.example.component.html":61468,"components/demo/spinner/spinner-with-text/spinner-with-text.example.component.ts":89764,"components/demo/spinner/spinner.module.ts":58532};function c(h){var p=n(h);return e(p)}function n(h){if(!e.o(r,h)){var p=new Error("Cannot find module '"+h+"'");throw p.code="MODULE_NOT_FOUND",p}return r[h]}c.keys=function(){return Object.keys(r)},c.resolve=n,l.exports=c,c.id=62224},94073:(l,t,e)=>{"use strict";e.r(t),e.d(t,{SpinnerModule:()=>f});var r=e(11420),c=e(45776),n=e(5e3),h=e(62698),p=e(52562);let d=(()=>{class i{}return i.\u0275fac=function(s){return new(s||i)},i.\u0275cmp=n.Xpm({type:i,selectors:[["nui-spinner-basic-example"]],decls:1,vars:1,consts:[[3,"show"]],template:function(s,o){1&s&&n._UZ(0,"nui-spinner",0),2&s&&n.Q6J("show",!0)},directives:[p.O],encapsulation:2}),i})(),m=(()=>{class i{}return i.\u0275fac=function(s){return new(s||i)},i.\u0275cmp=n.Xpm({type:i,selectors:[["nui-spinner-sizes-example"]],decls:1,vars:1,consts:[["size","large",3,"show"]],template:function(s,o){1&s&&n._UZ(0,"nui-spinner",0),2&s&&n.Q6J("show",!0)},directives:[p.O],encapsulation:2}),i})(),E=(()=>{class i{}return i.\u0275fac=function(s){return new(s||i)},i.\u0275cmp=n.Xpm({type:i,selectors:[["nui-spinner-with-text-example"]],decls:1,vars:1,consts:function(){let a,s;return a=$localize`:␟0e90f0b5f7219bbb39234ecaf2933b0f8f437345␟6272229524073167827:Task Label`,s=$localize`:␟2212c4ea193c4d34f96198c84673338800cf7da5␟5479956740377309255:Optional description`,[["size","large","message",a,"helpText",s,3,"show"]]},template:function(s,o){1&s&&n._UZ(0,"nui-spinner",0),2&s&&n.Q6J("show",!0)},directives:[p.O],encapsulation:2}),i})();var T=e(73417);let S=(()=>{class i{constructor(){this.show=!1,this.spinPercentage=0,this.interval=void 0}toggleSpinners(){this.show=!this.show,this.show?this.startProgress():this.onCancel()}startProgress(){this.clearInterval(),this.interval=setInterval(()=>{this.spinPercentage<100?this.spinPercentage+=10:this.onCancel()},500)}onCancel(){this.clearInterval(),this.show=!1,this.spinPercentage=0}ngOnDestroy(){this.clearInterval()}clearInterval(){this.interval&&(clearInterval(this.interval),this.interval=void 0)}}return i.\u0275fac=function(s){return new(s||i)},i.\u0275cmp=n.Xpm({type:i,selectors:[["nui-spinner-determinate-example"]],decls:4,vars:4,consts:function(){let a;return a=$localize`:␟111657fbd8e05c9f68da1bb281a64c3284b4a134␟1188051607297463158: Start/stop progress
`,[["nui-button","","type","button","displayStyle","primary",3,"click"],a,[3,"show","percent"],["size","large",3,"show","percent"]]},template:function(s,o){1&s&&(n.TgZ(0,"button",0),n.NdJ("click",function(){return o.toggleSpinners()}),n.SDv(1,1),n.qZA(),n._UZ(2,"nui-spinner",2)(3,"nui-spinner",3)),2&s&&(n.xp6(2),n.Q6J("show",o.show)("percent",o.spinPercentage),n.xp6(1),n.Q6J("show",o.show)("percent",o.spinPercentage))},directives:[T.r,p.O],encapsulation:2}),i})(),O=(()=>{class i{constructor(){this.show=!1,this.spinPercentage=0,this.isCanceled=!1,this.interval=void 0}toggleSpinners(){this.show=!this.show,this.show?this.startProgress():this.onCancel()}startProgress(){this.clearInterval(),this.interval=setInterval(()=>{this.spinPercentage<100?this.spinPercentage+=10:this.onCancel()},500)}onCancel(){this.clearInterval(),this.isCanceled=!0,this.show=!1,this.spinPercentage=0}ngOnDestroy(){this.clearInterval()}clearInterval(){this.interval&&(clearInterval(this.interval),this.interval=void 0)}}return i.\u0275fac=function(s){return new(s||i)},i.\u0275cmp=n.Xpm({type:i,selectors:[["nui-spinner-with-cancel-example"]],decls:4,vars:6,consts:[["nui-button","","type","button","displayStyle","primary",3,"click"],[3,"show","percent","allowCancel","cancel"],["size","large",3,"show","percent","allowCancel","cancel"]],template:function(s,o){1&s&&(n.TgZ(0,"button",0),n.NdJ("click",function(){return o.toggleSpinners()}),n._uU(1," Start/stop progress\n"),n.qZA(),n.TgZ(2,"nui-spinner",1),n.NdJ("cancel",function(){return o.onCancel()}),n.qZA(),n.TgZ(3,"nui-spinner",2),n.NdJ("cancel",function(){return o.onCancel()}),n.qZA()),2&s&&(n.xp6(2),n.Q6J("show",o.show)("percent",o.spinPercentage)("allowCancel",!0),n.xp6(1),n.Q6J("show",o.show)("percent",o.spinPercentage)("allowCancel",!0))},directives:[T.r,p.O],encapsulation:2}),i})(),I=(()=>{class i{constructor(){this.show=!1,this.spinPercentage=0,this.isCanceled=!1,this.interval=void 0}toggleSpinners(){this.show=!this.show,this.show?this.startProgress():this.onCancel()}startProgress(){this.clearInterval(),this.interval=setInterval(()=>{this.spinPercentage<100?this.spinPercentage+=10:this.onCancel()},500)}onCancel(){this.clearInterval(),this.isCanceled=!0,this.show=!1,this.spinPercentage=0}ngOnDestroy(){this.clearInterval()}clearInterval(){this.interval&&(clearInterval(this.interval),this.interval=void 0)}}return i.\u0275fac=function(s){return new(s||i)},i.\u0275cmp=n.Xpm({type:i,selectors:[["nui-spinner-with-delay-toggle-example"]],decls:4,vars:6,consts:function(){let a;return a=$localize`:␟111657fbd8e05c9f68da1bb281a64c3284b4a134␟1188051607297463158: Start/stop progress
`,[["nui-button","","type","button","id","spinnerButton1","displayStyle","primary",3,"click"],a,["id","spinner1",3,"show","percent","delay"],["size","large",3,"show","percent","delay"]]},template:function(s,o){1&s&&(n.TgZ(0,"button",0),n.NdJ("click",function(){return o.toggleSpinners()}),n.SDv(1,1),n.qZA(),n._UZ(2,"nui-spinner",2)(3,"nui-spinner",3)),2&s&&(n.xp6(2),n.Q6J("show",o.show)("percent",o.spinPercentage)("delay",500),n.xp6(1),n.Q6J("show",o.show)("percent",o.spinPercentage)("delay",1e3))},directives:[T.r,p.O],encapsulation:2}),i})();const A=[{path:"",component:(()=>{class i{}return i.\u0275fac=function(s){return new(s||i)},i.\u0275cmp=n.Xpm({type:i,selectors:[["nui-spinner-docs-example"]],decls:84,vars:0,consts:[["filenamePrefix","spinner-basic","exampleTitle","Basic Usage"],["filenamePrefix","spinner-sizes","exampleTitle","Sizes"],["filenamePrefix","spinner-with-text","exampleTitle","Indeterminate With Text"],["filenamePrefix","spinner-determinate","exampleTitle","Determinate Progress"],["filenamePrefix","spinner-with-cancel","exampleTitle","Determinate Progress With Cancel"],["filenamePrefix","spinner-with-delay-toggle","exampleTitle","Delayed Appearance"]],template:function(s,o){1&s&&(n.TgZ(0,"h2"),n._uU(1,"Required Modules"),n.qZA(),n.TgZ(2,"ul")(3,"li")(4,"code"),n._uU(5,"NuiSpinnerModule"),n.qZA()()(),n.TgZ(6,"h2"),n._uU(7,"Basic Usage"),n.qZA(),n.TgZ(8,"p"),n._uU(9," In order to use spinner component, you need to pass "),n.TgZ(10,"code"),n._uU(11,"show"),n.qZA(),n._uU(12," binding.\n"),n.qZA(),n.TgZ(13,"nui-example-wrapper",0),n._UZ(14,"nui-spinner-basic-example"),n.qZA(),n.TgZ(15,"h2"),n._uU(16,"Size Setting"),n.qZA(),n.TgZ(17,"p"),n._uU(18," Spinner supports two sizes: large and small. The default is small. For a larger spinner, you can pass "),n.TgZ(19,"code"),n._uU(20,"large"),n.qZA(),n._uU(21," to the "),n.TgZ(22,"code"),n._uU(23,"size"),n.qZA(),n._uU(24," input.\n"),n.qZA(),n.TgZ(25,"nui-example-wrapper",1),n._UZ(26,"nui-spinner-sizes-example"),n.qZA(),n.TgZ(27,"h2"),n._uU(28,"Adding Text"),n.qZA(),n.TgZ(29,"p"),n._uU(30," Spinner label could be placed on the right side. You only need to pass "),n.TgZ(31,"code"),n._uU(32,"message"),n.qZA(),n._uU(33," string for that. In order to display additional help text on the right side you need to pass "),n.TgZ(34,"code"),n._uU(35,"helpText"),n.qZA(),n._uU(36," string. "),n.TgZ(37,"strong"),n._uU(38,"Note:"),n.qZA(),n._uU(39," In order to display the help text, the "),n.TgZ(40,"code"),n._uU(41,"size"),n.qZA(),n._uU(42," input must be set to "),n.TgZ(43,"code"),n._uU(44,"large"),n.qZA(),n._uU(45,".\n"),n.qZA(),n.TgZ(46,"nui-example-wrapper",2),n._UZ(47,"nui-spinner-with-text-example"),n.qZA(),n.TgZ(48,"h2"),n._uU(49,"Determinate Progress"),n.qZA(),n.TgZ(50,"p"),n._uU(51," To enable determinate progress, set the "),n.TgZ(52,"code"),n._uU(53,"percent"),n.qZA(),n._uU(54," input and pass updates to it with numbers between 0 and 100.\n"),n.qZA(),n.TgZ(55,"nui-example-wrapper",3),n._UZ(56,"nui-spinner-determinate-example"),n.qZA(),n.TgZ(57,"h2"),n._uU(58,"Enabling Cancellation"),n.qZA(),n.TgZ(59,"p"),n._uU(60," The spinner can be set to allow cancellation by passing true to the "),n.TgZ(61,"code"),n._uU(62,"allowCancel"),n.qZA(),n._uU(63," input. To take action on a cancellation, pass a handler to the "),n.TgZ(64,"code"),n._uU(65,"cancel"),n.qZA(),n._uU(66," output.\n"),n.qZA(),n.TgZ(67,"nui-example-wrapper",4),n._UZ(68,"nui-spinner-with-cancel-example"),n.qZA(),n.TgZ(69,"h2"),n._uU(70,"Modifying Delayed Appearance"),n.qZA(),n.TgZ(71,"p"),n._uU(72," To mitigate the possibility of a blink effect that may happen due to the show/hide timing, you can optionally set the "),n.TgZ(73,"code"),n._uU(74,"delay"),n.qZA(),n._uU(75," input in milliseconds. As the name implies, this input can be used to override the delay before showing the spinner for the specified duration after the "),n.TgZ(76,"code"),n._uU(77,"show"),n.qZA(),n._uU(78," input value changes to true. The default value for the "),n.TgZ(79,"code"),n._uU(80,"delay"),n.qZA(),n._uU(81," input is 250.\n"),n.qZA(),n.TgZ(82,"nui-example-wrapper",5),n._UZ(83,"nui-spinner-with-delay-toggle-example"),n.qZA())},directives:[h.h,d,m,E,S,O,I],encapsulation:2}),i})(),data:{srlc:{stage:c.We9.ga},showThemeSwitcher:!0}},{path:"spinner-test",component:(()=>{class i{}return i.\u0275fac=function(s){return new(s||i)},i.\u0275cmp=n.Xpm({type:i,selectors:[["nui-spinner-e2e"]],decls:9,vars:5,consts:function(){let a,s;return a=$localize`:␟65f3e20a55ba02998943304521f9e0c620ca4446␟2789920476705808993: toggle delayed spinner `,s=$localize`:␟7eca1ddbb9b1897c3e8d67f1274857fded60717b␟7038901628003010034: toggle default spinner `,[[1,"p-3"],["nui-button","","type","button","id","spinnerButton1","displayStyle","primary",1,"mr-3",3,"click"],a,["id","spinner1",3,"show","percent","delay"],["nui-button","","type","button","id","spinnerButton2","displayStyle","primary",1,"mr-3",3,"click"],s,["id","spinner2",3,"show"]]},template:function(s,o){1&s&&(n.TgZ(0,"div")(1,"div",0)(2,"button",1),n.NdJ("click",function(){return o.show1=!o.show1}),n.SDv(3,2),n.qZA(),n._UZ(4,"nui-spinner",3),n.qZA(),n.TgZ(5,"div",0)(6,"button",4),n.NdJ("click",function(){return o.show2=!o.show2}),n.SDv(7,5),n.qZA(),n._UZ(8,"nui-spinner",6),n.qZA()()),2&s&&(n.Q6J("@.disabled",!0),n.xp6(4),n.Q6J("show",o.show1)("percent",o.spinPercentage)("delay",500),n.xp6(4),n.Q6J("show",o.show2))},directives:[T.r,p.O],encapsulation:2,changeDetection:0}),i})()},{path:"spinner-visual-test",component:(()=>{class i{constructor(){this.show=!0,this.showWithCancel=!0,this.isCanceled=!1,this.spinPercentage=0}onCancel(){this.showWithCancel=!1,this.isCanceled=!0}}return i.\u0275fac=function(s){return new(s||i)},i.\u0275cmp=n.Xpm({type:i,selectors:[["nui-spinner-visual"]],decls:25,vars:16,consts:[[1,"container"],[3,"show"],["size","large",3,"show"],["message","Task Label","helpText","Optional description",3,"show"],["size","large","message","Task Label","helpText","Optional description",3,"show"],[3,"show","percent"],["size","large",3,"show","percent"],["size","large","message","Task Label","helpText","Optional description",3,"show","percent"],[3,"show","percent","allowCancel","cancel"],["size","large","id","nui-spinner-large-cancel",3,"show","percent","allowCancel","cancel"]],template:function(s,o){1&s&&(n.TgZ(0,"div",0)(1,"h4"),n._uU(2,"Basic spinner"),n.qZA(),n._UZ(3,"nui-spinner",1)(4,"hr"),n.TgZ(5,"h4"),n._uU(6,"Big spinner"),n.qZA(),n._UZ(7,"nui-spinner",2)(8,"hr"),n.TgZ(9,"h4"),n._uU(10,"Indetermined spinner with text"),n.qZA(),n._UZ(11,"nui-spinner",3)(12,"nui-spinner",4)(13,"hr"),n.TgZ(14,"h4"),n._uU(15,"Determined spinner with text"),n.qZA(),n._UZ(16,"nui-spinner",5)(17,"nui-spinner",6)(18,"nui-spinner",7)(19,"hr"),n.TgZ(20,"h4"),n._uU(21,"Spinner with cancellation"),n.qZA(),n.TgZ(22,"nui-spinner",8),n.NdJ("cancel",function(){return o.onCancel()}),n.qZA(),n.TgZ(23,"nui-spinner",9),n.NdJ("cancel",function(){return o.onCancel()}),n.qZA(),n._UZ(24,"hr"),n.qZA()),2&s&&(n.xp6(3),n.Q6J("show",o.show),n.xp6(4),n.Q6J("show",o.show),n.xp6(4),n.Q6J("show",o.show),n.xp6(1),n.Q6J("show",o.show),n.xp6(4),n.Q6J("show",o.show)("percent",o.spinPercentage),n.xp6(1),n.Q6J("show",o.show)("percent",o.spinPercentage),n.xp6(1),n.Q6J("show",o.show)("percent",o.spinPercentage),n.xp6(4),n.Q6J("show",o.showWithCancel)("percent",o.spinPercentage)("allowCancel",!0),n.xp6(1),n.Q6J("show",o.showWithCancel)("percent",o.spinPercentage)("allowCancel",!0))},directives:[p.O],styles:["nui-spinner[_ngcontent-%COMP%] {\n        margin: 0px 10px;\n    }"]}),i})(),data:{srlc:{hideIndicator:!0}}}];let f=(()=>{class i{}return i.\u0275fac=function(s){return new(s||i)},i.\u0275mod=n.oAB({type:i}),i.\u0275inj=n.cJS({providers:[{provide:c.V3$,useFactory:()=>e(62224)}],imports:[[c.Az_,c.ILf,c.vvu,r.Bz.forChild(A)],r.Bz]}),i})()},63008:(l,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});const r='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport { SpinnerExampleComponent } from "./spinner-docs/spinner-docs.example.component";\nexport { SpinnerBasicExampleComponent } from "./spinner-basic/spinner-basic.example.component";\nexport { SpinnerDeterminateExampleComponent } from "./spinner-determinate/spinner-determinate.example.component";\nexport { SpinnerWithCancelExampleComponent } from "./spinner-with-cancel/spinner-with-cancel.example.component";\nexport { SpinnerWithDelayToggleExampleComponent } from "./spinner-with-delay-toggle/spinner-with-delay-toggle.example.component";\nexport { SpinnerSizesExampleComponent } from "./spinner-sizes/spinner-sizes.example.component";\nexport { SpinnerWithTextExampleComponent } from "./spinner-with-text/spinner-with-text.example.component";\nexport { SpinnerTestComponent } from "./spinner-test/spinner-test";\nexport { SpinnerVisualTestComponent } from "./spinner-visual-test/spinner-visual-test.component";\n'},92321:(l,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});const r='<nui-spinner [show]="true"></nui-spinner>\n'},15973:(l,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});const r='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-spinner-basic-example",\n    templateUrl: "./spinner-basic.example.component.html",\n})\nexport class SpinnerBasicExampleComponent {}\n'},83131:(l,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});const r='<button\n    nui-button\n    type="button"\n    (click)="toggleSpinners()"\n    displayStyle="primary"\n    i18n\n>\n    Start/stop progress\n</button>\n<nui-spinner [show]="show" [percent]="spinPercentage"> </nui-spinner>\n\n<nui-spinner size="large" [show]="show" [percent]="spinPercentage">\n</nui-spinner>\n'},63309:(l,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});const r='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnDestroy } from "@angular/core";\n\n@Component({\n    selector: "nui-spinner-determinate-example",\n    templateUrl: "./spinner-determinate.example.component.html",\n})\nexport class SpinnerDeterminateExampleComponent implements OnDestroy {\n    public show = false;\n    public spinPercentage = 0;\n\n    private interval: any = undefined;\n\n    public toggleSpinners(): void {\n        this.show = !this.show;\n        this.show ? this.startProgress() : this.onCancel();\n    }\n\n    public startProgress(): void {\n        this.clearInterval();\n        this.interval = setInterval(() => {\n            this.spinPercentage < 100\n                ? (this.spinPercentage += 10)\n                : this.onCancel();\n        }, 500);\n    }\n\n    public onCancel(): void {\n        this.clearInterval();\n        this.show = false;\n        this.spinPercentage = 0;\n    }\n\n    public ngOnDestroy(): void {\n        this.clearInterval();\n    }\n\n    private clearInterval() {\n        if (this.interval) {\n            clearInterval(this.interval);\n            this.interval = undefined;\n        }\n    }\n}\n'},50015:(l,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});const r='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiSpinnerModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n\n<p>\n    In order to use spinner component, you need to pass\n    <code>show</code> binding.\n</p>\n\n<nui-example-wrapper filenamePrefix="spinner-basic" exampleTitle="Basic Usage">\n    <nui-spinner-basic-example></nui-spinner-basic-example>\n</nui-example-wrapper>\n\n<h2>Size Setting</h2>\n\n<p>\n    Spinner supports two sizes: large and small. The default is small. For a\n    larger spinner, you can pass <code>large</code> to the\n    <code>size</code> input.\n</p>\n\n<nui-example-wrapper filenamePrefix="spinner-sizes" exampleTitle="Sizes">\n    <nui-spinner-sizes-example></nui-spinner-sizes-example>\n</nui-example-wrapper>\n\n<h2>Adding Text</h2>\n\n<p>\n    Spinner label could be placed on the right side. You only need to pass\n    <code>message</code> string for that. In order to display additional help\n    text on the right side you need to pass <code>helpText</code> string.\n    <strong>Note:</strong> In order to display the help text, the\n    <code>size</code> input must be set to <code>large</code>.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="spinner-with-text"\n    exampleTitle="Indeterminate With Text"\n>\n    <nui-spinner-with-text-example></nui-spinner-with-text-example>\n</nui-example-wrapper>\n\n<h2>Determinate Progress</h2>\n\n<p>\n    To enable determinate progress, set the <code>percent</code> input and pass\n    updates to it with numbers between 0 and 100.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="spinner-determinate"\n    exampleTitle="Determinate Progress"\n>\n    <nui-spinner-determinate-example></nui-spinner-determinate-example>\n</nui-example-wrapper>\n\n<h2>Enabling Cancellation</h2>\n\n<p>\n    The spinner can be set to allow cancellation by passing true to the\n    <code>allowCancel</code> input. To take action on a cancellation, pass a\n    handler to the <code>cancel</code> output.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="spinner-with-cancel"\n    exampleTitle="Determinate Progress With Cancel"\n>\n    <nui-spinner-with-cancel-example></nui-spinner-with-cancel-example>\n</nui-example-wrapper>\n\n<h2>Modifying Delayed Appearance</h2>\n\n<p>\n    To mitigate the possibility of a blink effect that may happen due to the\n    show/hide timing, you can optionally set the <code>delay</code> input in\n    milliseconds. As the name implies, this input can be used to override the\n    delay before showing the spinner for the specified duration after the\n    <code>show</code> input value changes to true. The default value for the\n    <code>delay</code> input is 250.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="spinner-with-delay-toggle"\n    exampleTitle="Delayed Appearance"\n>\n    <nui-spinner-with-delay-toggle-example></nui-spinner-with-delay-toggle-example>\n</nui-example-wrapper>\n'},14995:(l,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});const r='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-spinner-docs-example",\n    templateUrl: "./spinner-docs.example.component.html",\n})\nexport class SpinnerExampleComponent {}\n'},40085:(l,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});const r='<nui-spinner size="large" [show]="true"></nui-spinner>\n'},58359:(l,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});const r='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-spinner-sizes-example",\n    templateUrl: "./spinner-sizes.example.component.html",\n})\nexport class SpinnerSizesExampleComponent {}\n'},90981:(l,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});const r='<div [@.disabled]="true">\n    <div class="p-3">\n        <button\n            nui-button\n            type="button"\n            class="mr-3"\n            id="spinnerButton1"\n            (click)="show1 = !show1"\n            displayStyle="primary"\n            i18n\n        >\n            toggle delayed spinner\n        </button>\n        <nui-spinner\n            id="spinner1"\n            [show]="show1"\n            [percent]="spinPercentage"\n            [delay]="500"\n        >\n        </nui-spinner>\n    </div>\n\n    <div class="p-3">\n        <button\n            nui-button\n            type="button"\n            class="mr-3"\n            id="spinnerButton2"\n            (click)="show2 = !show2"\n            displayStyle="primary"\n            i18n\n        >\n            toggle default spinner\n        </button>\n        <nui-spinner id="spinner2" [show]="show2"> </nui-spinner>\n    </div>\n</div>\n'},7904:(l,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});const r='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { ChangeDetectionStrategy, Component } from "@angular/core";\n\n@Component({\n    selector: "nui-spinner-e2e",\n    templateUrl: "./spinner-test.html",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SpinnerTestComponent {\n    public show1: boolean;\n    public show2: boolean;\n    public spinPercentage: number;\n}\n'},44206:(l,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});const r='<style>\n    nui-spinner {\n        margin: 0px 10px;\n    }\n</style>\n<div class="container">\n    <h4>Basic spinner</h4>\n    <nui-spinner [show]="show"></nui-spinner>\n    <hr />\n\n    <h4>Big spinner</h4>\n    <nui-spinner size="large" [show]="show"></nui-spinner>\n    <hr />\n\n    <h4>Indetermined spinner with text</h4>\n    <nui-spinner\n        [show]="show"\n        message="Task Label"\n        helpText="Optional description"\n    >\n    </nui-spinner>\n    <nui-spinner\n        size="large"\n        [show]="show"\n        message="Task Label"\n        helpText="Optional description"\n    >\n    </nui-spinner>\n    <hr />\n\n    <h4>Determined spinner with text</h4>\n    <nui-spinner [show]="show" [percent]="spinPercentage"> </nui-spinner>\n    <nui-spinner size="large" [show]="show" [percent]="spinPercentage">\n    </nui-spinner>\n    <nui-spinner\n        size="large"\n        [show]="show"\n        [percent]="spinPercentage"\n        message="Task Label"\n        helpText="Optional description"\n    >\n    </nui-spinner>\n    <hr />\n\n    <h4>Spinner with cancellation</h4>\n    <nui-spinner\n        [show]="showWithCancel"\n        [percent]="spinPercentage"\n        [allowCancel]="true"\n        (cancel)="onCancel()"\n    >\n    </nui-spinner>\n    <nui-spinner\n        size="large"\n        [show]="showWithCancel"\n        [percent]="spinPercentage"\n        [allowCancel]="true"\n        (cancel)="onCancel()"\n        id="nui-spinner-large-cancel"\n    >\n    </nui-spinner>\n    <hr />\n</div>\n'},91307:(l,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});const r='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-spinner-visual",\n    templateUrl: "./spinner-visual-test.component.html",\n})\nexport class SpinnerVisualTestComponent {\n    public show: boolean = true;\n    public showWithCancel: boolean = true;\n    public isCanceled: boolean = false;\n    public spinPercentage: number = 0;\n\n    public onCancel(): void {\n        this.showWithCancel = false;\n        this.isCanceled = true;\n    }\n}\n'},76892:(l,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});const r='<button\n    nui-button\n    type="button"\n    (click)="toggleSpinners()"\n    displayStyle="primary"\n>\n    Start/stop progress\n</button>\n<nui-spinner\n    [show]="show"\n    [percent]="spinPercentage"\n    [allowCancel]="true"\n    (cancel)="onCancel()"\n>\n</nui-spinner>\n\n<nui-spinner\n    size="large"\n    [show]="show"\n    [percent]="spinPercentage"\n    [allowCancel]="true"\n    (cancel)="onCancel()"\n>\n</nui-spinner>\n'},67088:(l,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});const r='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnDestroy } from "@angular/core";\n\n@Component({\n    selector: "nui-spinner-with-cancel-example",\n    templateUrl: "./spinner-with-cancel.example.component.html",\n})\nexport class SpinnerWithCancelExampleComponent implements OnDestroy {\n    public show = false;\n    public spinPercentage = 0;\n    public isCanceled = false;\n\n    private interval: any = undefined;\n\n    public toggleSpinners(): void {\n        this.show = !this.show;\n        this.show ? this.startProgress() : this.onCancel();\n    }\n\n    public startProgress(): void {\n        this.clearInterval();\n        this.interval = setInterval(() => {\n            this.spinPercentage < 100\n                ? (this.spinPercentage += 10)\n                : this.onCancel();\n        }, 500);\n    }\n\n    public onCancel(): void {\n        this.clearInterval();\n        this.isCanceled = true;\n        this.show = false;\n        this.spinPercentage = 0;\n    }\n\n    public ngOnDestroy(): void {\n        this.clearInterval();\n    }\n\n    private clearInterval() {\n        if (this.interval) {\n            clearInterval(this.interval);\n            this.interval = undefined;\n        }\n    }\n}\n'},37461:(l,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});const r='<button\n    nui-button\n    type="button"\n    id="spinnerButton1"\n    (click)="toggleSpinners()"\n    displayStyle="primary"\n    i18n\n>\n    Start/stop progress\n</button>\n<nui-spinner\n    id="spinner1"\n    [show]="show"\n    [percent]="spinPercentage"\n    [delay]="500"\n>\n</nui-spinner>\n\n<nui-spinner\n    size="large"\n    [show]="show"\n    [percent]="spinPercentage"\n    [delay]="1000"\n>\n</nui-spinner>\n'},28493:(l,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});const r='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnDestroy } from "@angular/core";\n\n@Component({\n    selector: "nui-spinner-with-delay-toggle-example",\n    templateUrl: "./spinner-with-delay-toggle.example.component.html",\n})\nexport class SpinnerWithDelayToggleExampleComponent implements OnDestroy {\n    public show = false;\n    public spinPercentage = 0;\n    public isCanceled = false;\n\n    private interval: any = undefined;\n\n    public toggleSpinners(): void {\n        this.show = !this.show;\n        this.show ? this.startProgress() : this.onCancel();\n    }\n\n    public startProgress(): void {\n        this.clearInterval();\n        this.interval = setInterval(() => {\n            this.spinPercentage < 100\n                ? (this.spinPercentage += 10)\n                : this.onCancel();\n        }, 500);\n    }\n\n    public onCancel(): void {\n        this.clearInterval();\n        this.isCanceled = true;\n        this.show = false;\n        this.spinPercentage = 0;\n    }\n\n    public ngOnDestroy(): void {\n        this.clearInterval();\n    }\n\n    private clearInterval() {\n        if (this.interval) {\n            clearInterval(this.interval);\n            this.interval = undefined;\n        }\n    }\n}\n'},61468:(l,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});const r='<nui-spinner\n    size="large"\n    [show]="true"\n    message="Task Label"\n    i18n-message\n    helpText="Optional description"\n    i18n-helpText\n>\n</nui-spinner>\n'},89764:(l,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});const r='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-spinner-with-text-example",\n    templateUrl: "./spinner-with-text.example.component.html",\n})\nexport class SpinnerWithTextExampleComponent {}\n'},58532:(l,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>r});const r='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDocsModule,\n    NuiSpinnerModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    SpinnerBasicExampleComponent,\n    SpinnerDeterminateExampleComponent,\n    SpinnerExampleComponent,\n    SpinnerSizesExampleComponent,\n    SpinnerTestComponent,\n    SpinnerVisualTestComponent,\n    SpinnerWithCancelExampleComponent,\n    SpinnerWithDelayToggleExampleComponent,\n    SpinnerWithTextExampleComponent,\n} from "./index";\n\nconst routes = [\n    {\n        path: "",\n        component: SpinnerExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "spinner-test",\n        component: SpinnerTestComponent,\n    },\n    {\n        path: "spinner-visual-test",\n        component: SpinnerVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiSpinnerModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        SpinnerBasicExampleComponent,\n        SpinnerDeterminateExampleComponent,\n        SpinnerTestComponent,\n        SpinnerVisualTestComponent,\n        SpinnerExampleComponent,\n        SpinnerSizesExampleComponent,\n        SpinnerWithCancelExampleComponent,\n        SpinnerWithDelayToggleExampleComponent,\n        SpinnerWithTextExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () =>\n                (<any>require).context(\n                    `!!raw-loader!./`,\n                    true,\n                    /.*\\.(ts|html|less)$/\n                ),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport class SpinnerModule {}\n'}}]);