(self.webpackChunk_nova_ui_bits=self.webpackChunk_nova_ui_bits||[]).push([[8919],{27336:function(n,e,o){var t={"./dnd-axis-constraints/dnd-axis-constraints.example.component.html":11684,"./dnd-axis-constraints/dnd-axis-constraints.example.component.less":9934,"./dnd-axis-constraints/dnd-axis-constraints.example.component.ts":5674,"./dnd-basic/dnd-basic.example.component.html":58589,"./dnd-basic/dnd-basic.example.component.less":77348,"./dnd-basic/dnd-basic.example.component.ts":5501,"./dnd-custom-handle/dnd-custom-handle.example.component.html":31453,"./dnd-custom-handle/dnd-custom-handle.example.component.less":45183,"./dnd-custom-handle/dnd-custom-handle.example.component.ts":34002,"./dnd-docs/dnd-docs.example.component.html":67238,"./dnd-docs/dnd-docs.example.component.ts":8122,"./dnd-drag-disabled/dnd-drag-disabled-example.component.html":40941,"./dnd-drag-disabled/dnd-drag-disabled-example.component.less":1660,"./dnd-drag-disabled/dnd-drag-disabled-example.component.ts":86301,"./dnd-drag-placeholder/dnd-drag-placeholder-example.component.html":74227,"./dnd-drag-placeholder/dnd-drag-placeholder-example.component.less":35303,"./dnd-drag-placeholder/dnd-drag-placeholder-example.component.ts":32037,"./dnd-drag-preview/dnd-drag-preview.example.component.html":34710,"./dnd-drag-preview/dnd-drag-preview.example.component.less":23944,"./dnd-drag-preview/dnd-drag-preview.example.component.ts":44498,"./dnd-dropzone-visual/dnd-dropzone-visual-example.component.html":78456,"./dnd-dropzone-visual/dnd-dropzone-visual-example.component.less":4335,"./dnd-dropzone-visual/dnd-dropzone-visual-example.component.ts":11158,"./dnd-dropzone/dnd-dropzone.example.component.html":49507,"./dnd-dropzone/dnd-dropzone.example.component.less":73595,"./dnd-dropzone/dnd-dropzone.example.component.ts":49993,"./dnd.module.ts":45539,"components/demo/external-libraries/drag-and-drop/dnd-axis-constraints/dnd-axis-constraints.example.component.html":11684,"components/demo/external-libraries/drag-and-drop/dnd-axis-constraints/dnd-axis-constraints.example.component.less":9934,"components/demo/external-libraries/drag-and-drop/dnd-axis-constraints/dnd-axis-constraints.example.component.ts":5674,"components/demo/external-libraries/drag-and-drop/dnd-basic/dnd-basic.example.component.html":58589,"components/demo/external-libraries/drag-and-drop/dnd-basic/dnd-basic.example.component.less":77348,"components/demo/external-libraries/drag-and-drop/dnd-basic/dnd-basic.example.component.ts":5501,"components/demo/external-libraries/drag-and-drop/dnd-custom-handle/dnd-custom-handle.example.component.html":31453,"components/demo/external-libraries/drag-and-drop/dnd-custom-handle/dnd-custom-handle.example.component.less":45183,"components/demo/external-libraries/drag-and-drop/dnd-custom-handle/dnd-custom-handle.example.component.ts":34002,"components/demo/external-libraries/drag-and-drop/dnd-docs/dnd-docs.example.component.html":67238,"components/demo/external-libraries/drag-and-drop/dnd-docs/dnd-docs.example.component.ts":8122,"components/demo/external-libraries/drag-and-drop/dnd-drag-disabled/dnd-drag-disabled-example.component.html":40941,"components/demo/external-libraries/drag-and-drop/dnd-drag-disabled/dnd-drag-disabled-example.component.less":1660,"components/demo/external-libraries/drag-and-drop/dnd-drag-disabled/dnd-drag-disabled-example.component.ts":86301,"components/demo/external-libraries/drag-and-drop/dnd-drag-placeholder/dnd-drag-placeholder-example.component.html":74227,"components/demo/external-libraries/drag-and-drop/dnd-drag-placeholder/dnd-drag-placeholder-example.component.less":35303,"components/demo/external-libraries/drag-and-drop/dnd-drag-placeholder/dnd-drag-placeholder-example.component.ts":32037,"components/demo/external-libraries/drag-and-drop/dnd-drag-preview/dnd-drag-preview.example.component.html":34710,"components/demo/external-libraries/drag-and-drop/dnd-drag-preview/dnd-drag-preview.example.component.less":23944,"components/demo/external-libraries/drag-and-drop/dnd-drag-preview/dnd-drag-preview.example.component.ts":44498,"components/demo/external-libraries/drag-and-drop/dnd-dropzone-visual/dnd-dropzone-visual-example.component.html":78456,"components/demo/external-libraries/drag-and-drop/dnd-dropzone-visual/dnd-dropzone-visual-example.component.less":4335,"components/demo/external-libraries/drag-and-drop/dnd-dropzone-visual/dnd-dropzone-visual-example.component.ts":11158,"components/demo/external-libraries/drag-and-drop/dnd-dropzone/dnd-dropzone.example.component.html":49507,"components/demo/external-libraries/drag-and-drop/dnd-dropzone/dnd-dropzone.example.component.less":73595,"components/demo/external-libraries/drag-and-drop/dnd-dropzone/dnd-dropzone.example.component.ts":49993,"components/demo/external-libraries/drag-and-drop/dnd.module.ts":45539};function i(n){var e=d(n);return o(e)}function d(n){if(!o.o(t,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return t[n]}i.keys=function(){return Object.keys(t)},i.resolve=d,n.exports=i,i.id=27336},88919:function(n,e,o){"use strict";o.r(e),o.d(e,{DndModule:function(){return c}});var t=o(83461),i=o(52796),d=o(99763),r=o(26924),a=o(92970),s=o(66989),l=o(33018);const p=[{path:"",children:[{path:"",component:a.h},{path:"dropzone",component:s.y},{path:"dropzone-visual",component:s.y}]}];let c=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=l.oAB({type:n}),n.\u0275inj=l.cJS({providers:[{provide:r.V3$,useFactory:()=>o(27336)}],imports:[[r.vvu,r.rIe,r.gkT,d.Bz.forChild(p),t._t,i.nZ]]}),n})()},11684:function(n,e,o){"use strict";o.r(e),e.default='<div class="draggable-item mr-5" cdkDragLockAxis="y" cdkDrag>\n    I can only be dragged up/down\n</div>\n<div class="draggable-item mr-5" cdkDragLockAxis="x" cdkDrag>\n    I can only be dragged left/right\n</div>\n'},5674:function(n,e,o){"use strict";o.r(e),e.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "dnd-axis-constraints",\n    templateUrl: "./dnd-axis-constraints.example.component.html",\n    styleUrls: ["./dnd-axis-constraints.example.component.less"],\n})\nexport class DndAxisConstraintsExampleComponent {}\n'},58589:function(n,e,o){"use strict";o.r(e),e.default='<div class="draggable-item" cdkDrag>I can be dragged from anywhere</div>\n'},5501:function(n,e,o){"use strict";o.r(e),e.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "dnd-basic",\n    templateUrl: "./dnd-basic.example.component.html",\n    styleUrls: ["./dnd-basic.example.component.less"],\n})\nexport class DndBasicExampleComponent {}\n'},31453:function(n,e,o){"use strict";o.r(e),e.default='\x3c!-- list of draggable items  --\x3e\n<div\n    cdkDropList\n    class="draggable-container"\n    (cdkDropListDropped)="onItemDropped($event)"\n>\n    <ng-container *ngFor="let item of listItems; let i = index">\n        <div\n            cdkDrag\n            cdkDragPreviewClass="dnd-drag-preview"\n            [cdkDragDisabled]="!item.enabled"\n            class="draggable-item"\n            [ngClass]="{\n                \'with-handle\': item.hasHandle,\n                \'nui-dnd-raised-state\': item.withHandle && mousedOver[i]\n            }"\n        >\n            \x3c!-- raised state style is applied ONLY when the mouse is over the handle --\x3e\n            <div\n                *ngIf="item.withHandle"\n                cdkDragHandle\n                class="drag-handle"\n                (mouseover)="mousedOver[i] = true"\n                (mouseout)="mousedOver[i] = false"\n            >\n                <nui-icon icon="drag"></nui-icon>\n            </div>\n            {{ item.title }}\n        </div>\n    </ng-container>\n</div>\n'},34002:function(n,e,o){"use strict";o.r(e),e.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { CdkDragDrop, moveItemInArray } from "@angular/cdk/drag-drop";\nimport { Component } from "@angular/core";\n\nclass IListItem {\n    title: string;\n    enabled?: boolean;\n    hasHandle?: boolean;\n}\n\n@Component({\n    selector: "dnd-custom-handle",\n    templateUrl: "./dnd-custom-handle.example.component.html",\n    styleUrls: ["./dnd-custom-handle.example.component.less"],\n})\nexport class DndCustomHandleExampleComponent {\n    public mousedOver: boolean[] = [];\n    public listItems: IListItem[] = [\n        {\n            title: "I can only be dragged using the handle",\n            enabled: true,\n            hasHandle: true,\n        },\n        {\n            title: " I can be dragged without any handle",\n            enabled: true,\n            hasHandle: false,\n        },\n        {\n            title: "Disabled item CAN\'T be dragged",\n            enabled: false,\n        },\n    ];\n\n    public onItemDropped(event: CdkDragDrop<IListItem[]>): void {\n        moveItemInArray(\n            this.listItems,\n            event.previousIndex,\n            event.currentIndex\n        );\n    }\n}\n'},67238:function(n,e,o){"use strict";o.r(e),e.default='<p>\n    The Angular CDK drag and drop module provides a way to easily and\n    declaratively create drag and drop interfaces.\n</p>\n<p>\n    To get started, import <code>DragDropModule</code> into the\n    <code>NgModule</code> where you want to use drag-and-drop features:\n</p>\n<nui-example-code language="typescript">{{\n    initialSetupCode\n}}</nui-example-code>\n<p>\n    For more details on the implementation of the @angular/cdk/drag-drop, check\n    the documentation\n    <a href="https://material.angular.io/cdk/drag-drop/overview" target="_blank"\n        >here</a\n    >\n</p>\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiDndModule</code>\n    </li>\n    <li>Angular CDK\'s <code>DragDropModule</code></li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    This example shows how easy it is to create a draggable element by adding\n    the <code>cdkDrag</code> directive on the DOM element we want to become\n    draggable. Since it can be dragged without any handle, hovering the element\n    will alter its state to both <code>nui-dnd-raised-state</code> and\n    <code>nui-dnd-hover-state</code>.\n</p>\n<nui-message [allowDismiss]="false" type="info">\n    <p>\n        In case you want to customize the styles for your draggable elements, it\n        may be helpful to know that all <code>cdkDrag</code> DOM elements have\n        the <code>.cdk-drag</code> CSS class applied to them.\n    </p>\n</nui-message>\n\n<nui-example-wrapper filenamePrefix="dnd-basic" exampleTitle="Drag & Drop">\n    <dnd-basic></dnd-basic>\n</nui-example-wrapper>\n\n<h2>Drag Axis Constraints</h2>\n<p>\n    By default, <code>cdkDrag</code> allows free movement in all directions. To\n    restrict dragging to a specific axis, you can set the\n    <code>cdkDragLockAxis</code> input on <code>cdkDrag</code> or the\n    <code>cdkDropListLockAxis</code> input on <code>cdkDropList</code>\n    to either "x" or "y".\n</p>\n<nui-example-wrapper\n    filenamePrefix="dnd-axis-constraints"\n    exampleTitle="Drag Axis Constraints"\n>\n    <dnd-axis-constraints></dnd-axis-constraints>\n</nui-example-wrapper>\n\n<h2>Disabled draggable items</h2>\n<p>\n    A collection of <code>cdkDrag</code> elements are usually placed inside a\n    <code>cdkDropList</code>.\n</p>\n<p>\n    To prevent an item from being dragged set the\n    <code>cdkDragDisabled</code> input on the <code>cdkDrag</code> element to\n    true:\n</p>\n<nui-message [allowDismiss]="false" type="info">\n    <p>\n        Disabled draggable DOM elements have the\n        <code>.cdk-drag-disabled</code> CSS class appended to them.\n    </p>\n    <p>\n        See the styles customization applied to the disabled draggable items in\n        the LESS source code tab in the source expander below for inspiration.\n    </p>\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="dnd-drag-disabled"\n    exampleTitle="Disabled draggable items"\n>\n    <dnd-drag-disabled></dnd-drag-disabled>\n</nui-example-wrapper>\n\n<h2>Custom Drag Preview</h2>\n<p>\n    It is possible to display custom preview content instead of cloning the\n    original element by specifying the <code>cdkDragPreview</code> directive.\n</p>\n<p>\n    The directive must be specified for each <code>cdkDrag</code> element that\n    we want to have preview content.\n</p>\n<nui-message [allowDismiss]="false" type="warning">\n    <p>\n        <strong>Important:</strong> In order for the\n        <code>cdkDragPreview</code> directive to work, it must be wrapped inside\n        a DOM element with the <code>cdkDropList</code> directive specified.\n    </p>\n    Take a look at the source of the following example to see how.\n</nui-message>\n<nui-example-wrapper\n    filenamePrefix="dnd-drag-preview"\n    exampleTitle="Custom Drag Preview"\n>\n    <dnd-drag-preview></dnd-drag-preview>\n</nui-example-wrapper>\n\n<h2>Custom Drag Handle</h2>\n<p>\n    The handle by which an element can be dragged can be customized by\n    specifying the directive <code>cdkDragHandle</code> on the element we want\n    to become the handle.\n</p>\n<nui-example-wrapper\n    filenamePrefix="dnd-custom-handle"\n    exampleTitle="Custom Drag Handle"\n>\n    <dnd-custom-handle></dnd-custom-handle>\n</nui-example-wrapper>\n<p>\n    In the example above the handle is still displayed while dragging an\n    element; to hide the handle we just need to apply the properer styling on\n    the cloned preview element as shown below:\n    <nui-example-code language="css">{{\n        hideHandleWhileDragging\n    }}</nui-example-code>\n</p>\n\n<h2>Custom Placeholder</h2>\n<p>\n    While a <code>cdkDrag</code> element is being dragged, the Angular CDK will\n    create a placeholder element that will show the user where the dragged\n    element will be placed when it\'s dropped.\n</p>\n<p>\n    By default the placeholder is a clone of the element that is being dragged,\n    however you can replace it with a custom one using the\n    <code>*cdkDragPlaceholder</code> directive.\n</p>\n<nui-example-wrapper\n    filenamePrefix="dnd-drag-placeholder"\n    exampleTitle="Custom Placeholder"\n>\n    <dnd-drag-placeholder></dnd-drag-placeholder>\n</nui-example-wrapper>\n\n<h2>Dropzones Visualization</h2>\n<p>\n    A drag container is a collection of <code>cdkDrag</code> elements within a\n    <code>cdkDropList</code>. Decorating a drag container with the\n    <code\n        ><a href="../directives/DndDropTargetDirective.html" target="_parent"\n            >nuiDndDropTarget</a\n        ></code\n    >\n    directive defines a dropzone.\n</p>\n<nui-message [allowDismiss]="false" type="warning">\n    In order use multiple drag containers, both sources and destinations must be\n    wrapped within a <code>cdkDropListGroup</code> directive.\n</nui-message>\n<p>\n    Once the user starts dragging an item from the source, the destination is\n    highlighted as an available destination dropzone; the\n    <code>nui-dnd-dropzone--active</code> CSS class is added to the dropzone\n    once dragging starts. The destination uses the\n    <code>nuiDndDropTarget</code> directive helper in order to inform the user\n    visually whether a dropzone will accept or reject a dragged item. In the\n    following example, all items are accepted except for <em>IBM</em>;\n</p>\n<nui-message [allowDismiss]="false" type="info">\n    The following CSS classes are added to the dropzone once the conditions are\n    met as described below:\n    <ul>\n        <li>- <code>nui-dnd-dropzone--active</code> - once dragging starts</li>\n        <li>\n            - <code>nui-dnd-dropzone--drop-allowed</code> - once the user is\n            over the dropzone and the dragged item is accepted\n        </li>\n        <li>\n            - <code>nui-dnd-dropzone--drop-not-allowed</code> - once the user is\n            over the dropzone and the dragged item is NOT accepted\n        </li>\n    </ul>\n</nui-message>\n<p>\n    To define acceptance conditions for a dropzone, the user can provide a\n    callback method to the <code>canBeDropped</code>\n    input.\n</p>\n<nui-example-wrapper filenamePrefix="dnd-dropzone" exampleTitle="Dropzones">\n    <dnd-dropzone></dnd-dropzone>\n</nui-example-wrapper>\n'},8122:function(n,e,o){"use strict";o.r(e),e.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-dnd-docs",\n    templateUrl: "./dnd-docs.example.component.html",\n})\nexport class DndDocsExampleComponent {\n    public initialSetupCode = `\n// our module where we want to use drag-and-drop features\nimport { DragDropModule } from "@angular/cdk/drag-drop";\n\n@NgModule({\n    imports: [\n        DragDropModule,\n        // other modules that we might need\n    ],\n    declarations: [ /* our module declaration */],\n    exports:      [ /* our exports */ ],\n})\nexport class MyModule {}`.replace("\\r\\n", "<br/>"); // nice rendering\n\n    public hideHandleWhileDragging = `\n.dnd-drag-preview .drag-handle {\n    display: none;\n}\n    `;\n}\n'},40941:function(n,e,o){"use strict";o.r(e),e.default='<div\n    cdkDropList\n    class="draggable-container"\n    (cdkDropListDropped)="onItemDropped($event)"\n>\n    <div\n        *ngFor="let item of listItems"\n        class="draggable-item"\n        cdkDrag\n        [cdkDragDisabled]="!item.enabled"\n        cdkDragPreviewClass="dnd-drag-preview"\n    >\n        {{ item.title }} - {{ translatedStatus(item.enabled) }}\n    </div>\n</div>\n'},86301:function(n,e,o){"use strict";o.r(e),e.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { CdkDragDrop, moveItemInArray } from "@angular/cdk/drag-drop";\nimport { Component } from "@angular/core";\n\nclass IListItem {\n    title: string;\n    enabled: boolean;\n}\n\n@Component({\n    selector: "dnd-drag-disabled",\n    templateUrl: "./dnd-drag-disabled-example.component.html",\n    styleUrls: ["./dnd-drag-disabled-example.component.less"],\n})\nexport class DndDragDisabledExampleComponent {\n    public listItems: IListItem[] = [\n        {\n            title: "Adobe",\n            enabled: true,\n        },\n        {\n            title: "IBM",\n            enabled: false,\n        },\n    ];\n\n    public onItemDropped(event: CdkDragDrop<IListItem[]>): void {\n        moveItemInArray(\n            this.listItems,\n            event.previousIndex,\n            event.currentIndex\n        );\n    }\n\n    public translatedStatus(enabled: boolean): string {\n        return enabled ? $localize`Enabled` : $localize`Disabled`;\n    }\n}\n'},74227:function(n,e,o){"use strict";o.r(e),e.default='<div\n    cdkDropList\n    class="draggable-container"\n    (cdkDropListDropped)="onItemDropped($event)"\n>\n    <div\n        cdkDrag\n        cdkDragPreviewClass="dnd-drag-preview"\n        class="draggable-item"\n        *ngFor="let item of listItems"\n    >\n        {{ item }}\n        <div class="draggable-placeholder" *cdkDragPlaceholder i18n>\n            Placeholder\n        </div>\n    </div>\n</div>\n'},32037:function(n,e,o){"use strict";o.r(e),e.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { CdkDragDrop, moveItemInArray } from "@angular/cdk/drag-drop";\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "dnd-drag-placeholder",\n    templateUrl: "./dnd-drag-placeholder-example.component.html",\n    styleUrls: ["./dnd-drag-placeholder-example.component.less"],\n})\nexport class DndDragPlaceholderExampleComponent {\n    public listItems: string[] = ["Adobe", "IBM", "Dell"];\n\n    public onItemDropped(event: CdkDragDrop<string[]>): void {\n        moveItemInArray(\n            this.listItems,\n            event.previousIndex,\n            event.currentIndex\n        );\n    }\n}\n'},34710:function(n,e,o){"use strict";o.r(e),e.default='<div\n    cdkDropList\n    class="draggable-container"\n    (cdkDropListDropped)="onItemDropped($event)"\n>\n    <div\n        cdkDrag\n        cdkDragPreviewClass="dnd-drag-preview"\n        class="draggable-item"\n        *ngFor="let item of listItems"\n    >\n        {{ item.title }}\n        <div *cdkDragPreview>\n            <p>This is the preview for {{ item.title }}</p>\n            <img\n                align="middle"\n                width="100"\n                [src]="item.preview"\n                [alt]="item.title"\n            />\n        </div>\n    </div>\n</div>\n'},44498:function(n,e,o){"use strict";o.r(e),e.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { CdkDragDrop, moveItemInArray } from "@angular/cdk/drag-drop";\nimport { Component } from "@angular/core";\n\nimport { IRepeatItem } from "@nova-ui/bits";\n\ninterface IListItem extends IRepeatItem {\n    title: string;\n    preview: string;\n}\n\n@Component({\n    selector: "dnd-drag-preview",\n    templateUrl: "./dnd-drag-preview.example.component.html",\n    styleUrls: ["./dnd-drag-preview.example.component.less"],\n})\nexport class DndDragPreviewExampleComponent {\n    public listItems: IListItem[] = [\n        {\n            title: "Adobe",\n            preview:\n                "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7b/Adobe_Systems_logo_and_wordmark.svg/524px-Adobe_Systems_logo_and_wordmark.svg.png",\n        },\n        {\n            title: "IBM",\n            preview:\n                "https://upload.wikimedia.org/wikipedia/commons/thumb/5/51/IBM_logo.svg/800px-IBM_logo.svg.png",\n        },\n        {\n            title: "Dell",\n            preview:\n                "https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Dell_Logo.svg/300px-Dell_Logo.svg.png",\n        },\n    ];\n\n    public onItemDropped(event: CdkDragDrop<IListItem[]>): void {\n        moveItemInArray(\n            this.listItems,\n            event.previousIndex,\n            event.currentIndex\n        );\n    }\n}\n'},78456:function(n,e,o){"use strict";o.r(e),e.default='<div cdkDropListGroup>\n    <div class="draggable-container pr-2" id="nui-demo-drop-list-1">\n        <h3>Companies</h3>\n        <div\n            cdkDropList\n            class="dragzone draggable-list"\n            [cdkDropListData]="companies"\n            [cdkDropListSortingDisabled]="true"\n            [cdkDropListEnterPredicate]="sourceAcceptsItem"\n            (cdkDropListDropped)="onItemDropped($event)"\n        >\n            <div class="items-container">\n                <div\n                    *ngFor="let company of companies"\n                    class="draggable-item"\n                    cdkDrag\n                    cdkDragPreviewClass="nui-dnd-preview"\n                    [cdkDragData]="company"\n                >\n                    <div\n                        class="draggable-placeholder"\n                        *cdkDragPlaceholder\n                    ></div>\n                    {{ company.name }}\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class="draggable-container pl-2" id="nui-demo-drop-list-2">\n        <h3>Industries</h3>\n        <div\n            #dropTarget="nuiDndDropTarget"\n            id="cdk-drop-list"\n            *ngFor="let industry of industries"\n            class="dropzone draggable-list"\n            cdkDropList\n            [cdkDropListSortingDisabled]="true"\n            [cdkDropListData]="industry.companies"\n            nuiDndDropTarget\n            [canBeDropped]="destinationAcceptsItem"\n            (cdkDropListDropped)="onItemDropped($event)"\n        >\n            <div\n                class="title"\n                *ngIf="\n                    dropTarget.isDropZoneActive || !industry.companies?.length\n                "\n            >\n                {{ industry.name }}\n                \x3c!--\n                ShowDropZone: {{ dropTarget.showDropZone$ | async}}\n                CanDrop: {{ dropTarget.canDrop$ | async}}\n                IsDropZoneActive: {{dropTarget.isDropZoneActive}}\n                --\x3e\n            </div>\n            <div class="items-container">\n                <div\n                    *ngFor="let company of industry.companies"\n                    class="draggable-item"\n                    cdkDrag\n                    cdkDragPreviewClass="dropzone-preview"\n                    [cdkDragData]="company"\n                    [class.invisible]="dropTarget.isDropZoneActive"\n                >\n                    {{ company.name }}\n                </div>\n            </div>\n            <div *ngIf="dropTarget.isDropZoneActive" class="centered-overlay">\n                \x3c!-- highlight item placeholder--\x3e\n                <div *ngIf="(dropTarget.showDropZone$ | async) !== true">\n                    <nui-icon\n                        icon="plus"\n                        iconSize="medium"\n                        cssClass="drop-circle-permanent"\n                    ></nui-icon>\n                </div>\n\n                \x3c!-- accepted item placeholder--\x3e\n                <div *ngIf="dropTarget.canLastDragItemBeDropped$ | async">\n                    <nui-icon\n                        icon="plus"\n                        iconSize="medium"\n                        cssClass="drop-circle-allowed"\n                    ></nui-icon>\n                </div>\n\n                \x3c!-- reject item placeholder--\x3e\n                <div\n                    *ngIf="\n                        (dropTarget.canLastDragItemBeDropped$ | async) === false\n                    "\n                >\n                    <div class="centered-overlay text-nowrap text-special" i18n>\n                        Not allowed\n                    </div>\n                    <nui-icon\n                        icon="close"\n                        iconSize="medium"\n                        cssClass="drop-circle-not-allowed"\n                    ></nui-icon>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n'},11158:function(n,e,o){"use strict";o.r(e),e.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    CdkDragDrop,\n    copyArrayItem,\n    moveItemInArray,\n    transferArrayItem,\n} from "@angular/cdk/drag-drop";\nimport { ChangeDetectionStrategy, Component } from "@angular/core";\n\nclass Company {\n    name: string;\n    industries?: Industry[];\n}\n\nconst COMPANY_ADOBE: string = "Adobe";\nconst COMPANY_IBM: string = "IBM";\nconst COMPANY_DELL: string = "Dell";\n\nclass Industry {\n    name: string;\n    companies?: Company[];\n}\n\nconst INDUSTRY_HW: string = "Hardware";\nconst INDUSTRY_SW: string = "Software";\n\nconst availableCompanies: Company[] = [\n    { name: COMPANY_ADOBE, industries: [{ name: INDUSTRY_SW }] },\n    {\n        name: COMPANY_IBM,\n        industries: [{ name: INDUSTRY_SW }, { name: INDUSTRY_HW }],\n    },\n    {\n        name: COMPANY_DELL,\n        industries: [{ name: INDUSTRY_HW }, { name: INDUSTRY_SW }],\n    },\n];\n\n@Component({\n    selector: "dnd-dropzone-visual",\n    templateUrl: "./dnd-dropzone-visual-example.component.html",\n    styleUrls: ["./dnd-dropzone-visual-example.component.less"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DndDropzoneVisualExampleComponent {\n    public companies: Company[] = availableCompanies;\n\n    public industries: Industry[] = [\n        { name: INDUSTRY_HW, companies: [{ name: COMPANY_IBM }] },\n        { name: INDUSTRY_SW, companies: [] },\n    ];\n\n    // Note: Prevent user from putting back already displaced items\n    public sourceAcceptsItem(): boolean {\n        return false;\n    }\n\n    public destinationAcceptsItem(company: Company): boolean {\n        return company.name === "Adobe" || company.name === "Dell";\n    }\n\n    public onItemDropped(event: CdkDragDrop<Company[]>): void {\n        if (!this.destinationAcceptsItem(event.item.data)) {\n            return;\n        }\n        if (event.previousContainer === event.container) {\n            moveItemInArray(\n                event.container.data,\n                event.previousIndex,\n                event.currentIndex\n            );\n            return;\n        }\n        if (\n            event.previousContainer.element.nativeElement.classList.contains(\n                "dragzone"\n            )\n        ) {\n            copyArrayItem(\n                event.previousContainer.data,\n                event.container.data,\n                event.previousIndex,\n                event.currentIndex\n            );\n            return;\n        }\n        transferArrayItem(\n            event.previousContainer.data,\n            event.container.data,\n            event.previousIndex,\n            event.currentIndex\n        );\n    }\n}\n'},49507:function(n,e,o){"use strict";o.r(e),e.default='<div cdkDropListGroup>\n    \x3c!-- source from where the items will be dragged --\x3e\n    <div class="draggable-container pr-2" id="nui-demo-drop-list-1">\n        <h3>Source</h3>\n        <div\n            cdkDropList\n            class="dragzone draggable-list"\n            [cdkDropListData]="sourceItems"\n            [cdkDropListSortingDisabled]="true"\n            [cdkDropListEnterPredicate]="sourceAcceptsItem"\n        >\n            \x3c!-- display list of items --\x3e\n            <div class="items-container">\n                <div\n                    *ngFor="let item of sourceItems"\n                    class="draggable-item"\n                    cdkDrag\n                    [cdkDragData]="item"\n                    cdkDragPreviewClass="nui-dnd-preview"\n                >\n                    {{ item }}\n                </div>\n            </div>\n        </div>\n    </div>\n\n    \x3c!-- destination dropzone where the items will be dropped --\x3e\n    <div class="draggable-container pl-2" id="nui-demo-drop-list-2">\n        <h3>Destination</h3>\n        <div\n            cdkDropList\n            class="dropzone draggable-list"\n            nuiDndDropTarget\n            #destinationTarget="nuiDndDropTarget"\n            [cdkDropListData]="destinationItems"\n            [canBeDropped]="destinationAcceptsItem"\n            (cdkDropListDropped)="onItemDropped($event)"\n        >\n            \x3c!-- display list of items --\x3e\n            <div class="items-container">\n                \x3c!-- make items invisible while a drag operation is in progress and dropzone is active--\x3e\n                <div\n                    *ngFor="let item of destinationItems"\n                    class="item"\n                    [class.invisible]="destinationTarget.isDropZoneActive"\n                >\n                    {{ item }}\n                </div>\n            </div>\n\n            \x3c!-- highlight dropzone area --\x3e\n            <ng-container\n                *ngTemplateOutlet="\n                    highlightDropzoneTemplate;\n                    context: { target: destinationTarget }\n                "\n            ></ng-container>\n        </div>\n    </div>\n</div>\n\n\x3c!-- template to highlight a dropzone and inform user about the drag operation outcome (accept item or not) --\x3e\n<ng-template #highlightDropzoneTemplate let-target="target">\n    <div *ngIf="target.isDropZoneActive" class="centered-overlay text-center">\n        \x3c!-- default state, highlight item placeholder when dragging starts --\x3e\n        <div *ngIf="(target.showDropZone$ | async) !== true">\n            \x3c!-- This is a drop zone area where you can drag your items --\x3e\n            <nui-icon\n                icon="plus"\n                iconSize="medium"\n                cssClass="drop-circle-permanent"\n            ></nui-icon>\n        </div>\n\n        \x3c!-- accepted item placeholder --\x3e\n        <div *ngIf="target.canLastDragItemBeDropped$ | async">\n            \x3c!-- The item currently dragged is accepted in this dropzone --\x3e\n            <nui-icon\n                icon="plus"\n                iconSize="medium"\n                cssClass="drop-circle-allowed"\n            ></nui-icon>\n        </div>\n\n        \x3c!-- reject item placeholder--\x3e\n        <div *ngIf="(target.canLastDragItemBeDropped$ | async) === false">\n            \x3c!-- The item currently dragged is NOT accepted in this dropzone --\x3e\n            <div class="centered-overlay text-nowrap text-special" i18n>\n                Not allowed\n            </div>\n            <nui-icon\n                icon="close"\n                iconSize="medium"\n                cssClass="drop-circle-not-allowed"\n            ></nui-icon>\n        </div>\n    </div>\n</ng-template>\n'},49993:function(n,e,o){"use strict";o.r(e),e.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport {\n    CdkDragDrop,\n    CdkDropList,\n    copyArrayItem,\n} from "@angular/cdk/drag-drop";\nimport { ChangeDetectionStrategy, Component } from "@angular/core";\n\n@Component({\n    selector: "dnd-dropzone",\n    templateUrl: "./dnd-dropzone.example.component.html",\n    styleUrls: ["./dnd-dropzone.example.component.less"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DndDropzoneExampleComponent {\n    public sourceItems: string[] = ["Adobe", "IBM"];\n    public destinationItems: string[] = ["Dell"];\n\n    // prevent user from putting back already displaced items\n    public sourceAcceptsItem(item: string, dropList?: CdkDropList): boolean {\n        return false;\n    }\n\n    public destinationAcceptsItem(\n        item: string,\n        dropList?: CdkDropList\n    ): boolean {\n        return item === "Adobe" || item === "Dell";\n    }\n\n    public onItemDropped(event: CdkDragDrop<string[]>): void {\n        if (!this.destinationAcceptsItem(event.item.data)) {\n            return;\n        }\n\n        copyArrayItem(\n            event.previousContainer.data,\n            event.container.data,\n            event.previousIndex,\n            event.currentIndex\n        );\n    }\n}\n'},45539:function(n,e,o){"use strict";o.r(e),e.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { DragDropModule } from "@angular/cdk/drag-drop";\nimport { CdkTreeModule } from "@angular/cdk/tree";\nimport { NgModule } from "@angular/core";\nimport { RouterModule, Routes } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiDndModule,\n    NuiDocsModule,\n    NuiMessageModule,\n} from "@nova-ui/bits";\n\nimport { DndAxisConstraintsExampleComponent } from "./dnd-axis-constraints/dnd-axis-constraints.example.component";\nimport { DndBasicExampleComponent } from "./dnd-basic/dnd-basic.example.component";\nimport { DndCustomHandleExampleComponent } from "./dnd-custom-handle/dnd-custom-handle.example.component";\nimport { DndDocsExampleComponent } from "./dnd-docs/dnd-docs.example.component";\nimport { DndDragDisabledExampleComponent } from "./dnd-drag-disabled/dnd-drag-disabled-example.component";\nimport { DndDragPlaceholderExampleComponent } from "./dnd-drag-placeholder/dnd-drag-placeholder-example.component";\nimport { DndDragPreviewExampleComponent } from "./dnd-drag-preview/dnd-drag-preview.example.component";\nimport { DndDropzoneVisualExampleComponent } from "./dnd-dropzone-visual/dnd-dropzone-visual-example.component";\nimport { DndDropzoneExampleComponent } from "./dnd-dropzone/dnd-dropzone.example.component";\n\nconst routes: Routes = [\n    {\n        path: "",\n        children: [\n            {\n                path: "",\n                component: DndDocsExampleComponent,\n            },\n            {\n                path: "dropzone",\n                component: DndDropzoneExampleComponent,\n            },\n            {\n                path: "dropzone-visual",\n                component: DndDropzoneExampleComponent,\n            },\n        ],\n    },\n];\n\n@NgModule({\n    declarations: [\n        DndBasicExampleComponent,\n        DndCustomHandleExampleComponent,\n        DndDragDisabledExampleComponent,\n        DndDragPlaceholderExampleComponent,\n        DndDragPreviewExampleComponent,\n        DndDocsExampleComponent,\n        DndDropzoneExampleComponent,\n        DndDropzoneVisualExampleComponent,\n        DndAxisConstraintsExampleComponent,\n    ],\n    imports: [\n        NuiDocsModule,\n        NuiDndModule,\n        NuiMessageModule,\n        RouterModule.forChild(routes),\n        DragDropModule,\n        CdkTreeModule,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () =>\n                (<any>require).context(\n                    `!!raw-loader!./`,\n                    true,\n                    /.*\\.(ts|html|less)$/\n                ),\n        },\n    ],\n})\nexport class DndModule {}\n'},9934:function(n){"use strict";n.exports='export default "@import (reference) \\"nui-framework-variables\\";\\n@import (reference) \\"mixins\\";\\n\\n@box-width: 150px;\\n@box-height: 100px;\\n\\n.draggable-item {\\n    width: @box-width;\\n    height: @box-height;\\n    padding: @nui-space-md;\\n    box-sizing: border-box;\\n    border: solid 1px @gray;\\n    display: inline-flex;\\n    justify-content: center;\\n    align-items: center;\\n    text-align: center;\\n    position: relative;\\n    z-index: 1;\\n    .transition(box-shadow 0.4s);\\n\\n    &:hover,\\n    &.cdk-drag-dragging {\\n        .nui-dnd-hover-state();\\n        .nui-dnd-raised-state();\\n        cursor: move;\\n        padding: @nui-space-md;\\n    }\\n}\\n";'},77348:function(n){"use strict";n.exports='export default "@import (reference) \\"nui-framework-variables\\";\\n@import (reference) \\"mixins\\";\\n\\n@box-width: 150px;\\n@box-height: 100px;\\n\\n.draggable-item {\\n    width: @box-width;\\n    height: @box-height;\\n    padding: @nui-space-md;\\n    box-sizing: border-box;\\n    border: solid 1px @gray;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    text-align: center;\\n    position: relative;\\n    z-index: 1;\\n    .transition(box-shadow 0.4s);\\n\\n    &:hover {\\n        .nui-dnd-hover-state();\\n        .nui-dnd-raised-state();\\n        cursor: move;\\n        padding: @nui-space-md;\\n    }\\n}\\n";'},45183:function(n){"use strict";n.exports='export default "@import (reference) \\"nui-framework-variables\\";\\n@import (reference) \\"mixins\\";\\n\\n@box-width: 300px;\\n@box-height: 50px;\\n\\n.draggable-container {\\n    width: @box-width;\\n    border-top: solid @nui-line-default @nui-color-line-default;\\n}\\n\\n// generic item styling\\n.item {\\n    height: @box-height;\\n    padding: @nui-space-md;\\n    text-align: center;\\n    box-sizing: border-box;\\n    border: solid @nui-line-default @nui-color-line-default;\\n    border-top: none;\\n    position: relative;\\n}\\n\\n// drag & drop styling\\n.draggable-item:extend(.item) {\\n    background: @nui-color-bg-content;\\n    .transition(box-shadow 0.4s);\\n\\n    // for all ENABLED items we apply the hover style\\n    &:not(.cdk-drag-disabled) {\\n        &:hover {\\n            .nui-dnd-hover-state();\\n        }\\n\\n        // we apply the raised state only for items without handle\\n        &:not(.with-handle):hover {\\n            cursor: move;\\n            .nui-dnd-raised-state();\\n        }\\n    }\\n\\n    &.cdk-drag-disabled {\\n        color: @nui-color-disabled;\\n    }\\n}\\n\\n.drag-handle {\\n    color: #ccc;\\n    cursor: move;\\n    display: inline;\\n}\\n\\n.dnd-drag-preview:extend(.item, .nui-dnd-preview) {\\n}\\n";'},1660:function(n){"use strict";n.exports='export default "@import (reference) \\"nui-framework-variables\\";\\n@import (reference) \\"mixins\\";\\n\\n@box-width: 150px;\\n@box-height: 50px;\\n\\n.draggable-container {\\n    width: @box-width;\\n    border-top: solid @nui-line-default @nui-color-line-default;\\n}\\n\\n.item {\\n    padding: @nui-space-md;\\n    text-align: center;\\n}\\n\\n.draggable-item:extend(.item) {\\n    height: @box-height;\\n    border: @dnd-item-border-width @nui-color-line-default solid;\\n    border-top: none;\\n\\n    .transition(box-shadow 0.4s);\\n\\n    // apply style only for items that are enabled\\n    &:hover:not(.cdk-drag-disabled) {\\n        cursor: move;\\n        .nui-dnd-hover-state();\\n        .nui-dnd-raised-state();\\n    }\\n\\n    &.cdk-drag-disabled {\\n        color: @nui-color-disabled;\\n    }\\n}\\n\\n.dnd-drag-preview:extend(.item, .nui-dnd-preview) {\\n}\\n";'},35303:function(n){"use strict";n.exports='export default "@import (reference) \\"nui-framework-variables\\";\\n@import (reference) \\"mixins\\";\\n\\n@box-width: 150px;\\n@box-height: 50px;\\n@placeholder-border-width: @nui-line-default;\\n\\n.draggable-container {\\n    width: @box-width;\\n    border: solid @nui-line-default @nui-color-line-default;\\n\\n    :last-child {\\n        border: none;\\n    }\\n}\\n\\n// generic item styling\\n.item {\\n    padding: @nui-space-md;\\n    text-align: center;\\n    box-sizing: border-box;\\n    border-bottom: solid @nui-line-default @nui-color-line-default;\\n}\\n\\n// drag & drop styling\\n.draggable-item:extend(.item),\\n.draggable-placeholder:extend(.item) {\\n    height: @box-height;\\n    .transition(box-shadow 0.4s);\\n\\n    &:hover {\\n        cursor: move;\\n        .nui-dnd-hover-state();\\n        .nui-dnd-raised-state();\\n    }\\n}\\n\\n.draggable-placeholder {\\n    border: dashed @placeholder-border-width @nui-color-line-default;\\n    background: @nui-color-bg-content-hover;\\n    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n\\n.dnd-drag-preview:extend(.item, .nui-dnd-preview) {\\n}\\n";'},23944:function(n){"use strict";n.exports='export default "@import (reference) \\"nui-framework-variables\\";\\n@import (reference) \\"mixins\\";\\n\\n@box-width: 150px;\\n@box-height: 50px;\\n\\n.draggable-container {\\n    width: @box-width;\\n    border-top: solid @nui-line-default @nui-color-line-default;\\n}\\n\\n.item {\\n    padding: @nui-space-md;\\n    text-align: center;\\n}\\n\\n.draggable-item:extend(.item) {\\n    height: @box-height;\\n    border: solid @nui-line-default @nui-color-line-default;\\n    border-top: none;\\n    .transition(box-shadow 0.4s);\\n\\n    &:hover {\\n        cursor: move;\\n        .nui-dnd-hover-state();\\n        .nui-dnd-raised-state();\\n    }\\n}\\n\\n.dnd-drag-preview:extend(.item, .nui-dnd-preview) {\\n}\\n";'},4335:function(n){"use strict";n.exports='export default "@import (reference) \\"nui-framework-variables\\";\\n@import (reference) \\"mixins\\";\\n\\n@min-height: 50px;\\n\\n.draggable-container {\\n    width: 50%;\\n    float: left;\\n    min-height: (@min-height * 10);\\n\\n    .draggable-list {\\n        border: solid @dnd-zone-border-width transparent;\\n        position: relative;\\n        padding: @nui-space-sm;\\n        transition: all 0.3s ease-in-out;\\n\\n        .title {\\n            position: absolute;\\n        }\\n        &.cdk-drop-list-dragging,\\n        &.cdk-drop-list-receiving {\\n            .draggable-item:hover {\\n                box-shadow: none;\\n                background-color: initial;\\n            }\\n        }\\n    }\\n}\\n\\n.dragzone {\\n    .cdk-drop-list-dragging .draggable-item:not(.cdk-drag-placeholder) {\\n        transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n    }\\n}\\n\\n.dropzone {\\n    margin: 10px 0;\\n    min-height: (2 * (@min-height + @nui-space-md + @dnd-zone-border-width));\\n\\n    .cdk-drag-placeholder,\\n    .draggable-placeholder {\\n        visibility: hidden;\\n        min-height: @min-height - @dnd-zone-border-width;\\n    }\\n}\\n\\n.draggable-item,\\n.draggable-placeholder,\\n.dropzone-preview:extend(.nui-dnd-preview) {\\n    min-height: @min-height + @dnd-item-border-width;\\n    padding: @nui-space-md;\\n    box-sizing: border-box;\\n    text-align: center;\\n    border: @dnd-item-border-width @nui-color-line-default solid;\\n    .transition(box-shadow 0.4s);\\n}\\n\\n.draggable-item {\\n    border-bottom-color: transparent;\\n\\n    &:hover:not(.cdk-drag-placeholder) {\\n        .nui-dnd-hover-state();\\n        .nui-dnd-raised-state();\\n        cursor: move;\\n        padding: @nui-space-md;\\n    }\\n}\\n&.items-container :last-child {\\n    border-bottom-color: @nui-color-line-default;\\n}\\n\\n.draggable-placeholder {\\n    min-height: @min-height + @dnd-zone-border-width - 1;\\n    border-width: @dnd-zone-border-width;\\n    border-style: dashed;\\n    background: @nui-color-bg-content-hover;\\n    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n\\n.cdk-drag-animating {\\n    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n\\n.centered-overlay .text-special {\\n    top: -25px;\\n}\\n";'},73595:function(n){"use strict";n.exports='export default "@import (reference) \\"nui-framework-variables\\";\\n@import (reference) \\"mixins\\";\\n\\n@min-height: 50px;\\n\\n.draggable-container {\\n    width: 50%;\\n    float: left;\\n    min-height: (@min-height * 5);\\n\\n    .draggable-list {\\n        border: solid @dnd-zone-border-width transparent;\\n        position: relative;\\n        padding: @nui-space-sm;\\n        transition: all 0.3s ease-in-out;\\n\\n        .title {\\n            position: absolute;\\n        }\\n        &.cdk-drop-list-dragging,\\n        &.cdk-drop-list-receiving {\\n            .draggable-item:hover {\\n                box-shadow: none;\\n                background-color: initial;\\n            }\\n        }\\n    }\\n}\\n\\n.dragzone {\\n    .cdk-drop-list-dragging .draggable-item:not(.cdk-drag-placeholder) {\\n        transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n    }\\n}\\n\\n.dropzone {\\n    margin: 10px 0;\\n    min-height: (2 * (@min-height + @nui-space-md + @dnd-zone-border-width));\\n\\n    .cdk-drag-placeholder,\\n    .draggable-placeholder {\\n        visibility: hidden;\\n        min-height: @min-height - @dnd-zone-border-width;\\n    }\\n}\\n\\n.item,\\n.draggable-item,\\n.draggable-placeholder {\\n    min-height: @min-height + @dnd-item-border-width;\\n    padding: @nui-space-md;\\n    box-sizing: border-box;\\n    text-align: center;\\n    border: @dnd-item-border-width @nui-color-line-default solid;\\n    .transition(box-shadow 0.4s);\\n}\\n\\n.item,\\n.draggable-item {\\n    border-bottom-color: transparent;\\n\\n    &.cdk-drag:hover:not(.cdk-drag-placeholder) {\\n        .nui-dnd-hover-state();\\n        .nui-dnd-raised-state();\\n        cursor: move;\\n        padding: @nui-space-md;\\n    }\\n}\\n&.items-container :last-child {\\n    border-bottom-color: @nui-color-line-default;\\n}\\n\\n.centered-overlay .text-special {\\n    top: -25px;\\n}\\n\\n// This class is added to a cdkDrag element when the user has stopped dragging.\\n// CDK will animate the element from its drop position to the final position inside the cdkDropList container\\n.cdk-drag-animating {\\n    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n";'}}]);