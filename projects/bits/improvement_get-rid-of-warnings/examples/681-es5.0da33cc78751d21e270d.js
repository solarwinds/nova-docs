!function(){var e,o,n,t,i,c,s,a,r,l,u,h,b,p,d,g,m,x,f,k,T;function v(e,o){return o||(o=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(o)}}))}function O(e,o){if(!(e instanceof o))throw new TypeError("Cannot call a class as a function")}function A(e,o){for(var n=0;n<o.length;n++){var t=o[n];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function I(e,o,n){return o&&A(e.prototype,o),n&&A(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}(self.webpackChunk_nova_ui_bits=self.webpackChunk_nova_ui_bits||[]).push([[681],{94978:function(e,o,n){var t={"./checkbox-group-basic/checkbox-group-basic.example.component.html":38218,"./checkbox-group-basic/checkbox-group-basic.example.component.ts":41708,"./checkbox-group-docs/checkbox-group-docs.example.component.html":48600,"./checkbox-group-docs/checkbox-group-docs.example.component.ts":52023,"./checkbox-group-in-form/checkbox-group-in-form.example.component.html":99415,"./checkbox-group-in-form/checkbox-group-in-form.example.component.ts":87782,"./checkbox-group-inline/checkbox-group-inline.example.component.html":62359,"./checkbox-group-inline/checkbox-group-inline.example.component.ts":2661,"./checkbox-group-justified/checkbox-group-justified.example.component.html":82620,"./checkbox-group-justified/checkbox-group-justified.example.component.ts":43725,"./checkbox-group-test/checkbox-group-test.component.html":86127,"./checkbox-group-test/checkbox-group-test.component.ts":97822,"./checkbox-group-visual-test/checkbox-group-visual-test.component.html":14308,"./checkbox-group-visual-test/checkbox-group-visual-test.component.ts":57559,"./checkbox-group.module.ts":11753,"./index.ts":60792,"components/demo/checkbox-group/checkbox-group-basic/checkbox-group-basic.example.component.html":38218,"components/demo/checkbox-group/checkbox-group-basic/checkbox-group-basic.example.component.ts":41708,"components/demo/checkbox-group/checkbox-group-docs/checkbox-group-docs.example.component.html":48600,"components/demo/checkbox-group/checkbox-group-docs/checkbox-group-docs.example.component.ts":52023,"components/demo/checkbox-group/checkbox-group-in-form/checkbox-group-in-form.example.component.html":99415,"components/demo/checkbox-group/checkbox-group-in-form/checkbox-group-in-form.example.component.ts":87782,"components/demo/checkbox-group/checkbox-group-inline/checkbox-group-inline.example.component.html":62359,"components/demo/checkbox-group/checkbox-group-inline/checkbox-group-inline.example.component.ts":2661,"components/demo/checkbox-group/checkbox-group-justified/checkbox-group-justified.example.component.html":82620,"components/demo/checkbox-group/checkbox-group-justified/checkbox-group-justified.example.component.ts":43725,"components/demo/checkbox-group/checkbox-group-test/checkbox-group-test.component.html":86127,"components/demo/checkbox-group/checkbox-group-test/checkbox-group-test.component.ts":97822,"components/demo/checkbox-group/checkbox-group-visual-test/checkbox-group-visual-test.component.html":14308,"components/demo/checkbox-group/checkbox-group-visual-test/checkbox-group-visual-test.component.ts":57559,"components/demo/checkbox-group/checkbox-group.module.ts":11753,"components/demo/checkbox-group/index.ts":60792};function i(e){var o=c(e);return n(o)}function c(e){if(!n.o(t,e)){var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return t[e]}i.keys=function(){return Object.keys(t)},i.resolve=c,e.exports=i,i.id=94978},60681:function(A,E,R){"use strict";R.r(E),R.d(E,{CheckboxGroupModule:function(){return ee}});var N=R(3679),S=R(99763),C=R(26924),F=R(33018),Z=R(36822),H=R(38583),U=R(56573),w=R(95659);function L(e,o){1&e&&(F.TgZ(0,"nui-message",7),F.TgZ(1,"b"),F.SDv(2,8),F.qZA(),F.qZA()),2&e&&F.Q6J("allowDismiss",!0)}function G(e,o){if(1&e&&(F.TgZ(0,"nui-checkbox",9),F._uU(1),F.qZA()),2&e){var n=o.$implicit;F.Q6J("value",n),F.xp6(1),F.hij(" ",n," ")}}var D,y=((D=function(){function c(i,s){O(this,c),this.formBuilder=i,this.toastService=s,this.cabbage=$localize(e||(e=v(["Cabbage"]))),this.potato=$localize(o||(o=v(["Potato"]))),this.tomato=$localize(n||(n=v(["Tomato"]))),this.carrot=$localize(t||(t=v(["Carrot"]))),this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.cabbage]}return I(c,[{key:"ngOnInit",value:function(){this.myForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control([this.cabbage,this.potato],[N.kI.required,N.kI.minLength(3)])})}},{key:"onSubmit",value:function(){console.log(this.myForm),this.toastService.success({message:$localize(i||(i=v(["Your form is valid!"])))})}},{key:"isChecked",value:function(e){return this.selectedVegetables.indexOf(e)>-1}}]),c}()).\u0275fac=function(e){return new(e||D)(F.Y36(N.qu),F.Y36(C.klp))},D.\u0275cmp=F.Xpm({type:D,selectors:[["nui-checkbox-group-in-form-example"]],decls:7,vars:4,consts:function(){return[[3,"formGroup","submit"],[1,"form-group"],["type","critical",3,"allowDismiss",4,"ngIf"],["id","nui-demo-checkbox-group-in-form","formControlName","checkboxGroup","name","vegetable","required",""],[3,"value",4,"ngFor","ngForOf"],["nui-button","","type","submit",3,"disabled"],$localize(c||(c=v([":\u241f6d7c89dd912494f2ac8f23ea53911febf6877a94\u241f6983789815427820617: Submit "]))),["type","critical",3,"allowDismiss"],$localize(s||(s=v([":\u241faaf9b8331666795542f417fe39c78014513ca737\u241f3498101055154698277:Select minimum 3 checkboxes!"]))),[3,"value"]]},template:function(e,o){1&e&&(F.TgZ(0,"form",0),F.NdJ("submit",function(){return o.onSubmit()}),F.TgZ(1,"div",1),F.YNc(2,L,3,1,"nui-message",2),F.TgZ(3,"nui-checkbox-group",3),F.YNc(4,G,2,2,"nui-checkbox",4),F.qZA(),F.qZA(),F.TgZ(5,"button",5),F.SDv(6,6),F.qZA(),F.qZA()),2&e&&(F.Q6J("formGroup",o.myForm),F.xp6(2),F.Q6J("ngIf",!o.myForm.controls.checkboxGroup.valid&&o.myForm.controls.checkboxGroup.touched),F.xp6(2),F.Q6J("ngForOf",o.vegetables),F.xp6(1),F.Q6J("disabled",o.myForm.disabled||o.myForm.controls.checkboxGroup.invalid))},directives:[N._Y,N.JL,N.sg,H.O5,Z.A,N.JJ,N.u,N.Q7,H.sg,w.r,U.b],encapsulation:2}),D);function P(e,o){if(1&e&&(F.TgZ(0,"nui-checkbox",12),F._uU(1),F.qZA()),2&e){var n=o.$implicit,t=F.oxw();F.Q6J("value",n)("checked",t.isChecked(n)),F.xp6(1),F.hij(" ",n," ")}}function q(e,o){if(1&e&&(F.TgZ(0,"nui-checkbox",13),F._uU(1),F.qZA()),2&e){var n=o.$implicit,t=F.oxw();F.Q6J("value",n)("hint",t.hints.indexOf(n)>=0?t.hints[t.hints.indexOf(n)]:null)("checked",t.isChecked(n)),F.xp6(1),F.hij(" ",n," ")}}var W=function(){var e=function(){function e(o){O(this,e),this.formBuilder=o,this.cabbage="Cabbage",this.potato="Potato",this.tomato="Tomato",this.carrot="Carrot",this.disabledOne="DISABLED",this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.hints=[this.cabbage,this.tomato],this.selectedVegetables=[this.potato,this.tomato,this.disabledOne]}return I(e,[{key:"ngOnInit",value:function(){this.testForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control({value:this.selectedVegetables,disabled:!0}),checkboxGroup2:this.formBuilder.control({value:this.selectedVegetables,disabled:!1})})}},{key:"isChecked",value:function(e){return this.selectedVegetables.indexOf(e)>-1}}]),e}();return e.\u0275fac=function(o){return new(o||e)(F.Y36(N.qu))},e.\u0275cmp=F.Xpm({type:e,selectors:[["nui-checkbox-group-test-example"]],decls:22,vars:24,consts:[[1,"container","d-flex"],[1,"d-flex","flex-column","mr-5"],["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values"],["hint","This is some help text",3,"value","checked",4,"ngFor","ngForOf"],["hint","If it's not disabled ring the alarm!","id","nui-demo-checkbox-group-1-disabled-checkbox","disabled","true",3,"value","checked"],[1,"d-flex","flex-column","mt-5"],["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","hint","checked",4,"ngFor","ngForOf"],[3,"formGroup"],["id","nui-demo-checkbox-group-in-form-disabled-checkboxes","name","vegetable","formControlName","checkboxGroup2"],[3,"value","disabled","checked"],["id","nui-demo-checkbox-group-part-of-form"],["hint","This is some help text",3,"value","checked"],[1,"nui-checkbox--justified",3,"value","hint","checked"]],template:function(e,o){1&e&&(F.TgZ(0,"div",0),F.TgZ(1,"div",1),F.TgZ(2,"nui-checkbox-group",2),F.YNc(3,P,2,3,"nui-checkbox",3),F.TgZ(4,"nui-checkbox",4),F._uU(5),F.qZA(),F.qZA(),F.qZA(),F.TgZ(6,"div",5),F.TgZ(7,"nui-checkbox-group",6),F.YNc(8,q,2,4,"nui-checkbox",7),F.qZA(),F.qZA(),F.TgZ(9,"div",5),F.TgZ(10,"form",8),F.TgZ(11,"nui-checkbox-group",9),F.TgZ(12,"nui-checkbox",10),F._uU(13),F.qZA(),F.TgZ(14,"nui-checkbox",10),F._uU(15),F.qZA(),F.TgZ(16,"nui-checkbox",10),F._uU(17),F.qZA(),F.TgZ(18,"nui-checkbox",10),F._uU(19),F.qZA(),F.qZA(),F.qZA(),F.qZA(),F.TgZ(20,"div",1),F._UZ(21,"nui-checkbox-group-in-form-example",11),F.qZA(),F.qZA()),2&e&&(F.xp6(2),F.Q6J("values",o.selectedVegetables),F.xp6(1),F.Q6J("ngForOf",o.vegetables),F.xp6(1),F.Q6J("value",o.disabledOne)("checked",!o.isChecked(o.disabledOne)),F.xp6(1),F.Oqu(o.disabledOne),F.xp6(2),F.Q6J("values",o.selectedVegetables),F.xp6(1),F.Q6J("ngForOf",o.vegetables),F.xp6(2),F.Q6J("formGroup",o.testForm),F.xp6(2),F.Q6J("value",o.vegetables[0])("disabled",!0)("checked",o.isChecked(o.vegetables[0])),F.xp6(1),F.hij(" ",o.vegetables[0],""),F.xp6(1),F.Q6J("value",o.vegetables[1])("disabled",!1)("checked",o.isChecked(o.vegetables[1])),F.xp6(1),F.hij(" ",o.vegetables[1],""),F.xp6(1),F.Q6J("value",o.vegetables[2])("disabled",!0)("checked",o.isChecked(o.vegetables[2])),F.xp6(1),F.hij(" ",o.vegetables[2],""),F.xp6(1),F.Q6J("value",o.vegetables[3])("disabled",!1)("checked",o.isChecked(o.vegetables[3])),F.xp6(1),F.hij(" ",o.vegetables[3],""))},directives:[Z.A,H.sg,U.b,N._Y,N.JL,N.sg,N.JJ,N.u,y],encapsulation:2}),e}(),B=R(70132);function _(e,o){if(1&e&&(F.TgZ(0,"nui-checkbox",2),F._uU(1),F.qZA()),2&e){var n=o.$implicit,t=F.oxw();F.Q6J("value",n)("checked",t.isChecked(n)),F.xp6(1),F.hij(" ",n," ")}}var M=function(){var e=function(){function e(o){O(this,e),this.toastService=o,this.cabbage=$localize(a||(a=v(["Cabbage"]))),this.potato=$localize(r||(r=v(["Potato"]))),this.tomato=$localize(l||(l=v(["Tomato"]))),this.carrot=$localize(u||(u=v(["Carrot"]))),this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato]}return I(e,[{key:"isChecked",value:function(e){return this.selectedVegetables.indexOf(e)>-1}},{key:"onValueChange",value:function(e){this.toastService.success({message:$localize(h||(h=v(["Selected checkboxes: "])))+e})}}]),e}();return e.\u0275fac=function(o){return new(o||e)(F.Y36(C.klp))},e.\u0275cmp=F.Xpm({type:e,selectors:[["nui-checkbox-group-basic-example"]],decls:2,vars:2,consts:function(){var e;return[["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values","valuesChange"],["hint",e=$localize(b||(b=v([":\u241fba785d6cbb33a003a3ce1d20077ba67264374284\u241f829155627086234075:This is some help text"]))),3,"value","checked",4,"ngFor","ngForOf"],["hint",e,3,"value","checked"]]},template:function(e,o){1&e&&(F.TgZ(0,"nui-checkbox-group",0),F.NdJ("valuesChange",function(e){return o.onValueChange(e)}),F.YNc(1,_,2,3,"nui-checkbox",1),F.qZA()),2&e&&(F.Q6J("values",o.selectedVegetables),F.xp6(1),F.Q6J("ngForOf",o.vegetables))},directives:[Z.A,H.sg,U.b],encapsulation:2}),e}();function V(e,o){if(1&e&&(F.TgZ(0,"nui-checkbox",2),F._uU(1),F.qZA()),2&e){var n=o.$implicit;F.Q6J("value",n),F.xp6(1),F.hij(" ",n," ")}}var Y=function(){var e=I(function e(){O(this,e),this.cabbage=$localize(p||(p=v(["Cabbage"]))),this.potato=$localize(d||(d=v(["Potato"]))),this.tomato=$localize(g||(g=v(["Tomato"]))),this.carrot=$localize(m||(m=v(["Carrot"]))),this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato]});return e.\u0275fac=function(o){return new(o||e)},e.\u0275cmp=F.Xpm({type:e,selectors:[["nui-checkbox-group-inline-example"]],decls:2,vars:2,consts:[["id","nui-demo-checkbox-group-inline","name","vegetable",1,"nui-checkbox-group-inline",3,"values"],[3,"value",4,"ngFor","ngForOf"],[3,"value"]],template:function(e,o){1&e&&(F.TgZ(0,"nui-checkbox-group",0),F.YNc(1,V,2,2,"nui-checkbox",1),F.qZA()),2&e&&(F.Q6J("values",o.selectedVegetables),F.xp6(1),F.Q6J("ngForOf",o.vegetables))},directives:[Z.A,H.sg,U.b],encapsulation:2}),e}();function j(e,o){if(1&e&&(F.TgZ(0,"nui-checkbox",2),F._uU(1),F.qZA()),2&e){var n=o.$implicit,t=F.oxw();F.Q6J("value",n)("hint",t.hints.indexOf(n)>=0?t.hints[t.hints.indexOf(n)]:null)("checked",t.isChecked(n)),F.xp6(1),F.hij(" ",n," ")}}var J=function(){var e=function(){function e(){O(this,e),this.cabbage=$localize(x||(x=v(["Cabbage"]))),this.potato=$localize(f||(f=v(["Potato"]))),this.tomato=$localize(k||(k=v(["Tomato"]))),this.carrot=$localize(T||(T=v(["Carrot"]))),this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.hints=[this.cabbage,this.tomato],this.selectedVegetables=[this.potato,this.tomato]}return I(e,[{key:"isChecked",value:function(e){return this.selectedVegetables.indexOf(e)>-1}}]),e}();return e.\u0275fac=function(o){return new(o||e)},e.\u0275cmp=F.Xpm({type:e,selectors:[["nui-checkbox-group-justified-example"]],decls:2,vars:2,consts:[["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","hint","checked",4,"ngFor","ngForOf"],[1,"nui-checkbox--justified",3,"value","hint","checked"]],template:function(e,o){1&e&&(F.TgZ(0,"nui-checkbox-group",0),F.YNc(1,j,2,4,"nui-checkbox",1),F.qZA()),2&e&&(F.Q6J("values",o.selectedVegetables),F.xp6(1),F.Q6J("ngForOf",o.vegetables))},directives:[Z.A,H.sg,U.b],encapsulation:2}),e}();function $(e,o){if(1&e&&(F.TgZ(0,"nui-checkbox",17),F._uU(1),F.qZA()),2&e){var n=o.$implicit,t=F.oxw();F.Q6J("value",n)("checked",t.isChecked(n)),F.xp6(1),F.hij(" ",n," ")}}function Q(e,o){if(1&e&&(F.TgZ(0,"nui-checkbox",18),F._uU(1),F.qZA()),2&e){var n=o.$implicit;F.Q6J("value",n),F.xp6(1),F.hij(" ",n," ")}}function z(e,o){if(1&e&&(F.TgZ(0,"nui-checkbox",19),F._uU(1),F.qZA()),2&e){var n=o.$implicit,t=F.oxw();F.Q6J("value",n)("checked",t.isChecked(n)),F.xp6(1),F.hij(" ",n," ")}}function X(e,o){if(1&e&&(F.TgZ(0,"nui-checkbox",20),F._uU(1),F.qZA()),2&e){var n=o.$implicit,t=F.oxw();F.Q6J("value",n)("checked",t.isChecked(n)),F.xp6(1),F.hij(" ",n," ")}}var K=[{path:"",component:function(){var e=I(function e(){O(this,e)});return e.\u0275fac=function(o){return new(o||e)},e.\u0275cmp=F.Xpm({type:e,selectors:[["nui-checkbox-group-docs-example"]],decls:74,vars:0,consts:[["filenamePrefix","checkbox-group-basic","exampleTitle","Basic Usage"],["filenamePrefix","checkbox-group-inline","exampleTitle","Inline"],["filenamePrefix","checkbox-group-in-form","exampleTitle","Part of Form"],["filenamePrefix","checkbox-group-justified","exampleTitle","Justified"]],template:function(e,o){1&e&&(F.TgZ(0,"h2"),F._uU(1,"Required Modules"),F.qZA(),F.TgZ(2,"ul"),F.TgZ(3,"li"),F.TgZ(4,"code"),F._uU(5,"NuiCheckboxModule"),F.qZA(),F.qZA(),F.qZA(),F.TgZ(6,"h2"),F._uU(7,"Basic Usage"),F.qZA(),F.TgZ(8,"p"),F._uU(9," The "),F.TgZ(10,"code"),F._uU(11,"<nui-checkbox-group>"),F.qZA(),F._uU(12," component is used for combining "),F.TgZ(13,"code"),F._uU(14,"<nui-checkbox>"),F.qZA(),F._uU(15," components into a group. Use the "),F.TgZ(16,"code"),F._uU(17,"name"),F.qZA(),F._uU(18,' input to set the "name" attribute for the inner '),F.TgZ(19,"code"),F._uU(20,"<nui-checkbox>"),F.qZA(),F._uU(21," input elements. To get the values of the "),F.TgZ(22,"code"),F._uU(23,"<nui-checkbox>"),F.qZA(),F._uU(24," child components use the "),F.TgZ(25,"code"),F._uU(26,"values"),F.qZA(),F._uU(27," input which is an array of checked state values. To act on checkbox value changes, bind to the "),F.TgZ(28,"code"),F._uU(29,"(valuesChange)"),F.qZA(),F._uU(30," output.\n"),F.qZA(),F.TgZ(31,"nui-example-wrapper",0),F._UZ(32,"nui-checkbox-group-basic-example"),F.qZA(),F.TgZ(33,"h2"),F._uU(34,"Inline"),F.qZA(),F.TgZ(35,"p"),F._uU(36," Use the "),F.TgZ(37,"code"),F._uU(38,"nui-checkbox-group-inline"),F.qZA(),F._uU(39," class to display checkbox group inline.\n"),F.qZA(),F.TgZ(40,"nui-example-wrapper",1),F._UZ(41,"nui-checkbox-group-inline-example"),F.qZA(),F.TgZ(42,"h2"),F._uU(43,"Part of Form"),F.qZA(),F.TgZ(44,"p"),F.TgZ(45,"code"),F._uU(46,"<nui-checkbox-group>"),F.qZA(),F._uU(47," can be used in reactive forms."),F.qZA(),F.TgZ(48,"nui-example-wrapper",2),F._UZ(49,"nui-checkbox-group-in-form-example"),F.qZA(),F.TgZ(50,"h2"),F._uU(51,"Justified"),F.qZA(),F.TgZ(52,"p"),F._uU(53," To justify "),F.TgZ(54,"code"),F._uU(55,"<nui-checkbox>"),F.qZA(),F._uU(56," to the width of "),F.TgZ(57,"code"),F._uU(58,"<nui-checkbox-group>"),F.qZA(),F._uU(59," (or simply parent element, in case "),F.TgZ(60,"code"),F._uU(61,"<nui-checkbox>"),F.qZA(),F._uU(62," is used not as a part of "),F.TgZ(63,"code"),F._uU(64,"<nui-checkbox-group>"),F.qZA(),F._uU(65,"), add "),F.TgZ(66,"code"),F._uU(67,"nui-checkbox--justified"),F.qZA(),F._uU(68," class to the "),F.TgZ(69,"code"),F._uU(70,"<nui-checkbox>"),F.qZA(),F._uU(71,".\n"),F.qZA(),F.TgZ(72,"nui-example-wrapper",3),F._UZ(73,"nui-checkbox-group-justified-example"),F.qZA())},directives:[B.h,M,Y,y,J],encapsulation:2}),e}(),data:{srlc:{stage:C.We9.ga},showThemeSwitcher:!0}},{path:"checkbox-group-visual-test",component:function(){var e=function(){function e(o){O(this,e),this.formBuilder=o,this.cabbage="Cabbage",this.potato="Potato",this.tomato="Tomato",this.carrot="Carrot",this.disabledOne="DISABLED",this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato,this.disabledOne]}return I(e,[{key:"ngOnInit",value:function(){this.testForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control({value:this.selectedVegetables,disabled:!0}),checkboxGroup2:this.formBuilder.control({value:this.selectedVegetables,disabled:!1})})}},{key:"isChecked",value:function(e){return this.selectedVegetables.indexOf(e)>-1}}]),e}();return e.\u0275fac=function(o){return new(o||e)(F.Y36(N.qu))},e.\u0275cmp=F.Xpm({type:e,selectors:[["nui-checkbox-group-visual-test"]],decls:42,vars:28,consts:[[1,"container"],[1,"row"],[1,"col"],["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values"],["hint","This is some help text",3,"value","checked",4,"ngFor","ngForOf"],["hint","If it's not disabled ring the alarm!","id","nui-demo-checkbox-group-1-disabled-checkbox","disabled","true",3,"value","checked"],["id","nui-demo-checkbox-group-inline","name","vegetable",1,"nui-checkbox-group-inline",3,"values"],[3,"value",4,"ngFor","ngForOf"],[1,"w-100"],["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","checked",4,"ngFor","ngForOf"],[3,"formGroup"],["id","nui-demo-checkbox-group-in-form-disabled-checkboxes","name","vegetable","formControlName","enabledCheckboxGroup"],[3,"value","disabled","checked"],[1,"d-flex","flex-column","mt-5"],["id","nui-demo-checkbox-group-in-form","name","vegetable","formControlName","disabledCheckboxGroup"],[3,"value","checked",4,"ngFor","ngForOf"],["hint","This is some help text",3,"value","checked"],[3,"value"],[1,"nui-checkbox--justified",3,"value","checked"],[3,"value","checked"]],template:function(e,o){1&e&&(F.TgZ(0,"div",0),F.TgZ(1,"div",1),F.TgZ(2,"div",2),F.TgZ(3,"h3"),F._uU(4,"Basic Checkbox-Group with Hint Text"),F.qZA(),F.TgZ(5,"nui-checkbox-group",3),F.YNc(6,$,2,3,"nui-checkbox",4),F.TgZ(7,"nui-checkbox",5),F._uU(8),F.qZA(),F.qZA(),F._UZ(9,"hr"),F.qZA(),F.TgZ(10,"div",2),F.TgZ(11,"h3"),F._uU(12,"Inline Checkbox-Group"),F.qZA(),F.TgZ(13,"nui-checkbox-group",6),F.YNc(14,Q,2,2,"nui-checkbox",7),F.qZA(),F._UZ(15,"hr"),F.qZA(),F._UZ(16,"div",8),F.TgZ(17,"div",2),F.TgZ(18,"h3"),F._uU(19,"Justified Checkbox-Group"),F.qZA(),F.TgZ(20,"nui-checkbox-group",9),F.YNc(21,z,2,3,"nui-checkbox",10),F.qZA(),F._UZ(22,"hr"),F.qZA(),F.TgZ(23,"div",2),F.TgZ(24,"h3"),F._uU(25,"Disabled checkboxes within the form"),F.qZA(),F.TgZ(26,"form",11),F.TgZ(27,"nui-checkbox-group",12),F.TgZ(28,"nui-checkbox",13),F._uU(29),F.qZA(),F.TgZ(30,"nui-checkbox",13),F._uU(31),F.qZA(),F.TgZ(32,"nui-checkbox",13),F._uU(33),F.qZA(),F.TgZ(34,"nui-checkbox",13),F._uU(35),F.qZA(),F.qZA(),F.qZA(),F.qZA(),F.qZA(),F.TgZ(36,"div",14),F.TgZ(37,"h3"),F._uU(38,"Disabled checkboxes within the disabled form"),F.qZA(),F.TgZ(39,"form",11),F.TgZ(40,"nui-checkbox-group",15),F.YNc(41,X,2,3,"nui-checkbox",16),F.qZA(),F.qZA(),F.qZA(),F.qZA()),2&e&&(F.xp6(5),F.Q6J("values",o.selectedVegetables),F.xp6(1),F.Q6J("ngForOf",o.vegetables),F.xp6(1),F.Q6J("value",o.disabledOne)("checked",!o.isChecked(o.disabledOne)),F.xp6(1),F.Oqu(o.disabledOne),F.xp6(5),F.Q6J("values",o.selectedVegetables),F.xp6(1),F.Q6J("ngForOf",o.vegetables),F.xp6(6),F.Q6J("values",o.selectedVegetables),F.xp6(1),F.Q6J("ngForOf",o.vegetables),F.xp6(5),F.Q6J("formGroup",o.testForm),F.xp6(2),F.Q6J("value",o.vegetables[0])("disabled",!0)("checked",o.isChecked(o.vegetables[0])),F.xp6(1),F.hij(" ",o.vegetables[0],""),F.xp6(1),F.Q6J("value",o.vegetables[1])("disabled",!1)("checked",o.isChecked(o.vegetables[1])),F.xp6(1),F.hij(" ",o.vegetables[1],""),F.xp6(1),F.Q6J("value",o.vegetables[2])("disabled",!0)("checked",o.isChecked(o.vegetables[2])),F.xp6(1),F.hij(" ",o.vegetables[2],""),F.xp6(1),F.Q6J("value",o.vegetables[3])("disabled",!1)("checked",o.isChecked(o.vegetables[3])),F.xp6(1),F.hij(" ",o.vegetables[3],""),F.xp6(4),F.Q6J("formGroup",o.testForm),F.xp6(2),F.Q6J("ngForOf",o.vegetables))},directives:[Z.A,H.sg,U.b,N._Y,N.JL,N.sg,N.JJ,N.u],encapsulation:2}),e}(),data:{srlc:{hideIndicator:!0}}},{path:"checkbox-group-test",component:W,data:{srlc:{hideIndicator:!0}}}],ee=function(){var e=I(function e(){O(this,e)});return e.\u0275fac=function(o){return new(o||e)},e.\u0275mod=F.oAB({type:e}),e.\u0275inj=F.cJS({providers:[{provide:C.V3$,useFactory:function(){return R(94978)}}],imports:[[C.LRI,C.vvu,N.u5,N.UX,C.Az_,S.Bz.forChild(K)],S.Bz]}),e}()},38218:function(e,o,n){"use strict";n.r(o),o.default='<nui-checkbox-group\n    id="nui-demo-checkbox-group-basic"\n    name="vegetable"\n    [values]="selectedVegetables"\n    (valuesChange)="onValueChange($event)"\n>\n    <nui-checkbox\n        *ngFor="let vegetable of vegetables"\n        [value]="vegetable"\n        i18n-hint\n        hint="This is some help text"\n        [checked]="isChecked(vegetable)"\n    >\n        {{ vegetable }}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},41708:function(e,o,n){"use strict";n.r(o),o.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-checkbox-group-basic-example",\n    templateUrl: "./checkbox-group-basic.example.component.html",\n})\nexport class CheckboxGroupBasicExampleComponent {\n    public cabbage = $localize`Cabbage`;\n    public potato = $localize`Potato`;\n    public tomato = $localize`Tomato`;\n    public carrot = $localize`Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor(private toastService: ToastService) {}\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n\n    public onValueChange(event: any): void {\n        this.toastService.success({\n            message: $localize`Selected checkboxes: ` + event,\n        });\n    }\n}\n'},48600:function(e,o,n){"use strict";n.r(o),o.default='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiCheckboxModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    The <code>&lt;nui-checkbox-group&gt;</code> component is used for combining\n    <code>&lt;nui-checkbox&gt;</code> components into a group. Use the\n    <code>name</code> input to set the "name" attribute for the inner\n    <code>&lt;nui-checkbox&gt;</code> input elements. To get the values of the\n    <code>&lt;nui-checkbox&gt;</code> child components use the\n    <code>values</code> input which is an array of checked state values. To act\n    on checkbox value changes, bind to the <code>(valuesChange)</code> output.\n</p>\n<nui-example-wrapper\n    filenamePrefix="checkbox-group-basic"\n    exampleTitle="Basic Usage"\n>\n    <nui-checkbox-group-basic-example></nui-checkbox-group-basic-example>\n</nui-example-wrapper>\n\n<h2>Inline</h2>\n<p>\n    Use the <code>nui-checkbox-group-inline</code> class to display checkbox\n    group inline.\n</p>\n<nui-example-wrapper\n    filenamePrefix="checkbox-group-inline"\n    exampleTitle="Inline"\n>\n    <nui-checkbox-group-inline-example></nui-checkbox-group-inline-example>\n</nui-example-wrapper>\n\n<h2>Part of Form</h2>\n<p><code>&lt;nui-checkbox-group&gt;</code> can be used in reactive forms.</p>\n<nui-example-wrapper\n    filenamePrefix="checkbox-group-in-form"\n    exampleTitle="Part of Form"\n>\n    <nui-checkbox-group-in-form-example></nui-checkbox-group-in-form-example>\n</nui-example-wrapper>\n\n<h2>Justified</h2>\n<p>\n    To justify <code>&lt;nui-checkbox&gt;</code> to the width of\n    <code>&lt;nui-checkbox-group&gt;</code> (or simply parent element, in case\n    <code>&lt;nui-checkbox&gt;</code> is used not as a part of\n    <code>&lt;nui-checkbox-group&gt;</code>), add\n    <code>nui-checkbox--justified</code> class to the\n    <code>&lt;nui-checkbox&gt;</code>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="checkbox-group-justified"\n    exampleTitle="Justified"\n>\n    <nui-checkbox-group-justified-example></nui-checkbox-group-justified-example>\n</nui-example-wrapper>\n'},52023:function(e,o,n){"use strict";n.r(o),o.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-docs-example",\n    templateUrl: "./checkbox-group-docs.example.component.html",\n})\nexport class CheckboxGroupExampleComponent {}\n'},99415:function(e,o,n){"use strict";n.r(o),o.default='<form [formGroup]="myForm" (submit)="onSubmit()">\n    <div class="form-group">\n        <nui-message\n            [allowDismiss]="true"\n            type="critical"\n            *ngIf="\n                !myForm.controls[\'checkboxGroup\'].valid &&\n                myForm.controls[\'checkboxGroup\'].touched\n            "\n        >\n            <b i18n>Select minimum 3 checkboxes!</b>\n        </nui-message>\n        <nui-checkbox-group\n            id="nui-demo-checkbox-group-in-form"\n            formControlName="checkboxGroup"\n            name="vegetable"\n            required\n        >\n            <nui-checkbox\n                *ngFor="let vegetable of vegetables"\n                [value]="vegetable"\n            >\n                {{ vegetable }}\n            </nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <button\n        nui-button\n        type="submit"\n        [disabled]="myForm.disabled || myForm.controls[\'checkboxGroup\'].invalid"\n        i18n\n    >\n        Submit\n    </button>\n</form>\n'},87782:function(e,o,n){"use strict";n.r(o),o.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup, Validators } from "@angular/forms";\n\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-checkbox-group-in-form-example",\n    templateUrl: "./checkbox-group-in-form.example.component.html",\n})\nexport class CheckboxGroupInFormExampleComponent implements OnInit {\n    public myForm: FormGroup;\n    public cabbage = $localize`Cabbage`;\n    public potato = $localize`Potato`;\n    public tomato = $localize`Tomato`;\n    public carrot = $localize`Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.cabbage];\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private toastService: ToastService\n    ) {}\n\n    public ngOnInit(): void {\n        this.myForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control(\n                [this.cabbage, this.potato],\n                [Validators.required, Validators.minLength(3)]\n            ),\n        });\n    }\n\n    public onSubmit(): void {\n        console.log(this.myForm);\n        this.toastService.success({ message: $localize`Your form is valid!` });\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},62359:function(e,o,n){"use strict";n.r(o),o.default='<nui-checkbox-group\n    id="nui-demo-checkbox-group-inline"\n    class="nui-checkbox-group-inline"\n    [values]="selectedVegetables"\n    name="vegetable"\n>\n    <nui-checkbox *ngFor="let vegetable of vegetables" [value]="vegetable">\n        {{ vegetable }}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},2661:function(e,o,n){"use strict";n.r(o),o.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-inline-example",\n    templateUrl: "./checkbox-group-inline.example.component.html",\n})\nexport class CheckboxGroupInlineExampleComponent {\n    public cabbage = $localize`Cabbage`;\n    public potato = $localize`Potato`;\n    public tomato = $localize`Tomato`;\n    public carrot = $localize`Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor() {}\n}\n'},82620:function(e,o,n){"use strict";n.r(o),o.default='<nui-checkbox-group\n    id="nui-demo-checkbox-group-justified"\n    name="vegetable"\n    [values]="selectedVegetables"\n>\n    <nui-checkbox\n        *ngFor="let vegetable of vegetables"\n        [value]="vegetable"\n        i18n-hint\n        [hint]="\n            hints.indexOf(vegetable) >= 0\n                ? hints[hints.indexOf(vegetable)]\n                : null\n        "\n        [checked]="isChecked(vegetable)"\n        class="nui-checkbox--justified"\n    >\n        {{ vegetable }}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},43725:function(e,o,n){"use strict";n.r(o),o.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-justified-example",\n    templateUrl: "./checkbox-group-justified.example.component.html",\n})\nexport class CheckboxGroupJustifiedExampleComponent {\n    public cabbage = $localize`Cabbage`;\n    public potato = $localize`Potato`;\n    public tomato = $localize`Tomato`;\n    public carrot = $localize`Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public hints = [this.cabbage, this.tomato];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor() {}\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},86127:function(e,o,n){"use strict";n.r(o),o.default='<div class="container d-flex">\n    <div class="d-flex flex-column mr-5">\n        <nui-checkbox-group\n            id="nui-demo-checkbox-group-basic"\n            name="vegetable"\n            [values]="selectedVegetables"\n        >\n            <nui-checkbox\n                *ngFor="let vegetable of vegetables"\n                [value]="vegetable"\n                hint="This is some help text"\n                [checked]="isChecked(vegetable)"\n            >\n                {{ vegetable }}\n            </nui-checkbox>\n            <nui-checkbox\n                hint="If it\'s not disabled ring the alarm!"\n                id="nui-demo-checkbox-group-1-disabled-checkbox"\n                [value]="disabledOne"\n                [checked]="!isChecked(disabledOne)"\n                disabled="true"\n                >{{ disabledOne }}</nui-checkbox\n            >\n        </nui-checkbox-group>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <nui-checkbox-group\n            id="nui-demo-checkbox-group-justified"\n            name="vegetable"\n            [values]="selectedVegetables"\n        >\n            <nui-checkbox\n                *ngFor="let vegetable of vegetables"\n                [value]="vegetable"\n                [hint]="\n                    hints.indexOf(vegetable) >= 0\n                        ? hints[hints.indexOf(vegetable)]\n                        : null\n                "\n                [checked]="isChecked(vegetable)"\n                class="nui-checkbox--justified"\n            >\n                {{ vegetable }}\n            </nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <form [formGroup]="testForm">\n            <nui-checkbox-group\n                id="nui-demo-checkbox-group-in-form-disabled-checkboxes"\n                name="vegetable"\n                formControlName="checkboxGroup2"\n            >\n                <nui-checkbox\n                    [value]="vegetables[0]"\n                    [disabled]="true"\n                    [checked]="isChecked(vegetables[0])"\n                >\n                    {{ vegetables[0] }}</nui-checkbox\n                >\n                <nui-checkbox\n                    [value]="vegetables[1]"\n                    [disabled]="false"\n                    [checked]="isChecked(vegetables[1])"\n                >\n                    {{ vegetables[1] }}</nui-checkbox\n                >\n                <nui-checkbox\n                    [value]="vegetables[2]"\n                    [disabled]="true"\n                    [checked]="isChecked(vegetables[2])"\n                >\n                    {{ vegetables[2] }}</nui-checkbox\n                >\n                <nui-checkbox\n                    [value]="vegetables[3]"\n                    [disabled]="false"\n                    [checked]="isChecked(vegetables[3])"\n                >\n                    {{ vegetables[3] }}</nui-checkbox\n                >\n            </nui-checkbox-group>\n        </form>\n    </div>\n    <div class="d-flex flex-column mr-5">\n        <nui-checkbox-group-in-form-example\n            id="nui-demo-checkbox-group-part-of-form"\n        ></nui-checkbox-group-in-form-example>\n    </div>\n</div>\n'},97822:function(e,o,n){"use strict";n.r(o),o.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup } from "@angular/forms";\n\n@Component({\n    selector: "nui-checkbox-group-test-example",\n    templateUrl: "checkbox-group-test.component.html",\n})\nexport class CheckboxGroupTestComponent implements OnInit {\n    public testForm: FormGroup;\n    public cabbage = "Cabbage";\n    public potato = "Potato";\n    public tomato = "Tomato";\n    public carrot = "Carrot";\n    public disabledOne = "DISABLED";\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public hints = [this.cabbage, this.tomato];\n    public selectedVegetables = [this.potato, this.tomato, this.disabledOne];\n\n    constructor(private formBuilder: FormBuilder) {}\n\n    public ngOnInit(): void {\n        this.testForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control({\n                value: this.selectedVegetables,\n                disabled: true,\n            }),\n            checkboxGroup2: this.formBuilder.control({\n                value: this.selectedVegetables,\n                disabled: false,\n            }),\n        });\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},14308:function(e,o,n){"use strict";n.r(o),o.default='<div class="container">\n    <div class="row">\n        <div class="col">\n            <h3>Basic Checkbox-Group with Hint Text</h3>\n            <nui-checkbox-group\n                id="nui-demo-checkbox-group-basic"\n                name="vegetable"\n                [values]="selectedVegetables"\n            >\n                <nui-checkbox\n                    *ngFor="let vegetable of vegetables"\n                    [value]="vegetable"\n                    hint="This is some help text"\n                    [checked]="isChecked(vegetable)"\n                >\n                    {{ vegetable }}\n                </nui-checkbox>\n                <nui-checkbox\n                    hint="If it\'s not disabled ring the alarm!"\n                    id="nui-demo-checkbox-group-1-disabled-checkbox"\n                    [value]="disabledOne"\n                    [checked]="!isChecked(disabledOne)"\n                    disabled="true"\n                    >{{ disabledOne }}</nui-checkbox\n                >\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Inline Checkbox-Group</h3>\n            <nui-checkbox-group\n                id="nui-demo-checkbox-group-inline"\n                class="nui-checkbox-group-inline"\n                [values]="selectedVegetables"\n                name="vegetable"\n            >\n                <nui-checkbox\n                    *ngFor="let vegetable of vegetables"\n                    [value]="vegetable"\n                >\n                    {{ vegetable }}\n                </nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="w-100"></div>\n        <div class="col">\n            <h3>Justified Checkbox-Group</h3>\n            <nui-checkbox-group\n                id="nui-demo-checkbox-group-justified"\n                name="vegetable"\n                [values]="selectedVegetables"\n            >\n                <nui-checkbox\n                    *ngFor="let vegetable of vegetables"\n                    [value]="vegetable"\n                    [checked]="isChecked(vegetable)"\n                    class="nui-checkbox--justified"\n                >\n                    {{ vegetable }}\n                </nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Disabled checkboxes within the form</h3>\n            <form [formGroup]="testForm">\n                <nui-checkbox-group\n                    id="nui-demo-checkbox-group-in-form-disabled-checkboxes"\n                    name="vegetable"\n                    formControlName="enabledCheckboxGroup"\n                >\n                    <nui-checkbox\n                        [value]="vegetables[0]"\n                        [disabled]="true"\n                        [checked]="isChecked(vegetables[0])"\n                    >\n                        {{ vegetables[0] }}</nui-checkbox\n                    >\n                    <nui-checkbox\n                        [value]="vegetables[1]"\n                        [disabled]="false"\n                        [checked]="isChecked(vegetables[1])"\n                    >\n                        {{ vegetables[1] }}</nui-checkbox\n                    >\n                    <nui-checkbox\n                        [value]="vegetables[2]"\n                        [disabled]="true"\n                        [checked]="isChecked(vegetables[2])"\n                    >\n                        {{ vegetables[2] }}</nui-checkbox\n                    >\n                    <nui-checkbox\n                        [value]="vegetables[3]"\n                        [disabled]="false"\n                        [checked]="isChecked(vegetables[3])"\n                    >\n                        {{ vegetables[3] }}</nui-checkbox\n                    >\n                </nui-checkbox-group>\n            </form>\n        </div>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <h3>Disabled checkboxes within the disabled form</h3>\n        <form [formGroup]="testForm">\n            <nui-checkbox-group\n                id="nui-demo-checkbox-group-in-form"\n                name="vegetable"\n                formControlName="disabledCheckboxGroup"\n            >\n                <nui-checkbox\n                    *ngFor="let vegetable of vegetables"\n                    [value]="vegetable"\n                    [checked]="isChecked(vegetable)"\n                >\n                    {{ vegetable }}\n                </nui-checkbox>\n            </nui-checkbox-group>\n        </form>\n    </div>\n</div>\n'},57559:function(e,o,n){"use strict";n.r(o),o.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup } from "@angular/forms";\n\n@Component({\n    selector: "nui-checkbox-group-visual-test",\n    templateUrl: "./checkbox-group-visual-test.component.html",\n})\nexport class CheckboxGroupVisualTestComponent implements OnInit {\n    public testForm: FormGroup;\n    public cabbage = "Cabbage";\n    public potato = "Potato";\n    public tomato = "Tomato";\n    public carrot = "Carrot";\n    public disabledOne = "DISABLED";\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato, this.disabledOne];\n\n    constructor(private formBuilder: FormBuilder) {}\n\n    public ngOnInit(): void {\n        this.testForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control({\n                value: this.selectedVegetables,\n                disabled: true,\n            }),\n            checkboxGroup2: this.formBuilder.control({\n                value: this.selectedVegetables,\n                disabled: false,\n            }),\n        });\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},11753:function(e,o,n){"use strict";n.r(o),o.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiCheckboxModule,\n    NuiDocsModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport { CheckboxGroupTestComponent } from "./checkbox-group-test/checkbox-group-test.component";\nimport {\n    CheckboxGroupBasicExampleComponent,\n    CheckboxGroupExampleComponent,\n    CheckboxGroupInFormExampleComponent,\n    CheckboxGroupInlineExampleComponent,\n    CheckboxGroupJustifiedExampleComponent,\n    CheckboxGroupVisualTestComponent,\n} from "./index";\n\nconst routes = [\n    {\n        path: "",\n        component: CheckboxGroupExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "checkbox-group-visual-test",\n        component: CheckboxGroupVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "checkbox-group-test",\n        component: CheckboxGroupTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiCheckboxModule,\n        NuiDocsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiButtonModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        CheckboxGroupExampleComponent,\n        CheckboxGroupInlineExampleComponent,\n        CheckboxGroupInFormExampleComponent,\n        CheckboxGroupBasicExampleComponent,\n        CheckboxGroupVisualTestComponent,\n        CheckboxGroupJustifiedExampleComponent,\n        CheckboxGroupTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () =>\n                (<any>require).context(\n                    `!!raw-loader!./`,\n                    true,\n                    /.*\\.(ts|html|less)$/\n                ),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport class CheckboxGroupModule {}\n'},60792:function(e,o,n){"use strict";n.r(o),o.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./checkbox-group-docs/checkbox-group-docs.example.component";\nexport * from "./checkbox-group-inline/checkbox-group-inline.example.component";\nexport * from "./checkbox-group-basic/checkbox-group-basic.example.component";\nexport * from "./checkbox-group-in-form/checkbox-group-in-form.example.component";\nexport * from "./checkbox-group-visual-test/checkbox-group-visual-test.component";\nexport * from "./checkbox-group-justified/checkbox-group-justified.example.component";\nexport * from "./checkbox-group-test/checkbox-group-test.component";\n'}}])}();