(self.webpackChunk_nova_ui_bits=self.webpackChunk_nova_ui_bits||[]).push([[7437],{12396:function(e,n,t){var o={"./selector.example.component.html":59381,"./selector.example.component.ts":88895,"./selector.module.ts":24011,"components/demo/selector/selector.example.component.html":59381,"components/demo/selector/selector.example.component.ts":88895,"components/demo/selector/selector.module.ts":24011};function i(e){var n=s(e);return t(n)}function s(e){if(!t.o(o,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return o[e]}i.keys=function(){return Object.keys(o)},i.resolve=s,e.exports=i,i.id=12396},67437:function(e,n,t){"use strict";t.r(n),t.d(n,{SelectorModule:function(){return l}});var o=t(99763),i=t(14347),s=t(33018),a=t(30545);const c=[{path:"",component:(()=>{class e{constructor(){this.selection=i.RTf.None,this.availableStatuses=this.getMenuItems([i.RTf.All,i.RTf.AllPages,i.RTf.None]),this.checkBoxStatus=i.fEY.Unchecked,this.appendToBody=!1}onSelectionChange(e){switch(this.selection=e,this.selection){case i.RTf.All:this.checkBoxStatus=i.fEY.Checked,this.availableStatuses=this.getMenuItems([i.RTf.AllPages,i.RTf.None]);break;case i.RTf.AllPages:this.checkBoxStatus=i.fEY.Checked,this.availableStatuses=this.getMenuItems([i.RTf.All,i.RTf.None]);break;case i.RTf.None:case i.RTf.UnselectAll:this.checkBoxStatus=i.fEY.Unchecked,this.availableStatuses=this.getMenuItems([i.RTf.All,i.RTf.AllPages])}}makeIndeterminate(){this.checkBoxStatus=i.fEY.Indeterminate,this.selection=i.RTf.None}makeAppendedToBody(){this.appendToBody=!0}getMenuItems(e){const n=[{itemsSource:[]}];return e.map(e=>{n[0].itemsSource.push({value:e,title:e})}),n}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=s.Xpm({type:e,selectors:[["nui-selector-example"]],decls:15,vars:5,consts:function(){let e,n;return e=$localize`:␟13aebccf3b7526151f9efc0c9423822f269e0ad2␟2810888944812898030:Make indeterminate`,n=$localize`:␟d1a539e5756ea095398f07ee483e430a593d6c58␟3335553063699247815:Make appended to body`,[["id","nui-demo-selector",3,"checkboxStatus","appendToBody","items","selectionChange"],["href","javascript:;","id","nui-demo-make-indeterminate",3,"click"],e,["href","javascript:;","id","nui-demo-make-appended-to-body",3,"click"],n,["id","nui-demo-selection-type"],["id","nui-demo-indeterminate"]]},template:function(e,n){1&e&&(s.TgZ(0,"h5"),s._uU(1,"selector"),s.qZA(),s.TgZ(2,"nui-selector",0),s.NdJ("selectionChange",function(e){return n.onSelectionChange(e)}),s.qZA(),s.TgZ(3,"a",1),s.NdJ("click",function(){return n.makeIndeterminate()}),s.SDv(4,2),s.qZA(),s.TgZ(5,"a",3),s.NdJ("click",function(){return n.makeAppendedToBody()}),s.SDv(6,4),s.qZA(),s.TgZ(7,"pre"),s._uU(8,"[Selection: "),s.TgZ(9,"span",5),s._uU(10),s.qZA(),s._uU(11,", checkbox status: "),s.TgZ(12,"span",6),s._uU(13),s.qZA(),s._uU(14,"]"),s.qZA()),2&e&&(s.xp6(2),s.Q6J("checkboxStatus",n.checkBoxStatus)("appendToBody",n.appendToBody)("items",n.availableStatuses),s.xp6(8),s.Oqu(n.selection),s.xp6(3),s.Oqu(n.checkBoxStatus))},directives:[a.i],encapsulation:2}),e})()}];let l=(()=>{class e{}return e.\u0275fac=function(n){return new(n||e)},e.\u0275mod=s.oAB({type:e}),e.\u0275inj=s.cJS({providers:[{provide:i.V3$,useFactory:()=>t(12396)}],imports:[[i.kWU,i.vvu,o.Bz.forChild(c)],o.Bz]}),e})()},59381:function(e,n,t){"use strict";t.r(n),n.default='<h5>selector</h5>\n<nui-selector\n    id="nui-demo-selector"\n    (selectionChange)="onSelectionChange($event)"\n    [checkboxStatus]="checkBoxStatus"\n    [appendToBody]="appendToBody"\n    [items]="availableStatuses"\n>\n</nui-selector>\n\n<a\n    href="javascript:;"\n    (click)="makeIndeterminate()"\n    id="nui-demo-make-indeterminate"\n    i18n\n    >Make indeterminate</a\n>\n<a\n    href="javascript:;"\n    (click)="makeAppendedToBody()"\n    id="nui-demo-make-appended-to-body"\n    i18n\n    >Make appended to body</a\n>\n<pre>[Selection: <span id="nui-demo-selection-type">{{selection}}</span>, checkbox status: <span id="nui-demo-indeterminate">{{checkBoxStatus}}</span>]</pre>\n'},88895:function(e,n,t){"use strict";t.r(n),n.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { CheckboxStatus, IMenuGroup, SelectionType } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-selector-example",\n    templateUrl: "./selector.example.component.html",\n})\nexport class SelectorExampleComponent {\n    public selection: SelectionType = SelectionType.None;\n    public availableStatuses: IMenuGroup[] = this.getMenuItems([\n        SelectionType.All,\n        SelectionType.AllPages,\n        SelectionType.None,\n    ]);\n    public checkBoxStatus: CheckboxStatus = CheckboxStatus.Unchecked;\n    public appendToBody = false;\n\n    public onSelectionChange(event: SelectionType): void {\n        this.selection = event;\n\n        switch (this.selection) {\n            case SelectionType.All:\n                this.checkBoxStatus = CheckboxStatus.Checked;\n                this.availableStatuses = this.getMenuItems([\n                    SelectionType.AllPages,\n                    SelectionType.None,\n                ]);\n                break;\n            case SelectionType.AllPages:\n                this.checkBoxStatus = CheckboxStatus.Checked;\n                this.availableStatuses = this.getMenuItems([\n                    SelectionType.All,\n                    SelectionType.None,\n                ]);\n                break;\n            case SelectionType.None:\n            case SelectionType.UnselectAll:\n                this.checkBoxStatus = CheckboxStatus.Unchecked;\n                this.availableStatuses = this.getMenuItems([\n                    SelectionType.All,\n                    SelectionType.AllPages,\n                ]);\n                break;\n        }\n    }\n\n    public makeIndeterminate(): void {\n        this.checkBoxStatus = CheckboxStatus.Indeterminate;\n        this.selection = SelectionType.None;\n    }\n\n    public makeAppendedToBody(): void {\n        this.appendToBody = true;\n    }\n\n    public getMenuItems(arr: SelectionType[]): IMenuGroup[] {\n        const resultArr: IMenuGroup[] = [\n            {\n                itemsSource: [],\n            },\n        ];\n        arr.map((element: SelectionType) => {\n            resultArr[0].itemsSource.push({ value: element, title: element });\n        });\n        return resultArr;\n    }\n}\n'},24011:function(e,n,t){"use strict";t.r(n),n.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiDocsModule,\n    NuiSelectorModule,\n} from "@nova-ui/bits";\n\nimport { SelectorExampleComponent } from "./selector.example.component";\n\nconst routes = [\n    {\n        path: "",\n        component: SelectorExampleComponent,\n    },\n];\n\n@NgModule({\n    imports: [NuiSelectorModule, NuiDocsModule, RouterModule.forChild(routes)],\n    declarations: [SelectorExampleComponent],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () =>\n                (<any>require).context(\n                    `!!raw-loader!./`,\n                    true,\n                    /.*\\.(ts|html|less)$/\n                ),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport class SelectorModule {}\n'}}]);