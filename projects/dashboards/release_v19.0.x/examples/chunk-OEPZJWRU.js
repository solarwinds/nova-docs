import{Bc as e,Db as s,bc as t,cc as i}from"./chunk-MCPF2SEG.js";var c=(()=>{class n{static{this.\u0275fac=function(a){return new(a||n)}}static{this.\u0275cmp=s({type:n,selectors:[["nui-dynamic-header-links-docs"]],standalone:!1,decls:21,vars:0,consts:[["href","../interfaces/IHeaderLinkProvider.html","target","_blank"],["href","../miscellaneous/variables.html#HEADER_LINK_PROVIDER"],["target","_blank","href","https://github.com/solarwinds/nova/blob/main/packages/dashboards/examples/src/components/prototypes/prototype-1/prototype-1.component.ts"]],template:function(a,r){a&1&&(t(0,"h1"),e(1,"Dynamic Header Links"),i(),t(2,"p"),e(3," Widget headers provide a possibility to configure a link URL that shows a link icon and makes the header clickable. This URL is static, but there is an option to implement a dynamic URL. This is done by implementing a custom class and defining it as a provider associated with the widget header in targeted widget types. This custom class has to implement the "),t(4,"code")(5,"a",0),e(6,"IHeaderLinkProvider"),i()(),e(7," interface which defines a method returning a dynamic link URL. This URL can be based on the "),t(8,"code"),e(9,"template"),i(),e(10," input, which is the static URL that was configured by the user. This can be used as a template string where specific parameters can be injected or appended at the end. Custom header link provider has to be registered using the "),t(11,"code")(12,"a",1),e(13,"HEADER_LINK_PROVIDER"),i()(),e(14,` injection token.
`),i(),t(15,"p"),e(16," Internal "),t(17,"code")(18,"a",2),e(19,"prototype-1"),i()(),e(20,` page demonstrates the implementation of a dynamic link URL that includes a value of an external textbox.
`),i())},encapsulation:2})}}return n})();export{c as a};
