"use strict";(self.webpackChunkexamples=self.webpackChunkexamples||[]).push([[435],{14435:(O,D,p)=>{p.r(D),p.d(D,{default:()=>nt});var f=p(49432),b=p(85907),c=p(8599),j=p(23929),t=p(99019),I=p(80216),G=p(70716),W=p.n(G),z=p(97861),v=p.n(z),U=p(28508),e=p.n(U),S=p(60142),F=p(54739),R=p(17955),w=p(67432);function B(r,m){if(1&r){const i=t.RV6();t.j41(0,"button",6),t.bIt("click",function(){t.eBV(i);const s=t.XpG();return t.Njj(s.reInitializeDashboard())}),t.EFF(1," Restore Widget "),t.k0s()}}function V(r,m){if(1&r){const i=t.RV6();t.j41(0,"nui-dashboard",7),t.bIt("dashboardChange",function(s){t.eBV(i);const l=t.XpG();return t.Njj(l.dashboard=s)})("gridsterConfigChange",function(s){t.eBV(i);const l=t.XpG();return t.Njj(l.gridsterConfig=s)}),t.k0s()}if(2&r){const i=t.XpG();t.Y8G("dashboard",i.dashboard)("editMode",i.editMode)("gridsterConfig",i.gridsterConfig)}}let g=(()=>{class r extends b.n_V{constructor(){super(...arguments),this.busy=new S.t(!1)}static{this.providerId="BeerVsReadingMockDataSource"}getFilteredData(i){var n=this;return(0,I.A)(function*(){let s=H();n.busy.next(!0);const l=i.timeframe?.value;return l&&(s=s.map(y=>({id:y.id,name:y.name,description:y.description,data:y.data.filter(h=>function X(r,m,i){const n=e()(r);return n.isBetween(m,i)||n.isSame(m)||n.isSame(i)}(h.x,l.startDatetime,l.endDatetime))}))),n.busy.next(!1),{result:{series:s}}})()}static{this.\u0275fac=function(){let i;return function(s){return(i||(i=t.xGo(r)))(s||r)}}()}static{this.\u0275prov=t.jDH({token:r,factory:r.\u0275fac})}}return r})(),P=(()=>{class r{constructor(i,n,s){this.widgetTypesService=i,this.providerRegistry=n,this.changeDetectorRef=s,this.gridsterConfig={},this.editMode=!1}ngOnInit(){const i=this.widgetTypesService.getWidgetType("timeseries",1);this.widgetTypesService.setNode(i,"configurator",c.Eov.DataSourceProviders,[g.providerId]),this.providerRegistry.setProviders({[g.providerId]:{provide:c.R9t,useClass:g,deps:[]}}),this.initializeDashboard()}initializeDashboard(){const i=x.map(s=>this.widgetTypesService.mergeWithWidgetType(s)),n=v()(i,s=>s.id);this.dashboard={positions:W()(Y),widgets:n}}reInitializeDashboard(){this.dashboard=void 0,this.changeDetectorRef.detectChanges(),this.initializeDashboard()}static{this.\u0275fac=function(n){return new(n||r)(t.rXU(c.Dz_),t.rXU(c.g_3),t.rXU(t.gRc))}}static{this.\u0275cmp=t.VBU({type:r,selectors:[["timeseries-widget-example"]],decls:6,vars:3,consts:function(){let i;return i=$localize`:␟18d630a3c524dbab6dc528571782a939a7bc95b1␟861097914887003123: Edit Mode `,[[1,"mb-2","d-flex","align-items-center"],[1,"ml-3","py-2",3,"value","valueChange"],i,["type","button","displayStyle","action","nui-button","",3,"click",4,"ngIf"],[1,"w-100","dashboard"],["nuiWidgetEditor","",3,"dashboard","editMode","gridsterConfig","dashboardChange","gridsterConfigChange",4,"ngIf"],["type","button","displayStyle","action","nui-button","",3,"click"],["nuiWidgetEditor","",3,"dashboard","editMode","gridsterConfig","dashboardChange","gridsterConfigChange"]]},template:function(n,s){1&n&&(t.j41(0,"div",0)(1,"nui-switch",1),t.bIt("valueChange",function(y){return s.editMode=y}),t.pXf(2,2),t.k0s(),t.DNE(3,B,2,0,"button",3),t.k0s(),t.j41(4,"div",4),t.DNE(5,V,1,3,"nui-dashboard",5),t.k0s()),2&n&&(t.R7$(1),t.Y8G("value",s.editMode),t.R7$(2),t.Y8G("ngIf",!(null!=s.dashboard&&s.dashboard.widgets.timeseriesWidgetId)),t.R7$(2),t.Y8G("ngIf",s.dashboard))},dependencies:[b.Qpp,F.bT,b.clF,R.S,w.Z],styles:[".dashboard[_ngcontent-%COMP%]{height:725px}"]})}}return r})();const x=[{id:"lineWidgetId",type:"timeseries",pizzagna:{[c.K8R.Configuration]:{[c.ocI]:{providers:{[c.ShF.DataSource]:{providerId:g.providerId}}},header:{properties:{title:"Line Chart",subtitle:"Survey of 1000 Solarians"}},chart:{providers:{[c.ShF.Adapter]:{properties:{series:[{id:"series-1",label:"Beer Tasting",selectedSeriesId:"series-1"},{id:"series-2",label:"Reading",selectedSeriesId:"series-2"}]}}},properties:{configuration:{legendPlacement:c.z4j.Right,enableZoom:!0,leftAxisLabel:"Solarians (%)"}}},timeframeSelection:{properties:{timeframe:{selectedPresetId:"last7Days"},minDate:e()().subtract(60,"days").format(),maxDate:e()().format()}}}}},{id:"stackedAreaWidgetId",type:"timeseries",pizzagna:{[c.K8R.Configuration]:{[c.ocI]:{providers:{[c.ShF.DataSource]:{providerId:g.providerId}}},header:{properties:{title:"Stacked Area Chart",subtitle:"Survey of 1000 Solarians"}},chart:{providers:{[c.ShF.Adapter]:{properties:{series:[{id:"series-1",label:"Beer Tasting",selectedSeriesId:"series-1"},{id:"series-2",label:"Reading",selectedSeriesId:"series-2"}]}}},properties:{configuration:{legendPlacement:c.z4j.Right,enableZoom:!0,preset:c.MVE.StackedArea,leftAxisLabel:"Solarians (%)"}}},timeframeSelection:{properties:{timeframe:{selectedPresetId:"last7Days"},minDate:e()().subtract(60,"days").format(),maxDate:e()().format()}}}}},{id:"stackedPercentageAreaWidgetId",type:"timeseries",pizzagna:{[c.K8R.Configuration]:{[c.ocI]:{providers:{[c.ShF.DataSource]:{providerId:g.providerId}}},header:{properties:{title:"Stacked Percentage Area Chart",subtitle:"Survey of 1000 Solarians"}},chart:{providers:{[c.ShF.Adapter]:{properties:{series:[{id:"series-1",label:"Beer Tasting",selectedSeriesId:"series-1"},{id:"series-2",label:"Reading",selectedSeriesId:"series-2"}]}}},properties:{configuration:{legendPlacement:c.z4j.Right,enableZoom:!0,preset:c.MVE.StackedPercentageArea,leftAxisLabel:"Solarians (%)"}}},timeframeSelection:{properties:{timeframe:{selectedPresetId:"last7Days"},minDate:e()().subtract(60,"days").format(),maxDate:e()().format()}}}}},{id:"stackedBarWidgetId",type:"timeseries",pizzagna:{[c.K8R.Configuration]:{[c.ocI]:{providers:{[c.ShF.DataSource]:{providerId:g.providerId}}},header:{properties:{title:"Stacked Bar Chart",subtitle:"Survey of 1000 Solarians"}},chart:{providers:{[c.ShF.Adapter]:{properties:{series:[{id:"series-1",label:"Beer Tasting",selectedSeriesId:"series-1"},{id:"series-2",label:"Reading",selectedSeriesId:"series-2"}]}}},properties:{configuration:{legendPlacement:c.z4j.Right,enableZoom:!0,leftAxisLabel:"Solarians (%)",preset:c.MVE.StackedBar,scales:{x:{type:c.jvU.TimeInterval,properties:{interval:86400}}}}}},timeframeSelection:{properties:{timeframe:{selectedPresetId:"last7Days"},minDate:e()().subtract(60,"days").format(),maxDate:e()().format()}}}}}],u=e()().startOf("day"),H=()=>[{id:"series-1",name:"Beer Tasting",description:"Havin' some suds",data:[{x:u.clone().subtract(20,"day").toDate(),y:30},{x:u.clone().subtract(19,"day").toDate(),y:35},{x:u.clone().subtract(18,"day").toDate(),y:33},{x:u.clone().subtract(17,"day").toDate(),y:40},{x:u.clone().subtract(16,"day").toDate(),y:35},{x:u.clone().subtract(15,"day").toDate(),y:30},{x:u.clone().subtract(14,"day").toDate(),y:35},{x:u.clone().subtract(13,"day").toDate(),y:15},{x:u.clone().subtract(12,"day").toDate(),y:30},{x:u.clone().subtract(11,"day").toDate(),y:45},{x:u.clone().subtract(10,"day").toDate(),y:60},{x:u.clone().subtract(9,"day").toDate(),y:54},{x:u.clone().subtract(8,"day").toDate(),y:42},{x:u.clone().subtract(7,"day").toDate(),y:44},{x:u.clone().subtract(6,"day").toDate(),y:54},{x:u.clone().subtract(5,"day").toDate(),y:43},{x:u.clone().subtract(4,"day").toDate(),y:76},{x:u.clone().subtract(3,"day").toDate(),y:54},{x:u.clone().subtract(2,"day").toDate(),y:42},{x:u.clone().subtract(1,"day").toDate(),y:34}]},{id:"series-2",name:"Reading",description:"Hittin' the books",data:[{x:u.clone().subtract(20,"day").toDate(),y:60},{x:u.clone().subtract(19,"day").toDate(),y:64},{x:u.clone().subtract(18,"day").toDate(),y:70},{x:u.clone().subtract(17,"day").toDate(),y:55},{x:u.clone().subtract(16,"day").toDate(),y:55},{x:u.clone().subtract(15,"day").toDate(),y:45},{x:u.clone().subtract(14,"day").toDate(),y:60},{x:u.clone().subtract(13,"day").toDate(),y:65},{x:u.clone().subtract(12,"day").toDate(),y:63},{x:u.clone().subtract(11,"day").toDate(),y:60},{x:u.clone().subtract(10,"day").toDate(),y:61},{x:u.clone().subtract(9,"day").toDate(),y:65},{x:u.clone().subtract(8,"day").toDate(),y:63},{x:u.clone().subtract(7,"day").toDate(),y:58},{x:u.clone().subtract(6,"day").toDate(),y:64},{x:u.clone().subtract(5,"day").toDate(),y:63},{x:u.clone().subtract(4,"day").toDate(),y:60},{x:u.clone().subtract(3,"day").toDate(),y:62},{x:u.clone().subtract(2,"day").toDate(),y:61},{x:u.clone().subtract(1,"day").toDate(),y:62}]}],Y={[x[0].id]:{cols:6,rows:6,y:0,x:0},[x[1].id]:{cols:6,rows:6,y:0,x:6},[x[3].id]:{cols:6,rows:6,y:6,x:0},[x[2].id]:{cols:6,rows:6,y:6,x:6}};function K(r,m){if(1&r){const i=t.RV6();t.j41(0,"button",6),t.bIt("click",function(){t.eBV(i);const s=t.XpG();return t.Njj(s.reInitializeDashboard())}),t.EFF(1," Restore Widget "),t.k0s()}}function $(r,m){if(1&r){const i=t.RV6();t.j41(0,"nui-dashboard",7),t.bIt("dashboardChange",function(s){t.eBV(i);const l=t.XpG();return t.Njj(l.dashboard=s)})("gridsterConfigChange",function(s){t.eBV(i);const l=t.XpG();return t.Njj(l.gridsterConfig=s)}),t.k0s()}if(2&r){const i=t.XpG();t.Y8G("dashboard",i.dashboard)("editMode",i.editMode)("gridsterConfig",i.gridsterConfig)}}let E=(()=>{class r extends b.n_V{constructor(){super(...arguments),this.busy=new S.t(!1)}static{this.providerId="TimeseriesMockDataSource"}getFilteredData(i){var n=this;return(0,I.A)(function*(){let s=Q();n.busy.next(!0);const l=i.timeframe?.value;return l&&(s=s.map(y=>({id:y.id,name:y.name,description:y.description,link:y?.link,secondaryLink:y?.secondaryLink,data:y.data.filter(h=>function Z(r,m,i){const n=e()(r);return n.isBetween(m,i)||n.isSame(m)||n.isSame(i)}(h.x,l.startDatetime,l.endDatetime))}))),n.busy.next(!1),{result:{series:s}}})()}static{this.\u0275fac=function(){let i;return function(s){return(i||(i=t.xGo(r)))(s||r)}}()}static{this.\u0275prov=t.jDH({token:r,factory:r.\u0275fac})}}return r})(),J=(()=>{class r{constructor(i,n,s){this.widgetTypesService=i,this.providerRegistry=n,this.changeDetectorRef=s,this.gridsterConfig={},this.editMode=!1}ngOnInit(){const i=this.widgetTypesService.getWidgetType("timeseries",1);this.widgetTypesService.setNode(i,"configurator",c.Eov.DataSourceProviders,[E.providerId]),this.providerRegistry.setProviders({[E.providerId]:{provide:c.R9t,useClass:E,deps:[]}}),this.initializeDashboard()}initializeDashboard(){const i=A.map(s=>this.widgetTypesService.mergeWithWidgetType(s)),n=v()(i,s=>s.id);this.dashboard={positions:W()(q),widgets:n}}reInitializeDashboard(){this.dashboard=void 0,this.changeDetectorRef.detectChanges(),this.initializeDashboard()}static{this.\u0275fac=function(n){return new(n||r)(t.rXU(c.Dz_),t.rXU(c.g_3),t.rXU(t.gRc))}}static{this.\u0275cmp=t.VBU({type:r,selectors:[["timeseries-widget-interactive-example"]],decls:6,vars:3,consts:function(){let i;return i=$localize`:␟18d630a3c524dbab6dc528571782a939a7bc95b1␟861097914887003123: Edit Mode `,[[1,"mb-2","d-flex","align-items-center"],[1,"ml-3","py-2",3,"value","valueChange"],i,["type","button","displayStyle","action","nui-button","",3,"click",4,"ngIf"],[1,"w-100","dashboard"],["nuiWidgetEditor","",3,"dashboard","editMode","gridsterConfig","dashboardChange","gridsterConfigChange",4,"ngIf"],["type","button","displayStyle","action","nui-button","",3,"click"],["nuiWidgetEditor","",3,"dashboard","editMode","gridsterConfig","dashboardChange","gridsterConfigChange"]]},template:function(n,s){1&n&&(t.j41(0,"div",0)(1,"nui-switch",1),t.bIt("valueChange",function(y){return s.editMode=y}),t.pXf(2,2),t.k0s(),t.DNE(3,K,2,0,"button",3),t.k0s(),t.j41(4,"div",4),t.DNE(5,$,1,3,"nui-dashboard",5),t.k0s()),2&n&&(t.R7$(1),t.Y8G("value",s.editMode),t.R7$(2),t.Y8G("ngIf",!(null!=s.dashboard&&s.dashboard.widgets.timeseriesWidgetId)),t.R7$(2),t.Y8G("ngIf",s.dashboard))},dependencies:[b.Qpp,F.bT,b.clF,R.S,w.Z],styles:[".dashboard[_ngcontent-%COMP%]{height:375px}"]})}}return r})();const A=[{id:"lineWidgetId",type:"timeseries",pizzagna:{[c.K8R.Configuration]:{[c.ocI]:{providers:{[c.ShF.DataSource]:{providerId:E.providerId},[c.ShF.InteractionHandler]:{providerId:c.j70,properties:{url:"${data.link || 'https://en.wikipedia.org/wiki/'+data.legendDescriptionPrimary}"}}}},header:{properties:{title:"Line Chart",subtitle:"Basic Timeseries with Interaction"}},chart:{providers:{[c.ShF.Adapter]:{properties:{series:[{id:"series-1",label:"Nur-Sultan",selectedSeriesId:"series-1"},{id:"series-2",label:"Brno",selectedSeriesId:"series-2"},{id:"series-3",label:"Lisbon",selectedSeriesId:"series-3"},{id:"series-4",label:"Austin",selectedSeriesId:"series-4"}]}}},properties:{configuration:{interaction:"series",legendPlacement:c.z4j.Right,enableZoom:!0}}},timeframeSelection:{properties:{timeframe:{selectedPresetId:"last7Days"},minDate:e()().subtract(60,"days").format(),maxDate:e()().format()}}}}},{id:"stackedBarWidgetId",type:"timeseries",pizzagna:{[c.K8R.Configuration]:{[c.ocI]:{providers:{[c.ShF.DataSource]:{providerId:E.providerId}}},header:{properties:{title:"Stacked Bar Chart",subtitle:"Basic Timeseries without Interaction Handler"}},chart:{providers:{[c.ShF.Adapter]:{properties:{series:[{id:"series-1",label:"Nur-Sultan",selectedSeriesId:"series-1"},{id:"series-2",label:"Brno",selectedSeriesId:"series-2"},{id:"series-3",label:"Lisbon",selectedSeriesId:"series-3"},{id:"series-4",label:"Austin",selectedSeriesId:"series-4"}]}}},properties:{configuration:{legendPlacement:c.z4j.Right,enableZoom:!0,preset:c.MVE.StackedBar,scales:{x:{type:c.jvU.TimeInterval,properties:{interval:86400}}}}}},timeframeSelection:{properties:{timeframe:{selectedPresetId:"last7Days"},minDate:e()().subtract(60,"days").format(),maxDate:e()().format()}}}}}],a=e()().startOf("day").toDate(),Q=()=>[{id:"series-1",name:"Nur-Sultan",description:"'link' only",link:"https://en.wikipedia.org/wiki/Nur-Sultan",data:[{x:e()(a).subtract(59,"day").toDate(),y:35},{x:e()(a).subtract(58,"day").toDate(),y:33},{x:e()(a).subtract(57,"day").toDate(),y:40},{x:e()(a).subtract(56,"day").toDate(),y:35},{x:e()(a).subtract(55,"day").toDate(),y:30},{x:e()(a).subtract(54,"day").toDate(),y:35},{x:e()(a).subtract(53,"day").toDate(),y:15},{x:e()(a).subtract(52,"day").toDate(),y:30},{x:e()(a).subtract(51,"day").toDate(),y:35},{x:e()(a).subtract(50,"day").toDate(),y:34},{x:e()(a).subtract(49,"day").toDate(),y:35},{x:e()(a).subtract(48,"day").toDate(),y:33},{x:e()(a).subtract(47,"day").toDate(),y:40},{x:e()(a).subtract(46,"day").toDate(),y:35},{x:e()(a).subtract(45,"day").toDate(),y:30},{x:e()(a).subtract(44,"day").toDate(),y:35},{x:e()(a).subtract(43,"day").toDate(),y:15},{x:e()(a).subtract(42,"day").toDate(),y:30},{x:e()(a).subtract(41,"day").toDate(),y:35},{x:e()(a).subtract(40,"day").toDate(),y:34},{x:e()(a).subtract(39,"day").toDate(),y:35},{x:e()(a).subtract(38,"day").toDate(),y:33},{x:e()(a).subtract(37,"day").toDate(),y:40},{x:e()(a).subtract(36,"day").toDate(),y:35},{x:e()(a).subtract(35,"day").toDate(),y:30},{x:e()(a).subtract(34,"day").toDate(),y:35},{x:e()(a).subtract(33,"day").toDate(),y:15},{x:e()(a).subtract(32,"day").toDate(),y:30},{x:e()(a).subtract(31,"day").toDate(),y:35},{x:e()(a).subtract(30,"day").toDate(),y:34},{x:e()(a).subtract(29,"day").toDate(),y:35},{x:e()(a).subtract(28,"day").toDate(),y:33},{x:e()(a).subtract(27,"day").toDate(),y:40},{x:e()(a).subtract(26,"day").toDate(),y:35},{x:e()(a).subtract(25,"day").toDate(),y:30},{x:e()(a).subtract(24,"day").toDate(),y:35},{x:e()(a).subtract(23,"day").toDate(),y:15},{x:e()(a).subtract(22,"day").toDate(),y:30},{x:e()(a).subtract(21,"day").toDate(),y:35},{x:e()(a).subtract(20,"day").toDate(),y:34},{x:e()(a).subtract(19,"day").toDate(),y:35},{x:e()(a).subtract(18,"day").toDate(),y:33},{x:e()(a).subtract(17,"day").toDate(),y:40},{x:e()(a).subtract(16,"day").toDate(),y:35},{x:e()(a).subtract(15,"day").toDate(),y:30},{x:e()(a).subtract(14,"day").toDate(),y:35},{x:e()(a).subtract(13,"day").toDate(),y:15},{x:e()(a).subtract(12,"day").toDate(),y:30},{x:e()(a).subtract(11,"day").toDate(),y:35},{x:e()(a).subtract(10,"day").toDate(),y:34},{x:e()(a).subtract(9,"day").toDate(),y:33},{x:e()(a).subtract(8,"day").toDate(),y:35},{x:e()(a).subtract(7,"day").toDate(),y:36},{x:e()(a).subtract(6,"day").toDate(),y:34},{x:e()(a).subtract(5,"day").toDate(),y:33},{x:e()(a).subtract(4,"day").toDate(),y:30},{x:e()(a).subtract(3,"day").toDate(),y:32},{x:e()(a).subtract(2,"day").toDate(),y:31},{x:e()(a).subtract(1,"day").toDate(),y:34},{x:e()(a).toDate(),y:25}]},{id:"series-2",name:"Brno",description:"'link' and 'secondaryLink'",link:"https://en.wikipedia.org/wiki/Brno",secondaryLink:"https://en.wikipedia.org/wiki/Europe",data:[{x:e()(a).subtract(59,"day").toDate(),y:35},{x:e()(a).subtract(58,"day").toDate(),y:33},{x:e()(a).subtract(57,"day").toDate(),y:40},{x:e()(a).subtract(56,"day").toDate(),y:35},{x:e()(a).subtract(55,"day").toDate(),y:30},{x:e()(a).subtract(54,"day").toDate(),y:35},{x:e()(a).subtract(53,"day").toDate(),y:15},{x:e()(a).subtract(52,"day").toDate(),y:30},{x:e()(a).subtract(51,"day").toDate(),y:35},{x:e()(a).subtract(50,"day").toDate(),y:34},{x:e()(a).subtract(49,"day").toDate(),y:35},{x:e()(a).subtract(48,"day").toDate(),y:33},{x:e()(a).subtract(47,"day").toDate(),y:40},{x:e()(a).subtract(46,"day").toDate(),y:35},{x:e()(a).subtract(45,"day").toDate(),y:30},{x:e()(a).subtract(44,"day").toDate(),y:35},{x:e()(a).subtract(43,"day").toDate(),y:15},{x:e()(a).subtract(42,"day").toDate(),y:30},{x:e()(a).subtract(41,"day").toDate(),y:35},{x:e()(a).subtract(40,"day").toDate(),y:34},{x:e()(a).subtract(39,"day").toDate(),y:35},{x:e()(a).subtract(38,"day").toDate(),y:33},{x:e()(a).subtract(37,"day").toDate(),y:40},{x:e()(a).subtract(36,"day").toDate(),y:35},{x:e()(a).subtract(35,"day").toDate(),y:30},{x:e()(a).subtract(34,"day").toDate(),y:35},{x:e()(a).subtract(33,"day").toDate(),y:15},{x:e()(a).subtract(32,"day").toDate(),y:30},{x:e()(a).subtract(31,"day").toDate(),y:35},{x:e()(a).subtract(30,"day").toDate(),y:34},{x:e()(a).subtract(29,"day").toDate(),y:35},{x:e()(a).subtract(28,"day").toDate(),y:33},{x:e()(a).subtract(27,"day").toDate(),y:40},{x:e()(a).subtract(26,"day").toDate(),y:35},{x:e()(a).subtract(25,"day").toDate(),y:30},{x:e()(a).subtract(24,"day").toDate(),y:35},{x:e()(a).subtract(23,"day").toDate(),y:15},{x:e()(a).subtract(22,"day").toDate(),y:30},{x:e()(a).subtract(21,"day").toDate(),y:35},{x:e()(a).subtract(20,"day").toDate(),y:34},{x:e()(a).subtract(19,"day").toDate(),y:64},{x:e()(a).subtract(18,"day").toDate(),y:70},{x:e()(a).subtract(17,"day").toDate(),y:55},{x:e()(a).subtract(16,"day").toDate(),y:55},{x:e()(a).subtract(15,"day").toDate(),y:45},{x:e()(a).subtract(14,"day").toDate(),y:10},{x:e()(a).subtract(13,"day").toDate(),y:65},{x:e()(a).subtract(12,"day").toDate(),y:35},{x:e()(a).subtract(11,"day").toDate(),y:60},{x:e()(a).subtract(10,"day").toDate(),y:61},{x:e()(a).subtract(9,"day").toDate(),y:65},{x:e()(a).subtract(8,"day").toDate(),y:63},{x:e()(a).subtract(7,"day").toDate(),y:58},{x:e()(a).subtract(6,"day").toDate(),y:64},{x:e()(a).subtract(5,"day").toDate(),y:63},{x:e()(a).subtract(4,"day").toDate(),y:60},{x:e()(a).subtract(3,"day").toDate(),y:62},{x:e()(a).subtract(2,"day").toDate(),y:61},{x:e()(a).subtract(1,"day").toDate(),y:62},{x:e()(a).toDate(),y:55}]},{id:"series-3",name:"Lisbon",description:"'secondaryLink' only",secondaryLink:"https://en.wikipedia.org/wiki/Lisbon",data:[{x:e()(a).subtract(59,"day").toDate(),y:35},{x:e()(a).subtract(58,"day").toDate(),y:33},{x:e()(a).subtract(57,"day").toDate(),y:40},{x:e()(a).subtract(56,"day").toDate(),y:35},{x:e()(a).subtract(55,"day").toDate(),y:30},{x:e()(a).subtract(54,"day").toDate(),y:35},{x:e()(a).subtract(53,"day").toDate(),y:15},{x:e()(a).subtract(52,"day").toDate(),y:30},{x:e()(a).subtract(51,"day").toDate(),y:35},{x:e()(a).subtract(50,"day").toDate(),y:34},{x:e()(a).subtract(49,"day").toDate(),y:35},{x:e()(a).subtract(48,"day").toDate(),y:33},{x:e()(a).subtract(47,"day").toDate(),y:40},{x:e()(a).subtract(46,"day").toDate(),y:35},{x:e()(a).subtract(45,"day").toDate(),y:30},{x:e()(a).subtract(44,"day").toDate(),y:35},{x:e()(a).subtract(43,"day").toDate(),y:15},{x:e()(a).subtract(42,"day").toDate(),y:30},{x:e()(a).subtract(41,"day").toDate(),y:35},{x:e()(a).subtract(40,"day").toDate(),y:34},{x:e()(a).subtract(39,"day").toDate(),y:35},{x:e()(a).subtract(38,"day").toDate(),y:33},{x:e()(a).subtract(37,"day").toDate(),y:40},{x:e()(a).subtract(36,"day").toDate(),y:35},{x:e()(a).subtract(35,"day").toDate(),y:30},{x:e()(a).subtract(34,"day").toDate(),y:35},{x:e()(a).subtract(33,"day").toDate(),y:15},{x:e()(a).subtract(32,"day").toDate(),y:30},{x:e()(a).subtract(31,"day").toDate(),y:35},{x:e()(a).subtract(30,"day").toDate(),y:34},{x:e()(a).subtract(29,"day").toDate(),y:35},{x:e()(a).subtract(28,"day").toDate(),y:33},{x:e()(a).subtract(27,"day").toDate(),y:40},{x:e()(a).subtract(26,"day").toDate(),y:35},{x:e()(a).subtract(25,"day").toDate(),y:30},{x:e()(a).subtract(24,"day").toDate(),y:35},{x:e()(a).subtract(23,"day").toDate(),y:15},{x:e()(a).subtract(22,"day").toDate(),y:30},{x:e()(a).subtract(21,"day").toDate(),y:35},{x:e()(a).subtract(20,"day").toDate(),y:34},{x:e()(a).subtract(19,"day").toDate(),y:80},{x:e()(a).subtract(18,"day").toDate(),y:70},{x:e()(a).subtract(17,"day").toDate(),y:95},{x:e()(a).subtract(16,"day").toDate(),y:90},{x:e()(a).subtract(15,"day").toDate(),y:85},{x:e()(a).subtract(14,"day").toDate(),y:70},{x:e()(a).subtract(13,"day").toDate(),y:75},{x:e()(a).subtract(12,"day").toDate(),y:69},{x:e()(a).subtract(11,"day").toDate(),y:75},{x:e()(a).subtract(10,"day").toDate(),y:81},{x:e()(a).subtract(9,"day").toDate(),y:93},{x:e()(a).subtract(8,"day").toDate(),y:83},{x:e()(a).subtract(7,"day").toDate(),y:70},{x:e()(a).subtract(6,"day").toDate(),y:74},{x:e()(a).subtract(5,"day").toDate(),y:73},{x:e()(a).subtract(4,"day").toDate(),y:68},{x:e()(a).subtract(3,"day").toDate(),y:72},{x:e()(a).subtract(2,"day").toDate(),y:61},{x:e()(a).subtract(1,"day").toDate(),y:69},{x:e()(a).toDate(),y:60}]},{id:"series-4",name:"Austin",description:"No links",data:[{x:e()(a).subtract(59,"day").toDate(),y:25},{x:e()(a).subtract(58,"day").toDate(),y:43},{x:e()(a).subtract(57,"day").toDate(),y:40},{x:e()(a).subtract(56,"day").toDate(),y:65},{x:e()(a).subtract(55,"day").toDate(),y:30},{x:e()(a).subtract(54,"day").toDate(),y:25},{x:e()(a).subtract(53,"day").toDate(),y:45},{x:e()(a).subtract(52,"day").toDate(),y:30},{x:e()(a).subtract(51,"day").toDate(),y:85},{x:e()(a).subtract(50,"day").toDate(),y:74},{x:e()(a).subtract(49,"day").toDate(),y:55},{x:e()(a).subtract(48,"day").toDate(),y:23},{x:e()(a).subtract(47,"day").toDate(),y:40},{x:e()(a).subtract(46,"day").toDate(),y:15},{x:e()(a).subtract(45,"day").toDate(),y:20},{x:e()(a).subtract(44,"day").toDate(),y:65},{x:e()(a).subtract(43,"day").toDate(),y:25},{x:e()(a).subtract(42,"day").toDate(),y:40},{x:e()(a).subtract(41,"day").toDate(),y:25},{x:e()(a).subtract(40,"day").toDate(),y:54},{x:e()(a).subtract(39,"day").toDate(),y:65},{x:e()(a).subtract(38,"day").toDate(),y:33},{x:e()(a).subtract(37,"day").toDate(),y:50},{x:e()(a).subtract(36,"day").toDate(),y:45},{x:e()(a).subtract(35,"day").toDate(),y:20},{x:e()(a).subtract(34,"day").toDate(),y:25},{x:e()(a).subtract(33,"day").toDate(),y:35},{x:e()(a).subtract(32,"day").toDate(),y:20},{x:e()(a).subtract(31,"day").toDate(),y:35},{x:e()(a).subtract(30,"day").toDate(),y:14},{x:e()(a).subtract(29,"day").toDate(),y:55},{x:e()(a).subtract(28,"day").toDate(),y:23},{x:e()(a).subtract(27,"day").toDate(),y:10},{x:e()(a).subtract(26,"day").toDate(),y:5},{x:e()(a).subtract(25,"day").toDate(),y:20},{x:e()(a).subtract(24,"day").toDate(),y:35},{x:e()(a).subtract(23,"day").toDate(),y:15},{x:e()(a).subtract(22,"day").toDate(),y:30},{x:e()(a).subtract(21,"day").toDate(),y:35},{x:e()(a).subtract(20,"day").toDate(),y:34},{x:e()(a).subtract(19,"day").toDate(),y:50},{x:e()(a).subtract(18,"day").toDate(),y:60},{x:e()(a).subtract(17,"day").toDate(),y:95},{x:e()(a).subtract(16,"day").toDate(),y:80},{x:e()(a).subtract(15,"day").toDate(),y:65},{x:e()(a).subtract(14,"day").toDate(),y:80},{x:e()(a).subtract(13,"day").toDate(),y:85},{x:e()(a).subtract(12,"day").toDate(),y:69},{x:e()(a).subtract(11,"day").toDate(),y:65},{x:e()(a).subtract(10,"day").toDate(),y:71},{x:e()(a).subtract(9,"day").toDate(),y:73},{x:e()(a).subtract(8,"day").toDate(),y:43},{x:e()(a).subtract(7,"day").toDate(),y:70},{x:e()(a).subtract(6,"day").toDate(),y:84},{x:e()(a).subtract(5,"day").toDate(),y:73},{x:e()(a).subtract(4,"day").toDate(),y:38},{x:e()(a).subtract(3,"day").toDate(),y:72},{x:e()(a).subtract(2,"day").toDate(),y:81},{x:e()(a).subtract(1,"day").toDate(),y:59},{x:e()(a).toDate(),y:60}]}],q={[A[0].id]:{cols:6,rows:6,y:0,x:0},[A[1].id]:{cols:6,rows:6,y:0,x:6}};var T=p(99075);function tt(r,m){if(1&r){const i=t.RV6();t.j41(0,"button",6),t.bIt("click",function(){t.eBV(i);const s=t.XpG();return t.Njj(s.reInitializeDashboard())}),t.EFF(1," Restore Widget "),t.k0s()}}function et(r,m){if(1&r){const i=t.RV6();t.j41(0,"nui-dashboard",7),t.bIt("dashboardChange",function(s){t.eBV(i);const l=t.XpG();return t.Njj(l.dashboard=s)})("gridsterConfigChange",function(s){t.eBV(i);const l=t.XpG();return t.Njj(l.gridsterConfig=s)}),t.k0s()}if(2&r){const i=t.XpG();t.Y8G("dashboard",i.dashboard)("editMode",i.editMode)("gridsterConfig",i.gridsterConfig)}}let C=(()=>{class r extends b.n_V{constructor(){super(...arguments),this.busy=new S.t(!1)}static{this.providerId="TimeseriesStatusContinuousDataSource"}getFilteredData(i){var n=this;return(0,I.A)(function*(){const s=it();let l=s;n.busy.next(!0);const y=i.timeframe?.value;return y&&(l=l.map(h=>({id:h.id,name:h.name,description:h.description,data:h.data.filter(k=>M(k.x,y.startDatetime,y.endDatetime))})),l=(0,c.x8z)(y,l,s)),n.busy.next(!1),{result:{series:l}}})()}static{this.\u0275fac=function(){let i;return function(s){return(i||(i=t.xGo(r)))(s||r)}}()}static{this.\u0275prov=t.jDH({token:r,factory:r.\u0275fac})}}return r})(),_=(()=>{class r extends b.n_V{constructor(){super(...arguments),this.busy=new S.t(!1)}static{this.providerId="TimeseriesStatusIntervalDataSource"}getFilteredData(i){var n=this;return(0,I.A)(function*(){let l=rt();n.busy.next(!0);const y=i.timeframe?.value;return y&&(l=l.map(h=>({id:h.id,name:h.name,description:h.description,data:h.data.filter(k=>M(k.x,y.startDatetime,y.endDatetime))}))),n.busy.next(!1),{result:{series:l}}})()}static{this.\u0275fac=function(){let i;return function(s){return(i||(i=t.xGo(r)))(s||r)}}()}static{this.\u0275prov=t.jDH({token:r,factory:r.\u0275fac})}}return r})();function M(r,m,i){const n=e()(r);return n.isBetween(m,i)||n.isSame(m)||n.isSame(i)}let at=(()=>{class r{constructor(i,n,s){this.widgetTypesService=i,this.providerRegistry=n,this.changeDetectorRef=s,this.gridsterConfig={},this.editMode=!1}ngOnInit(){const i=this.widgetTypesService.getWidgetType("timeseries",1);this.widgetTypesService.setNode(i,"configurator",c.Eov.DataSourceProviders,[C.providerId,_.providerId]),this.providerRegistry.setProviders({[C.providerId]:{provide:c.R9t,useClass:C,deps:[]},[_.providerId]:{provide:c.R9t,useClass:_,deps:[]}}),this.initializeDashboard()}reInitializeDashboard(){this.dashboard=void 0,this.changeDetectorRef.detectChanges(),this.initializeDashboard()}initializeDashboard(){const i=N.map(s=>this.widgetTypesService.mergeWithWidgetType(s)),n=v()(i,s=>s.id);this.dashboard={positions:ot,widgets:n}}static{this.\u0275fac=function(n){return new(n||r)(t.rXU(c.Dz_),t.rXU(c.g_3),t.rXU(t.gRc))}}static{this.\u0275cmp=t.VBU({type:r,selectors:[["timeseries-widget-status-bar-example"]],decls:6,vars:3,consts:function(){let i;return i=$localize`:␟18d630a3c524dbab6dc528571782a939a7bc95b1␟861097914887003123: Edit Mode `,[[1,"mb-2","d-flex","align-items-center"],[1,"ml-3","py-2",3,"value","valueChange"],i,["type","button","displayStyle","action","nui-button","",3,"click",4,"ngIf"],[1,"w-100","dashboard"],["nuiWidgetEditor","",3,"dashboard","editMode","gridsterConfig","dashboardChange","gridsterConfigChange",4,"ngIf"],["type","button","displayStyle","action","nui-button","",3,"click"],["nuiWidgetEditor","",3,"dashboard","editMode","gridsterConfig","dashboardChange","gridsterConfigChange"]]},template:function(n,s){1&n&&(t.j41(0,"div",0)(1,"nui-switch",1),t.bIt("valueChange",function(y){return s.editMode=y}),t.pXf(2,2),t.k0s(),t.DNE(3,tt,2,0,"button",3),t.k0s(),t.j41(4,"div",4),t.DNE(5,et,1,3,"nui-dashboard",5),t.k0s()),2&n&&(t.R7$(1),t.Y8G("value",s.editMode),t.R7$(2),t.Y8G("ngIf",!(null!=s.dashboard&&s.dashboard.widgets.timeseriesWidgetId)),t.R7$(2),t.Y8G("ngIf",s.dashboard))},dependencies:[b.Qpp,F.bT,b.clF,R.S,w.Z],styles:[".dashboard[_ngcontent-%COMP%]{height:485px}"]})}}return r})();const N=[{id:"statusChartWidgetId",type:"timeseries",pizzagna:{[c.K8R.Configuration]:{[c.ocI]:{providers:{[c.ShF.DataSource]:{providerId:C.providerId}}},header:{properties:{title:"Status Bar Chart with Continuous (Non-Interval) Scale",subtitle:"Basic Timeseries Widget"}},chart:{providers:{[c.ShF.Adapter]:{properties:{series:[{id:"series-1",label:"Node Status",selectedSeriesId:"series-1"},{id:"series-2",label:"Node Status",selectedSeriesId:"series-2"}]}}},properties:{configuration:{legendPlacement:c.z4j.Right,enableZoom:!0,preset:c.MVE.StatusBar}}},timeframeSelection:{properties:{timeframe:{selectedPresetId:"last7Days"},maxDate:e()().format()}}}}},{id:"statusIntervalChartWidgetId",type:"timeseries",pizzagna:{[c.K8R.Configuration]:{[c.ocI]:{providers:{[c.ShF.DataSource]:{providerId:_.providerId}}},header:{properties:{title:"Status Bar Chart with Interval Scale",subtitle:"Basic Timeseries Widget"}},chart:{providers:{[c.ShF.Adapter]:{properties:{series:[{id:"series-1",label:"Node Status",selectedSeriesId:"series-1"},{id:"series-2",label:"Node Status",selectedSeriesId:"series-2"}]}}},properties:{configuration:{legendPlacement:c.z4j.Right,enableZoom:!0,preset:c.MVE.StatusBar,scales:{x:{type:c.jvU.TimeInterval,properties:{interval:86400}}}}}},timeframeSelection:{properties:{timeframe:{selectedPresetId:"last7Days"},maxDate:e()().format()}}}}}],d=()=>e()().startOf("day"),it=()=>{const r=[{id:"series-1",name:"Node Status",description:"lastchance.demo.lab",data:[{x:d().subtract(20,"day").toDate(),y:o.Warning},{x:d().subtract(19,"day").toDate(),y:o.Down},{x:d().subtract(17,"day").toDate(),y:o.Critical},{x:d().subtract(16,"day").toDate(),y:o.Warning},{x:d().subtract(15,"day").toDate(),y:o.Down},{x:d().subtract(14,"day").toDate(),y:o.Critical},{x:d().subtract(12,"day").toDate(),y:o.Unknown},{x:d().subtract(10,"day").toDate(),y:o.Up},{x:d().subtract(9,"day").toDate(),y:o.Critical},{x:d().subtract(6,"day").toDate(),y:o.Up},{x:d().subtract(3,"day").toDate(),y:o.Warning},{x:d().subtract(2,"day").toDate(),y:o.Critical},{x:d().subtract(1,"day").toDate(),y:o.Up},{x:e()().toDate(),y:o.Up}]},{id:"series-2",name:"Node Status",description:"newhope.demo.lab",data:[{x:d().subtract(19,"day").toDate(),y:o.Critical},{x:d().subtract(18,"day").toDate(),y:o.Unknown},{x:d().subtract(17,"day").toDate(),y:o.Warning},{x:d().subtract(15,"day").toDate(),y:o.Down},{x:d().subtract(8,"day").toDate(),y:o.Critical},{x:d().subtract(7,"day").toDate(),y:o.Down},{x:d().subtract(6,"day").toDate(),y:o.Up},{x:d().subtract(5,"day").toDate(),y:o.Critical},{x:d().subtract(4,"day").toDate(),y:o.Up},{x:d().subtract(3,"day").toDate(),y:o.Warning},{x:d().subtract(2,"day").toDate(),y:o.Up},{x:d().subtract(1,"day").toDate(),y:o.Down},{x:e()().toDate(),y:o.Down}]}];for(const m of r)m.data=m.data.map((i,n)=>({...i,color:L[i.y],thick:i.y!==o.Up,icon:"status_"+i.y}));return r},rt=()=>{const r=[{id:"series-1",name:"Node Status",description:"lastchance.demo.lab",data:[{x:d().subtract(20,"day").toDate(),y:o.Up},{x:d().subtract(19,"day").toDate(),y:o.Critical},{x:d().subtract(18,"day").toDate(),y:o.Warning},{x:d().subtract(17,"day").toDate(),y:o.Down},{x:d().subtract(16,"day").toDate(),y:o.Critical},{x:d().subtract(15,"day").toDate(),y:o.Down},{x:d().subtract(14,"day").toDate(),y:o.Up},{x:d().subtract(13,"day").toDate(),y:o.Warning},{x:d().subtract(12,"day").toDate(),y:o.Up},{x:d().subtract(11,"day").toDate(),y:o.Critical},{x:d().subtract(10,"day").toDate(),y:o.Up},{x:d().subtract(9,"day").toDate(),y:o.Down},{x:d().subtract(8,"day").toDate(),y:o.Critical},{x:d().subtract(7,"day").toDate(),y:o.Warning},{x:d().subtract(6,"day").toDate(),y:o.Down},{x:d().subtract(5,"day").toDate(),y:o.Critical},{x:d().subtract(4,"day").toDate(),y:o.Down},{x:d().subtract(3,"day").toDate(),y:o.Up},{x:d().subtract(2,"day").toDate(),y:o.Warning},{x:d().subtract(1,"day").toDate(),y:o.Critical},{x:d().toDate(),y:o.Up}]},{id:"series-2",name:"Node Status",description:"newhope.demo.lab",data:[{x:d().subtract(20,"day").toDate(),y:o.Up},{x:d().subtract(19,"day").toDate(),y:o.Up},{x:d().subtract(18,"day").toDate(),y:o.Down},{x:d().subtract(17,"day").toDate(),y:o.Critical},{x:d().subtract(16,"day").toDate(),y:o.Down},{x:d().subtract(15,"day").toDate(),y:o.Up},{x:d().subtract(14,"day").toDate(),y:o.Critical},{x:d().subtract(13,"day").toDate(),y:o.Up},{x:d().subtract(12,"day").toDate(),y:o.Critical},{x:d().subtract(11,"day").toDate(),y:o.Warning},{x:d().subtract(10,"day").toDate(),y:o.Up},{x:d().subtract(9,"day").toDate(),y:o.Down},{x:d().subtract(8,"day").toDate(),y:o.Up},{x:d().subtract(7,"day").toDate(),y:o.Down},{x:d().subtract(6,"day").toDate(),y:o.Critical},{x:d().subtract(5,"day").toDate(),y:o.Down},{x:d().subtract(4,"day").toDate(),y:o.Up},{x:d().subtract(3,"day").toDate(),y:o.Critical},{x:d().subtract(2,"day").toDate(),y:o.Up},{x:d().subtract(1,"day").toDate(),y:o.Warning},{x:d().toDate(),y:o.Critical}]}];for(const m of r)m.data=m.data.map((i,n)=>({...i,color:L[i.y],thick:i.y!==o.Up,icon:"status_"+i.y}));return r};var o=function(r){return r.Unknown="unknown",r.Up="up",r.Warning="warning",r.Down="down",r.Critical="critical",r}(o||{});const L={[o.Unknown]:T.qY0[6],[o.Up]:T.qY0[8],[o.Warning]:T.qY0[4],[o.Down]:T.qY0[0],[o.Critical]:T.qY0[2]},ot={[N[0].id]:{cols:12,rows:4,y:0,x:0},[N[1].id]:{cols:12,rows:4,y:4,x:0}},st=[{path:"",component:(()=>{class r{constructor(){this.timeseriesWidgetFileText=p(68008).A,this.timeseriesConfiguratorFileText=p(1581).A}static{this.\u0275fac=function(n){return new(n||r)}}static{this.\u0275cmp=t.VBU({type:r,selectors:[["nui-timeseries-docs"]],decls:172,vars:3,consts:[["type","info",3,"allowDismiss"],["href","../miscellaneous/enumerations.html#TimeseriesChartPreset","target","_blank"],["href","../interfaces/ITimeseriesWidgetSeriesData.html","target","_blank"],["filenamePrefix","timeseries-widget-example","exampleTitle","Numeric Value Visualizations"],["href","../interfaces/ITimeseriesWidgetStatusData.html","target","_blank"],["href","../miscellaneous/enumerations.html#TimeseriesScaleType","target","_blank"],["href","../miscellaneous/functions.html#applyStatusEndpoints","target","_blank"],["filenamePrefix","timeseries-widget-status-bar-example","exampleTitle","State Values Visualization"],["href","../injectables/UrlInteractionHandler.html","target","_blank"],["filenamePrefix","timeseries-widget-interactive-example","exampleTitle","Timeseries with Interaction Examples"],["language","typescript"],["href","../interfaces/ITimeseriesWidgetConfig.html","target","_blank"],["href","../miscellaneous/enumerations.html#TimeseriesScaleType"]],template:function(n,s){1&n&&(t.j41(0,"h1"),t.EFF(1,"Timeseries Widget"),t.k0s(),t.j41(2,"p"),t.EFF(3," A timeseries widget is, as its name suggests, used for visualizing changes in one or more numeric values over a specified period of time. It essentially brings a second dimension to the KPI widget use-case of displaying values of one or more metrics at a specific moment in time, i.e. the present. The following example exhibits an admittedly contrived scenario of comparing the reported primary leisure activity of Solarians over a seven-day period. The data is made up and makes absolutely no sense, but it's all in good fun.\n"),t.k0s(),t.j41(4,"nui-message",0),t.EFF(5," For details on how to instantiate a timeseries widget, take a look at the inline comments under the source expander of the following example.\n"),t.k0s(),t.j41(6,"h2"),t.EFF(7,"Supported Visualizations"),t.k0s(),t.j41(8,"ul")(9,"li"),t.EFF(10,"Line"),t.k0s(),t.j41(11,"li"),t.EFF(12,"Stacked Area"),t.k0s(),t.j41(13,"li"),t.EFF(14,"Stacked Percentage Area"),t.k0s(),t.j41(15,"li"),t.EFF(16,"Stacked Bar"),t.k0s(),t.j41(17,"li"),t.EFF(18,"Status Bar"),t.k0s()(),t.j41(19,"p"),t.EFF(20," The default visualization for the timeseries widget is Line. To change the visualization presented by the widget, set the widget's "),t.j41(21,"code"),t.EFF(22,"pizzagna.configuration.chart.properties.configuration.preset"),t.k0s(),t.EFF(23," property to a value of type "),t.j41(24,"code")(25,"a",1),t.EFF(26,"TimeseriesChartPreset"),t.k0s()(),t.EFF(27,". For a look at how to configure it in the context of a functioning widget, see the widget configurations in the source expanders of the examples on this page.\n"),t.k0s(),t.j41(28,"h3"),t.EFF(29,"Visualizations for Continuous Numeric Values"),t.k0s(),t.j41(30,"p"),t.EFF(31," Continuous numeric values can be visualized as lines, areas, or bars along a time progression. Data sources for these visualizations should provide series data that conform to the "),t.j41(32,"code")(33,"a",2),t.EFF(34,"ITimeseriesWidgetSeriesData"),t.k0s()(),t.EFF(35," interface in their output. Open the source expander of the following example to see how this looks.\n"),t.k0s(),t.j41(36,"nui-example-wrapper",3),t.nrm(37,"timeseries-widget-example"),t.k0s(),t.j41(38,"h3"),t.EFF(39,"Visualizing Discrete State Values"),t.k0s(),t.j41(40,"p"),t.EFF(41," Discrete state values can be visualized as horizontal bars of variable length and color along a time progression. Data sources for the Status Bar visualization must provide their series data in a slightly different format from that of the other timeseries visualization types shown above. In this case, the series data should conform to the "),t.j41(42,"code")(43,"a",4),t.EFF(44,"ITimeseriesWidgetStatusData"),t.k0s()(),t.EFF(45," interface which extends "),t.j41(46,"code")(47,"a",2),t.EFF(48,"ITimeseriesWidgetSeriesData"),t.k0s()(),t.EFF(49," with three additional properties:\n"),t.k0s(),t.j41(50,"ul")(51,"li")(52,"code"),t.EFF(53,"color"),t.k0s(),t.EFF(54,": string or css variable for the color to use for the fill color of the associated bar "),t.k0s(),t.j41(55,"li")(56,"code"),t.EFF(57,"icon"),t.k0s(),t.EFF(58,": string value for the name of the icon to display on the bar as well as the legend "),t.k0s(),t.j41(59,"li")(60,"code"),t.EFF(61,"thick"),t.k0s(),t.EFF(62,': boolean for whether or not to display a "thick" bar ("false" is typically used for an "ok" status) '),t.k0s()(),t.j41(63,"h4"),t.EFF(64,"Usage Notes"),t.k0s(),t.j41(65,"ul")(66,"li")(67,"strong"),t.EFF(68,"Continuous (Non-Interval) Scale ("),t.j41(69,"code")(70,"a",5),t.EFF(71,"TimeseriesScaleType.Time"),t.k0s()(),t.EFF(72,")"),t.k0s(),t.j41(73,"ul")(74,"li"),t.EFF(75," To display the last data point correctly, your data must include a final data point that indicates the endpoint for the most recent status value in the data set. "),t.k0s(),t.j41(76,"li"),t.EFF(77," To accommodate proper zooming of the chart, use the "),t.j41(78,"code")(79,"a",6),t.EFF(80,"applyStatusEndpoints"),t.k0s()(),t.EFF(81," function to prepend and append the filtered status data with endpoints that match the start and end datetimes of the zoomed time period. This will ensure that each status visualization has valid start and end values after the chart is zoomed. "),t.k0s()()(),t.j41(82,"li")(83,"strong"),t.EFF(84,"Interval Scale ("),t.j41(85,"code")(86,"a",5),t.EFF(87,"TimeseriesScaleType.TimeInterval"),t.k0s()(),t.EFF(88,")"),t.k0s(),t.j41(89,"ul")(90,"li"),t.EFF(91," Unlike a continuous scale "),t.j41(92,"strong"),t.EFF(93,"no"),t.k0s(),t.EFF(94," additional data point is needed at the end of the data set since the status values are visualized at regular intervals. "),t.k0s(),t.j41(95,"li"),t.EFF(96," Unlike a continuous scale, endpoints do not need to be applied to the data since the values are simply visualized at regular intervals. In other words, the "),t.j41(97,"code"),t.EFF(98,"applyStatusEndpoints"),t.k0s(),t.EFF(99," function mentioned for continuous scales above does not need to be used. "),t.k0s()()()(),t.j41(100,"p"),t.EFF(101," For better clarity on these usage notes, see the inline comments in the source expander of the example below.\n"),t.k0s(),t.j41(102,"nui-example-wrapper",7),t.nrm(103,"timeseries-widget-status-bar-example"),t.k0s(),t.j41(104,"h3"),t.EFF(105,"Interaction Handling"),t.k0s(),t.j41(106,"p"),t.EFF(107," The line chart below show how to use the "),t.j41(108,"code")(109,"a",8),t.EFF(110,"UrlInteractionHandler"),t.k0s()(),t.EFF(111," to handle interactions that occur on the legend when the chart is set to interactive. The stacked bar chart below shows how individual series can be interactive when the series data has value for:\n"),t.k0s(),t.j41(112,"ul")(113,"li")(114,"code"),t.EFF(115,"link"),t.k0s(),t.EFF(116,": string used for the legends label link."),t.k0s(),t.j41(117,"li")(118,"code"),t.EFF(119,"secondaryLink"),t.k0s(),t.EFF(120,": string used for the legends secondary description link. "),t.k0s()(),t.j41(121,"p"),t.EFF(122," Look at the inline comments in the source expander to see how the "),t.j41(123,"code")(124,"a",8),t.EFF(125,"UrlInteractionHandler"),t.k0s()(),t.EFF(126," is set up and configured.\n"),t.k0s(),t.j41(127,"nui-example-wrapper",9),t.nrm(128,"timeseries-widget-interactive-example"),t.k0s(),t.j41(129,"h2"),t.EFF(130,"Widget Schema"),t.k0s(),t.j41(131,"p"),t.EFF(132," The code listings below are the source files for the Timeseries widget definition with inline comments describing the parts that compose the standard Timeseries widget type. It includes the widget's definition as well as its corresponding configurator form for defining how to configure (create/edit) the widget.\n"),t.k0s(),t.j41(133,"h2"),t.EFF(134,"Widget"),t.k0s(),t.j41(135,"p"),t.EFF(136," This part shows the actual widget definition. It includes, among other things, the components and providers that compose the widget itself.\n"),t.k0s(),t.j41(137,"nui-example-code",10),t.EFF(138),t.k0s(),t.j41(139,"h2"),t.EFF(140,"Configurator"),t.k0s(),t.j41(141,"p"),t.EFF(142," This part shows the form that's used for configuring (creating/editing) the widget.\n"),t.k0s(),t.j41(143,"nui-example-code",10),t.EFF(144),t.k0s(),t.j41(145,"h2"),t.EFF(146,"Additional Features"),t.k0s(),t.j41(147,"ul")(148,"li"),t.EFF(149," Define custom colors for the chart by assigning a string array of css color variables, color keywords, or RGB hex values to the "),t.j41(150,"code"),t.EFF(151,"chartColors"),t.k0s(),t.EFF(152," property on the widget's "),t.j41(153,"code"),t.EFF(154,"configuration"),t.k0s(),t.EFF(155," input ("),t.j41(156,"code")(157,"a",11),t.EFF(158,"ITimeseriesWidgetConfig"),t.k0s()(),t.EFF(159,"). For how to do this, take a look at the inline comment in the example's source expander above. "),t.k0s(),t.j41(160,"li"),t.EFF(161," Apart from the aforementioned configuration options, you can also configure the chart scale types using the "),t.j41(162,"code"),t.EFF(163,"scales"),t.k0s(),t.EFF(164," property of the "),t.j41(165,"code"),t.EFF(166,"configuration"),t.k0s(),t.EFF(167," input. Supported scales are enumerated in the "),t.j41(168,"code")(169,"a",12),t.EFF(170,"TimeseriesScaleType"),t.k0s()(),t.EFF(171," type. "),t.k0s()()),2&n&&(t.R7$(4),t.Y8G("allowDismiss",!1),t.R7$(134),t.JRh(s.timeseriesWidgetFileText),t.R7$(6),t.JRh(s.timeseriesConfiguratorFileText))},dependencies:[b.tZW,b.n0v,b.VxJ,P,J,at],encapsulation:2})}}return r})(),data:{srlc:{hideIndicator:!0},showThemeSwitcher:!0}},{path:"example",component:P,data:{srlc:{hideIndicator:!0}}}];let nt=(()=>{class r{static{this.\u0275fac=function(n){return new(n||r)}}static{this.\u0275mod=t.$C({type:r})}static{this.\u0275inj=t.G2t({providers:[{provide:b.uzs,useValue:(0,j.R)("timeseries")}],imports:[f.iI.forChild(st),b.dfW,b.a4p,b.GDi,b.dDW,c.Ua7]})}}return r})()},1581:(O,D,p)=>{p.d(D,{A:()=>f});const f='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\n/* eslint-disable max-len */\nimport { FormStackComponent } from "../../configurator/components/form-stack/form-stack.component";\nimport { WidgetConfiguratorSectionComponent } from "../../configurator/components/widget-configurator-section/widget-configurator-section.component";\nimport { DataSourceConfigurationComponent } from "../../configurator/components/widgets/configurator-items/data-source-configuration/data-source-configuration.component";\nimport { DataSourceErrorComponent } from "../../configurator/components/widgets/configurator-items/data-source-error/data-source-error.component";\nimport { TimeseriesMetadataConfigurationComponent } from "../../configurator/components/widgets/configurator-items/timeseries-metadata-configuration/timeseries-metadata-configuration.component";\nimport { TitleAndDescriptionConfigurationComponent } from "../../configurator/components/widgets/configurator-items/title-and-description-configuration/title-and-description-configuration.component";\nimport { TimeseriesSeriesCollectionConfigurationComponent } from "../../configurator/components/widgets/timeseries/timeseries-series-collection-configuration/timeseries-series-collection-configuration.component";\nimport { TimeseriesTileDescriptionConfigurationComponent } from "../../configurator/components/widgets/timeseries/timeseries-tile-description-configuration/timeseries-tile-description-configuration.component";\nimport { TimeseriesTileIndicatorDataConfigurationComponent } from "../../configurator/components/widgets/timeseries/timeseries-tile-indicator-data-configuration/timeseries-tile-indicator-data-configuration.component";\nimport { IConverterFormPartsProperties } from "../../configurator/services/converters/types";\nimport {\n    DEFAULT_PIZZAGNA_ROOT,\n    NOVA_GENERIC_ARRAY_CONVERTER,\n    NOVA_GENERIC_CONVERTER,\n    NOVA_TIMESERIES_METADATA_CONVERTER,\n    NOVA_TIMESERIES_SERIES_CONVERTER,\n    NOVA_TIMESERIES_TILE_INDICATOR_DATA_CONVERTER,\n    NOVA_TITLE_AND_DESCRIPTION_CONVERTER,\n} from "../../services/types";\nimport {\n    IPizzagna,\n    IProviderConfiguration,\n    PizzagnaLayer,\n    WellKnownProviders,\n} from "../../types";\nimport { LegendPlacement } from "../../widget-types/common/widget/legend";\nimport { REFRESHER_CONFIGURATOR } from "../common/configurator/components";\n/* eslint-enable max-len */\n\nexport const timeseriesConfigurator: IPizzagna = {\n    [PizzagnaLayer.Structure]: {\n        [DEFAULT_PIZZAGNA_ROOT]: {\n            id: DEFAULT_PIZZAGNA_ROOT,\n            // base layout of the configurator - all form components referenced herein will be stacked in a column\n            componentType: FormStackComponent.lateLoadKey,\n            properties: {\n                elementClass: "flex-grow-1 overflow-auto nui-scroll-shadows",\n                // references to other components laid out in this form\n                nodes: ["presentation", "dataAndCalculations", "series"],\n            },\n        },\n        // /presentation\n        presentation: {\n            id: "presentation",\n            componentType: WidgetConfiguratorSectionComponent.lateLoadKey,\n            properties: {\n                headerText: $localize`Presentation`,\n                nodes: ["titleAndDescription", "timeseriesMetadata"],\n            },\n        },\n        // /presentation/titleAndDescription\n        titleAndDescription: {\n            id: "titleAndDescription",\n            componentType:\n                TitleAndDescriptionConfigurationComponent.lateLoadKey,\n            providers: {\n                [WellKnownProviders.Converter]: {\n                    providerId: NOVA_TITLE_AND_DESCRIPTION_CONVERTER,\n                } as IProviderConfiguration,\n            },\n        },\n        // /presentation/timeseriesMetadata\n        timeseriesMetadata: {\n            id: "timeseriesMetadata",\n            componentType: TimeseriesMetadataConfigurationComponent.lateLoadKey,\n            properties: {\n                legendPlacements: [\n                    {\n                        id: LegendPlacement.None,\n                        label: $localize`None`,\n                    },\n                    {\n                        id: LegendPlacement.Right,\n                        label: $localize`Right`,\n                    },\n                    {\n                        id: LegendPlacement.Bottom,\n                        label: $localize`Bottom`,\n                    },\n                ],\n            },\n            providers: {\n                // converter transforms the timeseries metadata configuration between the widget and the form\n                [WellKnownProviders.Converter]: {\n                    providerId: NOVA_TIMESERIES_METADATA_CONVERTER,\n                } as IProviderConfiguration,\n            },\n        },\n        refresher: REFRESHER_CONFIGURATOR,\n        // /dataAndCalculations\n        dataAndCalculations: {\n            id: "dataAndCalculations",\n            componentType: WidgetConfiguratorSectionComponent.lateLoadKey,\n            properties: {\n                headerText: $localize`Data and Calculations`,\n                nodes: ["dataSource"],\n            },\n        },\n        // /dataAndCalculations/dataSource\n        dataSource: {\n            id: "dataSource",\n            componentType: DataSourceConfigurationComponent.lateLoadKey,\n            properties: {\n                // for the DataSourceConfigurationComponent, this defines the list of data sources to pick from\n                dataSourceProviders: [] as string[],\n                errorComponent: DataSourceErrorComponent.lateLoadKey,\n            },\n            providers: {\n                // converter transforms the data source metadata between the widget and the form\n                [WellKnownProviders.Converter]: {\n                    providerId: NOVA_GENERIC_CONVERTER,\n                    properties: {\n                        formParts: [\n                            {\n                                // this component updates \'providerId\' of \'dataSource\'\n                                previewPath: "/.providers.dataSource",\n                                // TODO: Remove \'properties\' key in v10 - NUI-5831\n                                keys: ["providerId", "properties"],\n                            },\n                            {\n                                // this component updates \'properties\' of \'dataSource\' via an adapter\n                                previewPath:\n                                    "chart.providers.adapter.properties.dataSource",\n                                keys: ["properties"],\n                            },\n                        ] as IConverterFormPartsProperties[],\n                    },\n                } as IProviderConfiguration,\n            },\n        },\n        // /series\n        series: {\n            id: "series",\n            componentType:\n                TimeseriesSeriesCollectionConfigurationComponent.lateLoadKey,\n            providers: {\n                // converter transforms the data between the widget and the form\n                [WellKnownProviders.Converter]: {\n                    providerId: NOVA_TIMESERIES_SERIES_CONVERTER,\n                } as IProviderConfiguration,\n            },\n            properties: {\n                // these components serve as a template for every configured timeseries\n                template: [\n                    {\n                        // series description (label) configuration section\n                        id: "description",\n                        componentType:\n                            TimeseriesTileDescriptionConfigurationComponent.lateLoadKey,\n                        providers: {\n                            // converter transforms the data between the widget and the form\n                            [WellKnownProviders.Converter]: {\n                                providerId: NOVA_GENERIC_ARRAY_CONVERTER,\n                                properties: {\n                                    formParts: [\n                                        {\n                                            // this component updates \'label\' of \'series\' via an adapter\n                                            previewPath:\n                                                "chart.providers.adapter.properties.series",\n                                            keys: ["label"],\n                                        },\n                                    ] as IConverterFormPartsProperties[],\n                                },\n                            } as IProviderConfiguration,\n                        },\n                    },\n                    {\n                        // indicator data configuration section\n                        id: "indicatorData",\n                        componentType:\n                            TimeseriesTileIndicatorDataConfigurationComponent.lateLoadKey,\n                        providers: {\n                            // converter transforms the data such as the selected series between the widget and the form\n                            [WellKnownProviders.Converter]: {\n                                providerId:\n                                    NOVA_TIMESERIES_TILE_INDICATOR_DATA_CONVERTER,\n                            } as IProviderConfiguration,\n                        },\n                    },\n                ],\n            },\n        },\n    },\n};\n'},68008:(O,D,p)=>{p.d(D,{A:()=>f});const f='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { StackComponent } from "../../components/layouts/stack/stack.component";\nimport { TimeframeSelectionComponent } from "../../components/time-frame-selection/timeframe-selection.component";\nimport { TimeseriesWidgetComponent } from "../../components/timeseries-widget/timeseries-widget.component";\nimport {\n    ITimeseriesScaleConfig,\n    ITimeseriesWidgetConfig,\n    TimeseriesChartPreset,\n    TimeseriesScaleType,\n} from "../../components/timeseries-widget/types";\nimport { ITimeseriesItemConfiguration } from "../../configurator/components/widgets/timeseries/types";\nimport {\n    DEFAULT_PIZZAGNA_ROOT,\n    NOVA_TIMESERIES_DATASOURCE_ADAPTER,\n} from "../../services/types";\nimport {\n    IProviderConfiguration,\n    PizzagnaLayer,\n    WellKnownProviders,\n} from "../../types";\nimport {\n    widgetBodyContentNodes,\n    WIDGET_BODY,\n    WIDGET_HEADER,\n    WIDGET_LOADING,\n} from "../common/widget/components";\nimport { EVENT_PROXY, refresher } from "../common/widget/providers";\n\nexport const timeseriesWidget = {\n    [PizzagnaLayer.Structure]: {\n        [DEFAULT_PIZZAGNA_ROOT]: {\n            id: DEFAULT_PIZZAGNA_ROOT,\n            // base layout of the widget - all components referenced herein will be stacked in a column\n            componentType: StackComponent.lateLoadKey,\n            providers: {\n                // When enabled, this provider emits the REFRESH event on the pizzagna event bus every X seconds\n                [WellKnownProviders.Refresher]: refresher(),\n                // event proxy manages the transmission of events between widget and dashboard\n                [WellKnownProviders.EventProxy]: EVENT_PROXY,\n            },\n            properties: {\n                // these values reference other components in this structure\n                nodes: ["header", "loading", "body"],\n            },\n        },\n        // widget header\n        header: WIDGET_HEADER,\n        // this is the loading bar below the header\n        loading: WIDGET_LOADING,\n        // widget body\n        body: {\n            ...WIDGET_BODY,\n            properties: {\n                ...WIDGET_BODY.properties,\n                elementClass: "overflow-auto",\n            },\n        },\n\n        // retrieving the definitions for the body content nodes. the argument corresponds to the main content node key\n        ...widgetBodyContentNodes("mainContent"),\n\n        mainContent: {\n            id: "mainContent",\n            componentType: StackComponent.lateLoadKey,\n            properties: {\n                // these values reference other components in this configuration\n                nodes: ["timeframeSelection", "chart"],\n            },\n        },\n        // component that filters the widget\'s timeseries data by timeframe\n        timeframeSelection: {\n            id: "timeframeSelection",\n            componentType: TimeframeSelectionComponent.lateLoadKey,\n        },\n        // component that displays the widget\'s timeseries data as a line chart\n        chart: {\n            id: "chart",\n            componentType: TimeseriesWidgetComponent.lateLoadKey,\n            properties: {\n                elementClass:\n                    "d-flex flex-column justify-content-center h-100 overflow-auto",\n                configuration: {\n                    preset: TimeseriesChartPreset.Line,\n                    // this scales configuration defines default scale types for the chart\n                    scales: {\n                        y: {\n                            // linear numeric scale for the y axis\n                            type: TimeseriesScaleType.Linear,\n                        } as ITimeseriesScaleConfig,\n                        x: {\n                            // continuous time scale for the x axis\n                            type: TimeseriesScaleType.Time,\n                        } as ITimeseriesScaleConfig,\n                    },\n                } as ITimeseriesWidgetConfig,\n            },\n            providers: {\n                // provider for mapping the timeseries data source output to the format required by the widget\n                [WellKnownProviders.Adapter]: {\n                    providerId: NOVA_TIMESERIES_DATASOURCE_ADAPTER,\n                    properties: {\n                        componentId: "chart",\n                        propertyPath: "widgetData",\n                        series: [] as ITimeseriesItemConfiguration[],\n                    },\n                } as IProviderConfiguration,\n            },\n        },\n    },\n    [PizzagnaLayer.Configuration]: {\n        [DEFAULT_PIZZAGNA_ROOT]: {\n            id: DEFAULT_PIZZAGNA_ROOT,\n            providers: {\n                // default refresher configuration\n                [WellKnownProviders.Refresher]: refresher(false, 60),\n            },\n        },\n        // default header configuration\n        header: {\n            properties: {\n                title: $localize`Empty Timeseries Widget`,\n            },\n        },\n    },\n};\n'}}]);