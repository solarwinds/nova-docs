"use strict";(self.webpackChunkexamples=self.webpackChunkexamples||[]).push([[123],{29123:(P,m,d)=>{d.r(m),d.d(m,{default:()=>ie});var k=d(49432),s=d(85907),i=d(8599),N=d(23929),e=d(99019),c=d(80216),l=d(48900),u=d(60142),h=d(36006),v=d(54739),_=d(17955),I=d(67432);function W(n,g){if(1&n){const t=e.RV6();e.j41(0,"button",6),e.bIt("click",function(){e.eBV(t);const r=e.XpG();return e.Njj(r.reInitializeDashboard())}),e.EFF(1," Restore Widget "),e.k0s()}}function j(n,g){if(1&n){const t=e.RV6();e.j41(0,"nui-dashboard",7),e.bIt("dashboardChange",function(r){e.eBV(t);const a=e.XpG();return e.Njj(a.dashboard=r)})("gridsterConfigChange",function(r){e.eBV(t);const a=e.XpG();return e.Njj(a.gridsterConfig=r)}),e.k0s()}if(2&n){const t=e.XpG();e.Y8G("dashboard",t.dashboard)("editMode",t.editMode)("gridsterConfig",t.gridsterConfig)}}let T=(()=>{class n extends s.n_V{static{this.providerId="AverageRatingKpiDataSource"}constructor(t){super(),this.http=t,this.busy=new u.t(!1)}getFilteredData(){var t=this;return(0,c.A)(function*(){return t.busy.next(!0),new Promise(o=>{t.http.get("https://www.googleapis.com/books/v1/volumes/5MQFrgEACAAJ").pipe((0,h.j)(()=>t.busy.next(!1))).subscribe({next:r=>{o({result:{value:r.volumeInfo.averageRating}})},error:r=>{o({result:null,error:{type:r.status}})}})})})()}ngOnDestroy(){this.outputsSubject.complete()}static{this.\u0275fac=function(o){return new(o||n)(e.KVO(l.Qq))}}static{this.\u0275prov=e.jDH({token:n,factory:n.\u0275fac})}}return n})(),L=(()=>{class n{constructor(t,o,r){this.widgetTypesService=t,this.providerRegistry=o,this.changeDetectorRef=r,this.gridsterConfig={},this.editMode=!1}ngOnInit(){this.setupDashboard(),this.setupDefaultColorStructure(),this.setupCustomPalletteDescription(),this.setupCustomPalletteRules(),this.initializeDashboard()}reInitializeDashboard(){this.dashboard=void 0,this.changeDetectorRef.detectChanges(),this.initializeDashboard()}setupCustomPalletteDescription(){const t=this.widgetTypesService.getWidgetType("kpi",1);this.widgetTypesService.setNode(t,"configurator",i.Eov.TileDescriptionBackgroundColors,[{color:"var(--nui-color-chart-one)",label:"Blue"},{color:"var(--nui-color-chart-one-light)",label:"Blue Light"},{color:"var(--nui-color-chart-one-dark)",label:"Blue Dark"}])}setupCustomPalletteRules(){const t=this.widgetTypesService.getWidgetType("kpi",1);this.widgetTypesService.setNode(t,"configurator",i.Eov.TileBackgroundColorRulesBackgroundColors,[{color:"red",label:"Native Red"},...i.pYl])}setupDefaultColorStructure(){const t=this.widgetTypesService.getWidgetType("kpi",1);this.widgetTypesService.setNode(t,"widget","tiles.properties.template.properties.widgetData.backgroundColor","red")}setupDashboard(){const t=this.widgetTypesService.getWidgetType("kpi",1);this.widgetTypesService.setNode(t,"configurator",i.Eov.DataSourceProviders,[T.providerId]),this.providerRegistry.setProviders({[T.providerId]:{provide:i.R9t,useClass:T,deps:[l.Qq]}})}initializeDashboard(){const t=x,o={[t.id]:this.widgetTypesService.mergeWithWidgetType(t)};this.dashboard={positions:{[t.id]:{cols:4,rows:6,y:0,x:0}},widgets:o}}static{this.\u0275fac=function(o){return new(o||n)(e.rXU(i.Dz_),e.rXU(i.g_3),e.rXU(e.gRc))}}static{this.\u0275cmp=e.VBU({type:n,selectors:[["kpi-widget-background-color-example"]],decls:6,vars:3,consts:function(){let t;return t=$localize`:␟18d630a3c524dbab6dc528571782a939a7bc95b1␟861097914887003123: Edit Mode `,[[1,"mb-2","d-flex","align-items-center"],[1,"ml-3","py-2",3,"value","valueChange"],t,["type","button","displayStyle","action","nui-button","",3,"click",4,"ngIf"],[1,"w-100","dashboard"],["nuiWidgetEditor","",3,"dashboard","editMode","gridsterConfig","dashboardChange","gridsterConfigChange",4,"ngIf"],["type","button","displayStyle","action","nui-button","",3,"click"],["nuiWidgetEditor","",3,"dashboard","editMode","gridsterConfig","dashboardChange","gridsterConfigChange"]]},template:function(o,r){1&o&&(e.j41(0,"div",0)(1,"nui-switch",1),e.bIt("valueChange",function(p){return r.editMode=p}),e.pXf(2,2),e.k0s(),e.DNE(3,W,2,0,"button",3),e.k0s(),e.j41(4,"div",4),e.DNE(5,j,1,3,"nui-dashboard",5),e.k0s()),2&o&&(e.R7$(1),e.Y8G("value",r.editMode),e.R7$(2),e.Y8G("ngIf",!(null!=r.dashboard&&r.dashboard.widgets.kpiWidgetId)),e.R7$(2),e.Y8G("ngIf",r.dashboard))},dependencies:[s.Qpp,v.bT,_.S,I.Z,s.clF],styles:[".dashboard[_ngcontent-%COMP%]{height:400px}"]})}}return n})();const x={id:"kpiWidgetId",type:"kpi",pizzagna:{[i.K8R.Configuration]:{header:{properties:{title:"Harry Potter and the Sorcerer's Stone",subtitle:"By J. K. Rowling"}},tiles:{properties:{nodes:["kpi1"]}},kpi1:{id:"kpi1",componentType:i.kPo.lateLoadKey,properties:{widgetData:{units:"out of 5 Stars",label:"Average Rating",backgroundColor:"var(--nui-color-chart-one)"}},providers:{[i.ShF.DataSource]:{providerId:T.providerId},[i.ShF.Adapter]:{providerId:i.YcW,properties:{componentId:"kpi1",propertyPath:"widgetData"}},[i.ShF.KpiColorPrioritizer]:{providerId:i.cFb,properties:{rules:[{comparisonType:">",value:2,color:"var(--nui-color-chart-four)"}]}}}}}}};let M=(()=>{class n{constructor(){this.comparatorsRegistryCode='\n        this.comparatorsRegistry.registerComparators({\n            "!=": {\n                comparatorFn: (actual: any, reference: any) => actual != reference,\n                label: "Not equal",\n            },\n        });\n    '}static{this.\u0275fac=function(o){return new(o||n)}}static{this.\u0275cmp=e.VBU({type:n,selectors:[["nui-kpi-background-color-docs"]],decls:174,vars:1,consts:[["language","typescript"],["filenamePrefix","kpi-widget-background-color","exampleTitle","KPI widget"]],template:function(o,r){1&o&&(e.j41(0,"h1"),e.EFF(1,"Setting a background color for a KPI tile"),e.k0s(),e.j41(2,"p"),e.EFF(3," As it's essential for the pizzagna, it's possible to set background the color on the all its layers.\n"),e.k0s(),e.j41(4,"ul")(5,"li"),e.EFF(6,"Structure"),e.k0s(),e.j41(7,"li"),e.EFF(8,"Configuration"),e.k0s(),e.j41(9,"li"),e.EFF(10,"Data"),e.k0s()(),e.j41(11,"h3")(12,"strong"),e.EFF(13,"Color setting priority:"),e.k0s()(),e.j41(14,"ol")(15,"li"),e.EFF(16,"Data (dataSource)"),e.k0s(),e.j41(17,"li"),e.EFF(18,"Color Prioritizer Rules"),e.k0s(),e.j41(19,"li"),e.EFF(20,"Configuration"),e.k0s(),e.j41(21,"li"),e.EFF(22,"Default color"),e.k0s()(),e.j41(23,"h2"),e.EFF(24,"Structure"),e.k0s(),e.j41(25,"p"),e.EFF(26," Using "),e.j41(27,"i"),e.EFF(28,"Structure"),e.k0s(),e.EFF(29," layer, you can set KPI tiles default color. For that, you have to use "),e.j41(30,"code"),e.EFF(31,"WidgetTypesService"),e.k0s(),e.EFF(32,", as in the example.\n"),e.k0s(),e.j41(33,"p"),e.EFF(34," Path for setting the default color - "),e.j41(35,"code"),e.EFF(36,'"tiles.properties.template.properties.widgetData.backgroundColor"'),e.k0s()(),e.j41(37,"h2"),e.EFF(38,"Configuration"),e.k0s(),e.j41(39,"p"),e.EFF(40," It's possible to specify the tile color on the widget "),e.j41(41,"code"),e.EFF(42,"configuration"),e.k0s(),e.EFF(43," layer config.\n"),e.k0s(),e.j41(44,"p"),e.EFF(45," Picking the color from the UI using KPI configurator, the background color is set on this layer.\n"),e.k0s(),e.j41(46,"h2"),e.EFF(47,"Data"),e.k0s(),e.j41(48,"p"),e.EFF(49," It's also possible to set the color on the "),e.j41(50,"code"),e.EFF(51,"data"),e.k0s(),e.EFF(52," layer, for that the dataSource should return "),e.j41(53,"code"),e.EFF(54,"backgroundColor"),e.k0s(),e.EFF(55," property in the data object and KPI tile will receive that.\n"),e.k0s(),e.j41(56,"h3"),e.EFF(57,"Color Prioritizer Rules - dynamic change depending on data"),e.k0s(),e.j41(58,"p"),e.EFF(59," It's possible to configure the background color so that it will have different value depending on the received value.\n"),e.k0s(),e.j41(60,"p"),e.EFF(61," In order to do that, you have to configure the "),e.j41(62,"code"),e.EFF(63,"KpiColorPrioritizer"),e.k0s(),e.EFF(64,". To do that, put the "),e.j41(65,"code"),e.EFF(66,"KpiColorPrioritizer"),e.k0s(),e.EFF(67," in the "),e.j41(68,"code"),e.EFF(69,"providers"),e.k0s(),e.EFF(70," sections.\n"),e.k0s(),e.j41(71,"p"),e.EFF(72," Also, you can configure the color rules for that. You have to configure following properties for each\n"),e.k0s(),e.j41(73,"ul")(74,"li")(75,"code"),e.EFF(76,"comparisonType"),e.k0s(),e.EFF(77," - type of the value comparison,"),e.k0s(),e.j41(78,"li")(79,"code"),e.EFF(80,"value"),e.k0s(),e.EFF(81," - value to compare with"),e.k0s(),e.j41(82,"li")(83,"code"),e.EFF(84,"color"),e.k0s(),e.EFF(85," - color to set"),e.k0s()(),e.j41(86,"h3"),e.EFF(87,"Color rules comparators:"),e.k0s(),e.j41(88,"p"),e.EFF(89,"There're default comparators:"),e.k0s(),e.j41(90,"ul")(91,"li")(92,"code"),e.EFF(93,'">"'),e.k0s(),e.EFF(94," - a > b comparison"),e.k0s(),e.j41(95,"li")(96,"code"),e.EFF(97,'"<"'),e.k0s(),e.EFF(98," - a < b comparison"),e.k0s(),e.j41(99,"li")(100,"code"),e.EFF(101,'">="'),e.k0s(),e.EFF(102," - a >= b comparison"),e.k0s(),e.j41(103,"li")(104,"code"),e.EFF(105,'"<="'),e.k0s(),e.EFF(106," - a <= b comparison"),e.k0s(),e.j41(107,"li")(108,"code"),e.EFF(109,'"=="'),e.k0s(),e.EFF(110," - a == b comparison"),e.k0s()(),e.j41(111,"h4"),e.EFF(112,"Custom comparators"),e.k0s(),e.j41(113,"p"),e.EFF(114," You can also use custom comparators, in case you want to have another value comparison logic. To use custom formatters, use "),e.j41(115,"code"),e.EFF(116,"KpiColorComparatorsRegistryService"),e.k0s(),e.EFF(117,".\n"),e.k0s(),e.j41(118,"p"),e.EFF(119,"It's highly recommended to put this logic in the "),e.j41(120,"strong"),e.EFF(121,"module"),e.k0s(),e.EFF(122,"."),e.k0s(),e.j41(123,"p"),e.EFF(124,"For example, this is how to configure "),e.j41(125,"i"),e.EFF(126,"not equal"),e.k0s(),e.EFF(127," comparator:"),e.k0s(),e.j41(128,"nui-example-code",0),e.EFF(129),e.k0s(),e.j41(130,"p")(131,"strong"),e.EFF(132,"Note: "),e.k0s(),e.j41(133,"code"),e.EFF(134,"KpiColorComparatorsRegistryService"),e.k0s(),e.EFF(135," is provided in "),e.j41(136,"code"),e.EFF(137,"root"),e.k0s(),e.EFF(138,", if you want to isolate comparators, please declare it in the desired "),e.j41(139,"code"),e.EFF(140,"providers"),e.k0s(),e.EFF(141," section.\n"),e.k0s(),e.j41(142,"h2"),e.EFF(143,"Setting a custom pallette in the color pickers"),e.k0s(),e.j41(144,"p"),e.EFF(145," By default, KPI color pickers have a predefined set of colors. You can use "),e.j41(146,"code"),e.EFF(147,"DEFAULT_KPI_BACKGROUND_COLORS"),e.k0s(),e.EFF(148," variable if you need.\n"),e.k0s(),e.j41(149,"p"),e.EFF(150," To use a custom color pallette, you have to set it to the pizzagna using the "),e.j41(151,"code"),e.EFF(152,"WidgetTypesService"),e.k0s(),e.EFF(153,".\n"),e.k0s(),e.j41(154,"p"),e.EFF(155," To set the pallette to the "),e.j41(156,"i"),e.EFF(157,"Description"),e.k0s(),e.EFF(158," section, use "),e.j41(159,"code"),e.EFF(160,"WellKnownPathKey.TileDescriptionBackgroundColors"),e.k0s(),e.EFF(161," path.\n"),e.k0s(),e.j41(162,"p"),e.EFF(163," To set the pallette to the "),e.j41(164,"i"),e.EFF(165,"Background Color Rules"),e.k0s(),e.EFF(166," section, use "),e.j41(167,"code"),e.EFF(168,"WellKnownPathKey.TileBackgroundColorRulesBackgroundColors"),e.k0s(),e.EFF(169," path.\n"),e.k0s(),e.j41(170,"p"),e.EFF(171,"Check the example code for more details."),e.k0s(),e.j41(172,"nui-example-wrapper",1),e.nrm(173,"kpi-widget-background-color-example"),e.k0s()),2&o&&(e.R7$(129),e.SpI(" ",r.comparatorsRegistryCode,"\n"))},dependencies:[s.tZW,s.n0v,L],encapsulation:2})}}return n})();function B(n,g){if(1&n){const t=e.RV6();e.j41(0,"button",6),e.bIt("click",function(){e.eBV(t);const r=e.XpG();return e.Njj(r.initializeDashboard())}),e.EFF(1," Restore Widget "),e.k0s()}}let S=(()=>{class n extends s.n_V{static{this.providerId="AverageRatingKpiDataSource"}constructor(t){super(),this.http=t,this.busy=new u.t(!1)}getFilteredData(){var t=this;return(0,c.A)(function*(){return t.busy.next(!0),new Promise(o=>{t.http.get("https://www.googleapis.com/books/v1/volumes/5MQFrgEACAAJ").pipe((0,h.j)(()=>t.busy.next(!1))).subscribe({next:r=>{o({result:{value:r.volumeInfo.averageRating}})},error:r=>{o({result:null,error:{type:r.status}})}})})})()}ngOnDestroy(){this.outputsSubject.complete()}static{this.\u0275fac=function(o){return new(o||n)(e.KVO(l.Qq))}}static{this.\u0275prov=e.jDH({token:n,factory:n.\u0275fac})}}return n})(),D=(()=>{class n{constructor(t,o){this.widgetTypesService=t,this.providerRegistry=o,this.gridsterConfig={},this.editMode=!1}ngOnInit(){const t=this.widgetTypesService.getWidgetType("kpi",1);this.widgetTypesService.setNode(t,"configurator",i.Eov.DataSourceProviders,[S.providerId]),this.providerRegistry.setProviders({[S.providerId]:{provide:i.R9t,useClass:S,deps:[l.Qq]}}),this.initializeDashboard()}initializeDashboard(){const t=G,o={[t.id]:this.widgetTypesService.mergeWithWidgetType(t)};this.dashboard={positions:{[t.id]:{cols:4,rows:6,y:0,x:0}},widgets:o}}static{this.\u0275fac=function(o){return new(o||n)(e.rXU(i.Dz_),e.rXU(i.g_3))}}static{this.\u0275cmp=e.VBU({type:n,selectors:[["kpi-widget-example"]],decls:6,vars:5,consts:function(){let t;return t=$localize`:␟18d630a3c524dbab6dc528571782a939a7bc95b1␟861097914887003123: Edit Mode `,[[1,"mb-2","d-flex","align-items-center"],[1,"ml-3","py-2",3,"value","valueChange"],t,["type","button","displayStyle","action","nui-button","",3,"click",4,"ngIf"],[1,"w-100","dashboard"],["nuiWidgetEditor","",3,"dashboard","editMode","gridsterConfig","dashboardChange","gridsterConfigChange"],["type","button","displayStyle","action","nui-button","",3,"click"]]},template:function(o,r){1&o&&(e.j41(0,"div",0)(1,"nui-switch",1),e.bIt("valueChange",function(p){return r.editMode=p}),e.pXf(2,2),e.k0s(),e.DNE(3,B,2,0,"button",3),e.k0s(),e.j41(4,"div",4)(5,"nui-dashboard",5),e.bIt("dashboardChange",function(p){return r.dashboard=p})("gridsterConfigChange",function(p){return r.gridsterConfig=p}),e.k0s()()),2&o&&(e.R7$(1),e.Y8G("value",r.editMode),e.R7$(2),e.Y8G("ngIf",!(null!=r.dashboard&&r.dashboard.widgets.kpiWidgetId)),e.R7$(2),e.Y8G("dashboard",r.dashboard)("editMode",r.editMode)("gridsterConfig",r.gridsterConfig))},dependencies:[s.Qpp,v.bT,_.S,I.Z,s.clF],styles:[".dashboard[_ngcontent-%COMP%]{height:400px}"]})}}return n})();const G={id:"kpiWidgetId",type:"kpi",pizzagna:{[i.K8R.Configuration]:{[i.ocI]:{providers:{[i.ShF.Refresher]:{properties:{interval:600,enabled:!0}}}},header:{properties:{title:"Harry Potter and the Sorcerer's Stone",subtitle:"By J. K. Rowling"}},tiles:{properties:{nodes:["kpi1"]}},kpi1:{id:"kpi1",componentType:i.kPo.lateLoadKey,properties:{widgetData:{units:"out of 5 Stars",label:"Average Rating"}},providers:{[i.ShF.DataSource]:{providerId:S.providerId},[i.ShF.Adapter]:{providerId:i.YcW,properties:{componentId:"kpi1",propertyPath:"widgetData"}}}}}}};function V(n,g){if(1&n){const t=e.RV6();e.j41(0,"button",6),e.bIt("click",function(){e.eBV(t);const r=e.XpG();return e.Njj(r.initializeDashboard())}),e.EFF(1," Restore Widget "),e.k0s()}}let w=(()=>{class n extends s.n_V{static{this.providerId="BookRatingDataSource"}constructor(t){super(),this.http=t,this.busy=new u.t(!1)}getFilteredData(){var t=this;return(0,c.A)(function*(){return t.busy.next(!0),new Promise(o=>{t.http.get("https://www.googleapis.com/books/v1/volumes/zpvysRGsBlwC").pipe((0,h.j)(()=>t.busy.next(!1))).subscribe({next:r=>{o({result:{value:r.volumeInfo.averageRating,link:r.volumeInfo.infoLink}})},error:r=>{o({result:null,error:{type:r.status}})}})})})()}ngOnDestroy(){this.outputsSubject.complete()}static{this.\u0275fac=function(o){return new(o||n)(e.KVO(l.Qq))}}static{this.\u0275prov=e.jDH({token:n,factory:n.\u0275fac})}}return n})(),z=(()=>{class n{constructor(t,o){this.widgetTypesService=t,this.providerRegistry=o,this.gridsterConfig={},this.editMode=!1}ngOnInit(){const t=this.widgetTypesService.getWidgetType("kpi",1);this.widgetTypesService.setNode(t,"configurator",i.Eov.DataSourceProviders,[w.providerId]),this.providerRegistry.setProviders({[w.providerId]:{provide:i.R9t,useClass:w,deps:[l.Qq]}}),this.initializeDashboard()}initializeDashboard(){const t=Y,o={[t.id]:this.widgetTypesService.mergeWithWidgetType(t)};this.dashboard={positions:{[t.id]:{cols:4,rows:6,y:0,x:0}},widgets:o}}static{this.\u0275fac=function(o){return new(o||n)(e.rXU(i.Dz_),e.rXU(i.g_3))}}static{this.\u0275cmp=e.VBU({type:n,selectors:[["kpi-widget-interactive-example"]],decls:6,vars:5,consts:function(){let t;return t=$localize`:␟18d630a3c524dbab6dc528571782a939a7bc95b1␟861097914887003123: Edit Mode `,[[1,"mb-2","d-flex","align-items-center"],[1,"ml-3","py-2",3,"value","valueChange"],t,["type","button","displayStyle","action","nui-button","",3,"click",4,"ngIf"],[1,"w-100","dashboard"],["nuiWidgetEditor","",3,"dashboard","editMode","gridsterConfig","dashboardChange","gridsterConfigChange"],["type","button","displayStyle","action","nui-button","",3,"click"]]},template:function(o,r){1&o&&(e.j41(0,"div",0)(1,"nui-switch",1),e.bIt("valueChange",function(p){return r.editMode=p}),e.pXf(2,2),e.k0s(),e.DNE(3,V,2,0,"button",3),e.k0s(),e.j41(4,"div",4)(5,"nui-dashboard",5),e.bIt("dashboardChange",function(p){return r.dashboard=p})("gridsterConfigChange",function(p){return r.gridsterConfig=p}),e.k0s()()),2&o&&(e.R7$(1),e.Y8G("value",r.editMode),e.R7$(2),e.Y8G("ngIf",!(null!=r.dashboard&&r.dashboard.widgets.kpiWidgetId)),e.R7$(2),e.Y8G("dashboard",r.dashboard)("editMode",r.editMode)("gridsterConfig",r.gridsterConfig))},dependencies:[s.Qpp,v.bT,_.S,I.Z,s.clF],styles:[".dashboard[_ngcontent-%COMP%]{height:375px}"]})}}return n})();const Y={id:"kpiWidgetId",type:"kpi",pizzagna:{[i.K8R.Configuration]:{header:{properties:{title:"Harry Potter and the Order of the Phoenix",subtitle:"By: J. K. Rowling"}},tiles:{providers:{interaction:{providerId:i.j70,properties:{url:"${data.link}"}}},properties:{nodes:["kpi1"]}},kpi1:{id:"kpi1",componentType:i.kPo.lateLoadKey,properties:{widgetData:{units:"out of 5 stars",label:"Average Rating",value:0,link:"http://www.google.com"}},providers:{[i.ShF.DataSource]:{providerId:w.providerId},[i.ShF.Adapter]:{providerId:i.YcW,properties:{componentId:"kpi1",propertyPath:"widgetData"}}}}}}};let U=(()=>{class n{constructor(){this.kpiWidgetFileText=d(6638).A,this.kpiConfiguratorFileText=d(35859).A}static{this.\u0275fac=function(o){return new(o||n)}}static{this.\u0275cmp=e.VBU({type:n,selectors:[["nui-kpi-docs"]],decls:34,vars:3,consts:[["type","info",3,"allowDismiss"],["filenamePrefix","kpi-widget","exampleTitle","KPI widget"],["href","../injectables/UrlInteractionHandler.html","target","_blank"],["filenamePrefix","kpi-widget-interactive","exampleTitle","KPI with Interaction"],["language","typescript"]],template:function(o,r){1&o&&(e.j41(0,"h1"),e.EFF(1,"KPI Widget"),e.k0s(),e.j41(2,"p"),e.EFF(3," Key performance indicators (KPIs) are quantifiable measures designed to track any metrics of a monitored system. The KPI widget displays the current measurement of a KPI as a single numeric value and can display one or more individual metrics within a single widget instance. It's useful for highlighting and promoting easy comprehension of key metrics. Additionally, each KPI within a widget instance can visualize associated thresholds via a dynamic background color indicating whether a certain threshold has been reached.\n"),e.k0s(),e.j41(4,"nui-message",0),e.EFF(5," For details on how to instantiate a KPI widget, take a look at the inline comments under the source expander of the following example.\n"),e.k0s(),e.j41(6,"nui-example-wrapper",1),e.nrm(7,"kpi-widget-example"),e.k0s(),e.j41(8,"h3"),e.EFF(9,"Interaction Handling"),e.k0s(),e.j41(10,"p"),e.EFF(11," The example below has the "),e.j41(12,"code")(13,"a",2),e.EFF(14,"UrlInteractionHandler"),e.k0s()(),e.EFF(15," configured to handle the interactions that occur on the tile. Look at the inline comments in the source expander to see how it is configured.\n"),e.k0s(),e.j41(16,"nui-example-wrapper",3),e.nrm(17,"kpi-widget-interactive-example"),e.k0s(),e.j41(18,"h2"),e.EFF(19,"Widget Schema"),e.k0s(),e.j41(20,"p"),e.EFF(21," The code listings below are the source files for the KPI widget definition with inline comments describing the parts that compose the standard KPI widget type. It includes the widget's definition as well as its corresponding configurator form for defining how to configure (create/edit) the widget.\n"),e.k0s(),e.j41(22,"h2"),e.EFF(23,"Widget"),e.k0s(),e.j41(24,"p"),e.EFF(25," This part shows the actual widget definition. It includes, among other things, the components and providers that compose the widget itself.\n"),e.k0s(),e.j41(26,"nui-example-code",4),e.EFF(27),e.k0s(),e.j41(28,"h2"),e.EFF(29,"Configurator"),e.k0s(),e.j41(30,"p"),e.EFF(31," This part shows the form that's used for configuring (creating/editing) the widget.\n"),e.k0s(),e.j41(32,"nui-example-code",4),e.EFF(33),e.k0s()),2&o&&(e.R7$(4),e.Y8G("allowDismiss",!1),e.R7$(23),e.JRh(r.kpiWidgetFileText),e.R7$(6),e.JRh(r.kpiConfiguratorFileText))},dependencies:[s.tZW,s.n0v,s.VxJ,D,z],encapsulation:2})}}return n})();var X=d(97861),A=d.n(X),O=d(23007),R=d(73e3),K=d(31451);function H(n,g){if(1&n){const t=e.RV6();e.j41(0,"button",6),e.bIt("click",function(){e.eBV(t);const r=e.XpG();return e.Njj(r.reInitializeDashboard())}),e.EFF(1," Restore Widget "),e.k0s()}}function $(n,g){if(1&n){const t=e.RV6();e.j41(0,"nui-dashboard",7),e.bIt("dashboardChange",function(r){e.eBV(t);const a=e.XpG();return e.Njj(a.dashboard=r)})("gridsterConfigChange",function(r){e.eBV(t);const a=e.XpG();return e.Njj(a.gridsterConfig=r)}),e.k0s()}if(2&n){const t=e.XpG();e.Y8G("dashboard",t.dashboard)("editMode",t.editMode)("gridsterConfig",t.gridsterConfig)}}let C=(()=>{class n extends s.n_V{static{this.providerId="AverageRatingKpiDataSource"}constructor(t){super(),this.http=t,this.busy=new u.t(!1)}getFilteredData(){var t=this;return(0,c.A)(function*(){return t.busy.next(!0),new Promise(o=>{t.http.get("https://www.googleapis.com/books/v1/volumes/5MQFrgEACAAJ").pipe((0,h.j)(()=>t.busy.next(!1))).subscribe({next:r=>{o({result:{value:r.volumeInfo.averageRating}})},error:r=>{o({result:null,error:{type:r.status}})}})})})()}ngOnDestroy(){this.outputsSubject.complete()}static{this.\u0275fac=function(o){return new(o||n)(e.KVO(l.Qq))}}static{this.\u0275prov=e.jDH({token:n,factory:n.\u0275fac})}}return n})(),b=(()=>{class n extends s.n_V{static{this.providerId="RatingsCountKpiDataSource"}constructor(t){super(),this.http=t,this.busy=new u.t(!1)}getFilteredData(){var t=this;return(0,c.A)(function*(){return t.busy.next(!0),new Promise(o=>{t.http.get("https://www.googleapis.com/books/v1/volumes/5MQFrgEACAAJ").pipe((0,R.c)(2e3),(0,h.j)(()=>t.busy.next(!1))).subscribe({next:r=>{o({result:{value:r.volumeInfo.ratingsCount}})},error:r=>{o({result:null,error:{type:r.status}})}})})})()}ngOnDestroy(){this.outputsSubject.complete()}static{this.\u0275fac=function(o){return new(o||n)(e.KVO(l.Qq))}}static{this.\u0275prov=e.jDH({token:n,factory:n.\u0275fac})}}return n})(),F=(()=>{class n extends s.n_V{static{this.providerId="MockKpiDataSource"}constructor(){super(),this.busy=new u.t(!1)}getFilteredData(){var t=this;return(0,c.A)(function*(){return t.busy.next(!0),new Promise(o=>{(0,O.of)(3381342).pipe((0,R.c)(5e3),(0,K.s)(1),(0,h.j)(()=>t.busy.next(!1))).subscribe({next:r=>{o({result:{value:r}})}})})})()}ngOnDestroy(){this.outputsSubject.complete()}static{this.\u0275fac=function(o){return new(o||n)}}static{this.\u0275prov=e.jDH({token:n,factory:n.\u0275fac})}}return n})(),Z=(()=>{class n{constructor(t,o,r){this.widgetTypesService=t,this.providerRegistry=o,this.changeDetectorRef=r,this.gridsterConfig={},this.editMode=!1}ngOnInit(){this.setupDashboard(),this.initializeDashboard()}setupDashboard(){const t=this.widgetTypesService.getWidgetType("kpi",1);this.widgetTypesService.setNode(t,"configurator",i.Eov.DataSourceProviders,[C.providerId,b.providerId,F.providerId]),this.providerRegistry.setProviders({[C.providerId]:{provide:i.R9t,useClass:C,deps:[l.Qq]},[b.providerId]:{provide:i.R9t,useClass:b,deps:[l.Qq]},[F.providerId]:{provide:i.R9t,useClass:F,deps:[]}})}reInitializeDashboard(){this.dashboard=void 0,this.changeDetectorRef.detectChanges(),this.initializeDashboard()}initializeDashboard(){const t=Q.map(a=>this.widgetTypesService.mergeWithWidgetType(a)),o=A()(t,a=>a.id);this.dashboard={positions:{kpiWidgetId:{cols:3,rows:6,y:0,x:0},kpiWidgetId2:{cols:3,rows:6,y:0,x:0}},widgets:o}}static{this.\u0275fac=function(o){return new(o||n)(e.rXU(i.Dz_),e.rXU(i.g_3),e.rXU(e.gRc))}}static{this.\u0275cmp=e.VBU({type:n,selectors:[["kpi-sync-broker-example"]],decls:6,vars:3,consts:function(){let t;return t=$localize`:␟18d630a3c524dbab6dc528571782a939a7bc95b1␟861097914887003123: Edit Mode `,[[1,"mb-2","d-flex","align-items-center"],[1,"ml-3","py-2",3,"value","valueChange"],t,["type","button","displayStyle","action","nui-button","",3,"click",4,"ngIf"],[1,"w-100","dashboard"],["nuiWidgetEditor","",3,"dashboard","editMode","gridsterConfig","dashboardChange","gridsterConfigChange",4,"ngIf"],["type","button","displayStyle","action","nui-button","",3,"click"],["nuiWidgetEditor","",3,"dashboard","editMode","gridsterConfig","dashboardChange","gridsterConfigChange"]]},template:function(o,r){1&o&&(e.j41(0,"div",0)(1,"nui-switch",1),e.bIt("valueChange",function(p){return r.editMode=p}),e.pXf(2,2),e.k0s(),e.DNE(3,H,2,0,"button",3),e.k0s(),e.j41(4,"div",4),e.DNE(5,$,1,3,"nui-dashboard",5),e.k0s()),2&o&&(e.R7$(1),e.Y8G("value",r.editMode),e.R7$(2),e.Y8G("ngIf",!(null!=r.dashboard&&r.dashboard.widgets.kpiWidgetId)),e.R7$(2),e.Y8G("ngIf",r.dashboard))},dependencies:[s.Qpp,v.bT,_.S,I.Z,s.clF],styles:[".dashboard[_ngcontent-%COMP%]{height:400px}"]})}}return n})();const Q=[{id:"kpiWidgetId",type:"kpi",pizzagna:{[i.K8R.Configuration]:{header:{properties:{title:"NO Sync Broker",subtitle:"Values sizes are being not synced"}},tiles:{properties:{nodes:["kpi1","kpi2","kpi3"]}},kpi1:{id:"kpi1",componentType:i.kPo.lateLoadKey,properties:{widgetData:{units:"out of 5 Stars",label:"Average Rating",backgroundColor:"lightpink"}},providers:{[i.ShF.DataSource]:{providerId:C.providerId},[i.ShF.Adapter]:{providerId:i.YcW,properties:{componentId:"kpi1",propertyPath:"widgetData"}}}},kpi2:{id:"kpi2",componentType:i.kPo.lateLoadKey,properties:{widgetData:{label:"Another label which might be a pretty long one",units:"Which comes from somewhere",backgroundColor:"skyblue"}},providers:{[i.ShF.DataSource]:{providerId:b.providerId},[i.ShF.Adapter]:{providerId:i.YcW,properties:{componentId:"kpi2",propertyPath:"widgetData"}}}},kpi3:{id:"kpi3",componentType:i.kPo.lateLoadKey,properties:{widgetData:{label:"Random",units:"Data"}},providers:{[i.ShF.DataSource]:{providerId:F.providerId},[i.ShF.Adapter]:{providerId:i.YcW,properties:{componentId:"kpi3",propertyPath:"widgetData"}}}}}}},{id:"kpiWidgetId2",type:"kpi",pizzagna:{[i.K8R.Configuration]:{header:{properties:{title:"WITH Sync Broker",subtitle:"Now the values of label, units, and value are being synced"}},tiles:{properties:{nodes:["kpi4","kpi5","kpi6"]},providers:{kpiScaleSyncBroker:{providerId:i.t4D,properties:{scaleSyncConfig:[{id:"value"},{id:"label"},{id:"units"}]}}}},kpi4:{id:"kpi4",componentType:i.kPo.lateLoadKey,properties:{widgetData:{units:"out of 5 Stars",label:"Average Rating",backgroundColor:"lightpink"}},providers:{[i.ShF.DataSource]:{providerId:C.providerId},[i.ShF.Adapter]:{providerId:i.YcW,properties:{componentId:"kpi4",propertyPath:"widgetData"}}}},kpi5:{id:"kpi5",componentType:i.kPo.lateLoadKey,properties:{widgetData:{label:"Another label which might be a pretty long one",units:"Which comes from somewhere",backgroundColor:"skyblue"}},providers:{[i.ShF.DataSource]:{providerId:b.providerId},[i.ShF.Adapter]:{providerId:i.YcW,properties:{componentId:"kpi5",propertyPath:"widgetData"}}}},kpi6:{id:"kpi6",componentType:i.kPo.lateLoadKey,properties:{widgetData:{label:"Random",units:"Data"}},providers:{[i.ShF.DataSource]:{providerId:F.providerId},[i.ShF.Adapter]:{providerId:i.YcW,properties:{componentId:"kpi6",propertyPath:"widgetData"}}}}}}}];function J(n,g){if(1&n){const t=e.RV6();e.j41(0,"button",6),e.bIt("click",function(){e.eBV(t);const r=e.XpG();return e.Njj(r.reInitializeDashboard())}),e.EFF(1," Restore Widget "),e.k0s()}}function q(n,g){if(1&n){const t=e.RV6();e.j41(0,"nui-dashboard",7),e.bIt("dashboardChange",function(r){e.eBV(t);const a=e.XpG();return e.Njj(a.dashboard=r)})("gridsterConfigChange",function(r){e.eBV(t);const a=e.XpG();return e.Njj(a.gridsterConfig=r)}),e.k0s()}if(2&n){const t=e.XpG();e.Y8G("dashboard",t.dashboard)("editMode",t.editMode)("gridsterConfig",t.gridsterConfig)}}let f=(()=>{class n extends s.n_V{static{this.providerId="AverageRatingKpiDataSource"}constructor(t){super(),this.http=t,this.busy=new u.t(!1)}getFilteredData(){var t=this;return(0,c.A)(function*(){return t.busy.next(!0),new Promise(o=>{t.http.get("https://www.googleapis.com/books/v1/volumes/5MQFrgEACAAJ").pipe((0,h.j)(()=>t.busy.next(!1))).subscribe({next:r=>{o({result:{value:r.volumeInfo.averageRating}})},error:r=>{o({result:null,error:{type:r.status}})}})})})()}ngOnDestroy(){this.outputsSubject.complete()}static{this.\u0275fac=function(o){return new(o||n)(e.KVO(l.Qq))}}static{this.\u0275prov=e.jDH({token:n,factory:n.\u0275fac})}}return n})(),E=(()=>{class n extends s.n_V{static{this.providerId="RatingsCountKpiDataSource"}constructor(t){super(),this.http=t,this.busy=new u.t(!1)}getFilteredData(){var t=this;return(0,c.A)(function*(){return t.busy.next(!0),new Promise(o=>{t.http.get("https://www.googleapis.com/books/v1/volumes/5MQFrgEACAAJ").pipe((0,R.c)(2e3),(0,h.j)(()=>t.busy.next(!1))).subscribe({next:r=>{o({result:{value:r.volumeInfo.ratingsCount}})},error:r=>{o({result:null,error:{type:r.status}})}})})})()}ngOnDestroy(){this.outputsSubject.complete()}static{this.\u0275fac=function(o){return new(o||n)(e.KVO(l.Qq))}}static{this.\u0275prov=e.jDH({token:n,factory:n.\u0275fac})}}return n})(),y=(()=>{class n extends s.n_V{static{this.providerId="MockKpiDataSource"}constructor(){super(),this.busy=new u.t(!1),this.value=3381342}getFilteredData(){var t=this;return(0,c.A)(function*(){return t.busy.next(!0),new Promise(o=>{(0,O.of)(t.value).pipe((0,R.c)(5e3),(0,K.s)(1),(0,h.j)(()=>t.busy.next(!1))).subscribe({next:r=>{o({result:{value:r}})}})})})()}ngOnDestroy(){this.outputsSubject.complete()}static{this.\u0275fac=function(o){return new(o||n)}}static{this.\u0275prov=e.jDH({token:n,factory:n.\u0275fac})}}return n})(),ee=(()=>{class n{constructor(t,o,r){this.widgetTypesService=t,this.providerRegistry=o,this.changeDetectorRef=r,this.gridsterConfig={},this.editMode=!1}ngOnInit(){this.setupDashboard(),this.initializeDashboard()}reInitializeDashboard(){this.dashboard=void 0,this.changeDetectorRef.detectChanges(),this.initializeDashboard()}setupDashboard(){const t={providerId:i.t4D,properties:{scaleSyncConfig:[{id:"value"},{id:"label"},{id:"units"}]}},o=this.widgetTypesService.getWidgetType("kpi",1);this.widgetTypesService.setNode(o,"configurator",i.Eov.DataSourceProviders,[f.providerId,E.providerId,y.providerId]),this.widgetTypesService.setNode(o,"widget","tiles.providers.kpiScaleSyncBroker",t),this.providerRegistry.setProviders({[f.providerId]:{provide:i.R9t,useClass:f,deps:[l.Qq]},[E.providerId]:{provide:i.R9t,useClass:E,deps:[l.Qq]},[y.providerId]:{provide:i.R9t,useClass:y,deps:[]}})}initializeDashboard(){const t=te.map(a=>this.widgetTypesService.mergeWithWidgetType(a)),o=A()(t,a=>a.id);this.dashboard={positions:{kpiWidgetId:{cols:3,rows:6,y:0,x:0},kpiWidgetId2:{cols:3,rows:6,y:0,x:3},kpiWidgetId3:{cols:3,rows:6,y:0,x:6}},widgets:o}}static{this.\u0275fac=function(o){return new(o||n)(e.rXU(i.Dz_),e.rXU(i.g_3),e.rXU(e.gRc))}}static{this.\u0275cmp=e.VBU({type:n,selectors:[["kpi-sync-broker-for-all-tiles-example"]],decls:6,vars:3,consts:function(){let t;return t=$localize`:␟18d630a3c524dbab6dc528571782a939a7bc95b1␟861097914887003123: Edit Mode `,[[1,"mb-2","d-flex","align-items-center"],[1,"ml-3","py-2",3,"value","valueChange"],t,["type","button","displayStyle","action","nui-button","",3,"click",4,"ngIf"],[1,"w-100","dashboard"],["nuiWidgetEditor","",3,"dashboard","editMode","gridsterConfig","dashboardChange","gridsterConfigChange",4,"ngIf"],["type","button","displayStyle","action","nui-button","",3,"click"],["nuiWidgetEditor","",3,"dashboard","editMode","gridsterConfig","dashboardChange","gridsterConfigChange"]]},template:function(o,r){1&o&&(e.j41(0,"div",0)(1,"nui-switch",1),e.bIt("valueChange",function(p){return r.editMode=p}),e.pXf(2,2),e.k0s(),e.DNE(3,J,2,0,"button",3),e.k0s(),e.j41(4,"div",4),e.DNE(5,q,1,3,"nui-dashboard",5),e.k0s()),2&o&&(e.R7$(1),e.Y8G("value",r.editMode),e.R7$(2),e.Y8G("ngIf",!(null!=r.dashboard&&r.dashboard.widgets.kpiWidgetId)),e.R7$(2),e.Y8G("ngIf",r.dashboard))},dependencies:[s.Qpp,v.bT,_.S,I.Z,s.clF],styles:[".dashboard[_ngcontent-%COMP%]{height:400px}"]})}}return n})();const te=[{id:"kpiWidgetId",type:"kpi",pizzagna:{[i.K8R.Configuration]:{header:{properties:{title:"Sync Broker Applied for ALL Widgets",subtitle:"Values are being synced"}},tiles:{properties:{nodes:["kpi1","kpi2","kpi3"]}},kpi1:{id:"kpi1",componentType:i.kPo.lateLoadKey,properties:{widgetData:{units:"out of 5 Stars",label:"Average Rating",backgroundColor:"lightpink"}},providers:{[i.ShF.DataSource]:{providerId:f.providerId},[i.ShF.Adapter]:{providerId:i.YcW,properties:{componentId:"kpi1",propertyPath:"widgetData"}}}},kpi2:{id:"kpi2",componentType:i.kPo.lateLoadKey,properties:{widgetData:{label:"Another label which might be a pretty long one",units:"Which comes from somewhere",backgroundColor:"skyblue"}},providers:{[i.ShF.DataSource]:{providerId:E.providerId},[i.ShF.Adapter]:{providerId:i.YcW,properties:{componentId:"kpi2",propertyPath:"widgetData"}}}},kpi3:{id:"kpi3",componentType:i.kPo.lateLoadKey,properties:{widgetData:{label:"Random",units:"Data"}},providers:{[i.ShF.DataSource]:{providerId:y.providerId},[i.ShF.Adapter]:{providerId:i.YcW,properties:{componentId:"kpi3",propertyPath:"widgetData"}}}}}}},{id:"kpiWidgetId2",type:"kpi",pizzagna:{[i.K8R.Configuration]:{header:{properties:{title:"Sync Broker Applied for ALL Widgets",subtitle:"Now the values of label, units, and value are being synced"}},tiles:{properties:{nodes:["kpi1","kpi2","kpi3"]}},kpi1:{id:"kpi1",componentType:i.kPo.lateLoadKey,properties:{widgetData:{units:"out of 5 Stars",label:"Average Rating",backgroundColor:"lightpink"}},providers:{[i.ShF.DataSource]:{providerId:f.providerId},[i.ShF.Adapter]:{providerId:i.YcW,properties:{componentId:"kpi1",propertyPath:"widgetData"}}}},kpi2:{id:"kpi2",componentType:i.kPo.lateLoadKey,properties:{widgetData:{label:"Another label which might be a pretty long one",units:"Which comes from somewhere",backgroundColor:"skyblue"}},providers:{[i.ShF.DataSource]:{providerId:E.providerId},[i.ShF.Adapter]:{providerId:i.YcW,properties:{componentId:"kpi2",propertyPath:"widgetData"}}}},kpi3:{id:"kpi3",componentType:i.kPo.lateLoadKey,properties:{widgetData:{label:"Random",units:"Data"}},providers:{[i.ShF.DataSource]:{providerId:y.providerId},[i.ShF.Adapter]:{providerId:i.YcW,properties:{componentId:"kpi3",propertyPath:"widgetData"}}}}}}},{id:"kpiWidgetId3",type:"kpi",pizzagna:{[i.K8R.Configuration]:{header:{properties:{title:"Here We Sync Only Labels and Units",subtitle:"Now only the label, and units are being synced"}},tiles:{properties:{nodes:["kpi1","kpi2","kpi3"]},providers:{kpiScaleSyncBroker:{providerId:i.t4D,properties:{scaleSyncConfig:[{id:"label"},{id:"units"}]}}}},kpi1:{id:"kpi1",componentType:i.kPo.lateLoadKey,properties:{widgetData:{units:"out of 5 Stars",label:"Average Rating",backgroundColor:"lightpink"}},providers:{[i.ShF.DataSource]:{providerId:f.providerId},[i.ShF.Adapter]:{providerId:i.YcW,properties:{componentId:"kpi1",propertyPath:"widgetData"}}}},kpi2:{id:"kpi2",componentType:i.kPo.lateLoadKey,properties:{widgetData:{label:"Another label which might be a pretty long one",units:"Which comes from somewhere",backgroundColor:"skyblue"}},providers:{[i.ShF.DataSource]:{providerId:E.providerId},[i.ShF.Adapter]:{providerId:i.YcW,properties:{componentId:"kpi2",propertyPath:"widgetData"}}}},kpi3:{id:"kpi3",componentType:i.kPo.lateLoadKey,properties:{widgetData:{label:"Random",units:"Data"}},providers:{[i.ShF.DataSource]:{providerId:y.providerId},[i.ShF.Adapter]:{providerId:i.YcW,properties:{componentId:"kpi3",propertyPath:"widgetData"}}}}}}}],oe=[{path:"",component:U,data:{srlc:{hideIndicator:!0},showThemeSwitcher:!0}},{path:"example",component:D,data:{srlc:{hideIndicator:!0}}},{path:"background-color",component:M,data:{srlc:{hideIndicator:!0}}},{path:"sync-broker",component:(()=>{class n{constructor(){this.kpiScaleSyncBroker='\n"tiles": {\n    "providers": {\n        kpiScaleSyncBroker: {\n            providerId: NOVA_KPI_SCALE_SYNC_BROKER,\n            properties: {\n                scaleSyncConfig: [\n                    { id: "value" },\n                    { id: "label" },\n                    { id: "units" },\n                ],\n            },\n        },\n    },\n},\n',this.defineScaleBrokerOnDashboardSetup='\n// To add the sync broker globally to all the kpi tiles you may start with setting up the broker config\n// Here you define which values to keep in sync\nconst brokerConfig = {\n            providerId: NOVA_KPI_SCALE_SYNC_BROKER,\n            properties: {\n                scaleSyncConfig: [\n                    { id: "value" },\n                    { id: "label" },\n                    { id: "units" },\n                ],\n            },\n        };\n\n// And here is how you set the sync broker for every KPI widget in the dashboard.\n// Later, you will be able to override this setting for each separate KPI widget in the configuration (just like it is shown in the third\n// width of the example with the \'kpiWidgetId3\')\nthis.widgetTypesService.setNode(\n    widgetTemplate,\n    "widget",\n    "tiles.providers.kpiScaleSyncBroker",\n    brokerConfig\n);\n'}static{this.\u0275fac=function(o){return new(o||n)}}static{this.\u0275cmp=e.VBU({type:n,selectors:[["kpi-sync-broker-docs"]],decls:49,vars:2,consts:[["language","typescript"],["filenamePrefix","kpi-sync-broker","exampleTitle","KPI widget"],["filenamePrefix","kpi-sync-broker-for-all-tiles","exampleTitle","KPI widget"]],template:function(o,r){1&o&&(e.j41(0,"h1"),e.EFF(1,"Syncing the Scale Values of the KPI tiles"),e.k0s(),e.j41(2,"p"),e.EFF(3," KPI widget may contain multiple tiles displaying different data which comes from various data sources. It is often the case that the values are of different sizes, and the ZoomDirective then takes care of fitting the big values into the KPI tile container in case the values overflow it. This results in KPI tiles values sized differently across the tiles of the same KPI widget, which is not pretty.\n"),e.k0s(),e.j41(4,"p")(5,"code"),e.EFF(6,"kpiScaleSyncBroker"),e.k0s(),e.EFF(7," provider solves this problem. This is a special type of provider which works specifically with the KPI widgets to sync the scale values of all, or some of the the KPI tiles values, like "),e.j41(8,"code"),e.EFF(9,"label"),e.k0s(),e.EFF(10,", "),e.j41(11,"code"),e.EFF(12,"units"),e.k0s(),e.EFF(13,", and "),e.j41(14,"code"),e.EFF(15,"value"),e.k0s(),e.EFF(16," across all the tiles of the same widget.\n"),e.k0s(),e.j41(17,"p"),e.EFF(18," To keep all the values of the KPI tiles in sync, add the "),e.j41(19,"code"),e.EFF(20,"kpiScaleSyncBroker"),e.k0s(),e.EFF(21," to your widget's "),e.j41(22,"code"),e.EFF(23,"tiles"),e.k0s(),e.EFF(24," configuration as a provider with the list of values to sync. It is not mandatory to sync all of the values, you can only leave some, in case you do not want to sync all three. "),e.j41(25,"nui-example-code",0),e.EFF(26),e.k0s()(),e.j41(27,"p"),e.EFF(28," In the example below, you can see that the widget on the right uses the sync broker and gets its tiles values synchronized gradually, even if the data comes with a significant delay.\n"),e.k0s(),e.j41(29,"nui-example-wrapper",1),e.nrm(30,"kpi-sync-broker-example"),e.k0s(),e.j41(31,"h1"),e.EFF(32,"Apply the Sync Broker for All KPI Widgets across the Dashboards"),e.k0s(),e.j41(33,"p"),e.EFF(34," The example above shows how to apply the "),e.j41(35,"code"),e.EFF(36,"kpiScaleSyncBroker"),e.k0s(),e.EFF(37," to only one widget in the configuration. What if we want to apply it to all the KPI widgets on the entire dashboards? In this case it is possible to set the sync broker for all KPI widgets on the dashboard to sync some values by default. To do so consider adding the sync broker provider on the dashboard setup and initialization step using the "),e.j41(38,"code"),e.EFF(39,"widgetTypesService"),e.k0s(),e.EFF(40,", like this: "),e.j41(41,"nui-example-code",0),e.EFF(42),e.k0s()(),e.j41(43,"p"),e.EFF(44," It is possible to override this setting later for each individual KPI widget in the configuration by setting the sync broker provider and identifying the needed value ids to sync the scale for.\n"),e.k0s(),e.j41(45,"p"),e.EFF(46," On the example below you can see how all the KPI widget values, labels and units scales have been synchronized, except of the last widget with no sync for the tile value, because this was overridden in the configuration for this particular widget to not keep the values sizes in sync.\n"),e.k0s(),e.j41(47,"nui-example-wrapper",2),e.nrm(48,"kpi-sync-broker-for-all-tiles-example"),e.k0s()),2&o&&(e.R7$(26),e.SpI(" ",r.kpiScaleSyncBroker," "),e.R7$(16),e.SpI(" ",r.defineScaleBrokerOnDashboardSetup," "))},dependencies:[s.tZW,s.n0v,Z,ee],encapsulation:2})}}return n})(),data:{srlc:{hideIndicator:!0}}}];let ie=(()=>{class n{constructor(t){this.comparatorsRegistry=t,this.backgroundColorDocsSetup()}backgroundColorDocsSetup(){this.comparatorsRegistry.registerComparators({"!=":{comparatorFn:(t,o)=>t!=o,label:"Not equal"}})}static{this.\u0275fac=function(o){return new(o||n)(e.KVO(i.fBG))}}static{this.\u0275mod=e.$C({type:n})}static{this.\u0275inj=e.G2t({providers:[i.fBG,{provide:s.uzs,useValue:(0,N.R)("kpi")}],imports:[k.iI.forChild(oe),s.dfW,s.a4p,s.GDi,i.Ua7,s.dDW]})}}return n})()},35859:(P,m,d)=>{d.d(m,{A:()=>k});const k='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\n/* eslint-disable max-len */\nimport { IBroadcasterConfig } from "../../components/providers/types";\nimport { IFormatterDefinition } from "../../components/types";\nimport { FormStackComponent } from "../../configurator/components/form-stack/form-stack.component";\nimport { IconFormatterComponent } from "../../configurator/components/formatters/icon-formatter/icon-formatter.component";\nimport { RawFormatterComponent } from "../../configurator/components/formatters/raw-formatter/raw-formatter.component";\nimport { SiUnitsFormatterComponent } from "../../configurator/components/formatters/si-units-formatter/si-units-formatter.component";\nimport { WidgetConfiguratorSectionComponent } from "../../configurator/components/widget-configurator-section/widget-configurator-section.component";\nimport { BackgroundColorRulesConfigurationComponent } from "../../configurator/components/widgets/configurator-items/background-color-rules-configuration/background-color-rules-configuration.component";\nimport { DataSourceConfigurationComponent } from "../../configurator/components/widgets/configurator-items/data-source-configuration/data-source-configuration.component";\nimport { DataSourceErrorComponent } from "../../configurator/components/widgets/configurator-items/data-source-error/data-source-error.component";\nimport { KpiDescriptionConfigurationComponent } from "../../configurator/components/widgets/configurator-items/kpi-description-configuration/kpi-description-configuration.component";\nimport { ThresholdsConfigurationComponent } from "../../configurator/components/widgets/configurator-items/thresholds-configuration/thresholds-configuration.component";\nimport { TitleAndDescriptionConfigurationComponent } from "../../configurator/components/widgets/configurator-items/title-and-description-configuration/title-and-description-configuration.component";\nimport { KpiTilesConfigurationComponent } from "../../configurator/components/widgets/kpi/kpi-tiles-configuration/kpi-tiles-configuration.component";\nimport { PresentationConfigurationComponent } from "../../configurator/components/widgets/table/columns-editor/column-configuration/presentation-configuration/presentation-configuration.component";\nimport { DEFAULT_KPI_BACKGROUND_COLORS } from "../../constants/default-palette";\nimport {\n    DEFAULT_PIZZAGNA_ROOT,\n    NOVA_KPI_FORMATTERS_REGISTRY,\n    NOVA_KPI_SECTION_CONVERTER,\n    NOVA_KPI_TILES_CONVERTER,\n    NOVA_PIZZAGNA_BROADCASTER,\n    NOVA_TITLE_AND_DESCRIPTION_CONVERTER,\n} from "../../services/types";\nimport {\n    IProviderConfiguration,\n    PizzagnaLayer,\n    WellKnownProviders,\n} from "../../types";\nimport { REFRESHER_CONFIGURATOR } from "../common/configurator/components";\n\n/* eslint-enable max-len */\n\nexport const DEFAULT_KPI_FORMATTERS: IFormatterDefinition[] = [\n    {\n        componentType: RawFormatterComponent.lateLoadKey,\n        label: $localize`Raw Formatter`,\n        dataTypes: {\n            // @ts-ignore\n            value: null,\n        },\n    },\n    {\n        componentType: SiUnitsFormatterComponent.lateLoadKey,\n        label: $localize`Si Units Formatter`,\n        dataTypes: {\n            // @ts-ignore\n            value: null,\n        },\n    },\n    {\n        componentType: IconFormatterComponent.lateLoadKey,\n        label: $localize`Icon`,\n        dataTypes: {\n            // @ts-ignore\n            value: null,\n        },\n    },\n];\n\nexport const kpiConfigurator = {\n    [PizzagnaLayer.Structure]: {\n        [DEFAULT_PIZZAGNA_ROOT]: {\n            id: DEFAULT_PIZZAGNA_ROOT,\n            // base layout of the configurator - all form components referenced herein will be stacked in a column\n            componentType: FormStackComponent.lateLoadKey,\n            properties: {\n                elementClass: "flex-grow-1 overflow-auto nui-scroll-shadows",\n                // references to other components laid out in this form\n                nodes: ["presentation", "tiles"],\n            },\n            providers: {\n                [WellKnownProviders.FormattersRegistry]: {\n                    providerId: NOVA_KPI_FORMATTERS_REGISTRY,\n                },\n            },\n        },\n        // /presentation\n        presentation: {\n            id: "presentation",\n            componentType: WidgetConfiguratorSectionComponent.lateLoadKey,\n            properties: {\n                headerText: $localize`Presentation`,\n                nodes: ["titleAndDescription", "refresher"],\n            },\n        },\n        // /presentation/titleAndDescription\n        titleAndDescription: {\n            id: "titleAndDescription",\n            componentType:\n                TitleAndDescriptionConfigurationComponent.lateLoadKey,\n            providers: {\n                converter: {\n                    providerId: NOVA_TITLE_AND_DESCRIPTION_CONVERTER,\n                },\n            },\n        },\n        refresher: REFRESHER_CONFIGURATOR,\n        // /tiles\n        tiles: {\n            id: "tiles",\n            componentType: KpiTilesConfigurationComponent.lateLoadKey,\n            properties: {\n                // these components serve as a template for every KPI tile created\n                template: [\n                    {\n                        // KPI tile description (label, color, etc.) configuration section\n                        id: "description",\n                        componentType:\n                            KpiDescriptionConfigurationComponent.lateLoadKey,\n                        properties: {\n                            configurableUnits: true,\n                            backgroundColors: [\n                                ...DEFAULT_KPI_BACKGROUND_COLORS,\n                            ],\n                        },\n                        providers: {\n                            // converter transforms the data between the widget and the form\n                            [WellKnownProviders.Converter]: {\n                                providerId: NOVA_KPI_SECTION_CONVERTER,\n                                properties: {\n                                    formParts: [\n                                        {\n                                            previewPath:\n                                                "properties.widgetData",\n                                            keys: [\n                                                "label",\n                                                "backgroundColor",\n                                                "units",\n                                            ],\n                                        },\n                                    ],\n                                },\n                            } as IProviderConfiguration,\n                        },\n                    },\n                    {\n                        // data source configuration section\n                        id: "dataSource",\n                        componentType:\n                            DataSourceConfigurationComponent.lateLoadKey,\n                        properties: {\n                            // for the DataSourceConfigurationComponent, this defines the list of data sources to pick from\n                            dataSourceProviders: [] as string[],\n                            errorComponent:\n                                DataSourceErrorComponent.lateLoadKey,\n                        },\n                        providers: {\n                            // converter transforms the data source metadata between the widget and the form\n                            [WellKnownProviders.Converter]: {\n                                providerId: NOVA_KPI_SECTION_CONVERTER,\n                                properties: {\n                                    formParts: [\n                                        {\n                                            // this component updates \'providerId\' of \'dataSource\'\n                                            previewPath: "providers.dataSource",\n                                            // TODO: Remove \'properties\' key in v10 - NUI-5831\n                                            keys: ["providerId", "properties"],\n                                        },\n                                        {\n                                            // this component updates \'properties\' of \'dataSource\' via an adapter\n                                            previewPath:\n                                                "providers.adapter.properties.dataSource",\n                                            keys: ["properties"],\n                                        },\n                                    ],\n                                },\n                            } as IProviderConfiguration,\n                            [WellKnownProviders.Broadcaster]: {\n                                providerId: NOVA_PIZZAGNA_BROADCASTER,\n                                properties: {\n                                    configs: [\n                                        {\n                                            trackOn: "component",\n                                            key: "dataFieldIds",\n                                            paths: [\n                                                "data.{parentComponentId}/formatting.properties.dataFieldIds",\n                                            ],\n                                        },\n                                    ] as IBroadcasterConfig[],\n                                },\n                            },\n                        },\n                    },\n                    {\n                        // thresholds configuration section\n                        id: "thresholds",\n                        componentType:\n                            ThresholdsConfigurationComponent.lateLoadKey,\n                        providers: {\n                            // converter transforms the data between the widget and the form\n                            [WellKnownProviders.Converter]: {\n                                providerId: NOVA_KPI_SECTION_CONVERTER,\n                                properties: {\n                                    formParts: [\n                                        {\n                                            // this component updates `thresholds` properties of `adapter`\n                                            previewPath:\n                                                "providers.adapter.properties.thresholds",\n                                            keys: [\n                                                "criticalThresholdValue",\n                                                "warningThresholdValue",\n                                                "showThresholds",\n                                                "reversedThresholds",\n                                            ],\n                                        },\n                                    ],\n                                },\n                            } as IProviderConfiguration,\n                        },\n                    },\n                    {\n                        id: "backgroundColorRules",\n                        componentType:\n                            BackgroundColorRulesConfigurationComponent.lateLoadKey,\n                        properties: {\n                            backgroundColors: [\n                                ...DEFAULT_KPI_BACKGROUND_COLORS,\n                            ],\n                        },\n                        providers: {\n                            [WellKnownProviders.Converter]: {\n                                providerId: NOVA_KPI_SECTION_CONVERTER,\n                                properties: {\n                                    formParts: [\n                                        {\n                                            previewPath:\n                                                "providers.kpiColorPrioritizer.properties",\n                                            keys: ["rules"],\n                                        },\n                                    ],\n                                },\n                            } as IProviderConfiguration,\n                        },\n                    },\n                    {\n                        id: "formatting",\n                        componentType:\n                            PresentationConfigurationComponent.lateLoadKey,\n                        providers: {\n                            [WellKnownProviders.Converter]: {\n                                providerId: NOVA_KPI_SECTION_CONVERTER,\n                                properties: {\n                                    formParts: [\n                                        {\n                                            previewPath:\n                                                "properties.configuration.formatters.Value",\n                                            keys: ["formatter"],\n                                        },\n                                    ],\n                                },\n                            } as IProviderConfiguration,\n                        },\n                        properties: {\n                            // Note: Now you should define your formatters in the KpiFormatterRegistry which can contain more formatter options\n                            // formatters: DEFAULT_KPI_FORMATTERS,\n\n                            // Set default formatter to the configuration section as RawFormatterComponent.\n                            // In case Kpi doesn\'t use the formatters yet, it will be overridden with default formatter value on first save\n                            formatter: {\n                                componentType:\n                                    RawFormatterComponent.lateLoadKey,\n                                properties: {\n                                    dataFieldIds: {\n                                        value: "value",\n                                    },\n                                },\n                            },\n                        },\n                    },\n                ],\n            },\n            providers: {\n                // converter transforms the data between the widget and the form\n                [WellKnownProviders.Converter]: {\n                    providerId: NOVA_KPI_TILES_CONVERTER,\n                } as IProviderConfiguration,\n            },\n        },\n    },\n};\n'},6638:(P,m,d)=>{d.d(m,{A:()=>k});const k='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { KpiComponent } from "../../components/kpi-widget/kpi.component";\nimport { StackComponent } from "../../components/layouts/stack/stack.component";\nimport { TilesComponent } from "../../components/layouts/tiles/tiles.component";\nimport {\n    DEFAULT_PIZZAGNA_ROOT,\n    NOVA_KPI_COLOR_PRIORITIZER,\n    NOVA_KPI_DATASOURCE_ADAPTER,\n    NOVA_KPI_STATUS_CONTENT_FALLBACK_ADAPTER,\n} from "../../services/types";\nimport {\n    IProviderConfiguration,\n    PizzagnaLayer,\n    WellKnownProviders,\n} from "../../types";\nimport {\n    widgetBodyContentNodes,\n    WIDGET_BODY,\n    WIDGET_HEADER,\n    WIDGET_LOADING,\n} from "../common/widget/components";\nimport { EVENT_PROXY, refresher } from "../common/widget/providers";\n\nexport const kpiWidget = {\n    [PizzagnaLayer.Structure]: {\n        [DEFAULT_PIZZAGNA_ROOT]: {\n            id: DEFAULT_PIZZAGNA_ROOT,\n            // base layout of the widget - all components referenced herein will be stacked in a column\n            componentType: StackComponent.lateLoadKey,\n            providers: {\n                // When enabled, this provider emits the REFRESH event on the pizzagna event bus every X seconds\n                [WellKnownProviders.Refresher]: refresher(),\n                // event proxy manages the transmission of events between widget and dashboard\n                [WellKnownProviders.EventProxy]: EVENT_PROXY,\n            },\n            properties: {\n                nodes: ["header", "loading", "body"],\n            },\n        },\n        // widget header\n        header: WIDGET_HEADER,\n        // this is the loading bar below the header\n        loading: WIDGET_LOADING,\n        // widget body\n        body: {\n            ...WIDGET_BODY,\n            properties: {\n                ...WIDGET_BODY.properties,\n                elementClass: "overflow-hidden",\n            },\n        },\n\n        /**\n         * Retrieving definitions for the body content nodes\n         * ---\n         * The first argument corresponds to the main content node key.\n         * The second argument is the id of the adapter responsible for activating fallback content in case of an error.\n         */\n        ...widgetBodyContentNodes(\n            "tiles",\n            NOVA_KPI_STATUS_CONTENT_FALLBACK_ADAPTER\n        ),\n\n        // the main content node specifying a component that manages layout of the KPI tiles in a CSS grid\n        tiles: {\n            id: "tiles",\n            componentType: TilesComponent.lateLoadKey,\n            properties: {\n                elementClass: "flex-grow-1 pt-2 px-3 pb-3 w-100",\n                template: {\n                    componentType: KpiComponent.lateLoadKey,\n                    providers: {\n                        [WellKnownProviders.KpiColorPrioritizer]: {\n                            providerId: NOVA_KPI_COLOR_PRIORITIZER,\n                            properties: {},\n                        } as IProviderConfiguration,\n                        [WellKnownProviders.Adapter]: {\n                            providerId: NOVA_KPI_DATASOURCE_ADAPTER,\n                            properties: {\n                                propertyPath: "widgetData",\n                            },\n                        } as IProviderConfiguration,\n                    },\n                    properties: {\n                        elementClass: "flex-grow-1",\n                    },\n                },\n            },\n        },\n    },\n    [PizzagnaLayer.Configuration]: {\n        [DEFAULT_PIZZAGNA_ROOT]: {\n            id: DEFAULT_PIZZAGNA_ROOT,\n            providers: {\n                // default refresher configuration\n                [WellKnownProviders.Refresher]: refresher(false, 60),\n            },\n        },\n        // default header configuration\n        header: {\n            properties: {\n                title: $localize`Empty KPI Widget`,\n            },\n        },\n    },\n};\n'}}]);