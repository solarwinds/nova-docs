import{b as c}from"./chunk-FEQEC3AP.js";import{Nc as d,re as m}from"./chunk-3HSEZOBQ.js";import{Ha as l,Rb as o,Xb as i,Yb as t,Zb as s,vc as e,yb as r}from"./chunk-NNMBFNDY.js";var g=(()=>{class n{static{this.\u0275fac=function(a){return new(a||n)}}static{this.\u0275cmp=l({type:n,selectors:[["nui-dashboard-persistence-handler-setup-docs"]],decls:90,vars:3,consts:[["href","../directives/WidgetEditorDirective.html","target","_blank"],["href","../additional-documentation/getting-started.html","target","_parent"],["href","../interfaces/IDashboardPersistenceHandler.html","target","_blank"],["type","info",3,"allowDismiss"],["href","../interfaces/IWidget.html","target","_blank"],["href","../interfaces/IConfiguratorSource.html","target","_blank"],["href","../components/DashboardComponent.html","target","_blank"],["filenamePrefix","persistence-handler-setup.component","exampleTitle","Adding a persistence handler"]],template:function(a,p){a&1&&(i(0,"h1"),e(1,"Persistence"),t(),i(2,"p"),e(3,` In this tutorial we'll cover how to add a persistence handler by binding it to the nuiWidgetEditor directive. The persistence handler will allow you to run any persistence or other logic before the editor form workflow is completed or before a widget is removed from the dashboard. For simplicity's sake, in this tutorial we won't perform any actual persistence. Instead, we'll display a toast from each of the handler callbacks to indicate mock success after a one-second timeout.
`),t(),i(4,"h2"),e(5,"Fundamental Concepts"),t(),i(6,"ul")(7,"li")(8,"a",0)(9,"code"),e(10,"nuiWidgetEditor"),t()(),e(11,"directive "),t(),i(12,"li"),e(13,"Persistence handler"),t()(),i(14,"h2"),e(15,"Basic Steps"),t(),i(16,"ol")(17,"li"),e(18," Follow the instructions "),i(19,"a",1),e(20,"here"),t(),e(21," to set up your environment for dashboard development. "),t(),i(22,"li"),e(23," Follow the instructions from previous tutorials to get a basic dashboard up and running. "),t(),i(24,"li"),e(25," Create a persistence handler class which implements "),i(26,"a",2)(27,"code"),e(28,"IDashboardPersistenceHandler"),t()(),e(29,". To realize the interface, the class may have a "),i(30,"code"),e(31,"trySubmit"),t(),e(32," and/or a "),i(33,"code"),e(34,"tryRemove"),t(),e(35," method. "),i(36,"nui-message",3)(37,"b"),e(38,"Note:"),t(),e(39," It's recommended to implement the persistence handler as a separate class in its own file. It can be added to the providers list of either the dashboard component itself or a parent module. "),t()(),i(40,"li"),e(41," Ensure that the "),i(42,"code"),e(43,"NuiToastModule"),t(),e(44," is included in the imports of the module that contains the persistence handler. "),i(45,"nui-message",3)(46,"strong"),e(47,"Note:"),t(),e(48," Importing "),i(49,"code"),e(50,"NuiToastModule"),t(),e(51," is required in this example because, in this case, the persistence handler uses the "),i(52,"code"),e(53,"ToastService"),t(),e(54,". "),t()(),i(55,"li"),e(56," Implement a "),i(57,"code"),e(58,"trySubmit"),t(),e(59," method that will be invoked as a callback anytime the widget editor form gets submitted. The parameters of the callback are the updated "),i(60,"a",4)(61,"code"),e(62,"IWidget"),t()(),e(63," and the "),i(64,"a",5)(65,"code"),e(66,"IConfiguratorSource"),t()(),e(67," which contains a reference to the "),i(68,"a",6)(69,"code"),e(70,"DashboardComponent"),t()(),e(71," and an object containing the original state of the IWidget being edited. Its expected return value is an observable that resolves to the updated "),i(72,"a",4)(73,"code"),e(74,"IWidget"),t()(),e(75," if persistence is successful. "),t(),i(76,"li"),e(77," Implement a "),i(78,"code"),e(79,"tryRemove"),t(),e(80," method that will be invoked as a callback anytime there's a widget removal attempt. The parameter of the callback is the string id of the widget being removed. Its expected return value is an observable that resolves to the same id of the removed widget if persistence is successful. "),t(),i(81,"li"),e(82," In your template, assign the injected instance of the persistence handler to the "),i(83,"code"),e(84,"nuiWidgetEditor"),t(),e(85," directive. "),t()(),i(86,"nui-message",3),e(87,` For more detailed information about setting up a persistence handler, take a look at the inline comments under the source expander of the following example.
`),t(),i(88,"nui-example-wrapper",7),s(89,"persistence-handler-setup"),t()),a&2&&(r(36),o("allowDismiss",!1),r(9),o("allowDismiss",!1),r(41),o("allowDismiss",!1))},dependencies:[m,d,c],encapsulation:2})}}return n})();export{g as a};
