import{b as u}from"./chunk-XGHKBF6M.js";import{b as f}from"./chunk-MGRASIXS.js";import{b as s}from"./chunk-TX6MHG5U.js";import{Nc as h,pe as c,re as g}from"./chunk-3HSEZOBQ.js";import{Ha as m,Rb as l,Xb as i,Yb as t,Zb as o,vc as e,yb as r}from"./chunk-NNMBFNDY.js";import{i as p}from"./chunk-T555DFTC.js";var b=(()=>{class n{constructor(){this.proportionalWidgetFileText="",this.proportionalConfiguratorFileText=""}ngOnInit(){return p(this,null,function*(){this.proportionalWidgetFileText=yield import("./chunk-2WDZHOPN.js").then(s),this.proportionalConfiguratorFileText=yield import("./chunk-WOLEXKAV.js").then(s)})}static{this.\u0275fac=function(a){return new(a||n)}}static{this.\u0275cmp=m({type:n,selectors:[["nui-proportional-docs"]],decls:70,vars:3,consts:[["type","info",3,"allowDismiss"],["filenamePrefix","proportional-widget","exampleTitle","Proportional Widget"],["href","../injectables/UrlInteractionHandler.html","target","_blank"],["href","../interfaces/IProportionalWidgetData.html","target","_blank"],["filenamePrefix","proportional-widget-interactive","exampleTitle","Interactive Proportional Widget"],["language","typescript",3,"code"],["href","../interfaces/IProportionalWidgetConfig.html","target","_blank"]],template:function(a,d){a&1&&(i(0,"h1"),e(1,"Proportional Widget"),t(),i(2,"p"),e(3,` The general use-case for a proportional widget is to visualize at a glance how one data point compares to others in relation to the sum of all related data points. In other words, it can be used to show proportional data as a series of slices that make up a whole. The supported visualization modes include pie chart, donut chart, and bar chart in either horizontal or vertical orientation.
`),t(),i(4,"p"),e(5,` An example use-case might be if we have some categories of data such as node statuses. Some of the nodes may have a status of "on" while the rest of them have a status of "off". This data can be fed into the proportional widget to let a user see at a glance how many of the nodes are "on" in relation to the ones that are "off" and in relation to the total number of nodes. The following example displays the number of Solarians who have reviewed beers by city. The data is completely made up and makes no sense, but it's all in good fun.
`),t(),i(6,"nui-message",0),e(7,` For details on how to instantiate a proportional widget, take a look at the inline comments under the source expander of the following example.
`),t(),i(8,"nui-example-wrapper",1),o(9,"proportional-widget-example"),t(),i(10,"h3"),e(11,"Interaction Handling"),t(),i(12,"p"),e(13," In the example below the first chart is using the "),i(14,"code")(15,"a",2),e(16,"UrlInteractionHandler"),t()(),e(17," to handle interactions that occur on the legend when the chart is set to interactive. The second chart shows how individual series can be interactive when the series data, that conform to "),i(18,"code")(19,"a",3),e(20,"IProportionalWidgetData"),t()(),e(21,` interface, and provide value for:
`),t(),i(22,"ul")(23,"li")(24,"code"),e(25,"link"),t(),e(26,": string used for the legends label link."),t()(),i(27,"p"),e(28," Look at the inline comments in the source expander to see how the "),i(29,"code")(30,"a",2),e(31,"UrlInteractionHandler"),t()(),e(32,` is configured.
`),t(),i(33,"nui-example-wrapper",4),o(34,"proportional-widget-interactive-example"),t(),i(35,"h2"),e(36,"Widget Schema"),t(),i(37,"p"),e(38,` The code listings below are the source files for the proportional widget definition with inline comments describing the parts that compose the standard proportional widget type. It includes the widget's definition as well as its corresponding configurator form for defining how to configure (create/edit) the widget.
`),t(),i(39,"h2"),e(40,"Widget"),t(),i(41,"p"),e(42,` This part shows the actual widget definition. It includes, among other things, the components and providers that compose the widget itself.
`),t(),o(43,"nui-example-code",5),i(44,"h2"),e(45,"Configurator"),t(),i(46,"p"),e(47,` This part shows the form that's used for configuring (creating/editing) the widget.
`),t(),o(48,"nui-example-code",5),i(49,"h2"),e(50,"Additional Features"),t(),i(51,"ul")(52,"li"),e(53," Define custom colors for the chart by assigning a string array of css color variables, color keywords, or RGB hex values to the "),i(54,"code"),e(55,"chartColors"),t(),e(56," property on the widget's "),i(57,"code"),e(58,"configuration"),t(),e(59," input ("),i(60,"code")(61,"a",6),e(62,"IProportionalWidgetConfig"),t()(),e(63,"). Also, you can use data-driven approach for setting the colors - just put the "),i(64,"code"),e(65,"color"),t(),e(66," property in the widget data series. You can use "),i(67,"code"),e(68,"prioritizeWidgetColors"),t(),e(69," property if you want for widget colors to override data colors. For all that, take a look at the example under the source code expander above. "),t()()),a&2&&(r(6),l("allowDismiss",!1),r(37),l("code",d.proportionalWidgetFileText),r(5),l("code",d.proportionalConfiguratorFileText))},dependencies:[g,c,h,f,u],encapsulation:2})}}return n})();export{b as a};
