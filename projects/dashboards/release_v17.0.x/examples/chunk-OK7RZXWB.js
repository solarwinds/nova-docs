import{cd as _}from"./chunk-3HSEZOBQ.js";import{L as y,e as S,f as v,r as g}from"./chunk-NEOTMEUH.js";import{Ha as u,Ia as x,Pb as f,Rb as r,Xb as a,Yb as i,lc as s,vc as o,wa as h,wc as l,yb as d}from"./chunk-NNMBFNDY.js";import"./chunk-JISDZD7Z.js";import"./chunk-T555DFTC.js";var E={$id:"SchematicsNovaAdd",$schema:"http://json-schema.org/schema",description:"bootstraps a project for dashboards consumption",properties:{project:{type:"string",description:"The name of the project.",$default:{$source:"projectName"}},skipModuleUpdate:{type:"boolean",description:"Skip updating the module configuration",default:!1},skipCss:{type:"boolean",description:"Skip setting styles",default:!1},skipPackageJson:{type:"boolean",description:"Skip updating package.json dependencies",default:!1}},required:[],title:"ng-add schematic for dashboards",type:"object"};function k(t,p){if(t&1&&(a(0,"div")(1,"i"),o(2,"Enum: "),i(),a(3,"span"),o(4),i()()),t&2){let e=s().$implicit,n=s();d(4),l(n.addJsonScheme[e].enum)}}function D(t,p){if(t&1&&(a(0,"div")(1,"i"),o(2,"Alias: "),i(),a(3,"span"),o(4),i()()),t&2){let e=s().$implicit,n=s();d(4),l(n.addJsonScheme[e].alias)}}function J(t,p){if(t&1&&(a(0,"div")(1,"i"),o(2,"Default: "),i(),a(3,"span"),o(4),i()()),t&2){let e=s().$implicit,n=s();d(4),l(n.addJsonScheme[e].default)}}function I(t,p){if(t&1&&(a(0,"div")(1,"nui-expander",1)(2,"div")(3,"i"),o(4,"Description: "),i(),a(5,"span"),o(6),i()(),a(7,"div")(8,"i"),o(9,"Type: "),i(),a(10,"span"),o(11),i()(),f(12,k,5,1,"div",2)(13,D,5,1,"div",2)(14,J,5,1,"div",2),i()()),t&2){let e=p.$implicit,n=s();d(),r("header",e),d(5),l(n.addJsonScheme[e].description),d(5),l(n.addJsonScheme[e].type),d(),r("ngIf",n.addJsonScheme[e].enum),d(),r("ngIf",n.addJsonScheme[e].alias),d(),r("ngIf",n.addJsonScheme[e].default)}}var b=(()=>{class t{constructor(){this.addJsonScheme={},this.objectKeys=Object.keys,this.schemaObjectFiller(E.properties,"add")}schemaObjectFiller(e,n){let m=this[`${n}JsonScheme`];for(let c of this.objectKeys(e))m[c]={description:e[c].description,type:e[c].type},e[c].enum&&(m[c].enum=e[c].enum),e[c].default&&(m[c].default=e[c].default),e[c].alias&&(m[c].alias=e[c].alias)}static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275cmp=u({type:t,selectors:[["nui-dashboard-schematics-docs"]],decls:20,vars:1,consts:[[4,"ngFor","ngForOf"],[3,"header"],[4,"ngIf"]],template:function(n,m){n&1&&(a(0,"h1"),o(1,"Nova Dashboards Schematics"),i(),a(2,"div")(3,"h2"),o(4,"Ng-Add Schematic"),i(),a(5,"h3"),o(6,"Usage:"),i(),a(7,"p")(8,"code"),o(9,"ng add @nova-ui/dashboards"),i()(),a(10,"h3"),o(11,"Description:"),i(),a(12,"p"),o(13," This schematic bootstraps dashboards for consumption in your project by adding it to your package.json and performing an "),a(14,"code"),o(15,"npm install"),i(),o(16,". "),i(),a(17,"h3"),o(18,"Options:"),i(),f(19,I,15,6,"div",0),i()),n&2&&(d(19),r("ngForOf",m.objectKeys(m.addJsonScheme)))},dependencies:[S,v],encapsulation:2})}}return t})();var $=[{path:"",component:b,data:{srlc:{stage:_.ga}}}],R=(()=>{class t{static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275mod=x({type:t})}static{this.\u0275inj=h({imports:[g,y.forChild($)]})}}return t})();export{R as default};
