"use strict";(self.webpackChunkexamples=self.webpackChunkexamples||[]).push([[331],{99331:(d,i,a)=>{a.r(i),a.d(i,{default:()=>r});var o=a(75883),e=a(94650);const c=[{path:"",component:(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["nui-dynamic-header-links-docs"]],decls:21,vars:0,consts:[["href","../interfaces/IHeaderLinkProvider.html","target","_blank"],["href","../miscellaneous/variables.html#HEADER_LINK_PROVIDER"],["target","_blank","href","https://github.com/solarwinds/nova/blob/main/packages/dashboards/examples/src/components/prototypes/prototype-1/prototype-1.component.ts"]],template:function(n,h){1&n&&(e.TgZ(0,"h1"),e._uU(1,"Dynamic Header Links"),e.qZA(),e.TgZ(2,"p"),e._uU(3," Widget headers provide a possibility to configure a link URL that shows a link icon and makes the header clickable. This URL is static, but there is an option to implement a dynamic URL. This is done by implementing a custom class and defining it as a provider associated with the widget header in targeted widget types. This custom class has to implement the "),e.TgZ(4,"code")(5,"a",0),e._uU(6,"IHeaderLinkProvider"),e.qZA()(),e._uU(7," interface which defines a method returning a dynamic link URL. This URL can be based on the "),e.TgZ(8,"code"),e._uU(9,"template"),e.qZA(),e._uU(10," input, which is the static URL that was configured by the user. This can be used as a template string where specific parameters can be injected or appended at the end. Custom header link provider has to be registered using the "),e.TgZ(11,"code")(12,"a",1),e._uU(13,"HEADER_LINK_PROVIDER"),e.qZA()(),e._uU(14," injection token.\n"),e.qZA(),e.TgZ(15,"p"),e._uU(16," Internal "),e.TgZ(17,"code")(18,"a",2),e._uU(19,"prototype-1"),e.qZA()(),e._uU(20," page demonstrates the implementation of a dynamic link URL that includes a value of an external textbox.\n"),e.qZA())},encapsulation:2}),t})(),data:{srlc:{hideIndicator:!0},showThemeSwitcher:!0}}];let r=(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[o.Bz.forChild(c)]}),t})()}}]);