"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const protractor_1 = require("@solarwinds/uzi/protractor");
const uzi_1 = require("@solarwinds/uzi");
const index_atom_1 = require("../index.atom");
class PopoverAtom extends uzi_1.Atom {
    constructor() {
        super(...arguments);
        this.moveMouseToTarget = () => protractor_1.browser.actions()
            .mouseMove(this.getElement().getWebElement())
            .perform();
        this.moveMouseAndClickTarget = () => protractor_1.browser.actions()
            .mouseMove(this.getElement().getWebElement())
            .click()
            .perform();
        this.togglePopover = () => this.isPopoverDisplayed().then((wasDisplayed) => {
            this.moveMouseAndClickTarget();
            return protractor_1.browser.wait(() => this.isPopoverDisplayed().then((isDisplayed) => wasDisplayed !== isDisplayed), 10000);
        });
        this.getPopover = () => this.getPopoverUid().then((id) => protractor_1.browser.element(protractor_1.by.xpath("//*[@popover-uid='" + id + "' and contains(@class, 'xui-popover popover')]")));
        this.isPopoverDisplayed = () => this.getPopover().then(popover => popover.isDisplayed());
        this.getTitle = () => this.getPopover().then(popoverElement => popoverElement.element(protractor_1.by.css(".xui-popover__title")));
        this.getTitleText = () => this.getTitle().then(titleElement => titleElement.getText());
        this.hasStatus = (status) => __awaiter(this, void 0, void 0, function* () {
            const title = yield this.getTitle();
            return yield uzi_1.Atom.hasClass(title, "xui-popover__title--" + status);
        });
        this.hasNoStatus = () => __awaiter(this, void 0, void 0, function* () {
            const title = yield this.getTitle();
            return yield uzi_1.Atom.hasClass(title, "xui-popover__title--");
        });
        this.getStatusIconName = () => this.getPopover().then(popover => index_atom_1.IconAtom.findIn(index_atom_1.IconAtom, popover).name());
        this.isDisplayedRight = () => __awaiter(this, void 0, void 0, function* () {
            const popover = yield this.getPopover();
            return yield uzi_1.Atom.hasClass(popover, "right");
        });
        this.isDisplayedLeft = () => __awaiter(this, void 0, void 0, function* () {
            const popover = yield this.getPopover();
            return yield uzi_1.Atom.hasClass(popover, "left");
        });
        this.clickTarget = () => this.getElement().click();
        this.getPopoverUid = () => this.getElement().getAttribute("popover-uid");
    }
}
PopoverAtom.CSS_CLASS = "xui-popover--click";
exports.PopoverAtom = PopoverAtom;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvcG9wb3Zlci9wb3BvdmVyLmF0b20udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLDJEQUFpRjtBQUNqRix5Q0FBdUM7QUFDdkMsOENBQXlDO0FBRXpDLGlCQUF5QixTQUFRLFVBQUk7SUFBckM7O1FBR1csc0JBQWlCLEdBQUcsR0FBMEIsRUFBRSxDQUNuRCxvQkFBTyxDQUFDLE9BQU8sRUFBRTthQUNaLFNBQVMsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUMsYUFBYSxFQUFFLENBQUM7YUFDNUMsT0FBTyxFQUFFLENBQUM7UUFFWiw0QkFBdUIsR0FBRyxHQUEwQixFQUFFLENBQ3pELG9CQUFPLENBQUMsT0FBTyxFQUFFO2FBQ1osU0FBUyxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQyxhQUFhLEVBQUUsQ0FBQzthQUM1QyxLQUFLLEVBQUU7YUFDUCxPQUFPLEVBQUUsQ0FBQztRQUVaLGtCQUFhLEdBQUcsR0FBMEIsRUFBRSxDQUMvQyxJQUFJLENBQUMsa0JBQWtCLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxZQUFZLEVBQUUsRUFBRTtZQUM1QyxJQUFJLENBQUMsdUJBQXVCLEVBQUUsQ0FBQztZQUMvQixNQUFNLENBQUMsb0JBQU8sQ0FBQyxJQUFJLENBQ2YsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLGtCQUFrQixFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxZQUFZLEtBQUssV0FBVyxDQUFDLEVBQ25GLEtBQUssQ0FDUixDQUFDO1FBQ04sQ0FBQyxDQUFDLENBQUM7UUFFQSxlQUFVLEdBQUcsR0FBbUMsRUFBRSxDQUNyRCxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxvQkFBTyxDQUFDLE9BQU8sQ0FDN0MsZUFBRSxDQUFDLEtBQUssQ0FBQyxvQkFBb0IsR0FBRyxFQUFFLEdBQUcsZ0RBQWdELENBQUMsQ0FDekYsQ0FBQyxDQUFDO1FBRUEsdUJBQWtCLEdBQUcsR0FBNkIsRUFBRSxDQUN2RCxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7UUFFdEQsYUFBUSxHQUFHLEdBQW1DLEVBQUUsQ0FDbkQsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsRUFBRSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsZUFBRSxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUU3RixpQkFBWSxHQUFHLEdBQTRCLEVBQUUsQ0FDaEQsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO1FBRTFELGNBQVMsR0FBRyxDQUFPLE1BQWMsRUFBb0IsRUFBRTtZQUMxRCxNQUFNLEtBQUssR0FBRyxNQUFNLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztZQUNwQyxNQUFNLENBQUMsTUFBTSxVQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxzQkFBc0IsR0FBRyxNQUFNLENBQUMsQ0FBQztRQUN2RSxDQUFDLENBQUEsQ0FBQztRQUVLLGdCQUFXLEdBQUcsR0FBMkIsRUFBRTtZQUM5QyxNQUFNLEtBQUssR0FBRyxNQUFNLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztZQUNwQyxNQUFNLENBQUMsTUFBTSxVQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxzQkFBc0IsQ0FBQyxDQUFDO1FBQzlELENBQUMsQ0FBQSxDQUFDO1FBRUssc0JBQWlCLEdBQUcsR0FBNEIsRUFBRSxDQUNyRCxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMscUJBQVEsQ0FBQyxNQUFNLENBQUMscUJBQVEsRUFBRSxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO1FBRTFFLHFCQUFnQixHQUFHLEdBQTJCLEVBQUU7WUFDbkQsTUFBTSxPQUFPLEdBQUcsTUFBTSxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7WUFDeEMsTUFBTSxDQUFDLE1BQU0sVUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDakQsQ0FBQyxDQUFBLENBQUM7UUFFSyxvQkFBZSxHQUFHLEdBQTJCLEVBQUU7WUFDbEQsTUFBTSxPQUFPLEdBQUcsTUFBTSxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7WUFDeEMsTUFBTSxDQUFDLE1BQU0sVUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDaEQsQ0FBQyxDQUFBLENBQUM7UUFFSyxnQkFBVyxHQUFHLEdBQTBCLEVBQUUsQ0FDN0MsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBRXRCLGtCQUFhLEdBQUcsR0FBNEIsRUFBRSxDQUNsRCxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQ3RELENBQUM7O0FBaEVpQixxQkFBUyxHQUFHLG9CQUFvQixDQUFDO0FBRG5ELGtDQWlFQyIsImZpbGUiOiJjb21wb25lbnRzL3BvcG92ZXIvcG9wb3Zlci5hdG9tLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYnJvd3NlciwgYnksIEVsZW1lbnRGaW5kZXIsIHByb21pc2UgfSBmcm9tIFwiQHNvbGFyd2luZHMvdXppL3Byb3RyYWN0b3JcIjtcbmltcG9ydCB7IEF0b20gfSBmcm9tIFwiQHNvbGFyd2luZHMvdXppXCI7XG5pbXBvcnQgeyBJY29uQXRvbSB9IGZyb20gXCIuLi9pbmRleC5hdG9tXCI7XG5cbmV4cG9ydCBjbGFzcyBQb3BvdmVyQXRvbSBleHRlbmRzIEF0b20ge1xuICAgIHB1YmxpYyBzdGF0aWMgQ1NTX0NMQVNTID0gXCJ4dWktcG9wb3Zlci0tY2xpY2tcIjtcblxuICAgIHB1YmxpYyBtb3ZlTW91c2VUb1RhcmdldCA9ICgpOiBwcm9taXNlLlByb21pc2U8dm9pZD4gPT5cbiAgICAgICAgYnJvd3Nlci5hY3Rpb25zKClcbiAgICAgICAgICAgIC5tb3VzZU1vdmUodGhpcy5nZXRFbGVtZW50KCkuZ2V0V2ViRWxlbWVudCgpKVxuICAgICAgICAgICAgLnBlcmZvcm0oKTtcblxuICAgIHB1YmxpYyBtb3ZlTW91c2VBbmRDbGlja1RhcmdldCA9ICgpOiBwcm9taXNlLlByb21pc2U8dm9pZD4gPT5cbiAgICAgICAgYnJvd3Nlci5hY3Rpb25zKClcbiAgICAgICAgICAgIC5tb3VzZU1vdmUodGhpcy5nZXRFbGVtZW50KCkuZ2V0V2ViRWxlbWVudCgpKVxuICAgICAgICAgICAgLmNsaWNrKClcbiAgICAgICAgICAgIC5wZXJmb3JtKCk7XG5cbiAgICBwdWJsaWMgdG9nZ2xlUG9wb3ZlciA9ICgpOiBwcm9taXNlLlByb21pc2U8dm9pZD4gPT5cbiAgICAgICAgdGhpcy5pc1BvcG92ZXJEaXNwbGF5ZWQoKS50aGVuKCh3YXNEaXNwbGF5ZWQpID0+IHtcbiAgICAgICAgICAgIHRoaXMubW92ZU1vdXNlQW5kQ2xpY2tUYXJnZXQoKTtcbiAgICAgICAgICAgIHJldHVybiBicm93c2VyLndhaXQ8dm9pZD4oXG4gICAgICAgICAgICAgICAgKCkgPT4gdGhpcy5pc1BvcG92ZXJEaXNwbGF5ZWQoKS50aGVuKChpc0Rpc3BsYXllZCkgPT4gd2FzRGlzcGxheWVkICE9PSBpc0Rpc3BsYXllZCksXG4gICAgICAgICAgICAgICAgMTAwMDBcbiAgICAgICAgICAgICk7XG4gICAgICAgIH0pO1xuXG4gICAgcHVibGljIGdldFBvcG92ZXIgPSAoKTogcHJvbWlzZS5Qcm9taXNlPEVsZW1lbnRGaW5kZXI+ID0+XG4gICAgICAgIHRoaXMuZ2V0UG9wb3ZlclVpZCgpLnRoZW4oKGlkKSA9PiBicm93c2VyLmVsZW1lbnQoXG4gICAgICAgICAgICBieS54cGF0aChcIi8vKltAcG9wb3Zlci11aWQ9J1wiICsgaWQgKyBcIicgYW5kIGNvbnRhaW5zKEBjbGFzcywgJ3h1aS1wb3BvdmVyIHBvcG92ZXInKV1cIilcbiAgICAgICAgKSk7XG5cbiAgICBwdWJsaWMgaXNQb3BvdmVyRGlzcGxheWVkID0gKCk6IHByb21pc2UuUHJvbWlzZTxib29sZWFuPiA9PlxuICAgICAgICB0aGlzLmdldFBvcG92ZXIoKS50aGVuKHBvcG92ZXIgPT4gcG9wb3Zlci5pc0Rpc3BsYXllZCgpKTtcblxuICAgIHB1YmxpYyBnZXRUaXRsZSA9ICgpOiBwcm9taXNlLlByb21pc2U8RWxlbWVudEZpbmRlcj4gPT5cbiAgICAgICAgdGhpcy5nZXRQb3BvdmVyKCkudGhlbihwb3BvdmVyRWxlbWVudCA9PiBwb3BvdmVyRWxlbWVudC5lbGVtZW50KGJ5LmNzcyhcIi54dWktcG9wb3Zlcl9fdGl0bGVcIikpKTtcblxuICAgIHB1YmxpYyBnZXRUaXRsZVRleHQgPSAoKTogcHJvbWlzZS5Qcm9taXNlPHN0cmluZz4gPT5cbiAgICAgICAgdGhpcy5nZXRUaXRsZSgpLnRoZW4odGl0bGVFbGVtZW50ID0+IHRpdGxlRWxlbWVudC5nZXRUZXh0KCkpO1xuXG4gICAgcHVibGljIGhhc1N0YXR1cyA9IGFzeW5jIChzdGF0dXM6IHN0cmluZyk6IFByb21pc2U8Ym9vbGVhbj4gPT4ge1xuICAgICAgICBjb25zdCB0aXRsZSA9IGF3YWl0IHRoaXMuZ2V0VGl0bGUoKTtcbiAgICAgICAgcmV0dXJuIGF3YWl0IEF0b20uaGFzQ2xhc3ModGl0bGUsIFwieHVpLXBvcG92ZXJfX3RpdGxlLS1cIiArIHN0YXR1cyk7XG4gICAgfTtcblxuICAgIHB1YmxpYyBoYXNOb1N0YXR1cyA9IGFzeW5jICgpOiBQcm9taXNlPGJvb2xlYW4+ID0+IHtcbiAgICAgICAgY29uc3QgdGl0bGUgPSBhd2FpdCB0aGlzLmdldFRpdGxlKCk7XG4gICAgICAgIHJldHVybiBhd2FpdCBBdG9tLmhhc0NsYXNzKHRpdGxlLCBcInh1aS1wb3BvdmVyX190aXRsZS0tXCIpO1xuICAgIH07XG5cbiAgICBwdWJsaWMgZ2V0U3RhdHVzSWNvbk5hbWUgPSAoKTogcHJvbWlzZS5Qcm9taXNlPHN0cmluZz4gPT5cbiAgICAgICAgdGhpcy5nZXRQb3BvdmVyKCkudGhlbihwb3BvdmVyID0+IEljb25BdG9tLmZpbmRJbihJY29uQXRvbSwgcG9wb3ZlcikubmFtZSgpKTtcblxuICAgIHB1YmxpYyBpc0Rpc3BsYXllZFJpZ2h0ID0gYXN5bmMgKCk6IFByb21pc2U8Ym9vbGVhbj4gPT4ge1xuICAgICAgICBjb25zdCBwb3BvdmVyID0gYXdhaXQgdGhpcy5nZXRQb3BvdmVyKCk7XG4gICAgICAgIHJldHVybiBhd2FpdCBBdG9tLmhhc0NsYXNzKHBvcG92ZXIsIFwicmlnaHRcIik7XG4gICAgfTtcblxuICAgIHB1YmxpYyBpc0Rpc3BsYXllZExlZnQgPSBhc3luYyAoKTogUHJvbWlzZTxib29sZWFuPiA9PiB7XG4gICAgICAgIGNvbnN0IHBvcG92ZXIgPSBhd2FpdCB0aGlzLmdldFBvcG92ZXIoKTtcbiAgICAgICAgcmV0dXJuIGF3YWl0IEF0b20uaGFzQ2xhc3MocG9wb3ZlciwgXCJsZWZ0XCIpO1xuICAgIH07XG5cbiAgICBwdWJsaWMgY2xpY2tUYXJnZXQgPSAoKTogcHJvbWlzZS5Qcm9taXNlPHZvaWQ+ID0+XG4gICAgICAgIHRoaXMuZ2V0RWxlbWVudCgpLmNsaWNrKCk7XG5cbiAgICBwcml2YXRlIGdldFBvcG92ZXJVaWQgPSAoKTogcHJvbWlzZS5Qcm9taXNlPHN0cmluZz4gPT5cbiAgICAgICAgdGhpcy5nZXRFbGVtZW50KCkuZ2V0QXR0cmlidXRlKFwicG9wb3Zlci11aWRcIik7XG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
