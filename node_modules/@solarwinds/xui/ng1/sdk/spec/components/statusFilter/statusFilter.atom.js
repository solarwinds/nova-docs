"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const uzi_1 = require("@solarwinds/uzi");
const protractor_1 = require("@solarwinds/uzi/protractor");
class StatusFilterAtom extends uzi_1.Atom {
    constructor() {
        super(...arguments);
        this.filter = (property) => {
            return this.getFilterByName(property).click();
        };
        this.filterIsActive = (name) => {
            return this.getFilterByName(name).getAttribute("class").then((result) => {
                return result.split(" ").indexOf("sorter-button--activated") !== -1;
            });
        };
        this.isAppended = () => {
            return this.getElement().isPresent();
        };
        this.getFilterByName = (name) => {
            return this.getElement().element(protractor_1.by.className(name));
        };
    }
}
StatusFilterAtom.CSS_CLASS = "xui-status-filter";
exports.StatusFilterAtom = StatusFilterAtom;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvc3RhdHVzRmlsdGVyL3N0YXR1c0ZpbHRlci5hdG9tLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEseUNBQXFDO0FBQ3JDLDJEQUFzRTtBQUV0RSxzQkFBOEIsU0FBUSxVQUFJO0lBQTFDOztRQUdXLFdBQU0sR0FBRyxDQUFDLFFBQWdCLEVBQXlCLEVBQUU7WUFDeEQsTUFBTSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDbEQsQ0FBQyxDQUFDO1FBRUssbUJBQWMsR0FBRyxDQUFDLElBQVksRUFBd0IsRUFBRTtZQUMzRCxNQUFNLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUU7Z0JBQ3BFLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQywwQkFBMEIsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1lBQ3hFLENBQUMsQ0FBQyxDQUFDO1FBQ1AsQ0FBQyxDQUFDO1FBRUssZUFBVSxHQUFHLEdBQTZCLEVBQUU7WUFDL0MsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUN6QyxDQUFDLENBQUM7UUFFTSxvQkFBZSxHQUFHLENBQUMsSUFBWSxFQUFpQixFQUFFO1lBQ3RELE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUMsT0FBTyxDQUFDLGVBQUUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUN6RCxDQUFDLENBQUE7SUFDTCxDQUFDOztBQW5CaUIsMEJBQVMsR0FBRyxtQkFBbUIsQ0FBQztBQURsRCw0Q0FvQkMiLCJmaWxlIjoiY29tcG9uZW50cy9zdGF0dXNGaWx0ZXIvc3RhdHVzRmlsdGVyLmF0b20uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0F0b219IGZyb20gXCJAc29sYXJ3aW5kcy91emlcIjtcbmltcG9ydCB7RWxlbWVudEZpbmRlciwgcHJvbWlzZSwgYnl9IGZyb20gXCJAc29sYXJ3aW5kcy91emkvcHJvdHJhY3RvclwiO1xuXG5leHBvcnQgY2xhc3MgU3RhdHVzRmlsdGVyQXRvbSBleHRlbmRzIEF0b20ge1xuICAgIHB1YmxpYyBzdGF0aWMgQ1NTX0NMQVNTID0gXCJ4dWktc3RhdHVzLWZpbHRlclwiO1xuXG4gICAgcHVibGljIGZpbHRlciA9IChwcm9wZXJ0eTogc3RyaW5nKTogcHJvbWlzZS5Qcm9taXNlPHZvaWQ+ID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0RmlsdGVyQnlOYW1lKHByb3BlcnR5KS5jbGljaygpO1xuICAgIH07XG5cbiAgICBwdWJsaWMgZmlsdGVySXNBY3RpdmUgPSAobmFtZTogc3RyaW5nKTogcHJvbWlzZS5Qcm9taXNlPGFueT4gPT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRGaWx0ZXJCeU5hbWUobmFtZSkuZ2V0QXR0cmlidXRlKFwiY2xhc3NcIikudGhlbigocmVzdWx0KSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0LnNwbGl0KFwiIFwiKS5pbmRleE9mKFwic29ydGVyLWJ1dHRvbi0tYWN0aXZhdGVkXCIpICE9PSAtMTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIHB1YmxpYyBpc0FwcGVuZGVkID0gKCk6IHByb21pc2UuUHJvbWlzZTxib29sZWFuPiA9PiB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldEVsZW1lbnQoKS5pc1ByZXNlbnQoKTtcbiAgICB9O1xuXG4gICAgcHJpdmF0ZSBnZXRGaWx0ZXJCeU5hbWUgPSAobmFtZTogc3RyaW5nKTogRWxlbWVudEZpbmRlciA9PiB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldEVsZW1lbnQoKS5lbGVtZW50KGJ5LmNsYXNzTmFtZShuYW1lKSk7XG4gICAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
