"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const protractor_1 = require("@solarwinds/uzi/protractor");
const helpers_1 = require("../helpers");
const index_atom_1 = require("../index.atom");
const uzi_1 = require("@solarwinds/uzi");
describe("USERCONTROL Checkbox Group", () => {
    let cg;
    beforeEach(() => {
        helpers_1.default.prepareBrowser("checkbox-group");
    });
    // - test should start with checkbox-group that has first two checkboxes checked
    // - third checkbox is unchecked
    // - check it and validate
    it("checking works in a pre-checked group", () => {
        cg = uzi_1.Atom.findIn(index_atom_1.CheckboxGroupAtom, protractor_1.element(protractor_1.by.id("default")));
        const cb1 = cg.getCheckbox("Item 1");
        const cb2 = cg.getCheckbox("Item 2");
        const cb3 = cg.getCheckbox("Item 3");
        expect(cb1.isChecked()).toBe(true);
        expect(cb2.isChecked()).toBe(true);
        expect(cb3.isChecked()).toBe(false);
        cb3.click();
        expect(cb3.isChecked()).toBe(true);
    });
    // - test should start with checkbox-group that has first two checkboxes unchecked
    // - third checkbox is checked
    // - check it and validate
    it("checking works in a pre-checked group", () => {
        cg = uzi_1.Atom.findIn(index_atom_1.CheckboxGroupAtom, protractor_1.element(protractor_1.by.id("invert")));
        const cb1 = cg.getCheckbox("Item 1");
        const cb2 = cg.getCheckbox("Item 2");
        const cb3 = cg.getCheckbox("Item 3");
        expect(cb1.isChecked()).toBe(false);
        expect(cb2.isChecked()).toBe(false);
        expect(cb3.isChecked()).toBe(true);
        cb3.click();
        expect(cb3.isChecked()).toBe(false);
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvY2hlY2tib3gtZ3JvdXAvY2hlY2tib3gtZ3JvdXAuZTJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMkRBQWdFO0FBQ2hFLHdDQUFpQztBQUNqQyw4Q0FBZ0Q7QUFDaEQseUNBQXFDO0FBRXJDLFFBQVEsQ0FBQyw0QkFBNEIsRUFBRSxHQUFHLEVBQUU7SUFFeEMsSUFBSSxFQUFxQixDQUFDO0lBRTFCLFVBQVUsQ0FBQyxHQUFHLEVBQUU7UUFDWixpQkFBTyxDQUFDLGNBQWMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQzdDLENBQUMsQ0FBQyxDQUFDO0lBRUgsZ0ZBQWdGO0lBQ2hGLGdDQUFnQztJQUNoQywwQkFBMEI7SUFDMUIsRUFBRSxDQUFDLHVDQUF1QyxFQUFFLEdBQUcsRUFBRTtRQUM3QyxFQUFFLEdBQUcsVUFBSSxDQUFDLE1BQU0sQ0FBQyw4QkFBaUIsRUFBRSxvQkFBTyxDQUFDLGVBQUUsQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRS9ELE1BQU0sR0FBRyxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDckMsTUFBTSxHQUFHLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNyQyxNQUFNLEdBQUcsR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBRXJDLE1BQU0sQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbkMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNuQyxNQUFNLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3BDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNaLE1BQU0sQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdkMsQ0FBQyxDQUFDLENBQUM7SUFFSCxrRkFBa0Y7SUFDbEYsOEJBQThCO0lBQzlCLDBCQUEwQjtJQUMxQixFQUFFLENBQUMsdUNBQXVDLEVBQUUsR0FBRyxFQUFFO1FBQzdDLEVBQUUsR0FBRyxVQUFJLENBQUMsTUFBTSxDQUFDLDhCQUFpQixFQUFFLG9CQUFPLENBQUMsZUFBRSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFOUQsTUFBTSxHQUFHLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNyQyxNQUFNLEdBQUcsR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3JDLE1BQU0sR0FBRyxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7UUFFckMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNwQyxNQUFNLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbkMsR0FBRyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ1osTUFBTSxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN4QyxDQUFDLENBQUMsQ0FBQztBQUVQLENBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6ImNvbXBvbmVudHMvY2hlY2tib3gtZ3JvdXAvY2hlY2tib3gtZ3JvdXAuZTJlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtieSwgZWxlbWVudCwgcHJvbWlzZX0gZnJvbSBcIkBzb2xhcndpbmRzL3V6aS9wcm90cmFjdG9yXCI7XG5pbXBvcnQgSGVscGVycyBmcm9tIFwiLi4vaGVscGVyc1wiO1xuaW1wb3J0IHtDaGVja2JveEdyb3VwQXRvbX0gZnJvbSBcIi4uL2luZGV4LmF0b21cIjtcbmltcG9ydCB7QXRvbX0gZnJvbSBcIkBzb2xhcndpbmRzL3V6aVwiO1xuXG5kZXNjcmliZShcIlVTRVJDT05UUk9MIENoZWNrYm94IEdyb3VwXCIsICgpID0+IHtcblxuICAgIGxldCBjZzogQ2hlY2tib3hHcm91cEF0b207XG5cbiAgICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICAgICAgSGVscGVycy5wcmVwYXJlQnJvd3NlcihcImNoZWNrYm94LWdyb3VwXCIpO1xuICAgIH0pO1xuXG4gICAgLy8gLSB0ZXN0IHNob3VsZCBzdGFydCB3aXRoIGNoZWNrYm94LWdyb3VwIHRoYXQgaGFzIGZpcnN0IHR3byBjaGVja2JveGVzIGNoZWNrZWRcbiAgICAvLyAtIHRoaXJkIGNoZWNrYm94IGlzIHVuY2hlY2tlZFxuICAgIC8vIC0gY2hlY2sgaXQgYW5kIHZhbGlkYXRlXG4gICAgaXQoXCJjaGVja2luZyB3b3JrcyBpbiBhIHByZS1jaGVja2VkIGdyb3VwXCIsICgpID0+IHtcbiAgICAgICAgY2cgPSBBdG9tLmZpbmRJbihDaGVja2JveEdyb3VwQXRvbSwgZWxlbWVudChieS5pZChcImRlZmF1bHRcIikpKTtcblxuICAgICAgICBjb25zdCBjYjEgPSBjZy5nZXRDaGVja2JveChcIkl0ZW0gMVwiKTtcbiAgICAgICAgY29uc3QgY2IyID0gY2cuZ2V0Q2hlY2tib3goXCJJdGVtIDJcIik7XG4gICAgICAgIGNvbnN0IGNiMyA9IGNnLmdldENoZWNrYm94KFwiSXRlbSAzXCIpO1xuXG4gICAgICAgIGV4cGVjdChjYjEuaXNDaGVja2VkKCkpLnRvQmUodHJ1ZSk7XG4gICAgICAgIGV4cGVjdChjYjIuaXNDaGVja2VkKCkpLnRvQmUodHJ1ZSk7XG4gICAgICAgIGV4cGVjdChjYjMuaXNDaGVja2VkKCkpLnRvQmUoZmFsc2UpO1xuICAgICAgICBjYjMuY2xpY2soKTtcbiAgICAgICAgZXhwZWN0KGNiMy5pc0NoZWNrZWQoKSkudG9CZSh0cnVlKTtcbiAgICB9KTtcblxuICAgIC8vIC0gdGVzdCBzaG91bGQgc3RhcnQgd2l0aCBjaGVja2JveC1ncm91cCB0aGF0IGhhcyBmaXJzdCB0d28gY2hlY2tib3hlcyB1bmNoZWNrZWRcbiAgICAvLyAtIHRoaXJkIGNoZWNrYm94IGlzIGNoZWNrZWRcbiAgICAvLyAtIGNoZWNrIGl0IGFuZCB2YWxpZGF0ZVxuICAgIGl0KFwiY2hlY2tpbmcgd29ya3MgaW4gYSBwcmUtY2hlY2tlZCBncm91cFwiLCAoKSA9PiB7XG4gICAgICAgIGNnID0gQXRvbS5maW5kSW4oQ2hlY2tib3hHcm91cEF0b20sIGVsZW1lbnQoYnkuaWQoXCJpbnZlcnRcIikpKTtcblxuICAgICAgICBjb25zdCBjYjEgPSBjZy5nZXRDaGVja2JveChcIkl0ZW0gMVwiKTtcbiAgICAgICAgY29uc3QgY2IyID0gY2cuZ2V0Q2hlY2tib3goXCJJdGVtIDJcIik7XG4gICAgICAgIGNvbnN0IGNiMyA9IGNnLmdldENoZWNrYm94KFwiSXRlbSAzXCIpO1xuXG4gICAgICAgIGV4cGVjdChjYjEuaXNDaGVja2VkKCkpLnRvQmUoZmFsc2UpO1xuICAgICAgICBleHBlY3QoY2IyLmlzQ2hlY2tlZCgpKS50b0JlKGZhbHNlKTtcbiAgICAgICAgZXhwZWN0KGNiMy5pc0NoZWNrZWQoKSkudG9CZSh0cnVlKTtcbiAgICAgICAgY2IzLmNsaWNrKCk7XG4gICAgICAgIGV4cGVjdChjYjMuaXNDaGVja2VkKCkpLnRvQmUoZmFsc2UpO1xuICAgIH0pO1xuXG59KTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
