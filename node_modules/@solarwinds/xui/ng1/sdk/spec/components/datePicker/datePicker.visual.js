"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const protractor_1 = require("@solarwinds/uzi/protractor");
const helpers_1 = require("../helpers");
const uzi_1 = require("@solarwinds/uzi");
const index_atom_1 = require("../index.atom");
describe("Visual tests: DatePicker", function () {
    let eyes;
    let datePicker;
    let dpLeftDown = uzi_1.Atom.find(index_atom_1.DatePickerAtom, "input-datepicker");
    let dpLeftUp = uzi_1.Atom.find(index_atom_1.DatePickerAtom, "input-datepicker-upside");
    let dpRightDown = uzi_1.Atom.find(index_atom_1.DatePickerAtom, "input-datepicker-right");
    let dpRightUp = uzi_1.Atom.find(index_atom_1.DatePickerAtom, "input-datepicker-upside-right");
    beforeEach(() => {
        eyes = helpers_1.default.prepareEyes();
        helpers_1.default.prepareBrowser("datePicker");
    });
    it("Default look", function () {
        eyes.open(protractor_1.browser, "XUI", "DatePicker");
        eyes.checkWindow("Default");
        dpLeftDown.clickCalendarIcon();
        eyes.checkWindow("Edge detection - display left-down");
        dpLeftUp.clickCalendarIcon();
        eyes.checkWindow("Edge detection - display left-up");
        dpRightDown.clickCalendarIcon();
        eyes.checkWindow("Edge detection - display right-down");
        dpRightUp.clickCalendarIcon();
        eyes.checkWindow("Edge detection - display right-up");
        dpLeftUp.clickCalendarIcon();
        dpLeftUp.clickTitle();
        eyes.checkWindow("Month selection");
        dpLeftUp.clickTitle();
        eyes.checkWindow("Year selection");
        eyes.close();
    }, 90000);
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvZGF0ZVBpY2tlci9kYXRlUGlja2VyLnZpc3VhbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDJEQUE0RDtBQUM1RCx3Q0FBaUM7QUFDakMseUNBQXFDO0FBRXJDLDhDQUE2QztBQUU3QyxRQUFRLENBQUMsMEJBQTBCLEVBQUU7SUFDakMsSUFBSSxJQUFVLENBQUM7SUFDZixJQUFJLFVBQTBCLENBQUM7SUFDL0IsSUFBSSxVQUFVLEdBQUcsVUFBSSxDQUFDLElBQUksQ0FBQywyQkFBYyxFQUFFLGtCQUFrQixDQUFDLENBQUM7SUFDL0QsSUFBSSxRQUFRLEdBQUcsVUFBSSxDQUFDLElBQUksQ0FBQywyQkFBYyxFQUFFLHlCQUF5QixDQUFDLENBQUM7SUFDcEUsSUFBSSxXQUFXLEdBQUcsVUFBSSxDQUFDLElBQUksQ0FBQywyQkFBYyxFQUFFLHdCQUF3QixDQUFDLENBQUM7SUFDdEUsSUFBSSxTQUFTLEdBQUcsVUFBSSxDQUFDLElBQUksQ0FBQywyQkFBYyxFQUFFLCtCQUErQixDQUFDLENBQUM7SUFFM0UsVUFBVSxDQUFDLEdBQUcsRUFBRTtRQUNaLElBQUksR0FBRyxpQkFBTyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQzdCLGlCQUFPLENBQUMsY0FBYyxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ3pDLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLGNBQWMsRUFBRTtRQUNmLElBQUksQ0FBQyxJQUFJLENBQUMsb0JBQU8sRUFBRSxLQUFLLEVBQUUsWUFBWSxDQUFDLENBQUM7UUFFeEMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUU1QixVQUFVLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztRQUMvQixJQUFJLENBQUMsV0FBVyxDQUFDLG9DQUFvQyxDQUFDLENBQUM7UUFFdkQsUUFBUSxDQUFDLGlCQUFpQixFQUFFLENBQUM7UUFDN0IsSUFBSSxDQUFDLFdBQVcsQ0FBQyxrQ0FBa0MsQ0FBQyxDQUFDO1FBRXJELFdBQVcsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO1FBQ2hDLElBQUksQ0FBQyxXQUFXLENBQUMscUNBQXFDLENBQUMsQ0FBQztRQUV4RCxTQUFTLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztRQUM5QixJQUFJLENBQUMsV0FBVyxDQUFDLG1DQUFtQyxDQUFDLENBQUM7UUFFdEQsUUFBUSxDQUFDLGlCQUFpQixFQUFFLENBQUM7UUFDN0IsUUFBUSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxXQUFXLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUVwQyxRQUFRLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDdEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBRW5DLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUNqQixDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDZCxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJjb21wb25lbnRzL2RhdGVQaWNrZXIvZGF0ZVBpY2tlci52aXN1YWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2Jyb3dzZXIsIHByb21pc2V9IGZyb20gXCJAc29sYXJ3aW5kcy91emkvcHJvdHJhY3RvclwiO1xuaW1wb3J0IEhlbHBlcnMgZnJvbSBcIi4uL2hlbHBlcnNcIjtcbmltcG9ydCB7QXRvbX0gZnJvbSBcIkBzb2xhcndpbmRzL3V6aVwiO1xuaW1wb3J0IHtFeWVzfSBmcm9tIFwiZXllcy5wcm90cmFjdG9yXCI7XG5pbXBvcnQge0RhdGVQaWNrZXJBdG9tfSBmcm9tIFwiLi4vaW5kZXguYXRvbVwiO1xuXG5kZXNjcmliZShcIlZpc3VhbCB0ZXN0czogRGF0ZVBpY2tlclwiLCBmdW5jdGlvbiAoKSB7XG4gICAgbGV0IGV5ZXM6IEV5ZXM7XG4gICAgbGV0IGRhdGVQaWNrZXI6IERhdGVQaWNrZXJBdG9tO1xuICAgIGxldCBkcExlZnREb3duID0gQXRvbS5maW5kKERhdGVQaWNrZXJBdG9tLCBcImlucHV0LWRhdGVwaWNrZXJcIik7XG4gICAgbGV0IGRwTGVmdFVwID0gQXRvbS5maW5kKERhdGVQaWNrZXJBdG9tLCBcImlucHV0LWRhdGVwaWNrZXItdXBzaWRlXCIpO1xuICAgIGxldCBkcFJpZ2h0RG93biA9IEF0b20uZmluZChEYXRlUGlja2VyQXRvbSwgXCJpbnB1dC1kYXRlcGlja2VyLXJpZ2h0XCIpO1xuICAgIGxldCBkcFJpZ2h0VXAgPSBBdG9tLmZpbmQoRGF0ZVBpY2tlckF0b20sIFwiaW5wdXQtZGF0ZXBpY2tlci11cHNpZGUtcmlnaHRcIik7XG5cbiAgICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICAgICAgZXllcyA9IEhlbHBlcnMucHJlcGFyZUV5ZXMoKTtcbiAgICAgICAgSGVscGVycy5wcmVwYXJlQnJvd3NlcihcImRhdGVQaWNrZXJcIik7XG4gICAgfSk7XG5cbiAgICBpdChcIkRlZmF1bHQgbG9va1wiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGV5ZXMub3Blbihicm93c2VyLCBcIlhVSVwiLCBcIkRhdGVQaWNrZXJcIik7XG5cbiAgICAgICAgZXllcy5jaGVja1dpbmRvdyhcIkRlZmF1bHRcIik7XG5cbiAgICAgICAgZHBMZWZ0RG93bi5jbGlja0NhbGVuZGFySWNvbigpO1xuICAgICAgICBleWVzLmNoZWNrV2luZG93KFwiRWRnZSBkZXRlY3Rpb24gLSBkaXNwbGF5IGxlZnQtZG93blwiKTtcblxuICAgICAgICBkcExlZnRVcC5jbGlja0NhbGVuZGFySWNvbigpO1xuICAgICAgICBleWVzLmNoZWNrV2luZG93KFwiRWRnZSBkZXRlY3Rpb24gLSBkaXNwbGF5IGxlZnQtdXBcIik7XG5cbiAgICAgICAgZHBSaWdodERvd24uY2xpY2tDYWxlbmRhckljb24oKTtcbiAgICAgICAgZXllcy5jaGVja1dpbmRvdyhcIkVkZ2UgZGV0ZWN0aW9uIC0gZGlzcGxheSByaWdodC1kb3duXCIpO1xuXG4gICAgICAgIGRwUmlnaHRVcC5jbGlja0NhbGVuZGFySWNvbigpO1xuICAgICAgICBleWVzLmNoZWNrV2luZG93KFwiRWRnZSBkZXRlY3Rpb24gLSBkaXNwbGF5IHJpZ2h0LXVwXCIpO1xuXG4gICAgICAgIGRwTGVmdFVwLmNsaWNrQ2FsZW5kYXJJY29uKCk7XG4gICAgICAgIGRwTGVmdFVwLmNsaWNrVGl0bGUoKTtcbiAgICAgICAgZXllcy5jaGVja1dpbmRvdyhcIk1vbnRoIHNlbGVjdGlvblwiKTtcblxuICAgICAgICBkcExlZnRVcC5jbGlja1RpdGxlKCk7XG4gICAgICAgIGV5ZXMuY2hlY2tXaW5kb3coXCJZZWFyIHNlbGVjdGlvblwiKTtcblxuICAgICAgICBleWVzLmNsb3NlKCk7XG4gICAgfSwgOTAwMDApO1xufSk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
