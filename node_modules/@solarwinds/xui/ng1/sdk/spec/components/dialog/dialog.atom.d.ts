import { ElementArrayFinder, ElementFinder, promise } from "@solarwinds/uzi/protractor";
import { Atom } from "@solarwinds/uzi";
export declare class DialogAtom extends Atom {
    static CSS_CLASS: string;
    static get: () => DialogAtom;
    static waitUntilHidden: () => promise.Promise<promise.Promise<boolean>>;
    static isPresent: () => promise.Promise<boolean>;
    getHeader: () => ElementFinder;
    getHeaderClose: () => ElementFinder;
    getTitle: () => promise.Promise<string>;
    isWarningStatusIconPresent: () => promise.Promise<boolean>;
    isErrorStatusIconPresent: () => promise.Promise<boolean>;
    isStatusIconPresent: () => promise.Promise<boolean>;
    getBody: () => ElementFinder;
    getMessage: () => promise.Promise<string>;
    getTranscludedContent: () => ElementFinder;
    getContent: (id: string) => ElementFinder;
    getFooterButtons: () => ElementArrayFinder;
    getFooter: () => ElementFinder;
    getVisibleFooterButtons: () => ElementArrayFinder;
    getVisibleFooterButton: (buttonText: string) => ElementFinder;
    footerButtonCount: () => promise.Promise<number>;
    clickFooterButton: (buttonText: string) => promise.Promise<void>;
    isBusyOverlayDisplayed: () => promise.Promise<boolean>;
    cancelBusy: () => promise.Promise<void>;
    isBusyOverlayHidden: () => promise.Promise<boolean>;
    isFooterBtnHasClass: (buttonIndex: number, className: string) => promise.Promise<boolean>;
    isFooterBtnIconHasClass: (buttonIndex: number, className: string) => promise.Promise<boolean>;
}
