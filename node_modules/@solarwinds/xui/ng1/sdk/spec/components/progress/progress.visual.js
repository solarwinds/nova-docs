"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const protractor_1 = require("@solarwinds/uzi/protractor");
const uzi_1 = require("@solarwinds/uzi");
const index_atom_1 = require("../index.atom");
const helpers_1 = require("../helpers");
describe("Visual tests: Progress", function () {
    let eyes;
    let bigProgress;
    let startButton;
    let progressAtom;
    beforeEach(() => {
        eyes = helpers_1.default.prepareEyes();
        helpers_1.default.prepareBrowser("progress");
        progressAtom = uzi_1.Atom.findIn(index_atom_1.ProgressAtom, undefined, 0);
        startButton = uzi_1.Atom.findIn(index_atom_1.ButtonAtom, protractor_1.element(protractor_1.by.className("xui-demo-start-progress-btn")));
        bigProgress = uzi_1.Atom.findIn(index_atom_1.ProgressAtom, protractor_1.element(protractor_1.by.xpath(".//div[contains(@allow-cancel, 'true')]")));
    });
    it("Default look", function () {
        return __awaiter(this, void 0, void 0, function* () {
            eyes.open(protractor_1.browser, "XUI", "Progress");
            eyes.checkWindow("Default");
            yield startButton.click();
            //Waiting for the progress bar to stop moving
            yield progressAtom.waitForProgressBarToComplete(15000);
            eyes.checkWindow("Progress bars color state");
            yield bigProgress.cancelProgress();
            eyes.checkWindow("Progress cancelled. The first progress component is not visible");
            eyes.close();
        });
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvcHJvZ3Jlc3MvcHJvZ3Jlc3MudmlzdWFsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSwyREFBMkU7QUFDM0UseUNBQXVDO0FBRXZDLDhDQUF5RDtBQUN6RCx3Q0FBaUM7QUFFakMsUUFBUSxDQUFDLHdCQUF3QixFQUFFO0lBQy9CLElBQUksSUFBVSxDQUFDO0lBQ2YsSUFBSSxXQUF5QixDQUFDO0lBQzlCLElBQUksV0FBdUIsQ0FBQztJQUM1QixJQUFJLFlBQTBCLENBQUM7SUFFL0IsVUFBVSxDQUFDLEdBQUcsRUFBRTtRQUNaLElBQUksR0FBRyxpQkFBTyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQzdCLGlCQUFPLENBQUMsY0FBYyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ25DLFlBQVksR0FBRyxVQUFJLENBQUMsTUFBTSxDQUFDLHlCQUFZLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3ZELFdBQVcsR0FBRyxVQUFJLENBQUMsTUFBTSxDQUFDLHVCQUFVLEVBQUUsb0JBQU8sQ0FBQyxlQUFFLENBQUMsU0FBUyxDQUFDLDZCQUE2QixDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzVGLFdBQVcsR0FBRyxVQUFJLENBQUMsTUFBTSxDQUFDLHlCQUFZLEVBQUUsb0JBQU8sQ0FBQyxlQUFFLENBQUMsS0FBSyxDQUFDLHlDQUF5QyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFHLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLGNBQWMsRUFBRTs7WUFDZixJQUFJLENBQUMsSUFBSSxDQUFDLG9CQUFPLEVBQUUsS0FBSyxFQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ3JDLElBQUksQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUM7WUFFNUIsTUFBTSxXQUFXLENBQUMsS0FBSyxFQUFFLENBQUM7WUFDMUIsNkNBQTZDO1lBQzdDLE1BQU0sWUFBWSxDQUFDLDRCQUE0QixDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3ZELElBQUksQ0FBQyxXQUFXLENBQUMsMkJBQTJCLENBQUMsQ0FBQztZQUU5QyxNQUFNLFdBQVcsQ0FBQyxjQUFjLEVBQUUsQ0FBQztZQUNuQyxJQUFJLENBQUMsV0FBVyxDQUFDLGlFQUFpRSxDQUFDLENBQUM7WUFFcEYsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ2pCLENBQUM7S0FBQSxDQUFDLENBQUM7QUFDUCxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJjb21wb25lbnRzL3Byb2dyZXNzL3Byb2dyZXNzLnZpc3VhbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJyb3dzZXIsIGJ5LCBwcm9taXNlLCBlbGVtZW50IH0gZnJvbSBcIkBzb2xhcndpbmRzL3V6aS9wcm90cmFjdG9yXCI7XG5pbXBvcnQgeyBBdG9tIH0gZnJvbSBcIkBzb2xhcndpbmRzL3V6aVwiO1xuaW1wb3J0IHsgRXllcyB9IGZyb20gXCJleWVzLnByb3RyYWN0b3JcIjtcbmltcG9ydCB7IFByb2dyZXNzQXRvbSwgQnV0dG9uQXRvbSB9IGZyb20gXCIuLi9pbmRleC5hdG9tXCI7XG5pbXBvcnQgSGVscGVycyBmcm9tIFwiLi4vaGVscGVyc1wiO1xuXG5kZXNjcmliZShcIlZpc3VhbCB0ZXN0czogUHJvZ3Jlc3NcIiwgZnVuY3Rpb24oKSB7XG4gICAgbGV0IGV5ZXM6IEV5ZXM7XG4gICAgbGV0IGJpZ1Byb2dyZXNzOiBQcm9ncmVzc0F0b207XG4gICAgbGV0IHN0YXJ0QnV0dG9uOiBCdXR0b25BdG9tO1xuICAgIGxldCBwcm9ncmVzc0F0b206IFByb2dyZXNzQXRvbTtcblxuICAgIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgICAgICBleWVzID0gSGVscGVycy5wcmVwYXJlRXllcygpO1xuICAgICAgICBIZWxwZXJzLnByZXBhcmVCcm93c2VyKFwicHJvZ3Jlc3NcIik7XG4gICAgICAgIHByb2dyZXNzQXRvbSA9IEF0b20uZmluZEluKFByb2dyZXNzQXRvbSwgdW5kZWZpbmVkLCAwKTtcbiAgICAgICAgc3RhcnRCdXR0b24gPSBBdG9tLmZpbmRJbihCdXR0b25BdG9tLCBlbGVtZW50KGJ5LmNsYXNzTmFtZShcInh1aS1kZW1vLXN0YXJ0LXByb2dyZXNzLWJ0blwiKSkpO1xuICAgICAgICBiaWdQcm9ncmVzcyA9IEF0b20uZmluZEluKFByb2dyZXNzQXRvbSwgZWxlbWVudChieS54cGF0aChcIi4vL2Rpdltjb250YWlucyhAYWxsb3ctY2FuY2VsLCAndHJ1ZScpXVwiKSkpO1xuICAgIH0pO1xuXG4gICAgaXQoXCJEZWZhdWx0IGxvb2tcIiwgYXN5bmMgZnVuY3Rpb24oKSB7XG4gICAgICAgIGV5ZXMub3Blbihicm93c2VyLCBcIlhVSVwiLFwiUHJvZ3Jlc3NcIik7XG4gICAgICAgIGV5ZXMuY2hlY2tXaW5kb3coXCJEZWZhdWx0XCIpO1xuXG4gICAgICAgIGF3YWl0IHN0YXJ0QnV0dG9uLmNsaWNrKCk7XG4gICAgICAgIC8vV2FpdGluZyBmb3IgdGhlIHByb2dyZXNzIGJhciB0byBzdG9wIG1vdmluZ1xuICAgICAgICBhd2FpdCBwcm9ncmVzc0F0b20ud2FpdEZvclByb2dyZXNzQmFyVG9Db21wbGV0ZSgxNTAwMCk7XG4gICAgICAgIGV5ZXMuY2hlY2tXaW5kb3coXCJQcm9ncmVzcyBiYXJzIGNvbG9yIHN0YXRlXCIpO1xuXG4gICAgICAgIGF3YWl0IGJpZ1Byb2dyZXNzLmNhbmNlbFByb2dyZXNzKCk7XG4gICAgICAgIGV5ZXMuY2hlY2tXaW5kb3coXCJQcm9ncmVzcyBjYW5jZWxsZWQuIFRoZSBmaXJzdCBwcm9ncmVzcyBjb21wb25lbnQgaXMgbm90IHZpc2libGVcIik7XG4gICAgICAgIFxuICAgICAgICBleWVzLmNsb3NlKCk7XG4gICAgfSk7XG59KTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
