"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const protractor_1 = require("@solarwinds/uzi/protractor");
const uzi_1 = require("@solarwinds/uzi");
class RadioAtom extends uzi_1.Atom {
    constructor() {
        super(...arguments);
        this.isRadioSelected = (radio) => {
            let inputElement = this.getRadioInputElement(radio);
            return inputElement.isSelected();
        };
        this.isRadioEnabled = (radio) => {
            let inputElement = this.getRadioInputElement(radio);
            return inputElement.isEnabled();
        };
        this.getRadioText = (radio) => {
            return radio.getText();
        };
        this.getValue = (radio) => {
            let inputElement = this.getRadioInputElement(radio);
            return inputElement.getAttribute("value");
        };
        this.clickOnRadio = (radio) => {
            // Click on label, not the input element
            return radio.element(protractor_1.by.className("xui-radio-label")).click();
        };
        this.findRadioByName = (radioList, radioName) => {
            return radioList.filter((radio) => {
                return this.getRadioText(radio).then((text) => {
                    return text.toLowerCase() === radioName.toLowerCase();
                });
            }).first();
        };
        this.getRadioInputElement = (radio) => {
            return radio.element(protractor_1.by.className("xui-radio-input"));
        };
    }
}
RadioAtom.CSS_CLASS = "xui-radio";
exports.RadioAtom = RadioAtom;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvcmFkaW8vcmFkaW8uYXRvbS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDJEQUEwRjtBQUMxRix5Q0FBcUM7QUFFckMsZUFBdUIsU0FBUSxVQUFJO0lBQW5DOztRQUdXLG9CQUFlLEdBQUcsQ0FBQyxLQUFvQixFQUE0QixFQUFFO1lBQ3hFLElBQUksWUFBWSxHQUFHLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNwRCxNQUFNLENBQUMsWUFBWSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3JDLENBQUMsQ0FBQztRQUVLLG1CQUFjLEdBQUcsQ0FBQyxLQUFvQixFQUE0QixFQUFFO1lBQ3ZFLElBQUksWUFBWSxHQUFHLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNwRCxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQ3BDLENBQUMsQ0FBQztRQUVLLGlCQUFZLEdBQUcsQ0FBQyxLQUFvQixFQUEyQixFQUFFO1lBQ3BFLE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDM0IsQ0FBQyxDQUFDO1FBRUssYUFBUSxHQUFHLENBQUMsS0FBb0IsRUFBMkIsRUFBRTtZQUNoRSxJQUFJLFlBQVksR0FBRyxJQUFJLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDcEQsTUFBTSxDQUFDLFlBQVksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDOUMsQ0FBQyxDQUFDO1FBRUssaUJBQVksR0FBRyxDQUFDLEtBQW9CLEVBQXlCLEVBQUU7WUFDbEUsd0NBQXdDO1lBQ3hDLE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLGVBQUUsQ0FBQyxTQUFTLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ2xFLENBQUMsQ0FBQztRQUVLLG9CQUFlLEdBQUcsQ0FBQyxTQUE2QixFQUFFLFNBQWlCLEVBQ3BELEVBQUU7WUFDcEIsTUFBTSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxLQUFvQixFQUFFLEVBQUU7Z0JBQzdDLE1BQU0sQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQVksRUFBRSxFQUFFO29CQUNsRCxNQUFNLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxLQUFLLFNBQVMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztnQkFDMUQsQ0FBQyxDQUFDLENBQUM7WUFDUCxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNmLENBQUMsQ0FBQztRQUVNLHlCQUFvQixHQUFHLENBQUMsS0FBb0IsRUFBaUIsRUFBRTtZQUNuRSxNQUFNLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxlQUFFLENBQUMsU0FBUyxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQztRQUMxRCxDQUFDLENBQUM7SUFDTixDQUFDOztBQXRDaUIsbUJBQVMsR0FBRyxXQUFXLENBQUM7QUFEMUMsOEJBdUNDIiwiZmlsZSI6ImNvbXBvbmVudHMvcmFkaW8vcmFkaW8uYXRvbS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7YnksIEVsZW1lbnRBcnJheUZpbmRlciwgRWxlbWVudEZpbmRlciwgcHJvbWlzZX0gZnJvbSBcIkBzb2xhcndpbmRzL3V6aS9wcm90cmFjdG9yXCI7XG5pbXBvcnQge0F0b219IGZyb20gXCJAc29sYXJ3aW5kcy91emlcIjtcblxuZXhwb3J0IGNsYXNzIFJhZGlvQXRvbSBleHRlbmRzIEF0b20ge1xuICAgIHB1YmxpYyBzdGF0aWMgQ1NTX0NMQVNTID0gXCJ4dWktcmFkaW9cIjtcblxuICAgIHB1YmxpYyBpc1JhZGlvU2VsZWN0ZWQgPSAocmFkaW86IEVsZW1lbnRGaW5kZXIpOiBwcm9taXNlLlByb21pc2U8Ym9vbGVhbj4gPT4ge1xuICAgICAgICBsZXQgaW5wdXRFbGVtZW50ID0gdGhpcy5nZXRSYWRpb0lucHV0RWxlbWVudChyYWRpbyk7XG4gICAgICAgIHJldHVybiBpbnB1dEVsZW1lbnQuaXNTZWxlY3RlZCgpO1xuICAgIH07XG5cbiAgICBwdWJsaWMgaXNSYWRpb0VuYWJsZWQgPSAocmFkaW86IEVsZW1lbnRGaW5kZXIpOiBwcm9taXNlLlByb21pc2U8Ym9vbGVhbj4gPT4ge1xuICAgICAgICBsZXQgaW5wdXRFbGVtZW50ID0gdGhpcy5nZXRSYWRpb0lucHV0RWxlbWVudChyYWRpbyk7XG4gICAgICAgIHJldHVybiBpbnB1dEVsZW1lbnQuaXNFbmFibGVkKCk7XG4gICAgfTtcblxuICAgIHB1YmxpYyBnZXRSYWRpb1RleHQgPSAocmFkaW86IEVsZW1lbnRGaW5kZXIpOiBwcm9taXNlLlByb21pc2U8c3RyaW5nPiA9PiB7XG4gICAgICAgIHJldHVybiByYWRpby5nZXRUZXh0KCk7XG4gICAgfTtcblxuICAgIHB1YmxpYyBnZXRWYWx1ZSA9IChyYWRpbzogRWxlbWVudEZpbmRlcik6IHByb21pc2UuUHJvbWlzZTxzdHJpbmc+ID0+IHtcbiAgICAgICAgbGV0IGlucHV0RWxlbWVudCA9IHRoaXMuZ2V0UmFkaW9JbnB1dEVsZW1lbnQocmFkaW8pO1xuICAgICAgICByZXR1cm4gaW5wdXRFbGVtZW50LmdldEF0dHJpYnV0ZShcInZhbHVlXCIpO1xuICAgIH07XG5cbiAgICBwdWJsaWMgY2xpY2tPblJhZGlvID0gKHJhZGlvOiBFbGVtZW50RmluZGVyKTogcHJvbWlzZS5Qcm9taXNlPHZvaWQ+ID0+IHtcbiAgICAgICAgLy8gQ2xpY2sgb24gbGFiZWwsIG5vdCB0aGUgaW5wdXQgZWxlbWVudFxuICAgICAgICByZXR1cm4gcmFkaW8uZWxlbWVudChieS5jbGFzc05hbWUoXCJ4dWktcmFkaW8tbGFiZWxcIikpLmNsaWNrKCk7XG4gICAgfTtcblxuICAgIHB1YmxpYyBmaW5kUmFkaW9CeU5hbWUgPSAocmFkaW9MaXN0OiBFbGVtZW50QXJyYXlGaW5kZXIsIHJhZGlvTmFtZTogc3RyaW5nKTpcbiAgICAgICAgICAgIEVsZW1lbnRGaW5kZXIgPT4ge1xuICAgICAgICByZXR1cm4gcmFkaW9MaXN0LmZpbHRlcigocmFkaW86IEVsZW1lbnRGaW5kZXIpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldFJhZGlvVGV4dChyYWRpbykudGhlbigodGV4dDogc3RyaW5nKSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRleHQudG9Mb3dlckNhc2UoKSA9PT0gcmFkaW9OYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSkuZmlyc3QoKTtcbiAgICB9O1xuXG4gICAgcHJpdmF0ZSBnZXRSYWRpb0lucHV0RWxlbWVudCA9IChyYWRpbzogRWxlbWVudEZpbmRlcik6IEVsZW1lbnRGaW5kZXIgPT4ge1xuICAgICAgICByZXR1cm4gcmFkaW8uZWxlbWVudChieS5jbGFzc05hbWUoXCJ4dWktcmFkaW8taW5wdXRcIikpO1xuICAgIH07XG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
