"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const protractor_1 = require("@solarwinds/uzi/protractor");
const index_atom_1 = require("../index.atom");
const helpers_1 = require("../helpers");
describe("USERCONTROL globalKeys", () => {
    let atom;
    beforeEach(() => {
        helpers_1.default.prepareBrowser("globalKeys");
        atom = new index_atom_1.GlobalKeysAtom(protractor_1.element(protractor_1.by.id("globalKeysTest")));
    });
    it("should toggle xui-reveal class", () => {
        expect(atom.isXuiRevealActive()).toBe(false);
        atom.focus();
        atom.toggleXuiReveal();
        expect(atom.isXuiRevealActive()).toBe(true);
        atom.toggleXuiReveal();
        expect(atom.isXuiRevealActive()).toBe(false);
        atom.toggleXuiReveal();
        expect(atom.isXuiRevealActive()).toBe(true);
    });
    it("should red-outline xui components only", () => {
        atom.focus();
        atom.toggleXuiReveal();
        expect(atom.isXuiRevealActive()).toBe(true);
        let radios = atom.getComponents("xui-radio");
        expect(radios.count()).toBe(2);
        expect(atom.hasRedOutline(radios.get(0))).toBeTruthy();
        const vanillaButton = protractor_1.element(protractor_1.by.id("vanillaButton"));
        expect(vanillaButton).toBeDefined();
        expect(atom.hasRedOutline(vanillaButton)).toBeFalsy();
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvZ2xvYmFsS2V5cy9nbG9iYWxLZXlzLmUyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDJEQUFzRjtBQUN0Riw4Q0FBK0M7QUFFL0Msd0NBQWlDO0FBRWpDLFFBQVEsQ0FBQyx3QkFBd0IsRUFBRSxHQUFHLEVBQUU7SUFDcEMsSUFBSSxJQUFvQixDQUFDO0lBRXpCLFVBQVUsQ0FBQyxHQUFHLEVBQUU7UUFDWixpQkFBTyxDQUFDLGNBQWMsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUNyQyxJQUFJLEdBQUcsSUFBSSwyQkFBYyxDQUFDLG9CQUFPLENBQUMsZUFBRSxDQUFDLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNoRSxDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyxnQ0FBZ0MsRUFBRSxHQUFHLEVBQUU7UUFDdEMsTUFBTSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzdDLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNiLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUN2QixNQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDNUMsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQ3ZCLE1BQU0sQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM3QyxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDdkIsTUFBTSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2hELENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLHdDQUF3QyxFQUFFLEdBQUcsRUFBRTtRQUM5QyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDYixJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDdkIsTUFBTSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRTVDLElBQUksTUFBTSxHQUF1QixJQUFJLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ2pFLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDL0IsTUFBTSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsVUFBVSxFQUFFLENBQUM7UUFFdkQsTUFBTSxhQUFhLEdBQUcsb0JBQU8sQ0FBQyxlQUFFLENBQUMsRUFBRSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUM7UUFDdEQsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDMUQsQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJjb21wb25lbnRzL2dsb2JhbEtleXMvZ2xvYmFsS2V5cy5lMmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50QXJyYXlGaW5kZXIsIGJ5LCBlbGVtZW50LCBwcm9taXNlIH0gZnJvbSBcIkBzb2xhcndpbmRzL3V6aS9wcm90cmFjdG9yXCI7XG5pbXBvcnQgeyBHbG9iYWxLZXlzQXRvbSB9IGZyb20gXCIuLi9pbmRleC5hdG9tXCI7XG5pbXBvcnQgeyBXZWJFbGVtZW50IH0gZnJvbSBcIkBzb2xhcndpbmRzL3V6aS93ZWJkcml2ZXJcIjtcbmltcG9ydCBIZWxwZXJzIGZyb20gXCIuLi9oZWxwZXJzXCI7XG5cbmRlc2NyaWJlKFwiVVNFUkNPTlRST0wgZ2xvYmFsS2V5c1wiLCAoKSA9PiB7XG4gICAgbGV0IGF0b206IEdsb2JhbEtleXNBdG9tO1xuXG4gICAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgICAgIEhlbHBlcnMucHJlcGFyZUJyb3dzZXIoXCJnbG9iYWxLZXlzXCIpO1xuICAgICAgICBhdG9tID0gbmV3IEdsb2JhbEtleXNBdG9tKGVsZW1lbnQoYnkuaWQoXCJnbG9iYWxLZXlzVGVzdFwiKSkpO1xuICAgIH0pO1xuXG4gICAgaXQoXCJzaG91bGQgdG9nZ2xlIHh1aS1yZXZlYWwgY2xhc3NcIiwgKCkgPT4ge1xuICAgICAgICBleHBlY3QoYXRvbS5pc1h1aVJldmVhbEFjdGl2ZSgpKS50b0JlKGZhbHNlKTtcbiAgICAgICAgYXRvbS5mb2N1cygpO1xuICAgICAgICBhdG9tLnRvZ2dsZVh1aVJldmVhbCgpO1xuICAgICAgICBleHBlY3QoYXRvbS5pc1h1aVJldmVhbEFjdGl2ZSgpKS50b0JlKHRydWUpO1xuICAgICAgICBhdG9tLnRvZ2dsZVh1aVJldmVhbCgpO1xuICAgICAgICBleHBlY3QoYXRvbS5pc1h1aVJldmVhbEFjdGl2ZSgpKS50b0JlKGZhbHNlKTtcbiAgICAgICAgYXRvbS50b2dnbGVYdWlSZXZlYWwoKTtcbiAgICAgICAgZXhwZWN0KGF0b20uaXNYdWlSZXZlYWxBY3RpdmUoKSkudG9CZSh0cnVlKTtcbiAgICB9KTtcblxuICAgIGl0KFwic2hvdWxkIHJlZC1vdXRsaW5lIHh1aSBjb21wb25lbnRzIG9ubHlcIiwgKCkgPT4ge1xuICAgICAgICBhdG9tLmZvY3VzKCk7XG4gICAgICAgIGF0b20udG9nZ2xlWHVpUmV2ZWFsKCk7XG4gICAgICAgIGV4cGVjdChhdG9tLmlzWHVpUmV2ZWFsQWN0aXZlKCkpLnRvQmUodHJ1ZSk7XG5cbiAgICAgICAgbGV0IHJhZGlvczogRWxlbWVudEFycmF5RmluZGVyID0gYXRvbS5nZXRDb21wb25lbnRzKFwieHVpLXJhZGlvXCIpO1xuICAgICAgICBleHBlY3QocmFkaW9zLmNvdW50KCkpLnRvQmUoMik7XG4gICAgICAgIGV4cGVjdChhdG9tLmhhc1JlZE91dGxpbmUocmFkaW9zLmdldCgwKSkpLnRvQmVUcnV0aHkoKTtcblxuICAgICAgICBjb25zdCB2YW5pbGxhQnV0dG9uID0gZWxlbWVudChieS5pZChcInZhbmlsbGFCdXR0b25cIikpO1xuICAgICAgICBleHBlY3QodmFuaWxsYUJ1dHRvbikudG9CZURlZmluZWQoKTtcbiAgICAgICAgZXhwZWN0KGF0b20uaGFzUmVkT3V0bGluZSh2YW5pbGxhQnV0dG9uKSkudG9CZUZhbHN5KCk7XG4gICAgfSk7XG59KTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
