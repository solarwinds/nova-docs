"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const protractor = require("@solarwinds/uzi/protractor");
const protractor_1 = require("@solarwinds/uzi/protractor");
const uzi_1 = require("@solarwinds/uzi");
class GlobalKeysAtom extends uzi_1.Atom {
    constructor() {
        super(...arguments);
        this.isXuiRevealActive = () => {
            return super.hasClass("xui-reveal");
        };
        this.focus = () => {
            return super.getElement().click();
        };
        this.toggleXuiReveal = () => {
            return super.getElement()
                .sendKeys(protractor.Key.chord(protractor.Key.CONTROL, protractor.Key.SHIFT, "`"));
        };
        this.getComponents = (name) => {
            return super.getElement().all(protractor_1.by.className(name));
        };
        this.hasRedOutline = (el) => {
            return el.getCssValue("outline-color")
                .then((val) => {
                return val === "rgba(255, 0, 0, 1)";
            });
        };
    }
}
exports.GlobalKeysAtom = GlobalKeysAtom;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvZ2xvYmFsS2V5cy9nbG9iYWxLZXlzLmF0b20udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx5REFBeUQ7QUFDekQsMkRBQTBGO0FBQzFGLHlDQUFxQztBQUVyQyxvQkFBNEIsU0FBUSxVQUFJO0lBQXhDOztRQUNXLHNCQUFpQixHQUFHLEdBQXFCLEVBQUU7WUFDOUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDeEMsQ0FBQyxDQUFDO1FBRUssVUFBSyxHQUFHLEdBQUcsRUFBRTtZQUNoQixNQUFNLENBQUMsS0FBSyxDQUFDLFVBQVUsRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3RDLENBQUMsQ0FBQztRQUVLLG9CQUFlLEdBQUcsR0FBRyxFQUFFO1lBQzFCLE1BQU0sQ0FBQyxLQUFLLENBQUMsVUFBVSxFQUFFO2lCQUNwQixRQUFRLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUMzRixDQUFDLENBQUM7UUFFSyxrQkFBYSxHQUFHLENBQUMsSUFBWSxFQUFzQixFQUFFO1lBQ3hELE1BQU0sQ0FBQyxLQUFLLENBQUMsVUFBVSxFQUFFLENBQUMsR0FBRyxDQUFDLGVBQUUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUN0RCxDQUFDLENBQUM7UUFFSyxrQkFBYSxHQUFHLENBQUMsRUFBaUIsRUFBNEIsRUFBRTtZQUNuRSxNQUFNLENBQUMsRUFBRSxDQUFDLFdBQVcsQ0FBQyxlQUFlLENBQUM7aUJBQ2pDLElBQUksQ0FBQyxDQUFDLEdBQVcsRUFBRSxFQUFFO2dCQUNsQixNQUFNLENBQUMsR0FBRyxLQUFLLG9CQUFvQixDQUFDO1lBQ3hDLENBQUMsQ0FBQyxDQUFDO1FBQ1gsQ0FBQyxDQUFDO0lBQ04sQ0FBQztDQUFBO0FBeEJELHdDQXdCQyIsImZpbGUiOiJjb21wb25lbnRzL2dsb2JhbEtleXMvZ2xvYmFsS2V5cy5hdG9tLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgcHJvdHJhY3RvciBmcm9tIFwiQHNvbGFyd2luZHMvdXppL3Byb3RyYWN0b3JcIjtcbmltcG9ydCB7YnksIEVsZW1lbnRBcnJheUZpbmRlciwgRWxlbWVudEZpbmRlciwgcHJvbWlzZX0gZnJvbSBcIkBzb2xhcndpbmRzL3V6aS9wcm90cmFjdG9yXCI7XG5pbXBvcnQge0F0b219IGZyb20gXCJAc29sYXJ3aW5kcy91emlcIjtcblxuZXhwb3J0IGNsYXNzIEdsb2JhbEtleXNBdG9tIGV4dGVuZHMgQXRvbSB7XG4gICAgcHVibGljIGlzWHVpUmV2ZWFsQWN0aXZlID0gKCk6IFByb21pc2U8Ym9vbGVhbj4gPT4ge1xuICAgICAgICByZXR1cm4gc3VwZXIuaGFzQ2xhc3MoXCJ4dWktcmV2ZWFsXCIpO1xuICAgIH07XG5cbiAgICBwdWJsaWMgZm9jdXMgPSAoKSA9PiB7XG4gICAgICAgIHJldHVybiBzdXBlci5nZXRFbGVtZW50KCkuY2xpY2soKTtcbiAgICB9O1xuXG4gICAgcHVibGljIHRvZ2dsZVh1aVJldmVhbCA9ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIHN1cGVyLmdldEVsZW1lbnQoKVxuICAgICAgICAgICAgLnNlbmRLZXlzKHByb3RyYWN0b3IuS2V5LmNob3JkKHByb3RyYWN0b3IuS2V5LkNPTlRST0wsIHByb3RyYWN0b3IuS2V5LlNISUZULCBcImBcIikpO1xuICAgIH07XG5cbiAgICBwdWJsaWMgZ2V0Q29tcG9uZW50cyA9IChuYW1lOiBzdHJpbmcpOiBFbGVtZW50QXJyYXlGaW5kZXIgPT4ge1xuICAgICAgICByZXR1cm4gc3VwZXIuZ2V0RWxlbWVudCgpLmFsbChieS5jbGFzc05hbWUobmFtZSkpO1xuICAgIH07XG5cbiAgICBwdWJsaWMgaGFzUmVkT3V0bGluZSA9IChlbDogRWxlbWVudEZpbmRlcik6IHByb21pc2UuUHJvbWlzZTxib29sZWFuPiA9PiB7XG4gICAgICAgIHJldHVybiBlbC5nZXRDc3NWYWx1ZShcIm91dGxpbmUtY29sb3JcIilcbiAgICAgICAgICAgIC50aGVuKCh2YWw6IHN0cmluZykgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiB2YWwgPT09IFwicmdiYSgyNTUsIDAsIDAsIDEpXCI7XG4gICAgICAgICAgICB9KTtcbiAgICB9O1xufVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
