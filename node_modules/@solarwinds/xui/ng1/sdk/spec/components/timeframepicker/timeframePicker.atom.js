"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const protractor_1 = require("@solarwinds/uzi/protractor");
const uzi_1 = require("@solarwinds/uzi");
const index_atom_1 = require("../index.atom");
class TimeframePickerAtom extends uzi_1.Atom {
    getPopoverAtom() {
        return index_atom_1.PopoverAtom.findIn(index_atom_1.PopoverAtom, super.getElement());
    }
    ;
    getStartDatetimePicker() {
        return this.getPopoverAtom().getPopover().then((popover) => {
            return index_atom_1.DatetimePickerAtom.findIn(index_atom_1.DatetimePickerAtom, popover.element(protractor_1.by.className("xui-timeframe-picker__start-datetime-picker")));
        });
    }
    ;
    getEndDatetimePicker() {
        return this.getPopoverAtom().getPopover().then((popover) => {
            return index_atom_1.DatetimePickerAtom.findIn(index_atom_1.DatetimePickerAtom, popover.element(protractor_1.by.className("xui-timeframe-picker__end-datetime-picker")));
        });
    }
    ;
    setStartDate(date) {
        this.open();
        return this.getStartDatetimePicker().then((picker) => {
            picker.getDatePicker().clearText();
            picker.getDatePicker().acceptText(date);
            picker.getDatePicker().clickCalendarIcon();
        });
    }
    ;
    setStartTime(time) {
        return this.open()
            .then(() => this.getStartDatetimePicker())
            .then((picker) => {
            return picker.getTimePicker().acceptText(time);
        });
    }
    ;
    setEndDate(date) {
        this.open();
        return this.getEndDatetimePicker().then((picker) => {
            picker.getDatePicker().clearText();
            picker.getDatePicker().acceptText(date);
            picker.getDatePicker().clickCalendarIcon();
        });
    }
    ;
    setEndTime(time) {
        this.open();
        return this.getEndDatetimePicker().then((picker) => {
            return picker.getTimePicker().acceptText(time);
        });
    }
    ;
    getLinkElement() {
        return this.getElement().element(protractor_1.by.className("xui-timeframe-picker__link"));
    }
    ;
    isOpened() {
        return this.getPopoverAtom().getPopover().then((popover) => {
            return popover.isDisplayed();
        });
    }
    ;
    selectPresetByTitle(title) {
        this.getLinkElement().click();
        return this.getPopoverAtom().getPopover().then((popover) => {
            return popover.all(protractor_1.by.className("xui-timeframe-picker__preset"))
                .filter((elem) => {
                return elem.getText().then(function (text) {
                    return text === title;
                });
            })
                .get(0).click();
        });
    }
    ;
    open() {
        return this.isOpened().then((opened) => {
            if (!opened) {
                this.getLinkElement().click();
            }
        });
    }
    ;
    close() {
        return this.isOpened().then((opened) => {
            if (opened) {
                this.getLinkElement().click();
            }
        });
    }
    ;
    getSelectedPreset() {
        return this.open().then(() => {
            return this.getPopoverAtom().getPopover().then((popover) => {
                let selectedPreset = popover.element(protractor_1.by.className("xui-timeframe-picker__preset--selected"));
                let selectedPresetName = selectedPreset.isPresent().then((preset) => {
                    if (!preset) {
                        return null;
                    }
                    else {
                        return selectedPreset.getText();
                    }
                });
                return selectedPresetName;
            });
        });
    }
    ;
    isConfirmationPanelShown() {
        return this.getPopoverAtom().getPopover().then((popover) => {
            const confirmationPanelElement = popover.element(protractor_1.by.className("xui-timeframe-picker__confirmation-panel"));
            return confirmationPanelElement.isPresent().then((present) => {
                return present ? confirmationPanelElement.isDisplayed() : false;
            });
        });
    }
    ;
    clickUseButton() {
        this.getPopoverAtom().getPopover().then((popover) => {
            popover.element(protractor_1.by.className("xui-timeframe-picker__confirm-button")).click();
        });
    }
    ;
    clickCancelButton() {
        return this.getPopoverAtom().getPopover().then((popover) => {
            return popover.element(protractor_1.by.className("xui-timeframe-picker__cancel-button")).click();
        });
    }
    ;
    clickOnDateStartDTP(day) {
        this.open();
        return this.getStartDatetimePicker().then((dateTimePicker) => {
            let datePicker = dateTimePicker.getDatePicker();
            datePicker.clickInput();
            datePicker.selectDay(day);
            this.clickUseButton();
        });
    }
    clickOnDateEndDTP(day) {
        this.open();
        return this.getEndDatetimePicker().then((dateTimePicker) => {
            let datePicker = dateTimePicker.getDatePicker();
            datePicker.clickInput();
            datePicker.selectDay(day);
            this.clickUseButton();
        });
    }
}
TimeframePickerAtom.CSS_CLASS = "xui-timeframe-picker";
exports.TimeframePickerAtom = TimeframePickerAtom;

//# sourceMappingURL=data:application/json;base64,
