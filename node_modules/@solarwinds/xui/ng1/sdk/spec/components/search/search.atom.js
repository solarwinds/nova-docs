"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const protractor_1 = require("@solarwinds/uzi/protractor");
const uzi_1 = require("@solarwinds/uzi");
const index_atom_1 = require("../index.atom");
class SearchAtom extends uzi_1.Atom {
    constructor() {
        super(...arguments);
        this.getValueAttr = () => {
            return super.getElement().element(protractor_1.by.tagName("input")).getAttribute("value");
        };
        this.acceptInput = (input) => {
            return super.getElement().element(protractor_1.by.tagName("input")).sendKeys(input);
        };
        this.areSuggestionsDisplayed = () => {
            return this.getDropdown().isDisplayed();
        };
        this.getSuggestions = () => {
            return this.getDropdown().all(protractor_1.by.css("li"));
        };
        this.getSuggestion = (index) => {
            return this.getDropdown().all(protractor_1.by.css("li")).get(index);
        };
        this.getSuggestionLinks = () => {
            return this.getDropdown().all(protractor_1.by.css("li a"));
        };
        this.getSuggestionLink = (index) => {
            return this.getSuggestionLinks().get(index);
        };
        this.isBusy = () => {
            return this.getElement().element(protractor_1.by.css(".xui-search__input.xui-search--busy")).isPresent();
        };
        this.isActive = () => {
            return this.getElement().element(protractor_1.by.css(".xui-search__input.xui-search--active")).isPresent();
        };
        this.getSpinner = () => {
            return new index_atom_1.SpinnerAtom(this.getElement().element(protractor_1.by.className("xui-search__input-spinner")));
        };
        this.getSearchButton = () => {
            return uzi_1.Atom.findIn(index_atom_1.ButtonAtom, this.getElement().element(protractor_1.by.className("xui-search__button")));
        };
        this.getCancelButton = () => {
            return new index_atom_1.ButtonAtom(this.getElement().element(protractor_1.by.className("xui-search__input-cancel")));
        };
        this.getDropdown = () => {
            return super.getElement().element(protractor_1.by.css("ul.dropdown-menu"));
        };
    }
}
SearchAtom.CSS_CLASS = "xui-search";
exports.SearchAtom = SearchAtom;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvc2VhcmNoL3NlYXJjaC5hdG9tLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMkRBQTBGO0FBQzFGLHlDQUFxQztBQUNyQyw4Q0FBc0Q7QUFFdEQsZ0JBQXdCLFNBQVEsVUFBSTtJQUFwQzs7UUFHVyxpQkFBWSxHQUFHLEdBQTRCLEVBQUU7WUFDaEQsTUFBTSxDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQUUsQ0FBQyxPQUFPLENBQUMsZUFBRSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNqRixDQUFDLENBQUM7UUFFSyxnQkFBVyxHQUFHLENBQUMsS0FBYSxFQUFFLEVBQUU7WUFDbkMsTUFBTSxDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQUUsQ0FBQyxPQUFPLENBQUMsZUFBRSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMzRSxDQUFDLENBQUM7UUFFSyw0QkFBdUIsR0FBRyxHQUE2QixFQUFFO1lBQzVELE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDNUMsQ0FBQyxDQUFDO1FBRUssbUJBQWMsR0FBRyxHQUF1QixFQUFFO1lBQzdDLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUMsR0FBRyxDQUFDLGVBQUUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNoRCxDQUFDLENBQUM7UUFFSyxrQkFBYSxHQUFHLENBQUMsS0FBYSxFQUFpQixFQUFFO1lBQ3BELE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUMsR0FBRyxDQUFDLGVBQUUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDM0QsQ0FBQyxDQUFDO1FBRUssdUJBQWtCLEdBQUcsR0FBdUIsRUFBRTtZQUNqRCxNQUFNLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxlQUFFLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDbEQsQ0FBQyxDQUFDO1FBRUssc0JBQWlCLEdBQUcsQ0FBQyxLQUFhLEVBQWlCLEVBQUU7WUFDeEQsTUFBTSxDQUFDLElBQUksQ0FBQyxrQkFBa0IsRUFBRSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNoRCxDQUFDLENBQUM7UUFFSyxXQUFNLEdBQUcsR0FBRyxFQUFFO1lBQ2pCLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUMsT0FBTyxDQUFDLGVBQUUsQ0FBQyxHQUFHLENBQUMscUNBQXFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQ2hHLENBQUMsQ0FBQztRQUVLLGFBQVEsR0FBRyxHQUFHLEVBQUU7WUFDbkIsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQyxPQUFPLENBQUMsZUFBRSxDQUFDLEdBQUcsQ0FBQyx1Q0FBdUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDbEcsQ0FBQyxDQUFDO1FBRUssZUFBVSxHQUFHLEdBQWdCLEVBQUU7WUFDbEMsTUFBTSxDQUFDLElBQUksd0JBQVcsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUMsT0FBTyxDQUFDLGVBQUUsQ0FBQyxTQUFTLENBQUMsMkJBQTJCLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDakcsQ0FBQyxDQUFDO1FBRUssb0JBQWUsR0FBRyxHQUFlLEVBQUU7WUFDdEMsTUFBTSxDQUFDLFVBQUksQ0FBQyxNQUFNLENBQUMsdUJBQVUsRUFBRSxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUMsT0FBTyxDQUFDLGVBQUUsQ0FBQyxTQUFTLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbEcsQ0FBQyxDQUFDO1FBRUssb0JBQWUsR0FBRyxHQUFlLEVBQUU7WUFDdEMsTUFBTSxDQUFDLElBQUksdUJBQVUsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUMsT0FBTyxDQUFDLGVBQUUsQ0FBQyxTQUFTLENBQUMsMEJBQTBCLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDL0YsQ0FBQyxDQUFDO1FBRU0sZ0JBQVcsR0FBRyxHQUFrQixFQUFFO1lBQ3RDLE1BQU0sQ0FBQyxLQUFLLENBQUMsVUFBVSxFQUFFLENBQUMsT0FBTyxDQUFDLGVBQUUsQ0FBQyxHQUFHLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDO1FBQ2xFLENBQUMsQ0FBQztJQUNOLENBQUM7O0FBckRpQixvQkFBUyxHQUFHLFlBQVksQ0FBQztBQUQzQyxnQ0FzREMiLCJmaWxlIjoiY29tcG9uZW50cy9zZWFyY2gvc2VhcmNoLmF0b20uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2J5LCBFbGVtZW50QXJyYXlGaW5kZXIsIEVsZW1lbnRGaW5kZXIsIHByb21pc2V9IGZyb20gXCJAc29sYXJ3aW5kcy91emkvcHJvdHJhY3RvclwiO1xuaW1wb3J0IHtBdG9tfSBmcm9tIFwiQHNvbGFyd2luZHMvdXppXCI7XG5pbXBvcnQge0J1dHRvbkF0b20sIFNwaW5uZXJBdG9tfSBmcm9tIFwiLi4vaW5kZXguYXRvbVwiO1xuXG5leHBvcnQgY2xhc3MgU2VhcmNoQXRvbSBleHRlbmRzIEF0b20ge1xuICAgIHB1YmxpYyBzdGF0aWMgQ1NTX0NMQVNTID0gXCJ4dWktc2VhcmNoXCI7XG5cbiAgICBwdWJsaWMgZ2V0VmFsdWVBdHRyID0gKCk6IHByb21pc2UuUHJvbWlzZTxzdHJpbmc+ID0+IHtcbiAgICAgICAgcmV0dXJuIHN1cGVyLmdldEVsZW1lbnQoKS5lbGVtZW50KGJ5LnRhZ05hbWUoXCJpbnB1dFwiKSkuZ2V0QXR0cmlidXRlKFwidmFsdWVcIik7XG4gICAgfTtcblxuICAgIHB1YmxpYyBhY2NlcHRJbnB1dCA9IChpbnB1dDogc3RyaW5nKSA9PiB7XG4gICAgICAgIHJldHVybiBzdXBlci5nZXRFbGVtZW50KCkuZWxlbWVudChieS50YWdOYW1lKFwiaW5wdXRcIikpLnNlbmRLZXlzKGlucHV0KTtcbiAgICB9O1xuXG4gICAgcHVibGljIGFyZVN1Z2dlc3Rpb25zRGlzcGxheWVkID0gKCk6IHByb21pc2UuUHJvbWlzZTxib29sZWFuPiA9PiB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldERyb3Bkb3duKCkuaXNEaXNwbGF5ZWQoKTtcbiAgICB9O1xuXG4gICAgcHVibGljIGdldFN1Z2dlc3Rpb25zID0gKCk6IEVsZW1lbnRBcnJheUZpbmRlciA9PiB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldERyb3Bkb3duKCkuYWxsKGJ5LmNzcyhcImxpXCIpKTtcbiAgICB9O1xuXG4gICAgcHVibGljIGdldFN1Z2dlc3Rpb24gPSAoaW5kZXg6IG51bWJlcik6IEVsZW1lbnRGaW5kZXIgPT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXREcm9wZG93bigpLmFsbChieS5jc3MoXCJsaVwiKSkuZ2V0KGluZGV4KTtcbiAgICB9O1xuXG4gICAgcHVibGljIGdldFN1Z2dlc3Rpb25MaW5rcyA9ICgpOiBFbGVtZW50QXJyYXlGaW5kZXIgPT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXREcm9wZG93bigpLmFsbChieS5jc3MoXCJsaSBhXCIpKTtcbiAgICB9O1xuXG4gICAgcHVibGljIGdldFN1Z2dlc3Rpb25MaW5rID0gKGluZGV4OiBudW1iZXIpOiBFbGVtZW50RmluZGVyID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0U3VnZ2VzdGlvbkxpbmtzKCkuZ2V0KGluZGV4KTtcbiAgICB9O1xuXG4gICAgcHVibGljIGlzQnVzeSA9ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0RWxlbWVudCgpLmVsZW1lbnQoYnkuY3NzKFwiLnh1aS1zZWFyY2hfX2lucHV0Lnh1aS1zZWFyY2gtLWJ1c3lcIikpLmlzUHJlc2VudCgpO1xuICAgIH07XG5cbiAgICBwdWJsaWMgaXNBY3RpdmUgPSAoKSA9PiB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldEVsZW1lbnQoKS5lbGVtZW50KGJ5LmNzcyhcIi54dWktc2VhcmNoX19pbnB1dC54dWktc2VhcmNoLS1hY3RpdmVcIikpLmlzUHJlc2VudCgpO1xuICAgIH07XG5cbiAgICBwdWJsaWMgZ2V0U3Bpbm5lciA9ICgpOiBTcGlubmVyQXRvbSA9PiB7XG4gICAgICAgIHJldHVybiBuZXcgU3Bpbm5lckF0b20odGhpcy5nZXRFbGVtZW50KCkuZWxlbWVudChieS5jbGFzc05hbWUoXCJ4dWktc2VhcmNoX19pbnB1dC1zcGlubmVyXCIpKSk7XG4gICAgfTtcblxuICAgIHB1YmxpYyBnZXRTZWFyY2hCdXR0b24gPSAoKTogQnV0dG9uQXRvbSA9PiB7XG4gICAgICAgIHJldHVybiBBdG9tLmZpbmRJbihCdXR0b25BdG9tLCB0aGlzLmdldEVsZW1lbnQoKS5lbGVtZW50KGJ5LmNsYXNzTmFtZShcInh1aS1zZWFyY2hfX2J1dHRvblwiKSkpO1xuICAgIH07XG5cbiAgICBwdWJsaWMgZ2V0Q2FuY2VsQnV0dG9uID0gKCk6IEJ1dHRvbkF0b20gPT4ge1xuICAgICAgICByZXR1cm4gbmV3IEJ1dHRvbkF0b20odGhpcy5nZXRFbGVtZW50KCkuZWxlbWVudChieS5jbGFzc05hbWUoXCJ4dWktc2VhcmNoX19pbnB1dC1jYW5jZWxcIikpKTtcbiAgICB9O1xuXG4gICAgcHJpdmF0ZSBnZXREcm9wZG93biA9ICgpOiBFbGVtZW50RmluZGVyID0+IHtcbiAgICAgICAgcmV0dXJuIHN1cGVyLmdldEVsZW1lbnQoKS5lbGVtZW50KGJ5LmNzcyhcInVsLmRyb3Bkb3duLW1lbnVcIikpO1xuICAgIH07XG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
