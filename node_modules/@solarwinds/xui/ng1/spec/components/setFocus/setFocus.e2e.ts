import {browser, by, element, ElementFinder, promise} from "@solarwinds/uzi/protractor";
import Helpers from "../helpers";

describe("USERCONTROL setFocus:", () => {
    let carrotField: ElementFinder;
    let onionField: ElementFinder;
    let carrotButton: ElementFinder;
    let onionButton: ElementFinder;

    beforeEach(() => {
        Helpers.prepareBrowser("setFocus");
        carrotField = element(by.id("carrotRadio")).element(by.tagName("input"));
        onionField = element(by.id("onionRadio")).element(by.tagName("input"));

        //we can't do a simple by.id selector here, because webdriver extends the id field
        carrotButton = element(by.css("[id*='carrotButton']"));
        onionButton = element(by.css("[id*='onionButton']"));
    });

    it("clicking button will set focus", () => {
        //ensure its not the selected item
        expectIsNotSelected(carrotField);
        carrotButton.click();
        expectIsSelected(carrotField);
    });

    it("clicking buttons will change focus", () => {
        carrotButton.click();
        expectIsSelected(carrotField);
        expectIsNotSelected(onionField);
        onionButton.click();
        expectIsNotSelected(carrotField);
        expectIsSelected(onionField);
    });

    function expectIsSelected(finder: ElementFinder) {
        expect(finder.getId()).toEqual(browser.driver.switchTo().activeElement().getId());
    }

    function expectIsNotSelected(finder: ElementFinder) {
        expect(finder.getId()).not.toEqual(browser.driver.switchTo().activeElement().getId());
    }
});
