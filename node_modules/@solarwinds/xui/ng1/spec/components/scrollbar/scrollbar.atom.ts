import {browser, by, ElementFinder, promise} from "@solarwinds/uzi/protractor";
import {ILocation} from "@solarwinds/uzi/webdriver";
import {Atom, IAtomClass} from "@solarwinds/uzi";

export class ScrollbarAtom extends Atom {
    public static findIn<T extends Atom>(atomClass: IAtomClass<T>,
                                         parentElement: ElementFinder, index?: number): T {
        if (!parentElement) {
            parentElement = browser.element(by.xpath("/"));
        }
        let componentRootElement: ElementFinder;
        if (index !== undefined) {
            componentRootElement = parentElement.all(by.css("[xui-scrollbar]")).get(index);
        } else {
            componentRootElement = parentElement.element(by.css("[xui-scrollbar]"));
        }
        return new atomClass(componentRootElement);
    }

    public hasScrollbar = (element?: ElementFinder): promise.Promise<boolean> => {
        return element.getAttribute("clientHeight").then((clientHeight: string) => {
            return element.getAttribute("scrollHeight").then((scrollHeight: string) => {
                return parseInt(scrollHeight, 10) > parseInt(clientHeight, 10);
            });
        });
    };

    public scroll = (scrollbar: ElementFinder, delta: ILocation): promise.Promise<void> => {
        return scrollbar.getLocation().then((location: ILocation) => {
            return browser.actions()
                .dragAndDrop(scrollbar.getWebElement(), {x: location.x + delta.x, y: location.y + delta.y})
                .perform();
        });
    };

    public scrollToElement = (target: ElementFinder): promise.Promise<any> => {
        return browser.executeScript("arguments[0].scrollIntoView();", target.getWebElement());
    };

    private getScrollbarElement = (selector: string): ElementFinder => {
        return super.getElement().element(by.css(selector));
    };

    private isTransparent = (color: string): boolean => {
        return color === "rgba(0, 0, 0, 0)";
    };
}
