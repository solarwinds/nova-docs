import {browser, by, element, promise} from "@solarwinds/uzi/protractor";
import Helpers from "../helpers";
import {MessageAtom} from "../index.atom";
import {Atom} from "@solarwinds/uzi";

describe("USERCONTROL Message", () => {
    let atom: MessageAtom;
    let atom2: MessageAtom;

    beforeEach(() => {
        Helpers.prepareBrowser("message");
        atom = Atom.find(MessageAtom, "testElement");
        atom2 = Atom.find(MessageAtom, "testElement2");
    });

    describe("Attribute section:", () => {
        it("should have type class based on 'type' attribute", () => {
            expect(atom.hasClass("xui-message-info")).toBe(true);
        });

        it("should show dismiss button when specified", function () {
            expect(atom.isDismissable()).toBe(true);
            expect(atom2.isDismissable()).toEqual(false);
        });

        // Known isPresent bug in old protractor we use:
        // https://github.com/angular/protractor/issues/2277#issuecomment-232747575
        xit("should hide when dismissed", () => {
            expect(atom.isVisible()).toEqual(true);
            atom.dismissMessage();
            browser.wait(() => {
                return atom.isVisible().then((result) => {
                    return result === false;
                });
            }, 5000);
            expect(atom.isVisible()).toEqual(false);
        });

        it("should call onDismiss() when dismissed", () => {
            atom.dismissMessage();
            expect(element(by.className("dismiss-clicked")).isPresent()).toBe(true);
        });
    });

    describe("Content section:", () => {
        it("content should be transcluded", () => {
            expect(atom.getContent()).toEqual("CONTENT");
        });
    });
});
