import {by, ElementArrayFinder, ElementFinder, promise} from "@solarwinds/uzi/protractor";
import {Atom} from "@solarwinds/uzi";

export class TabsAtom extends Atom {
    public static CSS_CLASS = "xui-tabs";

    public tabCount = (): promise.Promise<number> => {
        return this.tabs().count();
    };

    public getTabTitle = (index: number): promise.Promise<string> => {
        return this.tabs().get(index).element(by.css("a")).getText();
    };

    public isTabSelected = (index: number): promise.Promise<boolean> => {
        return this.tabs().get(index)
            .getAttribute("class")
            .then((css: string) => {
                return css.search("xui-tab") !== -1 && css.search("active") !== -1;
            });
    };

    public getContent = (index: number): ElementFinder => {
        return super.getElement().all(by.css(".xui-tabs__content")).get(index);
    };

    public getRouterView = (): ElementFinder => {
        return super.getElement().element(by.css(".xui-tabs-router-view"));
    };

    public click = (index: number): promise.Promise<void> => {
        return this.tabs().get(index).click();
    };

    public getLeftCaret(): ElementFinder {
        return super.getElement().element(by.css(".xui-tabs__header-caret--left"));
    }

    public getRightCaret(): ElementFinder {
        return super.getElement().element(by.css(".xui-tabs__header-caret--right"));
    }

    public getTabsSlidingPanel(): ElementFinder {
        return super.getElement().element(by.css(".nav"));
    }

    public getTranslateX(elem: ElementFinder):promise.Promise<Number> {
        //expression for analyzing css transform property value, extracts translateX value
        const transXExp = /^matrix\((?:-?\d+, ){4}-?(\d+), -?\d+\)$/;

        return elem.getCssValue("transform").then((transform) => {
            if (transXExp.test(transform)) {
                return +transXExp.exec(transform)[1];
            } else {
                return 0;
            }
        });
    }

    private tabs = (): ElementArrayFinder => {
        return super.getElement().all(by.css(".nav.nav-pills li"));
    };
}
