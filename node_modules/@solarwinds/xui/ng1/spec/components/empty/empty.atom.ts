import {browser, by, ElementFinder, promise} from "@solarwinds/uzi/protractor";
import {Atom} from "@solarwinds/uzi";

export class EmptyAtom extends Atom {
    public static CSS_CLASS = "xui-empty";

    public getTitle(): promise.Promise<string> {
        return this.getEmptyElement("title").getText();
    }

    public getDescription(): promise.Promise<string> {
        return this.getEmptyElement("description").getText();
    }

    public getImage(): promise.Promise<string> {
        return this.getEmptyElement("image").getAttribute("image");
    };

    public isDefaultTemplateRendered(): promise.Promise<boolean> {
        return super.getElement().isPresent();
    }

    public isCustomTemplateRendered(): promise.Promise<boolean> {
        return browser.element(by.className("sample-custom-template")).isPresent();
    }

    public isCompactModeEnabled(): Promise<boolean> {
        return super.hasClass("xui-empty-compact-mode");
    }

    public hasTitle(): promise.Promise<boolean> {
        return this.getEmptyElement("title").isPresent();
    }

    public getCustomTemplateBoundValueText(): promise.Promise<string> {
        return browser.element(by.className("sample-custom-template_bound-value")).getText();
    }

    private getEmptyElement(property: string): ElementFinder {
        return super.getElement()
            .element(by.className(`${EmptyAtom.CSS_CLASS}_${property}`));
    }
}
