import { browser, by, promise } from "@solarwinds/uzi/protractor";
import { Atom } from "@solarwinds/uzi";
import { ActionDrawerAtom } from "./actionDrawer.atom";
import Helpers from "../helpers";
import * as _ from "lodash";

describe("USERCONTROL action drawer", () => {

    beforeEach(() => {
        Helpers.prepareBrowser("actionDrawer");
    });

    const defaultActionDrawer = Atom.find(ActionDrawerAtom, "defaultActionDrawer");
    const rightDirectionActionDrawer = Atom.find(ActionDrawerAtom, "rightDirectionActionDrawer");

    it("should show slide effect on hover/check correct text", () => {
        defaultActionDrawer.moveMouseToTarget(defaultActionDrawer);
        defaultActionDrawer.moveMouseToMenuIcon("mute");
        expect(defaultActionDrawer.getTooltipAttribute("content"))
            .toBe(defaultActionDrawer.getMenuIconAttribute("mute", "tool-tip"));
    });

    it("should have left direction menu", () => {
        expect(defaultActionDrawer.getMenuDirection()).toBe("matrix(1, 0, 0, 1, 0, 0)");
        defaultActionDrawer.moveMouseToTarget(defaultActionDrawer);
        expect(defaultActionDrawer.getMenuDirection()).toBe("matrix(1, 0, 0, 1, -90, 0)");
    });

    it("should have right direction menu", () => {
        expect(rightDirectionActionDrawer.getMenuDirection()).toBe("matrix(1, 0, 0, 1, 0, 0)");
        rightDirectionActionDrawer.moveMouseToTarget(rightDirectionActionDrawer);
        expect(rightDirectionActionDrawer.getMenuDirection()).toBe("matrix(1, 0, 0, 1, 90, 0)");
    });

    it("should trigger method action on click", () => {
        defaultActionDrawer.moveMouseToTarget(defaultActionDrawer);
        defaultActionDrawer.clickMenuIcon("mute");
        defaultActionDrawer.getToastContainer()
            .then(isVisible => !_.isEqual(isVisible, "true"));
        expect(defaultActionDrawer.getToastContainer()).toBe(true);
        defaultActionDrawer.getToastContainer()
            .then(isVisible => !_.isEqual(isVisible, "true"));
        defaultActionDrawer.clickMenuIcon("acknowledge");
        expect(defaultActionDrawer.getToastContainer()).toBe(true);
        defaultActionDrawer.getToastContainer()
            .then(isVisible => !_.isEqual(isVisible, "true"));
        defaultActionDrawer.clickMenuIcon("sound-3");
        expect(defaultActionDrawer.getToastContainer()).toBe(true);
    });
});
