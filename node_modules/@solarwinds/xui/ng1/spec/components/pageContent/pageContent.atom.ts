import {by, ElementFinder, promise} from "@solarwinds/uzi/protractor";
import {Atom} from "@solarwinds/uzi";
import {BusyAtom, ScrollbarAtom} from "../index.atom";

export class PageContentAtom extends Atom {
    public static CSS_CLASS = "xui-page-content";

    public getTitle = () => {
        return super.getElement().element(by.className("xui-page-content__header-title")).getText();
    };

    public isIconDisplayed = (iconName: string) => {
        return super.getElement().all(by.css(".xui-page-content__header-link i")).get(0)
            .getAttribute("icon")
            .then((attrVal: string) => {
                return attrVal === iconName;
            });
    };

    public getLink = () => {
        return super.getElement().all(by.css(".xui-page-content__header-link a")).get(0);
    };

    public getLinkText = () => {
        return this.getLink().getText();
    };

    public getLinkUrl = () => {
        return this.getLink().getAttribute("href");
    };

    public getLinkTarget = () => {
        return this.getLink().getAttribute("target");
    };

    public isBusyIndicatorDisplayed = (elId: string) => {
        return Atom.find(BusyAtom, elId).isDisplayed();
    };

    public getBusyMessage = () => {
        const busy = Atom.findIn(BusyAtom, super.getElement());
        return busy.getProgress().getMessage();
    };

    public getHeader = () => {
        return super.getElement().element(by.css("[ng-transclude='header']"));
    };

    public isDefaultHeader = (): promise.Promise<boolean> => {
        return this.getHeader()
            .element(by.className("xui-page-content__header"))
            .isPresent()
            .then((isPresent: boolean) => isPresent);
    };

    public getFooter = (elId: string): ElementFinder => {
        return super.getElement()
            .element(by.css("[ng-transclude='header']"))
            .element(by.id(elId));
    };

    public getBreadcrumbs = () => {
        return super.getElement().element(by.css("[ng-transclude='breadcrumbs']"));
    };

    public isBodyScrollable = (): promise.Promise<boolean> => {
        const body = super.getElement().element(by.className("xui-page-content__body"));
        const scrollbarAtom = Atom.findIn(ScrollbarAtom, body);
        return scrollbarAtom.hasScrollbar(body);
    };
}
