import {browser, promise} from "@solarwinds/uzi/protractor";
import {ExpanderAtom} from "../index.atom";
import Helpers from "../helpers";
import {Atom} from "@solarwinds/uzi";

describe("USERCONTROL expander", () => {

    let buffyExpander: ExpanderAtom;
    let solarwindsExpander: ExpanderAtom;
    let utWinsExpander: ExpanderAtom;

    beforeEach(() => {
        Helpers.prepareBrowser("expander");
        buffyExpander = Atom.find(ExpanderAtom, "buffyExpander");
        solarwindsExpander = Atom.find(ExpanderAtom, "solarwindsExpander");
        utWinsExpander = Atom.find(ExpanderAtom, "utWinsExpander");
    });

    it("should exist", () => {
        expect(buffyExpander).toBeDefined();
        expect(solarwindsExpander).toBeDefined();
        expect(utWinsExpander).toBeDefined();
    });

    it("should correctly default expanded/collapsed", () => {
        expect(buffyExpander.isExpanded()).toBe(true);
        expect(solarwindsExpander.isExpanded()).toBe(false);
        expect(utWinsExpander.isExpanded()).toBe(false);
    });

    it("should toggle expanded/collapsed", () => {
        expect(buffyExpander.isExpanded()).toBe(true);
        buffyExpander.toggle();
        expect(buffyExpander.isExpanded()).toBe(false);

        expect(solarwindsExpander.isExpanded()).toBe(false);
        solarwindsExpander.toggle();
        browser.wait(() => solarwindsExpander.isExpanded(), 5000);
        expect(solarwindsExpander.isExpanded()).toBe(true);
    });

    it("should display content when expanded", () => {
        expect(buffyExpander.isExpanded()).toBe(true);
        expect(buffyExpander.isContentDisplayed()).toBe(true);
        buffyExpander.toggle();
        expect(buffyExpander.isExpanded()).toBe(false);
        expect(buffyExpander.isContentDisplayed()).toBe(false);
    });

    it("should remove the content from DOM when collapsed", () => {
        expect(solarwindsExpander.isExpanded()).toBe(false);
        expect(solarwindsExpander.isContentAttachedToDOM()).toBe(false);
    });

    it("should transclude the heading", () => {
        expect(buffyExpander.getHeadingText()).toBe("Click Me!");
        expect(solarwindsExpander.getHeadingText())
            .toBe("Heading with xui-radio\nand link\n100\nAND EVEN SMALL BUTTON");
    });
});
