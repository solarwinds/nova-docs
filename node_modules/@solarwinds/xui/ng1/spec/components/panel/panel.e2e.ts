import {browser, by, element, promise} from "@solarwinds/uzi/protractor";
import Helpers from "../helpers";
import {CheckboxAtom, PanelAtom} from "../index.atom";
import {Atom} from "@solarwinds/uzi";

describe("USERCONTROL Panel", () => {
    let firstPanel: PanelAtom;
    let secondPanel: PanelAtom;
    let expandCheckbox: CheckboxAtom;
    let collapseCheckbox: CheckboxAtom;

    beforeEach(() => {
        Helpers.prepareBrowser("panel");
        const page = element(by.id("xui-demo-components-panel"));
        firstPanel = Atom.findIn(PanelAtom, page, 0);
        secondPanel = Atom.findIn(PanelAtom, page, 1);
        expandCheckbox = Atom.findIn(CheckboxAtom, page, 0);
        collapseCheckbox = Atom.findIn(CheckboxAtom, page, 1);
    });

    it("Should be clickable icon inside", () => {
        let headerIcon = firstPanel.icon();
        expect(headerIcon.isDisplayed()).toBeTruthy();
        headerIcon.click();
        expect(headerIcon.isEnabled()).toBeTruthy();
    });

    it("Should toggle panel css class upon icon click ", () => {
        let headerIcon = firstPanel.icon();
        //initial state of panel to be expanded
        expect(firstPanel.isCollapsed()).toBe(false);
        expect(firstPanel.isExpanded()).toBe(true);
        //check if panel is collapsed upon click
        headerIcon.click();
        browser.sleep(400);
        expect(firstPanel.isCollapsed()).toBe(true);
        expect(firstPanel.isExpanded()).toBe(false);
        //check if panel is expanded upon click
        headerIcon.click();
        browser.sleep(400);
        expect(firstPanel.isCollapsed()).toBe(false);
        expect(firstPanel.isExpanded()).toBe(true);
    });

    it("Should toggle icon css class upon click ", () => {
        const toggleBtn = firstPanel.toggleButton();

        //icon of panel in initial state (expanded)
        expect(firstPanel.iconShowsCollapsed()).toBe(false);
        expect(firstPanel.iconShowsExpanded()).toBe(true);
        //check icon when panel collapsed upon click
        toggleBtn.click();
        browser.sleep(400);
        expect(firstPanel.iconShowsCollapsed()).toBe(true);
        expect(firstPanel.iconShowsExpanded()).toBe(false);
        //check icon when panel expanded upon click
        toggleBtn.click();
        browser.sleep(400);
        expect(firstPanel.iconShowsCollapsed()).toBe(false);
        expect(firstPanel.iconShowsExpanded()).toBe(true);
    });

    it("Check that icon is not present when isCollapsible is false", () => {
        expect(secondPanel.icon().isDisplayed()).toBe(false);
    });

    it("Check that correct page heading is shown", () => {
        expect(secondPanel.headingText()).toBe("TEST_CASE");
    });

    it("Check that components are correctly transcluded into the panel", () => {
        expect(element(by.id("markerId")).isDisplayed()).toBe(true);
    });

    it("should show icon counter only if the panel is collapsed", () => {
        const toggleBtn = firstPanel.toggleButton();

        //Collapsing the panel
        toggleBtn.click();
        browser.sleep(400);
        expect(firstPanel.getHeaderIconCounter("collapsed")).toEqual("3");

        //Expanding the panel
        toggleBtn.click();
        browser.sleep(400);
        expect(firstPanel.getHeaderIconCounter("expanded")).toBeNull();
    });
});
