import { ElementArrayFinder, by, element, promise } from "@solarwinds/uzi/protractor";
import { GlobalKeysAtom } from "../index.atom";
import { WebElement } from "@solarwinds/uzi/webdriver";
import Helpers from "../helpers";

describe("USERCONTROL globalKeys", () => {
    let atom: GlobalKeysAtom;

    beforeEach(() => {
        Helpers.prepareBrowser("globalKeys");
        atom = new GlobalKeysAtom(element(by.id("globalKeysTest")));
    });

    it("should toggle xui-reveal class", () => {
        expect(atom.isXuiRevealActive()).toBe(false);
        atom.focus();
        atom.toggleXuiReveal();
        expect(atom.isXuiRevealActive()).toBe(true);
        atom.toggleXuiReveal();
        expect(atom.isXuiRevealActive()).toBe(false);
        atom.toggleXuiReveal();
        expect(atom.isXuiRevealActive()).toBe(true);
    });

    it("should red-outline xui components only", () => {
        atom.focus();
        atom.toggleXuiReveal();
        expect(atom.isXuiRevealActive()).toBe(true);

        let radios: ElementArrayFinder = atom.getComponents("xui-radio");
        expect(radios.count()).toBe(2);
        expect(atom.hasRedOutline(radios.get(0))).toBeTruthy();

        const vanillaButton = element(by.id("vanillaButton"));
        expect(vanillaButton).toBeDefined();
        expect(atom.hasRedOutline(vanillaButton)).toBeFalsy();
    });
});
