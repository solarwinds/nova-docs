import {by, element, promise} from "@solarwinds/uzi/protractor";
import Helpers from "../helpers";
import {CheckboxGroupAtom} from "../index.atom";
import {Atom} from "@solarwinds/uzi";

describe("USERCONTROL Checkbox Group", () => {

    let cg: CheckboxGroupAtom;

    beforeEach(() => {
        Helpers.prepareBrowser("checkbox-group");
    });

    // - test should start with checkbox-group that has first two checkboxes checked
    // - third checkbox is unchecked
    // - check it and validate
    it("checking works in a pre-checked group", () => {
        cg = Atom.findIn(CheckboxGroupAtom, element(by.id("default")));

        const cb1 = cg.getCheckbox("Item 1");
        const cb2 = cg.getCheckbox("Item 2");
        const cb3 = cg.getCheckbox("Item 3");

        expect(cb1.isChecked()).toBe(true);
        expect(cb2.isChecked()).toBe(true);
        expect(cb3.isChecked()).toBe(false);
        cb3.click();
        expect(cb3.isChecked()).toBe(true);
    });

    // - test should start with checkbox-group that has first two checkboxes unchecked
    // - third checkbox is checked
    // - check it and validate
    it("checking works in a pre-checked group", () => {
        cg = Atom.findIn(CheckboxGroupAtom, element(by.id("invert")));

        const cb1 = cg.getCheckbox("Item 1");
        const cb2 = cg.getCheckbox("Item 2");
        const cb3 = cg.getCheckbox("Item 3");

        expect(cb1.isChecked()).toBe(false);
        expect(cb2.isChecked()).toBe(false);
        expect(cb3.isChecked()).toBe(true);
        cb3.click();
        expect(cb3.isChecked()).toBe(false);
    });

});
