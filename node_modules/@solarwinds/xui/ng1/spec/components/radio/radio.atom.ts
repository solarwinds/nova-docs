import {by, ElementArrayFinder, ElementFinder, promise} from "@solarwinds/uzi/protractor";
import {Atom} from "@solarwinds/uzi";

export class RadioAtom extends Atom {
    public static CSS_CLASS = "xui-radio";

    public isRadioSelected = (radio: ElementFinder): promise.Promise<boolean> => {
        let inputElement = this.getRadioInputElement(radio);
        return inputElement.isSelected();
    };

    public isRadioEnabled = (radio: ElementFinder): promise.Promise<boolean> => {
        let inputElement = this.getRadioInputElement(radio);
        return inputElement.isEnabled();
    };

    public getRadioText = (radio: ElementFinder): promise.Promise<string> => {
        return radio.getText();
    };

    public getValue = (radio: ElementFinder): promise.Promise<string> => {
        let inputElement = this.getRadioInputElement(radio);
        return inputElement.getAttribute("value");
    };

    public clickOnRadio = (radio: ElementFinder): promise.Promise<void> => {
        // Click on label, not the input element
        return radio.element(by.className("xui-radio-label")).click();
    };

    public findRadioByName = (radioList: ElementArrayFinder, radioName: string):
            ElementFinder => {
        return radioList.filter((radio: ElementFinder) => {
            return this.getRadioText(radio).then((text: string) => {
                return text.toLowerCase() === radioName.toLowerCase();
            });
        }).first();
    };

    private getRadioInputElement = (radio: ElementFinder): ElementFinder => {
        return radio.element(by.className("xui-radio-input"));
    };
}
