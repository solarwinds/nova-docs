/// <reference path="../../ref.d.ts" />

import SpecHelper from "../../specHelper";

describe("layouts >", () => {
    describe("strip >", () => {
        let element:any, scope:any, compile:any;

        beforeEach(angular.mock.module("xui"));

        beforeEach(inject(function ($compile:any, $rootScope:any) {
            compile = $compile;
            scope = $rootScope.$new();
        }));

        let directive = "<xui-strip-layout><div class='content'></div></xui-strip-layout>";

        describe("replace >", () => {
            it("should have replaced directive element", () => {
                // act
                element = SpecHelper.getCompiledElement(compile, scope, directive);

                // assert
                expect(element[0].tagName.toLowerCase()).not.toEqual("xui-strip-layout");
            });
        });

        describe("transclude >", () => {
            it("should contain ng-transclude directive", () => {
                // act
                element = SpecHelper.getCompiledElement(compile, scope, directive);

                // assert
                expect(element[0].hasAttribute("ng-transclude")).toEqual(true);
            });

            it("should contain transcluded content", () => {
                // act
                element = SpecHelper.getCompiledElement(compile, scope, directive);

                // assert
                const transcludeContentElem = element.find("div.content");
                expect(transcludeContentElem.length).toEqual(1);
            });
        });
    });
});
