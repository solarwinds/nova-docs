/// <reference path="../ref.d.ts" />

import Module from "./module";

run.$inject = [
    "$rootScope",
    "$state",
    "$stateParams",
    "$location",
    "$log",
    "$translate"
];

//#region Internal Methods

function run($rootScope:xui.IRootScope,
             $state:angular.ui.IStateService,
             $stateParams:angular.ui.IStateParamsService,
             $location:ng.ILocationService, $log:ng.ILogService, 
             $translate:angular.translate.ITranslateService) {
    // It's very handy to add references to $state and $stateParams to the $rootScope
    // so that you can access them from any scope within your applications. For example,
    // <li ng-class="{ active: $state.includes('contacts.list') }"> will set the <li>
    // to active whenever 'contacts.list' or one of its descendants is active.
    $rootScope.$state = $state;
    $rootScope.$stateParams = $stateParams;

    $rootScope.goto = goto;
    $rootScope.gotoPage = gotoPage;

    $rootScope.$on("$stateChangeStart", onStateChangeStart);
    $rootScope.$on("$stateChangeSuccess", onStateChangeSuccess);
    $rootScope.$on("$stateChangeError", onStateChangeError);
    $rootScope.$on("$stateNotFound", onStateNotFound);

    function goto(state:string, args?:{}, updateLocation?:boolean) {
        if (state) {
            let params:any = args || {},
                options:any = {};

            if (angular.isDefined(updateLocation)) {
                options.location = updateLocation;
            }

            $state.go(state, params, options);
        }
    }

    function gotoPage(page:string, args?:{}, replace?:boolean) {
        if (page) {
            $location.path(page);
            if (args) {
                $location.search(args);
            }
            if (replace) {
                $location.replace();
            }
        }
    }

    function onStateNotFound(event:ng.IAngularEvent, unfoundState:any, fromState:any, fromParams:any) {
        $log.error("$stateNotFound " + unfoundState.to);
        $log.error(unfoundState, fromState, fromParams);
    }

    function onStateChangeError(event:ng.IAngularEvent, toState:any, toParams:any, fromState:any, fromParams:any) {
        $log.error("$stateChangeError");
        $log.error(arguments);
    }

    function onStateChangeStart(event:ng.IAngularEvent, toState:any, toParams:any, fromState:any, fromParams:any) {
        $rootScope.title = null;
        $rootScope.fullpage = false;

        // Activate fullpage styling if needed.
        if (toState) {
            if (angular.isDefined(toState.fullpage)) {
                $rootScope.fullpage = toState.fullpage;
            }
        }

        $log.debug(
            "state changing from, '" + fromState.name + "' (" + JSON.stringify(fromParams) +
            ") to, '" + toState.name + "' (" + JSON.stringify(toParams) + ")");
    }

    function onStateChangeSuccess(event:ng.IAngularEvent, toState:any,
                                  toParams:any, fromState:any, fromParams:any) {
        if (toState.i18Title) {
            $rootScope.title = $translate.instant(toState.i18Title);
        } else {
            $rootScope.title = toState.title;
        }
    }
}

//#endregion

export default (module:Module)=> {
    module.app().run(run); // this is run when the injector is done loading all modules
};
