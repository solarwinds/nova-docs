
/**
 * @ngdoc directive
 * @name xui.validator:xuiIntegerValidator
 * @restrict A
 *
 * @description
 * Validator for integer numbers.
 *
 * @example
 * <example module="xui">
 *     <file src="src/validators/integerValidator/docs/index.html" name="index.html"></file>
 * </example>
 */
class IntegerValidator implements ng.IDirective {
    public require = "ngModel";
    public restrict = "A";
    public link = ($scope: ng.IScope, element: ng.IAugmentedJQuery, 
                   attrs: ng.IAttributes, controller: ng.INgModelController) => {

        let inputCtrl: ng.INgModelController = element.find("input").controller("ngModel");

        if (inputCtrl) {
            // for xuiTextbox component
            inputCtrl.$validators["integer"] = getValidatorFn(inputCtrl);
        } else {
            // for pure input element
            controller.$validators["integer"] = getValidatorFn(controller);
        }

        function getValidatorFn(ctrl: ng.INgModelController) {
            return (modelValue: any, viewValue: any): boolean => {
                let integerRegex: RegExp;

                if (attrs["xuiIntegerValidator"] === "unsigned") {
                    integerRegex = /^(0|[1-9]\d*)$/;
                } else {
                    integerRegex = /^\-?(0|[1-9]\d*)$/;
                }

                return ctrl.$isEmpty(modelValue) || integerRegex.test(viewValue);
            };
        }
    };
}

export default IntegerValidator;
