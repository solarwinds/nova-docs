(function () {
    "use strict";

    Xui.controller('DemoBindHtmlCompileController', DemoBindHtmlCompileController);

    DemoBindHtmlCompileController.$inject = ["$scope"];

    function DemoBindHtmlCompileController($scope) {
        var vm = this;

        var complexTemplates = [
            '<xui-button>complex</xui-button>',
            '<xui-message type="ok">complex</xui-message>'
        ];

        var complexTemplatesWithData = [
            '<xui-button>{{text}}</xui-button>',
            '<xui-message type="ok">{{text}}</xui-message>'
        ];

        var data = [
            {
                text: "text from an object"
            },
            {
                text: "text from another object"
            }
        ];

        var scopes = [
            $scope.$new(),
            $scope.$new()
        ];

        scopes[0].text = "text from a scope";
        scopes[1].text = "text from another scope";

        function getAnother(list, avoid) {
            return list.filter(value => value !== avoid)[0];
        }

        vm.htmlSimple = "<div id='markerID'>simple</div>";

        vm.changeTemplate = function () {
            vm.htmlComplex = getAnother(complexTemplates, vm.htmlComplex);
            vm.htmlComplexWithData = getAnother(complexTemplatesWithData, vm.htmlComplexWithData);
        };

        vm.changeScope = function () {
            vm.bindData = getAnother(data, vm.bindData);
            vm.bindScope = getAnother(scopes, vm.bindScope);
        };

        vm.changeScopeContent = function () {
            vm.bindData.text += "!";
            vm.bindScope.text += "!";
        };

        vm.changeTemplate();
        vm.changeScope();
    }
}());
