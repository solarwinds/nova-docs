/**
 * @ngdoc directive
 * @name xui.directive:xuiBindHtmlCompile
 * @restrict A
 *
 * @description
 * The `bindHtmlCompile` directive allows you to bind html content that has other directives or angular
 * expressions within it.  Ensure that the html content is trusted.
 *
 * @element ANY
 *
 * @example
 * <example module="xui">
 *     <file src="src/components/bindHtmlCompile/docs/bindHtmlCompile-examples.html" name="index.html"></file>
 *     <file src="src/components/bindHtmlCompile/docs/bindHtmlCompile-examples.js" name="app.js"></file>
 * </example>
 */

export default class BindHtmlCompile implements ng.IDirective {
    public static $inject = ["$compile"];

    constructor(private $compile: ng.ICompileService) {
    }

    public restrict = "A";

    public static ensureScope(parent: ng.IScope, value: any): ng.IScope {
        if (value == null) {
            return parent;
        }
        if (typeof value.$new === "function") {
            return value;
        }
        const newScope = parent.$new();
        _.assign(newScope, value);
        return newScope;
    }

    public link = (scope: ng.IScope, element: ng.IAugmentedJQuery, attrs: ng.IAttributes): void => {

        let compiled: ng.ITemplateLinkingFunction;
        let compileScope: ng.IScope = scope;

        function updateContent() {
            if (compiled) {
                compiled(compileScope, function (clonedElement: JQuery) {
                    element.empty().append(clonedElement);
                });
            }
        }

        scope.$watch(
            () => scope.$eval(attrs["xuiBindHtmlCompile"]),
            (content) => {
                element.html(content);
                compiled = this.$compile(element.contents());
                updateContent();
            }
        );

        scope.$watch(
            () => scope.$eval(attrs["xuiBindHtmlCompileScope"]),
            (explicitScope) => {
                compileScope = BindHtmlCompile.ensureScope(scope, explicitScope);
                updateContent();
            }
        );
    };
}
