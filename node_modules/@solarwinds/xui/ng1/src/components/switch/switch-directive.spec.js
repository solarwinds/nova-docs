
describe('components >', function () {
	describe('switch >', function () {
        var ON_CSS = 'xui-switched';
        var scope, compile;

        beforeEach(angular.mock.module('xui'));

        beforeEach(inject(function ($templateCache, $rootScope, _$compile_) {
            scope = $rootScope.$new();
            compile = _$compile_;
        }));

        var plainDirective = '<xui-switch ng-model="isOn">xui-switch</xui-switch>';
        var emptyDirective = '<xui-switch ng-model="isOn"></xui-switch>';

        it('should set ON css class ', function () {
            var element = compile(plainDirective)(scope);

            scope.$apply(function(){
                scope.isOn = true;
            });
            expect(element.hasClass(ON_CSS)).toEqual(true);

            scope.$apply(function(){
                scope.isOn = false;
            });
            expect(element.hasClass(ON_CSS)).toEqual(false);
        });

        it('should transclude content to label', function () {
            var element = compile(plainDirective)(scope);
            scope.$apply(function(){
                scope.isOn = true;
            });
            var caption = angular.element(element[0].querySelector('label'));
            expect(caption).toBeTruthy();
            expect(caption.length).toBe(1);
            expect(caption[0].innerText).toEqual("xui-switch");
        });

        // Negative case
        it('should not display label if caption was not set', function () {
            var element = compile(emptyDirective)(scope);
            scope.$apply(function(){
                scope.isOn = true;
            });
            var caption = angular.element(element[0].querySelector('label'));
            expect(caption).toBeTruthy();
            expect(caption.length).toBe(1);
            expect(caption[0].innerText).toEqual("");
        });
    });
});
