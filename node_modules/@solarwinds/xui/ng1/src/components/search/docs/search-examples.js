(function() {
    "use strict";

    Xui.module
        .controller("DemoSearchBasicController", DemoSearchBasicController, ["$timeout", "xuiToastService"])
        .controller("DemoSearchComplexController", DemoSearchComplexController, ["$timeout", "xuiToastService", "$log"]);

    function DemoSearchBasicController($timeout, toastService) {
        var vm = this;

        vm.items = ['Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5'];

        vm.onSearch = function(value, cancellation) {
            var promise = $timeout(function () {
                toastService.success("You searched for <pre>" + JSON.stringify(value) + "</pre>", "on-search event fired");
            }, 4000);

            cancellation.then(function() {
                $timeout.cancel(promise);
                toastService.info("Search cancelled!");
            });

            return promise;
        };

        vm.onClear = function() {
            return $timeout(function () {
                toastService.success("You cleared the search field", "on-clear event fired");
            }, 0);
        };
    }

    function DemoSearchComplexController($timeout, toastService, $log) {
        var vm = this;

        vm.searchOnChange = true;
        vm.displayValue = 'value';
        vm.placeholder = 'Search Me!';
        vm.itemLimit = 3;
        vm.searchResults = [];
        vm.items = [
            { name: 'item_1', value: 'Item 1' },
            { name: 'item_2', value: 'Item 2' },
            { name: 'item_3', value: 'Item 3' },
            { name: 'item_4', value: 'Item 4' },
            { name: 'item_5', value: 'Item 5' }
        ];

        vm.onSearch = function(value, cancellation) {
            var promise = $timeout(function () {
                vm.genSearchResults();
                toastService.success("You searched for <pre>" + JSON.stringify(value) + "</pre>", "on-search event fired");
            }, 3000);

            cancellation.then(function() {
                $timeout.cancel(promise);
                toastService.info("Search cancelled!");
            });

            return promise;
        };

        vm.onClear = function() {
            return $timeout(function () {
                toastService.success("You cleared the search field", "on-clear event fired");
            }, 0);
        };

        vm.onChange = function () {
            vm.searchResults.length = 0;
            $log.info("Search on-change event fired - " + vm.value);
        };

        vm.onBlur = function($event) {
            $log.info("Search on-blur event fired - " + vm.value);
        };

        vm.onFocus = function($event) {
            $log.info("Search on-focus event fired - " + vm.value);
        };

        vm.genSearchResults = function() {
            for (var i = 1; i <= 10; i++) {
                vm.searchResults.push({
                    id: i,
                    name: "item_" + i,
                    value: "Item " + i
                });
            }
        };
    }
})();
