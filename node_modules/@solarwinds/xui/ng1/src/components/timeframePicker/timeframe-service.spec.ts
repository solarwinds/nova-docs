/// <reference path="../../ref.d.ts" />

describe("services >", () => {
    describe("moment >", () => {
        let timeframeService:xui.ITimeframeService;

        beforeEach(angular.mock.module("xui.services"));

        beforeEach(inject(($injector:any) => {
            timeframeService = $injector.get("xuiTimeframeService");
        }));

        it("should non-zero number of default presets", function () {
            const presets = timeframeService.getDefaultPresets();

            expect(Object.keys(presets).length).not.toBe(0);
        });

        it("should return correct time frame", function () {
            const baseTime = "2015-02-02T10:00:00.000Z";
            const presets = timeframeService.getTimeframe({ days: -7 }, {}, baseTime);

            expect(presets.startDatetime.toISOString()).toBe("2015-01-26T10:00:00.000Z");
            expect(presets.endDatetime.toISOString()).toBe(baseTime);
        });

        it("should return correct time frame for specified preset", function () {
            const baseTime = "2015-02-02T10:00:00.000Z";
            const presets = timeframeService.getTimeframeByPresetId("lastHour", baseTime);

            expect(presets.startDatetime.toISOString()).toBe("2015-02-02T09:00:00.000Z");
            expect(presets.endDatetime.toISOString()).toBe("2015-02-02T10:00:00.000Z");
        });

        it("should return correct time frame for custom preset", function () {
            const customPreset = {
                lastDay: {
                    name: "Last day",
                    startDatetimePattern: {days: -1},
                    endDatetimePattern: {}
                },
                lastMonth: {
                    name: "Last month",
                    startDatetimePattern: { months: -1 },
                    endDatetimePattern: {}
                }
            };
            timeframeService.extendCurrentPresets(customPreset);
            const baseTime = "2015-02-02T10:00:00.000Z";
            const presets = timeframeService.getTimeframeByPresetId("lastMonth", baseTime);

            expect(presets.startDatetime.toISOString()).toBe("2015-01-02T10:00:00.000Z");
            expect(presets.endDatetime.toISOString()).toBe("2015-02-02T10:00:00.000Z");
        });
    });
});
