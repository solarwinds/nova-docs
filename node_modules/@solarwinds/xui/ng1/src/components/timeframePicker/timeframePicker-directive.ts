/// <reference path="../../ref.d.ts" />

import TimeframePickerController from "./timeframePicker-controller";

/**
 * @ngdoc directive
 * @name xui.directive:xuiTimeframePicker
 * @restrict E
 *
 * @description
 * XUI TimeframePicker component that can be used for date and time range selection. The component allows manual input
 * of two date and time values, or a quick selection from one of the predefined "Quick picks". Developer can provide his
 * own "Quick picks" that are suitable for his own use case, otherwise the defaults are used from
 * `xuiTimeframeService.getDefaultPresets()`.
 *
 * @parameters
 * @param {xui.ITimeframe} ng-model Data for the component.
 * @param {[key:string]:xui.ITimeframePreset=} presets Presets for the "Quick picks" section. Defaults are used (from
 * `xuiTimeframeService.getDefaultPresets()`) when these are not specified.
 * @param {string=} placeholder Placeholder text to display when timeframe is not set.
 * @param {string=} [datetimeTitleFormat="MMM D, YYYY h:mm A"] Datetime format ('Moment' compatible)
 * used for dates displayed in title.
 * @param {string=} customTitle Title that will be displayed for custom time range.
 * @param {function=} onChange (model)=>void Callback function which is executed if any changes are applied.
 * @param {date=} minDate Limits minimum available date.
 * @param {date=} maxDate Limits maximum available date.
 *
 * @example
 *    <example module="xui">
 *        <file name="config.js">
 *            Xui.translations = {
 *                  xui_timeframePicker_quickpicks_title: "Quick picks",
 *                  xui_timeframePicker_datetimeSelection_title: "Specific Date",
 *                  xui_timeframePicker_start: "Start",
 *                  xui_timeframePicker_end: "End",
 *                  xui_timeframePicker_use: "Use",
 *                  xui_timeframePicker_cancel: "Cancel",
 *                  xui_timeframePicker_default_title: "Select time frame",
 *                  xui_timeframePicker_last_hour: "Last hour",
 *                  xui_timeframePicker_last_12_hours: "Last 12 hours",
 *                  xui_timeframePicker_last_24_hours: "Last 24 hours",
 *                  xui_timeframePicker_last_5_days: "Last 5 days",
 *                  xui_timeframePicker_last_7_days: "Last 7 days",
 *                  xui_timeframePicker_last_30_days: "Last 30 days",
 *                  xui_timeframePicker_validation_empty: "Date must be specified. It has been restored.",
 *                  xui_timeframePicker_validation_interval:
 *                      "Start date cannot be later than end date. End date has been displaced."
 *            };
 *        </file>
 *        <file src="src/components/timeframePicker/docs/timeframePicker-examples.js" name="script.js"></file>
 *        <file src="src/components/timeframePicker/docs/timeframePicker-examples.html" name="index.html"></file>
 *    </example>
 **/
class TimeframePicker implements ng.IDirective {
    public restrict = "E";
    public templateUrl = "xui/components/timeframePicker/timeframePicker-directive.html";
    public replace = true;
    public scope = {};
    public require = ["xuiTimeframePicker", "ngModel"];
    public bindToController = {
        model: "=ngModel",
        presets: "=?",
        placeholder: "@",
        datetimeTitleFormat: "@?",
        customTitle: "@?",
        onChange: "&?",
        minDate: "<?",
        maxDate: "<?"
    };
    public controller = TimeframePickerController;
    public controllerAs = "vm";
}

export default TimeframePicker;
