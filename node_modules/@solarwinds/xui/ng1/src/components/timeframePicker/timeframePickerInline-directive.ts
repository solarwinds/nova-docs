/// <reference path="../../ref.d.ts" />

import TimeframePickerInlineController from "./timeframePickerInline-controller";
import InputProxyService from "../../services/inputProxy-service";
import Inject from "../../decorators/di";

class TimeframePickerInline implements ng.IDirective {
    public restrict = "E";
    public templateUrl = "xui/components/timeframePicker/timeframePickerInline-directive.html";
    public replace = true;
    public scope = {};
    public require = ["xuiTimeframePickerInline", "ngModel"];
    public bindToController = {
        model: "=ngModel",
        presets: "=?",
        onChange: "&?",
        onPresetSelected: "&?",
        minDate: "<?",
        maxDate: "<?"
    };
    public controller = TimeframePickerInlineController;
    public controllerAs = "vm";

    constructor(@Inject("xuiInputProxyService") private xuiInputProxyService: InputProxyService) {
    }

    public compile = (element: ng.IAugmentedJQuery, attrs: ng.IAttributes) => {
        const startDatetimePicker = element.find(".xui-timeframe-picker__start-datetime-picker > xui-datetime-picker");
        const startDatetimePickerHandlers
            = this.xuiInputProxyService.proxyAttributesCompile(attrs, startDatetimePicker);

        const endDatetimePicker = element.find(".xui-timeframe-picker__end-datetime-picker > xui-datetime-picker");
        const endDatetimePickerHandlers = this.xuiInputProxyService.proxyAttributesCompile(attrs, endDatetimePicker);

        return {
            post: (scope: ng.IScope,
                   iElement: ng.IAugmentedJQuery,
                   iAttrs: ng.IAttributes,
                   controllers: any) => {

                const timeframePickerController: TimeframePickerInlineController = controllers[0];

                this.xuiInputProxyService
                    .proxyAttributesLink(startDatetimePickerHandlers, timeframePickerController, scope);
                this.xuiInputProxyService.proxyAttributesLink(endDatetimePickerHandlers,
                    timeframePickerController, scope);

                const ctrl: TimeframePickerInlineController = controllers[0];
                ctrl.hideOpenedPopups = () => {
                    $(".uib-datepicker-popup:visible").hide();
                };
            }
        };
    };
}

export default TimeframePickerInline;
