import SpecHelper from "../../specHelper";
import PanelController from "./panel-controller";

interface IPanelTestScope extends ng.IScope {
    heading: string;
    isCollapsed: boolean;
    isCollapsible: boolean;
}

describe("components >", () => {

    describe("panel >", () => {
        let element:ng.IAugmentedJQuery,
            ctrl:PanelController,
            scope:IPanelTestScope,
            $compile:ng.ICompileService,
            $controller:ng.IControllerService,
            $timeout:ng.ITimeoutService;

        beforeEach(() => {
            angular.mock.module("xui");
            angular.mock.inject(function ($templateCache:ng.ITemplateCacheService,
                                          $rootScope:ng.IRootScopeService, _$compile_:ng.ICompileService,
                                          _$controller_:ng.IControllerService,
                                          _$timeout_:ng.ITimeoutService) {
                scope = <IPanelTestScope>$rootScope.$new();
                $compile = _$compile_;
                $controller = _$controller_;
                $timeout = _$timeout_;
            });
        });

        function compileDirective(html:string) {
            element = SpecHelper.getCompiledElement($compile, scope, html);
            scope.$apply();
            ctrl = element.controller("xuiPanel");
        }

        it("should toggle collapsed state", () => {
            scope.isCollapsed = false;
            compileDirective(`<xui-panel is-collapsed="isCollapsed">
                                <xui-panel-left-pane>LEFT PANE</xui-panel-left-pane>
                                <xui-panel-center-pane>CENTER PANE</xui-panel-center-pane>
                              </xui-panel>`);
            expect(scope.isCollapsed).toBeFalsy();

            ctrl.toggleCollapsed();
            scope.$apply();
            $timeout(() => {
                expect(scope.isCollapsed).toBeTruthy();
            });
        });

        it("should attach xui-panel--fill class if panel-layout attribute equals 'fill'", () => {
            compileDirective(`<xui-panel is-collapsed="isCollapsed" panel-layout="fill">
                                <xui-panel-left-pane>LEFT PANE</xui-panel-left-pane>
                                <xui-panel-center-pane>CENTER PANE</xui-panel-center-pane>
                              </xui-panel>`);
            expect(element.hasClass("xui-panel--fill")).toBeTruthy();
        });
    });
});
