import IWizard = xui.IWizard;
import IWizardStep = xui.IWizardStep;

/**
 * @ngdoc directive
 * @name xui.directive:xuiWizardStep
 * @restrict E
 *
 * @requires xui.directive:xuiWizard
 *
 * @description
 * Component that provides wizard step functionality.
 *
 * @parameters
 * @param {string} label The label that identifies the step.
 * @param {string} title The title of the step.
 * @param {string=} shortTitle A more compact form of the title (ex: "EULA").
 * @param {string=} description The description of the step.
 * @param {string=} [next-text='Next'] Text for the Next button.
 * @param {expression=} on-enter Evaluated when the step is entered.
 * @param {expression=} on-exit Evaluated when the step is exited.
 *
 */
export default class WizardStepDirective implements ng.IDirective {
    public restrict = "E";
    public require = ["xuiWizardStep", "^xuiWizard"];
    public replace = true;
    public transclude = true;
    public templateUrl = "xui/components/wizard/wizard-step-directive.html";
    public scope = {};
    public controller = "xuiWizardStepController";
    public controllerAs = "wizStepCtrl";
    public bindToController = {
        label: "@",
        title: "@",
        shortTitle: "@?",
        description: "@?",
        nextText: "@?",
        onEnter: "&?",
        onExit: "&?"
    };

    public link = ($scope:ng.IScope, element:ng.IAugmentedJQuery,
                   attrs:ng.IAttributes, controllers:any[]):void => {
        const wizardStep = <IWizardStep>controllers[0];
        const wizard = <IWizard>controllers[1];

        $scope.$on("$destroy", () => {
            wizard.removeStep(wizardStep);
        });

        if (wizardStep.label === "$xui-summary") {
            wizard.addStep(wizardStep, 10000);
        } else {
            wizard.addStep(wizardStep, element.index());
        }
    };
}
