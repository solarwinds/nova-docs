(function () {
    "use strict";

    Xui.module
        .controller("DemoDialogController", DemoDialogController, ["$timeout", "xuiDialogService", "xuiToastService", "$q"]);

    function DemoDialogController($timeout, dialogService, toast, $q) {
        var vm = this;

        vm.btnMessageName = "testMessageBtn";
        vm.btnWarningName = "testWarningBtn";
        vm.btnErrorName = "testErrorBtn";
        vm.btnDialogName = "testDialogBtn";
        vm.btnDialogIconsName = "testDialogIconsBtn";

        vm.showMessage = function() {
            dialogService.showMessage({title:"Gothos", message:"Greetings and Felicitations!"});
        };

        vm.showWarning = function() {
            dialogService.showWarning({title: "Are you sure?", message: "An error message is imminent."}, {
                name: "proceed",
                text: "Proceed",
                action: function(dialogResult) {
                    return true;
                }
            });
        };

        vm.showError = function() {
            dialogService.showError({message: "We seem to be stuck in a temporal causality loop."});
        };

        vm.showDialog = function() {
            var viewModel = {wasStarted: false, isBusy: false, wasCanceled: false, result: "success!"};
            var timeoutPromise = null;
            var result = dialogService.showModal({size: "lg"}, {
                hideTopCancel: true,
                title: "Dialog Confirmation",
                message: "Are you sure this is the dialog you're looking for? Click Start to get busy...",
                actionButtonText: "Start",
                cancelButtonText: "Close",
                buttons: [{
                    name: "start",
                    isPrimary: true,
                    text: "Start",
                    actionText: "Please wait, I'm real busy...",
                    action: function(dialogResult) {
                        viewModel.wasStarted = true;
                        viewModel.wasCanceled = false;
                        viewModel.isBusy = true;
                        toast.info("Action Started");
                        return $q(function(resolve) {
                            timeoutPromise = $timeout(function() {
                                if (viewModel.wasCanceled === false) {
                                    toast.success("Action Completed Succesfully!");
                                }
                                viewModel.isBusy = false;
                            }, 3000).finally(function() {
                                resolve();
                            });
                        });
                    },
                    cancelAction: function() {
                        if (viewModel.wasStarted) {
                            $timeout.cancel(timeoutPromise);
                            viewModel.wasCanceled = true;
                            viewModel.isBusy = false;
                            toast.info("Action Canceled");
                        }
                    }
                }],
                viewModel: viewModel
            });
            result.then(function(res) {
                if (!res || res === "cancel") {
                    toast.info("Dialog Canceled");
                } else {
                    toast.info("Dialog Closed");
                }
            });
        };

        vm.showDialogWithBtnIcons = function() {
            var viewModel = {wasStarted: false, isBusy: false, wasCanceled: false, result: "success!"};
            var timeoutPromise = null;
            var result = dialogService.showModal({size:"lg"},{
                hideTopCancel: false,
                title: "Dialog Confirmation",
                message: "Are you sure this is the dialog you're looking for? Click Start to get busy...",
                actionButtonText: "Start",
                cancelButtonText: "Close",
                buttons: [
                    {
                        name: "start",
                        text: "Start",
                        actionText: "Please wait, I'm real busy...",
                        displayStyle: "tertiary",
                        icon: "enable",
                        action: function (dialogResult) {
                            viewModel.wasStarted = true;
                            viewModel.wasCanceled = false;
                            viewModel.isBusy = true;
                            toast.info("Action Started");
                            timeoutPromise = $timeout(function () {
                                if (viewModel.wasCanceled === false) {
                                    toast.success("Action Completed Succesfully!");
                                }
                                viewModel.isBusy = false;
                                return true;
                            }, 3000);
                            return timeoutPromise;
                        },
                        cancelAction: function () {
                            if (viewModel.wasStarted) {
                                $timeout.cancel(timeoutPromise);
                                viewModel.wasCanceled = true;
                                viewModel.isBusy = false;
                            }
                        }
                    }
                ],
                viewModel: viewModel
            });

            result.then(function(res) {
                if (!res || res === "cancel") {
                    toast.info("Dialog Canceled");
                } else {
                    toast.info("Dialog Closed");
                }
            });
        };
    }
})();
