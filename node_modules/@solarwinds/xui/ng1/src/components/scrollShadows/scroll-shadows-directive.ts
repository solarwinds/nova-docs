import IScope = ng.IScope;
import IAugmentedJQuery = ng.IAugmentedJQuery;

/**
 * @ngdoc directive
 * @name xui.directive:xuiScrollShadows
 * @restrict E
 *
 * @description
 * Wraps a block element to include a scrollbar. Adds box-shadow effect to wrapped element.
 *
 * @example
 *    <example module="xui">
 *        <file src="src/components/scrollShadows/docs/scroll-shadows-examples.html" name="index.html"></file>
 *    </example>
 */

export class ScrollShadows implements ng.IDirective {
    public restrict = "E";
    public scope = {};
    public transclude = true;
    public template = "<ng-transclude><ng-transclude>";

    public link = (scope: IScope, element: IAugmentedJQuery) => {
        let scrollBlock = element.find("ng-transclude > *");

        // add shadows when link is called
        this.setShadows(scrollBlock);

        // change shadows on scroll
        scrollBlock.scroll(_.throttle(() => {
            this.setShadows(scrollBlock);
        }, 100));
    };

    private setShadows = (element: IAugmentedJQuery) => {
        const shadowTop = "xui-scroll-shadow-top";
        const shadowBottom = "xui-scroll-shadow-bottom";

        let scrollTop = element.scrollTop();
        let maxScrollTop = element[0].scrollHeight - element[0].clientHeight;

        // don't add shadows if wrapped element hasn't scrollbar
        if (maxScrollTop === 0) {
            return;
        }

        switch (scrollTop) {
            case 0:
                element.removeClass(shadowTop);
                element.addClass(shadowBottom);
                break;

            case maxScrollTop:
                element.removeClass(shadowBottom);
                element.addClass(shadowTop);
                break;

            default:
                element.addClass(shadowTop);
                element.addClass(shadowBottom);
                break;
        }
    };
}
