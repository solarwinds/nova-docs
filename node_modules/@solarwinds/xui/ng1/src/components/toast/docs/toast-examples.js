(function () {
    "use strict";

    Xui.module
        .controller("DemoToastController", DemoToastController, ["$log", "xuiToastService"])
        .controller("DemoToastHighlightController", DemoToastHighlightController, ["xuiToastService", "$templateCache"]);

    function DemoToastController($log, toastService) {
        var vm = this;

        vm.toastTitle = "Toast Title";
        vm.toastMessage = "This is the toast message.";
        vm.toastTypes = ["Success", "Info", "Warning", "Error"];
        vm.selectedToastType = vm.toastTypes[0];
        vm.toastPositions = [
            {name: "Top Center", value: "toast-top-center"},
            {name: "Top Right", value: "toast-top-right"},
            {name: "Bottom Right", value: "toast-bottom-right"}
        ];
        vm.selectedToastPosition = vm.toastPositions[2];

        vm.onShow = function () {
            $log.info("xuiToastService onShow()");
        };
        vm.onHidden = function () {
            $log.info("xuiToastService onHidden()");
        };
        vm.onClick = function () {
            $log.info("xuiToastService onClick()");
        };
        vm.toastOptions = {
            // Should debug details be outputted to the console
            debug: true,
            // Should a close button be shown
            closeButton: true,
            // onShown function callback
            onShown: vm.onShow,
            // Function to execute on toast click
            onclick: vm.onClick,
            // onHidden function callback
            onHidden: vm.onHidden,
            // Where toast should be displayed
            positionClass: vm.selectedToastPosition.value,
            // Time in milliseconds that the toast should be displayed
            timeOut: 5000,
            // Time in milliseconds the toast should be displayed after mouse over
            extendedTimeOut: 1000
        };

        vm.showToast = function () {
            vm.toastOptions.positionClass = vm.selectedToastPosition.value;

            toastService[vm.selectedToastType.toLowerCase()](vm.toastMessage, vm.toastTitle, vm.toastOptions);
        };
    }

    function DemoToastHighlightController(toastService, $templateCache) {
        var vm = this;

        vm.items = [];

        for (var i = 0; i < 10; i++) {
            vm.items.push({
                name: "item_" + i,
                value: "Item " + i
            });
        }

        vm.highlightStatus = "success";
        vm.highlightedIndex1 = 2;
        vm.highlightedIndex2 = 6;

        vm.highlightItems = function () {
            const msg = "Items 2 & 6 highlighted. Hover on me and see what happens...";
            const title = "Listview Toast Highlights!";
            const highlightArgs = [vm.items[vm.highlightedIndex1], vm.items[vm.highlightedIndex2]];
            if (vm.highlightStatus === "success") {
                toastService.success(msg, title, {}, highlightArgs);
            } else {
                toastService.info(msg, title, {}, highlightArgs);
            }
        };

        $templateCache.put("exampleTemplate", "<div>{{::item.value}}</div>");
    }
})();