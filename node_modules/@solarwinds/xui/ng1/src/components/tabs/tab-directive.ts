import {ITabController} from "./tab-controller";
import {ITabsController} from "./tabs-controller";

/**
 * @ngdoc directive
 * @name xui.directive:xuiTab
 * @restrict E
 *
 * @requires xui.directive:xuiTabs
 *
 * @description
 * Used to list tabs under the xui-tabs directive.
 *
 * @parameters
 * @param {string} tabId Identifier for tab. Used for selection. If title is blank, it is also used for display.
 * @param {string} tabTitle Displayed title of the tab. Can change.
 * @param {string} title [DEPRECATED] Displayed title of the tab. Can cause side effect: Tab title overlaying the whole
 * tab content. UIF-2112
 *
 *
 * @example
 *    <example module="xui">
 *        <file src="src/components/tabs/docs/tab-examples.html" name="index.html"></file>
 *        <file src="src/components/tabs/docs/tab-examples.js" name="app.js"></file>
 *    </example>
 */
export class Tab implements ng.IDirective {
    public require = ["^^xuiTabs", "xuiTab"];
    public restrict = "E";
    public templateUrl = "xui/components/tabs/tab-directive.html";
    public transclude = true;
    public replace = true;
    public controller = "xuiTabController";
    public controllerAs = "vm";
    public scope = {};
    public bindToController = {
        tabId: "@",
        tabTitle: "@?",
        title: "@?" // [DEPRECATED]
    };

    public compile(el: ng.IAugmentedJQuery, attr: ng.IAttributes,
                   transcludeFn: ng.ITranscludeFunction) {

        if (attr["title"]) {
            el.removeAttr("title");
        }

        return {
            post: (scope: ng.IScope, element: ng.IAugmentedJQuery,
                   attrs: ng.IAttributes, controllers: any[]): void => {

                const tabsController = controllers[0] as ITabsController;
                const tabController = controllers[1] as ITabController;

                tabController.init(tabsController);
            }
        };
    };

}

export default Tab;
