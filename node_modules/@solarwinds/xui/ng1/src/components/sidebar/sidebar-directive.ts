import SidebarController from "./sidebar-controller";

/**
 * @ngdoc directive
 * @name xui.directive:xuiSidebar
 * @restrict E
 *
 * @description
 * Sliding block with generic content at the right/left side of the page, requires
 * <strong>xuiSidebarContainer</strong> as parent component. For layout of type "fill" of <strong>xuiSidebarContainer
 * </strong> and <strong>xuiSidebar</strong> use <strong>xuiSidebarHeader</strong> component in order to transclude
 * fixed panel header, that should be shown on top of the sidebar content
 *
 * @param {ISidebarSettings} settings Describes the state of component.<br>
 * <pre>
 * interface ISidebarSettings {
 *     // possible values are "right" and "left"
 *     position: SidebarPositionType;
 *     // show/hide sidebar
 *     display: boolean;
 *     // resize main content if shrink is "true",
 *     // if "false" then show sidebar over content,
 *     // not implemented for position "left"
 *     shrink: boolean;
 *     // sidebar will expand to its full width on mouse over
 *     // designed for side navigation menues
 *     expandable: boolean;
 * }
 * </pre>
 *
 * @example
 *    <example module="xui">
 *        <file src="src/components/sidebar/docs/sidebar-examples.html" name="index.html"></file>
 *        <file src="src/components/sidebar/docs/sidebar-examples.css" name="style.css"></file>
 *        <file src="src/components/sidebar/docs/sidebar-examples.js" name="app.js"></file>
 *    </example>
 */

export default class Sidebar implements ng.IDirective {
    public static $inject = ["swUtil"];

    constructor(private swUtil: any) {}

    public restrict = "E";
    public template = require<string>("./sidebar-directive.html");
    public transclude = {
        "header": "?xuiSidebarHeader"
    };

    public scope = {};
    public controller = SidebarController;
    public controllerAs = "sidebarController";
    public bindToController = {
        settings: "="
    };

    public link: ng.IDirectiveLinkFn = (scope: ng.IScope, element: ng.IAugmentedJQuery,
        attrs: ng.IAttributes, ctrl: SidebarController) => {
        //name
        this.swUtil.initComponent(attrs, "sidebar");
        element.addClass(ctrl.settings.display && ctrl.settings.expandable
            ? "xui-sidebar--expandable-" + ctrl.settings.position
            : "");
        scope.$watch(()=>ctrl.settings,
        (newVal: xui.ISidebarSettings, oldVal: xui.ISidebarSettings) => {
            if (newVal.display !== oldVal.display
                || newVal.expandable !== oldVal.expandable
                || newVal.position !== oldVal.position) {
                    element.removeClass("xui-sidebar--expandable-left xui-sidebar--expandable-right");
                    const expandableClass = "xui-sidebar--expandable-" + newVal.position;
                    element.addClass(newVal.display && newVal.expandable ? expandableClass: "");
                }
        }, true);
    };
}
