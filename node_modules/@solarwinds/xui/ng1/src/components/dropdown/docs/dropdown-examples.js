(function () {
    "use strict";

    run.$inject = ["$templateCache"];

    Xui.module
        .controller("DemoDropdownController", DemoDropdownController, ["xuiToastService"])
        .app().run(run);

    function DemoDropdownController(toast) {
        var vm = this;

        _.extend(vm, {
            basic: {
                items: ["Item 1", "Item 2", "Item 3", "Item 4", "Item 5", "Item 6", "Item 7", "Item 8", "Item 9",
                    "Item 10", "Item 11", "Item 12", "Item 13", "Item 14", "Item 15", "Item 16", "Item 17", "Item 18",
                    "Item 19", "Item 20"],
                itemsInGroups: [
                    ["Item 1", "Item 2", "Item 3", "Item 4", "Item 5", "Item 6"],
                    ["Item 7", "Item 8", "Item 9", "Item 10", "Item 11", "Item 12"],
                    ["Item 13", "Item 14", "Item 15", "Item 16", "Item 17", "Item 18", "Item 19", "Item 20"]
                ],
                itemsWithSymbols: ["Item 1,1 (coma and parentheses)", "Item 2:2 (semicolon and parentheses)", "Item 3,3:3 coma and semicolon", "Item 4"]
            },
            complex: {
                displayValue: "value",
                displayFormat: "Formatted display for {0}",
                onChanged: function (newValue) {
                    toast.info("You selected " + newValue.value);
                },
                items: [
                    {name: "item_1", value: "Bonobo", icon: "severity_ok", progress: 78},
                    {name: "item_2", value: "Zelda", icon: "severity_ok", progress: 66},
                    {name: "item_3", value: "Max", icon: "severity_critical", progress: 7},
                    {name: "item_4", value: "Apple", icon: "severity_ok", progress: 24},
                    {name: "item_5", value: "Quartz", icon: "severity_warning", progress: 89}
                ]
            },
            onDropdownAction: function () {
                toast.success("Dropdown action!");
            },
            setValidityDirty: function (form) {
                angular.forEach(form.$error.required, function (field) {
                    field.$setDirty();
                });
            }
        });

        activate();

        //#region Internal Methods

        function activate() {
            vm.basic.selectedItem = vm.basic.items[1];
            vm.complex.selectedItem = vm.complex.items[2];
            vm.basic.itemWithSymbols = vm.basic.itemsWithSymbols[3];
        }

        //#endregion
    }


    function run($templateCache) {
        // this cannot be put in html only because of ng-docs
        $templateCache.put("custom-dropdown-template",
            '<div class="media">' +
            '    <div class="media-left">' +
            '        <xui-icon icon="{{::item.icon}}"></xui-icon>' +
            '    </div>' +
            '    <div class="media-body" style="width:300px;">' +
            '        <h2 class="media-heading">{{::item.value}}</h2>' +
            '        <h5>{{::item.name}}</h5>' +
            '        <xui-progress show-progress="true" show="true" thin="true"' +
            '                      percent="{{item.progress}}"></xui-progress>' +
            '    </div>' +
            '</div>');
    }
})();
