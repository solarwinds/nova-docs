import xuiDragEvent = xui.xuiDragEvent;
import Inject from "../../decorators/di";
export default class DroppableController implements xui.IDroppableController  {
    constructor(@Inject("$q") private $q: ng.IQService) {
        const dummyResolution = (params:{event:xuiDragEvent, transferObject:any}): ng.IPromise<boolean> => {
            return $q.resolve(true);
        };
        this.onDragOver = this.onDragOver || angular.noop;
        this.onDragEnter = this.onDragEnter || angular.noop;
        this.onDragLeave = this.onDragLeave || angular.noop;
        this.onDrop = this.onDrop || dummyResolution;
    }

    public onDragOver:(params:{event: xuiDragEvent}) => void;
    public onDragEnter:(params:{event: xuiDragEvent}) => void;
    public onDragLeave:(params:{event: xuiDragEvent}) => void;
    public onDrop:(params:{event:xuiDragEvent, transferObject:any}) => ng.IPromise<boolean>;
    public dragOverClass: string;

    public dragOver = (event:xuiDragEvent):void => {
        this.onDragOver({ event: event });
    };

    public dragEnter = (event:xuiDragEvent):void => {
        this.onDragEnter({ event: event });
    };

    public dragLeave = (event:xuiDragEvent):void => {
        this.onDragLeave({ event: event });
    };

    public drop = (event:xuiDragEvent, obj:any):ng.IPromise<boolean> => {
        return this.onDrop({ event: event, transferObject:obj});
    };
}
