import {PageContentController} from "./pageContent-controller";
import {IPageContentController} from "./pageContent-controller";
import Inject from "../../decorators/di";

/**
 * @ngdoc directive
 * @name xui.directive:xuiPageContent
 * @restrict E
 * @description
 * Component that provides the basic layout of a page, including xuiPageBreadcrumbs, xuiPageHeader components, and
 * transcluded body.
 * The styling can be altered by applying a class to the container element.
 * Currently supported class is xui-page-content--no-padding.
 *
 * @parameters
 * @param {string=} page-title Title of the page content.
 * @param {string=} [page-layout='fullWidth'] Determines how the page is displayed. Options are 'fullWidth', 'form', and
 * 'fill'.
 * @param {boolean=} is-busy Expression to indicate if busy indicator should be displayed.
 * @param {string=} busy-message Message displayed along with the busy indicator.
 * @param {string=} link-url Link provided in the top-right corner of the header.
 * @param {string=} link-text Text displayed for the header link.
 * @param {string=} link-icon Icon displayed to the left of the header link.
 * @param {string=} link-target Attribute for the link: _blank for new tab, or _self to force navigation (bypass Angular
 * routing).
 * @param {boolean=} is-link-visible Indicates whether the link should be shown.
 * @param {boolean=} is-icon-visible Indicates whether the link icon should be shown.
 *
 * @example Example that demonstrates basic bindings via the xui-page-content directive.
 * <example module="xui">
 *     <file src="src/components/pageContent/docs/pageContent-examples.html" name="index.html"></file>
 *     <file src="src/components/pageContent/docs/pageContent-examples.css" name="app.css"></file>
 *     <file src="src/components/pageContent/docs/pageContent-examples.js" name="app.js"></file>
 * </example>
 */
export class PageContent implements ng.IDirective {
    constructor(@Inject("$rootScope") private $rootScope:any,
                @Inject("$window") private $window:ng.IWindowService,
                @Inject("$timeout") private $timeout:ng.ITimeoutService) {}

    public restrict = "E";
    public scope = {};
    public bindToController = {
        pageTitle: "@?",
        pageLayout: "@?",
        isBusy: "=?",
        busyMessage: "@?",
        linkText: "@?",
        isLinkVisible: "@?",
        linkIcon: "@?",
        isIconVisible: "@?",
        linkUrl: "@?",
        linkTarget: "@?"
    };

    public template = require<string>("./pageContent-directive.html");
    public replace = true;
    public transclude:{[slot:string]:string} = {
        header: "?xuiPageHeader",
        footer: "?xuiPageFooter",
        breadcrumbs: "?xuiPageBreadcrumbs"
    };
    public controller = PageContentController;
    public controllerAs = "vm";

    private pageLayoutClasses = {
        fullWidth: "xui-page-content--full-width",
        fill: "xui-page-content--fill",
        form: "xui-page-content--form"
    };

    public link = (scope:ng.IScope,
                   element:ng.IAugmentedJQuery,
                   attrs:ng.IAttributes,
                   ctrl:IPageContentController) => {
        ctrl.init(this.$rootScope.title);

        attrs.$observe("busyMessage", (value:string) => {
            ctrl.busyMessage = value;
        });

        const $htmlEl = angular.element("html");

        const adjustLayout = () => {
            $htmlEl.removeClass(this.pageLayoutClasses.fullWidth)
                .removeClass(this.pageLayoutClasses.fill)
                .removeClass(this.pageLayoutClasses.form);

            switch (ctrl.pageLayout) {
                case "fullWidth":
                    $htmlEl.addClass(this.pageLayoutClasses.fullWidth);
                    break;

                case "fill":
                    $htmlEl.addClass(this.pageLayoutClasses.fill);
                    break;

                case "form":
                    $htmlEl.addClass(this.pageLayoutClasses.form);
                    break;
            }
        };
        const resetLayout = () => {
            $htmlEl.removeClass(
                `${this.pageLayoutClasses.fill} ${this.pageLayoutClasses.fullWidth} ${this.pageLayoutClasses.form}`
            );
        };

        this.$rootScope.$on("$stateChangeStart", resetLayout);
        this.$rootScope.$on("$stateChangeSuccess", adjustLayout);

        adjustLayout();
    };
}
