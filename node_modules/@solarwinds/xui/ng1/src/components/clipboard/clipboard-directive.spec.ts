/// <reference path="../../ref.d.ts" />

import ClipboardController from "./clipboard-controller";

describe("components >", () => {
    describe("clipboard >", () => {
        describe("clipboard-controller >", () => {
            let _clipboard:ClipboardController;

            beforeEach(angular.mock.module("xui"));
            beforeEach(inject(($injector:any) => {
                const $controller = $injector.get("$controller");

                _clipboard = $controller("xuiClipboardController", {
                    $document: $injector.get("$document"),
                    $log: $injector.get("$log")
                });
            }));

            it("should invoke success callback after successful execCommand", function () {
                spyOn(document, "execCommand").and.returnValue(true);
                _clipboard.text = () => "text to copy";
                _clipboard.onClipboardSuccess = jasmine.createSpy("onClipboardSuccess");
                _clipboard.copyText();
                expect(_clipboard.onClipboardSuccess).toHaveBeenCalled();
            });

            it("should invoke error callback on error in execCommand", function () {
                spyOn(document, "execCommand").and.returnValue(false);
                _clipboard.text = () => "text to copy";
                _clipboard.onClipboardError = jasmine.createSpy("onClipboardError");
                _clipboard.copyText();
                expect(_clipboard.onClipboardError).toHaveBeenCalled();
            });
        });
    });
});
