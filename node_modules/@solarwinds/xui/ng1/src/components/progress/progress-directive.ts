/**
 * @ngdoc directive
 * @name xui.directive:xuiProgress
 * @restrict E
 *
 * @description
 * XUI Progress component.
 *
 * @parameters
 * @param {string=} percent Value for progress completion.
 * @param {boolean=} allow-cancel Set to true to allow the user to cancel the operation.
 * @param {string=} message Caption for the progress.
 * @param {string=} help-text Additional information displayed below the progress.
 * @param {boolean=} [show=false] Determines if the whole component is shown or not.
 * @param {boolean=} [show-number=false] Displays numeric progress (ex: 54%).
 * @param {boolean=} [show-progress=false] Display the progress bar (ex: ████░░).
 * @param {boolean=} [thin=false] Renders progress bar all on one line (space permitting).
 * @param {boolean=} [stacked=false] Uncenters marquee.
 * @param {expression=} on-cancel ()=>boolean Callback function that is executed when the user has asked to cancel the
 * current operation.
 *
 * @example
 *    <example module="xui">
 *      <file src="src/components/progress/docs/progress-examples.html" name="index.html"></file>
 *      <file src="src/components/progress/docs/progress-examples.js" name="app.js"></file>
 *    </example>
 */

export interface IProgressScope extends ng.IScope {
    allowCancel:boolean;
    percent:number;
    showProgress:boolean;
    show:boolean;
    helpText:string;
    thin:boolean;
    message:string;
    messageSuffix:string;
    cancelText:string;
    cancelProgress():void;
    onCancel():boolean;
}

export default class Progress implements ng.IDirective {
    public static $inject = ["swUtil", "$translate"];

    constructor(private swUtil:any, private $translate:angular.translate.ITranslateService) {
    }

    public restrict = "E";
    public templateUrl = "xui/components/progress/progress-directive.html";
    public replace = true;
    public transclude = false;
    public scope = {
        percent: "@?",
        show: "=?",
        helpText: "@?",
        message: "@?",
        messageSuffix: "@?",
        cancelText: "@?",
        cancelProgress: "&?",
        onCancel: "&?"
    };

    public link = (scope:IProgressScope, element:ng.IAugmentedJQuery, attrs:ng.IAttributes) => {
        scope.cancelText = this.$translate.instant("xui_progress_cancel");
        if ("allowCancel" in attrs) {
            scope.cancelProgress = () => {
                if (angular.isFunction(scope.onCancel)) {
                    if (scope.onCancel() === false) {
                        return;
                    }
                }

                scope.show = false;
            };
        }

        this.swUtil.watchBoolean(attrs, "allowCancel", scope);
        this.swUtil.watchBoolean(attrs, "showProgress", scope);
        this.swUtil.watchBoolean(attrs, "showNumber", scope);
        this.swUtil.watchBoolean(attrs, "thin", scope);
        this.swUtil.watchBoolean(attrs, "stacked", scope);
    };
}
