import FileUploadController from "./fileUpload-controller";

/**
 * @ngdoc directive
 * @name xui.directive:xuiFileUpload
 * @restrict E
 *
 * @description
 * XUI FileUpload component.
 *
 * @parameters
 * @param {file} file The model that the value of the file upload component is bound to.
 * @param {string} [accept] Specifies the type of file that the server accepts (that can be selected through a
 * file upload). Tip: Do not use this attribute as a validation tool. File uploads should be validated on the server.
 * @param {boolean} [is-required] Set the required value validation for the component.
 * @param {function} [on-change] Callback function that will trigger on file change.
 *
 * @example
 * <example module="xui">
 *      <file src="src/components/fileUpload/docs/fileUpload-examples.html" name="index.html"></file>
 *      <file src="src/components/fileUpload/docs/fileUpload-examples.js" name="app.js"></file>
 * </example>
 */

export default class FileUpload implements ng.IDirective {
    public restrict = "E";
    public templateUrl = "xui/components/fileUpload/fileUpload-directive.html";
    public replace = true;
    public scope = {};
    public require = ["xuiFileUpload", "^form"];
    public controller = "xuiFileUploadController";
    public controllerAs = "fileUploadCtrl";
    public bindToController = {
        file: "=",
        accept: "@?",
        isRequired: "@?",
        onChange: "&?",
    };

    public link = (scope:ng.IScope,
                   element:ng.IAugmentedJQuery,
                   attrs:ng.IAttributes,
                   controllers:ng.IFormController) => {
        let fileUploadCtrl:FileUploadController = controllers[0];
        fileUploadCtrl.formCtrl = controllers[1];

        let inputElement:ng.IAugmentedJQuery = element.find("input[type='file']");

        inputElement.bind("change", ($event?:JQueryEventObject) => {
            scope.$apply(() => { fileUploadCtrl.onFileRead($event); });
            fileUploadCtrl.validate();
        });
    };
}
