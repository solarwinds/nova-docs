export default class FileUploadController {
    public static $inject = ["$timeout"];

    public file: File;
    public accept: string;
    public isRequired: string;
    public onChange: ($event?:JQueryEventObject) => void;

    public isFileSelected: boolean = false;
    public fileName: string;
    public formCtrl: ng.IFormController;
    public isValid: boolean = false;

    private input:HTMLInputElement;

    constructor(private $timeout:ng.ITimeoutService) {}

    public onFileRead = ($event?:JQueryEventObject) => {
        this.input = <HTMLInputElement> $event.target;
        // If user presses 'Cancel' in file selection dialog, previous file will be kept selected
        this.changeFile(this.input.files[0] || this.file);
    }

    public remove = () => {
        // removing file from <input type='file />
        if (this.input) {
            this.input.value = "";
        }

        this.changeFile();
    }

    private changeFile = (newFile?:File) => {
        this.file = newFile || null;
        this.isFileSelected = !!this.file;
        this.fileName = this.file ? this.file.name : "";
        if (angular.isFunction(this.onChange)) {
            // $timeout is used to fire component 'change' event only after scope
            // will be populated with data, - after digest loop will finish
            this.$timeout(() => {
                this.onChange();
            });
        }
    }

    public validate = () => {
        this.isValid = this.file !== null && angular.isDefined(this.file);
    }

    public isInErrorState = () => {
        return this.formCtrl.$submitted &&
                !this.isValid &&
                this.isRequired;
    }

}
