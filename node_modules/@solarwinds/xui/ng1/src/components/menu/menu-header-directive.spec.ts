import SpecHelper from "../../specHelper";

describe("components >", () => {
    describe("menu >", () => {
        describe("item header >", () => {
            let element:ng.IAugmentedJQuery,
                scope:any,
                compile:ng.ICompileService;

            beforeEach(angular.mock.module("xui"));

            beforeEach(inject(function ($compile:ng.ICompileService, $rootScope:any) {
                compile = $compile;
                scope = $rootScope.$new();
            }));

            const parentElem = "xui-menu";
            const directive = "<xui-menu-header><b>content</b></xui-menu-header>";

            describe("replace >", () => {
                it("should have replaced directive element", () => {
                    // act
                    element = SpecHelper.getCompiledElementInParentElement(compile, scope, directive, parentElem);

                    // assert
                    expect(element[0].tagName.toLowerCase()).not.toEqual("xui-menu-header");

                });
            });

            describe("transclude >", () => {
                it("should have an ng-transclude directive in it", () => {
                    // act
                    element = SpecHelper.getCompiledElementInParentElement(compile, scope, directive, parentElem);

                    // assert
                    const transcludeElem = element.find(".xui-menu-item-header[ng-transclude]");
                    expect(transcludeElem.length).toEqual(1);
                });

                it("should have transclude content", () => {
                    // act
                    element = SpecHelper.getCompiledElementInParentElement(compile, scope, directive, parentElem);

                    // assert
                    const transcludeContentElem = element.find(".xui-menu-item-header")[0];
                    expect(transcludeContentElem.innerHTML).toMatch("<b .*>content</b>");
                });
            });
        });
    });
});
