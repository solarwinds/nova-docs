import {IMenuScope} from "./menu-directive";
import { IMenuService } from "./menu-service";

export interface IMenuItem {
    // input json data used this interface
    action: Function;
    addIcon: Function;
    checked: boolean;
    disabled: boolean;
    title: string;
    params: string[];
    itemType: string;
}

export class MenuItem implements IMenuItem {
    public static $inject = ["$compile", "xuiMenuService"];

    action:Function;
    checked:boolean;
    disabled:boolean;
    title:string;
    params:string[];
    itemType: string;
    
    constructor(private $compile:ng.ICompileService, public menuService: IMenuService, itemType: string) {
        this.itemType = itemType;
    }
    
    public addIcon = (attrs: ng.IAttributes, element: ng.IAugmentedJQuery, 
                    scope: IMenuScope):void => {
        // icon-class
        if (attrs["icon"]) {
            // Prepend icon html to the element.
            let $icon = angular.element("<xui-icon is-dynamic=\"true\" icon=\"{{icon}}\"></xui-icon>");
            element.children().prepend($icon);
            this.$compile($icon)(scope);
        }
    };
}

export default MenuItem;
