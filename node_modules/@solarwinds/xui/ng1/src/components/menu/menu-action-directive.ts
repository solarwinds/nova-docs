import { IMenuScope } from "./menu-directive";
import MenuItem from "./menu-item";

/**
 * @ngdoc directive
 * @name xui.directive:xuiMenuAction
 * @restrict E
 *
 * @description
 * XUI wrapper for menu action. It is used to call some JavaScript method. It can only be used inside xuiMenu directive.
 *
 * @parameters
 * @param {string} action Value to be executed as JavaScript method.
 * @param {boolean} is-disabled Expression to determine if menu item should be disabled.
 *
 * @example
 *    <example module="xui">
 *        <file src="src/components/menu/docs/menu-action-examples.html" name="index.html"></file>
 *        <file src="src/components/menu/docs/menu-action-examples.js" name="app.js"></file>
 *    </example>
 */

interface IMenuActionScope extends IMenuScope {
    action: Function;
    isDisabled: boolean;
    handleClick: Function;
}

export default class MenuAction extends MenuItem implements ng.IDirective {
    public restrict = "E";
    public templateUrl = "xui/components/menu/menu-action-directive.html";
    public replace = true;
    public transclude = true;

    public scope = {
        action: "&?",
        isDisabled: "=?",
        icon: "@?"
    };

    public link: ng.IDirectiveLinkFn = (scope: IMenuActionScope,
                                        element: ng.IAugmentedJQuery,
                                        attrs: ng.IAttributes): void => {

        this.itemType = "action";
        this.addIcon(attrs, element, scope);

        scope.handleClick = (event: MouseEvent) => {
            this.action = scope.action;
            this.disabled = scope.isDisabled;
            this.menuService.handleItemClick(event, this);
        };
    };
}
