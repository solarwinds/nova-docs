import IUnitConversionService = xui.IUnitConversionService;
import IUnitConversionResult = xui.IUnitConversionResult;
import IUnitConversionConstants = xui.IUnitConversionConstants;

/**
 * @ngdoc filter
 * @name xui.filter:xuiHertz
 *
 * @description
 * [DEPRECATED, please, use xuiUnitConversion instead]
 * Filter used for formatting hertz value. Unit suffix is automatically added based on value.
 *
 * @param {string} hertz The source value.
 * @param {number} precision Precision of formatted value.
 * Extra trailing zeros are removed independently of the precision.
 * @param {string} plusSign If true and source value is positive, plus sign prefix is added.
 */

function hertzFilter(xuiUnitConversionService: IUnitConversionService,
                     xuiUnitConversionConstants: IUnitConversionConstants) {
    return (hertz: any, precision?: number, plusSign?: boolean): string => {
        console.warn("[Deprecation] xuiHertz is deprecated, use xuiUnitConversion instead");
        if (isNaN(parseFloat(hertz)) || !isFinite(hertz)) {
            return "---";
        }

        const units = xuiUnitConversionConstants.hertz;

        if (hertz === 0) {
            return hertz + " " + units[2];
        }

        let convResult: IUnitConversionResult = xuiUnitConversionService.convert(hertz as number, 1000, precision);

        const prefix = plusSign && hertz > 0 ? "+" : "";

        return prefix + convResult.value + " " + units[convResult.order];
    };
};
hertzFilter.$inject = ["xuiUnitConversionService", "xuiUnitConversionConstants"];

export default hertzFilter;
