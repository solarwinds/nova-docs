import Inject from "../decorators/di";

 /**
 * @ngdoc service
 *
 * @name xui.services:xuiScrollService
 *
 * @description
 * Service that provides scroll notifications for both native scrolling (i.e. $window) as well as xui-scrollbar.
 */
export class ScrollService implements xui.IScrollService {

    private callbacks:xui.IScrollCallback[] = [];

    constructor(@Inject("$document") private $document:ng.IDocumentService,
                @Inject("$window") private $window:ng.IWindowService) {
    }

    /** @ngdoc method
     *  @name bind
     *  @methodOf xui.services:xuiScrollService
     *  @description Invokes the specified callback on scroll events.
     *  @param {xui.IScrollCallback} scrollCallback The callback to invoke on scroll events.
     **/
    public bind = (scrollCallback: xui.IScrollCallback):void => {
        if (scrollCallback) {
            this.$document.bind("ps-scroll-x", scrollCallback);
            this.$document.bind("ps-scroll-y", scrollCallback);
            angular.element(this.$window).bind("scroll", scrollCallback);
        }
    };

    /** @ngdoc method
     *  @name unbind
     *  @methodOf xui.services:xuiScrollService
     *  @description Ensures the specified callback is no longer invoked on scroll events.
     *  @param {xui.IScrollCallback} scrollCallback The callback to unbind.
     **/
    public unbind = (scrollCallback: xui.IScrollCallback):void => {
        if (scrollCallback) {
            this.$document.unbind("ps-scroll-x", scrollCallback);
            this.$document.unbind("ps-scroll-y", scrollCallback);
            angular.element(this.$window).unbind("scroll", scrollCallback);
        }
    };
}
export default ScrollService;
