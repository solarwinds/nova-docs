/// <reference path="../ref.d.ts" />

describe("services >", () => {
    describe("unit conversion >", () => {
        let unitConversionService:xui.IUnitConversionService;

        beforeEach(angular.mock.module("xui.services"));

        beforeEach(inject(($injector:any) => {
            unitConversionService = $injector.get("xuiUnitConversionService");
        }));

        describe("when convert() is called ", () => {
            it("should handle 1000 base properly", function () {
                expect(unitConversionService.convert(1000, 1000))
                    .toEqual({
                        value: "1",
                        order: 1
                    });
            });
            it("should handle 1024 base properly", function () {
                expect(unitConversionService.convert(1024, 1024))
                    .toEqual({
                        value: "1",
                        order: 1
                    });
            });
            it("should handle default precision properly", function () {
                expect(unitConversionService.convert(1500, 1000))
                    .toEqual({
                        value: "1.5",
                        order: 1
                    });
            });
            it("should handle provided precision properly", function () {
                expect(unitConversionService.convert(1506, 1000, 2))
                    .toEqual({
                        value: "1.51",
                        order: 1
                    });
            });
            it("should handle higher orders properly", function () {
                expect(unitConversionService.convert(7300000000001, 1000))
                    .toEqual({
                        value: "7.3",
                        order: 4
                    });
            });
            it("should handle negative values properly", function () {
                expect(unitConversionService.convert(-1000, 1000))
                    .toEqual({
                        value: "-1",
                        order: 1
                    });
            });
            it("should handle zero value, return order 0", function () {
                expect(unitConversionService.convert(0, 1024))
                    .toEqual({
                        value: "0",
                        order: 0
                    });
            });
        });
    });
});
