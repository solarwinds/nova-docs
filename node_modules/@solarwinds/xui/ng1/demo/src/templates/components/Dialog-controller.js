(function () {
    "use strict";

    Xui.module.controller("DemoDialogController", controller,
        ["$scope", "$timeout", "xuiDialogService", "xuiToastService"]);

    function controller($scope, $timeout, dialogService, toast) {
        var vm = this;

        vm.showDialog = showDialog;
        vm.showDialogWithListview = showDialogWithListview;
        vm.items = ["Item1", "Item2", "Item3"];

        function showDialog() {
            $scope.inputText = vm.inputText;
            $scope.outputText = vm.outputText;
            $scope.actionPromise = null;

            var nextButton = {
                name: 'nextButton',
                isDisabled: !$scope.isValid,
                isPrimary: true,
                pullLeft: false,
                text: 'Next',
                action: function () {
                    var self = this;
                    $scope.actionPromise = $timeout(function() {
                        self.text = 'Finished';
                        dialogOptions.hideCancel = true;
                        dialogOptions.buttons[0].isHidden = true;
                        self.action = function() {
                            return true;
                        };
                        return false;
                    }, 2000);
                    return $scope.actionPromise;
                },
                cancelAction: function () {
                    $timeout.cancel($scope.actionPromise);
                    toast.info("Action cancelled.");
                }
            };

            var dialogOptions = {
                title: 'Sample Header',
                viewModel: $scope,
                hideCancel: false,
                actionButtonText: "Ok",
                closeButtonText: "Cancel",
                buttons: [{
                    name: 'backButton',
                    isDisabled: false,
                    pullLeft: true,
                    text: 'Back',
                    action: function () {
                        toast.info("Back clicked");
                        return false;
                    }
                },
                    nextButton
                ]
            };

            $scope.makeValid = function() {
                nextButton.isDisabled = false;
            };

            $scope.isValid = function() {
                return nextButton.isDisabled === false;
            };

            dialogService.showModal({
                    templateUrl: "templates/components/Dialog-template.html"
                }, dialogOptions)
                .then(function () {
                    vm.inputText = $scope.inputText;
                    vm.outputText = $scope.outputText;
                })
                .catch(function () {
                    console.log('Changes cancelled');
                });
        }

        function showDialogWithListview() {
            dialogService.showModal({
                templateUrl: "templates/components/Dialog-listview.html"
            }, {
                headerText: 'Dialog with listview',
                viewModel: vm,
                hideCancel: false,
                actionButtonText: "Ok",
                closeButtonText: "Cancel",
            }).then(function () {
                console.log("Closed.");
            }).catch(function () {
                console.log('Changes cancelled');
            });
        }

    }
})();
