"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const index_atom_1 = require("../index.atom");
const helpers_1 = require("../helpers");
const uzi_1 = require("@solarwinds/uzi");
describe("USERCONTROL icon", () => {
    beforeEach(() => {
        helpers_1.default.prepareBrowser("image");
    });
    const customImg = uzi_1.Atom.find(index_atom_1.ImageAtom, "customImage");
    const okRobot = uzi_1.Atom.find(index_atom_1.ImageAtom, "okRobot");
    const robot404 = uzi_1.Atom.find(index_atom_1.ImageAtom, "robot404");
    const robot500 = uzi_1.Atom.find(index_atom_1.ImageAtom, "robot500");
    it("should render default library images with the proper names", () => {
        expect(customImg.getName())
            .toEqual("http://oriondemo.solarwinds.com/Orion/LogoImageHandler.ashx?f=logo&id=SitelogoImage");
        expect(okRobot.getName()).toEqual("ok-robot");
        expect(robot404.getName()).toEqual("404-robot");
        expect(robot500.getName()).toEqual("500-robot");
    });
    it("should render images with predefined size", () => {
        expect(customImg.getSize()).toEqual("200px");
        expect(okRobot.getSize()).toEqual("400px");
        expect(robot404.getSize()).toEqual("500px");
        expect(robot500.getSize()).toEqual("250px");
    });
    it("should render images with predefined float", () => {
        expect(customImg.getFloatings()).toEqual("none");
        expect(okRobot.getFloatings()).toEqual("none");
        expect(robot404.getFloatings()).toEqual("left");
        expect(robot500.getFloatings()).toEqual("right");
    });
    it("should render images with predefined margins", () => {
        expect(customImg.hasClass("xui-image__margin-centered")).toBe(false);
        expect(okRobot.hasClass("xui-image__margin-centered")).toBe(true);
        expect(robot404.hasClass("xui-image__margin-large")).toBe(true);
        expect(robot500.hasClass("xui-image__margin-small")).toBe(true);
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvaW1hZ2UvaW1hZ2UuZTJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsOENBQXdDO0FBQ3hDLHdDQUFpQztBQUNqQyx5Q0FBcUM7QUFFckMsUUFBUSxDQUFDLGtCQUFrQixFQUFFLEdBQUcsRUFBRTtJQUU5QixVQUFVLENBQUMsR0FBRyxFQUFFO1FBQ1osaUJBQU8sQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDcEMsQ0FBQyxDQUFDLENBQUM7SUFFSCxNQUFNLFNBQVMsR0FBRyxVQUFJLENBQUMsSUFBSSxDQUFDLHNCQUFTLEVBQUUsYUFBYSxDQUFDLENBQUM7SUFDdEQsTUFBTSxPQUFPLEdBQUcsVUFBSSxDQUFDLElBQUksQ0FBQyxzQkFBUyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQ2hELE1BQU0sUUFBUSxHQUFHLFVBQUksQ0FBQyxJQUFJLENBQUMsc0JBQVMsRUFBRSxVQUFVLENBQUMsQ0FBQztJQUNsRCxNQUFNLFFBQVEsR0FBRyxVQUFJLENBQUMsSUFBSSxDQUFDLHNCQUFTLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFFbEQsRUFBRSxDQUFDLDREQUE0RCxFQUFFLEdBQUcsRUFBRTtRQUNsRSxNQUFNLENBQUMsU0FBUyxDQUFDLE9BQU8sRUFBRSxDQUFDO2FBQ3RCLE9BQU8sQ0FBQyxxRkFBcUYsQ0FBQyxDQUFDO1FBQ3BHLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDOUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUNoRCxNQUFNLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3BELENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLDJDQUEyQyxFQUFFLEdBQUcsRUFBRTtRQUNqRCxNQUFNLENBQUMsU0FBUyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzdDLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDM0MsTUFBTSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUM1QyxNQUFNLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2hELENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLDRDQUE0QyxFQUFFLEdBQUcsRUFBRTtRQUNsRCxNQUFNLENBQUMsU0FBUyxDQUFDLFlBQVksRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2pELE1BQU0sQ0FBQyxPQUFPLENBQUMsWUFBWSxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDL0MsTUFBTSxDQUFDLFFBQVEsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNoRCxNQUFNLENBQUMsUUFBUSxDQUFDLFlBQVksRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3JELENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLDhDQUE4QyxFQUFFLEdBQUcsRUFBRTtRQUNwRCxNQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3JFLE1BQU0sQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLDRCQUE0QixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbEUsTUFBTSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMseUJBQXlCLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNoRSxNQUFNLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3BFLENBQUMsQ0FBQyxDQUFDO0FBRVAsQ0FBQyxDQUFDLENBQUMiLCJmaWxlIjoiY29tcG9uZW50cy9pbWFnZS9pbWFnZS5lMmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3Byb21pc2V9IGZyb20gXCJAc29sYXJ3aW5kcy91emkvcHJvdHJhY3RvclwiO1xuaW1wb3J0IHtJbWFnZUF0b219IGZyb20gXCIuLi9pbmRleC5hdG9tXCI7XG5pbXBvcnQgSGVscGVycyBmcm9tIFwiLi4vaGVscGVyc1wiO1xuaW1wb3J0IHtBdG9tfSBmcm9tIFwiQHNvbGFyd2luZHMvdXppXCI7XG5cbmRlc2NyaWJlKFwiVVNFUkNPTlRST0wgaWNvblwiLCAoKSA9PiB7XG5cbiAgICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICAgICAgSGVscGVycy5wcmVwYXJlQnJvd3NlcihcImltYWdlXCIpO1xuICAgIH0pO1xuXG4gICAgY29uc3QgY3VzdG9tSW1nID0gQXRvbS5maW5kKEltYWdlQXRvbSwgXCJjdXN0b21JbWFnZVwiKTtcbiAgICBjb25zdCBva1JvYm90ID0gQXRvbS5maW5kKEltYWdlQXRvbSwgXCJva1JvYm90XCIpO1xuICAgIGNvbnN0IHJvYm90NDA0ID0gQXRvbS5maW5kKEltYWdlQXRvbSwgXCJyb2JvdDQwNFwiKTtcbiAgICBjb25zdCByb2JvdDUwMCA9IEF0b20uZmluZChJbWFnZUF0b20sIFwicm9ib3Q1MDBcIik7XG5cbiAgICBpdChcInNob3VsZCByZW5kZXIgZGVmYXVsdCBsaWJyYXJ5IGltYWdlcyB3aXRoIHRoZSBwcm9wZXIgbmFtZXNcIiwgKCkgPT4ge1xuICAgICAgICBleHBlY3QoY3VzdG9tSW1nLmdldE5hbWUoKSlcbiAgICAgICAgICAgIC50b0VxdWFsKFwiaHR0cDovL29yaW9uZGVtby5zb2xhcndpbmRzLmNvbS9Pcmlvbi9Mb2dvSW1hZ2VIYW5kbGVyLmFzaHg/Zj1sb2dvJmlkPVNpdGVsb2dvSW1hZ2VcIik7XG4gICAgICAgIGV4cGVjdChva1JvYm90LmdldE5hbWUoKSkudG9FcXVhbChcIm9rLXJvYm90XCIpO1xuICAgICAgICBleHBlY3Qocm9ib3Q0MDQuZ2V0TmFtZSgpKS50b0VxdWFsKFwiNDA0LXJvYm90XCIpO1xuICAgICAgICBleHBlY3Qocm9ib3Q1MDAuZ2V0TmFtZSgpKS50b0VxdWFsKFwiNTAwLXJvYm90XCIpO1xuICAgIH0pO1xuXG4gICAgaXQoXCJzaG91bGQgcmVuZGVyIGltYWdlcyB3aXRoIHByZWRlZmluZWQgc2l6ZVwiLCAoKSA9PiB7XG4gICAgICAgIGV4cGVjdChjdXN0b21JbWcuZ2V0U2l6ZSgpKS50b0VxdWFsKFwiMjAwcHhcIik7XG4gICAgICAgIGV4cGVjdChva1JvYm90LmdldFNpemUoKSkudG9FcXVhbChcIjQwMHB4XCIpO1xuICAgICAgICBleHBlY3Qocm9ib3Q0MDQuZ2V0U2l6ZSgpKS50b0VxdWFsKFwiNTAwcHhcIik7XG4gICAgICAgIGV4cGVjdChyb2JvdDUwMC5nZXRTaXplKCkpLnRvRXF1YWwoXCIyNTBweFwiKTtcbiAgICB9KTtcblxuICAgIGl0KFwic2hvdWxkIHJlbmRlciBpbWFnZXMgd2l0aCBwcmVkZWZpbmVkIGZsb2F0XCIsICgpID0+IHtcbiAgICAgICAgZXhwZWN0KGN1c3RvbUltZy5nZXRGbG9hdGluZ3MoKSkudG9FcXVhbChcIm5vbmVcIik7XG4gICAgICAgIGV4cGVjdChva1JvYm90LmdldEZsb2F0aW5ncygpKS50b0VxdWFsKFwibm9uZVwiKTtcbiAgICAgICAgZXhwZWN0KHJvYm90NDA0LmdldEZsb2F0aW5ncygpKS50b0VxdWFsKFwibGVmdFwiKTtcbiAgICAgICAgZXhwZWN0KHJvYm90NTAwLmdldEZsb2F0aW5ncygpKS50b0VxdWFsKFwicmlnaHRcIik7XG4gICAgfSk7XG5cbiAgICBpdChcInNob3VsZCByZW5kZXIgaW1hZ2VzIHdpdGggcHJlZGVmaW5lZCBtYXJnaW5zXCIsICgpID0+IHtcbiAgICAgICAgZXhwZWN0KGN1c3RvbUltZy5oYXNDbGFzcyhcInh1aS1pbWFnZV9fbWFyZ2luLWNlbnRlcmVkXCIpKS50b0JlKGZhbHNlKTtcbiAgICAgICAgZXhwZWN0KG9rUm9ib3QuaGFzQ2xhc3MoXCJ4dWktaW1hZ2VfX21hcmdpbi1jZW50ZXJlZFwiKSkudG9CZSh0cnVlKTtcbiAgICAgICAgZXhwZWN0KHJvYm90NDA0Lmhhc0NsYXNzKFwieHVpLWltYWdlX19tYXJnaW4tbGFyZ2VcIikpLnRvQmUodHJ1ZSk7XG4gICAgICAgIGV4cGVjdChyb2JvdDUwMC5oYXNDbGFzcyhcInh1aS1pbWFnZV9fbWFyZ2luLXNtYWxsXCIpKS50b0JlKHRydWUpO1xuICAgIH0pO1xuXG59KTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
