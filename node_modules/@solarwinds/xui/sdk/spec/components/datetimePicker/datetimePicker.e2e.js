"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const protractor = require("@solarwinds/uzi/protractor");
const protractor_1 = require("@solarwinds/uzi/protractor");
const helpers_1 = require("../helpers");
const index_atom_1 = require("../index.atom");
const uzi_1 = require("@solarwinds/uzi");
describe("USERCONTROL DatetimePicker >", () => {
    let datetimePicker;
    function getModelValue() {
        return protractor_1.element(protractor_1.by.id("model-value")).getText();
    }
    beforeEach(() => {
        helpers_1.default.prepareBrowser("datetimePicker");
        datetimePicker = uzi_1.Atom.findIn(index_atom_1.DatetimePickerAtom, protractor_1.element(protractor_1.by.id("datetime-picker")));
    });
    describe("when the datetime picker is displayed, it", () => {
        it("contains initial value", () => {
            expect(datetimePicker.getDatePicker().getInputValue()).toEqual("3/15/1970");
            expect(datetimePicker.getTimePicker().getInputValue()).toEqual("3:30 pm");
        });
    });
    describe("when a valid date is entered, it", () => {
        it("propagates the value to model", () => {
            datetimePicker.getDatePicker().clearText();
            datetimePicker.getDatePicker().acceptKeys("28-May-1984", protractor.Key.ESCAPE);
            expect(getModelValue()).toBe("1984-05-28 15:30");
        });
    });
    describe("when a valid time is entered, it", () => {
        it("propagates the value to model", () => {
            datetimePicker.getTimePicker().clearText();
            datetimePicker.getTimePicker().acceptText("9:00 am");
            expect(getModelValue()).toBe("1970-03-15 09:00");
        });
    });
    describe("when a invalid date is entered, it", () => {
        it("clears the model", () => {
            datetimePicker.getDatePicker().clearText();
            datetimePicker.getDatePicker().acceptKeys("bs bs bs", protractor.Key.ESCAPE);
            expect(getModelValue()).toBe("");
        });
    });
    describe("when a invalid time is entered, it", () => {
        it("clears the model", () => {
            datetimePicker.getTimePicker().clearText();
            datetimePicker.getTimePicker().acceptText("bs bs bs");
            expect(getModelValue()).toBe("");
        });
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvZGF0ZXRpbWVQaWNrZXIvZGF0ZXRpbWVQaWNrZXIuZTJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEseURBQXlEO0FBQ3pELDJEQUFnRTtBQUNoRSx3Q0FBaUM7QUFDakMsOENBQWlEO0FBQ2pELHlDQUFxQztBQUVyQyxRQUFRLENBQUMsOEJBQThCLEVBQUUsR0FBRyxFQUFFO0lBQzFDLElBQUksY0FBa0MsQ0FBQztJQUV2QztRQUNJLE1BQU0sQ0FBQyxvQkFBTyxDQUFDLGVBQUUsQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNuRCxDQUFDO0lBRUQsVUFBVSxDQUFDLEdBQUcsRUFBRTtRQUNaLGlCQUFPLENBQUMsY0FBYyxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFFekMsY0FBYyxHQUFHLFVBQUksQ0FBQyxNQUFNLENBQUMsK0JBQWtCLEVBQUUsb0JBQU8sQ0FBQyxlQUFFLENBQUMsRUFBRSxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3hGLENBQUMsQ0FBQyxDQUFDO0lBRUgsUUFBUSxDQUFDLDJDQUEyQyxFQUFFLEdBQUUsRUFBRTtRQUN0RCxFQUFFLENBQUMsd0JBQXdCLEVBQUUsR0FBRSxFQUFFO1lBQzdCLE1BQU0sQ0FBQyxjQUFjLENBQUMsYUFBYSxFQUFFLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7WUFDNUUsTUFBTSxDQUFDLGNBQWMsQ0FBQyxhQUFhLEVBQUUsQ0FBQyxhQUFhLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUM5RSxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUMsQ0FBQyxDQUFDO0lBRUgsUUFBUSxDQUFDLGtDQUFrQyxFQUFFLEdBQUUsRUFBRTtRQUM3QyxFQUFFLENBQUMsK0JBQStCLEVBQUUsR0FBRSxFQUFFO1lBQ3BDLGNBQWMsQ0FBQyxhQUFhLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQztZQUMzQyxjQUFjLENBQUMsYUFBYSxFQUFFLENBQUMsVUFBVSxDQUFDLGFBQWEsRUFBRSxVQUFVLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ2hGLE1BQU0sQ0FBQyxhQUFhLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBQ3JELENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQyxDQUFDLENBQUM7SUFFSCxRQUFRLENBQUMsa0NBQWtDLEVBQUUsR0FBRSxFQUFFO1FBQzdDLEVBQUUsQ0FBQywrQkFBK0IsRUFBRSxHQUFFLEVBQUU7WUFDcEMsY0FBYyxDQUFDLGFBQWEsRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDO1lBQzNDLGNBQWMsQ0FBQyxhQUFhLEVBQUUsQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDckQsTUFBTSxDQUFDLGFBQWEsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUM7UUFDckQsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDLENBQUMsQ0FBQztJQUVILFFBQVEsQ0FBQyxvQ0FBb0MsRUFBRSxHQUFFLEVBQUU7UUFDL0MsRUFBRSxDQUFDLGtCQUFrQixFQUFFLEdBQUUsRUFBRTtZQUN2QixjQUFjLENBQUMsYUFBYSxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUM7WUFDM0MsY0FBYyxDQUFDLGFBQWEsRUFBRSxDQUFDLFVBQVUsQ0FBQyxVQUFVLEVBQUUsVUFBVSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUM3RSxNQUFNLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDckMsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDLENBQUMsQ0FBQztJQUVILFFBQVEsQ0FBQyxvQ0FBb0MsRUFBRSxHQUFFLEVBQUU7UUFDL0MsRUFBRSxDQUFDLGtCQUFrQixFQUFFLEdBQUUsRUFBRTtZQUN2QixjQUFjLENBQUMsYUFBYSxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUM7WUFDM0MsY0FBYyxDQUFDLGFBQWEsRUFBRSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUN0RCxNQUFNLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDckMsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDLENBQUMsQ0FBQztBQUVQLENBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6ImNvbXBvbmVudHMvZGF0ZXRpbWVQaWNrZXIvZGF0ZXRpbWVQaWNrZXIuZTJlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgcHJvdHJhY3RvciBmcm9tIFwiQHNvbGFyd2luZHMvdXppL3Byb3RyYWN0b3JcIjtcbmltcG9ydCB7YnksIGVsZW1lbnQsIHByb21pc2V9IGZyb20gXCJAc29sYXJ3aW5kcy91emkvcHJvdHJhY3RvclwiO1xuaW1wb3J0IEhlbHBlcnMgZnJvbSBcIi4uL2hlbHBlcnNcIjtcbmltcG9ydCB7RGF0ZXRpbWVQaWNrZXJBdG9tfSBmcm9tIFwiLi4vaW5kZXguYXRvbVwiO1xuaW1wb3J0IHtBdG9tfSBmcm9tIFwiQHNvbGFyd2luZHMvdXppXCI7XG5cbmRlc2NyaWJlKFwiVVNFUkNPTlRST0wgRGF0ZXRpbWVQaWNrZXIgPlwiLCAoKSA9PiB7XG4gICAgbGV0IGRhdGV0aW1lUGlja2VyOiBEYXRldGltZVBpY2tlckF0b207XG5cbiAgICBmdW5jdGlvbiBnZXRNb2RlbFZhbHVlKCkge1xuICAgICAgICByZXR1cm4gZWxlbWVudChieS5pZChcIm1vZGVsLXZhbHVlXCIpKS5nZXRUZXh0KCk7XG4gICAgfVxuXG4gICAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgICAgIEhlbHBlcnMucHJlcGFyZUJyb3dzZXIoXCJkYXRldGltZVBpY2tlclwiKTtcblxuICAgICAgICBkYXRldGltZVBpY2tlciA9IEF0b20uZmluZEluKERhdGV0aW1lUGlja2VyQXRvbSwgZWxlbWVudChieS5pZChcImRhdGV0aW1lLXBpY2tlclwiKSkpO1xuICAgIH0pO1xuXG4gICAgZGVzY3JpYmUoXCJ3aGVuIHRoZSBkYXRldGltZSBwaWNrZXIgaXMgZGlzcGxheWVkLCBpdFwiLCAoKT0+IHtcbiAgICAgICAgaXQoXCJjb250YWlucyBpbml0aWFsIHZhbHVlXCIsICgpPT4ge1xuICAgICAgICAgICAgZXhwZWN0KGRhdGV0aW1lUGlja2VyLmdldERhdGVQaWNrZXIoKS5nZXRJbnB1dFZhbHVlKCkpLnRvRXF1YWwoXCIzLzE1LzE5NzBcIik7XG4gICAgICAgICAgICBleHBlY3QoZGF0ZXRpbWVQaWNrZXIuZ2V0VGltZVBpY2tlcigpLmdldElucHV0VmFsdWUoKSkudG9FcXVhbChcIjM6MzAgcG1cIik7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgZGVzY3JpYmUoXCJ3aGVuIGEgdmFsaWQgZGF0ZSBpcyBlbnRlcmVkLCBpdFwiLCAoKT0+IHtcbiAgICAgICAgaXQoXCJwcm9wYWdhdGVzIHRoZSB2YWx1ZSB0byBtb2RlbFwiLCAoKT0+IHtcbiAgICAgICAgICAgIGRhdGV0aW1lUGlja2VyLmdldERhdGVQaWNrZXIoKS5jbGVhclRleHQoKTtcbiAgICAgICAgICAgIGRhdGV0aW1lUGlja2VyLmdldERhdGVQaWNrZXIoKS5hY2NlcHRLZXlzKFwiMjgtTWF5LTE5ODRcIiwgcHJvdHJhY3Rvci5LZXkuRVNDQVBFKTtcbiAgICAgICAgICAgIGV4cGVjdChnZXRNb2RlbFZhbHVlKCkpLnRvQmUoXCIxOTg0LTA1LTI4IDE1OjMwXCIpO1xuICAgICAgICB9KTtcbiAgICB9KTtcblxuICAgIGRlc2NyaWJlKFwid2hlbiBhIHZhbGlkIHRpbWUgaXMgZW50ZXJlZCwgaXRcIiwgKCk9PiB7XG4gICAgICAgIGl0KFwicHJvcGFnYXRlcyB0aGUgdmFsdWUgdG8gbW9kZWxcIiwgKCk9PiB7XG4gICAgICAgICAgICBkYXRldGltZVBpY2tlci5nZXRUaW1lUGlja2VyKCkuY2xlYXJUZXh0KCk7XG4gICAgICAgICAgICBkYXRldGltZVBpY2tlci5nZXRUaW1lUGlja2VyKCkuYWNjZXB0VGV4dChcIjk6MDAgYW1cIik7XG4gICAgICAgICAgICBleHBlY3QoZ2V0TW9kZWxWYWx1ZSgpKS50b0JlKFwiMTk3MC0wMy0xNSAwOTowMFwiKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBkZXNjcmliZShcIndoZW4gYSBpbnZhbGlkIGRhdGUgaXMgZW50ZXJlZCwgaXRcIiwgKCk9PiB7XG4gICAgICAgIGl0KFwiY2xlYXJzIHRoZSBtb2RlbFwiLCAoKT0+IHtcbiAgICAgICAgICAgIGRhdGV0aW1lUGlja2VyLmdldERhdGVQaWNrZXIoKS5jbGVhclRleHQoKTtcbiAgICAgICAgICAgIGRhdGV0aW1lUGlja2VyLmdldERhdGVQaWNrZXIoKS5hY2NlcHRLZXlzKFwiYnMgYnMgYnNcIiwgcHJvdHJhY3Rvci5LZXkuRVNDQVBFKTtcbiAgICAgICAgICAgIGV4cGVjdChnZXRNb2RlbFZhbHVlKCkpLnRvQmUoXCJcIik7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgZGVzY3JpYmUoXCJ3aGVuIGEgaW52YWxpZCB0aW1lIGlzIGVudGVyZWQsIGl0XCIsICgpPT4ge1xuICAgICAgICBpdChcImNsZWFycyB0aGUgbW9kZWxcIiwgKCk9PiB7XG4gICAgICAgICAgICBkYXRldGltZVBpY2tlci5nZXRUaW1lUGlja2VyKCkuY2xlYXJUZXh0KCk7XG4gICAgICAgICAgICBkYXRldGltZVBpY2tlci5nZXRUaW1lUGlja2VyKCkuYWNjZXB0VGV4dChcImJzIGJzIGJzXCIpO1xuICAgICAgICAgICAgZXhwZWN0KGdldE1vZGVsVmFsdWUoKSkudG9CZShcIlwiKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG5cbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
