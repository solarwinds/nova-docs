"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const protractor_1 = require("@solarwinds/uzi/protractor");
const helpers_1 = require("../helpers");
describe("Visual tests: Popover", function () {
    let eyes;
    let popover;
    beforeEach(() => {
        eyes = helpers_1.default.prepareEyes();
        helpers_1.default.prepareBrowser("popover");
    });
    it("Default look", () => __awaiter(this, void 0, void 0, function* () {
        eyes.open(protractor_1.browser, "XUI", "Popover");
        eyes.checkWindow("Default");
        yield protractor_1.browser.driver.findElement(protractor_1.by.xpath("//*[text()[contains(.,'click me!')]]")).click();
        eyes.checkWindow("Clicked");
        yield protractor_1.browser.driver.findElement(protractor_1.by.xpath("//*[text()[contains(.,'Set')]]")).click();
        eyes.checkWindow("Focused");
        yield protractor_1.browser.actions()
            .mouseMove(protractor_1.browser.driver.findElement(protractor_1.by.xpath("//*[text()[contains(.,'Hover on me!')]]")))
            .perform();
        eyes.checkWindow("Hovered");
        yield protractor_1.browser.driver.findElement(protractor_1.by.xpath("//*[text()[contains(.,'open left')]]")).click();
        eyes.checkWindow("Left popover");
        yield protractor_1.browser.driver.findElement(protractor_1.by.xpath("//*[text()[contains(.,'open right')]]")).click();
        eyes.checkWindow("Right popover");
        eyes.close();
    }));
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvcG9wb3Zlci9wb3BvdmVyLnZpc3VhbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsMkRBQWtFO0FBQ2xFLHdDQUFpQztBQUlqQyxRQUFRLENBQUMsdUJBQXVCLEVBQUU7SUFDOUIsSUFBSSxJQUFVLENBQUM7SUFDZixJQUFJLE9BQW9CLENBQUM7SUFDekIsVUFBVSxDQUFDLEdBQUcsRUFBRTtRQUNaLElBQUksR0FBRyxpQkFBTyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQzdCLGlCQUFPLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3RDLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLGNBQWMsRUFBRSxHQUFTLEVBQUU7UUFDMUIsSUFBSSxDQUFDLElBQUksQ0FBQyxvQkFBTyxFQUFFLEtBQUssRUFBQyxTQUFTLENBQUMsQ0FBQztRQUNwQyxJQUFJLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRTVCLE1BQU0sb0JBQU8sQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLGVBQUUsQ0FBQyxLQUFLLENBQUMsc0NBQXNDLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQzNGLElBQUksQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUM7UUFFNUIsTUFBTSxvQkFBTyxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsZUFBRSxDQUFDLEtBQUssQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDckYsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUU1QixNQUFNLG9CQUFPLENBQUMsT0FBTyxFQUFFO2FBQ2xCLFNBQVMsQ0FBQyxvQkFBTyxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsZUFBRSxDQUFDLEtBQUssQ0FBQyx5Q0FBeUMsQ0FBQyxDQUFDLENBQUM7YUFDMUYsT0FBTyxFQUFFLENBQUM7UUFDZixJQUFJLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRTVCLE1BQU0sb0JBQU8sQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLGVBQUUsQ0FBQyxLQUFLLENBQUMsc0NBQXNDLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQzNGLElBQUksQ0FBQyxXQUFXLENBQUMsY0FBYyxDQUFDLENBQUM7UUFFakMsTUFBTSxvQkFBTyxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsZUFBRSxDQUFDLEtBQUssQ0FBQyx1Q0FBdUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDNUYsSUFBSSxDQUFDLFdBQVcsQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUNsQyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDakIsQ0FBQyxDQUFBLENBQUMsQ0FBQztBQUNQLENBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6ImNvbXBvbmVudHMvcG9wb3Zlci9wb3BvdmVyLnZpc3VhbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJyb3dzZXIsIGJ5LCBwcm9taXNlIH0gZnJvbSBcIkBzb2xhcndpbmRzL3V6aS9wcm90cmFjdG9yXCI7XG5pbXBvcnQgSGVscGVycyBmcm9tIFwiLi4vaGVscGVyc1wiO1xuaW1wb3J0IHsgRXllcyB9IGZyb20gXCJleWVzLnByb3RyYWN0b3JcIjtcbmltcG9ydCB7IFBvcG92ZXJBdG9tIH0gZnJvbSBcIi4uL2luZGV4LmF0b21cIjtcblxuZGVzY3JpYmUoXCJWaXN1YWwgdGVzdHM6IFBvcG92ZXJcIiwgZnVuY3Rpb24oKSB7XG4gICAgbGV0IGV5ZXM6IEV5ZXM7XG4gICAgbGV0IHBvcG92ZXI6IFBvcG92ZXJBdG9tO1xuICAgIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgICAgICBleWVzID0gSGVscGVycy5wcmVwYXJlRXllcygpO1xuICAgICAgICBIZWxwZXJzLnByZXBhcmVCcm93c2VyKFwicG9wb3ZlclwiKTtcbiAgICB9KTtcblxuICAgIGl0KFwiRGVmYXVsdCBsb29rXCIsIGFzeW5jICgpID0+IHtcbiAgICAgICAgZXllcy5vcGVuKGJyb3dzZXIsIFwiWFVJXCIsXCJQb3BvdmVyXCIpO1xuICAgICAgICBleWVzLmNoZWNrV2luZG93KFwiRGVmYXVsdFwiKTtcblxuICAgICAgICBhd2FpdCBicm93c2VyLmRyaXZlci5maW5kRWxlbWVudChieS54cGF0aChcIi8vKlt0ZXh0KClbY29udGFpbnMoLiwnY2xpY2sgbWUhJyldXVwiKSkuY2xpY2soKTtcbiAgICAgICAgZXllcy5jaGVja1dpbmRvdyhcIkNsaWNrZWRcIik7XG5cbiAgICAgICAgYXdhaXQgYnJvd3Nlci5kcml2ZXIuZmluZEVsZW1lbnQoYnkueHBhdGgoXCIvLypbdGV4dCgpW2NvbnRhaW5zKC4sJ1NldCcpXV1cIikpLmNsaWNrKCk7XG4gICAgICAgIGV5ZXMuY2hlY2tXaW5kb3coXCJGb2N1c2VkXCIpO1xuXG4gICAgICAgIGF3YWl0IGJyb3dzZXIuYWN0aW9ucygpXG4gICAgICAgICAgICAubW91c2VNb3ZlKGJyb3dzZXIuZHJpdmVyLmZpbmRFbGVtZW50KGJ5LnhwYXRoKFwiLy8qW3RleHQoKVtjb250YWlucyguLCdIb3ZlciBvbiBtZSEnKV1dXCIpKSlcbiAgICAgICAgICAgIC5wZXJmb3JtKCk7XG4gICAgICAgIGV5ZXMuY2hlY2tXaW5kb3coXCJIb3ZlcmVkXCIpO1xuXG4gICAgICAgIGF3YWl0IGJyb3dzZXIuZHJpdmVyLmZpbmRFbGVtZW50KGJ5LnhwYXRoKFwiLy8qW3RleHQoKVtjb250YWlucyguLCdvcGVuIGxlZnQnKV1dXCIpKS5jbGljaygpO1xuICAgICAgICBleWVzLmNoZWNrV2luZG93KFwiTGVmdCBwb3BvdmVyXCIpO1xuXG4gICAgICAgIGF3YWl0IGJyb3dzZXIuZHJpdmVyLmZpbmRFbGVtZW50KGJ5LnhwYXRoKFwiLy8qW3RleHQoKVtjb250YWlucyguLCdvcGVuIHJpZ2h0JyldXVwiKSkuY2xpY2soKTtcbiAgICAgICAgZXllcy5jaGVja1dpbmRvdyhcIlJpZ2h0IHBvcG92ZXJcIik7XG4gICAgICAgIGV5ZXMuY2xvc2UoKTtcbiAgICB9KTtcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
