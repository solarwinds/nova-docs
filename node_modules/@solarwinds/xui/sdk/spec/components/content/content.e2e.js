"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const protractor_1 = require("@solarwinds/uzi/protractor");
const helpers_1 = require("../helpers");
const index_atom_1 = require("../index.atom");
const uzi_1 = require("@solarwinds/uzi");
//region Test cases
describe("USERCONTROL content: ", () => {
    let atom;
    beforeEach(() => {
        helpers_1.default.prepareBrowser("content");
        const section = protractor_1.element(protractor_1.by.id("content-page"));
        atom = uzi_1.Atom.findIn(index_atom_1.ContentAtom, section);
    });
    it("should be clickable radiobutton inside", () => {
        const testSection = protractor_1.element(protractor_1.by.id("xui-demo-content-list-of-checkboxes-large"));
        const input = testSection.element(protractor_1.by.xpath("//*[@class='xui-content-transclude']/ul/li[16]//input"));
        const scrollbarAtom = uzi_1.Atom.findIn(index_atom_1.ScrollbarAtom, testSection);
        expect(input.isDisplayed()).toEqual(true);
        input.click();
        expect(input.isEnabled()).toEqual(true);
    });
    it("should have scrollbar", () => {
        const testSection = protractor_1.element(protractor_1.by.id("xui-demo-content-text"));
        const content = testSection.element(protractor_1.by.className("xui-content"));
        const scrollbarAtom = uzi_1.Atom.findIn(index_atom_1.ScrollbarAtom, content);
        expect(scrollbarAtom).toBeDefined();
        expect(scrollbarAtom.hasScrollbar(content)).toBe(true);
    });
});
//endregion

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvY29udGVudC9jb250ZW50LmUyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDJEQUFnRTtBQUNoRSx3Q0FBaUM7QUFDakMsOENBQXlEO0FBQ3pELHlDQUFxQztBQUVyQyxtQkFBbUI7QUFDbkIsUUFBUSxDQUFDLHVCQUF1QixFQUFFLEdBQUcsRUFBRTtJQUNuQyxJQUFJLElBQWlCLENBQUM7SUFFdEIsVUFBVSxDQUFDLEdBQUcsRUFBRTtRQUNaLGlCQUFPLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ2xDLE1BQU0sT0FBTyxHQUFHLG9CQUFPLENBQUMsZUFBRSxDQUFDLEVBQUUsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO1FBQy9DLElBQUksR0FBRyxVQUFJLENBQUMsTUFBTSxDQUFDLHdCQUFXLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDN0MsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsd0NBQXdDLEVBQUUsR0FBRyxFQUFFO1FBQzlDLE1BQU0sV0FBVyxHQUFHLG9CQUFPLENBQUMsZUFBRSxDQUFDLEVBQUUsQ0FBQywyQ0FBMkMsQ0FBQyxDQUFDLENBQUM7UUFDaEYsTUFBTSxLQUFLLEdBQUcsV0FBVyxDQUFDLE9BQU8sQ0FBQyxlQUFFLENBQUMsS0FBSyxDQUFDLHVEQUF1RCxDQUFDLENBQUMsQ0FBQztRQUNyRyxNQUFNLGFBQWEsR0FBRyxVQUFJLENBQUMsTUFBTSxDQUFDLDBCQUFhLEVBQUUsV0FBVyxDQUFDLENBQUM7UUFDOUQsTUFBTSxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMxQyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDZCxNQUFNLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzVDLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLHVCQUF1QixFQUFFLEdBQUcsRUFBRTtRQUM3QixNQUFNLFdBQVcsR0FBRyxvQkFBTyxDQUFDLGVBQUUsQ0FBQyxFQUFFLENBQUMsdUJBQXVCLENBQUMsQ0FBQyxDQUFDO1FBQzVELE1BQU0sT0FBTyxHQUFHLFdBQVcsQ0FBQyxPQUFPLENBQUMsZUFBRSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO1FBQ2pFLE1BQU0sYUFBYSxHQUFHLFVBQUksQ0FBQyxNQUFNLENBQUMsMEJBQWEsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUMxRCxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0QsQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDLENBQUMsQ0FBQztBQUNILFdBQVciLCJmaWxlIjoiY29tcG9uZW50cy9jb250ZW50L2NvbnRlbnQuZTJlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtieSwgZWxlbWVudCwgcHJvbWlzZX0gZnJvbSBcIkBzb2xhcndpbmRzL3V6aS9wcm90cmFjdG9yXCI7XG5pbXBvcnQgSGVscGVycyBmcm9tIFwiLi4vaGVscGVyc1wiO1xuaW1wb3J0IHtDb250ZW50QXRvbSwgU2Nyb2xsYmFyQXRvbX0gZnJvbSBcIi4uL2luZGV4LmF0b21cIjtcbmltcG9ydCB7QXRvbX0gZnJvbSBcIkBzb2xhcndpbmRzL3V6aVwiO1xuXG4vL3JlZ2lvbiBUZXN0IGNhc2VzXG5kZXNjcmliZShcIlVTRVJDT05UUk9MIGNvbnRlbnQ6IFwiLCAoKSA9PiB7XG4gICAgbGV0IGF0b206IENvbnRlbnRBdG9tO1xuXG4gICAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgICAgIEhlbHBlcnMucHJlcGFyZUJyb3dzZXIoXCJjb250ZW50XCIpO1xuICAgICAgICBjb25zdCBzZWN0aW9uID0gZWxlbWVudChieS5pZChcImNvbnRlbnQtcGFnZVwiKSk7XG4gICAgICAgIGF0b20gPSBBdG9tLmZpbmRJbihDb250ZW50QXRvbSwgc2VjdGlvbik7XG4gICAgfSk7XG5cbiAgICBpdChcInNob3VsZCBiZSBjbGlja2FibGUgcmFkaW9idXR0b24gaW5zaWRlXCIsICgpID0+IHtcbiAgICAgICAgY29uc3QgdGVzdFNlY3Rpb24gPSBlbGVtZW50KGJ5LmlkKFwieHVpLWRlbW8tY29udGVudC1saXN0LW9mLWNoZWNrYm94ZXMtbGFyZ2VcIikpO1xuICAgICAgICBjb25zdCBpbnB1dCA9IHRlc3RTZWN0aW9uLmVsZW1lbnQoYnkueHBhdGgoXCIvLypbQGNsYXNzPSd4dWktY29udGVudC10cmFuc2NsdWRlJ10vdWwvbGlbMTZdLy9pbnB1dFwiKSk7XG4gICAgICAgIGNvbnN0IHNjcm9sbGJhckF0b20gPSBBdG9tLmZpbmRJbihTY3JvbGxiYXJBdG9tLCB0ZXN0U2VjdGlvbik7XG4gICAgICAgIGV4cGVjdChpbnB1dC5pc0Rpc3BsYXllZCgpKS50b0VxdWFsKHRydWUpO1xuICAgICAgICBpbnB1dC5jbGljaygpO1xuICAgICAgICBleHBlY3QoaW5wdXQuaXNFbmFibGVkKCkpLnRvRXF1YWwodHJ1ZSk7XG4gICAgfSk7XG5cbiAgICBpdChcInNob3VsZCBoYXZlIHNjcm9sbGJhclwiLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHRlc3RTZWN0aW9uID0gZWxlbWVudChieS5pZChcInh1aS1kZW1vLWNvbnRlbnQtdGV4dFwiKSk7XG4gICAgICAgIGNvbnN0IGNvbnRlbnQgPSB0ZXN0U2VjdGlvbi5lbGVtZW50KGJ5LmNsYXNzTmFtZShcInh1aS1jb250ZW50XCIpKTtcbiAgICAgICAgY29uc3Qgc2Nyb2xsYmFyQXRvbSA9IEF0b20uZmluZEluKFNjcm9sbGJhckF0b20sIGNvbnRlbnQpO1xuICAgICAgICBleHBlY3Qoc2Nyb2xsYmFyQXRvbSkudG9CZURlZmluZWQoKTtcbiAgICAgICAgZXhwZWN0KHNjcm9sbGJhckF0b20uaGFzU2Nyb2xsYmFyKGNvbnRlbnQpKS50b0JlKHRydWUpO1xuICAgIH0pO1xufSk7XG4vL2VuZHJlZ2lvblxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
