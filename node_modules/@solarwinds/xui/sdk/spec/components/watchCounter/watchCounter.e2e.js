"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const protractor_1 = require("@solarwinds/uzi/protractor");
const helpers_1 = require("../helpers");
const uzi_1 = require("@solarwinds/uzi");
const index_atom_1 = require("../index.atom");
describe("USERCONTROL watchCounter", () => {
    let badgeDiv;
    let badgeHover;
    const backgroundRed = "rgba(213, 0, 0, 1)";
    const textWhite = "rgba(255, 255, 255, 1)";
    const outlineStyle = "rgb(213, 0, 0) dashed 1px";
    beforeEach(() => {
        helpers_1.default.prepareBrowser("watchCounter");
        protractor_1.browser.ignoreSynchronization = true;
        badgeDiv = uzi_1.Atom.findIn(index_atom_1.WatchCounterAtom, protractor_1.element(protractor_1.by.id("watch-counter-checkbox")));
    });
    afterEach(() => {
        protractor_1.browser.ignoreSynchronization = false;
    });
    it("badge should be displayed", () => {
        expect(badgeDiv.isDisplayed()).toBe(true);
    });
    it("should be red in background", () => {
        expect(badgeDiv.getBackgroundColor()).toBe(backgroundRed);
    });
    it("should be white for text color", () => {
        expect(badgeDiv.getTextColor()).toBe(textWhite);
    });
    it("should be number", () => {
        expect(badgeDiv.getTextNum()).toMatch(/^\d+$/);
    });
    it("should be red dashed for outline in background", () => {
        badgeDiv.mouseHover().then(() => {
            badgeHover = index_atom_1.WatchCounterAtom.getBadge();
            expect(badgeHover.getBorderStyle()).toBe(outlineStyle);
        });
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvd2F0Y2hDb3VudGVyL3dhdGNoQ291bnRlci5lMmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwyREFBeUU7QUFDekUsd0NBQWlDO0FBQ2pDLHlDQUFxQztBQUNyQyw4Q0FBK0M7QUFFL0MsUUFBUSxDQUFDLDBCQUEwQixFQUFFLEdBQUcsRUFBRTtJQUV0QyxJQUFJLFFBQTBCLENBQUM7SUFDL0IsSUFBSSxVQUE0QixDQUFDO0lBQ2pDLE1BQU0sYUFBYSxHQUFHLG9CQUFvQixDQUFDO0lBQzNDLE1BQU0sU0FBUyxHQUFHLHdCQUF3QixDQUFDO0lBQzNDLE1BQU0sWUFBWSxHQUFHLDJCQUEyQixDQUFDO0lBRWpELFVBQVUsQ0FBQyxHQUFHLEVBQUU7UUFDWixpQkFBTyxDQUFDLGNBQWMsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUN2QyxvQkFBTyxDQUFDLHFCQUFxQixHQUFHLElBQUksQ0FBQztRQUNyQyxRQUFRLEdBQUcsVUFBSSxDQUFDLE1BQU0sQ0FBQyw2QkFBZ0IsRUFBRSxvQkFBTyxDQUFDLGVBQUUsQ0FBQyxFQUFFLENBQUMsd0JBQXdCLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFdkYsQ0FBQyxDQUFDLENBQUM7SUFFSCxTQUFTLENBQUMsR0FBRyxFQUFFO1FBQ1gsb0JBQU8sQ0FBQyxxQkFBcUIsR0FBRyxLQUFLLENBQUM7SUFDMUMsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsMkJBQTJCLEVBQUUsR0FBRyxFQUFFO1FBQ2pDLE1BQU0sQ0FBQyxRQUFRLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDOUMsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsNkJBQTZCLEVBQUUsR0FBRyxFQUFFO1FBQ25DLE1BQU0sQ0FBQyxRQUFRLENBQUMsa0JBQWtCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUM5RCxDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyxnQ0FBZ0MsRUFBRSxHQUFHLEVBQUU7UUFDdEMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNwRCxDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyxrQkFBa0IsRUFBRSxHQUFHLEVBQUU7UUFDeEIsTUFBTSxDQUFDLFFBQVEsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNuRCxDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyxnREFBZ0QsRUFBRSxHQUFHLEVBQUU7UUFDdEQsUUFBUSxDQUFDLFVBQVUsRUFBRSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUU7WUFDNUIsVUFBVSxHQUFHLDZCQUFnQixDQUFDLFFBQVEsRUFBRSxDQUFDO1lBQ3pDLE1BQU0sQ0FBQyxVQUFVLENBQUMsY0FBYyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDM0QsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDLENBQUMsQ0FBQztBQUNQLENBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6ImNvbXBvbmVudHMvd2F0Y2hDb3VudGVyL3dhdGNoQ291bnRlci5lMmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2Jyb3dzZXIsIGJ5LCBlbGVtZW50LCBwcm9taXNlfSBmcm9tIFwiQHNvbGFyd2luZHMvdXppL3Byb3RyYWN0b3JcIjtcbmltcG9ydCBIZWxwZXJzIGZyb20gXCIuLi9oZWxwZXJzXCI7XG5pbXBvcnQge0F0b219IGZyb20gXCJAc29sYXJ3aW5kcy91emlcIjtcbmltcG9ydCB7V2F0Y2hDb3VudGVyQXRvbX0gZnJvbSBcIi4uL2luZGV4LmF0b21cIjtcblxuZGVzY3JpYmUoXCJVU0VSQ09OVFJPTCB3YXRjaENvdW50ZXJcIiwgKCkgPT4ge1xuXG4gICAgbGV0IGJhZGdlRGl2OiBXYXRjaENvdW50ZXJBdG9tO1xuICAgIGxldCBiYWRnZUhvdmVyOiBXYXRjaENvdW50ZXJBdG9tO1xuICAgIGNvbnN0IGJhY2tncm91bmRSZWQgPSBcInJnYmEoMjEzLCAwLCAwLCAxKVwiO1xuICAgIGNvbnN0IHRleHRXaGl0ZSA9IFwicmdiYSgyNTUsIDI1NSwgMjU1LCAxKVwiO1xuICAgIGNvbnN0IG91dGxpbmVTdHlsZSA9IFwicmdiKDIxMywgMCwgMCkgZGFzaGVkIDFweFwiO1xuXG4gICAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgICAgIEhlbHBlcnMucHJlcGFyZUJyb3dzZXIoXCJ3YXRjaENvdW50ZXJcIik7XG4gICAgICAgIGJyb3dzZXIuaWdub3JlU3luY2hyb25pemF0aW9uID0gdHJ1ZTtcbiAgICAgICAgYmFkZ2VEaXYgPSBBdG9tLmZpbmRJbihXYXRjaENvdW50ZXJBdG9tLCBlbGVtZW50KGJ5LmlkKFwid2F0Y2gtY291bnRlci1jaGVja2JveFwiKSkpO1xuXG4gICAgfSk7XG5cbiAgICBhZnRlckVhY2goKCkgPT4ge1xuICAgICAgICBicm93c2VyLmlnbm9yZVN5bmNocm9uaXphdGlvbiA9IGZhbHNlO1xuICAgIH0pO1xuXG4gICAgaXQoXCJiYWRnZSBzaG91bGQgYmUgZGlzcGxheWVkXCIsICgpID0+IHtcbiAgICAgICAgZXhwZWN0KGJhZGdlRGl2LmlzRGlzcGxheWVkKCkpLnRvQmUodHJ1ZSk7XG4gICAgfSk7XG5cbiAgICBpdChcInNob3VsZCBiZSByZWQgaW4gYmFja2dyb3VuZFwiLCAoKSA9PiB7XG4gICAgICAgIGV4cGVjdChiYWRnZURpdi5nZXRCYWNrZ3JvdW5kQ29sb3IoKSkudG9CZShiYWNrZ3JvdW5kUmVkKTtcbiAgICB9KTtcblxuICAgIGl0KFwic2hvdWxkIGJlIHdoaXRlIGZvciB0ZXh0IGNvbG9yXCIsICgpID0+IHtcbiAgICAgICAgZXhwZWN0KGJhZGdlRGl2LmdldFRleHRDb2xvcigpKS50b0JlKHRleHRXaGl0ZSk7XG4gICAgfSk7XG5cbiAgICBpdChcInNob3VsZCBiZSBudW1iZXJcIiwgKCkgPT4ge1xuICAgICAgICBleHBlY3QoYmFkZ2VEaXYuZ2V0VGV4dE51bSgpKS50b01hdGNoKC9eXFxkKyQvKTtcbiAgICB9KTtcblxuICAgIGl0KFwic2hvdWxkIGJlIHJlZCBkYXNoZWQgZm9yIG91dGxpbmUgaW4gYmFja2dyb3VuZFwiLCAoKSA9PiB7XG4gICAgICAgIGJhZGdlRGl2Lm1vdXNlSG92ZXIoKS50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIGJhZGdlSG92ZXIgPSBXYXRjaENvdW50ZXJBdG9tLmdldEJhZGdlKCk7XG4gICAgICAgICAgICBleHBlY3QoYmFkZ2VIb3Zlci5nZXRCb3JkZXJTdHlsZSgpKS50b0JlKG91dGxpbmVTdHlsZSk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufSk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
