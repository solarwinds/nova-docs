"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const protractor_1 = require("@solarwinds/uzi/protractor");
const index_atom_1 = require("../index.atom");
const uzi_1 = require("@solarwinds/uzi");
const helpers_1 = require("../helpers");
describe("USERCONTROL progress", () => {
    let atom;
    beforeEach(() => {
        helpers_1.default.prepareBrowser("progress");
        atom = uzi_1.Atom.findIn(index_atom_1.ProgressAtom, undefined, 0);
        protractor_1.element(protractor_1.by.className("xui-demo-start-progress-btn")).click();
    });
    it("bar should have value greater than 0", () => {
        expect(atom.getWidth()).toBeGreaterThan(0);
    });
    it("should show cancel button when allow-cancel is true and hide when false", () => {
        const thickAtom = uzi_1.Atom.findIn(index_atom_1.ProgressAtom, undefined, 0);
        expect(thickAtom.canCancel()).toBe(true);
        const thinAtom = uzi_1.Atom.findIn(index_atom_1.ProgressAtom, undefined, 1);
        expect(thinAtom.canCancel()).toBe(false);
    });
    it("should handle onCancel() callback", () => {
        atom.cancelProgress();
        expect(protractor_1.element(protractor_1.by.className("cancel-clicked")).isPresent()).toBe(true);
    });
    it("thin mode should be thin", () => {
        const thickAtom = uzi_1.Atom.findIn(index_atom_1.ProgressAtom, undefined, 0);
        expect(thickAtom.getActualHeight()).toBeGreaterThan(50);
        const thinAtom = uzi_1.Atom.findIn(index_atom_1.ProgressAtom, undefined, 1);
        expect(thinAtom.getActualHeight()).toBeLessThan(30);
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvcHJvZ3Jlc3MvcHJvZ3Jlc3MuZTJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMkRBQWtFO0FBQ2xFLDhDQUE2QztBQUM3Qyx5Q0FBdUM7QUFDdkMsd0NBQWlDO0FBRWpDLFFBQVEsQ0FBQyxzQkFBc0IsRUFBRSxHQUFHLEVBQUU7SUFDbEMsSUFBSSxJQUFrQixDQUFDO0lBRXZCLFVBQVUsQ0FBQyxHQUFHLEVBQUU7UUFDWixpQkFBTyxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUNuQyxJQUFJLEdBQUcsVUFBSSxDQUFDLE1BQU0sQ0FBQyx5QkFBWSxFQUFFLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUMvQyxvQkFBTyxDQUFDLGVBQUUsQ0FBQyxTQUFTLENBQUMsNkJBQTZCLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ2pFLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLHNDQUFzQyxFQUFFLEdBQUcsRUFBRTtRQUM1QyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQy9DLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLHlFQUF5RSxFQUFFLEdBQUcsRUFBRTtRQUMvRSxNQUFNLFNBQVMsR0FBRyxVQUFJLENBQUMsTUFBTSxDQUFDLHlCQUFZLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzFELE1BQU0sQ0FBQyxTQUFTLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekMsTUFBTSxRQUFRLEdBQUcsVUFBSSxDQUFDLE1BQU0sQ0FBQyx5QkFBWSxFQUFFLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUN6RCxNQUFNLENBQUMsUUFBUSxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzdDLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLG1DQUFtQyxFQUFFLEdBQUcsRUFBRTtRQUN6QyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDdEIsTUFBTSxDQUFDLG9CQUFPLENBQUMsZUFBRSxDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0UsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsMEJBQTBCLEVBQUUsR0FBRyxFQUFFO1FBQ2hDLE1BQU0sU0FBUyxHQUFHLFVBQUksQ0FBQyxNQUFNLENBQUMseUJBQVksRUFBRSxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDMUQsTUFBTSxDQUFDLFNBQVMsQ0FBQyxlQUFlLEVBQUUsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN4RCxNQUFNLFFBQVEsR0FBRyxVQUFJLENBQUMsTUFBTSxDQUFDLHlCQUFZLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3pELE1BQU0sQ0FBQyxRQUFRLENBQUMsZUFBZSxFQUFFLENBQUMsQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDeEQsQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJjb21wb25lbnRzL3Byb2dyZXNzL3Byb2dyZXNzLmUyZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJ5LCBlbGVtZW50LCBwcm9taXNlIH0gZnJvbSBcIkBzb2xhcndpbmRzL3V6aS9wcm90cmFjdG9yXCI7XG5pbXBvcnQgeyBQcm9ncmVzc0F0b20gfSBmcm9tIFwiLi4vaW5kZXguYXRvbVwiO1xuaW1wb3J0IHsgQXRvbSB9IGZyb20gXCJAc29sYXJ3aW5kcy91emlcIjtcbmltcG9ydCBIZWxwZXJzIGZyb20gXCIuLi9oZWxwZXJzXCI7XG5cbmRlc2NyaWJlKFwiVVNFUkNPTlRST0wgcHJvZ3Jlc3NcIiwgKCkgPT4ge1xuICAgIGxldCBhdG9tOiBQcm9ncmVzc0F0b207XG5cbiAgICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICAgICAgSGVscGVycy5wcmVwYXJlQnJvd3NlcihcInByb2dyZXNzXCIpO1xuICAgICAgICBhdG9tID0gQXRvbS5maW5kSW4oUHJvZ3Jlc3NBdG9tLCB1bmRlZmluZWQsIDApO1xuICAgICAgICBlbGVtZW50KGJ5LmNsYXNzTmFtZShcInh1aS1kZW1vLXN0YXJ0LXByb2dyZXNzLWJ0blwiKSkuY2xpY2soKTtcbiAgICB9KTtcblxuICAgIGl0KFwiYmFyIHNob3VsZCBoYXZlIHZhbHVlIGdyZWF0ZXIgdGhhbiAwXCIsICgpID0+IHtcbiAgICAgICAgZXhwZWN0KGF0b20uZ2V0V2lkdGgoKSkudG9CZUdyZWF0ZXJUaGFuKDApO1xuICAgIH0pO1xuXG4gICAgaXQoXCJzaG91bGQgc2hvdyBjYW5jZWwgYnV0dG9uIHdoZW4gYWxsb3ctY2FuY2VsIGlzIHRydWUgYW5kIGhpZGUgd2hlbiBmYWxzZVwiLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHRoaWNrQXRvbSA9IEF0b20uZmluZEluKFByb2dyZXNzQXRvbSwgdW5kZWZpbmVkLCAwKTtcbiAgICAgICAgZXhwZWN0KHRoaWNrQXRvbS5jYW5DYW5jZWwoKSkudG9CZSh0cnVlKTtcbiAgICAgICAgY29uc3QgdGhpbkF0b20gPSBBdG9tLmZpbmRJbihQcm9ncmVzc0F0b20sIHVuZGVmaW5lZCwgMSk7XG4gICAgICAgIGV4cGVjdCh0aGluQXRvbS5jYW5DYW5jZWwoKSkudG9CZShmYWxzZSk7XG4gICAgfSk7XG5cbiAgICBpdChcInNob3VsZCBoYW5kbGUgb25DYW5jZWwoKSBjYWxsYmFja1wiLCAoKSA9PiB7XG4gICAgICAgIGF0b20uY2FuY2VsUHJvZ3Jlc3MoKTtcbiAgICAgICAgZXhwZWN0KGVsZW1lbnQoYnkuY2xhc3NOYW1lKFwiY2FuY2VsLWNsaWNrZWRcIikpLmlzUHJlc2VudCgpKS50b0JlKHRydWUpO1xuICAgIH0pO1xuXG4gICAgaXQoXCJ0aGluIG1vZGUgc2hvdWxkIGJlIHRoaW5cIiwgKCkgPT4ge1xuICAgICAgICBjb25zdCB0aGlja0F0b20gPSBBdG9tLmZpbmRJbihQcm9ncmVzc0F0b20sIHVuZGVmaW5lZCwgMCk7XG4gICAgICAgIGV4cGVjdCh0aGlja0F0b20uZ2V0QWN0dWFsSGVpZ2h0KCkpLnRvQmVHcmVhdGVyVGhhbig1MCk7XG4gICAgICAgIGNvbnN0IHRoaW5BdG9tID0gQXRvbS5maW5kSW4oUHJvZ3Jlc3NBdG9tLCB1bmRlZmluZWQsIDEpO1xuICAgICAgICBleHBlY3QodGhpbkF0b20uZ2V0QWN0dWFsSGVpZ2h0KCkpLnRvQmVMZXNzVGhhbigzMCk7XG4gICAgfSk7ICAgIFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
