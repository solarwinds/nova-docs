import { Pipe, PipeTransform } from "@angular/core";
import { DomSanitizer, SafeHtml } from "@angular/platform-browser";

/**
 * Filter used for highlighting of part of plain text in case of search. Returns HTML.
 * It is recommended to be used with `innerHTML` directive.
 *
 * __Parameters :__
 *
 *   text - The source text.
 *
 *   search - The search term to be highlighted.
 *
 * __Usage :__
 *   highlight | xuiHighlight:search
 *
 * __Example :__
 *   <code>{{ "hello world" | xuiHighlight:"world" }}</code>
 *   formats to: <code>hello < /span class="xui-highlighted"> world </ span></code>
 */
@Pipe({
    name: "xuiHighlight"
})
export class HighlightPipe implements PipeTransform {
    constructor(private sanitizer: DomSanitizer) {}

    public transform(text: string, search: string): SafeHtml {
        if (!_.isString(search) || _.isEmpty(search)) {
            return this.sanitizer.bypassSecurityTrustHtml(text);
        }

        // escaping search string to be used as Regex pattern
        const escSearch = search.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
        return this.sanitizer.bypassSecurityTrustHtml(text.replace(new RegExp(escSearch, "gi"),
            `<span class=\"xui-highlighted\">$&</span>`));
    }
}
