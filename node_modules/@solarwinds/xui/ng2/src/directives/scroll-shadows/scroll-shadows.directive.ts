import {
    Directive,
    ElementRef,
    Renderer2,
    OnInit,
    OnDestroy
} from "@angular/core";
import { Observable } from "rxjs/Rx";
import { Subject } from "rxjs/Subject";
import { async } from "rxjs/scheduler/async";
import "rxjs/add/operator/throttleTime";

/**
 * <example-url>./../../../demo/index.html#/scroll-shadows</example-url>
 */
@Directive({ selector: "[xuiScrollShadows]" })
export class ScrollShadowsDirective implements OnInit, OnDestroy {
    constructor(private element: ElementRef,
                private renderer: Renderer2) {}

    private ngUnsubscribe: Subject<void> = new Subject<void>();

    public ngOnInit() {
        const scrollBlock: HTMLElement = this.element.nativeElement.firstElementChild;
        // add shadows when link is called
        this.setShadows(scrollBlock);
        // change shadows on scroll
        Observable.fromEvent(scrollBlock, "scroll")
            .takeUntil(this.ngUnsubscribe)
            .throttleTime(100, async, { leading: true, trailing: true })
            .subscribe(() => {
                this.setShadows(scrollBlock);
            });
    }

    public ngOnDestroy() {
        this.ngUnsubscribe.next();
        this.ngUnsubscribe.complete();
    }

    private setShadows(scrollBlock: HTMLElement) {
        const shadowTop = "xui-scroll-shadow-top";
        const shadowBottom = "xui-scroll-shadow-bottom";

        let maxScrollTop = scrollBlock.scrollHeight - scrollBlock.clientHeight;

        // don't add shadows if scrollBlock hasn't scrollbar
        if (maxScrollTop === 0) {
            return;
        }

        switch (scrollBlock.scrollTop) {
            case 0:
                this.renderer.removeClass(scrollBlock, shadowTop);
                this.renderer.addClass(scrollBlock, shadowBottom);
                break;

            case maxScrollTop:
                this.renderer.removeClass(scrollBlock, shadowBottom);
                this.renderer.addClass(scrollBlock, shadowTop);
                break;

            default:
                this.renderer.addClass(scrollBlock, shadowTop);
                this.renderer.addClass(scrollBlock, shadowBottom);
                break;
        }
    }
}
