import { Renderer2, RendererStyleFlags2 } from "@angular/core";

export class Renderer2Mock implements Renderer2 {
    data: { [key: string]: any; };

    public destroy(): void {
        throw new Error("Method not implemented.");
    }

    public createElement(name: string, namespace?: string) {
        throw new Error("Method not implemented.");
    }

    public createComment(value: string) {
        throw new Error("Method not implemented.");
    }

    public createText(value: string) {
        throw new Error("Method not implemented.");
    }

    public destroyNode: (node: any) => void;

    public appendChild(parent: any, newChild: any): void {
        throw new Error("Method not implemented.");
    }

    public insertBefore(parent: any, newChild: any, refChild: any): void {
        throw new Error("Method not implemented.");
    }

    public removeChild(parent: any, oldChild: any): void {
        throw new Error("Method not implemented.");
    }

    public selectRootElement(selectorOrNode: any) {
        throw new Error("Method not implemented.");
    }

    public parentNode(node: any) {
        throw new Error("Method not implemented.");
    }

    public nextSibling(node: any) {
        throw new Error("Method not implemented.");
    }

    public setAttribute(el: any, name: string, value: string, namespace?: string): void {
        throw new Error("Method not implemented.");
    }

    public removeAttribute(el: any, name: string, namespace?: string): void {
        throw new Error("Method not implemented.");
    }

    public addClass(el: any, name: string): void {
        throw new Error("Method not implemented.");
    }

    public removeClass(el: any, name: string): void {
        throw new Error("Method not implemented.");
    }

    public setStyle(el: any, style: string, value: any, flags?: RendererStyleFlags2): void {
        throw new Error("Method not implemented.");
    }

    public removeStyle(el: any, style: string, flags?: RendererStyleFlags2): void {
        throw new Error("Method not implemented.");
    }

    public setProperty(el: any, name: string, value: any): void {
        el[name] = value;
    }

    public setValue(node: any, value: string): void {
        throw new Error("Method not implemented.");
    }

    public listen(target: any, eventName: string, callback: (event: any) => boolean | void): () => void {
        throw new Error("Method not implemented.");
    }

}
