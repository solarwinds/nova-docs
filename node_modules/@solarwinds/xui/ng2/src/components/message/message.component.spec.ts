import { MessageComponent } from "./message.component";
import { Renderer2Mock } from "../../renderer2-mock";

describe("components >", () => {

    describe("message >", () => {

        const renderer = new Renderer2Mock();
        const INFO = "info";

        let subject: MessageComponent;

        beforeEach(() => {
            subject = new MessageComponent({ nativeElement: document.createElement("div") }, renderer);
        });

        it("returns no class names when type is unspecified", () => {
            expect(subject.messageClass).toEqual("");
            expect(subject.icon).toEqual(MessageComponent.UNKNOWN_ICON);
        });

        it("returns expected class name and icon name when type is specified", () => {
            subject.type = INFO;
            expect(subject.messageClass).toEqual(`xui-message-${INFO}`);
            expect(subject.icon).toEqual(MessageComponent.ICON_MAP[INFO]);
        });

        it("should get animation duration in number and string formats", () => {
            const duration = <number>MessageComponent.getAnimationDuration();
            const durationStr = `${duration / 1000}s`;

            expect(MessageComponent.getAnimationDuration(true)).toEqual(durationStr);
        });

    });

});
