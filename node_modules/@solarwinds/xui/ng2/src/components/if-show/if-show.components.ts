import {ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges} from "@angular/core";

/**
 * <example-url>./../../../demo/index.html#/if-show</example-url>
 */
@Component({
    selector: "xui-if-show",
    template: require<string>("./if-show.components.html")
})

export class IfShowComponent implements OnChanges {

    public hasBeenShown: boolean = false;
    public showNgIf: boolean;
    public showNgShow: boolean;

    @Input() visible: boolean;

    public ngOnChanges(changes: SimpleChanges) {
        if (!changes["visible"]) {
            return;
        }
        this.onVisibleChanged(changes.visible.currentValue);
    }

    public onVisibleChanged = (visible: boolean): void => {
        if (!this.hasBeenShown) {

            this.hasBeenShown = visible;
            this.showNgIf = this.showNgShow = visible;

        } else {
            // only ng-show is used in upcoming showing/hiding
            this.showNgShow = visible;
        }
    };
}
