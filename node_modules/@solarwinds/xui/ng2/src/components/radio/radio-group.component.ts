import {
    Component,
    Input,
    Output,
    EventEmitter,
    ContentChildren,
    AfterContentInit,
    OnDestroy,
    QueryList,
    Renderer2
} from "@angular/core";

import { RadioComponent } from "./radio.component";

/**
 * Examples: <example-url>./../../../demo/index.html#/radio-group</example-url><br />
 * Gets and stores value of selected xui-radio
 */
@Component({
    selector: "xui-radio-group",
    template: `<div class="xui-radio-group"><ng-content></ng-content></div>`
})
export class RadioGroupComponent implements AfterContentInit, OnDestroy {
    /**
     * Sets "name" attribute for inner input element of xui-radio
     */
    @Input() public name: string;
    /**
     * Stores value from selected xui-radio
     */
    @Input() public value: any;
    /**
     * Is emitted when xui-radio is selected
     */
    @Output() public valueChange = new EventEmitter<any>();

    @ContentChildren(RadioComponent) private children: QueryList<RadioComponent>;

    constructor(private renderer: Renderer2) {}

    public ngAfterContentInit(): void {
        this.children.toArray().forEach((child) => {
            this.renderer.setAttribute(child.inputViewContainer.element.nativeElement, "name", this.name);

            child.valueChange.subscribe((value: any) => {
                this.value = value;
                this.valueChange.emit(value);
            });
        });
    }

    public ngOnDestroy(): void {
        this.valueChange.unsubscribe();
    }

}
