import {
    Component,
    Input,
    Output,
    EventEmitter,
    ViewChild,
    ViewContainerRef,
    OnInit,
    OnDestroy
} from "@angular/core";

/**
 * Should be used only within xui-radio-group.
 */
@Component({
    selector: "xui-radio",
    template: require<string>("./radio.component.html")
})
export class RadioComponent implements OnInit, OnDestroy {
    /**
     * Sets inner input value attribute
     */
    @Input() public value: any;
    /**
     * Is emitted if select input
     */
    @Output() public valueChange = new EventEmitter<any>();

    @Input() public hovered: boolean;
    /**
     * Adds "checked" attribute to inner input element (select by default)
     */
    @Input() public checked?: boolean;
    /**
     * Adds "disabled" attribute to inner input element
     */
    @Input() public disabled?: boolean;
    /**
     * Adds hint text under radio button
     */
    @Input() public hint?: string;

    @ViewChild("inputViewContainer", { read: ViewContainerRef })
    public inputViewContainer: ViewContainerRef;

    private timeoutId: number;

    public ngOnInit(): void {
        if (this.checked) {
            // xui-radio-group should subscribe before event is emitted
            this.timeoutId = setTimeout(() => {
                this.valueChange.emit(this.value);
            }, 0);
        }
    }

    public ngOnDestroy(): void {
        clearTimeout(this.timeoutId);
    }

    public hoverHandler(): void {
        this.hovered = !this.hovered;
    }

    public changeHandler(): void {
        this.valueChange.emit(this.value);
    }

}
