/**
 * __Description:__ Represents configuration set for toasts
 */
export interface IToastConfig {
    /**
     * toast time to live in milliseconds
     * default: 5000
     */
    timeOut?: number;
    /**
     * toast show close button
     * default: false
     */
    closeButton?: boolean;
    /** time to close after a user hovers over toast */
    /**
     * show toast progress bar
     * default: false
     */
    extendedTimeOut?: number;
    /**
     * show toast progress bar
     * default: false
     */
    progressBar?: boolean;

    /**
     * changes toast progress bar animation
     * default: decreasing
     */
    progressAnimation?: "increasing" | "decreasing";
    /**
     * render html in toast message (possibly unsafe)
     * default: false
     */
    enableHtml?: boolean;
    /**
     * css class on toast component
     * default: toast
     */
    toastClass?: string;
    /**
     * css class on toast container
     * default: toast-top-right
     */
    positionClass?: string;
    /**
     * css class on to toast title
     * default: toast-title
     */
    titleClass?: string;
    /**
     * css class on to toast title
     * default: toast-title
     */
    bodyClass?: string;
    /**
     * clicking on toast dismisses it
     * default: true
     */
    clickToDismiss?: boolean;
    /**
     * prevents error message from close
     * default: false
     */
    stickyError?: boolean;
    /**
     * max toasts opened. Toasts will be queued
     * Zero is unlimited
     * default: 0
     */
    maxOpened?: number;
    /**
     * dismiss current toast when max is reached
     * default: false
     */
    autoDismiss?: boolean;
    /**
     * classes will be used for icons
     */
    iconClasses?: IToastIconClasses;
    /**
     * New toast placement
     * default: true
     */
    newestOnTop?: boolean;
    /**
     * block duplicate messages
     * default: false
     */
    preventDuplicates?: boolean;
}

/**
 * Includes icons that corresponds to a toast types
 */
export interface IToastIconClasses {
    error?: string;
    info?: string;
    success?: string;
    warning?: string;
}
