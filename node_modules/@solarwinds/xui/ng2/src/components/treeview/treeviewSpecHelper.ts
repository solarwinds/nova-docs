import {VirtualNode} from "./treeview.service";

class TreeviewSpecHelper {
    static generateTree = (count:number, depth:number, children?:any[], callbackFn?:any,
                           trackById?:string): VirtualNode[] => {
        if (depth <= 0) {
            return;
        }
        if (_.isUndefined(children)) {
            children = [];
        }
        for (let i = 0; i < count; i++) {
            let node = {label: "Node" + (i + 1), children: <any>null};

            if (_.isString(trackById)) {
                (<any>node)[trackById] = "id_" + i;
            }

            if (depth > 1) {
                node.children = [];
            }
            if (_.isFunction(callbackFn)) {
                callbackFn(node);
            }
            children.push(node);
            TreeviewSpecHelper.generateTree(count, depth - 1, node.children, callbackFn, trackById);
        }
        return children;
    };
}

export default TreeviewSpecHelper;
