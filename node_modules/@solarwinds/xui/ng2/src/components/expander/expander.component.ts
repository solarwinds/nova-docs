import {Component, Input, Output, EventEmitter} from "@angular/core";
import {trigger, state, style, animate, transition} from "@angular/animations";

/**
 * <example-url>./../../../demo/index.html#/expander</example-url>
 */
@Component({
    selector: "xui-expander",
    template: require<string>("./expander.component.html"),
    animations: [
        trigger("expandedState", [
            state("expanded", style({height: "*"})),
            state("collapsed", style({height: 0})),
            transition("expanded <=> collapsed", [
                animate("350ms ease-in-out")
            ])
        ])
    ]
})
export class ExpanderComponent {

    @Input() disabled: boolean = false;
    @Input() icon: string = "";
    @Input() header: string = "";
    @Output() openChange: EventEmitter<boolean> = new EventEmitter<boolean>();
    state: "expanded" | "collapsed" = "collapsed";
    renderBody: boolean = false;

    toggle(): void {
        if (!this.disabled) {
            this.open = !this.open;
            this.openChange.emit(this.open);
        }
    }

    @Input() set open(value: boolean) {
        const previousValue: boolean = this.state === "expanded";
        if (previousValue !== value) {
            this.state = value ? "expanded" : "collapsed";
            if (value) {
                this.renderBody = true;
            }
        }
    }

    get open(): boolean {
        return this.state === "expanded";
    }

    expandedStateDone(): void {
        if (!this.open) {
            this.renderBody = false;
        }
    }
}
