import {
    Component,
    EventEmitter,
    Input,
    Output,
    OnDestroy,
    OnInit
} from "@angular/core";

/**
 * Component that provides wizard step functionality.
 */

@Component({
    selector: "xui-wizard-step",
    template: require<string>("./wizard-step.component.html")
})
export class WizardStepComponent implements OnInit, OnDestroy {

    /**
     * The label that identifies the step.
     */
    @Input() public label: string;

    /**
     * The title of the step.
     */
    @Input() public title: string;

    /**
     * A more compact form of the title (ex: "EULA").
     */
    @Input() public shortTitle: string;

    /**
     * The description of the step.
     */
    @Input() public description: string;

    /**
     * Default:'Next'. Text for the Next button.
     */
    @Input() public nextText: string;

    /**
     * Evaluated when the step is entered.
     */
    @Output() public enter = new EventEmitter<void>();

    /**
     * Evaluated when the step is exited.
     */
    @Output() public exit = new EventEmitter<void>();

    /**
     * Evaluated when the step is destroyed.
     */
    @Output() public destroy = new EventEmitter<WizardStepComponent>();

    /**
     * Evaluated when the step is destroyed.
     */
    @Output() public addStep = new EventEmitter<WizardStepComponent>();

    public visited = false;
    public active = false;
    public complete = false;
    public icon = "step";

    public ngOnInit(): void {
        this.nextText = "Next";
        this.addStep.emit(this);
    }

    public ngOnDestroy(): void {
        this.destroy.emit(this);
    }

    /**
     * Set flags for step entering and emits enter event
     */
    public enterStep = (): void => {
        this.enter.emit();
        this.active = true;
        this.visited = true;
        this.icon = "step-active";
    };

    /**
     * Set flags for step exiting and emits exit event
     */
    public exitStep = (): void => {
        this.exit.emit();
        this.active = false;
        this.icon = "step-complete";
    };
}
