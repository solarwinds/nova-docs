/**
 *  Welcome to the gulpfile!
 */

"use strict";

const gulp = require("gulp");

function ngExternal(ns) {
    let ng2Ns = `@angular/${ns}`,
        nsParts = ["ng"].concat(ns.split("/"));
	return {root: nsParts, commonjs: ng2Ns, commonjs2: ng2Ns, amd: ng2Ns};
}

function rxjsExternal(context, request, cb) {
    if (/^rxjs\/add\/observable\//.test(request)) {
        return cb(null, {root: ["Rx", "Observable"], commonjs: request, commonjs2: request, amd: request});
    } else if (/^rxjs\/add\/operator\//.test(request)) {
        return cb(null, {root: ["Rx", "Observable", "prototype"], commonjs: request, commonjs2: request, amd: request});
    } else if (/^rxjs\//.test(request)) {
        return cb(null, {root: ["Rx"], commonjs: request, commonjs2: request, amd: request});
    }
    cb();
}

// --- buildmeister stuff ---
const config = {
    projects: [
        {
            name: "ng2",
            webpack: {
                entry: {
                    "xui": [
                        "./styles.less",
                        "./component-styles.less",
                        "./index.ts"
                    ],
                    "polyfills": "./polyfills.ts",
					"spec-resources": "./spec-resources.ts"
                },
                output: {
                    library: "Xui"
                },
                externals: [
                    {
                        "@angular/core": ngExternal("core"),
                        "@angular/common": ngExternal("common"),
                        "@angular/forms": ngExternal("forms"),
                        "@angular/platform-browser": ngExternal("platformBrowser"),
                        "@angular/platform-browser-dynamic": ngExternal("platformBrowserDynamic"),
						"@angular/animations": ngExternal("animations"),
					    "@angular/animations/browser": ngExternal("animations/browser"),
	                    "@angular/platform-browser/animations": ngExternal("platformBrowser/animations")
                    },
                    rxjsExternal
                ]
            },
            resources: require("./config/resources.json")
        },
        {
            name: "ng2-demo",
            root: "demo",
            webpack: {
                entry: {
                    demo: [
                        "./styles.less",
                        "./index.ts"
                    ]
                },
                output: {
                    library: "XuiDemo"
                },
                externals: [
                    {
                        "xui": {
                            root: ["Xui"],
                            commonjs: "@solarwinds/xui",
                            commonjs2: "@solarwinds/xui",
                            amd: "@solarwinds/xui"
                        },
                        "@angular/core": ngExternal("core"),
                        "@angular/common": ngExternal("common"),
                        "@angular/forms": ngExternal("forms"),
                        "@angular/platform-browser": ngExternal("platformBrowser"),
                        "@angular/platform-browser-dynamic": ngExternal("platformBrowserDynamic"),
						"@angular/animations": ngExternal("animations"),
						"@angular/animations/browser": ngExternal("animations/browser"),
						"@angular/platform-browser/animations": ngExternal("platformBrowser/animations")
                    }
                ],
                meta: {
                    rawStyles: true
                }
            }
        }
    ],
    features: {
        atoms: true,
        karma: {},
        e2e: true,
        visual: false,
        perf: true,
        ngdocs: false,
        compodoc: true,
        browserSync: {
            server: {
                baseDir: "."
            },
            startPath: "/sdk/api-docs-ng2/index.html",
            port: 8282
        },
        concatSvg: {
            iconDirectory : "../images/icons",
            outputFile: "../data/icons.json",
            configuration:{
                "busy": {
                    name: "busy-cube",
                    cssAmendments:"xui-spinner xui-spinner-20"
                },
                "child-health-status": {
                    cat_namespace:"status_",
                    files:{
                        "unmanaged-child-unknown.svg":{
                            "brushType":"stroked"
                        }
                    }
                },
                "command":{
                    omitNamepaceInName:true,
                    cat_namespace:null,
                    brushType: "stroked",
                    files:{
                        "acknowledge.svg":{
                            brushType: "filled"
                        },
                        "attribute.svg":{
                            brushType: "filled"
                        },
                        "clear.svg":{
                            brushType: "filled"
                        },
                        "cut.svg":{
                            brushType: "filled"
                        },
                        "database-export.svg":{
                            brushType: "filled"
                        },
                        "drop-active.svg":{
                            brushType: "filled"
                        },
                        "drop.svg":{
                            brushType: "filled"
                        },
                        "edit.svg":{
                            brushType: "filled"
                        },
                        "execute-script.svg":{
                            brushType: "filled"
                        },
                        "execute.svg":{
                            brushType: "filled"
                        },
                        "filter.svg":{
                            brushType: "filled"
                        },
                        "help.svg":{
                            brushType: "filled"
                        },
                        "note.svg":{
                            brushType: "filled"
                        },
                        "pointer.svg":{
                            brushType: "filled"
                        },
                        "search.svg":{
                            brushType: "stroked"
                        },
                        "star-empty.svg":{
                            brushType: "filled"
                        },
                        "star-full.svg":{
                            brushType: "filled"
                        },
                        "star-half-full.svg":{
                            brushType: "filled"
                        },
                        "step-active.svg":{
                            brushType: "filled"
                        },
                        "step.svg":{
                            brushType: "filled"
                        },
                        "triangle-down.svg":{
                            brushType: "filled"
                        },
                        "triangle-left.svg":{
                            brushType: "filled"
                        },
                        "triangle-right.svg":{
                            brushType: "filled"
                        },
                        "triangle-up.svg":{
                            brushType: "filled"
                        },
                        "wizard.svg":{
                            brushType: "filled"
                        }
                    }
                },
                "health-status":{
                    cat_namespace:"status_",
                    files:{
                        "shutdown.svg" : {
                            name: "status_notrunning"
                        }
                    }
                },
                "object":{
                    omitNamepaceInName:true,
                    cat_namespace:null,
                    brushType: "stroked",
                    files:{
                        "application-monitor.svg" : {
                            brushType: "filled"
                        },
                        "application.svg" : {
                            brushType: "filled"
                        },
                        "blog.svg" : {
                            brushType: "filled"
                        },
                        "orion-sitemaster.svg" : {
                            brushType: "filled"
                        },
                        "server.svg" : {
                            brushType: "filled"
                        },
                        "virtual-cluster.svg" : {
                            brushType: "filled"
                        }
                    }
                },
                "tab": {
                    omitNamepaceInName: true,
                    cat_namespace: null,
                    brushType: "stroked",
                    files: {
                        "blog01.svg": {
                            brushType: "filled"
                        },
                        "blog02.svg": {
                            brushType: "filled"
                        },
                        "multicast-routing.svg": {
                            brushType: "filled"
                        },
                        "routing.svg": {
                            brushType: "filled"
                        },
                        "summary03.svg": {
                            brushType: "filled"
                        }
                    }
                }
            }
        }
    },
    hooks: {
        "clean:finished": ["refresh:styles-fonts"],
        "assemble:finished": ["dist:data"]
    }
};

require("@solarwinds/buildmeister").tasks(gulp, config);

// --- additional gulp tasks ---
require("./config/gulp/styles");
require("../ng1/config/gulp/dist");
