import { WebElementPromise } from "@solarwinds/uzi/webdriver";
import { browser, by, promise, ElementFinder } from "@solarwinds/uzi/protractor";

// Node typings have conflicts with webpack-env
declare var process: any;

export default class Helpers {
    static prepareBrowser(pageName?: string) {
        let url = "/demo";
        if (pageName) {
            url += "/#/" + pageName;
        }
        browser.rootEl = "app";
        browser.get(url);
        browser.clearMockModules();
    }

    public static getElementByXpath(elementXpath: string): WebElementPromise {
        return browser.driver.findElement(by.xpath(elementXpath));
    }

    public static getElementByCSS(elementCSS: string): WebElementPromise {
        return browser.driver.findElement(by.css(elementCSS));
    }

    /**
     * Explicitly waits until angular change text inside view element.
     * Helps in case where synchronization is disabled.
     */
    public static async waitForTextChanges(element: ElementFinder, oldText: string, timeout = 3000): Promise<void> {
        await browser.wait(async () => {
            const newText = await element.getText();
            return newText !== oldText;
        }, timeout);
    }

}
