import {browser, by, promise} from "@solarwinds/uzi/protractor";
import {Atom} from "@solarwinds/uzi";
import {IconAtom} from "../index.atom";

export class ButtonAtom extends Atom {
    public static CSS_CLASS = "xui-button";

    public click() {
        return super.getElement().click();
    }

    public isDisabled() {
        return super.getElement().isEnabled().then((value: boolean)=> {
            return !value;
        });
    }

    public isIconShown() {
        const icons = super.getElement().all(by.className("xui-icon"));
        return icons.count().then((count)=> {
            return count > 0;
        });
    }

    public getIcon() {
        return this.isIconShown().then((isShown)=> {
            if (isShown) {
                return new IconAtom(super.getElement().all(by.className("xui-icon")).first());
            } else {
                return undefined;
            }
        });
    }

    public mouseClickHold(ms: number) {
        browser.actions()
            .mouseMove(this.getElement().getWebElement())
            .perform();
        browser.actions().mouseDown(this.getElement().getWebElement()).perform();
        browser.sleep(ms);
        browser.actions().mouseUp().perform();
        return;
    };

    public isVisible() {
        return super.getElement().isDisplayed();
    }

    public isBusy() {
        return this.hasClass("is-busy");
    }

    public getTextColor() {
        return super.getElement().getCssValue("color");
    }

    public getBackgroundColor() {
        return super.getElement().getCssValue("background-color");
    }

    public getBorderStyle() {
        return super.getElement().getCssValue("border-color");
    }
}
