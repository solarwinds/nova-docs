import {by, element, ElementFinder, promise} from "@solarwinds/uzi/protractor";
import Helpers from "../helpers";
import {ButtonAtom, ContentAtom} from "../index.atom";
import {Atom} from "@solarwinds/uzi";

//region Test cases
describe("USERCONTROL content: ", () => {
    let atom: ContentAtom;
    let testSmallElement: ElementFinder;
    let testLargeElement: ElementFinder;
    let contentSmallElem: ElementFinder;
    let contentLargeElem: ElementFinder;

    beforeEach(() => {
        Helpers.prepareBrowser("content");

        atom = Atom.find(ContentAtom, "test-element-small");

        testSmallElement = element(by.id("test-element-small"));
        contentSmallElem = testSmallElement.element(by.className("xui-content"));

        testLargeElement = element(by.id("test-element-large"));
        contentLargeElem = testLargeElement.element(by.className("xui-content"));
    });

    it("should display passed content", () => {
        const btnAtom = Atom.find(ButtonAtom, "test-element");
        expect(btnAtom.getElement().getText()).toEqual("CLICK");
        btnAtom.click();
        expect(btnAtom.getElement().getText()).toEqual("CLICKED!");
    });

    it("should have scrollbar if its size is too small for content", () => {
        expect(atom.hasScrollbar(contentSmallElem)).toBe(true);
    });

    xit("should hide scrollbar if its size is enough space for content", () => {
        expect(atom.hasScrollbar(contentLargeElem)).toBe(false);
    });
});
//endregion
