import { by, browser, ElementArrayFinder, ElementFinder, promise } from "@solarwinds/uzi/protractor";
import { Atom } from "@solarwinds/uzi";
import { ButtonAtom, SpinnerAtom } from "../index.atom";

export class SearchAtom extends Atom {
    public static CSS_CLASS = "xui-search";

    public getValueAttr(): promise.Promise<string> {
        return super.getElement().element(by.tagName("input")).getAttribute("value");
    };

    public acceptInput (input: string) {
        return super.getElement().element(by.tagName("input")).sendKeys(input);
    };

    public isDisabled(): promise.Promise<boolean> {
        return this.getElement().element(by.css(".xui-search__input-control")).isEnabled()
                   .then((val) => { return !val; });
    };

    public isBusy(): promise.Promise<boolean> {
        return this.getElement().element(by.css(".xui-search__input.xui-search--busy")).isPresent();
    };

    public isActive(): promise.Promise<boolean> {
        return this.getElement().element(by.css(".xui-search__input.xui-search--active")).isPresent();
    };

    public getSpinner(): SpinnerAtom {
        return Atom.findIn(SpinnerAtom, this.getElement().element(by.className("xui-search__input-spinner")));
    };

    public getSearchButton(): ButtonAtom {
        return Atom.findIn(ButtonAtom, this.getElement().element(by.className("xui-search__button")));
    };

    public getCancelButton(): ButtonAtom {
        return Atom.findIn(ButtonAtom, this.getElement().element(by.className("xui-search__input-cancel")));
    };

    //please, call 'browser.driver.switchTo().defaultContent()' after each calling this method (just in case)
    public isFocused(): promise.Promise<boolean> {
        return this.getElement().element(by.tagName("input")).equals(browser.driver.switchTo().activeElement());
    };

}
