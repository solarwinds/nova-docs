import {promise} from "@solarwinds/uzi/protractor";
import {Atom} from "@solarwinds/uzi";
import {EmptyAtom} from "./empty.atom";
import Helpers from "../helpers";

describe("USERCONTROL empty", () => {

    beforeEach(() => {
        Helpers.prepareBrowser("empty");
    });

    it("should properly render default 'title', 'description', 'image' values", () => {
        const defaultEmptyState = Atom.find(EmptyAtom, "defaultEmptyState");
        const defaultTitle = "";
        const defaultDescription = "No data to show";
        const defaultImage = "no-data-to-show";

        expect(defaultEmptyState.getTitle()).toEqual(defaultTitle);
        expect(defaultEmptyState.getDescription()).toEqual(defaultDescription);
        expect(defaultEmptyState.getImage()).toEqual(defaultImage);
    });

    it("should properly switch to compact mode", () => {
        const customizedEmptyStateCompact = Atom.find(EmptyAtom, "customizedEmptyStateCompact");

        expect(customizedEmptyStateCompact.isCompactModeEnabled()).toBeTruthy();
    });

    it("should properly render custom 'description' and 'image' but no 'title' in compact mode", () => {
        const customizedEmptyStateCompact = Atom.find(EmptyAtom, "customizedEmptyStateCompact");
        const customizedDescription = "There are no active alerts. Great job.";
        const customizedImage = "no-alerts";

        expect(customizedEmptyStateCompact.getDescription()).toEqual(customizedDescription);
        expect(customizedEmptyStateCompact.getImage()).toEqual(customizedImage);
        expect(customizedEmptyStateCompact.hasTitle()).toBeFalsy();
    });

    it("should properly render custom 'title', 'description', 'image' values", () => {
        const customizedEmptyState = Atom.find(EmptyAtom, "customizedEmptyState");
        const customizedTitle = "Nothing found";
        const customizedDescription = "Try searching for something else";
        const customizedImage = "no-search-results";

        expect(customizedEmptyState.getTitle()).toEqual(customizedTitle);
        expect(customizedEmptyState.getDescription()).toEqual(customizedDescription);
        expect(customizedEmptyState.getImage()).toEqual(customizedImage);
    });

    it("should render custom template instead of default if 'template' is passed", () => {
        const customEmptyTemplate = Atom.find(EmptyAtom, "customEmptyTemplate");

        expect(customEmptyTemplate.isCustomTemplateRendered()).toBeTruthy();
        expect(customEmptyTemplate.isDefaultTemplateRendered()).toBeFalsy();
    });

    it("should properly render a custom template with its dynamic values", () => {
        const customEmptyTemplate = Atom.find(EmptyAtom, "customEmptyTemplate");
        const boundValueText = "Node134";

        expect(customEmptyTemplate.getCustomTemplateBoundValueText()).toEqual(boundValueText);
    });
});
