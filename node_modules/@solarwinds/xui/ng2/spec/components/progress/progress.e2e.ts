import { browser, by, element } from "@solarwinds/uzi/protractor";
import { Atom } from "@solarwinds/uzi";
import { ProgressAtom } from "../index.atom";
import Helpers from "../helpers";

describe("USERCONTROL progress", () => {

    let subject1: ProgressAtom;
    let subject2: ProgressAtom;

    beforeEach(() => {
        Helpers.prepareBrowser("progress");
        browser.ignoreSynchronization = true;

        subject1 = Atom.find(ProgressAtom, "progress1");
        subject2 = Atom.find(ProgressAtom, "progress2");

        const startBtn = element(by.id("xui-demo-progress-button"));
        browser.wait(() => startBtn.isDisplayed(), 3000);
        startBtn.click();
    });

    it("bar should have value greater than 0", async () => {
        expect(await subject1.getWidth()).toBeGreaterThan(0);
        subject1.cancelProgress();
    });

    it("should show cancel button when allow-cancel is true and hide when false", () => {
        expect(subject1.canCancel()).toBe(true);
        expect(subject2.canCancel()).toBe(false);
    });

    it("should handle onCancel() callback", () => {
        subject1.cancelProgress();
        expect(element(by.className("cancel-clicked")).isPresent()).toBe(true);
    });

    it("thin mode should be thin", () => {
        expect(subject1.getActualHeight()).toBeGreaterThan(45);
        expect(subject2.getActualHeight()).toBeLessThan(35);
    });

});
