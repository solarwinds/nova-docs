import { by, element, promise } from "@solarwinds/uzi/protractor";
import { ListViewAtom } from "../index.atom";
import Helpers from "../helpers";
import { Atom } from "@solarwinds/uzi";

describe("USERCONTROL listview", () => {
    let multiSelectListView: ListViewAtom;
    let singleSelectListView: ListViewAtom;

    beforeEach(() => {
        Helpers.prepareBrowser("listview");
        multiSelectListView = Atom.find(ListViewAtom, "xui-demo-multi-listview");
        singleSelectListView = Atom.find(ListViewAtom, "xui-demo-single-listview");
    });

    it("should contain 6 items", () => {
        expect(multiSelectListView.itemCount()).toEqual(6);
    });

    it("should display given item in proper place", () => {
        expect(multiSelectListView.getItem(0).getText()).toEqual("blue");
        expect(multiSelectListView.getItem(1).getText()).toEqual("green");
        expect(multiSelectListView.getItem(2).getText()).toEqual("yellow");
        expect(multiSelectListView.getItem(5).getText()).toEqual("black");
    });

    it("should apply the specified padding", () => {
        expect(multiSelectListView.isNarrow()).toEqual(true);
        expect(singleSelectListView.isRegular()).toEqual(true);
    });

    it("should honor 'striped' attribute", () => {
        expect(multiSelectListView.isStriped()).toEqual(true);
    });

    it("should have the correct header", () => {
        expect(multiSelectListView.getHeaderText()).toBe("Listview header from template");
    });

    it("should apply the correct template", () => {
        const blueColorItem = multiSelectListView.getItem(0);
        expect(blueColorItem.getText()).toEqual("blue");
    });

    it("should allow multi selection of items", async () => {
        await multiSelectListView.selectCheckbox(2);
        await multiSelectListView.selectCheckbox(5);
        expect(await element(by.id("xui-demo-multiselect-values")).getText()).toBe("[]");
        await multiSelectListView.selectCheckbox(0);
        expect(await element(by.id("xui-demo-multiselect-values")).getText()).toBe('[ { "color": "blue" } ]');
    });

    it("should not allow selection change for disabled items", () => {
        const multiSelectListViewDisabledItems = Atom.find(ListViewAtom, "xui-demo-multi-listview-disabled-items");
        expect(multiSelectListViewDisabledItems.getCheckbox(0).isDisabled()).toBe(true);
        expect(multiSelectListViewDisabledItems.getCheckbox(4).isDisabled()).toBe(true);
    });

    it("should allow single selection of items", () => {
        expect(element(by.id("xui-demo-singleselect-value")).getText()).toContain("Declan McGregor");
        singleSelectListView.selectRow(0);
        expect(element(by.id("xui-demo-singleselect-value")).getText()).toContain("Jo Smith");
        singleSelectListView.selectRow(4);
        expect(element(by.id("xui-demo-singleselect-value")).getText()).toContain("Catriona Kildare");
    });
});
