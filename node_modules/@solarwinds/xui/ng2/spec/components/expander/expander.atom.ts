import {ISize} from "@solarwinds/uzi/webdriver";
import {by, promise} from "@solarwinds/uzi/protractor";
import {Atom} from "@solarwinds/uzi";

export class ExpanderAtom extends Atom {
    static CSS_CLASS = "xui-expander";

    public isExpanded(): promise.Promise<boolean> {
        return super.getElement()
            .element(by.css(".xui-expander__body"))
            .getSize()
            .then((size: ISize) => {
                return size.height > 0;
            });
    }

    public isCollapsed(): promise.Promise<boolean> {
        return super.getElement()
            .element(by.css(".xui-expander__body"))
            .getSize()
            .then((size: ISize) => {
                return size.height === 0;
            });
    }

    public isContentDisplayed(cssSelectorSet: string | string[]): promise.Promise<boolean> {
        if (!Array.isArray(cssSelectorSet)) {
            cssSelectorSet = [cssSelectorSet];
        }

        const verificators = cssSelectorSet.map((selector: string) => {
            return super.getElement().element(by.css(selector)).isDisplayed();
        });

        return promise.all(verificators)
            .then((result) => {
                return result.every((resultItem: boolean) => resultItem);
            });
    }

    public isContentAttachedToDOM(cssSelectorSet: string | string[]): promise.Promise<boolean> {
        if (!Array.isArray(cssSelectorSet)) {
            cssSelectorSet = [cssSelectorSet];
        }

        const verificators = cssSelectorSet.map((selector: string) => {
            return super.getElement().element(by.css(selector)).isPresent();
        });

        return promise.all(verificators)
            .then((result) => {
                return result.every((resultItem: boolean) => resultItem);
            });
    }

    public toggle(): promise.Promise<void> {
        return super.getElement().element(by.css(".xui-expander__header")).click();
    }

    public getHeadingText(): promise.Promise<string> {
        return super.getElement().element(by.css(".xui-expander__header-content")).getText();
    }
}
