import { Atom } from "@solarwinds/uzi";
import { by, ElementFinder, promise, Key } from "@solarwinds/uzi/protractor";
import { ButtonAtom } from "../index.atom";

export class TextboxAtom extends Atom {
    public static CSS_CLASS = "xui-textbox";

    public get input(): ElementFinder {
        return super.getElement().element(by.className("form-control"));
    }

    public get value(): promise.Promise<string> {
        return this.input.getAttribute("value");
    }

    public acceptText(text: string): promise.Promise<void> {
        return this.input.sendKeys(text, Key.ENTER);
    }

    public clearText(): promise.Promise<void> {
        return this.input.clear();
    }

    public deleteTextManually(): promise.Promise<void> {
        return this.input.sendKeys(Key.chord(Key.CONTROL, "a")) && 
               this.input.sendKeys(Key.DELETE);
    };

    public async hasAttribute(attrName: string): Promise<boolean> {
        return (await this.input.getAttribute(attrName)) !== null;
    }

    public required(): Promise<boolean> {
        return this.hasAttribute("required");
    }

    public disabled(): Promise<boolean> {
        return this.hasAttribute("disabled");
    }

    public isReadonly(): Promise<boolean> {
        return this.hasAttribute("readonly");
    }

    public getNumericUpButton(): ButtonAtom {
        let buttonSpan = super.getElement().element(by.className("xui-textbox__up-button"));
        return Atom.findIn(ButtonAtom, buttonSpan);
    }

    public getNumericDownButton(): ButtonAtom {
        let buttonSpan = super.getElement().element(by.className("xui-textbox__down-button"));
        return Atom.findIn(ButtonAtom, buttonSpan);
    }
}
