import { Component } from "@angular/core";

import { ITreeviewOptions, 
         ITreeviewState } from "../../../../../src/components/treeview/treeview.service";

@Component({
    selector: "xui-treeview-example",
    template: require<string>("./treeview.example.component.html")
})
export class TreeviewExampleComponent {
    public model: any = [];
    public options: ITreeviewOptions = {};
    public initialState: ITreeviewState[] = [
        { id: "id_0", path: [], expanded: true },
        { id: "id_0", path: ["id_0"], expanded: true },
        { id: "id_0", path: ["id_0", "id_0"], expanded: true },
        { id: "id_1", path: ["id_0", "id_0", "id_0"], focused: true },
        { id: "id_2", path: ["id_0"], expanded: true },
        { id: "id_1", path: ["id_0", "id_2"], expanded: true },
    ];

    constructor() {
        this.generateTree(this.model, 3, 4);
    }

    private generateTree(children: any, count: number, depth: number) {
        if (depth <= 0) {
            return;
        }
        for (let i = 0; i < count; i++) {
            let id = "id_" + i;
            let node: any = {label: `Node ${i+1} ${depth}`, id: id};

            if (depth > 1) {
                node.children = [];
            }

            children.push(node);
            this.generateTree(node.children, count, depth - 1);
        }
    }
}
