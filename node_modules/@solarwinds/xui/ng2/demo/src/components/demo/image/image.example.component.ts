import {
    Component,
    Inject,
    ViewEncapsulation,
    ChangeDetectionStrategy
} from "@angular/core";

// TODO Add as dependency from XuiModule
import * as xui from "xui";
import * as _ from "lodash";
import { IImagesPresetItem, ImageFloat, ImageMargin } from "../../../../../src/constants";

@Component({
    selector: "xui-image-example",
    template: require<string>("./image.example.component.html"),
    styles: [require<string>("./image.example.component.less")],
    encapsulation: ViewEncapsulation.None,
    changeDetection: ChangeDetectionStrategy.OnPush
})
export class ImageExampleComponent {
    public floats: Array<ImageFloat> = ["left", "right"];
    public margins: Array<ImageMargin> = ["centered", "small", "large"];
    public measurements = ["px", "%"];
    public activeImage = _.first(this.images).name;
    public imageSizeValue = 300;
    public imageSizeMeasurement = _.first(this.measurements);
    public imageSize = this.imageSizeValue + this.imageSizeMeasurement;
    public selectedMargin = _.first(this.margins);
    public selectedFloat = _.first(this.floats);
    public selectFromPreset = true;

    constructor(@Inject(xui.ImagesPresetToken) private images: Array<IImagesPresetItem>) {
    }

    public change(prop: string, value: string): void {
        _.set(this, prop, value);
        if (_.isEqual(prop, "selectFromPreset") && this.selectFromPreset) {
            this.activeImage = _.first(this.images).name;
        }
    }
}
